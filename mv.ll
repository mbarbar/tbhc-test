; ModuleID = 'mv.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.timespec = type { i64, i64 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.fs_res = type { i64, i32, i8 }
%struct.cp_options = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, %struct.hash_table*, %struct.hash_table* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.rm_options = type { i8, i32, i8, i8, i8, %struct.timespec*, i8, i8, i8, i8 }
%struct.FTS = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent**, i64, i8*, i32, i32, i64, i64, i32 (%struct._ftsent**, %struct._ftsent**)*, i32, %struct.hash_table*, %union.anon, %struct.I_ring }
%struct._ftsent = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent*, %struct.__dirstream*, i64, i8*, i8*, i8*, i32, i32, i64, %struct.FTS*, i64, i64, i64, i16, i16, i16, [1 x %struct.stat], [0 x i8] }
%struct.__dirstream = type opaque
%union.anon = type { %struct.hash_table* }
%struct.I_ring = type { [4 x i32], i32, i32, i32, i8 }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.dir_list = type { %struct.dir_list*, i64, i64 }
%struct.error_context = type { void (%struct.error_context*, i8*, ...)*, i8* (%struct.error_context*, i8*)*, void (%struct.error_context*, i8*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.extent_scan = type { i32, i64, i32, i64, i8, i8, %struct.extent_info* }
%struct.extent_info = type { i64, i64, i32 }
%struct.Src_to_dest = type { i64, i64, i8* }
%union.anon.20 = type { %struct.fiemap, [4064 x i8] }
%struct.fiemap = type { i64, i64, i32, i32, i32, i32, [0 x %struct.fiemap_extent] }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%struct.link_arg = type { i32, i8*, i32, i32 }
%struct.symlink_arg = type { i8*, i32 }
%struct.F_triple = type { i8*, i64, i64 }
%struct.permission_context = type { i32, %struct.__acl_ext*, %struct.__acl_ext*, i8 }
%struct.__acl_ext = type opaque
%struct.__mbstate_t = type { i32, %union.anon.57 }
%union.anon.57 = type { i32 }
%struct.direntry_t = type { i8*, i64 }
%struct.randint_source = type { %struct.randread_source*, i64, i64 }
%struct.randread_source = type { %struct._IO_FILE*, void (i8*)*, i8*, %union.anon.147 }
%union.anon.147 = type { %struct.isaac }
%struct.isaac = type { i64, %struct.isaac_state, %union.anon.0 }
%struct.isaac_state = type { [256 x i64], i64, i64, i64 }
%union.anon.0 = type { [256 x i64] }
%struct.cycle_check_state = type { %struct.timespec, i64, i32 }
%struct.Active_dir = type { i64, i64, %struct._ftsent* }
%struct.statfs = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, i64, [4 x i64] }
%struct.__fsid_t = type { [2 x i32] }
%struct.__acl_entry_ext = type opaque
%struct.timezone = type { i32, i32 }

@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [127 x i8] c"Usage: %s [OPTION]... [-T] SOURCE DEST\0A  or:  %s [OPTION]... SOURCE... DIRECTORY\0A  or:  %s [OPTION]... -t DIRECTORY SOURCE...\0A\00", align 1
@.str.2 = private unnamed_addr constant [56 x i8] c"Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str.3 = private unnamed_addr constant [418 x i8] c"      --backup[=CONTROL]       make a backup of each existing destination file\0A  -b                           like --backup but does not accept an argument\0A  -f, --force                  do not prompt before overwriting\0A  -i, --interactive            prompt before overwrite\0A  -n, --no-clobber             do not overwrite an existing file\0AIf you specify more than one of -i, -f, -n, only the final one takes effect.\0A\00", align 1
@.str.4 = private unnamed_addr constant [184 x i8] c"      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\0A                                 argument\0A  -S, --suffix=SUFFIX          override the usual backup suffix\0A\00", align 1
@.str.5 = private unnamed_addr constant [527 x i8] c"  -t, --target-directory=DIRECTORY  move all SOURCE arguments into DIRECTORY\0A  -T, --no-target-directory    treat DEST as a normal file\0A  -u, --update                 move only when the SOURCE file is newer\0A                                 than the destination file or when the\0A                                 destination file is missing\0A  -v, --verbose                explain what is being done\0A  -Z, --context                set SELinux security context of destination\0A                                 file to default type\0A\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.7 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"mv\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.39 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.40 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.42 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.44 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.45 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.29 = private unnamed_addr constant [221 x i8] c"\0AThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\0AThe version control method may be selected via the --backup option or through\0Athe VERSION_CONTROL environment variable.  Here are the values:\0A\0A\00", align 1
@.str.30 = private unnamed_addr constant [222 x i8] c"  none, off       never make backups (even if --backup is given)\0A  numbered, t     make numbered backups\0A  existing, nil   numbered if numbered backups exist, simple otherwise\0A  simple, never   always make simple backups\0A\00", align 1
@.str.28 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"bfint:uvS:TZ\00", align 1
@long_options = internal constant [14 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i32 2, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 105 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.51, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !63, !ctir !121
@optarg = external dso_local global i8*, align 8, !ctir !9
@remove_trailing_slashes = internal global i8 0, align 1, !dbg !237, !ctir !120
@.str.13 = private unnamed_addr constant [38 x i8] c"multiple target directories specified\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"failed to access %s\00", align 1
@.str.15 = private unnamed_addr constant [29 x i8] c"target %s is not a directory\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"Mike Parker\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"Jim Meyering\00", align 1
@optind = external dso_local global i32, align 4, !ctir !7
@.str.20 = private unnamed_addr constant [21 x i8] c"missing file operand\00", align 1
@.str.21 = private unnamed_addr constant [42 x i8] c"missing destination file operand after %s\00", align 1
@.str.22 = private unnamed_addr constant [70 x i8] c"cannot combine --target-directory (-t) and --no-target-directory (-T)\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"2 <= n_files\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"src/mv.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@.str.26 = private unnamed_addr constant [57 x i8] c"options --backup and --no-clobber are mutually exclusive\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"backup type\00", align 1
@.str.59 = private unnamed_addr constant [22 x i8] c"VALID_STATUS (status)\00", align 1
@__PRETTY_FUNCTION__.do_move = private unnamed_addr constant [69 x i8] c"_Bool do_move(const char *, const char *, const struct cp_options *)\00", align 1
@rm_option_init.dev_ino_buf = internal global %struct.timespec zeroinitializer, align 8, !dbg !239
@.str.60 = private unnamed_addr constant [31 x i8] c"failed to get attributes of %s\00", align 1
@.str.61 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"interactive\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c"no-clobber\00", align 1
@.str.51 = private unnamed_addr constant [20 x i8] c"no-target-directory\00", align 1
@.str.52 = private unnamed_addr constant [23 x i8] c"strip-trailing-slashes\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str.54 = private unnamed_addr constant [17 x i8] c"target-directory\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"update\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.58 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"fts_read failed\00", align 1
@.str.1.63 = private unnamed_addr constant [17 x i8] c"VALID_STATUS (s)\00", align 1
@.str.2.64 = private unnamed_addr constant [13 x i8] c"src/remove.c\00", align 1
@__PRETTY_FUNCTION__.rm = private unnamed_addr constant [60 x i8] c"enum RM_status rm(char *const *, const struct rm_options *)\00", align 1
@.str.3.65 = private unnamed_addr constant [17 x i8] c"fts_close failed\00", align 1
@.str.4.66 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.5.67 = private unnamed_addr constant [51 x i8] c"refusing to remove %s or %s directory: skipping %s\00", align 1
@.str.6.68 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.7.69 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.8.70 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.9.71 = private unnamed_addr constant [45 x i8] c"it is dangerous to operate recursively on %s\00", align 1
@.str.10.72 = private unnamed_addr constant [58 x i8] c"it is dangerous to operate recursively on %s (same as %s)\00", align 1
@.str.11.73 = private unnamed_addr constant [49 x i8] c"use --no-preserve-root to override this failsafe\00", align 1
@.str.12.74 = private unnamed_addr constant [31 x i8] c"failed to stat %s: skipping %s\00", align 1
@.str.13.75 = private unnamed_addr constant [46 x i8] c"skipping %s, since it's on a different device\00", align 1
@.str.14.76 = private unnamed_addr constant [37 x i8] c"and --preserve-root=all is in effect\00", align 1
@.str.15.77 = private unnamed_addr constant [186 x i8] c"WARNING: Circular directory structure.\0AThis almost certainly means that you have a corrupted file system.\0ANOTIFY YOUR SYSTEM MANAGER.\0AThe following directory is part of the cycle:\0A  %s\0A\00", align 1
@.str.16.78 = private unnamed_addr constant [21 x i8] c"traversal failed: %s\00", align 1
@.str.17.79 = private unnamed_addr constant [56 x i8] c"unexpected failure: fts_info=%d: %s\0Aplease report to %s\00", align 1
@.str.18.80 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.23.81 = private unnamed_addr constant [22 x i8] c"removed directory %s\0A\00", align 1
@.str.24.82 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.19.83 = private unnamed_addr constant [48 x i8] c"%s: descend into write-protected directory %s? \00", align 1
@.str.20.84 = private unnamed_addr constant [32 x i8] c"%s: descend into directory %s? \00", align 1
@.str.21.85 = private unnamed_addr constant [35 x i8] c"%s: remove write-protected %s %s? \00", align 1
@.str.22.86 = private unnamed_addr constant [19 x i8] c"%s: remove %s %s? \00", align 1
@.str.87 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@.str.1.88 = private unnamed_addr constant [37 x i8] c"failed to get security context of %s\00", align 1
@.str.2.89 = private unnamed_addr constant [51 x i8] c"failed to set default file creation context for %s\00", align 1
@.str.3.90 = private unnamed_addr constant [41 x i8] c"failed to set the security context of %s\00", align 1
@.str.4.95 = private unnamed_addr constant [24 x i8] c"valid_options (options)\00", align 1
@.str.5.96 = private unnamed_addr constant [11 x i8] c"src/copy.c\00", align 1
@__PRETTY_FUNCTION__.copy = private unnamed_addr constant [91 x i8] c"_Bool copy(const char *, const char *, _Bool, const struct cp_options *, _Bool *, _Bool *)\00", align 1
@top_level_src_name = internal global i8* null, align 8, !dbg !242, !ctir !115
@top_level_dst_name = internal global i8* null, align 8, !dbg !514, !ctir !115
@.str.12.97 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.13.98 = private unnamed_addr constant [40 x i8] c"-r not specified; omitting directory %s\00", align 1
@.str.14.99 = private unnamed_addr constant [22 x i8] c"omitting directory %s\00", align 1
@.str.15.100 = private unnamed_addr constant [49 x i8] c"warning: source file %s specified more than once\00", align 1
@.str.16.101 = private unnamed_addr constant [28 x i8] c"%s and %s are the same file\00", align 1
@.str.17.102 = private unnamed_addr constant [52 x i8] c"cannot overwrite non-directory %s with directory %s\00", align 1
@.str.18.103 = private unnamed_addr constant [43 x i8] c"will not overwrite just-created %s with %s\00", align 1
@.str.19.104 = private unnamed_addr constant [49 x i8] c"cannot overwrite directory %s with non-directory\00", align 1
@.str.20.105 = private unnamed_addr constant [51 x i8] c"cannot move directory onto non-directory: %s -> %s\00", align 1
@.str.21.107 = private unnamed_addr constant [50 x i8] c"backing up %s might destroy source;  %s not moved\00", align 1
@.str.22.108 = private unnamed_addr constant [51 x i8] c"backing up %s might destroy source;  %s not copied\00", align 1
@.str.23.109 = private unnamed_addr constant [17 x i8] c"cannot backup %s\00", align 1
@.str.24.110 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.25.111 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.26.112 = private unnamed_addr constant [49 x i8] c"will not copy %s through just-created symlink %s\00", align 1
@.str.27.113 = private unnamed_addr constant [45 x i8] c"cannot copy a directory, %s, into itself, %s\00", align 1
@.str.28.114 = private unnamed_addr constant [54 x i8] c"warning: source directory %s specified more than once\00", align 1
@.str.29.115 = private unnamed_addr constant [45 x i8] c"will not create hard link %s to directory %s\00", align 1
@.str.30.116 = private unnamed_addr constant [9 x i8] c"renamed \00", align 1
@.str.31.117 = private unnamed_addr constant [47 x i8] c"cannot move %s to a subdirectory of itself, %s\00", align 1
@.str.32.118 = private unnamed_addr constant [21 x i8] c"cannot move %s to %s\00", align 1
@.str.33.119 = private unnamed_addr constant [60 x i8] c"inter-device move failed: %s to %s; unable to remove target\00", align 1
@.str.34.120 = private unnamed_addr constant [8 x i8] c"copied \00", align 1
@.str.35.121 = private unnamed_addr constant [36 x i8] c"cannot copy cyclic symbolic link %s\00", align 1
@.str.36.122 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.37.123 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str.38.124 = private unnamed_addr constant [22 x i8] c"created directory %s\0A\00", align 1
@.str.39.125 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.40.126 = private unnamed_addr constant [63 x i8] c"%s: can make relative symbolic links only in current directory\00", align 1
@.str.41.127 = private unnamed_addr constant [37 x i8] c"cannot create symbolic link %s to %s\00", align 1
@.str.42.128 = private unnamed_addr constant [22 x i8] c"cannot create fifo %s\00", align 1
@.str.43.129 = private unnamed_addr constant [30 x i8] c"cannot create special file %s\00", align 1
@.str.44.130 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@.str.45.131 = private unnamed_addr constant [31 x i8] c"cannot create symbolic link %s\00", align 1
@.str.46.132 = private unnamed_addr constant [36 x i8] c"failed to preserve ownership for %s\00", align 1
@.str.47.133 = private unnamed_addr constant [25 x i8] c"%s has unknown file type\00", align 1
@.str.48.134 = private unnamed_addr constant [24 x i8] c"preserving times for %s\00", align 1
@.str.49.135 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.50.136 = private unnamed_addr constant [20 x i8] c"cannot un-backup %s\00", align 1
@.str.51.137 = private unnamed_addr constant [21 x i8] c"%s -> %s (unbackup)\0A\00", align 1
@cached_umask.mask = internal global i32 -1, align 4, !dbg !511
@.str.77 = private unnamed_addr constant [17 x i8] c"security.selinux\00", align 1
@.str.76 = private unnamed_addr constant [28 x i8] c"clearing permissions for %s\00", align 1
@.str.75 = private unnamed_addr constant [52 x i8] c"failed to restore the default file creation context\00", align 1
@.str.60.138 = private unnamed_addr constant [27 x i8] c"cannot open %s for reading\00", align 1
@.str.61.139 = private unnamed_addr constant [16 x i8] c"cannot fstat %s\00", align 1
@.str.62.140 = private unnamed_addr constant [56 x i8] c"skipping file %s, as it was replaced while being copied\00", align 1
@.str.63 = private unnamed_addr constant [40 x i8] c"not writing through dangling symlink %s\00", align 1
@.str.64 = private unnamed_addr constant [30 x i8] c"cannot create regular file %s\00", align 1
@.str.65 = private unnamed_addr constant [27 x i8] c"failed to clone %s from %s\00", align 1
@.str.66 = private unnamed_addr constant [20 x i8] c"failed to extend %s\00", align 1
@.str.67 = private unnamed_addr constant [19 x i8] c"failed to close %s\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"error reading %s\00", align 1
@.str.73 = private unnamed_addr constant [17 x i8] c"error writing %s\00", align 1
@.str.74 = private unnamed_addr constant [20 x i8] c"overflow reading %s\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"cannot lseek %s\00", align 1
@.str.71 = private unnamed_addr constant [22 x i8] c"error deallocating %s\00", align 1
@.str.68 = private unnamed_addr constant [31 x i8] c"%s: failed to get extents info\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c"%s: write failed\00", align 1
@write_zeros.zeros = internal global i8* null, align 8, !dbg !516
@write_zeros.nz = internal global i64 131072, align 8, !dbg !519
@write_zeros.fallback = internal global [1024 x i8] zeroinitializer, align 16, !dbg !521
@.str.59.141 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.57.142 = private unnamed_addr constant [9 x i8] c"%s -> %s\00", align 1
@.str.58.143 = private unnamed_addr constant [14 x i8] c" (backup: %s)\00", align 1
@.str.54.144 = private unnamed_addr constant [45 x i8] c"%s: replace %s, overriding mode %04lo (%s)? \00", align 1
@.str.55.145 = private unnamed_addr constant [49 x i8] c"%s: unwritable %s (mode %04lo, %s); try anyway? \00", align 1
@.str.56.146 = private unnamed_addr constant [19 x i8] c"%s: overwrite %s? \00", align 1
@.str.53.147 = private unnamed_addr constant [13 x i8] c"x->move_mode\00", align 1
@__PRETTY_FUNCTION__.abandon_move = private unnamed_addr constant [81 x i8] c"_Bool abandon_move(const struct cp_options *, const char *, const struct stat *)\00", align 1
@.str.52.148 = private unnamed_addr constant [33 x i8] c"cannot create hard link %s to %s\00", align 1
@.str.6.149 = private unnamed_addr constant [11 x i8] c"co != NULL\00", align 1
@__PRETTY_FUNCTION__.valid_options = private unnamed_addr constant [47 x i8] c"_Bool valid_options(const struct cp_options *)\00", align 1
@.str.7.150 = private unnamed_addr constant [36 x i8] c"VALID_BACKUP_TYPE (co->backup_type)\00", align 1
@.str.8.151 = private unnamed_addr constant [36 x i8] c"VALID_SPARSE_MODE (co->sparse_mode)\00", align 1
@.str.9.152 = private unnamed_addr constant [38 x i8] c"VALID_REFLINK_MODE (co->reflink_mode)\00", align 1
@.str.10.153 = private unnamed_addr constant [38 x i8] c"!(co->hard_link && co->symbolic_link)\00", align 1
@.str.11.154 = private unnamed_addr constant [73 x i8] c"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\00", align 1
@src_to_dest = internal global %struct.hash_table* null, align 8, !dbg !526, !ctir !195
@.str.169 = private unnamed_addr constant [55 x i8] c"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\00", align 1
@.str.1.170 = private unnamed_addr constant [18 x i8] c"src/extent-scan.c\00", align 1
@__PRETTY_FUNCTION__.extent_scan_read = private unnamed_addr constant [45 x i8] c"_Bool extent_scan_read(struct extent_scan *)\00", align 1
@.str.2.171 = private unnamed_addr constant [64 x i8] c"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\00", align 1
@simple_pattern = internal constant [9 x i8] c"CuXXXXXX\00", align 1, !dbg !552, !ctir !567
@Version = dso_local global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i32 0, i32 0), align 8, !dbg !585, !ctir !115
@.str.178 = private unnamed_addr constant [5 x i8] c"8.31\00", align 1
@.str.181 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.182 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.185 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@simple_backup_suffix = dso_local global i8* null, align 8, !dbg !591, !ctir !115
@.str.192 = private unnamed_addr constant [21 x i8] c"SIMPLE_BACKUP_SUFFIX\00", align 1
@.str.1.193 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.2.194 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.3.195 = private unnamed_addr constant [5 x i8] c".~1~\00", align 1
@backup_args = internal constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.198, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.199, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.200, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.201, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.202, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.203, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.204, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.205, i32 0, i32 0), i8* null], align 16, !dbg !628, !ctir !642
@backup_types = internal constant [8 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3], align 16, !dbg !648, !ctir !638
@.str.2.198 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.3.199 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.4.200 = private unnamed_addr constant [7 x i8] c"simple\00", align 1
@.str.5.201 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.6.202 = private unnamed_addr constant [9 x i8] c"existing\00", align 1
@.str.7.203 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.8.204 = private unnamed_addr constant [9 x i8] c"numbered\00", align 1
@.str.9.205 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.1.208 = private unnamed_addr constant [16 x i8] c"VERSION_CONTROL\00", align 1
@.str.209 = private unnamed_addr constant [17 x i8] c"$VERSION_CONTROL\00", align 1
@file_name = internal global i8* null, align 8, !dbg !651, !ctir !115
@stdin = external dso_local global %struct._IO_FILE*, align 8, !ctir !656
@.str.214 = private unnamed_addr constant [19 x i8] c"error closing file\00", align 1
@.str.1.215 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.216 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@file_name.217 = internal global i8* null, align 8, !dbg !693, !ctir !115
@ignore_EPIPE = internal global i8 0, align 1, !dbg !735, !ctir !120
@.str.220 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.221 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.222 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !738, !ctir !690
@.str.245 = private unnamed_addr constant [19 x i8] c"regular empty file\00", align 1
@.str.1.246 = private unnamed_addr constant [13 x i8] c"regular file\00", align 1
@.str.2.247 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.3.248 = private unnamed_addr constant [14 x i8] c"symbolic link\00", align 1
@.str.4.249 = private unnamed_addr constant [14 x i8] c"message queue\00", align 1
@.str.5.250 = private unnamed_addr constant [10 x i8] c"semaphore\00", align 1
@.str.6.251 = private unnamed_addr constant [21 x i8] c"shared memory object\00", align 1
@.str.7.252 = private unnamed_addr constant [19 x i8] c"block special file\00", align 1
@.str.8.253 = private unnamed_addr constant [23 x i8] c"character special file\00", align 1
@.str.9.254 = private unnamed_addr constant [5 x i8] c"fifo\00", align 1
@.str.10.255 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@.str.11.256 = private unnamed_addr constant [11 x i8] c"weird file\00", align 1
@.str.265 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.266 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.267 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.268 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !745, !ctir !772
@program_name = dso_local global i8* null, align 8, !dbg !880, !ctir !115
@.str.295 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.296 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.297 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !9
@program_invocation_name = external dso_local global i8*, align 8, !ctir !9
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.303, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.305, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.306, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.307, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.308, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.309, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.310, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.311, i32 0, i32 0), i8* null], align 16, !dbg !921, !ctir !941
@.str.302 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.303 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.304 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.305 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.306 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.307 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.308 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.309 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.310 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.311 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !1049, !ctir !944
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !1051, !ctir !951
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !1053, !ctir !951
@.str.10.312 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.313 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.314 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.315 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.316 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.317 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.318 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.319 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.320 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !1057, !ctir !979
@nslots = internal global i32 1, align 4, !dbg !1059, !ctir !7
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !1055, !ctir !559
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !1061, !ctir !980
@.str.335 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.340 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@comparison_function_table = internal constant [3 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* null, i32 (i8*, i8*)* @direntry_cmp_name, i32 (i8*, i8*)* @direntry_cmp_inode], align 16, !dbg !1063, !ctir !1090
@letters = internal constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00", align 16, !dbg !1106, !ctir !1117
@.str.2.357 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.358 = private unnamed_addr constant [35 x i8] c"! \22invalid KIND in __gen_tempname\22\00", align 1
@.str.1.359 = private unnamed_addr constant [15 x i8] c"lib/tempname.c\00", align 1
@__PRETTY_FUNCTION__.gen_tempname_len = private unnamed_addr constant [52 x i8] c"int gen_tempname_len(char *, int, int, int, size_t)\00", align 1
@utimecmpat.ht = internal global %struct.hash_table* null, align 8, !dbg !1130
@utimecmpat.new_dst_res = internal global %struct.fs_res* null, align 8, !dbg !1176
@utimensat_works_really = internal global i32 0, align 4, !dbg !1178, !ctir !7
@lutimensat_works_really = internal global i32 0, align 4, !dbg !1228, !ctir !7
@.str.372 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.373 = private unnamed_addr constant [32 x i8] c"unable to display error message\00", align 1
@.str.374 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.375 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.376 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.377 = private unnamed_addr constant [204 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0A\00", align 1
@.str.4.378 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.5.379 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.6.380 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.7.381 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.8.382 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.9.383 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.10.384 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.11.385 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.12.386 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.13.387 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.14.390 = private unnamed_addr constant [21 x i8] c"\0AReport bugs to: %s\0A\00", align 1
@.str.15.391 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.16.392 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.17.393 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.18.394 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.19.395 = private unnamed_addr constant [65 x i8] c"General help using GNU software: <https://www.gnu.org/gethelp/>\0A\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !1231, !ctir !1236
@can_write_any_file.initialized = internal global i8 0, align 1, !dbg !1241
@can_write_any_file.can_write = internal global i8 0, align 1, !dbg !1251
@.str.1.416 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.417 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.420 = private unnamed_addr constant [16 x i8] c"errno != EINVAL\00", align 1
@.str.1.421 = private unnamed_addr constant [11 x i8] c"lib/xfts.c\00", align 1
@__PRETTY_FUNCTION__.xfts_open = private unnamed_addr constant [78 x i8] c"FTS *xfts_open(char *const *, int, int (*)(const FTSENT **, const FTSENT **))\00", align 1
@.str.434 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.435 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.440 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !1253, !ctir !644
@.str.453 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.454 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.455 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.456 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.457 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.470 = private unnamed_addr constant [24 x i8] c"state->magic == 9827862\00", align 1
@.str.1.471 = private unnamed_addr constant [18 x i8] c"lib/cycle-check.c\00", align 1
@__PRETTY_FUNCTION__.cycle_check = private unnamed_addr constant [67 x i8] c"_Bool cycle_check(struct cycle_check_state *, const struct stat *)\00", align 1
@.str.478 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.479 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.492 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.493 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.504 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3.505 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1.506 = private unnamed_addr constant [16 x i8] c"%s: end of file\00", align 1
@.str.2.507 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec = internal global i32 0, align 4, !dbg !1305

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #0 !dbg !2981 !ctir !113 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2986, metadata !DIExpression()), !dbg !2987
  %0 = load i32, i32* %status.addr, align 4, !dbg !2988, !tbaa !2982
  %cmp = icmp ne i32 %0, 0, !dbg !2990
  br i1 %cmp, label %if.then, label %if.else, !dbg !2991

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !2992

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2993, !tbaa !2995
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !2993
  %2 = load i8*, i8** @program_name, align 8, !dbg !2993, !tbaa !2995
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !2993
  br label %do.end, !dbg !2993

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !2993

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !2997
  %3 = load i8*, i8** @program_name, align 8, !dbg !2999, !tbaa !2995
  %4 = load i8*, i8** @program_name, align 8, !dbg !3000, !tbaa !2995
  %5 = load i8*, i8** @program_name, align 8, !dbg !3001, !tbaa !2995
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3, i8* %4, i8* %5), !dbg !3002
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !3003
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3003, !tbaa !2995
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %6), !dbg !3003
  call void @emit_mandatory_arg_note(), !dbg !3004
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([418 x i8], [418 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !3005
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3005, !tbaa !2995
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %7), !dbg !3005
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([184 x i8], [184 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !3006
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3006, !tbaa !2995
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %8), !dbg !3006
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([527 x i8], [527 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !3007
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3007, !tbaa !2995
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %9), !dbg !3007
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !3008
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3008, !tbaa !2995
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %10), !dbg !3008
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !3009
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3009, !tbaa !2995
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %11), !dbg !3009
  call void @emit_backup_suffix_note(), !dbg !3010
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)), !dbg !3011
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %12 = load i32, i32* %status.addr, align 4, !dbg !3012, !tbaa !2982
  call void @exit(i32 %12) #13, !dbg !3013
  unreachable, !dbg !3013
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #4 !dbg !3014 !ctir !134 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.28, i64 0, i64 0)) #10, !dbg !3015
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3015, !tbaa !2995
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !3015
  ret void, !dbg !3016
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_backup_suffix_note() #4 !dbg !3017 !ctir !134 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([221 x i8], [221 x i8]* @.str.29, i64 0, i64 0)) #10, !dbg !3018
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3018, !tbaa !2995
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !3018
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([222 x i8], [222 x i8]* @.str.30, i64 0, i64 0)) #10, !dbg !3019
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3019, !tbaa !2995
  %call3 = call i32 @fputs_unlocked(i8* %call2, %struct._IO_FILE* %1), !dbg !3019
  ret void, !dbg !3020
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #4 !dbg !142 !ctir !136 {
entry:
  %program.addr = alloca i8*, align 8
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !138
  %node = alloca i8*, align 8, !ctir !115
  %map_prog = alloca %struct.infomap*, align 8, !ctir !149
  %lc_messages = alloca i8*, align 8, !ctir !115
  store i8* %program, i8** %program.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !3021, metadata !DIExpression()), !dbg !3022
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !3023, metadata !DIExpression()), !dbg !3024
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !3024
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !3024
  call void @llvm.dbg.declare(metadata i8** %node, metadata !3025, metadata !DIExpression()), !dbg !3026
  %1 = load i8*, i8** %program.addr, align 8, !dbg !3027, !tbaa !2995
  store i8* %1, i8** %node, align 8, !dbg !3026, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !3028, metadata !DIExpression()), !dbg !3029
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !3030
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !3029, !tbaa !2995
  br label %while.cond, !dbg !3031

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3032, !tbaa !2995
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !3033, !ctir !139
  %3 = load i8*, i8** %program1, align 8, !dbg !3033, !tbaa !3034, !ctir !115
  %tobool = icmp ne i8* %3, null, !dbg !3032
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3036

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !3037, !tbaa !2995
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3037, !tbaa !2995
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !3037, !ctir !139
  %6 = load i8*, i8** %program2, align 8, !dbg !3037, !tbaa !3034, !ctir !115
  %call = call i32 @strcmp(i8* %4, i8* %6) #14, !dbg !3037
  %cmp = icmp eq i32 %call, 0, !dbg !3037
  %lnot = xor i1 %cmp, true, !dbg !3038
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !3039
  br i1 %7, label %while.body, label %while.end, !dbg !3031

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3040, !tbaa !2995
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !3040
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !3040, !tbaa !2995
  br label %while.cond, !dbg !3031, !llvm.loop !3041

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3042, !tbaa !2995
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !3044, !ctir !139
  %10 = load i8*, i8** %node3, align 8, !dbg !3044, !tbaa !3045, !ctir !115
  %tobool4 = icmp ne i8* %10, null, !dbg !3042
  br i1 %tobool4, label %if.then, label %if.end, !dbg !3046

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3047, !tbaa !2995
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !3048, !ctir !139
  %12 = load i8*, i8** %node5, align 8, !dbg !3048, !tbaa !3045, !ctir !115
  store i8* %12, i8** %node, align 8, !dbg !3049, !tbaa !2995
  br label %if.end, !dbg !3050

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !3051
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40, i64 0, i64 0)), !dbg !3052
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !3053, metadata !DIExpression()), !dbg !3054
  %call8 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !3055
  store i8* %call8, i8** %lc_messages, align 8, !dbg !3054, !tbaa !2995
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !3056, !tbaa !2995
  %tobool9 = icmp ne i8* %13, null, !dbg !3056
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !3058

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !3059, !tbaa !2995
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), i64 3) #14, !dbg !3059
  %tobool11 = icmp ne i32 %call10, 0, !dbg !3059
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !3060

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.42, i64 0, i64 0)) #10, !dbg !3061
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3061, !tbaa !2995
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !3061
  br label %if.end15, !dbg !3063

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i64 0, i64 0)) #10, !dbg !3064
  %16 = load i8*, i8** %program.addr, align 8, !dbg !3065, !tbaa !2995
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40, i64 0, i64 0), i8* %16), !dbg !3066
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.44, i64 0, i64 0)) #10, !dbg !3067
  %17 = load i8*, i8** %node, align 8, !dbg !3068, !tbaa !2995
  %18 = load i8*, i8** %node, align 8, !dbg !3069, !tbaa !2995
  %19 = load i8*, i8** %program.addr, align 8, !dbg !3070, !tbaa !2995
  %cmp19 = icmp eq i8* %18, %19, !dbg !3071
  %20 = zext i1 %cmp19 to i64, !dbg !3069
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), !dbg !3069
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !3072
  ret void, !dbg !3073
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #4 !dbg !3074 !ctir !117 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %c = alloca i32, align 4, !ctir !7
  %ok = alloca i8, align 1, !ctir !120
  %make_backups = alloca i8, align 1, !ctir !120
  %backup_suffix = alloca i8*, align 8, !ctir !115
  %version_control_string = alloca i8*, align 8, !ctir !9
  %x = alloca %struct.cp_options, align 8, !ctir !153
  %target_directory = alloca i8*, align 8, !ctir !9
  %no_target_directory = alloca i8, align 1, !ctir !120
  %n_files = alloca i32, align 4, !ctir !7
  %file = alloca i8**, align 8, !ctir !119
  %selinux_enabled = alloca i8, align 1, !ctir !120
  %st = alloca %struct.stat, align 8, !ctir !3075
  %i = alloca i32, align 4, !ctir !7
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !3096, metadata !DIExpression()), !dbg !3097
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !3098, metadata !DIExpression()), !dbg !3099
  call void @llvm.dbg.declare(metadata i32* %c, metadata !3100, metadata !DIExpression()), !dbg !3101
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3102, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.declare(metadata i8* %make_backups, metadata !3104, metadata !DIExpression()), !dbg !3105
  store i8 0, i8* %make_backups, align 1, !dbg !3105, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8** %backup_suffix, metadata !3108, metadata !DIExpression()), !dbg !3109
  store i8* null, i8** %backup_suffix, align 8, !dbg !3109, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %version_control_string, metadata !3110, metadata !DIExpression()), !dbg !3111
  store i8* null, i8** %version_control_string, align 8, !dbg !3111, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options* %x, metadata !3112, metadata !DIExpression()), !dbg !3113
  call void @llvm.dbg.declare(metadata i8** %target_directory, metadata !3114, metadata !DIExpression()), !dbg !3115
  store i8* null, i8** %target_directory, align 8, !dbg !3115, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8* %no_target_directory, metadata !3116, metadata !DIExpression()), !dbg !3117
  store i8 0, i8* %no_target_directory, align 1, !dbg !3117, !tbaa !3106
  call void @llvm.dbg.declare(metadata i32* %n_files, metadata !3118, metadata !DIExpression()), !dbg !3119
  call void @llvm.dbg.declare(metadata i8*** %file, metadata !3120, metadata !DIExpression()), !dbg !3121
  call void @llvm.dbg.declare(metadata i8* %selinux_enabled, metadata !3122, metadata !DIExpression()), !dbg !3123
  store i8 0, i8* %selinux_enabled, align 1, !dbg !3123, !tbaa !3106
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !3124, !tbaa !2995
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !3124, !ctir !119
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !3124, !tbaa !2995
  call void @set_program_name(i8* %1), !dbg !3125
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !3126
  %call1 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #10, !dbg !3127
  %call2 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !3128
  %call3 = call i32 @atexit(void ()* @close_stdin) #10, !dbg !3129
  call void @cp_option_init(%struct.cp_options* %x), !dbg !3130
  %call4 = call i32 @priv_set_remove_linkdir(), !dbg !3131
  br label %while.cond, !dbg !3132

while.cond:                                       ; preds = %sw.epilog, %entry
  %2 = load i32, i32* %argc.addr, align 4, !dbg !3133, !tbaa !2982
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !3134, !tbaa !2995
  %call5 = call i32 @getopt_long(i32 %2, i8** %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), %struct.option* getelementptr inbounds ([14 x %struct.option], [14 x %struct.option]* @long_options, i64 0, i64 0), i32* null) #10, !dbg !3135
  store i32 %call5, i32* %c, align 4, !dbg !3136, !tbaa !2982
  %cmp = icmp ne i32 %call5, -1, !dbg !3137
  br i1 %cmp, label %while.body, label %while.end, !dbg !3132

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %c, align 4, !dbg !3138, !tbaa !2982
  switch i32 %4, label %sw.default [
    i32 98, label %sw.bb
    i32 102, label %sw.bb6
    i32 105, label %sw.bb7
    i32 110, label %sw.bb9
    i32 128, label %sw.bb11
    i32 116, label %sw.bb12
    i32 84, label %sw.bb29
    i32 117, label %sw.bb30
    i32 118, label %sw.bb31
    i32 83, label %sw.bb32
    i32 90, label %sw.bb33
    i32 -130, label %sw.bb37
    i32 -131, label %sw.bb38
  ], !dbg !3140

sw.bb:                                            ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !3141, !tbaa !3106
  %5 = load i8*, i8** @optarg, align 8, !dbg !3143, !tbaa !2995
  %tobool = icmp ne i8* %5, null, !dbg !3143
  br i1 %tobool, label %if.then, label %if.end, !dbg !3145

if.then:                                          ; preds = %sw.bb
  %6 = load i8*, i8** @optarg, align 8, !dbg !3146, !tbaa !2995
  store i8* %6, i8** %version_control_string, align 8, !dbg !3147, !tbaa !2995
  br label %if.end, !dbg !3148

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !3149

sw.bb6:                                           ; preds = %while.body
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3150, !ctir !153
  store i32 1, i32* %interactive, align 8, !dbg !3151, !tbaa !3152, !ctir !83
  br label %sw.epilog, !dbg !3154

sw.bb7:                                           ; preds = %while.body
  %interactive8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3155, !ctir !153
  store i32 3, i32* %interactive8, align 8, !dbg !3156, !tbaa !3152, !ctir !83
  br label %sw.epilog, !dbg !3157

sw.bb9:                                           ; preds = %while.body
  %interactive10 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3158, !ctir !153
  store i32 2, i32* %interactive10, align 8, !dbg !3159, !tbaa !3152, !ctir !83
  br label %sw.epilog, !dbg !3160

sw.bb11:                                          ; preds = %while.body
  store i8 1, i8* @remove_trailing_slashes, align 1, !dbg !3161, !tbaa !3106
  br label %sw.epilog, !dbg !3162

sw.bb12:                                          ; preds = %while.body
  %7 = load i8*, i8** %target_directory, align 8, !dbg !3163, !tbaa !2995
  %tobool13 = icmp ne i8* %7, null, !dbg !3163
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !3165

if.then14:                                        ; preds = %sw.bb12
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0)) #10, !dbg !3166
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call15), !dbg !3166
  unreachable, !dbg !3166

if.else:                                          ; preds = %sw.bb12
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3167, metadata !DIExpression()), !dbg !3169
  %8 = load i8*, i8** @optarg, align 8, !dbg !3170, !tbaa !2995
  %call16 = call i32 @stat(i8* %8, %struct.stat* %st) #10, !dbg !3172
  %cmp17 = icmp ne i32 %call16, 0, !dbg !3173
  br i1 %cmp17, label %if.then18, label %if.end22, !dbg !3174

if.then18:                                        ; preds = %if.else
  %call19 = call i32* @__errno_location() #15, !dbg !3175
  %9 = load i32, i32* %call19, align 4, !dbg !3175, !tbaa !2982, !ctir !7
  %call20 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !3175
  %10 = load i8*, i8** @optarg, align 8, !dbg !3175, !tbaa !2995
  %call21 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !3175
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %9, i8* %call20, i8* %call21), !dbg !3175
  unreachable, !dbg !3175

if.end22:                                         ; preds = %if.else
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3176, !ctir !3075
  %11 = load i32, i32* %st_mode, align 8, !dbg !3176, !tbaa !3178, !ctir !133
  %and = and i32 %11, 61440, !dbg !3176
  %cmp23 = icmp eq i32 %and, 16384, !dbg !3176
  br i1 %cmp23, label %if.end27, label %if.then24, !dbg !3182

if.then24:                                        ; preds = %if.end22
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !3183
  %12 = load i8*, i8** @optarg, align 8, !dbg !3183, !tbaa !2995
  %call26 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !3183
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call25, i8* %call26), !dbg !3183
  unreachable, !dbg !3183

if.end27:                                         ; preds = %if.end22
  br label %if.end28

if.end28:                                         ; preds = %if.end27
  %13 = load i8*, i8** @optarg, align 8, !dbg !3184, !tbaa !2995
  store i8* %13, i8** %target_directory, align 8, !dbg !3185, !tbaa !2995
  br label %sw.epilog, !dbg !3186

sw.bb29:                                          ; preds = %while.body
  store i8 1, i8* %no_target_directory, align 1, !dbg !3187, !tbaa !3106
  br label %sw.epilog, !dbg !3188

sw.bb30:                                          ; preds = %while.body
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 30, !dbg !3189, !ctir !153
  store i8 1, i8* %update, align 1, !dbg !3190, !tbaa !3191, !ctir !120
  br label %sw.epilog, !dbg !3192

sw.bb31:                                          ; preds = %while.body
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 31, !dbg !3193, !ctir !153
  store i8 1, i8* %verbose, align 2, !dbg !3194, !tbaa !3195, !ctir !120
  br label %sw.epilog, !dbg !3196

sw.bb32:                                          ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !3197, !tbaa !3106
  %14 = load i8*, i8** @optarg, align 8, !dbg !3198, !tbaa !2995
  store i8* %14, i8** %backup_suffix, align 8, !dbg !3199, !tbaa !2995
  br label %sw.epilog, !dbg !3200

sw.bb33:                                          ; preds = %while.body
  %15 = load i8, i8* %selinux_enabled, align 1, !dbg !3201, !tbaa !3106
  %tobool34 = trunc i8 %15 to i1, !dbg !3201
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !3203

if.then35:                                        ; preds = %sw.bb33
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !3204, !ctir !153
  store i8 0, i8* %preserve_security_context, align 1, !dbg !3206, !tbaa !3207, !ctir !120
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !3208, !ctir !153
  store i8 1, i8* %set_security_context, align 1, !dbg !3209, !tbaa !3210, !ctir !120
  br label %if.end36, !dbg !3211

if.end36:                                         ; preds = %if.then35, %sw.bb33
  br label %sw.epilog, !dbg !3212

sw.bb37:                                          ; preds = %while.body
  call void @usage(i32 0) #16, !dbg !3213
  unreachable, !dbg !3213

sw.bb38:                                          ; preds = %while.body
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3214, !tbaa !2995
  %17 = load i8*, i8** @Version, align 8, !dbg !3214, !tbaa !2995
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i8* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8* null), !dbg !3214
  call void @exit(i32 0) #13, !dbg !3214
  unreachable, !dbg !3214

sw.default:                                       ; preds = %while.body
  call void @usage(i32 1) #16, !dbg !3215
  unreachable, !dbg !3215

sw.epilog:                                        ; preds = %if.end36, %sw.bb32, %sw.bb31, %sw.bb30, %sw.bb29, %if.end28, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb6, %if.end
  br label %while.cond, !dbg !3132, !llvm.loop !3216

while.end:                                        ; preds = %while.cond
  %18 = load i32, i32* %argc.addr, align 4, !dbg !3218, !tbaa !2982
  %19 = load i32, i32* @optind, align 4, !dbg !3219, !tbaa !2982
  %sub = sub nsw i32 %18, %19, !dbg !3220
  store i32 %sub, i32* %n_files, align 4, !dbg !3221, !tbaa !2982
  %20 = load i8**, i8*** %argv.addr, align 8, !dbg !3222, !tbaa !2995
  %21 = load i32, i32* @optind, align 4, !dbg !3223, !tbaa !2982
  %idx.ext = sext i32 %21 to i64, !dbg !3224
  %add.ptr = getelementptr inbounds i8*, i8** %20, i64 %idx.ext, !dbg !3224
  store i8** %add.ptr, i8*** %file, align 8, !dbg !3225, !tbaa !2995
  %22 = load i32, i32* %n_files, align 4, !dbg !3226, !tbaa !2982
  %23 = load i8*, i8** %target_directory, align 8, !dbg !3228, !tbaa !2995
  %tobool39 = icmp ne i8* %23, null, !dbg !3229
  %lnot = xor i1 %tobool39, true, !dbg !3229
  %lnot.ext = zext i1 %lnot to i32, !dbg !3229
  %cmp40 = icmp sle i32 %22, %lnot.ext, !dbg !3230
  br i1 %cmp40, label %if.then41, label %if.end50, !dbg !3231

if.then41:                                        ; preds = %while.end
  %24 = load i32, i32* %n_files, align 4, !dbg !3232, !tbaa !2982
  %cmp42 = icmp sle i32 %24, 0, !dbg !3235
  br i1 %cmp42, label %if.then43, label %if.else45, !dbg !3236

if.then43:                                        ; preds = %if.then41
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)) #10, !dbg !3237
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call44), !dbg !3238
  br label %if.end49, !dbg !3238

if.else45:                                        ; preds = %if.then41
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !3239
  %25 = load i8**, i8*** %file, align 8, !dbg !3240, !tbaa !2995
  %arrayidx47 = getelementptr inbounds i8*, i8** %25, i64 0, !dbg !3240, !ctir !119
  %26 = load i8*, i8** %arrayidx47, align 8, !dbg !3240, !tbaa !2995
  %call48 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !3240
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call46, i8* %call48), !dbg !3241
  br label %if.end49

if.end49:                                         ; preds = %if.else45, %if.then43
  call void @usage(i32 1) #16, !dbg !3242
  unreachable, !dbg !3242

if.end50:                                         ; preds = %while.end
  %27 = load i8, i8* %no_target_directory, align 1, !dbg !3243, !tbaa !3106
  %tobool51 = trunc i8 %27 to i1, !dbg !3243
  br i1 %tobool51, label %if.then52, label %if.else63, !dbg !3245

if.then52:                                        ; preds = %if.end50
  %28 = load i8*, i8** %target_directory, align 8, !dbg !3246, !tbaa !2995
  %tobool53 = icmp ne i8* %28, null, !dbg !3246
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !3249

if.then54:                                        ; preds = %if.then52
  %call55 = call i8* @gettext(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0)) #10, !dbg !3250
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call55), !dbg !3250
  unreachable, !dbg !3250

if.end56:                                         ; preds = %if.then52
  %29 = load i32, i32* %n_files, align 4, !dbg !3251, !tbaa !2982
  %cmp57 = icmp slt i32 2, %29, !dbg !3253
  br i1 %cmp57, label %if.then58, label %if.end62, !dbg !3254

if.then58:                                        ; preds = %if.end56
  %call59 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0)) #10, !dbg !3255
  %30 = load i8**, i8*** %file, align 8, !dbg !3257, !tbaa !2995
  %arrayidx60 = getelementptr inbounds i8*, i8** %30, i64 2, !dbg !3257, !ctir !119
  %31 = load i8*, i8** %arrayidx60, align 8, !dbg !3257, !tbaa !2995
  %call61 = call i8* @quotearg_style(i32 4, i8* %31), !dbg !3257
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call59, i8* %call61), !dbg !3258
  call void @usage(i32 1) #16, !dbg !3259
  unreachable, !dbg !3259

if.end62:                                         ; preds = %if.end56
  br label %if.end98, !dbg !3260

if.else63:                                        ; preds = %if.end50
  %32 = load i8*, i8** %target_directory, align 8, !dbg !3261, !tbaa !2995
  %tobool64 = icmp ne i8* %32, null, !dbg !3261
  br i1 %tobool64, label %if.end97, label %if.then65, !dbg !3263

if.then65:                                        ; preds = %if.else63
  %33 = load i32, i32* %n_files, align 4, !dbg !3264, !tbaa !2982
  %cmp66 = icmp sle i32 2, %33, !dbg !3264
  br i1 %cmp66, label %if.then67, label %if.else68, !dbg !3268

if.then67:                                        ; preds = %if.then65
  br label %if.end69, !dbg !3268

if.else68:                                        ; preds = %if.then65
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i32 457, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #13, !dbg !3264
  unreachable, !dbg !3264

if.end69:                                         ; preds = %if.then67
  %34 = load i32, i32* %n_files, align 4, !dbg !3269, !tbaa !2982
  %cmp70 = icmp eq i32 %34, 2, !dbg !3271
  br i1 %cmp70, label %if.then71, label %if.end77, !dbg !3272

if.then71:                                        ; preds = %if.end69
  %35 = load i8**, i8*** %file, align 8, !dbg !3273, !tbaa !2995
  %arrayidx72 = getelementptr inbounds i8*, i8** %35, i64 0, !dbg !3273, !ctir !119
  %36 = load i8*, i8** %arrayidx72, align 8, !dbg !3273, !tbaa !2995
  %37 = load i8**, i8*** %file, align 8, !dbg !3274, !tbaa !2995
  %arrayidx73 = getelementptr inbounds i8*, i8** %37, i64 1, !dbg !3274, !ctir !119
  %38 = load i8*, i8** %arrayidx73, align 8, !dbg !3274, !tbaa !2995
  %call74 = call i32 @renameatu(i32 -100, i8* %36, i32 -100, i8* %38, i32 1), !dbg !3275
  %tobool75 = icmp ne i32 %call74, 0, !dbg !3275
  br i1 %tobool75, label %cond.true, label %cond.false, !dbg !3275

cond.true:                                        ; preds = %if.then71
  %call76 = call i32* @__errno_location() #15, !dbg !3276
  %39 = load i32, i32* %call76, align 4, !dbg !3276, !tbaa !2982, !ctir !7
  br label %cond.end, !dbg !3275

cond.false:                                       ; preds = %if.then71
  br label %cond.end, !dbg !3275

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %39, %cond.true ], [ 0, %cond.false ], !dbg !3275
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !3277, !ctir !153
  store i32 %cond, i32* %rename_errno, align 4, !dbg !3278, !tbaa !3279, !ctir !7
  br label %if.end77, !dbg !3280

if.end77:                                         ; preds = %cond.end, %if.end69
  %rename_errno78 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !3281, !ctir !153
  %40 = load i32, i32* %rename_errno78, align 4, !dbg !3281, !tbaa !3279, !ctir !7
  %cmp79 = icmp ne i32 %40, 0, !dbg !3283
  br i1 %cmp79, label %land.lhs.true, label %if.else87, !dbg !3284

land.lhs.true:                                    ; preds = %if.end77
  %41 = load i8**, i8*** %file, align 8, !dbg !3285, !tbaa !2995
  %42 = load i32, i32* %n_files, align 4, !dbg !3286, !tbaa !2982
  %sub80 = sub nsw i32 %42, 1, !dbg !3287
  %idxprom = sext i32 %sub80 to i64, !dbg !3285
  %arrayidx81 = getelementptr inbounds i8*, i8** %41, i64 %idxprom, !dbg !3285, !ctir !119
  %43 = load i8*, i8** %arrayidx81, align 8, !dbg !3285, !tbaa !2995
  %call82 = call zeroext i1 @target_directory_operand(i8* %43), !dbg !3288
  br i1 %call82, label %if.then83, label %if.else87, !dbg !3289

if.then83:                                        ; preds = %land.lhs.true
  %rename_errno84 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !3290, !ctir !153
  store i32 -1, i32* %rename_errno84, align 4, !dbg !3292, !tbaa !3279, !ctir !7
  %44 = load i8**, i8*** %file, align 8, !dbg !3293, !tbaa !2995
  %45 = load i32, i32* %n_files, align 4, !dbg !3294, !tbaa !2982
  %dec = add nsw i32 %45, -1, !dbg !3294
  store i32 %dec, i32* %n_files, align 4, !dbg !3294, !tbaa !2982
  %idxprom85 = sext i32 %dec to i64, !dbg !3293
  %arrayidx86 = getelementptr inbounds i8*, i8** %44, i64 %idxprom85, !dbg !3293, !ctir !119
  %46 = load i8*, i8** %arrayidx86, align 8, !dbg !3293, !tbaa !2995
  store i8* %46, i8** %target_directory, align 8, !dbg !3295, !tbaa !2995
  br label %if.end96, !dbg !3296

if.else87:                                        ; preds = %land.lhs.true, %if.end77
  %47 = load i32, i32* %n_files, align 4, !dbg !3297, !tbaa !2982
  %cmp88 = icmp slt i32 2, %47, !dbg !3299
  br i1 %cmp88, label %if.then89, label %if.end95, !dbg !3300

if.then89:                                        ; preds = %if.else87
  %call90 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !3301
  %48 = load i8**, i8*** %file, align 8, !dbg !3301, !tbaa !2995
  %49 = load i32, i32* %n_files, align 4, !dbg !3301, !tbaa !2982
  %sub91 = sub nsw i32 %49, 1, !dbg !3301
  %idxprom92 = sext i32 %sub91 to i64, !dbg !3301
  %arrayidx93 = getelementptr inbounds i8*, i8** %48, i64 %idxprom92, !dbg !3301, !ctir !119
  %50 = load i8*, i8** %arrayidx93, align 8, !dbg !3301, !tbaa !2995
  %call94 = call i8* @quotearg_style(i32 4, i8* %50), !dbg !3301
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call90, i8* %call94), !dbg !3301
  unreachable, !dbg !3301

if.end95:                                         ; preds = %if.else87
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then83
  br label %if.end97, !dbg !3302

if.end97:                                         ; preds = %if.end96, %if.else63
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end62
  %interactive99 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3303, !ctir !153
  %51 = load i32, i32* %interactive99, align 8, !dbg !3303, !tbaa !3152, !ctir !83
  %cmp100 = icmp eq i32 %51, 2, !dbg !3305
  br i1 %cmp100, label %if.then101, label %if.end103, !dbg !3306

if.then101:                                       ; preds = %if.end98
  %update102 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 30, !dbg !3307, !ctir !153
  store i8 0, i8* %update102, align 1, !dbg !3308, !tbaa !3191, !ctir !120
  br label %if.end103, !dbg !3309

if.end103:                                        ; preds = %if.then101, %if.end98
  %52 = load i8, i8* %make_backups, align 1, !dbg !3310, !tbaa !3106
  %tobool104 = trunc i8 %52 to i1, !dbg !3310
  br i1 %tobool104, label %land.lhs.true105, label %if.end110, !dbg !3312

land.lhs.true105:                                 ; preds = %if.end103
  %interactive106 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3313, !ctir !153
  %53 = load i32, i32* %interactive106, align 8, !dbg !3313, !tbaa !3152, !ctir !83
  %cmp107 = icmp eq i32 %53, 2, !dbg !3314
  br i1 %cmp107, label %if.then108, label %if.end110, !dbg !3315

if.then108:                                       ; preds = %land.lhs.true105
  %call109 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.26, i64 0, i64 0)) #10, !dbg !3316
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call109), !dbg !3318
  call void @usage(i32 1) #16, !dbg !3319
  unreachable, !dbg !3319

if.end110:                                        ; preds = %land.lhs.true105, %if.end103
  %54 = load i8, i8* %make_backups, align 1, !dbg !3320, !tbaa !3106
  %tobool111 = trunc i8 %54 to i1, !dbg !3320
  br i1 %tobool111, label %cond.true112, label %cond.false115, !dbg !3320

cond.true112:                                     ; preds = %if.end110
  %call113 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0)) #10, !dbg !3321
  %55 = load i8*, i8** %version_control_string, align 8, !dbg !3322, !tbaa !2995
  %call114 = call i32 @xget_version(i8* %call113, i8* %55), !dbg !3323
  br label %cond.end116, !dbg !3320

cond.false115:                                    ; preds = %if.end110
  br label %cond.end116, !dbg !3320

cond.end116:                                      ; preds = %cond.false115, %cond.true112
  %cond117 = phi i32 [ %call114, %cond.true112 ], [ 0, %cond.false115 ], !dbg !3320
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 0, !dbg !3324, !ctir !153
  store i32 %cond117, i32* %backup_type, align 8, !dbg !3325, !tbaa !3326, !ctir !68
  %56 = load i8*, i8** %backup_suffix, align 8, !dbg !3327, !tbaa !2995
  call void @set_simple_backup_suffix(i8* %56), !dbg !3328
  call void @hash_init(), !dbg !3329
  %57 = load i8*, i8** %target_directory, align 8, !dbg !3330, !tbaa !2995
  %tobool118 = icmp ne i8* %57, null, !dbg !3330
  br i1 %tobool118, label %if.then119, label %if.else133, !dbg !3332

if.then119:                                       ; preds = %cond.end116
  %58 = load i32, i32* %n_files, align 4, !dbg !3333, !tbaa !2982
  %cmp120 = icmp sle i32 2, %58, !dbg !3336
  br i1 %cmp120, label %if.then121, label %if.end122, !dbg !3337

if.then121:                                       ; preds = %if.then119
  call void @dest_info_init(%struct.cp_options* %x), !dbg !3338
  br label %if.end122, !dbg !3338

if.end122:                                        ; preds = %if.then121, %if.then119
  store i8 1, i8* %ok, align 1, !dbg !3339, !tbaa !3106
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3340, metadata !DIExpression()), !dbg !3342
  store i32 0, i32* %i, align 4, !dbg !3342, !tbaa !2982
  br label %for.cond, !dbg !3343

for.cond:                                         ; preds = %for.inc, %if.end122
  %59 = load i32, i32* %i, align 4, !dbg !3344, !tbaa !2982
  %60 = load i32, i32* %n_files, align 4, !dbg !3346, !tbaa !2982
  %cmp123 = icmp slt i32 %59, %60, !dbg !3347
  br i1 %cmp123, label %for.body, label %for.end, !dbg !3348

for.body:                                         ; preds = %for.cond
  %61 = load i32, i32* %i, align 4, !dbg !3349, !tbaa !2982
  %add = add nsw i32 %61, 1, !dbg !3351
  %62 = load i32, i32* %n_files, align 4, !dbg !3352, !tbaa !2982
  %cmp124 = icmp eq i32 %add, %62, !dbg !3353
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 34, !dbg !3354, !ctir !153
  %frombool = zext i1 %cmp124 to i8, !dbg !3355
  store i8 %frombool, i8* %last_file, align 1, !dbg !3355, !tbaa !3356, !ctir !120
  %63 = load i8**, i8*** %file, align 8, !dbg !3357, !tbaa !2995
  %64 = load i32, i32* %i, align 4, !dbg !3358, !tbaa !2982
  %idxprom125 = sext i32 %64 to i64, !dbg !3357
  %arrayidx126 = getelementptr inbounds i8*, i8** %63, i64 %idxprom125, !dbg !3357, !ctir !119
  %65 = load i8*, i8** %arrayidx126, align 8, !dbg !3357, !tbaa !2995
  %66 = load i8*, i8** %target_directory, align 8, !dbg !3359, !tbaa !2995
  %call127 = call zeroext i1 @movefile(i8* %65, i8* %66, i1 zeroext true, %struct.cp_options* %x), !dbg !3360
  %conv = zext i1 %call127 to i32, !dbg !3360
  %67 = load i8, i8* %ok, align 1, !dbg !3361, !tbaa !3106
  %tobool128 = trunc i8 %67 to i1, !dbg !3361
  %conv129 = zext i1 %tobool128 to i32, !dbg !3361
  %and130 = and i32 %conv129, %conv, !dbg !3361
  %tobool131 = icmp ne i32 %and130, 0, !dbg !3361
  %frombool132 = zext i1 %tobool131 to i8, !dbg !3361
  store i8 %frombool132, i8* %ok, align 1, !dbg !3361, !tbaa !3106
  br label %for.inc, !dbg !3362

for.inc:                                          ; preds = %for.body
  %68 = load i32, i32* %i, align 4, !dbg !3363, !tbaa !2982
  %inc = add nsw i32 %68, 1, !dbg !3363
  store i32 %inc, i32* %i, align 4, !dbg !3363, !tbaa !2982
  br label %for.cond, !dbg !3364, !llvm.loop !3365

for.end:                                          ; preds = %for.cond
  br label %if.end139, !dbg !3367

if.else133:                                       ; preds = %cond.end116
  %last_file134 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 34, !dbg !3368, !ctir !153
  store i8 1, i8* %last_file134, align 1, !dbg !3370, !tbaa !3356, !ctir !120
  %69 = load i8**, i8*** %file, align 8, !dbg !3371, !tbaa !2995
  %arrayidx135 = getelementptr inbounds i8*, i8** %69, i64 0, !dbg !3371, !ctir !119
  %70 = load i8*, i8** %arrayidx135, align 8, !dbg !3371, !tbaa !2995
  %71 = load i8**, i8*** %file, align 8, !dbg !3372, !tbaa !2995
  %arrayidx136 = getelementptr inbounds i8*, i8** %71, i64 1, !dbg !3372, !ctir !119
  %72 = load i8*, i8** %arrayidx136, align 8, !dbg !3372, !tbaa !2995
  %call137 = call zeroext i1 @movefile(i8* %70, i8* %72, i1 zeroext false, %struct.cp_options* %x), !dbg !3373
  %frombool138 = zext i1 %call137 to i8, !dbg !3374
  store i8 %frombool138, i8* %ok, align 1, !dbg !3374, !tbaa !3106
  br label %if.end139

if.end139:                                        ; preds = %if.else133, %for.end
  %73 = load i8, i8* %ok, align 1, !dbg !3375, !tbaa !3106
  %tobool140 = trunc i8 %73 to i1, !dbg !3375
  %74 = zext i1 %tobool140 to i64, !dbg !3375
  %cond142 = select i1 %tobool140, i32 0, i32 1, !dbg !3375
  ret i32 %cond142, !dbg !3376
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cp_option_init(%struct.cp_options* %x) #4 !dbg !3377 !ctir !150 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %selinux_enabled = alloca i8, align 1, !ctir !120
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3378, metadata !DIExpression()), !dbg !3379
  call void @llvm.dbg.declare(metadata i8* %selinux_enabled, metadata !3380, metadata !DIExpression()), !dbg !3381
  store i8 0, i8* %selinux_enabled, align 1, !dbg !3381, !tbaa !3106
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3382, !tbaa !2995
  call void @cp_options_default(%struct.cp_options* %0), !dbg !3383
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3384, !tbaa !2995
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 5, !dbg !3385, !ctir !153
  store i8 0, i8* %copy_as_regular, align 4, !dbg !3386, !tbaa !3387, !ctir !120
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3388, !tbaa !2995
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 36, !dbg !3389, !ctir !153
  store i32 1, i32* %reflink_mode, align 8, !dbg !3390, !tbaa !3391, !ctir !95
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3392, !tbaa !2995
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 1, !dbg !3393, !ctir !153
  store i32 2, i32* %dereference, align 4, !dbg !3394, !tbaa !3395, !ctir !76
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3396, !tbaa !2995
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 6, !dbg !3397, !ctir !153
  store i8 0, i8* %unlink_dest_before_opening, align 1, !dbg !3398, !tbaa !3399, !ctir !120
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3400, !tbaa !2995
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 7, !dbg !3401, !ctir !153
  store i8 0, i8* %unlink_dest_after_failed_open, align 2, !dbg !3402, !tbaa !3403, !ctir !120
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3404, !tbaa !2995
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 8, !dbg !3405, !ctir !153
  store i8 0, i8* %hard_link, align 1, !dbg !3406, !tbaa !3407, !ctir !120
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3408, !tbaa !2995
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 2, !dbg !3409, !ctir !153
  store i32 4, i32* %interactive, align 8, !dbg !3410, !tbaa !3152, !ctir !83
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3411, !tbaa !2995
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 9, !dbg !3412, !ctir !153
  store i8 1, i8* %move_mode, align 8, !dbg !3413, !tbaa !3414, !ctir !120
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3415, !tbaa !2995
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 10, !dbg !3416, !ctir !153
  store i8 0, i8* %install_mode, align 1, !dbg !3417, !tbaa !3418, !ctir !120
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3419, !tbaa !2995
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 13, !dbg !3420, !ctir !153
  store i8 0, i8* %one_file_system, align 4, !dbg !3421, !tbaa !3422, !ctir !120
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3423, !tbaa !2995
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 14, !dbg !3424, !ctir !153
  store i8 1, i8* %preserve_ownership, align 1, !dbg !3425, !tbaa !3426, !ctir !120
  %12 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3427, !tbaa !2995
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 19, !dbg !3428, !ctir !153
  store i8 1, i8* %preserve_links, align 2, !dbg !3429, !tbaa !3430, !ctir !120
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3431, !tbaa !2995
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !3432, !ctir !153
  store i8 1, i8* %preserve_mode, align 2, !dbg !3433, !tbaa !3434, !ctir !120
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3435, !tbaa !2995
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 16, !dbg !3436, !ctir !153
  store i8 1, i8* %preserve_timestamps, align 1, !dbg !3437, !tbaa !3438, !ctir !120
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3439, !tbaa !2995
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 17, !dbg !3440, !ctir !153
  store i8 0, i8* %explicit_no_preserve_mode, align 8, !dbg !3441, !tbaa !3442, !ctir !120
  %16 = load i8, i8* %selinux_enabled, align 1, !dbg !3443, !tbaa !3106
  %tobool = trunc i8 %16 to i1, !dbg !3443
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3444, !tbaa !2995
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 22, !dbg !3445, !ctir !153
  %frombool = zext i1 %tobool to i8, !dbg !3446
  store i8 %frombool, i8* %preserve_security_context, align 1, !dbg !3446, !tbaa !3207, !ctir !120
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3447, !tbaa !2995
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 18, !dbg !3448, !ctir !153
  store i8 0, i8* %set_security_context, align 1, !dbg !3449, !tbaa !3210, !ctir !120
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3450, !tbaa !2995
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 26, !dbg !3451, !ctir !153
  store i8 0, i8* %reduce_diagnostics, align 1, !dbg !3452, !tbaa !3453, !ctir !120
  %20 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3454, !tbaa !2995
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %20, i32 0, i32 20, !dbg !3455, !ctir !153
  store i8 1, i8* %data_copy_required, align 1, !dbg !3456, !tbaa !3457, !ctir !120
  %21 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3458, !tbaa !2995
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 21, !dbg !3459, !ctir !153
  store i8 0, i8* %require_preserve, align 4, !dbg !3460, !tbaa !3461, !ctir !120
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3462, !tbaa !2995
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 23, !dbg !3463, !ctir !153
  store i8 0, i8* %require_preserve_context, align 2, !dbg !3464, !tbaa !3465, !ctir !120
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3466, !tbaa !2995
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 24, !dbg !3467, !ctir !153
  store i8 1, i8* %preserve_xattr, align 1, !dbg !3468, !tbaa !3469, !ctir !120
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3470, !tbaa !2995
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 25, !dbg !3471, !ctir !153
  store i8 0, i8* %require_preserve_xattr, align 8, !dbg !3472, !tbaa !3473, !ctir !120
  %25 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3474, !tbaa !2995
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %25, i32 0, i32 27, !dbg !3475, !ctir !153
  store i8 1, i8* %recursive, align 2, !dbg !3476, !tbaa !3477, !ctir !120
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3478, !tbaa !2995
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 3, !dbg !3479, !ctir !153
  store i32 2, i32* %sparse_mode, align 4, !dbg !3480, !tbaa !3481, !ctir !89
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3482, !tbaa !2995
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 29, !dbg !3483, !ctir !153
  store i8 0, i8* %symbolic_link, align 4, !dbg !3484, !tbaa !3485, !ctir !120
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3486, !tbaa !2995
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 28, !dbg !3487, !ctir !153
  store i8 0, i8* %set_mode, align 1, !dbg !3488, !tbaa !3489, !ctir !120
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3490, !tbaa !2995
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 4, !dbg !3491, !ctir !153
  store i32 0, i32* %mode, align 8, !dbg !3492, !tbaa !3493, !ctir !160
  %call = call i32 @isatty(i32 0) #10, !dbg !3494
  %tobool1 = icmp ne i32 %call, 0, !dbg !3494
  %30 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3495, !tbaa !2995
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 32, !dbg !3496, !ctir !153
  %frombool2 = zext i1 %tobool1 to i8, !dbg !3497
  store i8 %frombool2, i8* %stdin_tty, align 1, !dbg !3497, !tbaa !3498, !ctir !120
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3499, !tbaa !2995
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 33, !dbg !3500, !ctir !153
  store i8 0, i8* %open_dangling_dest_symlink, align 8, !dbg !3501, !tbaa !3502, !ctir !120
  %32 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3503, !tbaa !2995
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 30, !dbg !3504, !ctir !153
  store i8 0, i8* %update, align 1, !dbg !3505, !tbaa !3191, !ctir !120
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3506, !tbaa !2995
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 31, !dbg !3507, !ctir !153
  store i8 0, i8* %verbose, align 2, !dbg !3508, !tbaa !3195, !ctir !120
  %34 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3509, !tbaa !2995
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %34, i32 0, i32 37, !dbg !3510, !ctir !153
  store %struct.hash_table* null, %struct.hash_table** %dest_info, align 8, !dbg !3511, !tbaa !3512, !ctir !195
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3513, !tbaa !2995
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 38, !dbg !3514, !ctir !153
  store %struct.hash_table* null, %struct.hash_table** %src_info, align 8, !dbg !3515, !tbaa !3516, !ctir !195
  ret void, !dbg !3517
}

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @target_directory_operand(i8* %file) #4 !dbg !3518 !ctir !200 {
entry:
  %file.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !3075
  %err = alloca i32, align 4, !ctir !7
  %is_a_dir = alloca i8, align 1, !ctir !120
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3519, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3521, metadata !DIExpression()), !dbg !3522
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3523, metadata !DIExpression()), !dbg !3524
  %0 = load i8*, i8** %file.addr, align 8, !dbg !3525, !tbaa !2995
  %call = call i32 @stat(i8* %0, %struct.stat* %st) #10, !dbg !3526
  %cmp = icmp eq i32 %call, 0, !dbg !3527
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3526

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3526

cond.false:                                       ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !3528
  %1 = load i32, i32* %call1, align 4, !dbg !3528, !tbaa !2982, !ctir !7
  br label %cond.end, !dbg !3526

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %1, %cond.false ], !dbg !3526
  store i32 %cond, i32* %err, align 4, !dbg !3524, !tbaa !2982
  call void @llvm.dbg.declare(metadata i8* %is_a_dir, metadata !3529, metadata !DIExpression()), !dbg !3530
  %2 = load i32, i32* %err, align 4, !dbg !3531, !tbaa !2982
  %tobool = icmp ne i32 %2, 0, !dbg !3531
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !3532

land.rhs:                                         ; preds = %cond.end
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3533, !ctir !3075
  %3 = load i32, i32* %st_mode, align 8, !dbg !3533, !tbaa !3178, !ctir !133
  %and = and i32 %3, 61440, !dbg !3533
  %cmp2 = icmp eq i32 %and, 16384, !dbg !3533
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %4 = phi i1 [ false, %cond.end ], [ %cmp2, %land.rhs ], !dbg !3534
  %frombool = zext i1 %4 to i8, !dbg !3530
  store i8 %frombool, i8* %is_a_dir, align 1, !dbg !3530, !tbaa !3106
  %5 = load i32, i32* %err, align 4, !dbg !3535, !tbaa !2982
  %tobool3 = icmp ne i32 %5, 0, !dbg !3535
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !3537

land.lhs.true:                                    ; preds = %land.end
  %6 = load i32, i32* %err, align 4, !dbg !3538, !tbaa !2982
  %cmp4 = icmp ne i32 %6, 2, !dbg !3539
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3540

if.then:                                          ; preds = %land.lhs.true
  %7 = load i32, i32* %err, align 4, !dbg !3541, !tbaa !2982
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !3541
  %8 = load i8*, i8** %file.addr, align 8, !dbg !3541, !tbaa !2995
  %call6 = call i8* @quotearg_style(i32 4, i8* %8), !dbg !3541
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %7, i8* %call5, i8* %call6), !dbg !3541
  unreachable, !dbg !3541

if.end:                                           ; preds = %land.lhs.true, %land.end
  %9 = load i8, i8* %is_a_dir, align 1, !dbg !3542, !tbaa !3106
  %tobool7 = trunc i8 %9 to i1, !dbg !3542
  ret i1 %tobool7, !dbg !3543
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @movefile(i8* %source, i8* %dest, i1 zeroext %dest_is_dir, %struct.cp_options* %x) #4 !dbg !3544 !ctir !202 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %dest_is_dir.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %ok = alloca i8, align 1, !ctir !120
  %src_basename = alloca i8*, align 8, !ctir !115
  %new_dest = alloca i8*, align 8, !ctir !9
  store i8* %source, i8** %source.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !3545, metadata !DIExpression()), !dbg !3546
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !3547, metadata !DIExpression()), !dbg !3548
  %frombool = zext i1 %dest_is_dir to i8
  store i8 %frombool, i8* %dest_is_dir.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %dest_is_dir.addr, metadata !3549, metadata !DIExpression()), !dbg !3550
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3551, metadata !DIExpression()), !dbg !3552
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3553, metadata !DIExpression()), !dbg !3554
  %0 = load i8, i8* @remove_trailing_slashes, align 1, !dbg !3555, !tbaa !3106
  %tobool = trunc i8 %0 to i1, !dbg !3555
  br i1 %tobool, label %if.then, label %if.end, !dbg !3557

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %source.addr, align 8, !dbg !3558, !tbaa !2995
  %call = call zeroext i1 @strip_trailing_slashes(i8* %1), !dbg !3559
  br label %if.end, !dbg !3559

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* %dest_is_dir.addr, align 1, !dbg !3560, !tbaa !3106
  %tobool1 = trunc i8 %2 to i1, !dbg !3560
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3562

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %src_basename, metadata !3563, metadata !DIExpression()), !dbg !3565
  %3 = load i8*, i8** %source.addr, align 8, !dbg !3566, !tbaa !2995
  %call3 = call i8* @last_component(i8* %3) #14, !dbg !3567
  store i8* %call3, i8** %src_basename, align 8, !dbg !3565, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %new_dest, metadata !3568, metadata !DIExpression()), !dbg !3569
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !3570, !tbaa !2995
  %5 = load i8*, i8** %src_basename, align 8, !dbg !3571, !tbaa !2995
  %call4 = call i8* @file_name_concat(i8* %4, i8* %5, i8** null), !dbg !3572
  store i8* %call4, i8** %new_dest, align 8, !dbg !3569, !tbaa !2995
  %6 = load i8*, i8** %new_dest, align 8, !dbg !3573, !tbaa !2995
  %call5 = call zeroext i1 @strip_trailing_slashes(i8* %6), !dbg !3574
  %7 = load i8*, i8** %source.addr, align 8, !dbg !3575, !tbaa !2995
  %8 = load i8*, i8** %new_dest, align 8, !dbg !3576, !tbaa !2995
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3577, !tbaa !2995
  %call6 = call zeroext i1 @do_move(i8* %7, i8* %8, %struct.cp_options* %9), !dbg !3578
  %frombool7 = zext i1 %call6 to i8, !dbg !3579
  store i8 %frombool7, i8* %ok, align 1, !dbg !3579, !tbaa !3106
  %10 = load i8*, i8** %new_dest, align 8, !dbg !3580, !tbaa !2995
  call void @free(i8* %10) #10, !dbg !3581
  br label %if.end10, !dbg !3582

if.else:                                          ; preds = %if.end
  %11 = load i8*, i8** %source.addr, align 8, !dbg !3583, !tbaa !2995
  %12 = load i8*, i8** %dest.addr, align 8, !dbg !3585, !tbaa !2995
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3586, !tbaa !2995
  %call8 = call zeroext i1 @do_move(i8* %11, i8* %12, %struct.cp_options* %13), !dbg !3587
  %frombool9 = zext i1 %call8 to i8, !dbg !3588
  store i8 %frombool9, i8* %ok, align 1, !dbg !3588, !tbaa !3106
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then2
  %14 = load i8, i8* %ok, align 1, !dbg !3589, !tbaa !3106
  %tobool11 = trunc i8 %14 to i1, !dbg !3589
  ret i1 %tobool11, !dbg !3590
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @do_move(i8* %source, i8* %dest, %struct.cp_options* %x) #4 !dbg !3591 !ctir !206 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %copy_into_self = alloca i8, align 1, !ctir !120
  %rename_succeeded = alloca i8, align 1, !ctir !120
  %ok = alloca i8, align 1, !ctir !120
  %dir_to_remove = alloca i8*, align 8, !ctir !115
  %rm_options = alloca %struct.rm_options, align 8, !ctir !214
  %status = alloca i32, align 4, !ctir !106
  %dir = alloca [2 x i8*], align 16, !ctir !208
  store i8* %source, i8** %source.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !3592, metadata !DIExpression()), !dbg !3593
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !3594, metadata !DIExpression()), !dbg !3595
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3596, metadata !DIExpression()), !dbg !3597
  call void @llvm.dbg.declare(metadata i8* %copy_into_self, metadata !3598, metadata !DIExpression()), !dbg !3599
  call void @llvm.dbg.declare(metadata i8* %rename_succeeded, metadata !3600, metadata !DIExpression()), !dbg !3601
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3602, metadata !DIExpression()), !dbg !3603
  %0 = load i8*, i8** %source.addr, align 8, !dbg !3604, !tbaa !2995
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !3605, !tbaa !2995
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3606, !tbaa !2995
  %call = call zeroext i1 @copy(i8* %0, i8* %1, i1 zeroext false, %struct.cp_options* %2, i8* %copy_into_self, i8* %rename_succeeded), !dbg !3607
  %frombool = zext i1 %call to i8, !dbg !3603
  store i8 %frombool, i8* %ok, align 1, !dbg !3603, !tbaa !3106
  %3 = load i8, i8* %ok, align 1, !dbg !3608, !tbaa !3106
  %tobool = trunc i8 %3 to i1, !dbg !3608
  br i1 %tobool, label %if.then, label %if.end24, !dbg !3610

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %dir_to_remove, metadata !3611, metadata !DIExpression()), !dbg !3613
  %4 = load i8, i8* %copy_into_self, align 1, !dbg !3614, !tbaa !3106
  %tobool1 = trunc i8 %4 to i1, !dbg !3614
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3616

if.then2:                                         ; preds = %if.then
  store i8* null, i8** %dir_to_remove, align 8, !dbg !3617, !tbaa !2995
  store i8 0, i8* %ok, align 1, !dbg !3619, !tbaa !3106
  br label %if.end6, !dbg !3620

if.else:                                          ; preds = %if.then
  %5 = load i8, i8* %rename_succeeded, align 1, !dbg !3621, !tbaa !3106
  %tobool3 = trunc i8 %5 to i1, !dbg !3621
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !3623

if.then4:                                         ; preds = %if.else
  store i8* null, i8** %dir_to_remove, align 8, !dbg !3624, !tbaa !2995
  br label %if.end, !dbg !3626

if.else5:                                         ; preds = %if.else
  %6 = load i8*, i8** %source.addr, align 8, !dbg !3627, !tbaa !2995
  store i8* %6, i8** %dir_to_remove, align 8, !dbg !3629, !tbaa !2995
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then4
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then2
  %7 = load i8*, i8** %dir_to_remove, align 8, !dbg !3630, !tbaa !2995
  %cmp = icmp ne i8* %7, null, !dbg !3632
  br i1 %cmp, label %if.then7, label %if.end23, !dbg !3633

if.then7:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.rm_options* %rm_options, metadata !3634, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3637, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.declare(metadata [2 x i8*]* %dir, metadata !3639, metadata !DIExpression()), !dbg !3640
  call void @rm_option_init(%struct.rm_options* %rm_options), !dbg !3641
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3642, !tbaa !2995
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 31, !dbg !3643, !ctir !205
  %9 = load i8, i8* %verbose, align 2, !dbg !3643, !tbaa !3195
  %tobool8 = trunc i8 %9 to i1, !dbg !3643, !ctir !120
  %verbose9 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %rm_options, i32 0, i32 8, !dbg !3644, !ctir !214
  %frombool10 = zext i1 %tobool8 to i8, !dbg !3645
  store i8 %frombool10, i8* %verbose9, align 2, !dbg !3645, !tbaa !3646, !ctir !120
  %10 = load i8*, i8** %dir_to_remove, align 8, !dbg !3648, !tbaa !2995
  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 0, !dbg !3649, !ctir !208
  store i8* %10, i8** %arrayidx, align 16, !dbg !3650, !tbaa !2995
  %arrayidx11 = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 1, !dbg !3651, !ctir !208
  store i8* null, i8** %arrayidx11, align 8, !dbg !3652, !tbaa !2995
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 0, !dbg !3653
  %11 = bitcast i8** %arraydecay to i8*, !dbg !3654
  %12 = bitcast i8* %11 to i8**, !dbg !3654
  %call12 = call i32 @rm(i8** %12, %struct.rm_options* %rm_options), !dbg !3655
  store i32 %call12, i32* %status, align 4, !dbg !3656, !tbaa !3657
  %13 = load i32, i32* %status, align 4, !dbg !3658, !tbaa !3657
  %cmp13 = icmp eq i32 %13, 2, !dbg !3658
  br i1 %cmp13, label %if.then17, label %lor.lhs.false, !dbg !3658

lor.lhs.false:                                    ; preds = %if.then7
  %14 = load i32, i32* %status, align 4, !dbg !3658, !tbaa !3657
  %cmp14 = icmp eq i32 %14, 3, !dbg !3658
  br i1 %cmp14, label %if.then17, label %lor.lhs.false15, !dbg !3658

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %15 = load i32, i32* %status, align 4, !dbg !3658, !tbaa !3657
  %cmp16 = icmp eq i32 %15, 4, !dbg !3658
  br i1 %cmp16, label %if.then17, label %if.else18, !dbg !3661

if.then17:                                        ; preds = %lor.lhs.false15, %lor.lhs.false, %if.then7
  br label %if.end19, !dbg !3661

if.else18:                                        ; preds = %lor.lhs.false15
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i32 239, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__.do_move, i64 0, i64 0)) #13, !dbg !3658
  unreachable, !dbg !3658

if.end19:                                         ; preds = %if.then17
  %16 = load i32, i32* %status, align 4, !dbg !3662, !tbaa !3657
  %cmp20 = icmp eq i32 %16, 4, !dbg !3664
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !3665

if.then21:                                        ; preds = %if.end19
  store i8 0, i8* %ok, align 1, !dbg !3666, !tbaa !3106
  br label %if.end22, !dbg !3667

if.end22:                                         ; preds = %if.then21, %if.end19
  br label %if.end23, !dbg !3668

if.end23:                                         ; preds = %if.end22, %if.end6
  br label %if.end24, !dbg !3669

if.end24:                                         ; preds = %if.end23, %entry
  %17 = load i8, i8* %ok, align 1, !dbg !3670, !tbaa !3106
  %tobool25 = trunc i8 %17 to i1, !dbg !3670
  ret i1 %tobool25, !dbg !3671
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @rm_option_init(%struct.rm_options* %x) #4 !dbg !241 !ctir !211 {
entry:
  %x.addr = alloca %struct.rm_options*, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3672, metadata !DIExpression()), !dbg !3673
  %0 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3674, !tbaa !2995
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %0, i32 0, i32 0, !dbg !3675, !ctir !214
  store i8 0, i8* %ignore_missing_files, align 8, !dbg !3676, !tbaa !3677, !ctir !120
  %1 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3678, !tbaa !2995
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %1, i32 0, i32 4, !dbg !3679, !ctir !214
  store i8 1, i8* %remove_empty_directories, align 2, !dbg !3680, !tbaa !3681, !ctir !120
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3682, !tbaa !2995
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 3, !dbg !3683, !ctir !214
  store i8 1, i8* %recursive, align 1, !dbg !3684, !tbaa !3685, !ctir !120
  %3 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3686, !tbaa !2995
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %3, i32 0, i32 2, !dbg !3687, !ctir !214
  store i8 0, i8* %one_file_system, align 8, !dbg !3688, !tbaa !3689, !ctir !120
  %4 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3690, !tbaa !2995
  %interactive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %4, i32 0, i32 1, !dbg !3691, !ctir !214
  store i32 5, i32* %interactive, align 4, !dbg !3692, !tbaa !3693, !ctir !100
  %5 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3694, !tbaa !2995
  %stdin_tty = getelementptr inbounds %struct.rm_options, %struct.rm_options* %5, i32 0, i32 7, !dbg !3695, !ctir !214
  store i8 0, i8* %stdin_tty, align 1, !dbg !3696, !tbaa !3697, !ctir !120
  %6 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3698, !tbaa !2995
  %verbose = getelementptr inbounds %struct.rm_options, %struct.rm_options* %6, i32 0, i32 8, !dbg !3699, !ctir !214
  store i8 0, i8* %verbose, align 2, !dbg !3700, !tbaa !3646, !ctir !120
  %7 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3701, !tbaa !2995
  %require_restore_cwd = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 9, !dbg !3702, !ctir !214
  store i8 1, i8* %require_restore_cwd, align 1, !dbg !3703, !tbaa !3704, !ctir !120
  %call = call %struct.timespec* @get_root_dev_ino(%struct.timespec* @rm_option_init.dev_ino_buf), !dbg !3705
  %8 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3707, !tbaa !2995
  %root_dev_ino = getelementptr inbounds %struct.rm_options, %struct.rm_options* %8, i32 0, i32 5, !dbg !3708, !ctir !214
  store %struct.timespec* %call, %struct.timespec** %root_dev_ino, align 8, !dbg !3709, !tbaa !3710, !ctir !222
  %9 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3711, !tbaa !2995
  %root_dev_ino1 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %9, i32 0, i32 5, !dbg !3713, !ctir !214
  %10 = load %struct.timespec*, %struct.timespec** %root_dev_ino1, align 8, !dbg !3713, !tbaa !3710, !ctir !222
  %cmp = icmp eq %struct.timespec* %10, null, !dbg !3714
  br i1 %cmp, label %if.then, label %if.end, !dbg !3715

if.then:                                          ; preds = %entry
  %call2 = call i32* @__errno_location() #15, !dbg !3716
  %11 = load i32, i32* %call2, align 4, !dbg !3716, !tbaa !2982, !ctir !7
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !3716
  %call4 = call i8* @quotearg_style(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i64 0, i64 0)), !dbg !3716
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %11, i8* %call3, i8* %call4), !dbg !3716
  unreachable, !dbg !3716

if.end:                                           ; preds = %entry
  %12 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3717, !tbaa !2995
  %preserve_all_root = getelementptr inbounds %struct.rm_options, %struct.rm_options* %12, i32 0, i32 6, !dbg !3718, !ctir !214
  store i8 0, i8* %preserve_all_root, align 8, !dbg !3719, !tbaa !3720, !ctir !120
  ret void, !dbg !3721
}

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rm(i8** %file, %struct.rm_options* %x) #4 !dbg !3722 !ctir !1335 {
entry:
  %file.addr = alloca i8**, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %rm_status = alloca i32, align 4, !ctir !106
  %bit_flags = alloca i32, align 4, !ctir !7
  %fts = alloca %struct.FTS*, align 8, !ctir !1358
  %ent = alloca %struct._ftsent*, align 8, !ctir !1451
  %s = alloca i32, align 4, !ctir !106
  store i8** %file, i8*** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %file.addr, metadata !3723, metadata !DIExpression()), !dbg !3724
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3725, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.declare(metadata i32* %rm_status, metadata !3727, metadata !DIExpression()), !dbg !3728
  store i32 2, i32* %rm_status, align 4, !dbg !3728, !tbaa !3657
  %0 = load i8**, i8*** %file.addr, align 8, !dbg !3729, !tbaa !2995
  %1 = load i8*, i8** %0, align 8, !dbg !3731, !tbaa !2995, !ctir !1338
  %tobool = icmp ne i8* %1, null, !dbg !3731
  br i1 %tobool, label %if.then, label %if.end31, !dbg !3732

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %bit_flags, metadata !3733, metadata !DIExpression()), !dbg !3735
  store i32 536, i32* %bit_flags, align 4, !dbg !3735, !tbaa !2982
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3736, !tbaa !2995
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 2, !dbg !3738, !ctir !1340
  %3 = load i8, i8* %one_file_system, align 8, !dbg !3738, !tbaa !3689
  %tobool1 = trunc i8 %3 to i1, !dbg !3738, !ctir !120
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !3739

if.then2:                                         ; preds = %if.then
  %4 = load i32, i32* %bit_flags, align 4, !dbg !3740, !tbaa !2982
  %or = or i32 %4, 64, !dbg !3740
  store i32 %or, i32* %bit_flags, align 4, !dbg !3740, !tbaa !2982
  br label %if.end, !dbg !3741

if.end:                                           ; preds = %if.then2, %if.then
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts, metadata !3742, metadata !DIExpression()), !dbg !3743
  %5 = load i8**, i8*** %file.addr, align 8, !dbg !3744, !tbaa !2995
  %6 = load i32, i32* %bit_flags, align 4, !dbg !3745, !tbaa !2982
  %call = call %struct.FTS* @xfts_open(i8** %5, i32 %6, i32 (%struct._ftsent**, %struct._ftsent**)* null), !dbg !3746
  store %struct.FTS* %call, %struct.FTS** %fts, align 8, !dbg !3743, !tbaa !2995
  br label %while.body, !dbg !3747

while.body:                                       ; preds = %if.end, %do.end
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent, metadata !3748, metadata !DIExpression()), !dbg !3750
  %7 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !3751, !tbaa !2995
  %call3 = call %struct._ftsent* @rpl_fts_read(%struct.FTS* %7), !dbg !3752
  store %struct._ftsent* %call3, %struct._ftsent** %ent, align 8, !dbg !3753, !tbaa !2995
  %8 = load %struct._ftsent*, %struct._ftsent** %ent, align 8, !dbg !3754, !tbaa !2995
  %cmp = icmp eq %struct._ftsent* %8, null, !dbg !3756
  br i1 %cmp, label %if.then4, label %if.end11, !dbg !3757

if.then4:                                         ; preds = %while.body
  %call5 = call i32* @__errno_location() #15, !dbg !3758
  %9 = load i32, i32* %call5, align 4, !dbg !3758, !tbaa !2982, !ctir !7
  %cmp6 = icmp ne i32 %9, 0, !dbg !3761
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !3762

if.then7:                                         ; preds = %if.then4
  %call8 = call i32* @__errno_location() #15, !dbg !3763
  %10 = load i32, i32* %call8, align 4, !dbg !3763, !tbaa !2982, !ctir !7
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !3765
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call9), !dbg !3766
  store i32 4, i32* %rm_status, align 4, !dbg !3767, !tbaa !3657
  br label %if.end10, !dbg !3768

if.end10:                                         ; preds = %if.then7, %if.then4
  br label %while.end, !dbg !3769

if.end11:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3770, metadata !DIExpression()), !dbg !3771
  %11 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !3772, !tbaa !2995
  %12 = load %struct._ftsent*, %struct._ftsent** %ent, align 8, !dbg !3773, !tbaa !2995
  %13 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3774, !tbaa !2995
  %call12 = call i32 @rm_fts(%struct.FTS* %11, %struct._ftsent* %12, %struct.rm_options* %13), !dbg !3775
  store i32 %call12, i32* %s, align 4, !dbg !3771, !tbaa !3657
  %14 = load i32, i32* %s, align 4, !dbg !3776, !tbaa !3657
  %cmp13 = icmp eq i32 %14, 2, !dbg !3776
  br i1 %cmp13, label %if.then17, label %lor.lhs.false, !dbg !3776

lor.lhs.false:                                    ; preds = %if.end11
  %15 = load i32, i32* %s, align 4, !dbg !3776, !tbaa !3657
  %cmp14 = icmp eq i32 %15, 3, !dbg !3776
  br i1 %cmp14, label %if.then17, label %lor.lhs.false15, !dbg !3776

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %16 = load i32, i32* %s, align 4, !dbg !3776, !tbaa !3657
  %cmp16 = icmp eq i32 %16, 4, !dbg !3776
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !3779

if.then17:                                        ; preds = %lor.lhs.false15, %lor.lhs.false, %if.end11
  br label %if.end18, !dbg !3779

if.else:                                          ; preds = %lor.lhs.false15
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.63, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.64, i64 0, i64 0), i32 609, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.rm, i64 0, i64 0)) #13, !dbg !3776
  unreachable, !dbg !3776

if.end18:                                         ; preds = %if.then17
  br label %do.body, !dbg !3780

do.body:                                          ; preds = %if.end18
  %17 = load i32, i32* %s, align 4, !dbg !3781, !tbaa !3657
  %cmp19 = icmp eq i32 %17, 4, !dbg !3781
  br i1 %cmp19, label %if.then23, label %lor.lhs.false20, !dbg !3781

lor.lhs.false20:                                  ; preds = %do.body
  %18 = load i32, i32* %s, align 4, !dbg !3781, !tbaa !3657
  %cmp21 = icmp eq i32 %18, 3, !dbg !3781
  br i1 %cmp21, label %land.lhs.true, label %if.end24, !dbg !3781

land.lhs.true:                                    ; preds = %lor.lhs.false20
  %19 = load i32, i32* %rm_status, align 4, !dbg !3781, !tbaa !3657
  %cmp22 = icmp eq i32 %19, 2, !dbg !3781
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !3784

if.then23:                                        ; preds = %land.lhs.true, %do.body
  %20 = load i32, i32* %s, align 4, !dbg !3781, !tbaa !3657
  store i32 %20, i32* %rm_status, align 4, !dbg !3781, !tbaa !3657
  br label %if.end24, !dbg !3781

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %lor.lhs.false20
  br label %do.end, !dbg !3784

do.end:                                           ; preds = %if.end24
  br label %while.body, !dbg !3747, !llvm.loop !3785

while.end:                                        ; preds = %if.end10
  %21 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !3787, !tbaa !2995
  %call25 = call i32 @rpl_fts_close(%struct.FTS* %21), !dbg !3789
  %cmp26 = icmp ne i32 %call25, 0, !dbg !3790
  br i1 %cmp26, label %if.then27, label %if.end30, !dbg !3791

if.then27:                                        ; preds = %while.end
  %call28 = call i32* @__errno_location() #15, !dbg !3792
  %22 = load i32, i32* %call28, align 4, !dbg !3792, !tbaa !2982, !ctir !7
  %call29 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.65, i64 0, i64 0)) #10, !dbg !3794
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %22, i8* %call29), !dbg !3795
  store i32 4, i32* %rm_status, align 4, !dbg !3796, !tbaa !3657
  br label %if.end30, !dbg !3797

if.end30:                                         ; preds = %if.then27, %while.end
  br label %if.end31, !dbg !3798

if.end31:                                         ; preds = %if.end30, %entry
  %23 = load i32, i32* %rm_status, align 4, !dbg !3799, !tbaa !3657
  ret i32 %23, !dbg !3800
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rm_fts(%struct.FTS* %fts, %struct._ftsent* %ent, %struct.rm_options* %x) #4 !dbg !3801 !ctir !1453 {
entry:
  %retval = alloca i32, align 4
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %err = alloca i32, align 4, !ctir !7
  %failed = alloca i8, align 1, !ctir !120
  %parent = alloca i8*, align 8, !ctir !9
  %statbuf = alloca %struct.stat, align 8, !ctir !1388
  %is_empty_directory = alloca i32, align 4, !ctir !1455
  %s = alloca i32, align 4, !ctir !106
  %is_dir = alloca i8, align 1, !ctir !120
  %s126 = alloca i32, align 4, !ctir !106
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !3802, metadata !DIExpression()), !dbg !3803
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !3804, metadata !DIExpression()), !dbg !3805
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3806, metadata !DIExpression()), !dbg !3807
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3808, !tbaa !2995
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 15, !dbg !3809, !ctir !1452
  %1 = load i16, i16* %fts_info, align 8, !dbg !3809, !tbaa !3810, !ctir !33
  %conv = zext i16 %1 to i32, !dbg !3808
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 8, label %sw.bb94
    i32 10, label %sw.bb94
    i32 12, label %sw.bb94
    i32 13, label %sw.bb94
    i32 6, label %sw.bb94
    i32 4, label %sw.bb94
    i32 11, label %sw.bb94
    i32 3, label %sw.bb94
    i32 2, label %sw.bb135
    i32 7, label %sw.bb141
  ], !dbg !3812

sw.bb:                                            ; preds = %entry
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3813, !tbaa !2995
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 3, !dbg !3816, !ctir !1340
  %3 = load i8, i8* %recursive, align 1, !dbg !3816, !tbaa !3685
  %tobool = trunc i8 %3 to i1, !dbg !3816, !ctir !120
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3817

land.lhs.true:                                    ; preds = %sw.bb
  %4 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3818, !tbaa !2995
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %4, i32 0, i32 4, !dbg !3819, !ctir !1340
  %5 = load i8, i8* %remove_empty_directories, align 2, !dbg !3819, !tbaa !3681
  %tobool1 = trunc i8 %5 to i1, !dbg !3819, !ctir !120
  br i1 %tobool1, label %land.lhs.true3, label %if.then, !dbg !3820

land.lhs.true3:                                   ; preds = %land.lhs.true
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3821, !tbaa !2995
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 6, !dbg !3822, !ctir !1359
  %7 = load i32, i32* %fts_cwd_fd, align 4, !dbg !3822, !tbaa !3823, !ctir !7
  %8 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3826, !tbaa !2995
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 6, !dbg !3827, !ctir !1452
  %9 = load i8*, i8** %fts_accpath, align 8, !dbg !3827, !tbaa !2995, !ctir !9
  %call = call zeroext i1 @is_empty_dir(i32 %7, i8* %9), !dbg !3828
  br i1 %call, label %if.end, label %if.then, !dbg !3829

if.then:                                          ; preds = %land.lhs.true3, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3830, metadata !DIExpression()), !dbg !3832
  %10 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3833, !tbaa !2995
  %remove_empty_directories5 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %10, i32 0, i32 4, !dbg !3834, !ctir !1340
  %11 = load i8, i8* %remove_empty_directories5, align 2, !dbg !3834, !tbaa !3681
  %tobool6 = trunc i8 %11 to i1, !dbg !3834, !ctir !120
  %12 = zext i1 %tobool6 to i64, !dbg !3833
  %cond = select i1 %tobool6, i32 39, i32 21, !dbg !3833
  store i32 %cond, i32* %err, align 4, !dbg !3832, !tbaa !2982
  %13 = load i32, i32* %err, align 4, !dbg !3835, !tbaa !2982
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #10, !dbg !3836
  %14 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3837, !tbaa !2995
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 7, !dbg !3837, !ctir !1452
  %15 = load i8*, i8** %fts_path, align 8, !dbg !3837, !tbaa !2995, !ctir !9
  %call9 = call i8* @quotearg_style(i32 4, i8* %15), !dbg !3837
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %13, i8* %call8, i8* %call9), !dbg !3838
  %16 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3839, !tbaa !2995
  call void @mark_ancestor_dirs(%struct._ftsent* %16), !dbg !3840
  %17 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3841, !tbaa !2995
  %18 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3842, !tbaa !2995
  call void @fts_skip_tree(%struct.FTS* %17, %struct._ftsent* %18), !dbg !3843
  store i32 4, i32* %retval, align 4, !dbg !3844
  br label %return, !dbg !3844

if.end:                                           ; preds = %land.lhs.true3, %sw.bb
  %19 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3845, !tbaa !2995
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !3847, !ctir !1452
  %20 = load i64, i64* %fts_level, align 8, !dbg !3847, !tbaa !3848, !ctir !566
  %cmp = icmp eq i64 %20, 0, !dbg !3849
  br i1 %cmp, label %if.then11, label %if.end80, !dbg !3850

if.then11:                                        ; preds = %if.end
  %21 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3851, !tbaa !2995
  %fts_accpath12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !3854, !ctir !1452
  %22 = load i8*, i8** %fts_accpath12, align 8, !dbg !3854, !tbaa !2995, !ctir !9
  %call13 = call i8* @last_component(i8* %22) #14, !dbg !3855
  %call14 = call zeroext i1 @dot_or_dotdot(i8* %call13), !dbg !3856
  br i1 %call14, label %if.then15, label %if.end21, !dbg !3857

if.then15:                                        ; preds = %if.then11
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.67, i64 0, i64 0)) #10, !dbg !3858
  %call17 = call i8* @quotearg_n_style(i32 0, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.68, i64 0, i64 0)), !dbg !3860
  %call18 = call i8* @quotearg_n_style(i32 1, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.69, i64 0, i64 0)), !dbg !3861
  %23 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3862, !tbaa !2995
  %fts_path19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 7, !dbg !3862, !ctir !1452
  %24 = load i8*, i8** %fts_path19, align 8, !dbg !3862, !tbaa !2995, !ctir !9
  %call20 = call i8* @quotearg_n_style(i32 2, i32 4, i8* %24), !dbg !3862
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call16, i8* %call17, i8* %call18, i8* %call20), !dbg !3863
  %25 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3864, !tbaa !2995
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3865, !tbaa !2995
  call void @fts_skip_tree(%struct.FTS* %25, %struct._ftsent* %26), !dbg !3866
  store i32 4, i32* %retval, align 4, !dbg !3867
  br label %return, !dbg !3867

if.end21:                                         ; preds = %if.then11
  %27 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3868, !tbaa !2995
  %root_dev_ino = getelementptr inbounds %struct.rm_options, %struct.rm_options* %27, i32 0, i32 5, !dbg !3868, !ctir !1340
  %28 = load %struct.timespec*, %struct.timespec** %root_dev_ino, align 8, !dbg !3868, !tbaa !3710, !ctir !1349
  %tobool22 = icmp ne %struct.timespec* %28, null, !dbg !3868
  br i1 %tobool22, label %land.lhs.true23, label %if.end50, !dbg !3868

land.lhs.true23:                                  ; preds = %if.end21
  %29 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3868, !tbaa !2995
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !3868, !ctir !1452
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !3868
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 1, !dbg !3868, !ctir !1388
  %30 = load i64, i64* %st_ino, align 8, !dbg !3868, !tbaa !3870, !ctir !228
  %31 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3868, !tbaa !2995
  %root_dev_ino24 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %31, i32 0, i32 5, !dbg !3868, !ctir !1340
  %32 = load %struct.timespec*, %struct.timespec** %root_dev_ino24, align 8, !dbg !3868, !tbaa !3710, !ctir !1349
  %st_ino25 = getelementptr inbounds %struct.timespec, %struct.timespec* %32, i32 0, i32 0, !dbg !3868, !ctir !1350
  %33 = load i64, i64* %st_ino25, align 8, !dbg !3868, !tbaa !3871, !ctir !227
  %cmp26 = icmp eq i64 %30, %33, !dbg !3868
  br i1 %cmp26, label %land.lhs.true28, label %if.end50, !dbg !3868

land.lhs.true28:                                  ; preds = %land.lhs.true23
  %34 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3868, !tbaa !2995
  %fts_statp29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 18, !dbg !3868, !ctir !1452
  %arraydecay30 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp29, i64 0, i64 0, !dbg !3868
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay30, i32 0, i32 0, !dbg !3868, !ctir !1388
  %35 = load i64, i64* %st_dev, align 8, !dbg !3868, !tbaa !3873, !ctir !231
  %36 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3868, !tbaa !2995
  %root_dev_ino31 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %36, i32 0, i32 5, !dbg !3868, !ctir !1340
  %37 = load %struct.timespec*, %struct.timespec** %root_dev_ino31, align 8, !dbg !3868, !tbaa !3710, !ctir !1349
  %st_dev32 = getelementptr inbounds %struct.timespec, %struct.timespec* %37, i32 0, i32 1, !dbg !3868, !ctir !1350
  %38 = load i64, i64* %st_dev32, align 8, !dbg !3868, !tbaa !3874, !ctir !230
  %cmp33 = icmp eq i64 %35, %38, !dbg !3868
  br i1 %cmp33, label %if.then35, label %if.end50, !dbg !3875

if.then35:                                        ; preds = %land.lhs.true28
  br label %do.body, !dbg !3876

do.body:                                          ; preds = %if.then35
  %39 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3878, !tbaa !2995
  %fts_path36 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %39, i32 0, i32 7, !dbg !3878, !ctir !1452
  %40 = load i8*, i8** %fts_path36, align 8, !dbg !3878, !tbaa !2995, !ctir !9
  %call37 = call i32 @strcmp(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.70, i64 0, i64 0)) #14, !dbg !3878
  %cmp38 = icmp eq i32 %call37, 0, !dbg !3878
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !3881

if.then40:                                        ; preds = %do.body
  %call41 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.71, i64 0, i64 0)) #10, !dbg !3878
  %41 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3878, !tbaa !2995
  %fts_path42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %41, i32 0, i32 7, !dbg !3878, !ctir !1452
  %42 = load i8*, i8** %fts_path42, align 8, !dbg !3878, !tbaa !2995, !ctir !9
  %call43 = call i8* @quotearg_style(i32 4, i8* %42), !dbg !3878
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call41, i8* %call43), !dbg !3878
  br label %if.end48, !dbg !3878

if.else:                                          ; preds = %do.body
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.10.72, i64 0, i64 0)) #10, !dbg !3878
  %43 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3878, !tbaa !2995
  %fts_path45 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %43, i32 0, i32 7, !dbg !3878, !ctir !1452
  %44 = load i8*, i8** %fts_path45, align 8, !dbg !3878, !tbaa !2995, !ctir !9
  %call46 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %44), !dbg !3878
  %call47 = call i8* @quotearg_n_style(i32 1, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.70, i64 0, i64 0)), !dbg !3878
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call44, i8* %call46, i8* %call47), !dbg !3878
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then40
  %call49 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.11.73, i64 0, i64 0)) #10, !dbg !3881
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call49), !dbg !3881
  br label %do.end, !dbg !3881

do.end:                                           ; preds = %if.end48
  %45 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3882, !tbaa !2995
  %46 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3883, !tbaa !2995
  call void @fts_skip_tree(%struct.FTS* %45, %struct._ftsent* %46), !dbg !3884
  store i32 4, i32* %retval, align 4, !dbg !3885
  br label %return, !dbg !3885

if.end50:                                         ; preds = %land.lhs.true28, %land.lhs.true23, %if.end21
  %47 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3886, !tbaa !2995
  %preserve_all_root = getelementptr inbounds %struct.rm_options, %struct.rm_options* %47, i32 0, i32 6, !dbg !3888, !ctir !1340
  %48 = load i8, i8* %preserve_all_root, align 8, !dbg !3888, !tbaa !3720
  %tobool51 = trunc i8 %48 to i1, !dbg !3888, !ctir !120
  br i1 %tobool51, label %if.then52, label %if.end79, !dbg !3889

if.then52:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i8* %failed, metadata !3890, metadata !DIExpression()), !dbg !3892
  store i8 0, i8* %failed, align 1, !dbg !3892, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8** %parent, metadata !3893, metadata !DIExpression()), !dbg !3894
  %49 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3895, !tbaa !2995
  %fts_accpath53 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %49, i32 0, i32 6, !dbg !3896, !ctir !1452
  %50 = load i8*, i8** %fts_accpath53, align 8, !dbg !3896, !tbaa !2995, !ctir !9
  %call54 = call i8* @file_name_concat(i8* %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.69, i64 0, i64 0), i8** null), !dbg !3897
  store i8* %call54, i8** %parent, align 8, !dbg !3894, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat* %statbuf, metadata !3898, metadata !DIExpression()), !dbg !3899
  %51 = load i8*, i8** %parent, align 8, !dbg !3900, !tbaa !2995
  %tobool55 = icmp ne i8* %51, null, !dbg !3900
  br i1 %tobool55, label %lor.lhs.false, label %if.then58, !dbg !3902

lor.lhs.false:                                    ; preds = %if.then52
  %52 = load i8*, i8** %parent, align 8, !dbg !3903, !tbaa !2995
  %call56 = call i32 @lstat(i8* %52, %struct.stat* %statbuf) #10, !dbg !3904
  %tobool57 = icmp ne i32 %call56, 0, !dbg !3904
  br i1 %tobool57, label %if.then58, label %if.end63, !dbg !3905

if.then58:                                        ; preds = %lor.lhs.false, %if.then52
  %call59 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12.74, i64 0, i64 0)) #10, !dbg !3906
  %53 = load i8*, i8** %parent, align 8, !dbg !3908, !tbaa !2995
  %call60 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %53), !dbg !3908
  %54 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3909, !tbaa !2995
  %fts_accpath61 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %54, i32 0, i32 6, !dbg !3909, !ctir !1452
  %55 = load i8*, i8** %fts_accpath61, align 8, !dbg !3909, !tbaa !2995, !ctir !9
  %call62 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %55), !dbg !3909
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call59, i8* %call60, i8* %call62), !dbg !3910
  store i8 1, i8* %failed, align 1, !dbg !3911, !tbaa !3106
  br label %if.end63, !dbg !3912

if.end63:                                         ; preds = %if.then58, %lor.lhs.false
  %56 = load i8*, i8** %parent, align 8, !dbg !3913, !tbaa !2995
  call void @free(i8* %56) #10, !dbg !3914
  %57 = load i8, i8* %failed, align 1, !dbg !3915, !tbaa !3106
  %tobool64 = trunc i8 %57 to i1, !dbg !3915
  br i1 %tobool64, label %if.then70, label %lor.lhs.false66, !dbg !3917

lor.lhs.false66:                                  ; preds = %if.end63
  %58 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3918, !tbaa !2995
  %fts_dev = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 3, !dbg !3919, !ctir !1359
  %59 = load i64, i64* %fts_dev, align 8, !dbg !3919, !tbaa !3920, !ctir !230
  %st_dev67 = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 0, !dbg !3921, !ctir !1388
  %60 = load i64, i64* %st_dev67, align 8, !dbg !3921, !tbaa !3873, !ctir !231
  %cmp68 = icmp ne i64 %59, %60, !dbg !3922
  br i1 %cmp68, label %if.then70, label %if.end78, !dbg !3923

if.then70:                                        ; preds = %lor.lhs.false66, %if.end63
  %61 = load i8, i8* %failed, align 1, !dbg !3924, !tbaa !3106
  %tobool71 = trunc i8 %61 to i1, !dbg !3924
  br i1 %tobool71, label %if.end77, label %if.then72, !dbg !3927

if.then72:                                        ; preds = %if.then70
  %call73 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13.75, i64 0, i64 0)) #10, !dbg !3928
  %62 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3930, !tbaa !2995
  %fts_path74 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %62, i32 0, i32 7, !dbg !3930, !ctir !1452
  %63 = load i8*, i8** %fts_path74, align 8, !dbg !3930, !tbaa !2995, !ctir !9
  %call75 = call i8* @quotearg_style(i32 4, i8* %63), !dbg !3930
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call73, i8* %call75), !dbg !3931
  %call76 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.76, i64 0, i64 0)) #10, !dbg !3932
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call76), !dbg !3933
  br label %if.end77, !dbg !3934

if.end77:                                         ; preds = %if.then72, %if.then70
  %64 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3935, !tbaa !2995
  %65 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3936, !tbaa !2995
  call void @fts_skip_tree(%struct.FTS* %64, %struct._ftsent* %65), !dbg !3937
  store i32 4, i32* %retval, align 4, !dbg !3938
  br label %return, !dbg !3938

if.end78:                                         ; preds = %lor.lhs.false66
  br label %if.end79, !dbg !3939

if.end79:                                         ; preds = %if.end78, %if.end50
  br label %if.end80, !dbg !3940

if.end80:                                         ; preds = %if.end79, %if.end
  call void @llvm.dbg.declare(metadata i32* %is_empty_directory, metadata !3941, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3944, metadata !DIExpression()), !dbg !3945
  %66 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3946, !tbaa !2995
  %67 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3947, !tbaa !2995
  %68 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3948, !tbaa !2995
  %call81 = call i32 @prompt(%struct.FTS* %66, %struct._ftsent* %67, i1 zeroext true, %struct.rm_options* %68, i32 2, i32* %is_empty_directory), !dbg !3949
  store i32 %call81, i32* %s, align 4, !dbg !3945, !tbaa !3657
  %69 = load i32, i32* %s, align 4, !dbg !3950, !tbaa !3657
  %cmp82 = icmp eq i32 %69, 2, !dbg !3952
  br i1 %cmp82, label %land.lhs.true84, label %if.end89, !dbg !3953

land.lhs.true84:                                  ; preds = %if.end80
  %70 = load i32, i32* %is_empty_directory, align 4, !dbg !3954, !tbaa !3657
  %cmp85 = icmp eq i32 %70, 4, !dbg !3955
  br i1 %cmp85, label %if.then87, label %if.end89, !dbg !3956

if.then87:                                        ; preds = %land.lhs.true84
  %71 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3957, !tbaa !2995
  %72 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3959, !tbaa !2995
  %73 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3960, !tbaa !2995
  %call88 = call i32 @excise(%struct.FTS* %71, %struct._ftsent* %72, %struct.rm_options* %73, i1 zeroext true), !dbg !3961
  store i32 %call88, i32* %s, align 4, !dbg !3962, !tbaa !3657
  %74 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3963, !tbaa !2995
  %75 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3964, !tbaa !2995
  call void @fts_skip_tree(%struct.FTS* %74, %struct._ftsent* %75), !dbg !3965
  br label %if.end89, !dbg !3966

if.end89:                                         ; preds = %if.then87, %land.lhs.true84, %if.end80
  %76 = load i32, i32* %s, align 4, !dbg !3967, !tbaa !3657
  %cmp90 = icmp ne i32 %76, 2, !dbg !3969
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !3970

if.then92:                                        ; preds = %if.end89
  %77 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3971, !tbaa !2995
  call void @mark_ancestor_dirs(%struct._ftsent* %77), !dbg !3973
  %78 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3974, !tbaa !2995
  %79 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3975, !tbaa !2995
  call void @fts_skip_tree(%struct.FTS* %78, %struct._ftsent* %79), !dbg !3976
  br label %if.end93, !dbg !3977

if.end93:                                         ; preds = %if.then92, %if.end89
  %80 = load i32, i32* %s, align 4, !dbg !3978, !tbaa !3657
  store i32 %80, i32* %retval, align 4, !dbg !3979
  br label %return, !dbg !3979

sw.bb94:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %81 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3980, !tbaa !2995
  %fts_info95 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 15, !dbg !3983, !ctir !1452
  %82 = load i16, i16* %fts_info95, align 8, !dbg !3983, !tbaa !3810, !ctir !33
  %conv96 = zext i16 %82 to i32, !dbg !3980
  %cmp97 = icmp eq i32 %conv96, 6, !dbg !3984
  br i1 %cmp97, label %land.lhs.true99, label %if.end117, !dbg !3985

land.lhs.true99:                                  ; preds = %sw.bb94
  %83 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3986, !tbaa !2995
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %83, i32 0, i32 2, !dbg !3987, !ctir !1340
  %84 = load i8, i8* %one_file_system, align 8, !dbg !3987, !tbaa !3689
  %tobool100 = trunc i8 %84 to i1, !dbg !3987, !ctir !120
  br i1 %tobool100, label %land.lhs.true102, label %if.end117, !dbg !3988

land.lhs.true102:                                 ; preds = %land.lhs.true99
  %85 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3989, !tbaa !2995
  %fts_level103 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %85, i32 0, i32 12, !dbg !3990, !ctir !1452
  %86 = load i64, i64* %fts_level103, align 8, !dbg !3990, !tbaa !3848, !ctir !566
  %cmp104 = icmp slt i64 0, %86, !dbg !3991
  br i1 %cmp104, label %land.lhs.true106, label %if.end117, !dbg !3992

land.lhs.true106:                                 ; preds = %land.lhs.true102
  %87 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3993, !tbaa !2995
  %fts_statp107 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %87, i32 0, i32 18, !dbg !3994, !ctir !1452
  %arraydecay108 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp107, i64 0, i64 0, !dbg !3995
  %st_dev109 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay108, i32 0, i32 0, !dbg !3995, !ctir !1388
  %88 = load i64, i64* %st_dev109, align 8, !dbg !3995, !tbaa !3873, !ctir !231
  %89 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3996, !tbaa !2995
  %fts_dev110 = getelementptr inbounds %struct.FTS, %struct.FTS* %89, i32 0, i32 3, !dbg !3997, !ctir !1359
  %90 = load i64, i64* %fts_dev110, align 8, !dbg !3997, !tbaa !3920, !ctir !230
  %cmp111 = icmp ne i64 %88, %90, !dbg !3998
  br i1 %cmp111, label %if.then113, label %if.end117, !dbg !3999

if.then113:                                       ; preds = %land.lhs.true106
  %91 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4000, !tbaa !2995
  call void @mark_ancestor_dirs(%struct._ftsent* %91), !dbg !4002
  %call114 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13.75, i64 0, i64 0)) #10, !dbg !4003
  %92 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4004, !tbaa !2995
  %fts_path115 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %92, i32 0, i32 7, !dbg !4004, !ctir !1452
  %93 = load i8*, i8** %fts_path115, align 8, !dbg !4004, !tbaa !2995, !ctir !9
  %call116 = call i8* @quotearg_style(i32 4, i8* %93), !dbg !4004
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call114, i8* %call116), !dbg !4005
  store i32 4, i32* %retval, align 4, !dbg !4006
  br label %return, !dbg !4006

if.end117:                                        ; preds = %land.lhs.true106, %land.lhs.true102, %land.lhs.true99, %sw.bb94
  call void @llvm.dbg.declare(metadata i8* %is_dir, metadata !4007, metadata !DIExpression()), !dbg !4008
  %94 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4009, !tbaa !2995
  %fts_info118 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %94, i32 0, i32 15, !dbg !4010, !ctir !1452
  %95 = load i16, i16* %fts_info118, align 8, !dbg !4010, !tbaa !3810, !ctir !33
  %conv119 = zext i16 %95 to i32, !dbg !4009
  %cmp120 = icmp eq i32 %conv119, 6, !dbg !4011
  br i1 %cmp120, label %lor.end, label %lor.rhs, !dbg !4012

lor.rhs:                                          ; preds = %if.end117
  %96 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4013, !tbaa !2995
  %fts_info122 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %96, i32 0, i32 15, !dbg !4014, !ctir !1452
  %97 = load i16, i16* %fts_info122, align 8, !dbg !4014, !tbaa !3810, !ctir !33
  %conv123 = zext i16 %97 to i32, !dbg !4013
  %cmp124 = icmp eq i32 %conv123, 4, !dbg !4015
  br label %lor.end, !dbg !4012

lor.end:                                          ; preds = %lor.rhs, %if.end117
  %98 = phi i1 [ true, %if.end117 ], [ %cmp124, %lor.rhs ]
  %frombool = zext i1 %98 to i8, !dbg !4008
  store i8 %frombool, i8* %is_dir, align 1, !dbg !4008, !tbaa !3106
  call void @llvm.dbg.declare(metadata i32* %s126, metadata !4016, metadata !DIExpression()), !dbg !4017
  %99 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4018, !tbaa !2995
  %100 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4019, !tbaa !2995
  %101 = load i8, i8* %is_dir, align 1, !dbg !4020, !tbaa !3106
  %tobool127 = trunc i8 %101 to i1, !dbg !4020
  %102 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4021, !tbaa !2995
  %call128 = call i32 @prompt(%struct.FTS* %99, %struct._ftsent* %100, i1 zeroext %tobool127, %struct.rm_options* %102, i32 3, i32* null), !dbg !4022
  store i32 %call128, i32* %s126, align 4, !dbg !4017, !tbaa !3657
  %103 = load i32, i32* %s126, align 4, !dbg !4023, !tbaa !3657
  %cmp129 = icmp ne i32 %103, 2, !dbg !4025
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !4026

if.then131:                                       ; preds = %lor.end
  %104 = load i32, i32* %s126, align 4, !dbg !4027, !tbaa !3657
  store i32 %104, i32* %retval, align 4, !dbg !4028
  br label %return, !dbg !4028

if.end132:                                        ; preds = %lor.end
  %105 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4029, !tbaa !2995
  %106 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4030, !tbaa !2995
  %107 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4031, !tbaa !2995
  %108 = load i8, i8* %is_dir, align 1, !dbg !4032, !tbaa !3106
  %tobool133 = trunc i8 %108 to i1, !dbg !4032
  %call134 = call i32 @excise(%struct.FTS* %105, %struct._ftsent* %106, %struct.rm_options* %107, i1 zeroext %tobool133), !dbg !4033
  store i32 %call134, i32* %retval, align 4, !dbg !4034
  br label %return, !dbg !4034

sw.bb135:                                         ; preds = %entry
  br label %do.body136, !dbg !4035

do.body136:                                       ; preds = %sw.bb135
  %call137 = call i8* @gettext(i8* getelementptr inbounds ([186 x i8], [186 x i8]* @.str.15.77, i64 0, i64 0)) #10, !dbg !4036
  %109 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4036, !tbaa !2995
  %fts_path138 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %109, i32 0, i32 7, !dbg !4036, !ctir !1452
  %110 = load i8*, i8** %fts_path138, align 8, !dbg !4036, !tbaa !2995, !ctir !9
  %call139 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %110), !dbg !4036
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call137, i8* %call139), !dbg !4036
  br label %do.end140, !dbg !4036

do.end140:                                        ; preds = %do.body136
  %111 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4038, !tbaa !2995
  %112 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4039, !tbaa !2995
  call void @fts_skip_tree(%struct.FTS* %111, %struct._ftsent* %112), !dbg !4040
  store i32 4, i32* %retval, align 4, !dbg !4041
  br label %return, !dbg !4041

sw.bb141:                                         ; preds = %entry
  %113 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4042, !tbaa !2995
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %113, i32 0, i32 8, !dbg !4043, !ctir !1452
  %114 = load i32, i32* %fts_errno, align 8, !dbg !4043, !tbaa !2982, !ctir !7
  %call142 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.78, i64 0, i64 0)) #10, !dbg !4044
  %115 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4045, !tbaa !2995
  %fts_path143 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %115, i32 0, i32 7, !dbg !4045, !ctir !1452
  %116 = load i8*, i8** %fts_path143, align 8, !dbg !4045, !tbaa !2995, !ctir !9
  %call144 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %116), !dbg !4045
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %114, i8* %call142, i8* %call144), !dbg !4046
  %117 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4047, !tbaa !2995
  %118 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4048, !tbaa !2995
  call void @fts_skip_tree(%struct.FTS* %117, %struct._ftsent* %118), !dbg !4049
  store i32 4, i32* %retval, align 4, !dbg !4050
  br label %return, !dbg !4050

sw.default:                                       ; preds = %entry
  %call145 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.17.79, i64 0, i64 0)) #10, !dbg !4051
  %119 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4052, !tbaa !2995
  %fts_info146 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %119, i32 0, i32 15, !dbg !4053, !ctir !1452
  %120 = load i16, i16* %fts_info146, align 8, !dbg !4053, !tbaa !3810, !ctir !33
  %conv147 = zext i16 %120 to i32, !dbg !4052
  %121 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4054, !tbaa !2995
  %fts_path148 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %121, i32 0, i32 7, !dbg !4054, !ctir !1452
  %122 = load i8*, i8** %fts_path148, align 8, !dbg !4054, !tbaa !2995, !ctir !9
  %call149 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %122), !dbg !4054
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call145, i32 %conv147, i8* %call149, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18.80, i64 0, i64 0)), !dbg !4055
  call void @abort() #13, !dbg !4056
  unreachable, !dbg !4056

return:                                           ; preds = %sw.bb141, %do.end140, %if.end132, %if.then131, %if.then113, %if.end93, %if.end77, %do.end, %if.then15, %if.then
  %123 = load i32, i32* %retval, align 4, !dbg !4057
  ret i32 %123, !dbg !4057
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_empty_dir(i32 %fd_cwd, i8* %dir) #4 !dbg !4058 !ctir !1456 {
entry:
  %retval = alloca i1, align 1
  %fd_cwd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !607
  %dp = alloca %struct.dirent*, align 8, !ctir !1458
  %saved_errno = alloca i32, align 4, !ctir !7
  %fd = alloca i32, align 4, !ctir !7
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd_cwd.addr, metadata !4059, metadata !DIExpression()), !dbg !4060
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !4061, metadata !DIExpression()), !dbg !4062
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !4063, metadata !DIExpression()), !dbg !4064
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !4065, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !4067, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !4069, metadata !DIExpression()), !dbg !4070
  %0 = load i32, i32* %fd_cwd.addr, align 4, !dbg !4071, !tbaa !2982
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !4072, !tbaa !2995
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %0, i8* %1, i32 198912), !dbg !4073
  store i32 %call, i32* %fd, align 4, !dbg !4070, !tbaa !2982
  %2 = load i32, i32* %fd, align 4, !dbg !4074, !tbaa !2982
  %cmp = icmp slt i32 %2, 0, !dbg !4076
  br i1 %cmp, label %if.then, label %if.end, !dbg !4077

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !4078
  br label %return, !dbg !4078

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %fd, align 4, !dbg !4079, !tbaa !2982
  %call1 = call %struct.__dirstream* @fdopendir(i32 %3), !dbg !4080
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !4081, !tbaa !2995
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4082, !tbaa !2995
  %cmp2 = icmp eq %struct.__dirstream* %4, null, !dbg !4084
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !4085

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* %fd, align 4, !dbg !4086, !tbaa !2982
  %call4 = call i32 @close(i32 %5), !dbg !4088
  store i1 false, i1* %retval, align 1, !dbg !4089
  br label %return, !dbg !4089

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #15, !dbg !4090
  store i32 0, i32* %call6, align 4, !dbg !4091, !tbaa !2982, !ctir !7
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4092, !tbaa !2995
  %call7 = call %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %6), !dbg !4093
  store %struct.dirent* %call7, %struct.dirent** %dp, align 8, !dbg !4094, !tbaa !2995
  %call8 = call i32* @__errno_location() #15, !dbg !4095
  %7 = load i32, i32* %call8, align 4, !dbg !4095, !tbaa !2982, !ctir !7
  store i32 %7, i32* %saved_errno, align 4, !dbg !4096, !tbaa !2982
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4097, !tbaa !2995
  %call9 = call i32 @closedir(%struct.__dirstream* %8), !dbg !4098
  %9 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !4099, !tbaa !2995
  %cmp10 = icmp ne %struct.dirent* %9, null, !dbg !4101
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4102

if.then11:                                        ; preds = %if.end5
  store i1 false, i1* %retval, align 1, !dbg !4103
  br label %return, !dbg !4103

if.end12:                                         ; preds = %if.end5
  %10 = load i32, i32* %saved_errno, align 4, !dbg !4104, !tbaa !2982
  %cmp13 = icmp eq i32 %10, 0, !dbg !4105
  %11 = zext i1 %cmp13 to i64, !dbg !4104
  %cond = select i1 %cmp13, i32 1, i32 0, !dbg !4104
  %tobool = icmp ne i32 %cond, 0, !dbg !4104
  store i1 %tobool, i1* %retval, align 1, !dbg !4106
  br label %return, !dbg !4106

return:                                           ; preds = %if.end12, %if.then11, %if.then3, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !4107
  ret i1 %12, !dbg !4107
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mark_ancestor_dirs(%struct._ftsent* %ent) #4 !dbg !4108 !ctir !1469 {
entry:
  %ent.addr = alloca %struct._ftsent*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !1451
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !4109, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !4111, metadata !DIExpression()), !dbg !4112
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4113, !tbaa !2995
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 1, !dbg !4115, !ctir !1452
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !4115, !tbaa !2995, !ctir !1364
  store %struct._ftsent* %1, %struct._ftsent** %p, align 8, !dbg !4116, !tbaa !2995
  br label %for.cond, !dbg !4117

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !4118, !tbaa !2995
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 12, !dbg !4120, !ctir !1452
  %3 = load i64, i64* %fts_level, align 8, !dbg !4120, !tbaa !3848, !ctir !566
  %cmp = icmp sle i64 0, %3, !dbg !4121
  br i1 %cmp, label %for.body, label %for.end, !dbg !4122

for.body:                                         ; preds = %for.cond
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !4123, !tbaa !2995
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 4, !dbg !4126, !ctir !1452
  %5 = load i64, i64* %fts_number, align 8, !dbg !4126, !tbaa !3848, !ctir !31
  %tobool = icmp ne i64 %5, 0, !dbg !4123
  br i1 %tobool, label %if.then, label %if.end, !dbg !4127

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !4128

if.end:                                           ; preds = %for.body
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !4129, !tbaa !2995
  %fts_number1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 4, !dbg !4130, !ctir !1452
  store i64 1, i64* %fts_number1, align 8, !dbg !4131, !tbaa !3848, !ctir !31
  br label %for.inc, !dbg !4132

for.inc:                                          ; preds = %if.end
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !4133, !tbaa !2995
  %fts_parent2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 1, !dbg !4134, !ctir !1452
  %8 = load %struct._ftsent*, %struct._ftsent** %fts_parent2, align 8, !dbg !4134, !tbaa !2995, !ctir !1364
  store %struct._ftsent* %8, %struct._ftsent** %p, align 8, !dbg !4135, !tbaa !2995
  br label %for.cond, !dbg !4136, !llvm.loop !4137

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !4139
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_skip_tree(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !4140 !ctir !1471 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %__x = alloca %struct._ftsent*, align 8, !ctir !1451
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !4141, metadata !DIExpression()), !dbg !4142
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !4143, metadata !DIExpression()), !dbg !4144
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4145, !tbaa !2995
  %1 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4146, !tbaa !2995
  %call = call i32 @rpl_fts_set(%struct.FTS* %0, %struct._ftsent* %1, i32 4), !dbg !4147
  call void @llvm.dbg.declare(metadata %struct._ftsent** %__x, metadata !4148, metadata !DIExpression()), !dbg !4150
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4150, !tbaa !2995
  %call1 = call %struct._ftsent* @rpl_fts_read(%struct.FTS* %2), !dbg !4150
  store %struct._ftsent* %call1, %struct._ftsent** %__x, align 8, !dbg !4150, !tbaa !2995
  %3 = load %struct._ftsent*, %struct._ftsent** %__x, align 8, !dbg !4150, !tbaa !2995
  ret void, !dbg !4151
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #4 !dbg !4152 !ctir !200 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !10
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !4153, metadata !DIExpression()), !dbg !4154
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !4155, !tbaa !2995
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !4155, !ctir !115
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4155, !tbaa !3657
  %conv = sext i8 %1 to i32, !dbg !4155
  %cmp = icmp eq i32 %conv, 46, !dbg !4157
  br i1 %cmp, label %if.then, label %if.else, !dbg !4158

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !4159, metadata !DIExpression()), !dbg !4161
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !4162, !tbaa !2995
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !4163, !tbaa !2995
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !4163, !ctir !115
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !4163, !tbaa !3657
  %conv3 = sext i8 %4 to i32, !dbg !4163
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !4164
  %conv5 = zext i1 %cmp4 to i32, !dbg !4164
  %add = add nsw i32 %conv5, 1, !dbg !4165
  %idxprom = sext i32 %add to i64, !dbg !4162
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !4162, !ctir !115
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !4162, !tbaa !3657
  store i8 %5, i8* %sep, align 1, !dbg !4161, !tbaa !3657
  %6 = load i8, i8* %sep, align 1, !dbg !4166, !tbaa !3657
  %tobool = icmp ne i8 %6, 0, !dbg !4166
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !4167

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !4168, !tbaa !3657
  %conv7 = sext i8 %7 to i32, !dbg !4168
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !4168
  br label %lor.end, !dbg !4167

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !4169
  br label %return, !dbg !4169

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !4170
  br label %return, !dbg !4170

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !4171
  ret i1 %9, !dbg !4171
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @prompt(%struct.FTS* %fts, %struct._ftsent* %ent, i1 zeroext %is_dir, %struct.rm_options* %x, i32 %mode, i32* %is_empty_p) #4 !dbg !4172 !ctir !1473 {
entry:
  %retval = alloca i32, align 4
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %is_dir.addr = alloca i8, align 1
  %x.addr = alloca %struct.rm_options*, align 8
  %mode.addr = alloca i32, align 4
  %is_empty_p.addr = alloca i32*, align 8
  %fd_cwd = alloca i32, align 4, !ctir !7
  %full_name = alloca i8*, align 8, !ctir !115
  %filename = alloca i8*, align 8, !ctir !115
  %st = alloca %struct.stat, align 8, !ctir !1388
  %sbuf = alloca %struct.stat*, align 8, !ctir !1480
  %dirent_type = alloca i32, align 4, !ctir !7
  %write_protected = alloca i32, align 4, !ctir !7
  %is_empty = alloca i8, align 1, !ctir !120
  %wp_errno = alloca i32, align 4, !ctir !7
  %quoted_name = alloca i8*, align 8, !ctir !115
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !4173, metadata !DIExpression()), !dbg !4174
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !4175, metadata !DIExpression()), !dbg !4176
  %frombool = zext i1 %is_dir to i8
  store i8 %frombool, i8* %is_dir.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %is_dir.addr, metadata !4177, metadata !DIExpression()), !dbg !4178
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !4179, metadata !DIExpression()), !dbg !4180
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4181, metadata !DIExpression()), !dbg !4182
  store i32* %is_empty_p, i32** %is_empty_p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32** %is_empty_p.addr, metadata !4183, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.declare(metadata i32* %fd_cwd, metadata !4185, metadata !DIExpression()), !dbg !4186
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4187, !tbaa !2995
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 6, !dbg !4188, !ctir !1476
  %1 = load i32, i32* %fts_cwd_fd, align 4, !dbg !4188, !tbaa !3823, !ctir !7
  store i32 %1, i32* %fd_cwd, align 4, !dbg !4186, !tbaa !2982
  call void @llvm.dbg.declare(metadata i8** %full_name, metadata !4189, metadata !DIExpression()), !dbg !4190
  %2 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4191, !tbaa !2995
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 7, !dbg !4192, !ctir !1478
  %3 = load i8*, i8** %fts_path, align 8, !dbg !4192, !tbaa !2995, !ctir !9
  store i8* %3, i8** %full_name, align 8, !dbg !4190, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %filename, metadata !4193, metadata !DIExpression()), !dbg !4194
  %4 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4195, !tbaa !2995
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 6, !dbg !4196, !ctir !1478
  %5 = load i8*, i8** %fts_accpath, align 8, !dbg !4196, !tbaa !2995, !ctir !9
  store i8* %5, i8** %filename, align 8, !dbg !4194, !tbaa !2995
  %6 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !4197, !tbaa !2995
  %tobool = icmp ne i32* %6, null, !dbg !4197
  br i1 %tobool, label %if.then, label %if.end, !dbg !4199

if.then:                                          ; preds = %entry
  %7 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !4200, !tbaa !2995
  store i32 2, i32* %7, align 4, !dbg !4201, !tbaa !3657, !ctir !1455
  br label %if.end, !dbg !4202

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !4203, metadata !DIExpression()), !dbg !4204
  call void @llvm.dbg.declare(metadata %struct.stat** %sbuf, metadata !4205, metadata !DIExpression()), !dbg !4206
  store %struct.stat* %st, %struct.stat** %sbuf, align 8, !dbg !4206, !tbaa !2995
  %8 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4207, !tbaa !2995
  %call = call %struct.stat* @cache_stat_init(%struct.stat* %8), !dbg !4208
  call void @llvm.dbg.declare(metadata i32* %dirent_type, metadata !4209, metadata !DIExpression()), !dbg !4210
  %9 = load i8, i8* %is_dir.addr, align 1, !dbg !4211, !tbaa !3106
  %tobool1 = trunc i8 %9 to i1, !dbg !4211
  %10 = zext i1 %tobool1 to i64, !dbg !4211
  %cond = select i1 %tobool1, i32 4, i32 0, !dbg !4211
  store i32 %cond, i32* %dirent_type, align 4, !dbg !4210, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %write_protected, metadata !4212, metadata !DIExpression()), !dbg !4213
  store i32 0, i32* %write_protected, align 4, !dbg !4213, !tbaa !2982
  call void @llvm.dbg.declare(metadata i8* %is_empty, metadata !4214, metadata !DIExpression()), !dbg !4215
  store i8 0, i8* %is_empty, align 1, !dbg !4215, !tbaa !3106
  %11 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !4216, !tbaa !2995
  %tobool2 = icmp ne i32* %11, null, !dbg !4216
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !4218

if.then3:                                         ; preds = %if.end
  %12 = load i32, i32* %fd_cwd, align 4, !dbg !4219, !tbaa !2982
  %13 = load i8*, i8** %filename, align 8, !dbg !4221, !tbaa !2995
  %call4 = call zeroext i1 @is_empty_dir(i32 %12, i8* %13), !dbg !4222
  %frombool5 = zext i1 %call4 to i8, !dbg !4223
  store i8 %frombool5, i8* %is_empty, align 1, !dbg !4223, !tbaa !3106
  %14 = load i8, i8* %is_empty, align 1, !dbg !4224, !tbaa !3106
  %tobool6 = trunc i8 %14 to i1, !dbg !4224
  %15 = zext i1 %tobool6 to i64, !dbg !4224
  %cond7 = select i1 %tobool6, i32 4, i32 3, !dbg !4224
  %16 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !4225, !tbaa !2995
  store i32 %cond7, i32* %16, align 4, !dbg !4226, !tbaa !3657, !ctir !1455
  br label %if.end8, !dbg !4227

if.end8:                                          ; preds = %if.then3, %if.end
  %17 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4228, !tbaa !2995
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 4, !dbg !4230, !ctir !1478
  %18 = load i64, i64* %fts_number, align 8, !dbg !4230, !tbaa !3848, !ctir !31
  %tobool9 = icmp ne i64 %18, 0, !dbg !4228
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !4231

if.then10:                                        ; preds = %if.end8
  store i32 3, i32* %retval, align 4, !dbg !4232
  br label %return, !dbg !4232

if.end11:                                         ; preds = %if.end8
  %19 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4233, !tbaa !2995
  %interactive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %19, i32 0, i32 1, !dbg !4235, !ctir !1340
  %20 = load i32, i32* %interactive, align 4, !dbg !4235, !tbaa !3693, !ctir !100
  %cmp = icmp eq i32 %20, 5, !dbg !4236
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !4237

if.then12:                                        ; preds = %if.end11
  store i32 2, i32* %retval, align 4, !dbg !4238
  br label %return, !dbg !4238

if.end13:                                         ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %wp_errno, metadata !4239, metadata !DIExpression()), !dbg !4240
  store i32 0, i32* %wp_errno, align 4, !dbg !4240, !tbaa !2982
  %21 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4241, !tbaa !2995
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %21, i32 0, i32 0, !dbg !4243, !ctir !1340
  %22 = load i8, i8* %ignore_missing_files, align 8, !dbg !4243, !tbaa !3677
  %tobool14 = trunc i8 %22 to i1, !dbg !4243, !ctir !120
  br i1 %tobool14, label %if.end23, label %land.lhs.true, !dbg !4244

land.lhs.true:                                    ; preds = %if.end13
  %23 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4245, !tbaa !2995
  %interactive15 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %23, i32 0, i32 1, !dbg !4246, !ctir !1340
  %24 = load i32, i32* %interactive15, align 4, !dbg !4246, !tbaa !3693, !ctir !100
  %cmp16 = icmp eq i32 %24, 3, !dbg !4247
  br i1 %cmp16, label %land.lhs.true18, label %lor.lhs.false, !dbg !4248

lor.lhs.false:                                    ; preds = %land.lhs.true
  %25 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4249, !tbaa !2995
  %stdin_tty = getelementptr inbounds %struct.rm_options, %struct.rm_options* %25, i32 0, i32 7, !dbg !4250, !ctir !1340
  %26 = load i8, i8* %stdin_tty, align 1, !dbg !4250, !tbaa !3697
  %tobool17 = trunc i8 %26 to i1, !dbg !4250, !ctir !120
  br i1 %tobool17, label %land.lhs.true18, label %if.end23, !dbg !4251

land.lhs.true18:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %27 = load i32, i32* %dirent_type, align 4, !dbg !4252, !tbaa !2982
  %cmp19 = icmp ne i32 %27, 10, !dbg !4253
  br i1 %cmp19, label %if.then20, label %if.end23, !dbg !4254

if.then20:                                        ; preds = %land.lhs.true18
  %28 = load i32, i32* %fd_cwd, align 4, !dbg !4255, !tbaa !2982
  %29 = load i8*, i8** %filename, align 8, !dbg !4257, !tbaa !2995
  %30 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4258, !tbaa !2995
  %call21 = call i32 @write_protected_non_symlink(i32 %28, i8* %29, %struct.stat* %30), !dbg !4259
  store i32 %call21, i32* %write_protected, align 4, !dbg !4260, !tbaa !2982
  %call22 = call i32* @__errno_location() #15, !dbg !4261
  %31 = load i32, i32* %call22, align 4, !dbg !4261, !tbaa !2982, !ctir !7
  store i32 %31, i32* %wp_errno, align 4, !dbg !4262, !tbaa !2982
  br label %if.end23, !dbg !4263

if.end23:                                         ; preds = %if.then20, %land.lhs.true18, %lor.lhs.false, %if.end13
  %32 = load i32, i32* %write_protected, align 4, !dbg !4264, !tbaa !2982
  %tobool24 = icmp ne i32 %32, 0, !dbg !4264
  br i1 %tobool24, label %if.then28, label %lor.lhs.false25, !dbg !4266

lor.lhs.false25:                                  ; preds = %if.end23
  %33 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4267, !tbaa !2995
  %interactive26 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %33, i32 0, i32 1, !dbg !4268, !ctir !1340
  %34 = load i32, i32* %interactive26, align 4, !dbg !4268, !tbaa !3693, !ctir !100
  %cmp27 = icmp eq i32 %34, 3, !dbg !4269
  br i1 %cmp27, label %if.then28, label %if.end99, !dbg !4270

if.then28:                                        ; preds = %lor.lhs.false25, %if.end23
  %35 = load i32, i32* %write_protected, align 4, !dbg !4271, !tbaa !2982
  %cmp29 = icmp sle i32 0, %35, !dbg !4274
  br i1 %cmp29, label %land.lhs.true30, label %if.end47, !dbg !4275

land.lhs.true30:                                  ; preds = %if.then28
  %36 = load i32, i32* %dirent_type, align 4, !dbg !4276, !tbaa !2982
  %cmp31 = icmp eq i32 %36, 0, !dbg !4277
  br i1 %cmp31, label %if.then32, label %if.end47, !dbg !4278

if.then32:                                        ; preds = %land.lhs.true30
  %37 = load i32, i32* %fd_cwd, align 4, !dbg !4279, !tbaa !2982
  %38 = load i8*, i8** %filename, align 8, !dbg !4282, !tbaa !2995
  %39 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4283, !tbaa !2995
  %call33 = call i32 @cache_fstatat(i32 %37, i8* %38, %struct.stat* %39, i32 256), !dbg !4284
  %cmp34 = icmp eq i32 %call33, 0, !dbg !4285
  br i1 %cmp34, label %if.then35, label %if.else44, !dbg !4286

if.then35:                                        ; preds = %if.then32
  %40 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4287, !tbaa !2995
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 3, !dbg !4287, !ctir !1388
  %41 = load i32, i32* %st_mode, align 8, !dbg !4287, !tbaa !3178, !ctir !133
  %and = and i32 %41, 61440, !dbg !4287
  %cmp36 = icmp eq i32 %and, 40960, !dbg !4287
  br i1 %cmp36, label %if.then37, label %if.else, !dbg !4290

if.then37:                                        ; preds = %if.then35
  store i32 10, i32* %dirent_type, align 4, !dbg !4291, !tbaa !2982
  br label %if.end43, !dbg !4292

if.else:                                          ; preds = %if.then35
  %42 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4293, !tbaa !2995
  %st_mode38 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 3, !dbg !4293, !ctir !1388
  %43 = load i32, i32* %st_mode38, align 8, !dbg !4293, !tbaa !3178, !ctir !133
  %and39 = and i32 %43, 61440, !dbg !4293
  %cmp40 = icmp eq i32 %and39, 16384, !dbg !4293
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !4295

if.then41:                                        ; preds = %if.else
  store i32 4, i32* %dirent_type, align 4, !dbg !4296, !tbaa !2982
  br label %if.end42, !dbg !4297

if.end42:                                         ; preds = %if.then41, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then37
  br label %if.end46, !dbg !4298

if.else44:                                        ; preds = %if.then32
  store i32 -1, i32* %write_protected, align 4, !dbg !4299, !tbaa !2982
  %call45 = call i32* @__errno_location() #15, !dbg !4301
  %44 = load i32, i32* %call45, align 4, !dbg !4301, !tbaa !2982, !ctir !7
  store i32 %44, i32* %wp_errno, align 4, !dbg !4302, !tbaa !2982
  br label %if.end46

if.end46:                                         ; preds = %if.else44, %if.end43
  br label %if.end47, !dbg !4303

if.end47:                                         ; preds = %if.end46, %land.lhs.true30, %if.then28
  %45 = load i32, i32* %write_protected, align 4, !dbg !4304, !tbaa !2982
  %cmp48 = icmp sle i32 0, %45, !dbg !4306
  br i1 %cmp48, label %if.then49, label %if.end62, !dbg !4307

if.then49:                                        ; preds = %if.end47
  %46 = load i32, i32* %dirent_type, align 4, !dbg !4308, !tbaa !2982
  switch i32 %46, label %sw.epilog [
    i32 10, label %sw.bb
    i32 4, label %sw.bb54
  ], !dbg !4309

sw.bb:                                            ; preds = %if.then49
  %47 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4310, !tbaa !2995
  %interactive50 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %47, i32 0, i32 1, !dbg !4313, !ctir !1340
  %48 = load i32, i32* %interactive50, align 4, !dbg !4313, !tbaa !3693, !ctir !100
  %cmp51 = icmp ne i32 %48, 3, !dbg !4314
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !4315

if.then52:                                        ; preds = %sw.bb
  store i32 2, i32* %retval, align 4, !dbg !4316
  br label %return, !dbg !4316

if.end53:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !4317

sw.bb54:                                          ; preds = %if.then49
  %49 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4318, !tbaa !2995
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %49, i32 0, i32 3, !dbg !4320, !ctir !1340
  %50 = load i8, i8* %recursive, align 1, !dbg !4320, !tbaa !3685
  %tobool55 = trunc i8 %50 to i1, !dbg !4320, !ctir !120
  br i1 %tobool55, label %if.end61, label %lor.lhs.false56, !dbg !4321

lor.lhs.false56:                                  ; preds = %sw.bb54
  %51 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4322, !tbaa !2995
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %51, i32 0, i32 4, !dbg !4323, !ctir !1340
  %52 = load i8, i8* %remove_empty_directories, align 2, !dbg !4323, !tbaa !3681
  %tobool57 = trunc i8 %52 to i1, !dbg !4323, !ctir !120
  br i1 %tobool57, label %land.lhs.true58, label %if.then60, !dbg !4324

land.lhs.true58:                                  ; preds = %lor.lhs.false56
  %53 = load i8, i8* %is_empty, align 1, !dbg !4325, !tbaa !3106
  %tobool59 = trunc i8 %53 to i1, !dbg !4325
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !4326

if.then60:                                        ; preds = %land.lhs.true58, %lor.lhs.false56
  store i32 -1, i32* %write_protected, align 4, !dbg !4327, !tbaa !2982
  store i32 21, i32* %wp_errno, align 4, !dbg !4329, !tbaa !2982
  br label %if.end61, !dbg !4330

if.end61:                                         ; preds = %if.then60, %land.lhs.true58, %sw.bb54
  br label %sw.epilog, !dbg !4331

sw.epilog:                                        ; preds = %if.then49, %if.end61, %if.end53
  br label %if.end62, !dbg !4332

if.end62:                                         ; preds = %sw.epilog, %if.end47
  call void @llvm.dbg.declare(metadata i8** %quoted_name, metadata !4333, metadata !DIExpression()), !dbg !4334
  %54 = load i8*, i8** %full_name, align 8, !dbg !4335, !tbaa !2995
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !4335
  store i8* %call63, i8** %quoted_name, align 8, !dbg !4334, !tbaa !2995
  %55 = load i32, i32* %write_protected, align 4, !dbg !4336, !tbaa !2982
  %cmp64 = icmp slt i32 %55, 0, !dbg !4338
  br i1 %cmp64, label %if.then65, label %if.end67, !dbg !4339

if.then65:                                        ; preds = %if.end62
  %56 = load i32, i32* %wp_errno, align 4, !dbg !4340, !tbaa !2982
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #10, !dbg !4342
  %57 = load i8*, i8** %quoted_name, align 8, !dbg !4343, !tbaa !2995
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %56, i8* %call66, i8* %57), !dbg !4344
  store i32 4, i32* %retval, align 4, !dbg !4345
  br label %return, !dbg !4345

if.end67:                                         ; preds = %if.end62
  %58 = load i32, i32* %dirent_type, align 4, !dbg !4346, !tbaa !2982
  %cmp68 = icmp eq i32 %58, 4, !dbg !4348
  br i1 %cmp68, label %land.lhs.true69, label %if.else79, !dbg !4349

land.lhs.true69:                                  ; preds = %if.end67
  %59 = load i32, i32* %mode.addr, align 4, !dbg !4350, !tbaa !3657
  %cmp70 = icmp eq i32 %59, 2, !dbg !4351
  br i1 %cmp70, label %land.lhs.true71, label %if.else79, !dbg !4352

land.lhs.true71:                                  ; preds = %land.lhs.true69
  %60 = load i8, i8* %is_empty, align 1, !dbg !4353, !tbaa !3106
  %tobool72 = trunc i8 %60 to i1, !dbg !4353
  br i1 %tobool72, label %if.else79, label %if.then73, !dbg !4354

if.then73:                                        ; preds = %land.lhs.true71
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4355, !tbaa !2995
  %62 = load i32, i32* %write_protected, align 4, !dbg !4356, !tbaa !2982
  %tobool74 = icmp ne i32 %62, 0, !dbg !4356
  br i1 %tobool74, label %cond.true, label %cond.false, !dbg !4356

cond.true:                                        ; preds = %if.then73
  %call75 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.19.83, i64 0, i64 0)) #10, !dbg !4357
  br label %cond.end, !dbg !4356

cond.false:                                       ; preds = %if.then73
  %call76 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20.84, i64 0, i64 0)) #10, !dbg !4358
  br label %cond.end, !dbg !4356

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond77 = phi i8* [ %call75, %cond.true ], [ %call76, %cond.false ], !dbg !4356
  %63 = load i8*, i8** @program_name, align 8, !dbg !4359, !tbaa !2995
  %64 = load i8*, i8** %quoted_name, align 8, !dbg !4360, !tbaa !2995
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %cond77, i8* %63, i8* %64), !dbg !4361
  br label %if.end95, !dbg !4361

if.else79:                                        ; preds = %land.lhs.true71, %land.lhs.true69, %if.end67
  %65 = load i32, i32* %fd_cwd, align 4, !dbg !4362, !tbaa !2982
  %66 = load i8*, i8** %filename, align 8, !dbg !4365, !tbaa !2995
  %67 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4366, !tbaa !2995
  %call80 = call i32 @cache_fstatat(i32 %65, i8* %66, %struct.stat* %67, i32 256), !dbg !4367
  %cmp81 = icmp ne i32 %call80, 0, !dbg !4368
  br i1 %cmp81, label %if.then82, label %if.end85, !dbg !4369

if.then82:                                        ; preds = %if.else79
  %call83 = call i32* @__errno_location() #15, !dbg !4370
  %68 = load i32, i32* %call83, align 4, !dbg !4370, !tbaa !2982, !ctir !7
  %call84 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #10, !dbg !4372
  %69 = load i8*, i8** %quoted_name, align 8, !dbg !4373, !tbaa !2995
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %68, i8* %call84, i8* %69), !dbg !4374
  store i32 4, i32* %retval, align 4, !dbg !4375
  br label %return, !dbg !4375

if.end85:                                         ; preds = %if.else79
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4376, !tbaa !2995
  %71 = load i32, i32* %write_protected, align 4, !dbg !4377, !tbaa !2982
  %tobool86 = icmp ne i32 %71, 0, !dbg !4377
  br i1 %tobool86, label %cond.true87, label %cond.false89, !dbg !4377

cond.true87:                                      ; preds = %if.end85
  %call88 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21.85, i64 0, i64 0)) #10, !dbg !4378
  br label %cond.end91, !dbg !4377

cond.false89:                                     ; preds = %if.end85
  %call90 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22.86, i64 0, i64 0)) #10, !dbg !4379
  br label %cond.end91, !dbg !4377

cond.end91:                                       ; preds = %cond.false89, %cond.true87
  %cond92 = phi i8* [ %call88, %cond.true87 ], [ %call90, %cond.false89 ], !dbg !4377
  %72 = load i8*, i8** @program_name, align 8, !dbg !4380, !tbaa !2995
  %73 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4381, !tbaa !2995
  %call93 = call i8* @file_type(%struct.stat* %73) #14, !dbg !4382
  %74 = load i8*, i8** %quoted_name, align 8, !dbg !4383, !tbaa !2995
  %call94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* %cond92, i8* %72, i8* %call93, i8* %74), !dbg !4384
  br label %if.end95

if.end95:                                         ; preds = %cond.end91, %cond.end
  %call96 = call zeroext i1 @yesno(), !dbg !4385
  br i1 %call96, label %if.end98, label %if.then97, !dbg !4387

if.then97:                                        ; preds = %if.end95
  store i32 3, i32* %retval, align 4, !dbg !4388
  br label %return, !dbg !4388

if.end98:                                         ; preds = %if.end95
  br label %if.end99, !dbg !4389

if.end99:                                         ; preds = %if.end98, %lor.lhs.false25
  store i32 2, i32* %retval, align 4, !dbg !4390
  br label %return, !dbg !4390

return:                                           ; preds = %if.end99, %if.then97, %if.then82, %if.then65, %if.then52, %if.then12, %if.then10
  %75 = load i32, i32* %retval, align 4, !dbg !4391
  ret i32 %75, !dbg !4391
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @excise(%struct.FTS* %fts, %struct._ftsent* %ent, %struct.rm_options* %x, i1 zeroext %is_dir) #4 !dbg !4392 !ctir !1521 {
entry:
  %retval = alloca i32, align 4
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %is_dir.addr = alloca i8, align 1
  %flag = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !1388
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !4393, metadata !DIExpression()), !dbg !4394
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !4395, metadata !DIExpression()), !dbg !4396
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !4397, metadata !DIExpression()), !dbg !4398
  %frombool = zext i1 %is_dir to i8
  store i8 %frombool, i8* %is_dir.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %is_dir.addr, metadata !4399, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !4401, metadata !DIExpression()), !dbg !4402
  %0 = load i8, i8* %is_dir.addr, align 1, !dbg !4403, !tbaa !3106
  %tobool = trunc i8 %0 to i1, !dbg !4403
  %1 = zext i1 %tobool to i64, !dbg !4403
  %cond = select i1 %tobool, i32 512, i32 0, !dbg !4403
  store i32 %cond, i32* %flag, align 4, !dbg !4402, !tbaa !2982
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4404, !tbaa !2995
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 6, !dbg !4406, !ctir !1359
  %3 = load i32, i32* %fts_cwd_fd, align 4, !dbg !4406, !tbaa !3823, !ctir !7
  %4 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4407, !tbaa !2995
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 6, !dbg !4408, !ctir !1452
  %5 = load i8*, i8** %fts_accpath, align 8, !dbg !4408, !tbaa !2995, !ctir !9
  %6 = load i32, i32* %flag, align 4, !dbg !4409, !tbaa !2982
  %call = call i32 @unlinkat(i32 %3, i8* %5, i32 %6) #10, !dbg !4410
  %cmp = icmp eq i32 %call, 0, !dbg !4411
  br i1 %cmp, label %if.then, label %if.end9, !dbg !4412

if.then:                                          ; preds = %entry
  %7 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4413, !tbaa !2995
  %verbose = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 8, !dbg !4416, !ctir !1340
  %8 = load i8, i8* %verbose, align 2, !dbg !4416, !tbaa !3646
  %tobool1 = trunc i8 %8 to i1, !dbg !4416, !ctir !120
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !4417

if.then2:                                         ; preds = %if.then
  %9 = load i8, i8* %is_dir.addr, align 1, !dbg !4418, !tbaa !3106
  %tobool3 = trunc i8 %9 to i1, !dbg !4418
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !4418

cond.true:                                        ; preds = %if.then2
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23.81, i64 0, i64 0)) #10, !dbg !4420
  br label %cond.end, !dbg !4418

cond.false:                                       ; preds = %if.then2
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24.82, i64 0, i64 0)) #10, !dbg !4421
  br label %cond.end, !dbg !4418

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond6 = phi i8* [ %call4, %cond.true ], [ %call5, %cond.false ], !dbg !4418
  %10 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4422, !tbaa !2995
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 7, !dbg !4422, !ctir !1452
  %11 = load i8*, i8** %fts_path, align 8, !dbg !4422, !tbaa !2995, !ctir !9
  %call7 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !4422
  %call8 = call i32 (i8*, ...) @printf(i8* %cond6, i8* %call7), !dbg !4423
  br label %if.end, !dbg !4424

if.end:                                           ; preds = %cond.end, %if.then
  store i32 2, i32* %retval, align 4, !dbg !4425
  br label %return, !dbg !4425

if.end9:                                          ; preds = %entry
  %call10 = call i32* @__errno_location() #15, !dbg !4426
  %12 = load i32, i32* %call10, align 4, !dbg !4426, !tbaa !2982, !ctir !7
  %cmp11 = icmp eq i32 %12, 30, !dbg !4428
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !4429

if.then12:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !4430, metadata !DIExpression()), !dbg !4432
  %13 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4433, !tbaa !2995
  %fts_cwd_fd13 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 6, !dbg !4435, !ctir !1359
  %14 = load i32, i32* %fts_cwd_fd13, align 4, !dbg !4435, !tbaa !3823, !ctir !7
  %15 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4436, !tbaa !2995
  %fts_accpath14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 6, !dbg !4437, !ctir !1452
  %16 = load i8*, i8** %fts_accpath14, align 8, !dbg !4437, !tbaa !2995, !ctir !9
  %call15 = call i32 @lstatat(i32 %14, i8* %16, %struct.stat* %st), !dbg !4438
  %tobool16 = icmp ne i32 %call15, 0, !dbg !4438
  br i1 %tobool16, label %land.lhs.true, label %if.then19, !dbg !4439

land.lhs.true:                                    ; preds = %if.then12
  %call17 = call i32* @__errno_location() #15, !dbg !4440
  %17 = load i32, i32* %call17, align 4, !dbg !4440, !tbaa !2982, !ctir !7
  %cmp18 = icmp eq i32 %17, 2, !dbg !4441
  br i1 %cmp18, label %if.end21, label %if.then19, !dbg !4442

if.then19:                                        ; preds = %land.lhs.true, %if.then12
  %call20 = call i32* @__errno_location() #15, !dbg !4443
  store i32 30, i32* %call20, align 4, !dbg !4444, !tbaa !2982, !ctir !7
  br label %if.end21, !dbg !4443

if.end21:                                         ; preds = %if.then19, %land.lhs.true
  br label %if.end22, !dbg !4445

if.end22:                                         ; preds = %if.end21, %if.end9
  %18 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4446, !tbaa !2995
  %call23 = call i32* @__errno_location() #15, !dbg !4448
  %19 = load i32, i32* %call23, align 4, !dbg !4448, !tbaa !2982, !ctir !7
  %call24 = call zeroext i1 @ignorable_missing(%struct.rm_options* %18, i32 %19), !dbg !4449
  br i1 %call24, label %if.then25, label %if.end26, !dbg !4450

if.then25:                                        ; preds = %if.end22
  store i32 2, i32* %retval, align 4, !dbg !4451
  br label %return, !dbg !4451

if.end26:                                         ; preds = %if.end22
  %20 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4452, !tbaa !2995
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 15, !dbg !4454, !ctir !1452
  %21 = load i16, i16* %fts_info, align 8, !dbg !4454, !tbaa !3810, !ctir !33
  %conv = zext i16 %21 to i32, !dbg !4452
  %cmp27 = icmp eq i32 %conv, 4, !dbg !4455
  br i1 %cmp27, label %land.lhs.true29, label %if.end54, !dbg !4456

land.lhs.true29:                                  ; preds = %if.end26
  %call30 = call i32* @__errno_location() #15, !dbg !4457
  %22 = load i32, i32* %call30, align 4, !dbg !4457, !tbaa !2982, !ctir !7
  %cmp31 = icmp eq i32 %22, 39, !dbg !4458
  br i1 %cmp31, label %land.lhs.true44, label %lor.lhs.false, !dbg !4459

lor.lhs.false:                                    ; preds = %land.lhs.true29
  %call33 = call i32* @__errno_location() #15, !dbg !4460
  %23 = load i32, i32* %call33, align 4, !dbg !4460, !tbaa !2982, !ctir !7
  %cmp34 = icmp eq i32 %23, 21, !dbg !4461
  br i1 %cmp34, label %land.lhs.true44, label %lor.lhs.false36, !dbg !4462

lor.lhs.false36:                                  ; preds = %lor.lhs.false
  %call37 = call i32* @__errno_location() #15, !dbg !4463
  %24 = load i32, i32* %call37, align 4, !dbg !4463, !tbaa !2982, !ctir !7
  %cmp38 = icmp eq i32 %24, 20, !dbg !4464
  br i1 %cmp38, label %land.lhs.true44, label %lor.lhs.false40, !dbg !4465

lor.lhs.false40:                                  ; preds = %lor.lhs.false36
  %call41 = call i32* @__errno_location() #15, !dbg !4466
  %25 = load i32, i32* %call41, align 4, !dbg !4466, !tbaa !2982, !ctir !7
  %cmp42 = icmp eq i32 %25, 17, !dbg !4467
  br i1 %cmp42, label %land.lhs.true44, label %if.end54, !dbg !4468

land.lhs.true44:                                  ; preds = %lor.lhs.false40, %lor.lhs.false36, %lor.lhs.false, %land.lhs.true29
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4469, !tbaa !2995
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 8, !dbg !4470, !ctir !1452
  %27 = load i32, i32* %fts_errno, align 8, !dbg !4470, !tbaa !2982, !ctir !7
  %cmp45 = icmp eq i32 %27, 1, !dbg !4471
  br i1 %cmp45, label %if.then51, label %lor.lhs.false47, !dbg !4472

lor.lhs.false47:                                  ; preds = %land.lhs.true44
  %28 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4473, !tbaa !2995
  %fts_errno48 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 8, !dbg !4474, !ctir !1452
  %29 = load i32, i32* %fts_errno48, align 8, !dbg !4474, !tbaa !2982, !ctir !7
  %cmp49 = icmp eq i32 %29, 13, !dbg !4475
  br i1 %cmp49, label %if.then51, label %if.end54, !dbg !4476

if.then51:                                        ; preds = %lor.lhs.false47, %land.lhs.true44
  %30 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4477, !tbaa !2995
  %fts_errno52 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 8, !dbg !4478, !ctir !1452
  %31 = load i32, i32* %fts_errno52, align 8, !dbg !4478, !tbaa !2982, !ctir !7
  %call53 = call i32* @__errno_location() #15, !dbg !4479
  store i32 %31, i32* %call53, align 4, !dbg !4480, !tbaa !2982, !ctir !7
  br label %if.end54, !dbg !4479

if.end54:                                         ; preds = %if.then51, %lor.lhs.false47, %lor.lhs.false40, %if.end26
  %call55 = call i32* @__errno_location() #15, !dbg !4481
  %32 = load i32, i32* %call55, align 4, !dbg !4481, !tbaa !2982, !ctir !7
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #10, !dbg !4482
  %33 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4483, !tbaa !2995
  %fts_path57 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 7, !dbg !4483, !ctir !1452
  %34 = load i8*, i8** %fts_path57, align 8, !dbg !4483, !tbaa !2995, !ctir !9
  %call58 = call i8* @quotearg_style(i32 4, i8* %34), !dbg !4483
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %32, i8* %call56, i8* %call58), !dbg !4484
  %35 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4485, !tbaa !2995
  call void @mark_ancestor_dirs(%struct._ftsent* %35), !dbg !4486
  store i32 4, i32* %retval, align 4, !dbg !4487
  br label %return, !dbg !4487

return:                                           ; preds = %if.end54, %if.then25, %if.end
  %36 = load i32, i32* %retval, align 4, !dbg !4488
  ret i32 %36, !dbg !4488
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind
declare dso_local i32 @unlinkat(i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_missing(%struct.rm_options* %x, i32 %errnum) #4 !dbg !4489 !ctir !1523 {
entry:
  %x.addr = alloca %struct.rm_options*, align 8
  %errnum.addr = alloca i32, align 4
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !4490, metadata !DIExpression()), !dbg !4491
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !4492, metadata !DIExpression()), !dbg !4493
  %0 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4494, !tbaa !2995
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %0, i32 0, i32 0, !dbg !4495, !ctir !1340
  %1 = load i8, i8* %ignore_missing_files, align 8, !dbg !4495, !tbaa !3677
  %tobool = trunc i8 %1 to i1, !dbg !4495, !ctir !120
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4496

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %errnum.addr, align 4, !dbg !4497, !tbaa !2982
  %call = call zeroext i1 @nonexistent_file_errno(i32 %2), !dbg !4498
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %call, %land.rhs ], !dbg !4499
  ret i1 %3, !dbg !4500
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @nonexistent_file_errno(i32 %errnum) #4 !dbg !4501 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !4502, metadata !DIExpression()), !dbg !4503
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !4504, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 84, label %sw.bb
    i32 22, label %sw.bb
    i32 2, label %sw.bb
    i32 20, label %sw.bb
  ], !dbg !4505

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !4506
  br label %return, !dbg !4506

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !4508
  br label %return, !dbg !4508

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !4509
  ret i1 %1, !dbg !4509
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.stat* @cache_stat_init(%struct.stat* %st) #4 !dbg !4510 !ctir !1515 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !4511, metadata !DIExpression()), !dbg !4512
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4513, !tbaa !2995
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 8, !dbg !4514, !ctir !1388
  store i64 -1, i64* %st_size, align 8, !dbg !4515, !tbaa !4516, !ctir !29
  %1 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4517, !tbaa !2995
  ret %struct.stat* %1, !dbg !4518
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @write_protected_non_symlink(i32 %fd_cwd, i8* %file, %struct.stat* %buf) #4 !dbg !4519 !ctir !1517 {
entry:
  %retval = alloca i32, align 4
  %fd_cwd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %buf.addr = alloca %struct.stat*, align 8
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd_cwd.addr, metadata !4520, metadata !DIExpression()), !dbg !4521
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !4522, metadata !DIExpression()), !dbg !4523
  store %struct.stat* %buf, %struct.stat** %buf.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %buf.addr, metadata !4524, metadata !DIExpression()), !dbg !4525
  %call = call zeroext i1 @can_write_any_file(), !dbg !4526
  br i1 %call, label %if.then, label %if.end, !dbg !4528

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4529
  br label %return, !dbg !4529

if.end:                                           ; preds = %entry
  %0 = load i32, i32* %fd_cwd.addr, align 4, !dbg !4530, !tbaa !2982
  %1 = load i8*, i8** %file.addr, align 8, !dbg !4532, !tbaa !2995
  %2 = load %struct.stat*, %struct.stat** %buf.addr, align 8, !dbg !4533, !tbaa !2995
  %call1 = call i32 @cache_fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256), !dbg !4534
  %cmp = icmp ne i32 %call1, 0, !dbg !4535
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4536

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !4537
  br label %return, !dbg !4537

if.end3:                                          ; preds = %if.end
  %3 = load %struct.stat*, %struct.stat** %buf.addr, align 8, !dbg !4538, !tbaa !2995
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !4538, !ctir !1388
  %4 = load i32, i32* %st_mode, align 8, !dbg !4538, !tbaa !3178, !ctir !133
  %and = and i32 %4, 61440, !dbg !4538
  %cmp4 = icmp eq i32 %and, 40960, !dbg !4538
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4540

if.then5:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !4541
  br label %return, !dbg !4541

if.end6:                                          ; preds = %if.end3
  %5 = load i32, i32* %fd_cwd.addr, align 4, !dbg !4542, !tbaa !2982
  %6 = load i8*, i8** %file.addr, align 8, !dbg !4545, !tbaa !2995
  %call7 = call i32 @faccessat(i32 %5, i8* %6, i32 2, i32 512) #10, !dbg !4546
  %cmp8 = icmp eq i32 %call7, 0, !dbg !4547
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !4548

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4549
  br label %return, !dbg !4549

if.end10:                                         ; preds = %if.end6
  %call11 = call i32* @__errno_location() #15, !dbg !4550
  %7 = load i32, i32* %call11, align 4, !dbg !4550, !tbaa !2982, !ctir !7
  %cmp12 = icmp eq i32 %7, 13, !dbg !4551
  %8 = zext i1 %cmp12 to i64, !dbg !4550
  %cond = select i1 %cmp12, i32 1, i32 -1, !dbg !4550
  store i32 %cond, i32* %retval, align 4, !dbg !4552
  br label %return, !dbg !4552

return:                                           ; preds = %if.end10, %if.then9, %if.then5, %if.then2, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !4553
  ret i32 %9, !dbg !4553
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cache_fstatat(i32 %fd, i8* %file, %struct.stat* %st, i32 %flag) #4 !dbg !4554 !ctir !1519 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %flag.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !4555, metadata !DIExpression()), !dbg !4556
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !4557, metadata !DIExpression()), !dbg !4558
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !4559, metadata !DIExpression()), !dbg !4560
  store i32 %flag, i32* %flag.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !4561, metadata !DIExpression()), !dbg !4562
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4563, !tbaa !2995
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 8, !dbg !4565, !ctir !1388
  %1 = load i64, i64* %st_size, align 8, !dbg !4565, !tbaa !4516, !ctir !29
  %cmp = icmp eq i64 %1, -1, !dbg !4566
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4567

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %fd.addr, align 4, !dbg !4568, !tbaa !2982
  %3 = load i8*, i8** %file.addr, align 8, !dbg !4569, !tbaa !2995
  %4 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4570, !tbaa !2995
  %5 = load i32, i32* %flag.addr, align 4, !dbg !4571, !tbaa !2982
  %call = call i32 @fstatat(i32 %2, i8* %3, %struct.stat* %4, i32 %5) #10, !dbg !4572
  %cmp1 = icmp ne i32 %call, 0, !dbg !4573
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4574

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4575, !tbaa !2995
  %st_size2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 8, !dbg !4577, !ctir !1388
  store i64 -2, i64* %st_size2, align 8, !dbg !4578, !tbaa !4516, !ctir !29
  %call3 = call i32* @__errno_location() #15, !dbg !4579
  %7 = load i32, i32* %call3, align 4, !dbg !4579, !tbaa !2982, !ctir !7
  %conv = sext i32 %7 to i64, !dbg !4579
  %8 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4580, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 1, !dbg !4581, !ctir !1388
  store i64 %conv, i64* %st_ino, align 8, !dbg !4582, !tbaa !3870, !ctir !228
  br label %if.end, !dbg !4583

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4584, !tbaa !2995
  %st_size4 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 8, !dbg !4586, !ctir !1388
  %10 = load i64, i64* %st_size4, align 8, !dbg !4586, !tbaa !4516, !ctir !29
  %cmp5 = icmp sle i64 0, %10, !dbg !4587
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4588

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4589
  br label %return, !dbg !4589

if.end8:                                          ; preds = %if.end
  %11 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4590, !tbaa !2995
  %st_ino9 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 1, !dbg !4591, !ctir !1388
  %12 = load i64, i64* %st_ino9, align 8, !dbg !4591, !tbaa !3870, !ctir !228
  %conv10 = trunc i64 %12 to i32, !dbg !4592
  %call11 = call i32* @__errno_location() #15, !dbg !4593
  store i32 %conv10, i32* %call11, align 4, !dbg !4594, !tbaa !2982, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !4595
  br label %return, !dbg !4595

return:                                           ; preds = %if.end8, %if.then7
  %13 = load i32, i32* %retval, align 4, !dbg !4596
  ret i32 %13, !dbg !4596
}

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @faccessat(i32, i8*, i32, i32) #2

declare dso_local i32 @openat(i32, i8*, i32, ...) #3

declare dso_local %struct.__dirstream* @fdopendir(i32) #3

declare dso_local i32 @close(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %dirp) #4 !dbg !4597 !ctir !1467 {
entry:
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %dp = alloca %struct.dirent*, align 8, !ctir !1458
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !4598, metadata !DIExpression()), !dbg !4599
  br label %while.body, !dbg !4600

while.body:                                       ; preds = %entry, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !4601, metadata !DIExpression()), !dbg !4603
  %0 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !4604, !tbaa !2995
  %call = call %struct.dirent* @readdir(%struct.__dirstream* %0), !dbg !4605
  store %struct.dirent* %call, %struct.dirent** %dp, align 8, !dbg !4603, !tbaa !2995
  %1 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !4606, !tbaa !2995
  %cmp = icmp eq %struct.dirent* %1, null, !dbg !4608
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4609

lor.lhs.false:                                    ; preds = %while.body
  %2 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !4610, !tbaa !2995
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %2, i32 0, i32 4, !dbg !4611, !ctir !1459
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !4610
  %call1 = call zeroext i1 @dot_or_dotdot(i8* %arraydecay), !dbg !4612
  br i1 %call1, label %if.end, label %if.then, !dbg !4613

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %3 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !4614, !tbaa !2995
  ret %struct.dirent* %3, !dbg !4615

if.end:                                           ; preds = %lor.lhs.false
  br label %while.body, !dbg !4600, !llvm.loop !4616
}

declare dso_local i32 @closedir(%struct.__dirstream*) #3

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_process_security_ctx(i8* %src_name, i8* %dst_name, i32 %mode, i1 zeroext %new_dst, %struct.cp_options* %x) #4 !dbg !4618 !ctir !250 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %new_dst.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !120
  %some_errors = alloca i8, align 1, !ctir !120
  %con = alloca i8*, align 8, !ctir !9
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4619, metadata !DIExpression()), !dbg !4620
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4621, metadata !DIExpression()), !dbg !4622
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4623, metadata !DIExpression()), !dbg !4624
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !4625, metadata !DIExpression()), !dbg !4626
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4627, metadata !DIExpression()), !dbg !4628
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4629, !tbaa !2995
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 22, !dbg !4631, !ctir !253
  %1 = load i8, i8* %preserve_security_context, align 1, !dbg !4631, !tbaa !3207
  %tobool = trunc i8 %1 to i1, !dbg !4631, !ctir !120
  br i1 %tobool, label %if.then, label %if.else40, !dbg !4632

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !4633, metadata !DIExpression()), !dbg !4635
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4636, !tbaa !2995
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !4637, !ctir !253
  %3 = load i8, i8* %data_copy_required, align 1, !dbg !4637, !tbaa !3457
  %tobool1 = trunc i8 %3 to i1, !dbg !4637, !ctir !120
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !4638

lor.rhs:                                          ; preds = %if.then
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4639, !tbaa !2995
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 23, !dbg !4640, !ctir !253
  %5 = load i8, i8* %require_preserve_context, align 2, !dbg !4640, !tbaa !3465
  %tobool2 = trunc i8 %5 to i1, !dbg !4640, !ctir !120
  br label %lor.end, !dbg !4638

lor.end:                                          ; preds = %lor.rhs, %if.then
  %6 = phi i1 [ true, %if.then ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %6 to i8, !dbg !4635
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !4635, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !4641, metadata !DIExpression()), !dbg !4642
  %7 = load i8, i8* %all_errors, align 1, !dbg !4643, !tbaa !3106
  %tobool4 = trunc i8 %7 to i1, !dbg !4643
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !4644

land.rhs:                                         ; preds = %lor.end
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4645, !tbaa !2995
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 26, !dbg !4646, !ctir !253
  %9 = load i8, i8* %reduce_diagnostics, align 1, !dbg !4646, !tbaa !3453
  %tobool5 = trunc i8 %9 to i1, !dbg !4646, !ctir !120
  %lnot = xor i1 %tobool5, true, !dbg !4647
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %10 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !4648
  %frombool6 = zext i1 %10 to i8, !dbg !4642
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !4642, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8** %con, metadata !4649, metadata !DIExpression()), !dbg !4650
  %11 = load i8*, i8** %src_name.addr, align 8, !dbg !4651, !tbaa !2995
  %call = call i32 @lgetfilecon(i8* %11, i8** %con), !dbg !4653
  %cmp = icmp sle i32 0, %call, !dbg !4654
  br i1 %cmp, label %if.then7, label %if.else, !dbg !4655

if.then7:                                         ; preds = %land.end
  %12 = load i8*, i8** %con, align 8, !dbg !4656, !tbaa !2995
  %call8 = call i32 @setfscreatecon(i8* %12), !dbg !4659
  %cmp9 = icmp slt i32 %call8, 0, !dbg !4660
  br i1 %cmp9, label %if.then10, label %if.end23, !dbg !4661

if.then10:                                        ; preds = %if.then7
  %13 = load i8, i8* %all_errors, align 1, !dbg !4662, !tbaa !3106
  %tobool11 = trunc i8 %13 to i1, !dbg !4662
  br i1 %tobool11, label %if.then15, label %lor.lhs.false, !dbg !4665

lor.lhs.false:                                    ; preds = %if.then10
  %14 = load i8, i8* %some_errors, align 1, !dbg !4666, !tbaa !3106
  %tobool12 = trunc i8 %14 to i1, !dbg !4666
  br i1 %tobool12, label %land.lhs.true, label %if.end, !dbg !4667

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call13 = call i32* @__errno_location() #15, !dbg !4668
  %15 = load i32, i32* %call13, align 4, !dbg !4668, !tbaa !2982, !ctir !7
  %call14 = call zeroext i1 @errno_unsupported(i32 %15), !dbg !4669
  br i1 %call14, label %if.end, label %if.then15, !dbg !4670

if.then15:                                        ; preds = %land.lhs.true, %if.then10
  %call16 = call i32* @__errno_location() #15, !dbg !4671
  %16 = load i32, i32* %call16, align 4, !dbg !4671, !tbaa !2982, !ctir !7
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.87, i64 0, i64 0)) #10, !dbg !4672
  %17 = load i8*, i8** %con, align 8, !dbg !4673, !tbaa !2995
  %call18 = call i8* @quote(i8* %17), !dbg !4674
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %16, i8* %call17, i8* %call18), !dbg !4675
  br label %if.end, !dbg !4675

if.end:                                           ; preds = %if.then15, %land.lhs.true, %lor.lhs.false
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4676, !tbaa !2995
  %require_preserve_context19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 23, !dbg !4678, !ctir !253
  %19 = load i8, i8* %require_preserve_context19, align 2, !dbg !4678, !tbaa !3465
  %tobool20 = trunc i8 %19 to i1, !dbg !4678, !ctir !120
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !4679

if.then21:                                        ; preds = %if.end
  %20 = load i8*, i8** %con, align 8, !dbg !4680, !tbaa !2995
  call void @freecon(i8* %20), !dbg !4682
  store i1 false, i1* %retval, align 1, !dbg !4683
  br label %return, !dbg !4683

if.end22:                                         ; preds = %if.end
  br label %if.end23, !dbg !4684

if.end23:                                         ; preds = %if.end22, %if.then7
  %21 = load i8*, i8** %con, align 8, !dbg !4685, !tbaa !2995
  call void @freecon(i8* %21), !dbg !4686
  br label %if.end39, !dbg !4687

if.else:                                          ; preds = %land.end
  %22 = load i8, i8* %all_errors, align 1, !dbg !4688, !tbaa !3106
  %tobool24 = trunc i8 %22 to i1, !dbg !4688
  br i1 %tobool24, label %if.then30, label %lor.lhs.false25, !dbg !4691

lor.lhs.false25:                                  ; preds = %if.else
  %23 = load i8, i8* %some_errors, align 1, !dbg !4692, !tbaa !3106
  %tobool26 = trunc i8 %23 to i1, !dbg !4692
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !4693

land.lhs.true27:                                  ; preds = %lor.lhs.false25
  %call28 = call i32* @__errno_location() #15, !dbg !4694
  %24 = load i32, i32* %call28, align 4, !dbg !4694, !tbaa !2982, !ctir !7
  %call29 = call zeroext i1 @errno_unsupported(i32 %24), !dbg !4695
  br i1 %call29, label %if.end34, label %if.then30, !dbg !4696

if.then30:                                        ; preds = %land.lhs.true27, %if.else
  %call31 = call i32* @__errno_location() #15, !dbg !4697
  %25 = load i32, i32* %call31, align 4, !dbg !4697, !tbaa !2982, !ctir !7
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1.88, i64 0, i64 0)) #10, !dbg !4699
  %26 = load i8*, i8** %src_name.addr, align 8, !dbg !4700, !tbaa !2995
  %call33 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !4700
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %25, i8* %call32, i8* %call33), !dbg !4701
  br label %if.end34, !dbg !4702

if.end34:                                         ; preds = %if.then30, %land.lhs.true27, %lor.lhs.false25
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4703, !tbaa !2995
  %require_preserve_context35 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 23, !dbg !4705, !ctir !253
  %28 = load i8, i8* %require_preserve_context35, align 2, !dbg !4705, !tbaa !3465
  %tobool36 = trunc i8 %28 to i1, !dbg !4705, !ctir !120
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !4706

if.then37:                                        ; preds = %if.end34
  store i1 false, i1* %retval, align 1, !dbg !4707
  br label %return, !dbg !4707

if.end38:                                         ; preds = %if.end34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end23
  br label %if.end56, !dbg !4708

if.else40:                                        ; preds = %entry
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4709, !tbaa !2995
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !4711, !ctir !253
  %30 = load i8, i8* %set_security_context, align 1, !dbg !4711, !tbaa !3210
  %tobool41 = trunc i8 %30 to i1, !dbg !4711, !ctir !120
  br i1 %tobool41, label %if.then42, label %if.end55, !dbg !4712

if.then42:                                        ; preds = %if.else40
  %31 = load i8, i8* %new_dst.addr, align 1, !dbg !4713, !tbaa !3106
  %tobool43 = trunc i8 %31 to i1, !dbg !4713
  br i1 %tobool43, label %land.lhs.true44, label %if.end54, !dbg !4716

land.lhs.true44:                                  ; preds = %if.then42
  %32 = load i8*, i8** %dst_name.addr, align 8, !dbg !4717, !tbaa !2995
  %33 = load i32, i32* %mode.addr, align 4, !dbg !4718, !tbaa !2982
  %call45 = call i32 @defaultcon(i8* %32, i32 %33), !dbg !4719
  %cmp46 = icmp slt i32 %call45, 0, !dbg !4720
  br i1 %cmp46, label %land.lhs.true47, label %if.end54, !dbg !4721

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %call48 = call i32* @__errno_location() #15, !dbg !4722
  %34 = load i32, i32* %call48, align 4, !dbg !4722, !tbaa !2982, !ctir !7
  %call49 = call zeroext i1 @ignorable_ctx_err(i32 %34), !dbg !4723
  br i1 %call49, label %if.end54, label %if.then50, !dbg !4724

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = call i32* @__errno_location() #15, !dbg !4725
  %35 = load i32, i32* %call51, align 4, !dbg !4725, !tbaa !2982, !ctir !7
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.89, i64 0, i64 0)) #10, !dbg !4727
  %36 = load i8*, i8** %dst_name.addr, align 8, !dbg !4728, !tbaa !2995
  %call53 = call i8* @quotearg_style(i32 4, i8* %36), !dbg !4728
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %35, i8* %call52, i8* %call53), !dbg !4729
  br label %if.end54, !dbg !4730

if.end54:                                         ; preds = %if.then50, %land.lhs.true47, %land.lhs.true44, %if.then42
  br label %if.end55, !dbg !4731

if.end55:                                         ; preds = %if.end54, %if.else40
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end39
  store i1 true, i1* %retval, align 1, !dbg !4732
  br label %return, !dbg !4732

return:                                           ; preds = %if.end56, %if.then37, %if.then21
  %37 = load i1, i1* %retval, align 1, !dbg !4733
  ret i1 %37, !dbg !4733
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %err) #4 !dbg !4734 !ctir !307 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !4735, metadata !DIExpression()), !dbg !4736
  %0 = load i32, i32* %err.addr, align 4, !dbg !4737, !tbaa !2982
  %cmp = icmp eq i32 %0, 95, !dbg !4738
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4739

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !4740, !tbaa !2982
  %cmp1 = icmp eq i32 %1, 61, !dbg !4741
  br label %lor.end, !dbg !4739

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !4742
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon(i8* %path, i32 %mode) #4 !dbg !4743 !ctir !309 {
entry:
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4745, metadata !DIExpression()), !dbg !4746
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4747, metadata !DIExpression()), !dbg !4748
  %call = call i32* @__errno_location() #15, !dbg !4749
  store i32 95, i32* %call, align 4, !dbg !4750, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !4751
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err(i32 %err) #4 !dbg !4752 !ctir !307 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !4753, metadata !DIExpression()), !dbg !4754
  %0 = load i32, i32* %err.addr, align 4, !dbg !4755, !tbaa !2982
  %cmp = icmp eq i32 %0, 95, !dbg !4756
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4757

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !4758, !tbaa !2982
  %cmp1 = icmp eq i32 %1, 61, !dbg !4759
  br label %lor.end, !dbg !4757

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !4760
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_file_security_ctx(i8* %dst_name, i1 zeroext %process_local, i1 zeroext %recurse, %struct.cp_options* %x) #4 !dbg !4761 !ctir !295 {
entry:
  %retval = alloca i1, align 1
  %dst_name.addr = alloca i8*, align 8
  %process_local.addr = alloca i8, align 1
  %recurse.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !120
  %some_errors = alloca i8, align 1, !ctir !120
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4762, metadata !DIExpression()), !dbg !4763
  %frombool = zext i1 %process_local to i8
  store i8 %frombool, i8* %process_local.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %process_local.addr, metadata !4764, metadata !DIExpression()), !dbg !4765
  %frombool1 = zext i1 %recurse to i8
  store i8 %frombool1, i8* %recurse.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4766, metadata !DIExpression()), !dbg !4767
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4768, metadata !DIExpression()), !dbg !4769
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !4770, metadata !DIExpression()), !dbg !4771
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4772, !tbaa !2995
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !4773, !ctir !253
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !4773, !tbaa !3457
  %tobool = trunc i8 %1 to i1, !dbg !4773, !ctir !120
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !4774

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4775, !tbaa !2995
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 23, !dbg !4776, !ctir !253
  %3 = load i8, i8* %require_preserve_context, align 2, !dbg !4776, !tbaa !3465
  %tobool2 = trunc i8 %3 to i1, !dbg !4776, !ctir !120
  br label %lor.end, !dbg !4774

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %4 to i8, !dbg !4771
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !4771, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !4777, metadata !DIExpression()), !dbg !4778
  %5 = load i8, i8* %all_errors, align 1, !dbg !4779, !tbaa !3106
  %tobool4 = trunc i8 %5 to i1, !dbg !4779
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !4780

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4781, !tbaa !2995
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !4782, !ctir !253
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !4782, !tbaa !3453
  %tobool5 = trunc i8 %7 to i1, !dbg !4782, !ctir !120
  %lnot = xor i1 %tobool5, true, !dbg !4783
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !4784
  %frombool6 = zext i1 %8 to i8, !dbg !4778
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !4778, !tbaa !3106
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !4785, !tbaa !2995
  %10 = load i8, i8* %recurse.addr, align 1, !dbg !4787, !tbaa !3106
  %tobool7 = trunc i8 %10 to i1, !dbg !4787
  %11 = load i8, i8* %process_local.addr, align 1, !dbg !4788, !tbaa !3106
  %tobool8 = trunc i8 %11 to i1, !dbg !4788
  %call = call zeroext i1 @restorecon(i8* %9, i1 zeroext %tobool7, i1 zeroext %tobool8), !dbg !4789
  br i1 %call, label %if.end17, label %if.then, !dbg !4790

if.then:                                          ; preds = %land.end
  %12 = load i8, i8* %all_errors, align 1, !dbg !4791, !tbaa !3106
  %tobool9 = trunc i8 %12 to i1, !dbg !4791
  br i1 %tobool9, label %if.then13, label %lor.lhs.false, !dbg !4794

lor.lhs.false:                                    ; preds = %if.then
  %13 = load i8, i8* %some_errors, align 1, !dbg !4795, !tbaa !3106
  %tobool10 = trunc i8 %13 to i1, !dbg !4795
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !4796

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call11 = call i32* @__errno_location() #15, !dbg !4797
  %14 = load i32, i32* %call11, align 4, !dbg !4797, !tbaa !2982, !ctir !7
  %call12 = call zeroext i1 @errno_unsupported(i32 %14), !dbg !4798
  br i1 %call12, label %if.end, label %if.then13, !dbg !4799

if.then13:                                        ; preds = %land.lhs.true, %if.then
  %call14 = call i32* @__errno_location() #15, !dbg !4800
  %15 = load i32, i32* %call14, align 4, !dbg !4800, !tbaa !2982, !ctir !7
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3.90, i64 0, i64 0)) #10, !dbg !4801
  %16 = load i8*, i8** %dst_name.addr, align 8, !dbg !4802, !tbaa !2995
  %call16 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %16), !dbg !4802
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call15, i8* %call16), !dbg !4803
  br label %if.end, !dbg !4803

if.end:                                           ; preds = %if.then13, %land.lhs.true, %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !4804
  br label %return, !dbg !4804

if.end17:                                         ; preds = %land.end
  store i1 true, i1* %retval, align 1, !dbg !4805
  br label %return, !dbg !4805

return:                                           ; preds = %if.end17, %if.end
  %17 = load i1, i1* %retval, align 1, !dbg !4806
  ret i1 %17, !dbg !4806
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !4807 !ctir !311 {
entry:
  %path.addr = alloca i8*, align 8
  %recurse.addr = alloca i8, align 1
  %preserve.addr = alloca i8, align 1
  store i8* %path, i8** %path.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4808, metadata !DIExpression()), !dbg !4809
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4810, metadata !DIExpression()), !dbg !4811
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !4812, metadata !DIExpression()), !dbg !4813
  %call = call i32* @__errno_location() #15, !dbg !4814
  store i32 95, i32* %call, align 4, !dbg !4815, !tbaa !2982, !ctir !7
  ret i1 false, !dbg !4816
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @dest_info_init(%struct.cp_options* %x) #4 !dbg !4817 !ctir !297 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4818, metadata !DIExpression()), !dbg !4819
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4820
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4821, !tbaa !2995
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 37, !dbg !4822, !ctir !254
  store %struct.hash_table* %call, %struct.hash_table** %dest_info, align 8, !dbg !4823, !tbaa !3512, !ctir !195
  ret void, !dbg !4824
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @src_info_init(%struct.cp_options* %x) #4 !dbg !4825 !ctir !297 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4826, metadata !DIExpression()), !dbg !4827
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash_no_name, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4828
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4829, !tbaa !2995
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 38, !dbg !4830, !ctir !254
  store %struct.hash_table* %call, %struct.hash_table** %src_info, align 8, !dbg !4831, !tbaa !3516, !ctir !195
  ret void, !dbg !4832
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @copy(i8* %src_name, i8* %dst_name, i1 zeroext %nonexistent_dst, %struct.cp_options* %options, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4833 !ctir !300 {
entry:
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %nonexistent_dst.addr = alloca i8, align 1
  %options.addr = alloca %struct.cp_options*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %first_dir_created_per_command_line_arg = alloca i8, align 1, !ctir !120
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4834, metadata !DIExpression()), !dbg !4835
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4836, metadata !DIExpression()), !dbg !4837
  %frombool = zext i1 %nonexistent_dst to i8
  store i8 %frombool, i8* %nonexistent_dst.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %nonexistent_dst.addr, metadata !4838, metadata !DIExpression()), !dbg !4839
  store %struct.cp_options* %options, %struct.cp_options** %options.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %options.addr, metadata !4840, metadata !DIExpression()), !dbg !4841
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4842, metadata !DIExpression()), !dbg !4843
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4844, metadata !DIExpression()), !dbg !4845
  %0 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4846, !tbaa !2995
  %call = call zeroext i1 @valid_options(%struct.cp_options* %0) #14, !dbg !4846
  br i1 %call, label %if.then, label %if.else, !dbg !4849

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4849

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.95, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2975, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.copy, i64 0, i64 0)) #13, !dbg !4846
  unreachable, !dbg !4846

if.end:                                           ; preds = %if.then
  %1 = load i8*, i8** %src_name.addr, align 8, !dbg !4850, !tbaa !2995
  store i8* %1, i8** @top_level_src_name, align 8, !dbg !4851, !tbaa !2995
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !4852, !tbaa !2995
  store i8* %2, i8** @top_level_dst_name, align 8, !dbg !4853, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8* %first_dir_created_per_command_line_arg, metadata !4854, metadata !DIExpression()), !dbg !4855
  store i8 0, i8* %first_dir_created_per_command_line_arg, align 1, !dbg !4855, !tbaa !3106
  %3 = load i8*, i8** %src_name.addr, align 8, !dbg !4856, !tbaa !2995
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !4857, !tbaa !2995
  %5 = load i8, i8* %nonexistent_dst.addr, align 1, !dbg !4858, !tbaa !3106
  %tobool = trunc i8 %5 to i1, !dbg !4858
  %6 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4859, !tbaa !2995
  %7 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4860, !tbaa !2995
  %8 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4861, !tbaa !2995
  %call1 = call zeroext i1 @copy_internal(i8* %3, i8* %4, i1 zeroext %tobool, %struct.stat* null, %struct.dir_list* null, %struct.cp_options* %6, i1 zeroext true, i8* %first_dir_created_per_command_line_arg, i8* %7, i8* %8), !dbg !4862
  ret i1 %call1, !dbg !4863
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @valid_options(%struct.cp_options* %co) #9 !dbg !4864 !ctir !303 {
entry:
  %co.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %co, %struct.cp_options** %co.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %co.addr, metadata !4865, metadata !DIExpression()), !dbg !4866
  %0 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4867, !tbaa !2995
  %cmp = icmp ne %struct.cp_options* %0, null, !dbg !4867
  br i1 %cmp, label %if.then, label %if.else, !dbg !4870

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4870

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.149, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2950, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4867
  unreachable, !dbg !4867

if.end:                                           ; preds = %if.then
  %1 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4871, !tbaa !2995
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 0, !dbg !4871, !ctir !253
  %2 = load i32, i32* %backup_type, align 8, !dbg !4871, !tbaa !3326, !ctir !68
  %cmp1 = icmp ule i32 %2, 3, !dbg !4871
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !4874

if.then2:                                         ; preds = %if.end
  br label %if.end4, !dbg !4874

if.else3:                                         ; preds = %if.end
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.150, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2951, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4871
  unreachable, !dbg !4871

if.end4:                                          ; preds = %if.then2
  %3 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4875, !tbaa !2995
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 3, !dbg !4875, !ctir !253
  %4 = load i32, i32* %sparse_mode, align 4, !dbg !4875, !tbaa !3481, !ctir !89
  %cmp5 = icmp eq i32 %4, 1, !dbg !4875
  br i1 %cmp5, label %if.then11, label %lor.lhs.false, !dbg !4875

lor.lhs.false:                                    ; preds = %if.end4
  %5 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4875, !tbaa !2995
  %sparse_mode6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 3, !dbg !4875, !ctir !253
  %6 = load i32, i32* %sparse_mode6, align 4, !dbg !4875, !tbaa !3481, !ctir !89
  %cmp7 = icmp eq i32 %6, 2, !dbg !4875
  br i1 %cmp7, label %if.then11, label %lor.lhs.false8, !dbg !4875

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %7 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4875, !tbaa !2995
  %sparse_mode9 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 3, !dbg !4875, !ctir !253
  %8 = load i32, i32* %sparse_mode9, align 4, !dbg !4875, !tbaa !3481, !ctir !89
  %cmp10 = icmp eq i32 %8, 3, !dbg !4875
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !4878

if.then11:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %if.end4
  br label %if.end13, !dbg !4878

if.else12:                                        ; preds = %lor.lhs.false8
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.151, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2952, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4875
  unreachable, !dbg !4875

if.end13:                                         ; preds = %if.then11
  %9 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4879, !tbaa !2995
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 36, !dbg !4879, !ctir !253
  %10 = load i32, i32* %reflink_mode, align 8, !dbg !4879, !tbaa !3391, !ctir !95
  %cmp14 = icmp eq i32 %10, 0, !dbg !4879
  br i1 %cmp14, label %if.then21, label %lor.lhs.false15, !dbg !4879

lor.lhs.false15:                                  ; preds = %if.end13
  %11 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4879, !tbaa !2995
  %reflink_mode16 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 36, !dbg !4879, !ctir !253
  %12 = load i32, i32* %reflink_mode16, align 8, !dbg !4879, !tbaa !3391, !ctir !95
  %cmp17 = icmp eq i32 %12, 1, !dbg !4879
  br i1 %cmp17, label %if.then21, label %lor.lhs.false18, !dbg !4879

lor.lhs.false18:                                  ; preds = %lor.lhs.false15
  %13 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4879, !tbaa !2995
  %reflink_mode19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 36, !dbg !4879, !ctir !253
  %14 = load i32, i32* %reflink_mode19, align 8, !dbg !4879, !tbaa !3391, !ctir !95
  %cmp20 = icmp eq i32 %14, 2, !dbg !4879
  br i1 %cmp20, label %if.then21, label %if.else22, !dbg !4882

if.then21:                                        ; preds = %lor.lhs.false18, %lor.lhs.false15, %if.end13
  br label %if.end23, !dbg !4882

if.else22:                                        ; preds = %lor.lhs.false18
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9.152, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2953, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4879
  unreachable, !dbg !4879

if.end23:                                         ; preds = %if.then21
  %15 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4883, !tbaa !2995
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 8, !dbg !4883, !ctir !253
  %16 = load i8, i8* %hard_link, align 1, !dbg !4883, !tbaa !3407
  %tobool = trunc i8 %16 to i1, !dbg !4883, !ctir !120
  br i1 %tobool, label %land.lhs.true, label %if.then25, !dbg !4883

land.lhs.true:                                    ; preds = %if.end23
  %17 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4883, !tbaa !2995
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 29, !dbg !4883, !ctir !253
  %18 = load i8, i8* %symbolic_link, align 4, !dbg !4883, !tbaa !3485
  %tobool24 = trunc i8 %18 to i1, !dbg !4883, !ctir !120
  br i1 %tobool24, label %if.else26, label %if.then25, !dbg !4886

if.then25:                                        ; preds = %land.lhs.true, %if.end23
  br label %if.end27, !dbg !4886

if.else26:                                        ; preds = %land.lhs.true
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.153, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2954, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4883
  unreachable, !dbg !4883

if.end27:                                         ; preds = %if.then25
  %19 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4887, !tbaa !2995
  %reflink_mode28 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 36, !dbg !4887, !ctir !253
  %20 = load i32, i32* %reflink_mode28, align 8, !dbg !4887, !tbaa !3391, !ctir !95
  %cmp29 = icmp eq i32 %20, 2, !dbg !4887
  br i1 %cmp29, label %land.lhs.true30, label %if.then33, !dbg !4887

land.lhs.true30:                                  ; preds = %if.end27
  %21 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4887, !tbaa !2995
  %sparse_mode31 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 3, !dbg !4887, !ctir !253
  %22 = load i32, i32* %sparse_mode31, align 4, !dbg !4887, !tbaa !3481, !ctir !89
  %cmp32 = icmp ne i32 %22, 2, !dbg !4887
  br i1 %cmp32, label %if.else34, label %if.then33, !dbg !4890

if.then33:                                        ; preds = %land.lhs.true30, %if.end27
  br label %if.end35, !dbg !4890

if.else34:                                        ; preds = %land.lhs.true30
  call void @__assert_fail(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.11.154, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2957, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4887
  unreachable, !dbg !4887

if.end35:                                         ; preds = %if.then33
  ret i1 true, !dbg !4891
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_internal(i8* %src_name, i8* %dst_name, i1 zeroext %new_dst, %struct.stat* %parent, %struct.dir_list* %ancestors, %struct.cp_options* %x, i1 zeroext %command_line_arg, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4892 !ctir !313 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %parent.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %src_sb = alloca %struct.stat, align 8, !ctir !317
  %dst_sb = alloca %struct.stat, align 8, !ctir !317
  %src_mode = alloca i32, align 4, !ctir !160
  %dst_mode = alloca i32, align 4, !ctir !160
  %dst_mode_bits = alloca i32, align 4, !ctir !160
  %omitted_permissions = alloca i32, align 4, !ctir !160
  %restore_dst_mode = alloca i8, align 1, !ctir !120
  %earlier_file = alloca i8*, align 8, !ctir !9
  %dst_backup = alloca i8*, align 8, !ctir !9
  %delayed_ok = alloca i8, align 1, !ctir !120
  %copied_as_regular = alloca i8, align 1, !ctir !120
  %dest_is_symlink = alloca i8, align 1, !ctir !120
  %have_dst_lstat = alloca i8, align 1, !ctir !120
  %rename_errno = alloca i32, align 4, !ctir !7
  %name = alloca i8*, align 8, !ctir !115
  %dereference69 = alloca i8, align 1, !ctir !120
  %use_lstat = alloca i8, align 1, !ctir !120
  %fstatat_flags = alloca i32, align 4, !ctir !7
  %return_now = alloca i8, align 1, !ctir !120
  %options = alloca i32, align 4, !ctir !7
  %srcbase = alloca i8*, align 8, !ctir !115
  %fmt = alloca i8*, align 8, !ctir !115
  %tmp_backup = alloca i8*, align 8, !ctir !9
  %__old = alloca i8*, align 8, !ctir !115
  %__len = alloca i64, align 8, !ctir !55
  %__new = alloca i8*, align 8, !ctir !9
  %tmp = alloca i8*, align 8
  %lstat_ok = alloca i8, align 1, !ctir !120
  %tmp_buf = alloca %struct.stat, align 8, !ctir !317
  %dst_lstat_sb = alloca %struct.stat*, align 8, !ctir !356
  %dir = alloca %struct.dir_list*, align 8, !ctir !350
  %dot_sb = alloca %struct.stat, align 8, !ctir !317
  %dst_parent_sb = alloca %struct.stat, align 8, !ctir !317
  %dst_parent = alloca i8*, align 8, !ctir !9
  %in_current_dir = alloca i8, align 1, !ctir !120
  %err = alloca i32, align 4, !ctir !7
  %replace = alloca i8, align 1, !ctir !120
  %src_link_val = alloca i8*, align 8, !ctir !9
  %symlink_err = alloca i32, align 4, !ctir !7
  %dest_link_val = alloca i8*, align 8, !ctir !9
  %sb = alloca %struct.stat, align 8, !ctir !317
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !357
  %tmp955 = alloca %struct.timespec, align 8
  %tmp958 = alloca %struct.timespec, align 8
  %default_permissions = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4893, metadata !DIExpression()), !dbg !4894
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4895, metadata !DIExpression()), !dbg !4896
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !4897, metadata !DIExpression()), !dbg !4898
  store %struct.stat* %parent, %struct.stat** %parent.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %parent.addr, metadata !4899, metadata !DIExpression()), !dbg !4900
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !4901, metadata !DIExpression()), !dbg !4902
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4903, metadata !DIExpression()), !dbg !4904
  %frombool1 = zext i1 %command_line_arg to i8
  store i8 %frombool1, i8* %command_line_arg.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4905, metadata !DIExpression()), !dbg !4906
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !4907, metadata !DIExpression()), !dbg !4908
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4909, metadata !DIExpression()), !dbg !4910
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4911, metadata !DIExpression()), !dbg !4912
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !4913, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_sb, metadata !4915, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !4917, metadata !DIExpression()), !dbg !4918
  call void @llvm.dbg.declare(metadata i32* %dst_mode, metadata !4919, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.declare(metadata i32* %dst_mode_bits, metadata !4921, metadata !DIExpression()), !dbg !4922
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions, metadata !4923, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.declare(metadata i8* %restore_dst_mode, metadata !4925, metadata !DIExpression()), !dbg !4926
  store i8 0, i8* %restore_dst_mode, align 1, !dbg !4926, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8** %earlier_file, metadata !4927, metadata !DIExpression()), !dbg !4928
  store i8* null, i8** %earlier_file, align 8, !dbg !4928, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_backup, metadata !4929, metadata !DIExpression()), !dbg !4930
  store i8* null, i8** %dst_backup, align 8, !dbg !4930, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8* %delayed_ok, metadata !4931, metadata !DIExpression()), !dbg !4932
  call void @llvm.dbg.declare(metadata i8* %copied_as_regular, metadata !4933, metadata !DIExpression()), !dbg !4934
  store i8 0, i8* %copied_as_regular, align 1, !dbg !4934, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %dest_is_symlink, metadata !4935, metadata !DIExpression()), !dbg !4936
  store i8 0, i8* %dest_is_symlink, align 1, !dbg !4936, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %have_dst_lstat, metadata !4937, metadata !DIExpression()), !dbg !4938
  store i8 0, i8* %have_dst_lstat, align 1, !dbg !4938, !tbaa !3106
  %0 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4939, !tbaa !2995
  store i8 0, i8* %0, align 1, !dbg !4940, !tbaa !3106, !ctir !120
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !4941, metadata !DIExpression()), !dbg !4942
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4943, !tbaa !2995
  %rename_errno2 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 35, !dbg !4944, !ctir !253
  %2 = load i32, i32* %rename_errno2, align 4, !dbg !4944, !tbaa !3279, !ctir !7
  store i32 %2, i32* %rename_errno, align 4, !dbg !4942, !tbaa !2982
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4945, !tbaa !2995
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 9, !dbg !4947, !ctir !253
  %4 = load i8, i8* %move_mode, align 8, !dbg !4947, !tbaa !3414
  %tobool = trunc i8 %4 to i1, !dbg !4947, !ctir !120
  br i1 %tobool, label %if.then, label %if.end13, !dbg !4948

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %rename_errno, align 4, !dbg !4949, !tbaa !2982
  %cmp = icmp slt i32 %5, 0, !dbg !4952
  br i1 %cmp, label %if.then3, label %if.end, !dbg !4953

if.then3:                                         ; preds = %if.then
  %6 = load i8*, i8** %src_name.addr, align 8, !dbg !4954, !tbaa !2995
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !4955, !tbaa !2995
  %call = call i32 @renameatu(i32 -100, i8* %6, i32 -100, i8* %7, i32 1), !dbg !4956
  %tobool4 = icmp ne i32 %call, 0, !dbg !4956
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !4956

cond.true:                                        ; preds = %if.then3
  %call5 = call i32* @__errno_location() #15, !dbg !4957
  %8 = load i32, i32* %call5, align 4, !dbg !4957, !tbaa !2982, !ctir !7
  br label %cond.end, !dbg !4956

cond.false:                                       ; preds = %if.then3
  br label %cond.end, !dbg !4956

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 0, %cond.false ], !dbg !4956
  store i32 %cond, i32* %rename_errno, align 4, !dbg !4958, !tbaa !2982
  br label %if.end, !dbg !4959

if.end:                                           ; preds = %cond.end, %if.then
  %9 = load i32, i32* %rename_errno, align 4, !dbg !4960, !tbaa !2982
  %cmp6 = icmp eq i32 %9, 0, !dbg !4961
  %frombool7 = zext i1 %cmp6 to i8, !dbg !4962
  store i8 %frombool7, i8* %new_dst.addr, align 1, !dbg !4962, !tbaa !3106
  %10 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4963, !tbaa !2995
  %tobool8 = icmp ne i8* %10, null, !dbg !4963
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !4965

if.then9:                                         ; preds = %if.end
  %11 = load i8, i8* %new_dst.addr, align 1, !dbg !4966, !tbaa !3106
  %tobool10 = trunc i8 %11 to i1, !dbg !4966
  %12 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4967, !tbaa !2995
  %frombool11 = zext i1 %tobool10 to i8, !dbg !4968
  store i8 %frombool11, i8* %12, align 1, !dbg !4968, !tbaa !3106, !ctir !120
  br label %if.end12, !dbg !4969

if.end12:                                         ; preds = %if.then9, %if.end
  br label %if.end13, !dbg !4970

if.end13:                                         ; preds = %if.end12, %entry
  %13 = load i32, i32* %rename_errno, align 4, !dbg !4971, !tbaa !2982
  %cmp14 = icmp eq i32 %13, 0, !dbg !4973
  br i1 %cmp14, label %cond.true15, label %cond.false17, !dbg !4974

cond.true15:                                      ; preds = %if.end13
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4975, !tbaa !2995
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 34, !dbg !4976, !ctir !253
  %15 = load i8, i8* %last_file, align 1, !dbg !4976, !tbaa !3356
  %tobool16 = trunc i8 %15 to i1, !dbg !4976, !ctir !120
  br i1 %tobool16, label %if.end51, label %if.then20, !dbg !4971

cond.false17:                                     ; preds = %if.end13
  %16 = load i32, i32* %rename_errno, align 4, !dbg !4977, !tbaa !2982
  %cmp18 = icmp ne i32 %16, 17, !dbg !4978
  br i1 %cmp18, label %if.then20, label %lor.lhs.false, !dbg !4979

lor.lhs.false:                                    ; preds = %cond.false17
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4980, !tbaa !2995
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 2, !dbg !4981, !ctir !253
  %18 = load i32, i32* %interactive, align 8, !dbg !4981, !tbaa !3152, !ctir !83
  %cmp19 = icmp ne i32 %18, 2, !dbg !4982
  br i1 %cmp19, label %if.then20, label %if.end51, !dbg !4974

if.then20:                                        ; preds = %lor.lhs.false, %cond.false17, %cond.true15
  call void @llvm.dbg.declare(metadata i8** %name, metadata !4983, metadata !DIExpression()), !dbg !4985
  %19 = load i32, i32* %rename_errno, align 4, !dbg !4986, !tbaa !2982
  %cmp21 = icmp eq i32 %19, 0, !dbg !4987
  br i1 %cmp21, label %cond.true22, label %cond.false23, !dbg !4986

cond.true22:                                      ; preds = %if.then20
  %20 = load i8*, i8** %dst_name.addr, align 8, !dbg !4988, !tbaa !2995
  br label %cond.end24, !dbg !4986

cond.false23:                                     ; preds = %if.then20
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !4989, !tbaa !2995
  br label %cond.end24, !dbg !4986

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i8* [ %20, %cond.true22 ], [ %21, %cond.false23 ], !dbg !4986
  store i8* %cond25, i8** %name, align 8, !dbg !4985, !tbaa !2995
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4990, !tbaa !2995
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 1, !dbg !4990, !ctir !253
  %23 = load i32, i32* %dereference, align 4, !dbg !4990, !tbaa !3395, !ctir !76
  %cmp26 = icmp eq i32 %23, 2, !dbg !4990
  br i1 %cmp26, label %cond.true27, label %cond.false29, !dbg !4990

cond.true27:                                      ; preds = %cond.end24
  %24 = load i8*, i8** %name, align 8, !dbg !4990, !tbaa !2995
  %call28 = call i32 @lstat(i8* %24, %struct.stat* %src_sb) #10, !dbg !4990
  br label %cond.end31, !dbg !4990

cond.false29:                                     ; preds = %cond.end24
  %25 = load i8*, i8** %name, align 8, !dbg !4990, !tbaa !2995
  %call30 = call i32 @stat(i8* %25, %struct.stat* %src_sb) #10, !dbg !4990
  br label %cond.end31, !dbg !4990

cond.end31:                                       ; preds = %cond.false29, %cond.true27
  %cond32 = phi i32 [ %call28, %cond.true27 ], [ %call30, %cond.false29 ], !dbg !4990
  %cmp33 = icmp ne i32 %cond32, 0, !dbg !4992
  br i1 %cmp33, label %if.then34, label %if.end38, !dbg !4993

if.then34:                                        ; preds = %cond.end31
  %call35 = call i32* @__errno_location() #15, !dbg !4994
  %26 = load i32, i32* %call35, align 4, !dbg !4994, !tbaa !2982, !ctir !7
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #10, !dbg !4996
  %27 = load i8*, i8** %name, align 8, !dbg !4997, !tbaa !2995
  %call37 = call i8* @quotearg_style(i32 4, i8* %27), !dbg !4997
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %26, i8* %call36, i8* %call37), !dbg !4998
  store i1 false, i1* %retval, align 1, !dbg !4999
  br label %return, !dbg !4999

if.end38:                                         ; preds = %cond.end31
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !5000, !ctir !317
  %28 = load i32, i32* %st_mode, align 8, !dbg !5000, !tbaa !3178, !ctir !133
  store i32 %28, i32* %src_mode, align 4, !dbg !5001, !tbaa !2982
  %29 = load i32, i32* %src_mode, align 4, !dbg !5002, !tbaa !2982
  %and = and i32 %29, 61440, !dbg !5002
  %cmp39 = icmp eq i32 %and, 16384, !dbg !5002
  br i1 %cmp39, label %land.lhs.true, label %if.end50, !dbg !5004

land.lhs.true:                                    ; preds = %if.end38
  %30 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5005, !tbaa !2995
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 27, !dbg !5006, !ctir !253
  %31 = load i8, i8* %recursive, align 2, !dbg !5006, !tbaa !3477
  %tobool40 = trunc i8 %31 to i1, !dbg !5006, !ctir !120
  br i1 %tobool40, label %if.end50, label %if.then41, !dbg !5007

if.then41:                                        ; preds = %land.lhs.true
  %32 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5008, !tbaa !2995
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 10, !dbg !5010, !ctir !253
  %33 = load i8, i8* %install_mode, align 1, !dbg !5010, !tbaa !3418
  %tobool42 = trunc i8 %33 to i1, !dbg !5010, !ctir !120
  br i1 %tobool42, label %cond.false45, label %cond.true43, !dbg !5011

cond.true43:                                      ; preds = %if.then41
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13.98, i64 0, i64 0)) #10, !dbg !5012
  br label %cond.end47, !dbg !5011

cond.false45:                                     ; preds = %if.then41
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.99, i64 0, i64 0)) #10, !dbg !5013
  br label %cond.end47, !dbg !5011

cond.end47:                                       ; preds = %cond.false45, %cond.true43
  %cond48 = phi i8* [ %call44, %cond.true43 ], [ %call46, %cond.false45 ], !dbg !5011
  %34 = load i8*, i8** %src_name.addr, align 8, !dbg !5014, !tbaa !2995
  %call49 = call i8* @quotearg_style(i32 4, i8* %34), !dbg !5014
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %cond48, i8* %call49), !dbg !5015
  store i1 false, i1* %retval, align 1, !dbg !5016
  br label %return, !dbg !5016

if.end50:                                         ; preds = %land.lhs.true, %if.end38
  br label %if.end51, !dbg !5017

if.end51:                                         ; preds = %if.end50, %lor.lhs.false, %cond.true15
  %35 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5018, !tbaa !3106
  %tobool52 = trunc i8 %35 to i1, !dbg !5018
  br i1 %tobool52, label %land.lhs.true53, label %if.end68, !dbg !5020

land.lhs.true53:                                  ; preds = %if.end51
  %36 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5021, !tbaa !2995
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %36, i32 0, i32 38, !dbg !5022, !ctir !253
  %37 = load %struct.hash_table*, %struct.hash_table** %src_info, align 8, !dbg !5022, !tbaa !3516, !ctir !195
  %tobool54 = icmp ne %struct.hash_table* %37, null, !dbg !5021
  br i1 %tobool54, label %if.then55, label %if.end68, !dbg !5023

if.then55:                                        ; preds = %land.lhs.true53
  %38 = load i32, i32* %src_mode, align 4, !dbg !5024, !tbaa !2982
  %and56 = and i32 %38, 61440, !dbg !5024
  %cmp57 = icmp eq i32 %and56, 16384, !dbg !5024
  br i1 %cmp57, label %if.end66, label %land.lhs.true58, !dbg !5027

land.lhs.true58:                                  ; preds = %if.then55
  %39 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5028, !tbaa !2995
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %39, i32 0, i32 0, !dbg !5029, !ctir !253
  %40 = load i32, i32* %backup_type, align 8, !dbg !5029, !tbaa !3326, !ctir !68
  %cmp59 = icmp eq i32 %40, 0, !dbg !5030
  br i1 %cmp59, label %land.lhs.true60, label %if.end66, !dbg !5031

land.lhs.true60:                                  ; preds = %land.lhs.true58
  %41 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5032, !tbaa !2995
  %src_info61 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %41, i32 0, i32 38, !dbg !5033, !ctir !253
  %42 = load %struct.hash_table*, %struct.hash_table** %src_info61, align 8, !dbg !5033, !tbaa !3516, !ctir !195
  %43 = load i8*, i8** %src_name.addr, align 8, !dbg !5034, !tbaa !2995
  %call62 = call zeroext i1 @seen_file(%struct.hash_table* %42, i8* %43, %struct.stat* %src_sb), !dbg !5035
  br i1 %call62, label %if.then63, label %if.end66, !dbg !5036

if.then63:                                        ; preds = %land.lhs.true60
  %call64 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15.100, i64 0, i64 0)) #10, !dbg !5037
  %44 = load i8*, i8** %src_name.addr, align 8, !dbg !5039, !tbaa !2995
  %call65 = call i8* @quotearg_style(i32 4, i8* %44), !dbg !5039
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call64, i8* %call65), !dbg !5040
  store i1 true, i1* %retval, align 1, !dbg !5041
  br label %return, !dbg !5041

if.end66:                                         ; preds = %land.lhs.true60, %land.lhs.true58, %if.then55
  %45 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5042, !tbaa !2995
  %src_info67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %45, i32 0, i32 38, !dbg !5043, !ctir !253
  %46 = load %struct.hash_table*, %struct.hash_table** %src_info67, align 8, !dbg !5043, !tbaa !3516, !ctir !195
  %47 = load i8*, i8** %src_name.addr, align 8, !dbg !5044, !tbaa !2995
  call void @record_file(%struct.hash_table* %46, i8* %47, %struct.stat* %src_sb), !dbg !5045
  br label %if.end68, !dbg !5046

if.end68:                                         ; preds = %if.end66, %land.lhs.true53, %if.end51
  call void @llvm.dbg.declare(metadata i8* %dereference69, metadata !5047, metadata !DIExpression()), !dbg !5048
  %48 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5049, !tbaa !2995
  %49 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5050, !tbaa !3106
  %tobool70 = trunc i8 %49 to i1, !dbg !5050
  %call71 = call zeroext i1 @should_dereference(%struct.cp_options* %48, i1 zeroext %tobool70) #14, !dbg !5051
  %frombool72 = zext i1 %call71 to i8, !dbg !5048
  store i8 %frombool72, i8* %dereference69, align 1, !dbg !5048, !tbaa !3106
  %50 = load i8, i8* %new_dst.addr, align 1, !dbg !5052, !tbaa !3106
  %tobool73 = trunc i8 %50 to i1, !dbg !5052
  br i1 %tobool73, label %if.end348, label %if.then74, !dbg !5054

if.then74:                                        ; preds = %if.end68
  %51 = load i32, i32* %rename_errno, align 4, !dbg !5055, !tbaa !2982
  %cmp75 = icmp eq i32 %51, 17, !dbg !5058
  br i1 %cmp75, label %land.lhs.true76, label %if.then79, !dbg !5059

land.lhs.true76:                                  ; preds = %if.then74
  %52 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5060, !tbaa !2995
  %interactive77 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %52, i32 0, i32 2, !dbg !5061, !ctir !253
  %53 = load i32, i32* %interactive77, align 8, !dbg !5061, !tbaa !3152, !ctir !83
  %cmp78 = icmp eq i32 %53, 2, !dbg !5062
  br i1 %cmp78, label %if.end125, label %if.then79, !dbg !5063

if.then79:                                        ; preds = %land.lhs.true76, %if.then74
  call void @llvm.dbg.declare(metadata i8* %use_lstat, metadata !5064, metadata !DIExpression()), !dbg !5066
  %54 = load i32, i32* %src_mode, align 4, !dbg !5067, !tbaa !2982
  %and80 = and i32 %54, 61440, !dbg !5067
  %cmp81 = icmp eq i32 %and80, 32768, !dbg !5067
  br i1 %cmp81, label %lor.lhs.false90, label %land.lhs.true82, !dbg !5068

land.lhs.true82:                                  ; preds = %if.then79
  %55 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5069, !tbaa !2995
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %55, i32 0, i32 5, !dbg !5070, !ctir !253
  %56 = load i8, i8* %copy_as_regular, align 4, !dbg !5070, !tbaa !3387
  %tobool83 = trunc i8 %56 to i1, !dbg !5070, !ctir !120
  br i1 %tobool83, label %lor.lhs.false84, label %lor.end, !dbg !5071

lor.lhs.false84:                                  ; preds = %land.lhs.true82
  %57 = load i32, i32* %src_mode, align 4, !dbg !5072, !tbaa !2982
  %and85 = and i32 %57, 61440, !dbg !5072
  %cmp86 = icmp eq i32 %and85, 16384, !dbg !5072
  br i1 %cmp86, label %lor.end, label %lor.lhs.false87, !dbg !5073

lor.lhs.false87:                                  ; preds = %lor.lhs.false84
  %58 = load i32, i32* %src_mode, align 4, !dbg !5074, !tbaa !2982
  %and88 = and i32 %58, 61440, !dbg !5074
  %cmp89 = icmp eq i32 %and88, 40960, !dbg !5074
  br i1 %cmp89, label %lor.end, label %lor.lhs.false90, !dbg !5075

lor.lhs.false90:                                  ; preds = %lor.lhs.false87, %if.then79
  %59 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5076, !tbaa !2995
  %move_mode91 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %59, i32 0, i32 9, !dbg !5077, !ctir !253
  %60 = load i8, i8* %move_mode91, align 8, !dbg !5077, !tbaa !3414
  %tobool92 = trunc i8 %60 to i1, !dbg !5077, !ctir !120
  br i1 %tobool92, label %lor.end, label %lor.lhs.false93, !dbg !5078

lor.lhs.false93:                                  ; preds = %lor.lhs.false90
  %61 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5079, !tbaa !2995
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %61, i32 0, i32 29, !dbg !5080, !ctir !253
  %62 = load i8, i8* %symbolic_link, align 4, !dbg !5080, !tbaa !3485
  %tobool94 = trunc i8 %62 to i1, !dbg !5080, !ctir !120
  br i1 %tobool94, label %lor.end, label %lor.lhs.false95, !dbg !5081

lor.lhs.false95:                                  ; preds = %lor.lhs.false93
  %63 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5082, !tbaa !2995
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %63, i32 0, i32 8, !dbg !5083, !ctir !253
  %64 = load i8, i8* %hard_link, align 1, !dbg !5083, !tbaa !3407
  %tobool96 = trunc i8 %64 to i1, !dbg !5083, !ctir !120
  br i1 %tobool96, label %lor.end, label %lor.lhs.false97, !dbg !5084

lor.lhs.false97:                                  ; preds = %lor.lhs.false95
  %65 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5085, !tbaa !2995
  %backup_type98 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %65, i32 0, i32 0, !dbg !5086, !ctir !253
  %66 = load i32, i32* %backup_type98, align 8, !dbg !5086, !tbaa !3326, !ctir !68
  %cmp99 = icmp ne i32 %66, 0, !dbg !5087
  br i1 %cmp99, label %lor.end, label %lor.rhs, !dbg !5088

lor.rhs:                                          ; preds = %lor.lhs.false97
  %67 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5089, !tbaa !2995
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 6, !dbg !5090, !ctir !253
  %68 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !5090, !tbaa !3399
  %tobool100 = trunc i8 %68 to i1, !dbg !5090, !ctir !120
  br label %lor.end, !dbg !5088

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false97, %lor.lhs.false95, %lor.lhs.false93, %lor.lhs.false90, %lor.lhs.false87, %lor.lhs.false84, %land.lhs.true82
  %69 = phi i1 [ true, %lor.lhs.false97 ], [ true, %lor.lhs.false95 ], [ true, %lor.lhs.false93 ], [ true, %lor.lhs.false90 ], [ true, %lor.lhs.false87 ], [ true, %lor.lhs.false84 ], [ true, %land.lhs.true82 ], [ %tobool100, %lor.rhs ]
  %frombool101 = zext i1 %69 to i8, !dbg !5066
  store i8 %frombool101, i8* %use_lstat, align 1, !dbg !5066, !tbaa !3106
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags, metadata !5091, metadata !DIExpression()), !dbg !5092
  %70 = load i8, i8* %use_lstat, align 1, !dbg !5093, !tbaa !3106
  %tobool102 = trunc i8 %70 to i1, !dbg !5093
  %71 = zext i1 %tobool102 to i64, !dbg !5093
  %cond103 = select i1 %tobool102, i32 256, i32 0, !dbg !5093
  store i32 %cond103, i32* %fstatat_flags, align 4, !dbg !5092, !tbaa !2982
  %72 = load i8*, i8** %dst_name.addr, align 8, !dbg !5094, !tbaa !2995
  %73 = load i32, i32* %fstatat_flags, align 4, !dbg !5096, !tbaa !2982
  %call104 = call i32 @fstatat(i32 -100, i8* %72, %struct.stat* %dst_sb, i32 %73) #10, !dbg !5097
  %cmp105 = icmp eq i32 %call104, 0, !dbg !5098
  br i1 %cmp105, label %if.then106, label %if.else, !dbg !5099

if.then106:                                       ; preds = %lor.end
  %74 = load i8, i8* %use_lstat, align 1, !dbg !5100, !tbaa !3106
  %tobool107 = trunc i8 %74 to i1, !dbg !5100
  %frombool108 = zext i1 %tobool107 to i8, !dbg !5102
  store i8 %frombool108, i8* %have_dst_lstat, align 1, !dbg !5102, !tbaa !3106
  store i32 17, i32* %rename_errno, align 4, !dbg !5103, !tbaa !2982
  br label %if.end124, !dbg !5104

if.else:                                          ; preds = %lor.end
  %call109 = call i32* @__errno_location() #15, !dbg !5105
  %75 = load i32, i32* %call109, align 4, !dbg !5105, !tbaa !2982, !ctir !7
  %cmp110 = icmp eq i32 %75, 40, !dbg !5108
  br i1 %cmp110, label %land.lhs.true111, label %if.else114, !dbg !5109

land.lhs.true111:                                 ; preds = %if.else
  %76 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5110, !tbaa !2995
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %76, i32 0, i32 7, !dbg !5111, !ctir !253
  %77 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !5111, !tbaa !3403
  %tobool112 = trunc i8 %77 to i1, !dbg !5111, !ctir !120
  br i1 %tobool112, label %if.then113, label %if.else114, !dbg !5112

if.then113:                                       ; preds = %land.lhs.true111
  br label %if.end123, !dbg !5112

if.else114:                                       ; preds = %land.lhs.true111, %if.else
  %call115 = call i32* @__errno_location() #15, !dbg !5113
  %78 = load i32, i32* %call115, align 4, !dbg !5113, !tbaa !2982, !ctir !7
  %cmp116 = icmp ne i32 %78, 2, !dbg !5115
  br i1 %cmp116, label %if.then117, label %if.else121, !dbg !5116

if.then117:                                       ; preds = %if.else114
  %call118 = call i32* @__errno_location() #15, !dbg !5117
  %79 = load i32, i32* %call118, align 4, !dbg !5117, !tbaa !2982, !ctir !7
  %call119 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #10, !dbg !5119
  %80 = load i8*, i8** %dst_name.addr, align 8, !dbg !5120, !tbaa !2995
  %call120 = call i8* @quotearg_style(i32 4, i8* %80), !dbg !5120
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %79, i8* %call119, i8* %call120), !dbg !5121
  store i1 false, i1* %retval, align 1, !dbg !5122
  br label %return, !dbg !5122

if.else121:                                       ; preds = %if.else114
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5123, !tbaa !3106
  br label %if.end122

if.end122:                                        ; preds = %if.else121
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then113
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then106
  br label %if.end125, !dbg !5124

if.end125:                                        ; preds = %if.end124, %land.lhs.true76
  %81 = load i32, i32* %rename_errno, align 4, !dbg !5125, !tbaa !2982
  %cmp126 = icmp eq i32 %81, 17, !dbg !5127
  br i1 %cmp126, label %if.then127, label %if.end347, !dbg !5128

if.then127:                                       ; preds = %if.end125
  call void @llvm.dbg.declare(metadata i8* %return_now, metadata !5129, metadata !DIExpression()), !dbg !5131
  store i8 0, i8* %return_now, align 1, !dbg !5131, !tbaa !3106
  %82 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5132, !tbaa !2995
  %interactive128 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %82, i32 0, i32 2, !dbg !5134, !ctir !253
  %83 = load i32, i32* %interactive128, align 8, !dbg !5134, !tbaa !3152, !ctir !83
  %cmp129 = icmp ne i32 %83, 2, !dbg !5135
  br i1 %cmp129, label %land.lhs.true130, label %if.end136, !dbg !5136

land.lhs.true130:                                 ; preds = %if.then127
  %84 = load i8*, i8** %src_name.addr, align 8, !dbg !5137, !tbaa !2995
  %85 = load i8*, i8** %dst_name.addr, align 8, !dbg !5138, !tbaa !2995
  %86 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5139, !tbaa !2995
  %call131 = call zeroext i1 @same_file_ok(i8* %84, %struct.stat* %src_sb, i8* %85, %struct.stat* %dst_sb, %struct.cp_options* %86, i8* %return_now), !dbg !5140
  br i1 %call131, label %if.end136, label %if.then132, !dbg !5141

if.then132:                                       ; preds = %land.lhs.true130
  %call133 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16.101, i64 0, i64 0)) #10, !dbg !5142
  %87 = load i8*, i8** %src_name.addr, align 8, !dbg !5144, !tbaa !2995
  %call134 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %87), !dbg !5144
  %88 = load i8*, i8** %dst_name.addr, align 8, !dbg !5145, !tbaa !2995
  %call135 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %88), !dbg !5145
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call133, i8* %call134, i8* %call135), !dbg !5146
  store i1 false, i1* %retval, align 1, !dbg !5147
  br label %return, !dbg !5147

if.end136:                                        ; preds = %land.lhs.true130, %if.then127
  %89 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5148, !tbaa !2995
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 30, !dbg !5150, !ctir !253
  %90 = load i8, i8* %update, align 1, !dbg !5150, !tbaa !3191
  %tobool137 = trunc i8 %90 to i1, !dbg !5150, !ctir !120
  br i1 %tobool137, label %land.lhs.true138, label %if.end167, !dbg !5151

land.lhs.true138:                                 ; preds = %if.end136
  %91 = load i32, i32* %src_mode, align 4, !dbg !5152, !tbaa !2982
  %and139 = and i32 %91, 61440, !dbg !5152
  %cmp140 = icmp eq i32 %and139, 16384, !dbg !5152
  br i1 %cmp140, label %if.end167, label %if.then141, !dbg !5153

if.then141:                                       ; preds = %land.lhs.true138
  call void @llvm.dbg.declare(metadata i32* %options, metadata !5154, metadata !DIExpression()), !dbg !5156
  %92 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5157, !tbaa !2995
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %92, i32 0, i32 16, !dbg !5158, !ctir !253
  %93 = load i8, i8* %preserve_timestamps, align 1, !dbg !5158, !tbaa !3438
  %tobool142 = trunc i8 %93 to i1, !dbg !5158, !ctir !120
  br i1 %tobool142, label %land.rhs, label %land.end148, !dbg !5159

land.rhs:                                         ; preds = %if.then141
  %94 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5160, !tbaa !2995
  %move_mode143 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %94, i32 0, i32 9, !dbg !5161, !ctir !253
  %95 = load i8, i8* %move_mode143, align 8, !dbg !5161, !tbaa !3414
  %tobool144 = trunc i8 %95 to i1, !dbg !5161, !ctir !120
  br i1 %tobool144, label %land.rhs145, label %land.end, !dbg !5162

land.rhs145:                                      ; preds = %land.rhs
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !5163, !ctir !317
  %96 = load i64, i64* %st_dev, align 8, !dbg !5163, !tbaa !3873, !ctir !231
  %st_dev146 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5164, !ctir !317
  %97 = load i64, i64* %st_dev146, align 8, !dbg !5164, !tbaa !3873, !ctir !231
  %cmp147 = icmp eq i64 %96, %97, !dbg !5165
  br label %land.end

land.end:                                         ; preds = %land.rhs145, %land.rhs
  %98 = phi i1 [ false, %land.rhs ], [ %cmp147, %land.rhs145 ], !dbg !5166
  %lnot = xor i1 %98, true, !dbg !5167
  br label %land.end148

land.end148:                                      ; preds = %land.end, %if.then141
  %99 = phi i1 [ false, %if.then141 ], [ %lnot, %land.end ], !dbg !5166
  %100 = zext i1 %99 to i64, !dbg !5168
  %cond149 = select i1 %99, i32 1, i32 0, !dbg !5168
  store i32 %cond149, i32* %options, align 4, !dbg !5156, !tbaa !2982
  %101 = load i8*, i8** %dst_name.addr, align 8, !dbg !5169, !tbaa !2995
  %102 = load i32, i32* %options, align 4, !dbg !5171, !tbaa !2982
  %call150 = call i32 @utimecmp(i8* %101, %struct.stat* %dst_sb, %struct.stat* %src_sb, i32 %102), !dbg !5172
  %cmp151 = icmp sle i32 0, %call150, !dbg !5173
  br i1 %cmp151, label %if.then152, label %if.end166, !dbg !5174

if.then152:                                       ; preds = %land.end148
  %103 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5175, !tbaa !2995
  %tobool153 = icmp ne i8* %103, null, !dbg !5175
  br i1 %tobool153, label %if.then154, label %if.end155, !dbg !5178

if.then154:                                       ; preds = %if.then152
  %104 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5179, !tbaa !2995
  store i8 1, i8* %104, align 1, !dbg !5180, !tbaa !3106, !ctir !120
  br label %if.end155, !dbg !5181

if.end155:                                        ; preds = %if.then154, %if.then152
  %105 = load i8*, i8** %dst_name.addr, align 8, !dbg !5182, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5183, !ctir !317
  %106 = load i64, i64* %st_ino, align 8, !dbg !5183, !tbaa !3870, !ctir !228
  %st_dev156 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5184, !ctir !317
  %107 = load i64, i64* %st_dev156, align 8, !dbg !5184, !tbaa !3873, !ctir !231
  %call157 = call i8* @remember_copied(i8* %105, i64 %106, i64 %107), !dbg !5185
  store i8* %call157, i8** %earlier_file, align 8, !dbg !5186, !tbaa !2995
  %108 = load i8*, i8** %earlier_file, align 8, !dbg !5187, !tbaa !2995
  %tobool158 = icmp ne i8* %108, null, !dbg !5187
  br i1 %tobool158, label %if.then159, label %if.end165, !dbg !5189

if.then159:                                       ; preds = %if.end155
  %109 = load i8*, i8** %earlier_file, align 8, !dbg !5190, !tbaa !2995
  %110 = load i8*, i8** %dst_name.addr, align 8, !dbg !5193, !tbaa !2995
  %111 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5194, !tbaa !2995
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %111, i32 0, i32 31, !dbg !5195, !ctir !253
  %112 = load i8, i8* %verbose, align 2, !dbg !5195, !tbaa !3195
  %tobool160 = trunc i8 %112 to i1, !dbg !5195, !ctir !120
  %113 = load i8, i8* %dereference69, align 1, !dbg !5196, !tbaa !3106
  %tobool161 = trunc i8 %113 to i1, !dbg !5196
  %call162 = call zeroext i1 @create_hard_link(i8* %109, i8* %110, i1 zeroext true, i1 zeroext %tobool160, i1 zeroext %tobool161), !dbg !5197
  br i1 %call162, label %if.end164, label %if.then163, !dbg !5198

if.then163:                                       ; preds = %if.then159
  br label %un_backup, !dbg !5199

if.end164:                                        ; preds = %if.then159
  br label %if.end165, !dbg !5201

if.end165:                                        ; preds = %if.end164, %if.end155
  store i1 true, i1* %retval, align 1, !dbg !5202
  br label %return, !dbg !5202

if.end166:                                        ; preds = %land.end148
  br label %if.end167, !dbg !5203

if.end167:                                        ; preds = %if.end166, %land.lhs.true138, %if.end136
  %114 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5204, !tbaa !2995
  %move_mode168 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %114, i32 0, i32 9, !dbg !5206, !ctir !253
  %115 = load i8, i8* %move_mode168, align 8, !dbg !5206, !tbaa !3414
  %tobool169 = trunc i8 %115 to i1, !dbg !5206, !ctir !120
  br i1 %tobool169, label %if.then170, label %if.else177, !dbg !5207

if.then170:                                       ; preds = %if.end167
  %116 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5208, !tbaa !2995
  %117 = load i8*, i8** %dst_name.addr, align 8, !dbg !5211, !tbaa !2995
  %call171 = call zeroext i1 @abandon_move(%struct.cp_options* %116, i8* %117, %struct.stat* %dst_sb), !dbg !5212
  br i1 %call171, label %if.then172, label %if.end176, !dbg !5213

if.then172:                                       ; preds = %if.then170
  %118 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5214, !tbaa !2995
  %tobool173 = icmp ne i8* %118, null, !dbg !5214
  br i1 %tobool173, label %if.then174, label %if.end175, !dbg !5217

if.then174:                                       ; preds = %if.then172
  %119 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5218, !tbaa !2995
  store i8 1, i8* %119, align 1, !dbg !5219, !tbaa !3106, !ctir !120
  br label %if.end175, !dbg !5220

if.end175:                                        ; preds = %if.then174, %if.then172
  store i1 true, i1* %retval, align 1, !dbg !5221
  br label %return, !dbg !5221

if.end176:                                        ; preds = %if.then170
  br label %if.end190, !dbg !5222

if.else177:                                       ; preds = %if.end167
  %120 = load i32, i32* %src_mode, align 4, !dbg !5223, !tbaa !2982
  %and178 = and i32 %120, 61440, !dbg !5223
  %cmp179 = icmp eq i32 %and178, 16384, !dbg !5223
  br i1 %cmp179, label %if.end189, label %land.lhs.true180, !dbg !5226

land.lhs.true180:                                 ; preds = %if.else177
  %121 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5227, !tbaa !2995
  %interactive181 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %121, i32 0, i32 2, !dbg !5228, !ctir !253
  %122 = load i32, i32* %interactive181, align 8, !dbg !5228, !tbaa !3152, !ctir !83
  %cmp182 = icmp eq i32 %122, 2, !dbg !5229
  br i1 %cmp182, label %if.then188, label %lor.lhs.false183, !dbg !5230

lor.lhs.false183:                                 ; preds = %land.lhs.true180
  %123 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5231, !tbaa !2995
  %interactive184 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %123, i32 0, i32 2, !dbg !5232, !ctir !253
  %124 = load i32, i32* %interactive184, align 8, !dbg !5232, !tbaa !3152, !ctir !83
  %cmp185 = icmp eq i32 %124, 3, !dbg !5233
  br i1 %cmp185, label %land.lhs.true186, label %if.end189, !dbg !5234

land.lhs.true186:                                 ; preds = %lor.lhs.false183
  %125 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5235, !tbaa !2995
  %126 = load i8*, i8** %dst_name.addr, align 8, !dbg !5236, !tbaa !2995
  %call187 = call zeroext i1 @overwrite_ok(%struct.cp_options* %125, i8* %126, %struct.stat* %dst_sb), !dbg !5237
  br i1 %call187, label %if.end189, label %if.then188, !dbg !5238

if.then188:                                       ; preds = %land.lhs.true186, %land.lhs.true180
  store i1 true, i1* %retval, align 1, !dbg !5239
  br label %return, !dbg !5239

if.end189:                                        ; preds = %land.lhs.true186, %lor.lhs.false183, %if.else177
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.end176
  %127 = load i8, i8* %return_now, align 1, !dbg !5240, !tbaa !3106
  %tobool191 = trunc i8 %127 to i1, !dbg !5240
  br i1 %tobool191, label %if.then192, label %if.end193, !dbg !5242

if.then192:                                       ; preds = %if.end190
  store i1 true, i1* %retval, align 1, !dbg !5243
  br label %return, !dbg !5243

if.end193:                                        ; preds = %if.end190
  %st_mode194 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5244, !ctir !317
  %128 = load i32, i32* %st_mode194, align 8, !dbg !5244, !tbaa !3178, !ctir !133
  %and195 = and i32 %128, 61440, !dbg !5244
  %cmp196 = icmp eq i32 %and195, 16384, !dbg !5244
  br i1 %cmp196, label %if.end224, label %if.then197, !dbg !5246

if.then197:                                       ; preds = %if.end193
  %129 = load i32, i32* %src_mode, align 4, !dbg !5247, !tbaa !2982
  %and198 = and i32 %129, 61440, !dbg !5247
  %cmp199 = icmp eq i32 %and198, 16384, !dbg !5247
  br i1 %cmp199, label %if.then200, label %if.end212, !dbg !5250

if.then200:                                       ; preds = %if.then197
  %130 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5251, !tbaa !2995
  %move_mode201 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %130, i32 0, i32 9, !dbg !5254, !ctir !253
  %131 = load i8, i8* %move_mode201, align 8, !dbg !5254, !tbaa !3414
  %tobool202 = trunc i8 %131 to i1, !dbg !5254, !ctir !120
  br i1 %tobool202, label %land.lhs.true203, label %if.else207, !dbg !5255

land.lhs.true203:                                 ; preds = %if.then200
  %132 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5256, !tbaa !2995
  %backup_type204 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %132, i32 0, i32 0, !dbg !5257, !ctir !253
  %133 = load i32, i32* %backup_type204, align 8, !dbg !5257, !tbaa !3326, !ctir !68
  %cmp205 = icmp ne i32 %133, 0, !dbg !5258
  br i1 %cmp205, label %if.then206, label %if.else207, !dbg !5259

if.then206:                                       ; preds = %land.lhs.true203
  br label %if.end211, !dbg !5260

if.else207:                                       ; preds = %land.lhs.true203, %if.then200
  %call208 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17.102, i64 0, i64 0)) #10, !dbg !5262
  %134 = load i8*, i8** %dst_name.addr, align 8, !dbg !5264, !tbaa !2995
  %call209 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %134), !dbg !5264
  %135 = load i8*, i8** %src_name.addr, align 8, !dbg !5265, !tbaa !2995
  %call210 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %135), !dbg !5265
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call208, i8* %call209, i8* %call210), !dbg !5266
  store i1 false, i1* %retval, align 1, !dbg !5267
  br label %return, !dbg !5267

if.end211:                                        ; preds = %if.then206
  br label %if.end212, !dbg !5268

if.end212:                                        ; preds = %if.end211, %if.then197
  %136 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5269, !tbaa !3106
  %tobool213 = trunc i8 %136 to i1, !dbg !5269
  br i1 %tobool213, label %land.lhs.true214, label %if.end223, !dbg !5271

land.lhs.true214:                                 ; preds = %if.end212
  %137 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5272, !tbaa !2995
  %backup_type215 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %137, i32 0, i32 0, !dbg !5273, !ctir !253
  %138 = load i32, i32* %backup_type215, align 8, !dbg !5273, !tbaa !3326, !ctir !68
  %cmp216 = icmp ne i32 %138, 3, !dbg !5274
  br i1 %cmp216, label %land.lhs.true217, label %if.end223, !dbg !5275

land.lhs.true217:                                 ; preds = %land.lhs.true214
  %139 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5276, !tbaa !2995
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %139, i32 0, i32 37, !dbg !5277, !ctir !253
  %140 = load %struct.hash_table*, %struct.hash_table** %dest_info, align 8, !dbg !5277, !tbaa !3512, !ctir !195
  %141 = load i8*, i8** %dst_name.addr, align 8, !dbg !5278, !tbaa !2995
  %call218 = call zeroext i1 @seen_file(%struct.hash_table* %140, i8* %141, %struct.stat* %dst_sb), !dbg !5279
  br i1 %call218, label %if.then219, label %if.end223, !dbg !5280

if.then219:                                       ; preds = %land.lhs.true217
  %call220 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18.103, i64 0, i64 0)) #10, !dbg !5281
  %142 = load i8*, i8** %dst_name.addr, align 8, !dbg !5283, !tbaa !2995
  %call221 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %142), !dbg !5283
  %143 = load i8*, i8** %src_name.addr, align 8, !dbg !5284, !tbaa !2995
  %call222 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %143), !dbg !5284
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call220, i8* %call221, i8* %call222), !dbg !5285
  store i1 false, i1* %retval, align 1, !dbg !5286
  br label %return, !dbg !5286

if.end223:                                        ; preds = %land.lhs.true217, %land.lhs.true214, %if.end212
  br label %if.end224, !dbg !5287

if.end224:                                        ; preds = %if.end223, %if.end193
  %144 = load i32, i32* %src_mode, align 4, !dbg !5288, !tbaa !2982
  %and225 = and i32 %144, 61440, !dbg !5288
  %cmp226 = icmp eq i32 %and225, 16384, !dbg !5288
  br i1 %cmp226, label %if.end243, label %if.then227, !dbg !5290

if.then227:                                       ; preds = %if.end224
  %st_mode228 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5291, !ctir !317
  %145 = load i32, i32* %st_mode228, align 8, !dbg !5291, !tbaa !3178, !ctir !133
  %and229 = and i32 %145, 61440, !dbg !5291
  %cmp230 = icmp eq i32 %and229, 16384, !dbg !5291
  br i1 %cmp230, label %if.then231, label %if.end242, !dbg !5294

if.then231:                                       ; preds = %if.then227
  %146 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5295, !tbaa !2995
  %move_mode232 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %146, i32 0, i32 9, !dbg !5298, !ctir !253
  %147 = load i8, i8* %move_mode232, align 8, !dbg !5298, !tbaa !3414
  %tobool233 = trunc i8 %147 to i1, !dbg !5298, !ctir !120
  br i1 %tobool233, label %land.lhs.true234, label %if.else238, !dbg !5299

land.lhs.true234:                                 ; preds = %if.then231
  %148 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5300, !tbaa !2995
  %backup_type235 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %148, i32 0, i32 0, !dbg !5301, !ctir !253
  %149 = load i32, i32* %backup_type235, align 8, !dbg !5301, !tbaa !3326, !ctir !68
  %cmp236 = icmp ne i32 %149, 0, !dbg !5302
  br i1 %cmp236, label %if.then237, label %if.else238, !dbg !5303

if.then237:                                       ; preds = %land.lhs.true234
  br label %if.end241, !dbg !5304

if.else238:                                       ; preds = %land.lhs.true234, %if.then231
  %call239 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19.104, i64 0, i64 0)) #10, !dbg !5306
  %150 = load i8*, i8** %dst_name.addr, align 8, !dbg !5308, !tbaa !2995
  %call240 = call i8* @quotearg_style(i32 4, i8* %150), !dbg !5308
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call239, i8* %call240), !dbg !5309
  store i1 false, i1* %retval, align 1, !dbg !5310
  br label %return, !dbg !5310

if.end241:                                        ; preds = %if.then237
  br label %if.end242, !dbg !5311

if.end242:                                        ; preds = %if.end241, %if.then227
  br label %if.end243, !dbg !5312

if.end243:                                        ; preds = %if.end242, %if.end224
  %151 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5313, !tbaa !2995
  %move_mode244 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %151, i32 0, i32 9, !dbg !5315, !ctir !253
  %152 = load i8, i8* %move_mode244, align 8, !dbg !5315, !tbaa !3414
  %tobool245 = trunc i8 %152 to i1, !dbg !5315, !ctir !120
  br i1 %tobool245, label %if.then246, label %if.end262, !dbg !5316

if.then246:                                       ; preds = %if.end243
  %st_mode247 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !5317, !ctir !317
  %153 = load i32, i32* %st_mode247, align 8, !dbg !5317, !tbaa !3178, !ctir !133
  %and248 = and i32 %153, 61440, !dbg !5317
  %cmp249 = icmp eq i32 %and248, 16384, !dbg !5317
  br i1 %cmp249, label %land.lhs.true250, label %if.end261, !dbg !5320

land.lhs.true250:                                 ; preds = %if.then246
  %st_mode251 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5321, !ctir !317
  %154 = load i32, i32* %st_mode251, align 8, !dbg !5321, !tbaa !3178, !ctir !133
  %and252 = and i32 %154, 61440, !dbg !5321
  %cmp253 = icmp eq i32 %and252, 16384, !dbg !5321
  br i1 %cmp253, label %if.end261, label %land.lhs.true254, !dbg !5322

land.lhs.true254:                                 ; preds = %land.lhs.true250
  %155 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5323, !tbaa !2995
  %backup_type255 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %155, i32 0, i32 0, !dbg !5324, !ctir !253
  %156 = load i32, i32* %backup_type255, align 8, !dbg !5324, !tbaa !3326, !ctir !68
  %cmp256 = icmp eq i32 %156, 0, !dbg !5325
  br i1 %cmp256, label %if.then257, label %if.end261, !dbg !5326

if.then257:                                       ; preds = %land.lhs.true254
  %call258 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.105, i64 0, i64 0)) #10, !dbg !5327
  %157 = load i8*, i8** %src_name.addr, align 8, !dbg !5329, !tbaa !2995
  %call259 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %157), !dbg !5329
  %158 = load i8*, i8** %dst_name.addr, align 8, !dbg !5330, !tbaa !2995
  %call260 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %158), !dbg !5330
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call258, i8* %call259, i8* %call260), !dbg !5331
  store i1 false, i1* %retval, align 1, !dbg !5332
  br label %return, !dbg !5332

if.end261:                                        ; preds = %land.lhs.true254, %land.lhs.true250, %if.then246
  br label %if.end262, !dbg !5333

if.end262:                                        ; preds = %if.end261, %if.end243
  call void @llvm.dbg.declare(metadata i8** %srcbase, metadata !5334, metadata !DIExpression()), !dbg !5335
  %159 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5336, !tbaa !2995
  %backup_type263 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %159, i32 0, i32 0, !dbg !5338, !ctir !253
  %160 = load i32, i32* %backup_type263, align 8, !dbg !5338, !tbaa !3326, !ctir !68
  %cmp264 = icmp ne i32 %160, 0, !dbg !5339
  br i1 %cmp264, label %land.lhs.true265, label %if.else306, !dbg !5340

land.lhs.true265:                                 ; preds = %if.end262
  %161 = load i8*, i8** %src_name.addr, align 8, !dbg !5341, !tbaa !2995
  %call266 = call i8* @last_component(i8* %161) #14, !dbg !5342
  store i8* %call266, i8** %srcbase, align 8, !dbg !5343, !tbaa !2995
  %call267 = call zeroext i1 @dot_or_dotdot.106(i8* %call266), !dbg !5344
  br i1 %call267, label %if.else306, label %land.lhs.true268, !dbg !5345

land.lhs.true268:                                 ; preds = %land.lhs.true265
  %162 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5346, !tbaa !2995
  %move_mode269 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %162, i32 0, i32 9, !dbg !5347, !ctir !253
  %163 = load i8, i8* %move_mode269, align 8, !dbg !5347, !tbaa !3414
  %tobool270 = trunc i8 %163 to i1, !dbg !5347, !ctir !120
  br i1 %tobool270, label %if.then275, label %lor.lhs.false271, !dbg !5348

lor.lhs.false271:                                 ; preds = %land.lhs.true268
  %st_mode272 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5349, !ctir !317
  %164 = load i32, i32* %st_mode272, align 8, !dbg !5349, !tbaa !3178, !ctir !133
  %and273 = and i32 %164, 61440, !dbg !5349
  %cmp274 = icmp eq i32 %and273, 16384, !dbg !5349
  br i1 %cmp274, label %if.else306, label %if.then275, !dbg !5350

if.then275:                                       ; preds = %lor.lhs.false271, %land.lhs.true268
  %165 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5351, !tbaa !2995
  %backup_type276 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %165, i32 0, i32 0, !dbg !5354, !ctir !253
  %166 = load i32, i32* %backup_type276, align 8, !dbg !5354, !tbaa !3326, !ctir !68
  %cmp277 = icmp ne i32 %166, 3, !dbg !5355
  br i1 %cmp277, label %land.lhs.true278, label %if.end291, !dbg !5356

land.lhs.true278:                                 ; preds = %if.then275
  %167 = load i8*, i8** %srcbase, align 8, !dbg !5357, !tbaa !2995
  %168 = load i8*, i8** %dst_name.addr, align 8, !dbg !5358, !tbaa !2995
  %call279 = call zeroext i1 @source_is_dst_backup(i8* %167, %struct.stat* %src_sb, i8* %168), !dbg !5359
  br i1 %call279, label %if.then280, label %if.end291, !dbg !5360

if.then280:                                       ; preds = %land.lhs.true278
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !5361, metadata !DIExpression()), !dbg !5363
  %169 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5364, !tbaa !2995
  %move_mode281 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %169, i32 0, i32 9, !dbg !5365, !ctir !253
  %170 = load i8, i8* %move_mode281, align 8, !dbg !5365, !tbaa !3414
  %tobool282 = trunc i8 %170 to i1, !dbg !5365, !ctir !120
  br i1 %tobool282, label %cond.true283, label %cond.false285, !dbg !5364

cond.true283:                                     ; preds = %if.then280
  %call284 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.21.107, i64 0, i64 0)) #10, !dbg !5366
  br label %cond.end287, !dbg !5364

cond.false285:                                    ; preds = %if.then280
  %call286 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22.108, i64 0, i64 0)) #10, !dbg !5367
  br label %cond.end287, !dbg !5364

cond.end287:                                      ; preds = %cond.false285, %cond.true283
  %cond288 = phi i8* [ %call284, %cond.true283 ], [ %call286, %cond.false285 ], !dbg !5364
  store i8* %cond288, i8** %fmt, align 8, !dbg !5368, !tbaa !2995
  %171 = load i8*, i8** %fmt, align 8, !dbg !5369, !tbaa !2995
  %172 = load i8*, i8** %dst_name.addr, align 8, !dbg !5370, !tbaa !2995
  %call289 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %172), !dbg !5370
  %173 = load i8*, i8** %src_name.addr, align 8, !dbg !5371, !tbaa !2995
  %call290 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %173), !dbg !5371
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %171, i8* %call289, i8* %call290), !dbg !5372
  store i1 false, i1* %retval, align 1, !dbg !5373
  br label %return, !dbg !5373

if.end291:                                        ; preds = %land.lhs.true278, %if.then275
  call void @llvm.dbg.declare(metadata i8** %tmp_backup, metadata !5374, metadata !DIExpression()), !dbg !5375
  %174 = load i8*, i8** %dst_name.addr, align 8, !dbg !5376, !tbaa !2995
  %175 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5377, !tbaa !2995
  %backup_type292 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %175, i32 0, i32 0, !dbg !5378, !ctir !253
  %176 = load i32, i32* %backup_type292, align 8, !dbg !5378, !tbaa !3326, !ctir !68
  %call293 = call i8* @backup_file_rename(i32 -100, i8* %174, i32 %176), !dbg !5379
  store i8* %call293, i8** %tmp_backup, align 8, !dbg !5375, !tbaa !2995
  %177 = load i8*, i8** %tmp_backup, align 8, !dbg !5380, !tbaa !2995
  %tobool294 = icmp ne i8* %177, null, !dbg !5380
  br i1 %tobool294, label %if.then295, label %if.else297, !dbg !5382

if.then295:                                       ; preds = %if.end291
  br label %do.body, !dbg !5383

do.body:                                          ; preds = %if.then295
  call void @llvm.dbg.declare(metadata i8** %__old, metadata !5385, metadata !DIExpression()), !dbg !5388
  %178 = load i8*, i8** %tmp_backup, align 8, !dbg !5388, !tbaa !2995
  store i8* %178, i8** %__old, align 8, !dbg !5388, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !5389, metadata !DIExpression()), !dbg !5388
  %179 = load i8*, i8** %__old, align 8, !dbg !5388, !tbaa !2995
  %call296 = call i64 @strlen(i8* %179) #14, !dbg !5388
  %add = add i64 %call296, 1, !dbg !5388
  store i64 %add, i64* %__len, align 8, !dbg !5388, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8** %__new, metadata !5390, metadata !DIExpression()), !dbg !5388
  %180 = load i64, i64* %__len, align 8, !dbg !5388, !tbaa !3848
  %181 = alloca i8, i64 %180, align 16, !dbg !5388
  store i8* %181, i8** %__new, align 8, !dbg !5388, !tbaa !2995
  %182 = load i8*, i8** %__new, align 8, !dbg !5388, !tbaa !2995
  %183 = load i8*, i8** %__old, align 8, !dbg !5388, !tbaa !2995
  %184 = load i64, i64* %__len, align 8, !dbg !5388, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %182, i8* align 1 %183, i64 %184, i1 false), !dbg !5388
  store i8* %182, i8** %tmp, align 8, !dbg !5388, !tbaa !2995
  %185 = load i8*, i8** %tmp, align 8, !dbg !5388, !tbaa !2995
  store i8* %185, i8** %dst_backup, align 8, !dbg !5391, !tbaa !2995
  br label %do.end, !dbg !5391

do.end:                                           ; preds = %do.body
  %186 = load i8*, i8** %tmp_backup, align 8, !dbg !5392, !tbaa !2995
  call void @free(i8* %186) #10, !dbg !5393
  br label %if.end305, !dbg !5394

if.else297:                                       ; preds = %if.end291
  %call298 = call i32* @__errno_location() #15, !dbg !5395
  %187 = load i32, i32* %call298, align 4, !dbg !5395, !tbaa !2982, !ctir !7
  %cmp299 = icmp ne i32 %187, 2, !dbg !5397
  br i1 %cmp299, label %if.then300, label %if.end304, !dbg !5398

if.then300:                                       ; preds = %if.else297
  %call301 = call i32* @__errno_location() #15, !dbg !5399
  %188 = load i32, i32* %call301, align 4, !dbg !5399, !tbaa !2982, !ctir !7
  %call302 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.109, i64 0, i64 0)) #10, !dbg !5401
  %189 = load i8*, i8** %dst_name.addr, align 8, !dbg !5402, !tbaa !2995
  %call303 = call i8* @quotearg_style(i32 4, i8* %189), !dbg !5402
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %188, i8* %call302, i8* %call303), !dbg !5403
  store i1 false, i1* %retval, align 1, !dbg !5404
  br label %return, !dbg !5404

if.end304:                                        ; preds = %if.else297
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %do.end
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5405, !tbaa !3106
  br label %if.end346, !dbg !5406

if.else306:                                       ; preds = %lor.lhs.false271, %land.lhs.true265, %if.end262
  %st_mode307 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5407, !ctir !317
  %190 = load i32, i32* %st_mode307, align 8, !dbg !5407, !tbaa !3178, !ctir !133
  %and308 = and i32 %190, 61440, !dbg !5407
  %cmp309 = icmp eq i32 %and308, 16384, !dbg !5407
  br i1 %cmp309, label %if.end345, label %land.lhs.true310, !dbg !5409

land.lhs.true310:                                 ; preds = %if.else306
  %191 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5410, !tbaa !2995
  %move_mode311 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %191, i32 0, i32 9, !dbg !5411, !ctir !253
  %192 = load i8, i8* %move_mode311, align 8, !dbg !5411, !tbaa !3414
  %tobool312 = trunc i8 %192 to i1, !dbg !5411, !ctir !120
  br i1 %tobool312, label %if.end345, label %land.lhs.true313, !dbg !5412

land.lhs.true313:                                 ; preds = %land.lhs.true310
  %193 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5413, !tbaa !2995
  %unlink_dest_before_opening314 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %193, i32 0, i32 6, !dbg !5414, !ctir !253
  %194 = load i8, i8* %unlink_dest_before_opening314, align 1, !dbg !5414, !tbaa !3399
  %tobool315 = trunc i8 %194 to i1, !dbg !5414, !ctir !120
  br i1 %tobool315, label %if.then327, label %lor.lhs.false316, !dbg !5415

lor.lhs.false316:                                 ; preds = %land.lhs.true313
  %195 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5416, !tbaa !2995
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %195, i32 0, i32 19, !dbg !5417, !ctir !253
  %196 = load i8, i8* %preserve_links, align 2, !dbg !5417, !tbaa !3430
  %tobool317 = trunc i8 %196 to i1, !dbg !5417, !ctir !120
  br i1 %tobool317, label %land.lhs.true318, label %lor.lhs.false320, !dbg !5418

land.lhs.true318:                                 ; preds = %lor.lhs.false316
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 2, !dbg !5419, !ctir !317
  %197 = load i64, i64* %st_nlink, align 8, !dbg !5419, !tbaa !5420, !ctir !323
  %cmp319 = icmp ult i64 1, %197, !dbg !5421
  br i1 %cmp319, label %if.then327, label %lor.lhs.false320, !dbg !5422

lor.lhs.false320:                                 ; preds = %land.lhs.true318, %lor.lhs.false316
  %198 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5423, !tbaa !2995
  %dereference321 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %198, i32 0, i32 1, !dbg !5424, !ctir !253
  %199 = load i32, i32* %dereference321, align 4, !dbg !5424, !tbaa !3395, !ctir !76
  %cmp322 = icmp eq i32 %199, 2, !dbg !5425
  br i1 %cmp322, label %land.lhs.true323, label %if.end345, !dbg !5426

land.lhs.true323:                                 ; preds = %lor.lhs.false320
  %st_mode324 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !5427, !ctir !317
  %200 = load i32, i32* %st_mode324, align 8, !dbg !5427, !tbaa !3178, !ctir !133
  %and325 = and i32 %200, 61440, !dbg !5427
  %cmp326 = icmp eq i32 %and325, 32768, !dbg !5427
  br i1 %cmp326, label %if.end345, label %if.then327, !dbg !5428

if.then327:                                       ; preds = %land.lhs.true323, %land.lhs.true318, %land.lhs.true313
  %201 = load i8*, i8** %dst_name.addr, align 8, !dbg !5429, !tbaa !2995
  %call328 = call i32 @unlink(i8* %201) #10, !dbg !5432
  %cmp329 = icmp ne i32 %call328, 0, !dbg !5433
  br i1 %cmp329, label %land.lhs.true330, label %if.end337, !dbg !5434

land.lhs.true330:                                 ; preds = %if.then327
  %call331 = call i32* @__errno_location() #15, !dbg !5435
  %202 = load i32, i32* %call331, align 4, !dbg !5435, !tbaa !2982, !ctir !7
  %cmp332 = icmp ne i32 %202, 2, !dbg !5436
  br i1 %cmp332, label %if.then333, label %if.end337, !dbg !5437

if.then333:                                       ; preds = %land.lhs.true330
  %call334 = call i32* @__errno_location() #15, !dbg !5438
  %203 = load i32, i32* %call334, align 4, !dbg !5438, !tbaa !2982, !ctir !7
  %call335 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.110, i64 0, i64 0)) #10, !dbg !5440
  %204 = load i8*, i8** %dst_name.addr, align 8, !dbg !5441, !tbaa !2995
  %call336 = call i8* @quotearg_style(i32 4, i8* %204), !dbg !5441
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %203, i8* %call335, i8* %call336), !dbg !5442
  store i1 false, i1* %retval, align 1, !dbg !5443
  br label %return, !dbg !5443

if.end337:                                        ; preds = %land.lhs.true330, %if.then327
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5444, !tbaa !3106
  %205 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5445, !tbaa !2995
  %verbose338 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %205, i32 0, i32 31, !dbg !5447, !ctir !253
  %206 = load i8, i8* %verbose338, align 2, !dbg !5447, !tbaa !3195
  %tobool339 = trunc i8 %206 to i1, !dbg !5447, !ctir !120
  br i1 %tobool339, label %if.then340, label %if.end344, !dbg !5448

if.then340:                                       ; preds = %if.end337
  %call341 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #10, !dbg !5449
  %207 = load i8*, i8** %dst_name.addr, align 8, !dbg !5450, !tbaa !2995
  %call342 = call i8* @quotearg_style(i32 4, i8* %207), !dbg !5450
  %call343 = call i32 (i8*, ...) @printf(i8* %call341, i8* %call342), !dbg !5451
  br label %if.end344, !dbg !5451

if.end344:                                        ; preds = %if.then340, %if.end337
  br label %if.end345, !dbg !5452

if.end345:                                        ; preds = %if.end344, %land.lhs.true323, %lor.lhs.false320, %land.lhs.true310, %if.else306
  br label %if.end346

if.end346:                                        ; preds = %if.end345, %if.end305
  br label %if.end347, !dbg !5453

if.end347:                                        ; preds = %if.end346, %if.end125
  br label %if.end348, !dbg !5454

if.end348:                                        ; preds = %if.end347, %if.end68
  %208 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5455, !tbaa !3106
  %tobool349 = trunc i8 %208 to i1, !dbg !5455
  br i1 %tobool349, label %land.lhs.true350, label %if.end382, !dbg !5457

land.lhs.true350:                                 ; preds = %if.end348
  %209 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5458, !tbaa !2995
  %dest_info351 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %209, i32 0, i32 37, !dbg !5459, !ctir !253
  %210 = load %struct.hash_table*, %struct.hash_table** %dest_info351, align 8, !dbg !5459, !tbaa !3512, !ctir !195
  %tobool352 = icmp ne %struct.hash_table* %210, null, !dbg !5458
  br i1 %tobool352, label %land.lhs.true353, label %if.end382, !dbg !5460

land.lhs.true353:                                 ; preds = %land.lhs.true350
  %211 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5461, !tbaa !2995
  %move_mode354 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %211, i32 0, i32 9, !dbg !5462, !ctir !253
  %212 = load i8, i8* %move_mode354, align 8, !dbg !5462, !tbaa !3414
  %tobool355 = trunc i8 %212 to i1, !dbg !5462, !ctir !120
  br i1 %tobool355, label %if.end382, label %land.lhs.true356, !dbg !5463

land.lhs.true356:                                 ; preds = %land.lhs.true353
  %213 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5464, !tbaa !2995
  %backup_type357 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %213, i32 0, i32 0, !dbg !5465, !ctir !253
  %214 = load i32, i32* %backup_type357, align 8, !dbg !5465, !tbaa !3326, !ctir !68
  %cmp358 = icmp eq i32 %214, 0, !dbg !5466
  br i1 %cmp358, label %if.then359, label %if.end382, !dbg !5467

if.then359:                                       ; preds = %land.lhs.true356
  call void @llvm.dbg.declare(metadata i8* %lstat_ok, metadata !5468, metadata !DIExpression()), !dbg !5470
  store i8 1, i8* %lstat_ok, align 1, !dbg !5470, !tbaa !3106
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_buf, metadata !5471, metadata !DIExpression()), !dbg !5472
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_lstat_sb, metadata !5473, metadata !DIExpression()), !dbg !5474
  %215 = load i8, i8* %have_dst_lstat, align 1, !dbg !5475, !tbaa !3106
  %tobool360 = trunc i8 %215 to i1, !dbg !5475
  br i1 %tobool360, label %if.then361, label %if.else362, !dbg !5477

if.then361:                                       ; preds = %if.then359
  store %struct.stat* %dst_sb, %struct.stat** %dst_lstat_sb, align 8, !dbg !5478, !tbaa !2995
  br label %if.end368, !dbg !5479

if.else362:                                       ; preds = %if.then359
  %216 = load i8*, i8** %dst_name.addr, align 8, !dbg !5480, !tbaa !2995
  %call363 = call i32 @lstat(i8* %216, %struct.stat* %tmp_buf) #10, !dbg !5483
  %cmp364 = icmp eq i32 %call363, 0, !dbg !5484
  br i1 %cmp364, label %if.then365, label %if.else366, !dbg !5485

if.then365:                                       ; preds = %if.else362
  store %struct.stat* %tmp_buf, %struct.stat** %dst_lstat_sb, align 8, !dbg !5486, !tbaa !2995
  br label %if.end367, !dbg !5487

if.else366:                                       ; preds = %if.else362
  store i8 0, i8* %lstat_ok, align 1, !dbg !5488, !tbaa !3106
  br label %if.end367

if.end367:                                        ; preds = %if.else366, %if.then365
  br label %if.end368

if.end368:                                        ; preds = %if.end367, %if.then361
  %217 = load i8, i8* %lstat_ok, align 1, !dbg !5489, !tbaa !3106
  %tobool369 = trunc i8 %217 to i1, !dbg !5489
  br i1 %tobool369, label %land.lhs.true370, label %if.end381, !dbg !5491

land.lhs.true370:                                 ; preds = %if.end368
  %218 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !5492, !tbaa !2995
  %st_mode371 = getelementptr inbounds %struct.stat, %struct.stat* %218, i32 0, i32 3, !dbg !5492, !ctir !317
  %219 = load i32, i32* %st_mode371, align 8, !dbg !5492, !tbaa !3178, !ctir !133
  %and372 = and i32 %219, 61440, !dbg !5492
  %cmp373 = icmp eq i32 %and372, 40960, !dbg !5492
  br i1 %cmp373, label %land.lhs.true374, label %if.end381, !dbg !5493

land.lhs.true374:                                 ; preds = %land.lhs.true370
  %220 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5494, !tbaa !2995
  %dest_info375 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %220, i32 0, i32 37, !dbg !5495, !ctir !253
  %221 = load %struct.hash_table*, %struct.hash_table** %dest_info375, align 8, !dbg !5495, !tbaa !3512, !ctir !195
  %222 = load i8*, i8** %dst_name.addr, align 8, !dbg !5496, !tbaa !2995
  %223 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !5497, !tbaa !2995
  %call376 = call zeroext i1 @seen_file(%struct.hash_table* %221, i8* %222, %struct.stat* %223), !dbg !5498
  br i1 %call376, label %if.then377, label %if.end381, !dbg !5499

if.then377:                                       ; preds = %land.lhs.true374
  %call378 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26.112, i64 0, i64 0)) #10, !dbg !5500
  %224 = load i8*, i8** %src_name.addr, align 8, !dbg !5502, !tbaa !2995
  %call379 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %224), !dbg !5502
  %225 = load i8*, i8** %dst_name.addr, align 8, !dbg !5503, !tbaa !2995
  %call380 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %225), !dbg !5503
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call378, i8* %call379, i8* %call380), !dbg !5504
  store i1 false, i1* %retval, align 1, !dbg !5505
  br label %return, !dbg !5505

if.end381:                                        ; preds = %land.lhs.true374, %land.lhs.true370, %if.end368
  br label %if.end382, !dbg !5506

if.end382:                                        ; preds = %if.end381, %land.lhs.true356, %land.lhs.true353, %land.lhs.true350, %if.end348
  %226 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5507, !tbaa !2995
  %verbose383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %226, i32 0, i32 31, !dbg !5509, !ctir !253
  %227 = load i8, i8* %verbose383, align 2, !dbg !5509, !tbaa !3195
  %tobool384 = trunc i8 %227 to i1, !dbg !5509, !ctir !120
  br i1 %tobool384, label %land.lhs.true385, label %if.end392, !dbg !5510

land.lhs.true385:                                 ; preds = %if.end382
  %228 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5511, !tbaa !2995
  %move_mode386 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %228, i32 0, i32 9, !dbg !5512, !ctir !253
  %229 = load i8, i8* %move_mode386, align 8, !dbg !5512, !tbaa !3414
  %tobool387 = trunc i8 %229 to i1, !dbg !5512, !ctir !120
  br i1 %tobool387, label %if.end392, label %land.lhs.true388, !dbg !5513

land.lhs.true388:                                 ; preds = %land.lhs.true385
  %230 = load i32, i32* %src_mode, align 4, !dbg !5514, !tbaa !2982
  %and389 = and i32 %230, 61440, !dbg !5514
  %cmp390 = icmp eq i32 %and389, 16384, !dbg !5514
  br i1 %cmp390, label %if.end392, label %if.then391, !dbg !5515

if.then391:                                       ; preds = %land.lhs.true388
  %231 = load i8*, i8** %src_name.addr, align 8, !dbg !5516, !tbaa !2995
  %232 = load i8*, i8** %dst_name.addr, align 8, !dbg !5517, !tbaa !2995
  %233 = load i8*, i8** %dst_backup, align 8, !dbg !5518, !tbaa !2995
  call void @emit_verbose(i8* %231, i8* %232, i8* %233), !dbg !5519
  br label %if.end392, !dbg !5519

if.end392:                                        ; preds = %if.then391, %land.lhs.true388, %land.lhs.true385, %if.end382
  %234 = load i32, i32* %rename_errno, align 4, !dbg !5520, !tbaa !2982
  %cmp393 = icmp eq i32 %234, 0, !dbg !5522
  br i1 %cmp393, label %if.then394, label %if.else395, !dbg !5523

if.then394:                                       ; preds = %if.end392
  store i8* null, i8** %earlier_file, align 8, !dbg !5524, !tbaa !2995
  br label %if.end446, !dbg !5525

if.else395:                                       ; preds = %if.end392
  %235 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5526, !tbaa !2995
  %recursive396 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %235, i32 0, i32 27, !dbg !5528, !ctir !253
  %236 = load i8, i8* %recursive396, align 2, !dbg !5528, !tbaa !3477
  %tobool397 = trunc i8 %236 to i1, !dbg !5528, !ctir !120
  br i1 %tobool397, label %land.lhs.true398, label %if.else412, !dbg !5529

land.lhs.true398:                                 ; preds = %if.else395
  %237 = load i32, i32* %src_mode, align 4, !dbg !5530, !tbaa !2982
  %and399 = and i32 %237, 61440, !dbg !5530
  %cmp400 = icmp eq i32 %and399, 16384, !dbg !5530
  br i1 %cmp400, label %if.then401, label %if.else412, !dbg !5531

if.then401:                                       ; preds = %land.lhs.true398
  %238 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5532, !tbaa !3106
  %tobool402 = trunc i8 %238 to i1, !dbg !5532
  br i1 %tobool402, label %if.then403, label %if.else407, !dbg !5535

if.then403:                                       ; preds = %if.then401
  %239 = load i8*, i8** %dst_name.addr, align 8, !dbg !5536, !tbaa !2995
  %st_ino404 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5537, !ctir !317
  %240 = load i64, i64* %st_ino404, align 8, !dbg !5537, !tbaa !3870, !ctir !228
  %st_dev405 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5538, !ctir !317
  %241 = load i64, i64* %st_dev405, align 8, !dbg !5538, !tbaa !3873, !ctir !231
  %call406 = call i8* @remember_copied(i8* %239, i64 %240, i64 %241), !dbg !5539
  store i8* %call406, i8** %earlier_file, align 8, !dbg !5540, !tbaa !2995
  br label %if.end411, !dbg !5541

if.else407:                                       ; preds = %if.then401
  %st_ino408 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5542, !ctir !317
  %242 = load i64, i64* %st_ino408, align 8, !dbg !5542, !tbaa !3870, !ctir !228
  %st_dev409 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5543, !ctir !317
  %243 = load i64, i64* %st_dev409, align 8, !dbg !5543, !tbaa !3873, !ctir !231
  %call410 = call i8* @src_to_dest_lookup(i64 %242, i64 %243), !dbg !5544
  store i8* %call410, i8** %earlier_file, align 8, !dbg !5545, !tbaa !2995
  br label %if.end411

if.end411:                                        ; preds = %if.else407, %if.then403
  br label %if.end445, !dbg !5546

if.else412:                                       ; preds = %land.lhs.true398, %if.else395
  %244 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5547, !tbaa !2995
  %move_mode413 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %244, i32 0, i32 9, !dbg !5549, !ctir !253
  %245 = load i8, i8* %move_mode413, align 8, !dbg !5549, !tbaa !3414
  %tobool414 = trunc i8 %245 to i1, !dbg !5549, !ctir !120
  br i1 %tobool414, label %land.lhs.true415, label %if.else422, !dbg !5550

land.lhs.true415:                                 ; preds = %if.else412
  %st_nlink416 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !5551, !ctir !317
  %246 = load i64, i64* %st_nlink416, align 8, !dbg !5551, !tbaa !5420, !ctir !323
  %cmp417 = icmp eq i64 %246, 1, !dbg !5552
  br i1 %cmp417, label %if.then418, label %if.else422, !dbg !5553

if.then418:                                       ; preds = %land.lhs.true415
  %st_ino419 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5554, !ctir !317
  %247 = load i64, i64* %st_ino419, align 8, !dbg !5554, !tbaa !3870, !ctir !228
  %st_dev420 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5556, !ctir !317
  %248 = load i64, i64* %st_dev420, align 8, !dbg !5556, !tbaa !3873, !ctir !231
  %call421 = call i8* @src_to_dest_lookup(i64 %247, i64 %248), !dbg !5557
  store i8* %call421, i8** %earlier_file, align 8, !dbg !5558, !tbaa !2995
  br label %if.end444, !dbg !5559

if.else422:                                       ; preds = %land.lhs.true415, %if.else412
  %249 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5560, !tbaa !2995
  %preserve_links423 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %249, i32 0, i32 19, !dbg !5562, !ctir !253
  %250 = load i8, i8* %preserve_links423, align 2, !dbg !5562, !tbaa !3430
  %tobool424 = trunc i8 %250 to i1, !dbg !5562, !ctir !120
  br i1 %tobool424, label %land.lhs.true425, label %if.end443, !dbg !5563

land.lhs.true425:                                 ; preds = %if.else422
  %251 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5564, !tbaa !2995
  %hard_link426 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %251, i32 0, i32 8, !dbg !5565, !ctir !253
  %252 = load i8, i8* %hard_link426, align 1, !dbg !5565, !tbaa !3407
  %tobool427 = trunc i8 %252 to i1, !dbg !5565, !ctir !120
  br i1 %tobool427, label %if.end443, label %land.lhs.true428, !dbg !5566

land.lhs.true428:                                 ; preds = %land.lhs.true425
  %st_nlink429 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !5567, !ctir !317
  %253 = load i64, i64* %st_nlink429, align 8, !dbg !5567, !tbaa !5420, !ctir !323
  %cmp430 = icmp ult i64 1, %253, !dbg !5568
  br i1 %cmp430, label %if.then439, label %lor.lhs.false431, !dbg !5569

lor.lhs.false431:                                 ; preds = %land.lhs.true428
  %254 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5570, !tbaa !3106
  %tobool432 = trunc i8 %254 to i1, !dbg !5570
  br i1 %tobool432, label %land.lhs.true433, label %lor.lhs.false436, !dbg !5571

land.lhs.true433:                                 ; preds = %lor.lhs.false431
  %255 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5572, !tbaa !2995
  %dereference434 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %255, i32 0, i32 1, !dbg !5573, !ctir !253
  %256 = load i32, i32* %dereference434, align 4, !dbg !5573, !tbaa !3395, !ctir !76
  %cmp435 = icmp eq i32 %256, 3, !dbg !5574
  br i1 %cmp435, label %if.then439, label %lor.lhs.false436, !dbg !5575

lor.lhs.false436:                                 ; preds = %land.lhs.true433, %lor.lhs.false431
  %257 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5576, !tbaa !2995
  %dereference437 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %257, i32 0, i32 1, !dbg !5577, !ctir !253
  %258 = load i32, i32* %dereference437, align 4, !dbg !5577, !tbaa !3395, !ctir !76
  %cmp438 = icmp eq i32 %258, 4, !dbg !5578
  br i1 %cmp438, label %if.then439, label %if.end443, !dbg !5579

if.then439:                                       ; preds = %lor.lhs.false436, %land.lhs.true433, %land.lhs.true428
  %259 = load i8*, i8** %dst_name.addr, align 8, !dbg !5580, !tbaa !2995
  %st_ino440 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5582, !ctir !317
  %260 = load i64, i64* %st_ino440, align 8, !dbg !5582, !tbaa !3870, !ctir !228
  %st_dev441 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5583, !ctir !317
  %261 = load i64, i64* %st_dev441, align 8, !dbg !5583, !tbaa !3873, !ctir !231
  %call442 = call i8* @remember_copied(i8* %259, i64 %260, i64 %261), !dbg !5584
  store i8* %call442, i8** %earlier_file, align 8, !dbg !5585, !tbaa !2995
  br label %if.end443, !dbg !5586

if.end443:                                        ; preds = %if.then439, %lor.lhs.false436, %land.lhs.true425, %if.else422
  br label %if.end444

if.end444:                                        ; preds = %if.end443, %if.then418
  br label %if.end445

if.end445:                                        ; preds = %if.end444, %if.end411
  br label %if.end446

if.end446:                                        ; preds = %if.end445, %if.then394
  %262 = load i8*, i8** %earlier_file, align 8, !dbg !5587, !tbaa !2995
  %tobool447 = icmp ne i8* %262, null, !dbg !5587
  br i1 %tobool447, label %if.then448, label %if.end492, !dbg !5589

if.then448:                                       ; preds = %if.end446
  %263 = load i32, i32* %src_mode, align 4, !dbg !5590, !tbaa !2982
  %and449 = and i32 %263, 61440, !dbg !5590
  %cmp450 = icmp eq i32 %and449, 16384, !dbg !5590
  br i1 %cmp450, label %if.then451, label %if.else484, !dbg !5593

if.then451:                                       ; preds = %if.then448
  %264 = load i8*, i8** %src_name.addr, align 8, !dbg !5594, !tbaa !2995
  %265 = load i8*, i8** %earlier_file, align 8, !dbg !5597, !tbaa !2995
  %call452 = call zeroext i1 @same_name(i8* %264, i8* %265), !dbg !5598
  br i1 %call452, label %if.then453, label %if.else457, !dbg !5599

if.then453:                                       ; preds = %if.then451
  %call454 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27.113, i64 0, i64 0)) #10, !dbg !5600
  %266 = load i8*, i8** @top_level_src_name, align 8, !dbg !5602, !tbaa !2995
  %call455 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %266), !dbg !5602
  %267 = load i8*, i8** @top_level_dst_name, align 8, !dbg !5603, !tbaa !2995
  %call456 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %267), !dbg !5603
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call454, i8* %call455, i8* %call456), !dbg !5604
  %268 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5605, !tbaa !2995
  store i8 1, i8* %268, align 1, !dbg !5606, !tbaa !3106, !ctir !120
  br label %un_backup, !dbg !5607

if.else457:                                       ; preds = %if.then451
  %269 = load i8*, i8** %dst_name.addr, align 8, !dbg !5608, !tbaa !2995
  %270 = load i8*, i8** %earlier_file, align 8, !dbg !5610, !tbaa !2995
  %call458 = call zeroext i1 @same_name(i8* %269, i8* %270), !dbg !5611
  br i1 %call458, label %if.then459, label %if.else468, !dbg !5612

if.then459:                                       ; preds = %if.else457
  %call460 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.28.114, i64 0, i64 0)) #10, !dbg !5613
  %271 = load i8*, i8** @top_level_src_name, align 8, !dbg !5615, !tbaa !2995
  %call461 = call i8* @quotearg_style(i32 4, i8* %271), !dbg !5615
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call460, i8* %call461), !dbg !5616
  %272 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5617, !tbaa !2995
  %move_mode462 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %272, i32 0, i32 9, !dbg !5619, !ctir !253
  %273 = load i8, i8* %move_mode462, align 8, !dbg !5619, !tbaa !3414
  %tobool463 = trunc i8 %273 to i1, !dbg !5619, !ctir !120
  br i1 %tobool463, label %land.lhs.true464, label %if.end467, !dbg !5620

land.lhs.true464:                                 ; preds = %if.then459
  %274 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5621, !tbaa !2995
  %tobool465 = icmp ne i8* %274, null, !dbg !5621
  br i1 %tobool465, label %if.then466, label %if.end467, !dbg !5622

if.then466:                                       ; preds = %land.lhs.true464
  %275 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5623, !tbaa !2995
  store i8 1, i8* %275, align 1, !dbg !5624, !tbaa !3106, !ctir !120
  br label %if.end467, !dbg !5625

if.end467:                                        ; preds = %if.then466, %land.lhs.true464, %if.then459
  store i1 true, i1* %retval, align 1, !dbg !5626
  br label %return, !dbg !5626

if.else468:                                       ; preds = %if.else457
  %276 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5627, !tbaa !2995
  %dereference469 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %276, i32 0, i32 1, !dbg !5629, !ctir !253
  %277 = load i32, i32* %dereference469, align 4, !dbg !5629, !tbaa !3395, !ctir !76
  %cmp470 = icmp eq i32 %277, 4, !dbg !5630
  br i1 %cmp470, label %if.then476, label %lor.lhs.false471, !dbg !5631

lor.lhs.false471:                                 ; preds = %if.else468
  %278 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5632, !tbaa !3106
  %tobool472 = trunc i8 %278 to i1, !dbg !5632
  br i1 %tobool472, label %land.lhs.true473, label %if.else477, !dbg !5633

land.lhs.true473:                                 ; preds = %lor.lhs.false471
  %279 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5634, !tbaa !2995
  %dereference474 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %279, i32 0, i32 1, !dbg !5635, !ctir !253
  %280 = load i32, i32* %dereference474, align 4, !dbg !5635, !tbaa !3395, !ctir !76
  %cmp475 = icmp eq i32 %280, 3, !dbg !5636
  br i1 %cmp475, label %if.then476, label %if.else477, !dbg !5637

if.then476:                                       ; preds = %land.lhs.true473, %if.else468
  br label %if.end481, !dbg !5638

if.else477:                                       ; preds = %land.lhs.true473, %lor.lhs.false471
  %call478 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29.115, i64 0, i64 0)) #10, !dbg !5640
  %281 = load i8*, i8** %dst_name.addr, align 8, !dbg !5642, !tbaa !2995
  %call479 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %281), !dbg !5642
  %282 = load i8*, i8** %earlier_file, align 8, !dbg !5643, !tbaa !2995
  %call480 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %282), !dbg !5643
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call478, i8* %call479, i8* %call480), !dbg !5644
  br label %un_backup, !dbg !5645

if.end481:                                        ; preds = %if.then476
  br label %if.end482

if.end482:                                        ; preds = %if.end481
  br label %if.end483

if.end483:                                        ; preds = %if.end482
  br label %if.end491, !dbg !5646

if.else484:                                       ; preds = %if.then448
  %283 = load i8*, i8** %earlier_file, align 8, !dbg !5647, !tbaa !2995
  %284 = load i8*, i8** %dst_name.addr, align 8, !dbg !5650, !tbaa !2995
  %285 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5651, !tbaa !2995
  %verbose485 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %285, i32 0, i32 31, !dbg !5652, !ctir !253
  %286 = load i8, i8* %verbose485, align 2, !dbg !5652, !tbaa !3195
  %tobool486 = trunc i8 %286 to i1, !dbg !5652, !ctir !120
  %287 = load i8, i8* %dereference69, align 1, !dbg !5653, !tbaa !3106
  %tobool487 = trunc i8 %287 to i1, !dbg !5653
  %call488 = call zeroext i1 @create_hard_link(i8* %283, i8* %284, i1 zeroext true, i1 zeroext %tobool486, i1 zeroext %tobool487), !dbg !5654
  br i1 %call488, label %if.end490, label %if.then489, !dbg !5655

if.then489:                                       ; preds = %if.else484
  br label %un_backup, !dbg !5656

if.end490:                                        ; preds = %if.else484
  store i1 true, i1* %retval, align 1, !dbg !5657
  br label %return, !dbg !5657

if.end491:                                        ; preds = %if.end483
  br label %if.end492, !dbg !5658

if.end492:                                        ; preds = %if.end491, %if.end446
  %288 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5659, !tbaa !2995
  %move_mode493 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %288, i32 0, i32 9, !dbg !5661, !ctir !253
  %289 = load i8, i8* %move_mode493, align 8, !dbg !5661, !tbaa !3414
  %tobool494 = trunc i8 %289 to i1, !dbg !5661, !ctir !120
  br i1 %tobool494, label %if.then495, label %if.end572, !dbg !5662

if.then495:                                       ; preds = %if.end492
  %290 = load i32, i32* %rename_errno, align 4, !dbg !5663, !tbaa !2982
  %cmp496 = icmp eq i32 %290, 17, !dbg !5666
  br i1 %cmp496, label %if.then497, label %if.end505, !dbg !5667

if.then497:                                       ; preds = %if.then495
  %291 = load i8*, i8** %src_name.addr, align 8, !dbg !5668, !tbaa !2995
  %292 = load i8*, i8** %dst_name.addr, align 8, !dbg !5669, !tbaa !2995
  %call498 = call i32 @rename(i8* %291, i8* %292) #10, !dbg !5670
  %cmp499 = icmp eq i32 %call498, 0, !dbg !5671
  br i1 %cmp499, label %cond.true500, label %cond.false501, !dbg !5670

cond.true500:                                     ; preds = %if.then497
  br label %cond.end503, !dbg !5670

cond.false501:                                    ; preds = %if.then497
  %call502 = call i32* @__errno_location() #15, !dbg !5672
  %293 = load i32, i32* %call502, align 4, !dbg !5672, !tbaa !2982, !ctir !7
  br label %cond.end503, !dbg !5670

cond.end503:                                      ; preds = %cond.false501, %cond.true500
  %cond504 = phi i32 [ 0, %cond.true500 ], [ %293, %cond.false501 ], !dbg !5670
  store i32 %cond504, i32* %rename_errno, align 4, !dbg !5673, !tbaa !2982
  br label %if.end505, !dbg !5674

if.end505:                                        ; preds = %cond.end503, %if.then495
  %294 = load i32, i32* %rename_errno, align 4, !dbg !5675, !tbaa !2982
  %cmp506 = icmp eq i32 %294, 0, !dbg !5677
  br i1 %cmp506, label %if.then507, label %if.end528, !dbg !5678

if.then507:                                       ; preds = %if.end505
  %295 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5679, !tbaa !2995
  %verbose508 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %295, i32 0, i32 31, !dbg !5682, !ctir !253
  %296 = load i8, i8* %verbose508, align 2, !dbg !5682, !tbaa !3195
  %tobool509 = trunc i8 %296 to i1, !dbg !5682, !ctir !120
  br i1 %tobool509, label %if.then510, label %if.end513, !dbg !5683

if.then510:                                       ; preds = %if.then507
  %call511 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.116, i64 0, i64 0)) #10, !dbg !5684
  %call512 = call i32 (i8*, ...) @printf(i8* %call511), !dbg !5686
  %297 = load i8*, i8** %src_name.addr, align 8, !dbg !5687, !tbaa !2995
  %298 = load i8*, i8** %dst_name.addr, align 8, !dbg !5688, !tbaa !2995
  %299 = load i8*, i8** %dst_backup, align 8, !dbg !5689, !tbaa !2995
  call void @emit_verbose(i8* %297, i8* %298, i8* %299), !dbg !5690
  br label %if.end513, !dbg !5691

if.end513:                                        ; preds = %if.then510, %if.then507
  %300 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5692, !tbaa !2995
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %300, i32 0, i32 18, !dbg !5694, !ctir !253
  %301 = load i8, i8* %set_security_context, align 1, !dbg !5694, !tbaa !3210
  %tobool514 = trunc i8 %301 to i1, !dbg !5694, !ctir !120
  br i1 %tobool514, label %if.then515, label %if.end517, !dbg !5695

if.then515:                                       ; preds = %if.end513
  %302 = load i8*, i8** %dst_name.addr, align 8, !dbg !5696, !tbaa !2995
  %303 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5698, !tbaa !2995
  %call516 = call zeroext i1 @set_file_security_ctx(i8* %302, i1 zeroext false, i1 zeroext true, %struct.cp_options* %303), !dbg !5699
  br label %if.end517, !dbg !5700

if.end517:                                        ; preds = %if.then515, %if.end513
  %304 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5701, !tbaa !2995
  %tobool518 = icmp ne i8* %304, null, !dbg !5701
  br i1 %tobool518, label %if.then519, label %if.end520, !dbg !5703

if.then519:                                       ; preds = %if.end517
  %305 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5704, !tbaa !2995
  store i8 1, i8* %305, align 1, !dbg !5705, !tbaa !3106, !ctir !120
  br label %if.end520, !dbg !5706

if.end520:                                        ; preds = %if.then519, %if.end517
  %306 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5707, !tbaa !3106
  %tobool521 = trunc i8 %306 to i1, !dbg !5707
  br i1 %tobool521, label %land.lhs.true522, label %if.end527, !dbg !5709

land.lhs.true522:                                 ; preds = %if.end520
  %307 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5710, !tbaa !2995
  %last_file523 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %307, i32 0, i32 34, !dbg !5711, !ctir !253
  %308 = load i8, i8* %last_file523, align 1, !dbg !5711, !tbaa !3356
  %tobool524 = trunc i8 %308 to i1, !dbg !5711, !ctir !120
  br i1 %tobool524, label %if.end527, label %if.then525, !dbg !5712

if.then525:                                       ; preds = %land.lhs.true522
  %309 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5713, !tbaa !2995
  %dest_info526 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %309, i32 0, i32 37, !dbg !5715, !ctir !253
  %310 = load %struct.hash_table*, %struct.hash_table** %dest_info526, align 8, !dbg !5715, !tbaa !3512, !ctir !195
  %311 = load i8*, i8** %dst_name.addr, align 8, !dbg !5716, !tbaa !2995
  call void @record_file(%struct.hash_table* %310, i8* %311, %struct.stat* %src_sb), !dbg !5717
  br label %if.end527, !dbg !5718

if.end527:                                        ; preds = %if.then525, %land.lhs.true522, %if.end520
  store i1 true, i1* %retval, align 1, !dbg !5719
  br label %return, !dbg !5719

if.end528:                                        ; preds = %if.end505
  %312 = load i32, i32* %rename_errno, align 4, !dbg !5720, !tbaa !2982
  %cmp529 = icmp eq i32 %312, 22, !dbg !5722
  br i1 %cmp529, label %if.then530, label %if.end534, !dbg !5723

if.then530:                                       ; preds = %if.end528
  %call531 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.31.117, i64 0, i64 0)) #10, !dbg !5724
  %313 = load i8*, i8** @top_level_src_name, align 8, !dbg !5726, !tbaa !2995
  %call532 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %313), !dbg !5726
  %314 = load i8*, i8** @top_level_dst_name, align 8, !dbg !5727, !tbaa !2995
  %call533 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %314), !dbg !5727
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call531, i8* %call532, i8* %call533), !dbg !5728
  %315 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5729, !tbaa !2995
  store i8 1, i8* %315, align 1, !dbg !5730, !tbaa !3106, !ctir !120
  store i1 true, i1* %retval, align 1, !dbg !5731
  br label %return, !dbg !5731

if.end534:                                        ; preds = %if.end528
  %316 = load i32, i32* %rename_errno, align 4, !dbg !5732, !tbaa !2982
  %cmp535 = icmp ne i32 %316, 18, !dbg !5734
  br i1 %cmp535, label %if.then536, label %if.end542, !dbg !5735

if.then536:                                       ; preds = %if.end534
  %317 = load i32, i32* %rename_errno, align 4, !dbg !5736, !tbaa !2982
  %call537 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32.118, i64 0, i64 0)) #10, !dbg !5738
  %318 = load i8*, i8** %src_name.addr, align 8, !dbg !5739, !tbaa !2995
  %call538 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %318), !dbg !5739
  %319 = load i8*, i8** %dst_name.addr, align 8, !dbg !5740, !tbaa !2995
  %call539 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %319), !dbg !5740
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %317, i8* %call537, i8* %call538, i8* %call539), !dbg !5741
  %st_ino540 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5742, !ctir !317
  %320 = load i64, i64* %st_ino540, align 8, !dbg !5742, !tbaa !3870, !ctir !228
  %st_dev541 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5743, !ctir !317
  %321 = load i64, i64* %st_dev541, align 8, !dbg !5743, !tbaa !3873, !ctir !231
  call void @forget_created(i64 %320, i64 %321), !dbg !5744
  store i1 false, i1* %retval, align 1, !dbg !5745
  br label %return, !dbg !5745

if.end542:                                        ; preds = %if.end534
  %322 = load i32, i32* %src_mode, align 4, !dbg !5746, !tbaa !2982
  %and543 = and i32 %322, 61440, !dbg !5746
  %cmp544 = icmp eq i32 %and543, 16384, !dbg !5746
  br i1 %cmp544, label %cond.true545, label %cond.false547, !dbg !5746

cond.true545:                                     ; preds = %if.end542
  %323 = load i8*, i8** %dst_name.addr, align 8, !dbg !5748, !tbaa !2995
  %call546 = call i32 @rmdir(i8* %323) #10, !dbg !5749
  br label %cond.end549, !dbg !5746

cond.false547:                                    ; preds = %if.end542
  %324 = load i8*, i8** %dst_name.addr, align 8, !dbg !5750, !tbaa !2995
  %call548 = call i32 @unlink(i8* %324) #10, !dbg !5751
  br label %cond.end549, !dbg !5746

cond.end549:                                      ; preds = %cond.false547, %cond.true545
  %cond550 = phi i32 [ %call546, %cond.true545 ], [ %call548, %cond.false547 ], !dbg !5746
  %cmp551 = icmp ne i32 %cond550, 0, !dbg !5752
  br i1 %cmp551, label %land.lhs.true552, label %if.end562, !dbg !5753

land.lhs.true552:                                 ; preds = %cond.end549
  %call553 = call i32* @__errno_location() #15, !dbg !5754
  %325 = load i32, i32* %call553, align 4, !dbg !5754, !tbaa !2982, !ctir !7
  %cmp554 = icmp ne i32 %325, 2, !dbg !5755
  br i1 %cmp554, label %if.then555, label %if.end562, !dbg !5756

if.then555:                                       ; preds = %land.lhs.true552
  %call556 = call i32* @__errno_location() #15, !dbg !5757
  %326 = load i32, i32* %call556, align 4, !dbg !5757, !tbaa !2982, !ctir !7
  %call557 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.33.119, i64 0, i64 0)) #10, !dbg !5759
  %327 = load i8*, i8** %src_name.addr, align 8, !dbg !5760, !tbaa !2995
  %call558 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %327), !dbg !5760
  %328 = load i8*, i8** %dst_name.addr, align 8, !dbg !5761, !tbaa !2995
  %call559 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %328), !dbg !5761
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %326, i8* %call557, i8* %call558, i8* %call559), !dbg !5762
  %st_ino560 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5763, !ctir !317
  %329 = load i64, i64* %st_ino560, align 8, !dbg !5763, !tbaa !3870, !ctir !228
  %st_dev561 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5764, !ctir !317
  %330 = load i64, i64* %st_dev561, align 8, !dbg !5764, !tbaa !3873, !ctir !231
  call void @forget_created(i64 %329, i64 %330), !dbg !5765
  store i1 false, i1* %retval, align 1, !dbg !5766
  br label %return, !dbg !5766

if.end562:                                        ; preds = %land.lhs.true552, %cond.end549
  %331 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5767, !tbaa !2995
  %verbose563 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %331, i32 0, i32 31, !dbg !5769, !ctir !253
  %332 = load i8, i8* %verbose563, align 2, !dbg !5769, !tbaa !3195
  %tobool564 = trunc i8 %332 to i1, !dbg !5769, !ctir !120
  br i1 %tobool564, label %land.lhs.true565, label %if.end571, !dbg !5770

land.lhs.true565:                                 ; preds = %if.end562
  %333 = load i32, i32* %src_mode, align 4, !dbg !5771, !tbaa !2982
  %and566 = and i32 %333, 61440, !dbg !5771
  %cmp567 = icmp eq i32 %and566, 16384, !dbg !5771
  br i1 %cmp567, label %if.end571, label %if.then568, !dbg !5772

if.then568:                                       ; preds = %land.lhs.true565
  %call569 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.120, i64 0, i64 0)) #10, !dbg !5773
  %call570 = call i32 (i8*, ...) @printf(i8* %call569), !dbg !5775
  %334 = load i8*, i8** %src_name.addr, align 8, !dbg !5776, !tbaa !2995
  %335 = load i8*, i8** %dst_name.addr, align 8, !dbg !5777, !tbaa !2995
  %336 = load i8*, i8** %dst_backup, align 8, !dbg !5778, !tbaa !2995
  call void @emit_verbose(i8* %334, i8* %335, i8* %336), !dbg !5779
  br label %if.end571, !dbg !5780

if.end571:                                        ; preds = %if.then568, %land.lhs.true565, %if.end562
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5781, !tbaa !3106
  br label %if.end572, !dbg !5782

if.end572:                                        ; preds = %if.end571, %if.end492
  %337 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5783, !tbaa !2995
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %337, i32 0, i32 28, !dbg !5784, !ctir !253
  %338 = load i8, i8* %set_mode, align 1, !dbg !5784, !tbaa !3489
  %tobool573 = trunc i8 %338 to i1, !dbg !5784, !ctir !120
  br i1 %tobool573, label %cond.true574, label %cond.false575, !dbg !5783

cond.true574:                                     ; preds = %if.end572
  %339 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5785, !tbaa !2995
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %339, i32 0, i32 4, !dbg !5786, !ctir !253
  %340 = load i32, i32* %mode, align 8, !dbg !5786, !tbaa !3493, !ctir !160
  br label %cond.end576, !dbg !5783

cond.false575:                                    ; preds = %if.end572
  %341 = load i32, i32* %src_mode, align 4, !dbg !5787, !tbaa !2982
  br label %cond.end576, !dbg !5783

cond.end576:                                      ; preds = %cond.false575, %cond.true574
  %cond577 = phi i32 [ %340, %cond.true574 ], [ %341, %cond.false575 ], !dbg !5783
  %and578 = and i32 %cond577, 4095, !dbg !5788
  store i32 %and578, i32* %dst_mode_bits, align 4, !dbg !5789, !tbaa !2982
  %342 = load i32, i32* %dst_mode_bits, align 4, !dbg !5790, !tbaa !2982
  %343 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5791, !tbaa !2995
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %343, i32 0, i32 14, !dbg !5792, !ctir !253
  %344 = load i8, i8* %preserve_ownership, align 1, !dbg !5792, !tbaa !3426
  %tobool579 = trunc i8 %344 to i1, !dbg !5792, !ctir !120
  br i1 %tobool579, label %cond.true580, label %cond.false581, !dbg !5791

cond.true580:                                     ; preds = %cond.end576
  br label %cond.end585, !dbg !5791

cond.false581:                                    ; preds = %cond.end576
  %345 = load i32, i32* %src_mode, align 4, !dbg !5793, !tbaa !2982
  %and582 = and i32 %345, 61440, !dbg !5793
  %cmp583 = icmp eq i32 %and582, 16384, !dbg !5793
  %346 = zext i1 %cmp583 to i64, !dbg !5793
  %cond584 = select i1 %cmp583, i32 18, i32 0, !dbg !5793
  br label %cond.end585, !dbg !5791

cond.end585:                                      ; preds = %cond.false581, %cond.true580
  %cond586 = phi i32 [ 63, %cond.true580 ], [ %cond584, %cond.false581 ], !dbg !5791
  %and587 = and i32 %342, %cond586, !dbg !5794
  store i32 %and587, i32* %omitted_permissions, align 4, !dbg !5795, !tbaa !2982
  store i8 1, i8* %delayed_ok, align 1, !dbg !5796, !tbaa !3106
  %347 = load i8*, i8** %src_name.addr, align 8, !dbg !5797, !tbaa !2995
  %348 = load i8*, i8** %dst_name.addr, align 8, !dbg !5799, !tbaa !2995
  %349 = load i32, i32* %src_mode, align 4, !dbg !5800, !tbaa !2982
  %350 = load i8, i8* %new_dst.addr, align 1, !dbg !5801, !tbaa !3106
  %tobool588 = trunc i8 %350 to i1, !dbg !5801
  %351 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5802, !tbaa !2995
  %call589 = call zeroext i1 @set_process_security_ctx(i8* %347, i8* %348, i32 %349, i1 zeroext %tobool588, %struct.cp_options* %351), !dbg !5803
  br i1 %call589, label %if.end591, label %if.then590, !dbg !5804

if.then590:                                       ; preds = %cond.end585
  store i1 false, i1* %retval, align 1, !dbg !5805
  br label %return, !dbg !5805

if.end591:                                        ; preds = %cond.end585
  %352 = load i32, i32* %src_mode, align 4, !dbg !5806, !tbaa !2982
  %and592 = and i32 %352, 61440, !dbg !5806
  %cmp593 = icmp eq i32 %and592, 16384, !dbg !5806
  br i1 %cmp593, label %if.then594, label %if.else685, !dbg !5808

if.then594:                                       ; preds = %if.end591
  call void @llvm.dbg.declare(metadata %struct.dir_list** %dir, metadata !5809, metadata !DIExpression()), !dbg !5811
  %353 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5812, !tbaa !2995
  %call595 = call zeroext i1 @is_ancestor(%struct.stat* %src_sb, %struct.dir_list* %353) #14, !dbg !5814
  br i1 %call595, label %if.then596, label %if.end599, !dbg !5815

if.then596:                                       ; preds = %if.then594
  %call597 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35.121, i64 0, i64 0)) #10, !dbg !5816
  %354 = load i8*, i8** %src_name.addr, align 8, !dbg !5818, !tbaa !2995
  %call598 = call i8* @quotearg_style(i32 4, i8* %354), !dbg !5818
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call597, i8* %call598), !dbg !5819
  br label %un_backup, !dbg !5820

if.end599:                                        ; preds = %if.then594
  %355 = alloca i8, i64 24, align 16, !dbg !5821
  %356 = bitcast i8* %355 to %struct.dir_list*, !dbg !5821
  store %struct.dir_list* %356, %struct.dir_list** %dir, align 8, !dbg !5822, !tbaa !2995
  %357 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5823, !tbaa !2995
  %358 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5824, !tbaa !2995
  %parent600 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %358, i32 0, i32 0, !dbg !5825, !ctir !351
  store %struct.dir_list* %357, %struct.dir_list** %parent600, align 8, !dbg !5826, !tbaa !5827, !ctir !350
  %st_ino601 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5829, !ctir !317
  %359 = load i64, i64* %st_ino601, align 8, !dbg !5829, !tbaa !3870, !ctir !228
  %360 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5830, !tbaa !2995
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %360, i32 0, i32 1, !dbg !5831, !ctir !351
  store i64 %359, i64* %ino, align 8, !dbg !5832, !tbaa !5833, !ctir !227
  %st_dev602 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5834, !ctir !317
  %361 = load i64, i64* %st_dev602, align 8, !dbg !5834, !tbaa !3873, !ctir !231
  %362 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5835, !tbaa !2995
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %362, i32 0, i32 2, !dbg !5836, !ctir !351
  store i64 %361, i64* %dev, align 8, !dbg !5837, !tbaa !5838, !ctir !230
  %363 = load i8, i8* %new_dst.addr, align 1, !dbg !5839, !tbaa !3106
  %tobool603 = trunc i8 %363 to i1, !dbg !5839
  br i1 %tobool603, label %if.then608, label %lor.lhs.false604, !dbg !5841

lor.lhs.false604:                                 ; preds = %if.end599
  %st_mode605 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5842, !ctir !317
  %364 = load i32, i32* %st_mode605, align 8, !dbg !5842, !tbaa !3178, !ctir !133
  %and606 = and i32 %364, 61440, !dbg !5842
  %cmp607 = icmp eq i32 %and606, 16384, !dbg !5842
  br i1 %cmp607, label %if.else656, label %if.then608, !dbg !5843

if.then608:                                       ; preds = %lor.lhs.false604, %if.end599
  %365 = load i8*, i8** %dst_name.addr, align 8, !dbg !5844, !tbaa !2995
  %366 = load i32, i32* %dst_mode_bits, align 4, !dbg !5847, !tbaa !2982
  %367 = load i32, i32* %omitted_permissions, align 4, !dbg !5848, !tbaa !2982
  %neg = xor i32 %367, -1, !dbg !5849
  %and609 = and i32 %366, %neg, !dbg !5850
  %call610 = call i32 @mkdir(i8* %365, i32 %and609) #10, !dbg !5851
  %cmp611 = icmp ne i32 %call610, 0, !dbg !5852
  br i1 %cmp611, label %if.then612, label %if.end616, !dbg !5853

if.then612:                                       ; preds = %if.then608
  %call613 = call i32* @__errno_location() #15, !dbg !5854
  %368 = load i32, i32* %call613, align 4, !dbg !5854, !tbaa !2982, !ctir !7
  %call614 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36.122, i64 0, i64 0)) #10, !dbg !5856
  %369 = load i8*, i8** %dst_name.addr, align 8, !dbg !5857, !tbaa !2995
  %call615 = call i8* @quotearg_style(i32 4, i8* %369), !dbg !5857
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %368, i8* %call614, i8* %call615), !dbg !5858
  br label %un_backup, !dbg !5859

if.end616:                                        ; preds = %if.then608
  %370 = load i8*, i8** %dst_name.addr, align 8, !dbg !5860, !tbaa !2995
  %call617 = call i32 @lstat(i8* %370, %struct.stat* %dst_sb) #10, !dbg !5862
  %cmp618 = icmp ne i32 %call617, 0, !dbg !5863
  br i1 %cmp618, label %if.then619, label %if.else623, !dbg !5864

if.then619:                                       ; preds = %if.end616
  %call620 = call i32* @__errno_location() #15, !dbg !5865
  %371 = load i32, i32* %call620, align 4, !dbg !5865, !tbaa !2982, !ctir !7
  %call621 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #10, !dbg !5867
  %372 = load i8*, i8** %dst_name.addr, align 8, !dbg !5868, !tbaa !2995
  %call622 = call i8* @quotearg_style(i32 4, i8* %372), !dbg !5868
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %371, i8* %call621, i8* %call622), !dbg !5869
  br label %un_backup, !dbg !5870

if.else623:                                       ; preds = %if.end616
  %st_mode624 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5871, !ctir !317
  %373 = load i32, i32* %st_mode624, align 8, !dbg !5871, !tbaa !3178, !ctir !133
  %and625 = and i32 %373, 448, !dbg !5873
  %cmp626 = icmp ne i32 %and625, 448, !dbg !5874
  br i1 %cmp626, label %if.then627, label %if.end636, !dbg !5875

if.then627:                                       ; preds = %if.else623
  %st_mode628 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5876, !ctir !317
  %374 = load i32, i32* %st_mode628, align 8, !dbg !5876, !tbaa !3178, !ctir !133
  store i32 %374, i32* %dst_mode, align 4, !dbg !5878, !tbaa !2982
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !5879, !tbaa !3106
  %375 = load i8*, i8** %dst_name.addr, align 8, !dbg !5880, !tbaa !2995
  %376 = load i32, i32* %dst_mode, align 4, !dbg !5882, !tbaa !2982
  %or = or i32 %376, 448, !dbg !5883
  %call629 = call i32 @chmod(i8* %375, i32 %or) #10, !dbg !5884
  %cmp630 = icmp ne i32 %call629, 0, !dbg !5885
  br i1 %cmp630, label %if.then631, label %if.end635, !dbg !5886

if.then631:                                       ; preds = %if.then627
  %call632 = call i32* @__errno_location() #15, !dbg !5887
  %377 = load i32, i32* %call632, align 4, !dbg !5887, !tbaa !2982, !ctir !7
  %call633 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37.123, i64 0, i64 0)) #10, !dbg !5889
  %378 = load i8*, i8** %dst_name.addr, align 8, !dbg !5890, !tbaa !2995
  %call634 = call i8* @quotearg_style(i32 4, i8* %378), !dbg !5890
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %377, i8* %call633, i8* %call634), !dbg !5891
  br label %un_backup, !dbg !5892

if.end635:                                        ; preds = %if.then627
  br label %if.end636, !dbg !5893

if.end636:                                        ; preds = %if.end635, %if.else623
  br label %if.end637

if.end637:                                        ; preds = %if.end636
  %379 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5894, !tbaa !2995
  %380 = load i8, i8* %379, align 1, !dbg !5896, !tbaa !3106
  %tobool638 = trunc i8 %380 to i1, !dbg !5896, !ctir !120
  br i1 %tobool638, label %if.end643, label %if.then639, !dbg !5897

if.then639:                                       ; preds = %if.end637
  %381 = load i8*, i8** %dst_name.addr, align 8, !dbg !5898, !tbaa !2995
  %st_ino640 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 1, !dbg !5900, !ctir !317
  %382 = load i64, i64* %st_ino640, align 8, !dbg !5900, !tbaa !3870, !ctir !228
  %st_dev641 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !5901, !ctir !317
  %383 = load i64, i64* %st_dev641, align 8, !dbg !5901, !tbaa !3873, !ctir !231
  %call642 = call i8* @remember_copied(i8* %381, i64 %382, i64 %383), !dbg !5902
  %384 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5903, !tbaa !2995
  store i8 1, i8* %384, align 1, !dbg !5904, !tbaa !3106, !ctir !120
  br label %if.end643, !dbg !5905

if.end643:                                        ; preds = %if.then639, %if.end637
  %385 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5906, !tbaa !2995
  %verbose644 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %385, i32 0, i32 31, !dbg !5908, !ctir !253
  %386 = load i8, i8* %verbose644, align 2, !dbg !5908, !tbaa !3195
  %tobool645 = trunc i8 %386 to i1, !dbg !5908, !ctir !120
  br i1 %tobool645, label %if.then646, label %if.end655, !dbg !5909

if.then646:                                       ; preds = %if.end643
  %387 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5910, !tbaa !2995
  %move_mode647 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %387, i32 0, i32 9, !dbg !5913, !ctir !253
  %388 = load i8, i8* %move_mode647, align 8, !dbg !5913, !tbaa !3414
  %tobool648 = trunc i8 %388 to i1, !dbg !5913, !ctir !120
  br i1 %tobool648, label %if.then649, label %if.else653, !dbg !5914

if.then649:                                       ; preds = %if.then646
  %call650 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38.124, i64 0, i64 0)) #10, !dbg !5915
  %389 = load i8*, i8** %dst_name.addr, align 8, !dbg !5916, !tbaa !2995
  %call651 = call i8* @quotearg_style(i32 4, i8* %389), !dbg !5916
  %call652 = call i32 (i8*, ...) @printf(i8* %call650, i8* %call651), !dbg !5917
  br label %if.end654, !dbg !5917

if.else653:                                       ; preds = %if.then646
  %390 = load i8*, i8** %src_name.addr, align 8, !dbg !5918, !tbaa !2995
  %391 = load i8*, i8** %dst_name.addr, align 8, !dbg !5919, !tbaa !2995
  call void @emit_verbose(i8* %390, i8* %391, i8* null), !dbg !5920
  br label %if.end654

if.end654:                                        ; preds = %if.else653, %if.then649
  br label %if.end655, !dbg !5921

if.end655:                                        ; preds = %if.end654, %if.end643
  br label %if.end671, !dbg !5922

if.else656:                                       ; preds = %lor.lhs.false604
  store i32 0, i32* %omitted_permissions, align 4, !dbg !5923, !tbaa !2982
  %392 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5925, !tbaa !2995
  %set_security_context657 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %392, i32 0, i32 18, !dbg !5927, !ctir !253
  %393 = load i8, i8* %set_security_context657, align 1, !dbg !5927, !tbaa !3210
  %tobool658 = trunc i8 %393 to i1, !dbg !5927, !ctir !120
  br i1 %tobool658, label %if.then661, label %lor.lhs.false659, !dbg !5928

lor.lhs.false659:                                 ; preds = %if.else656
  %394 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5929, !tbaa !2995
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %394, i32 0, i32 22, !dbg !5930, !ctir !253
  %395 = load i8, i8* %preserve_security_context, align 1, !dbg !5930, !tbaa !3207
  %tobool660 = trunc i8 %395 to i1, !dbg !5930, !ctir !120
  br i1 %tobool660, label %if.then661, label %if.end670, !dbg !5931

if.then661:                                       ; preds = %lor.lhs.false659, %if.else656
  %396 = load i8*, i8** %dst_name.addr, align 8, !dbg !5932, !tbaa !2995
  %397 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5934, !tbaa !2995
  %preserve_security_context662 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %397, i32 0, i32 22, !dbg !5935, !ctir !253
  %398 = load i8, i8* %preserve_security_context662, align 1, !dbg !5935, !tbaa !3207
  %tobool663 = trunc i8 %398 to i1, !dbg !5935, !ctir !120
  %399 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5936, !tbaa !2995
  %call664 = call zeroext i1 @set_file_security_ctx(i8* %396, i1 zeroext %tobool663, i1 zeroext false, %struct.cp_options* %399), !dbg !5937
  br i1 %call664, label %if.end669, label %if.then665, !dbg !5938

if.then665:                                       ; preds = %if.then661
  %400 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5939, !tbaa !2995
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %400, i32 0, i32 23, !dbg !5942, !ctir !253
  %401 = load i8, i8* %require_preserve_context, align 2, !dbg !5942, !tbaa !3465
  %tobool666 = trunc i8 %401 to i1, !dbg !5942, !ctir !120
  br i1 %tobool666, label %if.then667, label %if.end668, !dbg !5943

if.then667:                                       ; preds = %if.then665
  br label %un_backup, !dbg !5944

if.end668:                                        ; preds = %if.then665
  br label %if.end669, !dbg !5945

if.end669:                                        ; preds = %if.end668, %if.then661
  br label %if.end670, !dbg !5946

if.end670:                                        ; preds = %if.end669, %lor.lhs.false659
  br label %if.end671

if.end671:                                        ; preds = %if.end670, %if.end655
  %402 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5947, !tbaa !2995
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %402, i32 0, i32 13, !dbg !5949, !ctir !253
  %403 = load i8, i8* %one_file_system, align 4, !dbg !5949, !tbaa !3422
  %tobool672 = trunc i8 %403 to i1, !dbg !5949, !ctir !120
  br i1 %tobool672, label %land.lhs.true673, label %if.else680, !dbg !5950

land.lhs.true673:                                 ; preds = %if.end671
  %404 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5951, !tbaa !2995
  %tobool674 = icmp ne %struct.stat* %404, null, !dbg !5951
  br i1 %tobool674, label %land.lhs.true675, label %if.else680, !dbg !5952

land.lhs.true675:                                 ; preds = %land.lhs.true673
  %405 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5953, !tbaa !2995
  %st_dev676 = getelementptr inbounds %struct.stat, %struct.stat* %405, i32 0, i32 0, !dbg !5954, !ctir !316
  %406 = load i64, i64* %st_dev676, align 8, !dbg !5954, !tbaa !3873, !ctir !231
  %st_dev677 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5955, !ctir !317
  %407 = load i64, i64* %st_dev677, align 8, !dbg !5955, !tbaa !3873, !ctir !231
  %cmp678 = icmp ne i64 %406, %407, !dbg !5956
  br i1 %cmp678, label %if.then679, label %if.else680, !dbg !5957

if.then679:                                       ; preds = %land.lhs.true675
  br label %if.end684, !dbg !5958

if.else680:                                       ; preds = %land.lhs.true675, %land.lhs.true673, %if.end671
  %408 = load i8*, i8** %src_name.addr, align 8, !dbg !5960, !tbaa !2995
  %409 = load i8*, i8** %dst_name.addr, align 8, !dbg !5962, !tbaa !2995
  %410 = load i8, i8* %new_dst.addr, align 1, !dbg !5963, !tbaa !3106
  %tobool681 = trunc i8 %410 to i1, !dbg !5963
  %411 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5964, !tbaa !2995
  %412 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5965, !tbaa !2995
  %413 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5966, !tbaa !2995
  %414 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5967, !tbaa !2995
  %call682 = call zeroext i1 @copy_dir(i8* %408, i8* %409, i1 zeroext %tobool681, %struct.stat* %src_sb, %struct.dir_list* %411, %struct.cp_options* %412, i8* %413, i8* %414), !dbg !5968
  %frombool683 = zext i1 %call682 to i8, !dbg !5969
  store i8 %frombool683, i8* %delayed_ok, align 1, !dbg !5969, !tbaa !3106
  br label %if.end684

if.end684:                                        ; preds = %if.else680, %if.then679
  br label %if.end897, !dbg !5970

if.else685:                                       ; preds = %if.end591
  %415 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5971, !tbaa !2995
  %symbolic_link686 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %415, i32 0, i32 29, !dbg !5973, !ctir !253
  %416 = load i8, i8* %symbolic_link686, align 4, !dbg !5973, !tbaa !3485
  %tobool687 = trunc i8 %416 to i1, !dbg !5973, !ctir !120
  br i1 %tobool687, label %if.then688, label %if.else733, !dbg !5974

if.then688:                                       ; preds = %if.else685
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5975, !tbaa !3106
  %417 = load i8*, i8** %src_name.addr, align 8, !dbg !5977, !tbaa !2995
  %418 = load i8, i8* %417, align 1, !dbg !5979, !tbaa !3657, !ctir !116
  %conv = sext i8 %418 to i32, !dbg !5979
  %cmp689 = icmp ne i32 %conv, 47, !dbg !5980
  br i1 %cmp689, label %if.then691, label %if.end722, !dbg !5981

if.then691:                                       ; preds = %if.then688
  call void @llvm.dbg.declare(metadata %struct.stat* %dot_sb, metadata !5982, metadata !DIExpression()), !dbg !5984
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_parent_sb, metadata !5985, metadata !DIExpression()), !dbg !5986
  call void @llvm.dbg.declare(metadata i8** %dst_parent, metadata !5987, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.declare(metadata i8* %in_current_dir, metadata !5989, metadata !DIExpression()), !dbg !5990
  %419 = load i8*, i8** %dst_name.addr, align 8, !dbg !5991, !tbaa !2995
  %call692 = call i8* @dir_name(i8* %419), !dbg !5992
  store i8* %call692, i8** %dst_parent, align 8, !dbg !5993, !tbaa !2995
  %420 = load i8*, i8** %dst_parent, align 8, !dbg !5994, !tbaa !2995
  %call693 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.125, i64 0, i64 0), i8* %420) #14, !dbg !5994
  %cmp694 = icmp eq i32 %call693, 0, !dbg !5994
  br i1 %cmp694, label %lor.end715, label %lor.lhs.false696, !dbg !5995

lor.lhs.false696:                                 ; preds = %if.then691
  %call697 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.125, i64 0, i64 0), %struct.stat* %dot_sb) #10, !dbg !5996
  %cmp698 = icmp ne i32 %call697, 0, !dbg !5997
  br i1 %cmp698, label %lor.end715, label %lor.lhs.false700, !dbg !5998

lor.lhs.false700:                                 ; preds = %lor.lhs.false696
  %421 = load i8*, i8** %dst_parent, align 8, !dbg !5999, !tbaa !2995
  %call701 = call i32 @stat(i8* %421, %struct.stat* %dst_parent_sb) #10, !dbg !6000
  %cmp702 = icmp ne i32 %call701, 0, !dbg !6001
  br i1 %cmp702, label %lor.end715, label %lor.rhs704, !dbg !6002

lor.rhs704:                                       ; preds = %lor.lhs.false700
  %st_ino705 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 1, !dbg !6003, !ctir !317
  %422 = load i64, i64* %st_ino705, align 8, !dbg !6003, !tbaa !3870, !ctir !228
  %st_ino706 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 1, !dbg !6003, !ctir !317
  %423 = load i64, i64* %st_ino706, align 8, !dbg !6003, !tbaa !3870, !ctir !228
  %cmp707 = icmp eq i64 %422, %423, !dbg !6003
  br i1 %cmp707, label %land.rhs709, label %land.end714, !dbg !6003

land.rhs709:                                      ; preds = %lor.rhs704
  %st_dev710 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 0, !dbg !6003, !ctir !317
  %424 = load i64, i64* %st_dev710, align 8, !dbg !6003, !tbaa !3873, !ctir !231
  %st_dev711 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 0, !dbg !6003, !ctir !317
  %425 = load i64, i64* %st_dev711, align 8, !dbg !6003, !tbaa !3873, !ctir !231
  %cmp712 = icmp eq i64 %424, %425, !dbg !6003
  br label %land.end714

land.end714:                                      ; preds = %land.rhs709, %lor.rhs704
  %426 = phi i1 [ false, %lor.rhs704 ], [ %cmp712, %land.rhs709 ], !dbg !6004
  br label %lor.end715, !dbg !6002

lor.end715:                                       ; preds = %land.end714, %lor.lhs.false700, %lor.lhs.false696, %if.then691
  %427 = phi i1 [ true, %lor.lhs.false700 ], [ true, %lor.lhs.false696 ], [ true, %if.then691 ], [ %426, %land.end714 ]
  %frombool716 = zext i1 %427 to i8, !dbg !6005
  store i8 %frombool716, i8* %in_current_dir, align 1, !dbg !6005, !tbaa !3106
  %428 = load i8*, i8** %dst_parent, align 8, !dbg !6006, !tbaa !2995
  call void @free(i8* %428) #10, !dbg !6007
  %429 = load i8, i8* %in_current_dir, align 1, !dbg !6008, !tbaa !3106
  %tobool717 = trunc i8 %429 to i1, !dbg !6008
  br i1 %tobool717, label %if.end721, label %if.then718, !dbg !6010

if.then718:                                       ; preds = %lor.end715
  %call719 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.40.126, i64 0, i64 0)) #10, !dbg !6011
  %430 = load i8*, i8** %dst_name.addr, align 8, !dbg !6013, !tbaa !2995
  %call720 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %430), !dbg !6013
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call719, i8* %call720), !dbg !6014
  br label %un_backup, !dbg !6015

if.end721:                                        ; preds = %lor.end715
  br label %if.end722, !dbg !6016

if.end722:                                        ; preds = %if.end721, %if.then688
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6017, metadata !DIExpression()), !dbg !6018
  %431 = load i8*, i8** %src_name.addr, align 8, !dbg !6019, !tbaa !2995
  %432 = load i8*, i8** %dst_name.addr, align 8, !dbg !6020, !tbaa !2995
  %433 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6021, !tbaa !2995
  %unlink_dest_after_failed_open723 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %433, i32 0, i32 7, !dbg !6022, !ctir !253
  %434 = load i8, i8* %unlink_dest_after_failed_open723, align 2, !dbg !6022, !tbaa !3403
  %tobool724 = trunc i8 %434 to i1, !dbg !6022, !ctir !120
  %call725 = call i32 @force_symlinkat(i8* %431, i32 -100, i8* %432, i1 zeroext %tobool724, i32 -1), !dbg !6023
  store i32 %call725, i32* %err, align 4, !dbg !6018, !tbaa !2982
  %435 = load i32, i32* %err, align 4, !dbg !6024, !tbaa !2982
  %cmp726 = icmp slt i32 0, %435, !dbg !6026
  br i1 %cmp726, label %if.then728, label %if.end732, !dbg !6027

if.then728:                                       ; preds = %if.end722
  %436 = load i32, i32* %err, align 4, !dbg !6028, !tbaa !2982
  %call729 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.41.127, i64 0, i64 0)) #10, !dbg !6030
  %437 = load i8*, i8** %dst_name.addr, align 8, !dbg !6031, !tbaa !2995
  %call730 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %437), !dbg !6031
  %438 = load i8*, i8** %src_name.addr, align 8, !dbg !6032, !tbaa !2995
  %call731 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %438), !dbg !6032
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %436, i8* %call729, i8* %call730, i8* %call731), !dbg !6033
  br label %un_backup, !dbg !6034

if.end732:                                        ; preds = %if.end722
  br label %if.end896, !dbg !6035

if.else733:                                       ; preds = %if.else685
  %439 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6036, !tbaa !2995
  %hard_link734 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %439, i32 0, i32 8, !dbg !6038, !ctir !253
  %440 = load i8, i8* %hard_link734, align 1, !dbg !6038, !tbaa !3407
  %tobool735 = trunc i8 %440 to i1, !dbg !6038, !ctir !120
  br i1 %tobool735, label %if.then737, label %if.else752, !dbg !6039

if.then737:                                       ; preds = %if.else733
  call void @llvm.dbg.declare(metadata i8* %replace, metadata !6040, metadata !DIExpression()), !dbg !6042
  %441 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6043, !tbaa !2995
  %unlink_dest_after_failed_open738 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %441, i32 0, i32 7, !dbg !6044, !ctir !253
  %442 = load i8, i8* %unlink_dest_after_failed_open738, align 2, !dbg !6044, !tbaa !3403
  %tobool739 = trunc i8 %442 to i1, !dbg !6044, !ctir !120
  br i1 %tobool739, label %lor.end745, label %lor.rhs741, !dbg !6045

lor.rhs741:                                       ; preds = %if.then737
  %443 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6046, !tbaa !2995
  %interactive742 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %443, i32 0, i32 2, !dbg !6047, !ctir !253
  %444 = load i32, i32* %interactive742, align 8, !dbg !6047, !tbaa !3152, !ctir !83
  %cmp743 = icmp eq i32 %444, 3, !dbg !6048
  br label %lor.end745, !dbg !6045

lor.end745:                                       ; preds = %lor.rhs741, %if.then737
  %445 = phi i1 [ true, %if.then737 ], [ %cmp743, %lor.rhs741 ]
  %frombool746 = zext i1 %445 to i8, !dbg !6042
  store i8 %frombool746, i8* %replace, align 1, !dbg !6042, !tbaa !3106
  %446 = load i8*, i8** %src_name.addr, align 8, !dbg !6049, !tbaa !2995
  %447 = load i8*, i8** %dst_name.addr, align 8, !dbg !6051, !tbaa !2995
  %448 = load i8, i8* %replace, align 1, !dbg !6052, !tbaa !3106
  %tobool747 = trunc i8 %448 to i1, !dbg !6052
  %449 = load i8, i8* %dereference69, align 1, !dbg !6053, !tbaa !3106
  %tobool748 = trunc i8 %449 to i1, !dbg !6053
  %call749 = call zeroext i1 @create_hard_link(i8* %446, i8* %447, i1 zeroext %tobool747, i1 zeroext false, i1 zeroext %tobool748), !dbg !6054
  br i1 %call749, label %if.end751, label %if.then750, !dbg !6055

if.then750:                                       ; preds = %lor.end745
  br label %un_backup, !dbg !6056

if.end751:                                        ; preds = %lor.end745
  br label %if.end895, !dbg !6057

if.else752:                                       ; preds = %if.else733
  %450 = load i32, i32* %src_mode, align 4, !dbg !6058, !tbaa !2982
  %and753 = and i32 %450, 61440, !dbg !6058
  %cmp754 = icmp eq i32 %and753, 32768, !dbg !6058
  br i1 %cmp754, label %if.then764, label %lor.lhs.false756, !dbg !6060

lor.lhs.false756:                                 ; preds = %if.else752
  %451 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6061, !tbaa !2995
  %copy_as_regular757 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %451, i32 0, i32 5, !dbg !6062, !ctir !253
  %452 = load i8, i8* %copy_as_regular757, align 4, !dbg !6062, !tbaa !3387
  %tobool758 = trunc i8 %452 to i1, !dbg !6062, !ctir !120
  br i1 %tobool758, label %land.lhs.true760, label %if.else769, !dbg !6063

land.lhs.true760:                                 ; preds = %lor.lhs.false756
  %453 = load i32, i32* %src_mode, align 4, !dbg !6064, !tbaa !2982
  %and761 = and i32 %453, 61440, !dbg !6064
  %cmp762 = icmp eq i32 %and761, 40960, !dbg !6064
  br i1 %cmp762, label %if.else769, label %if.then764, !dbg !6065

if.then764:                                       ; preds = %land.lhs.true760, %if.else752
  store i8 1, i8* %copied_as_regular, align 1, !dbg !6066, !tbaa !3106
  %454 = load i8*, i8** %src_name.addr, align 8, !dbg !6068, !tbaa !2995
  %455 = load i8*, i8** %dst_name.addr, align 8, !dbg !6070, !tbaa !2995
  %456 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6071, !tbaa !2995
  %457 = load i32, i32* %dst_mode_bits, align 4, !dbg !6072, !tbaa !2982
  %and765 = and i32 %457, 511, !dbg !6073
  %458 = load i32, i32* %omitted_permissions, align 4, !dbg !6074, !tbaa !2982
  %call766 = call zeroext i1 @copy_reg(i8* %454, i8* %455, %struct.cp_options* %456, i32 %and765, i32 %458, i8* %new_dst.addr, %struct.stat* %src_sb), !dbg !6075
  br i1 %call766, label %if.end768, label %if.then767, !dbg !6076

if.then767:                                       ; preds = %if.then764
  br label %un_backup, !dbg !6077

if.end768:                                        ; preds = %if.then764
  br label %if.end894, !dbg !6078

if.else769:                                       ; preds = %land.lhs.true760, %lor.lhs.false756
  %459 = load i32, i32* %src_mode, align 4, !dbg !6079, !tbaa !2982
  %and770 = and i32 %459, 61440, !dbg !6079
  %cmp771 = icmp eq i32 %and770, 4096, !dbg !6079
  br i1 %cmp771, label %if.then773, label %if.else792, !dbg !6081

if.then773:                                       ; preds = %if.else769
  %460 = load i8*, i8** %dst_name.addr, align 8, !dbg !6082, !tbaa !2995
  %461 = load i32, i32* %src_mode, align 4, !dbg !6085, !tbaa !2982
  %462 = load i32, i32* %omitted_permissions, align 4, !dbg !6086, !tbaa !2982
  %neg774 = xor i32 %462, -1, !dbg !6087
  %and775 = and i32 %461, %neg774, !dbg !6088
  %call776 = call i32 @mknod(i8* %460, i32 %and775, i64 0) #10, !dbg !6089
  %cmp777 = icmp ne i32 %call776, 0, !dbg !6090
  br i1 %cmp777, label %if.then779, label %if.end791, !dbg !6091

if.then779:                                       ; preds = %if.then773
  %463 = load i8*, i8** %dst_name.addr, align 8, !dbg !6092, !tbaa !2995
  %464 = load i32, i32* %src_mode, align 4, !dbg !6094, !tbaa !2982
  %and780 = and i32 %464, -4097, !dbg !6095
  %465 = load i32, i32* %omitted_permissions, align 4, !dbg !6096, !tbaa !2982
  %neg781 = xor i32 %465, -1, !dbg !6097
  %and782 = and i32 %and780, %neg781, !dbg !6098
  %call783 = call i32 @mkfifo(i8* %463, i32 %and782) #10, !dbg !6099
  %cmp784 = icmp ne i32 %call783, 0, !dbg !6100
  br i1 %cmp784, label %if.then786, label %if.end790, !dbg !6101

if.then786:                                       ; preds = %if.then779
  %call787 = call i32* @__errno_location() #15, !dbg !6102
  %466 = load i32, i32* %call787, align 4, !dbg !6102, !tbaa !2982, !ctir !7
  %call788 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42.128, i64 0, i64 0)) #10, !dbg !6104
  %467 = load i8*, i8** %dst_name.addr, align 8, !dbg !6105, !tbaa !2995
  %call789 = call i8* @quotearg_style(i32 4, i8* %467), !dbg !6105
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %466, i8* %call788, i8* %call789), !dbg !6106
  br label %un_backup, !dbg !6107

if.end790:                                        ; preds = %if.then779
  br label %if.end791, !dbg !6108

if.end791:                                        ; preds = %if.end790, %if.then773
  br label %if.end893, !dbg !6109

if.else792:                                       ; preds = %if.else769
  %468 = load i32, i32* %src_mode, align 4, !dbg !6110, !tbaa !2982
  %and793 = and i32 %468, 61440, !dbg !6110
  %cmp794 = icmp eq i32 %and793, 24576, !dbg !6110
  br i1 %cmp794, label %if.then804, label %lor.lhs.false796, !dbg !6112

lor.lhs.false796:                                 ; preds = %if.else792
  %469 = load i32, i32* %src_mode, align 4, !dbg !6113, !tbaa !2982
  %and797 = and i32 %469, 61440, !dbg !6113
  %cmp798 = icmp eq i32 %and797, 8192, !dbg !6113
  br i1 %cmp798, label %if.then804, label %lor.lhs.false800, !dbg !6114

lor.lhs.false800:                                 ; preds = %lor.lhs.false796
  %470 = load i32, i32* %src_mode, align 4, !dbg !6115, !tbaa !2982
  %and801 = and i32 %470, 61440, !dbg !6115
  %cmp802 = icmp eq i32 %and801, 49152, !dbg !6115
  br i1 %cmp802, label %if.then804, label %if.else815, !dbg !6116

if.then804:                                       ; preds = %lor.lhs.false800, %lor.lhs.false796, %if.else792
  %471 = load i8*, i8** %dst_name.addr, align 8, !dbg !6117, !tbaa !2995
  %472 = load i32, i32* %src_mode, align 4, !dbg !6120, !tbaa !2982
  %473 = load i32, i32* %omitted_permissions, align 4, !dbg !6121, !tbaa !2982
  %neg805 = xor i32 %473, -1, !dbg !6122
  %and806 = and i32 %472, %neg805, !dbg !6123
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 7, !dbg !6124, !ctir !317
  %474 = load i64, i64* %st_rdev, align 8, !dbg !6124, !tbaa !6125, !ctir !231
  %call807 = call i32 @mknod(i8* %471, i32 %and806, i64 %474) #10, !dbg !6126
  %cmp808 = icmp ne i32 %call807, 0, !dbg !6127
  br i1 %cmp808, label %if.then810, label %if.end814, !dbg !6128

if.then810:                                       ; preds = %if.then804
  %call811 = call i32* @__errno_location() #15, !dbg !6129
  %475 = load i32, i32* %call811, align 4, !dbg !6129, !tbaa !2982, !ctir !7
  %call812 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.129, i64 0, i64 0)) #10, !dbg !6131
  %476 = load i8*, i8** %dst_name.addr, align 8, !dbg !6132, !tbaa !2995
  %call813 = call i8* @quotearg_style(i32 4, i8* %476), !dbg !6132
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %475, i8* %call812, i8* %call813), !dbg !6133
  br label %un_backup, !dbg !6134

if.end814:                                        ; preds = %if.then804
  br label %if.end892, !dbg !6135

if.else815:                                       ; preds = %lor.lhs.false800
  %477 = load i32, i32* %src_mode, align 4, !dbg !6136, !tbaa !2982
  %and816 = and i32 %477, 61440, !dbg !6136
  %cmp817 = icmp eq i32 %and816, 40960, !dbg !6136
  br i1 %cmp817, label %if.then819, label %if.else888, !dbg !6138

if.then819:                                       ; preds = %if.else815
  call void @llvm.dbg.declare(metadata i8** %src_link_val, metadata !6139, metadata !DIExpression()), !dbg !6141
  %478 = load i8*, i8** %src_name.addr, align 8, !dbg !6142, !tbaa !2995
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !6143, !ctir !317
  %479 = load i64, i64* %st_size, align 8, !dbg !6143, !tbaa !4516, !ctir !29
  %call820 = call i8* @areadlink_with_size(i8* %478, i64 %479), !dbg !6144
  store i8* %call820, i8** %src_link_val, align 8, !dbg !6141, !tbaa !2995
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !6145, !tbaa !3106
  %480 = load i8*, i8** %src_link_val, align 8, !dbg !6146, !tbaa !2995
  %cmp821 = icmp eq i8* %480, null, !dbg !6148
  br i1 %cmp821, label %if.then823, label %if.end827, !dbg !6149

if.then823:                                       ; preds = %if.then819
  %call824 = call i32* @__errno_location() #15, !dbg !6150
  %481 = load i32, i32* %call824, align 4, !dbg !6150, !tbaa !2982, !ctir !7
  %call825 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44.130, i64 0, i64 0)) #10, !dbg !6152
  %482 = load i8*, i8** %src_name.addr, align 8, !dbg !6153, !tbaa !2995
  %call826 = call i8* @quotearg_style(i32 4, i8* %482), !dbg !6153
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %481, i8* %call825, i8* %call826), !dbg !6154
  br label %un_backup, !dbg !6155

if.end827:                                        ; preds = %if.then819
  call void @llvm.dbg.declare(metadata i32* %symlink_err, metadata !6156, metadata !DIExpression()), !dbg !6157
  %483 = load i8*, i8** %src_link_val, align 8, !dbg !6158, !tbaa !2995
  %484 = load i8*, i8** %dst_name.addr, align 8, !dbg !6159, !tbaa !2995
  %485 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6160, !tbaa !2995
  %unlink_dest_after_failed_open828 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %485, i32 0, i32 7, !dbg !6161, !ctir !253
  %486 = load i8, i8* %unlink_dest_after_failed_open828, align 2, !dbg !6161, !tbaa !3403
  %tobool829 = trunc i8 %486 to i1, !dbg !6161, !ctir !120
  %call830 = call i32 @force_symlinkat(i8* %483, i32 -100, i8* %484, i1 zeroext %tobool829, i32 -1), !dbg !6162
  store i32 %call830, i32* %symlink_err, align 4, !dbg !6157, !tbaa !2982
  %487 = load i32, i32* %symlink_err, align 4, !dbg !6163, !tbaa !2982
  %cmp831 = icmp slt i32 0, %487, !dbg !6165
  br i1 %cmp831, label %land.lhs.true833, label %if.end860, !dbg !6166

land.lhs.true833:                                 ; preds = %if.end827
  %488 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6167, !tbaa !2995
  %update834 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %488, i32 0, i32 30, !dbg !6168, !ctir !253
  %489 = load i8, i8* %update834, align 1, !dbg !6168, !tbaa !3191
  %tobool835 = trunc i8 %489 to i1, !dbg !6168, !ctir !120
  br i1 %tobool835, label %land.lhs.true837, label %if.end860, !dbg !6169

land.lhs.true837:                                 ; preds = %land.lhs.true833
  %490 = load i8, i8* %new_dst.addr, align 1, !dbg !6170, !tbaa !3106
  %tobool838 = trunc i8 %490 to i1, !dbg !6170
  br i1 %tobool838, label %if.end860, label %land.lhs.true839, !dbg !6171

land.lhs.true839:                                 ; preds = %land.lhs.true837
  %st_mode840 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !6172, !ctir !317
  %491 = load i32, i32* %st_mode840, align 8, !dbg !6172, !tbaa !3178, !ctir !133
  %and841 = and i32 %491, 61440, !dbg !6172
  %cmp842 = icmp eq i32 %and841, 40960, !dbg !6172
  br i1 %cmp842, label %land.lhs.true844, label %if.end860, !dbg !6173

land.lhs.true844:                                 ; preds = %land.lhs.true839
  %st_size845 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !6174, !ctir !317
  %492 = load i64, i64* %st_size845, align 8, !dbg !6174, !tbaa !4516, !ctir !29
  %493 = load i8*, i8** %src_link_val, align 8, !dbg !6175, !tbaa !2995
  %call846 = call i64 @strlen(i8* %493) #14, !dbg !6176
  %cmp847 = icmp eq i64 %492, %call846, !dbg !6177
  br i1 %cmp847, label %if.then849, label %if.end860, !dbg !6178

if.then849:                                       ; preds = %land.lhs.true844
  call void @llvm.dbg.declare(metadata i8** %dest_link_val, metadata !6179, metadata !DIExpression()), !dbg !6181
  %494 = load i8*, i8** %dst_name.addr, align 8, !dbg !6182, !tbaa !2995
  %st_size850 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !6183, !ctir !317
  %495 = load i64, i64* %st_size850, align 8, !dbg !6183, !tbaa !4516, !ctir !29
  %call851 = call i8* @areadlink_with_size(i8* %494, i64 %495), !dbg !6184
  store i8* %call851, i8** %dest_link_val, align 8, !dbg !6181, !tbaa !2995
  %496 = load i8*, i8** %dest_link_val, align 8, !dbg !6185, !tbaa !2995
  %tobool852 = icmp ne i8* %496, null, !dbg !6185
  br i1 %tobool852, label %if.then853, label %if.end859, !dbg !6187

if.then853:                                       ; preds = %if.then849
  %497 = load i8*, i8** %dest_link_val, align 8, !dbg !6188, !tbaa !2995
  %498 = load i8*, i8** %src_link_val, align 8, !dbg !6188, !tbaa !2995
  %call854 = call i32 @strcmp(i8* %497, i8* %498) #14, !dbg !6188
  %cmp855 = icmp eq i32 %call854, 0, !dbg !6188
  br i1 %cmp855, label %if.then857, label %if.end858, !dbg !6191

if.then857:                                       ; preds = %if.then853
  store i32 0, i32* %symlink_err, align 4, !dbg !6192, !tbaa !2982
  br label %if.end858, !dbg !6193

if.end858:                                        ; preds = %if.then857, %if.then853
  %499 = load i8*, i8** %dest_link_val, align 8, !dbg !6194, !tbaa !2995
  call void @free(i8* %499) #10, !dbg !6195
  br label %if.end859, !dbg !6196

if.end859:                                        ; preds = %if.end858, %if.then849
  br label %if.end860, !dbg !6197

if.end860:                                        ; preds = %if.end859, %land.lhs.true844, %land.lhs.true839, %land.lhs.true837, %land.lhs.true833, %if.end827
  %500 = load i8*, i8** %src_link_val, align 8, !dbg !6198, !tbaa !2995
  call void @free(i8* %500) #10, !dbg !6199
  %501 = load i32, i32* %symlink_err, align 4, !dbg !6200, !tbaa !2982
  %cmp861 = icmp slt i32 0, %501, !dbg !6202
  br i1 %cmp861, label %if.then863, label %if.end866, !dbg !6203

if.then863:                                       ; preds = %if.end860
  %502 = load i32, i32* %symlink_err, align 4, !dbg !6204, !tbaa !2982
  %call864 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45.131, i64 0, i64 0)) #10, !dbg !6206
  %503 = load i8*, i8** %dst_name.addr, align 8, !dbg !6207, !tbaa !2995
  %call865 = call i8* @quotearg_style(i32 4, i8* %503), !dbg !6207
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %502, i8* %call864, i8* %call865), !dbg !6208
  br label %un_backup, !dbg !6209

if.end866:                                        ; preds = %if.end860
  %504 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6210, !tbaa !2995
  %preserve_security_context867 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %504, i32 0, i32 22, !dbg !6212, !ctir !253
  %505 = load i8, i8* %preserve_security_context867, align 1, !dbg !6212, !tbaa !3207
  %tobool868 = trunc i8 %505 to i1, !dbg !6212, !ctir !120
  br i1 %tobool868, label %if.then869, label %if.end870, !dbg !6213

if.then869:                                       ; preds = %if.end866
  call void @restore_default_fscreatecon_or_die(), !dbg !6214
  br label %if.end870, !dbg !6214

if.end870:                                        ; preds = %if.then869, %if.end866
  %506 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6215, !tbaa !2995
  %preserve_ownership871 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %506, i32 0, i32 14, !dbg !6217, !ctir !253
  %507 = load i8, i8* %preserve_ownership871, align 1, !dbg !6217, !tbaa !3426
  %tobool872 = trunc i8 %507 to i1, !dbg !6217, !ctir !120
  br i1 %tobool872, label %if.then873, label %if.end887, !dbg !6218

if.then873:                                       ; preds = %if.end870
  %508 = load i8*, i8** %dst_name.addr, align 8, !dbg !6219, !tbaa !2995
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !6222, !ctir !317
  %509 = load i32, i32* %st_uid, align 4, !dbg !6222, !tbaa !6223, !ctir !326
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !6224, !ctir !317
  %510 = load i32, i32* %st_gid, align 8, !dbg !6224, !tbaa !6225, !ctir !328
  %call874 = call i32 @lchown(i8* %508, i32 %509, i32 %510) #10, !dbg !6226
  %cmp875 = icmp ne i32 %call874, 0, !dbg !6227
  br i1 %cmp875, label %land.lhs.true877, label %if.else885, !dbg !6228

land.lhs.true877:                                 ; preds = %if.then873
  %511 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6229, !tbaa !2995
  %call878 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %511) #14, !dbg !6230
  br i1 %call878, label %if.else885, label %if.then879, !dbg !6231

if.then879:                                       ; preds = %land.lhs.true877
  %call880 = call i32* @__errno_location() #15, !dbg !6232
  %512 = load i32, i32* %call880, align 4, !dbg !6232, !tbaa !2982, !ctir !7
  %call881 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.132, i64 0, i64 0)) #10, !dbg !6234
  %513 = load i8*, i8** %dst_name.addr, align 8, !dbg !6235, !tbaa !2995
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %512, i8* %call881, i8* %513), !dbg !6236
  %514 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6237, !tbaa !2995
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %514, i32 0, i32 21, !dbg !6239, !ctir !253
  %515 = load i8, i8* %require_preserve, align 4, !dbg !6239, !tbaa !3461
  %tobool882 = trunc i8 %515 to i1, !dbg !6239, !ctir !120
  br i1 %tobool882, label %if.then883, label %if.end884, !dbg !6240

if.then883:                                       ; preds = %if.then879
  br label %un_backup, !dbg !6241

if.end884:                                        ; preds = %if.then879
  br label %if.end886, !dbg !6242

if.else885:                                       ; preds = %land.lhs.true877, %if.then873
  br label %if.end886

if.end886:                                        ; preds = %if.else885, %if.end884
  br label %if.end887, !dbg !6243

if.end887:                                        ; preds = %if.end886, %if.end870
  br label %if.end891, !dbg !6244

if.else888:                                       ; preds = %if.else815
  %call889 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47.133, i64 0, i64 0)) #10, !dbg !6245
  %516 = load i8*, i8** %src_name.addr, align 8, !dbg !6247, !tbaa !2995
  %call890 = call i8* @quotearg_style(i32 4, i8* %516), !dbg !6247
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call889, i8* %call890), !dbg !6248
  br label %un_backup, !dbg !6249

if.end891:                                        ; preds = %if.end887
  br label %if.end892

if.end892:                                        ; preds = %if.end891, %if.end814
  br label %if.end893

if.end893:                                        ; preds = %if.end892, %if.end791
  br label %if.end894

if.end894:                                        ; preds = %if.end893, %if.end768
  br label %if.end895

if.end895:                                        ; preds = %if.end894, %if.end751
  br label %if.end896

if.end896:                                        ; preds = %if.end895, %if.end732
  br label %if.end897

if.end897:                                        ; preds = %if.end896, %if.end684
  %517 = load i8, i8* %new_dst.addr, align 1, !dbg !6250, !tbaa !3106
  %tobool898 = trunc i8 %517 to i1, !dbg !6250
  br i1 %tobool898, label %if.end924, label %land.lhs.true899, !dbg !6252

land.lhs.true899:                                 ; preds = %if.end897
  %518 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6253, !tbaa !2995
  %copy_as_regular900 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %518, i32 0, i32 5, !dbg !6254, !ctir !253
  %519 = load i8, i8* %copy_as_regular900, align 4, !dbg !6254, !tbaa !3387
  %tobool901 = trunc i8 %519 to i1, !dbg !6254, !ctir !120
  br i1 %tobool901, label %if.end924, label %land.lhs.true902, !dbg !6255

land.lhs.true902:                                 ; preds = %land.lhs.true899
  %520 = load i32, i32* %src_mode, align 4, !dbg !6256, !tbaa !2982
  %and903 = and i32 %520, 61440, !dbg !6256
  %cmp904 = icmp eq i32 %and903, 16384, !dbg !6256
  br i1 %cmp904, label %if.end924, label %land.lhs.true906, !dbg !6257

land.lhs.true906:                                 ; preds = %land.lhs.true902
  %521 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6258, !tbaa !2995
  %set_security_context907 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %521, i32 0, i32 18, !dbg !6259, !ctir !253
  %522 = load i8, i8* %set_security_context907, align 1, !dbg !6259, !tbaa !3210
  %tobool908 = trunc i8 %522 to i1, !dbg !6259, !ctir !120
  br i1 %tobool908, label %if.then914, label %lor.lhs.false910, !dbg !6260

lor.lhs.false910:                                 ; preds = %land.lhs.true906
  %523 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6261, !tbaa !2995
  %preserve_security_context911 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %523, i32 0, i32 22, !dbg !6262, !ctir !253
  %524 = load i8, i8* %preserve_security_context911, align 1, !dbg !6262, !tbaa !3207
  %tobool912 = trunc i8 %524 to i1, !dbg !6262, !ctir !120
  br i1 %tobool912, label %if.then914, label %if.end924, !dbg !6263

if.then914:                                       ; preds = %lor.lhs.false910, %land.lhs.true906
  %525 = load i8*, i8** %dst_name.addr, align 8, !dbg !6264, !tbaa !2995
  %526 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6267, !tbaa !2995
  %preserve_security_context915 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %526, i32 0, i32 22, !dbg !6268, !ctir !253
  %527 = load i8, i8* %preserve_security_context915, align 1, !dbg !6268, !tbaa !3207
  %tobool916 = trunc i8 %527 to i1, !dbg !6268, !ctir !120
  %528 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6269, !tbaa !2995
  %call917 = call zeroext i1 @set_file_security_ctx(i8* %525, i1 zeroext %tobool916, i1 zeroext false, %struct.cp_options* %528), !dbg !6270
  br i1 %call917, label %if.end923, label %if.then918, !dbg !6271

if.then918:                                       ; preds = %if.then914
  %529 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6272, !tbaa !2995
  %require_preserve_context919 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %529, i32 0, i32 23, !dbg !6275, !ctir !253
  %530 = load i8, i8* %require_preserve_context919, align 2, !dbg !6275, !tbaa !3465
  %tobool920 = trunc i8 %530 to i1, !dbg !6275, !ctir !120
  br i1 %tobool920, label %if.then921, label %if.end922, !dbg !6276

if.then921:                                       ; preds = %if.then918
  br label %un_backup, !dbg !6277

if.end922:                                        ; preds = %if.then918
  br label %if.end923, !dbg !6278

if.end923:                                        ; preds = %if.end922, %if.then914
  br label %if.end924, !dbg !6279

if.end924:                                        ; preds = %if.end923, %lor.lhs.false910, %land.lhs.true902, %land.lhs.true899, %if.end897
  %531 = load i8, i8* %command_line_arg.addr, align 1, !dbg !6280, !tbaa !3106
  %tobool925 = trunc i8 %531 to i1, !dbg !6280
  br i1 %tobool925, label %land.lhs.true927, label %if.end937, !dbg !6282

land.lhs.true927:                                 ; preds = %if.end924
  %532 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6283, !tbaa !2995
  %dest_info928 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %532, i32 0, i32 37, !dbg !6284, !ctir !253
  %533 = load %struct.hash_table*, %struct.hash_table** %dest_info928, align 8, !dbg !6284, !tbaa !3512, !ctir !195
  %tobool929 = icmp ne %struct.hash_table* %533, null, !dbg !6283
  br i1 %tobool929, label %if.then930, label %if.end937, !dbg !6285

if.then930:                                       ; preds = %land.lhs.true927
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !6286, metadata !DIExpression()), !dbg !6288
  %534 = load i8*, i8** %dst_name.addr, align 8, !dbg !6289, !tbaa !2995
  %call931 = call i32 @lstat(i8* %534, %struct.stat* %sb) #10, !dbg !6291
  %cmp932 = icmp eq i32 %call931, 0, !dbg !6292
  br i1 %cmp932, label %if.then934, label %if.end936, !dbg !6293

if.then934:                                       ; preds = %if.then930
  %535 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6294, !tbaa !2995
  %dest_info935 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %535, i32 0, i32 37, !dbg !6295, !ctir !253
  %536 = load %struct.hash_table*, %struct.hash_table** %dest_info935, align 8, !dbg !6295, !tbaa !3512, !ctir !195
  %537 = load i8*, i8** %dst_name.addr, align 8, !dbg !6296, !tbaa !2995
  call void @record_file(%struct.hash_table* %536, i8* %537, %struct.stat* %sb), !dbg !6297
  br label %if.end936, !dbg !6297

if.end936:                                        ; preds = %if.then934, %if.then930
  br label %if.end937, !dbg !6298

if.end937:                                        ; preds = %if.end936, %land.lhs.true927, %if.end924
  %538 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6299, !tbaa !2995
  %hard_link938 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %538, i32 0, i32 8, !dbg !6301, !ctir !253
  %539 = load i8, i8* %hard_link938, align 1, !dbg !6301, !tbaa !3407
  %tobool939 = trunc i8 %539 to i1, !dbg !6301, !ctir !120
  br i1 %tobool939, label %land.lhs.true941, label %if.end947, !dbg !6302

land.lhs.true941:                                 ; preds = %if.end937
  %540 = load i32, i32* %src_mode, align 4, !dbg !6303, !tbaa !2982
  %and942 = and i32 %540, 61440, !dbg !6303
  %cmp943 = icmp eq i32 %and942, 16384, !dbg !6303
  br i1 %cmp943, label %if.end947, label %if.then945, !dbg !6304

if.then945:                                       ; preds = %land.lhs.true941
  %541 = load i8, i8* %delayed_ok, align 1, !dbg !6305, !tbaa !3106
  %tobool946 = trunc i8 %541 to i1, !dbg !6305
  store i1 %tobool946, i1* %retval, align 1, !dbg !6306
  br label %return, !dbg !6306

if.end947:                                        ; preds = %land.lhs.true941, %if.end937
  %542 = load i8, i8* %copied_as_regular, align 1, !dbg !6307, !tbaa !3106
  %tobool948 = trunc i8 %542 to i1, !dbg !6307
  br i1 %tobool948, label %if.then949, label %if.end951, !dbg !6309

if.then949:                                       ; preds = %if.end947
  %543 = load i8, i8* %delayed_ok, align 1, !dbg !6310, !tbaa !3106
  %tobool950 = trunc i8 %543 to i1, !dbg !6310
  store i1 %tobool950, i1* %retval, align 1, !dbg !6311
  br label %return, !dbg !6311

if.end951:                                        ; preds = %if.end947
  %544 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6312, !tbaa !2995
  %preserve_timestamps952 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %544, i32 0, i32 16, !dbg !6314, !ctir !253
  %545 = load i8, i8* %preserve_timestamps952, align 1, !dbg !6314, !tbaa !3438
  %tobool953 = trunc i8 %545 to i1, !dbg !6314, !ctir !120
  br i1 %tobool953, label %if.then954, label %if.end980, !dbg !6315

if.then954:                                       ; preds = %if.end951
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !6316, metadata !DIExpression()), !dbg !6318
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6319, !ctir !357
  %call956 = call { i64, i64 } @get_stat_atime(%struct.stat* %src_sb) #14, !dbg !6320
  %546 = bitcast %struct.timespec* %tmp955 to { i64, i64 }*, !dbg !6320
  %547 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %546, i32 0, i32 0, !dbg !6320
  %548 = extractvalue { i64, i64 } %call956, 0, !dbg !6320
  store i64 %548, i64* %547, align 8, !dbg !6320
  %549 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %546, i32 0, i32 1, !dbg !6320
  %550 = extractvalue { i64, i64 } %call956, 1, !dbg !6320
  store i64 %550, i64* %549, align 8, !dbg !6320
  %551 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !6320
  %552 = bitcast %struct.timespec* %tmp955 to i8*, !dbg !6320
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %551, i8* align 8 %552, i64 16, i1 false), !dbg !6320, !tbaa.struct !6321
  %arrayidx957 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !6322, !ctir !357
  %call959 = call { i64, i64 } @get_stat_mtime(%struct.stat* %src_sb) #14, !dbg !6323
  %553 = bitcast %struct.timespec* %tmp958 to { i64, i64 }*, !dbg !6323
  %554 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %553, i32 0, i32 0, !dbg !6323
  %555 = extractvalue { i64, i64 } %call959, 0, !dbg !6323
  store i64 %555, i64* %554, align 8, !dbg !6323
  %556 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %553, i32 0, i32 1, !dbg !6323
  %557 = extractvalue { i64, i64 } %call959, 1, !dbg !6323
  store i64 %557, i64* %556, align 8, !dbg !6323
  %558 = bitcast %struct.timespec* %arrayidx957 to i8*, !dbg !6323
  %559 = bitcast %struct.timespec* %tmp958 to i8*, !dbg !6323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %558, i8* align 8 %559, i64 16, i1 false), !dbg !6323, !tbaa.struct !6321
  %560 = load i8, i8* %dest_is_symlink, align 1, !dbg !6324, !tbaa !3106
  %tobool960 = trunc i8 %560 to i1, !dbg !6324
  br i1 %tobool960, label %cond.true962, label %cond.false964, !dbg !6324

cond.true962:                                     ; preds = %if.then954
  %561 = load i8*, i8** %dst_name.addr, align 8, !dbg !6326, !tbaa !2995
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6327
  %call963 = call i32 @utimens_symlink(i8* %561, %struct.timespec* %arraydecay), !dbg !6328
  br label %cond.end967, !dbg !6324

cond.false964:                                    ; preds = %if.then954
  %562 = load i8*, i8** %dst_name.addr, align 8, !dbg !6329, !tbaa !2995
  %arraydecay965 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6330
  %call966 = call i32 @utimens(i8* %562, %struct.timespec* %arraydecay965), !dbg !6331
  br label %cond.end967, !dbg !6324

cond.end967:                                      ; preds = %cond.false964, %cond.true962
  %cond968 = phi i32 [ %call963, %cond.true962 ], [ %call966, %cond.false964 ], !dbg !6324
  %cmp969 = icmp ne i32 %cond968, 0, !dbg !6332
  br i1 %cmp969, label %if.then971, label %if.end979, !dbg !6333

if.then971:                                       ; preds = %cond.end967
  %call972 = call i32* @__errno_location() #15, !dbg !6334
  %563 = load i32, i32* %call972, align 4, !dbg !6334, !tbaa !2982, !ctir !7
  %call973 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.134, i64 0, i64 0)) #10, !dbg !6336
  %564 = load i8*, i8** %dst_name.addr, align 8, !dbg !6337, !tbaa !2995
  %call974 = call i8* @quotearg_style(i32 4, i8* %564), !dbg !6337
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %563, i8* %call973, i8* %call974), !dbg !6338
  %565 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6339, !tbaa !2995
  %require_preserve975 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %565, i32 0, i32 21, !dbg !6341, !ctir !253
  %566 = load i8, i8* %require_preserve975, align 4, !dbg !6341, !tbaa !3461
  %tobool976 = trunc i8 %566 to i1, !dbg !6341, !ctir !120
  br i1 %tobool976, label %if.then977, label %if.end978, !dbg !6342

if.then977:                                       ; preds = %if.then971
  store i1 false, i1* %retval, align 1, !dbg !6343
  br label %return, !dbg !6343

if.end978:                                        ; preds = %if.then971
  br label %if.end979, !dbg !6344

if.end979:                                        ; preds = %if.end978, %cond.end967
  br label %if.end980, !dbg !6345

if.end980:                                        ; preds = %if.end979, %if.end951
  %567 = load i8, i8* %dest_is_symlink, align 1, !dbg !6346, !tbaa !3106
  %tobool981 = trunc i8 %567 to i1, !dbg !6346
  br i1 %tobool981, label %if.end1004, label %land.lhs.true982, !dbg !6348

land.lhs.true982:                                 ; preds = %if.end980
  %568 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6349, !tbaa !2995
  %preserve_ownership983 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %568, i32 0, i32 14, !dbg !6350, !ctir !253
  %569 = load i8, i8* %preserve_ownership983, align 1, !dbg !6350, !tbaa !3426
  %tobool984 = trunc i8 %569 to i1, !dbg !6350, !ctir !120
  br i1 %tobool984, label %land.lhs.true986, label %if.end1004, !dbg !6351

land.lhs.true986:                                 ; preds = %land.lhs.true982
  %570 = load i8, i8* %new_dst.addr, align 1, !dbg !6352, !tbaa !3106
  %tobool987 = trunc i8 %570 to i1, !dbg !6352
  br i1 %tobool987, label %if.then999, label %lor.lhs.false989, !dbg !6353

lor.lhs.false989:                                 ; preds = %land.lhs.true986
  %st_uid990 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !6354, !ctir !317
  %571 = load i32, i32* %st_uid990, align 4, !dbg !6354, !tbaa !6223, !ctir !326
  %st_uid991 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 4, !dbg !6354, !ctir !317
  %572 = load i32, i32* %st_uid991, align 4, !dbg !6354, !tbaa !6223, !ctir !326
  %cmp992 = icmp eq i32 %571, %572, !dbg !6354
  br i1 %cmp992, label %land.lhs.true994, label %if.then999, !dbg !6354

land.lhs.true994:                                 ; preds = %lor.lhs.false989
  %st_gid995 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !6354, !ctir !317
  %573 = load i32, i32* %st_gid995, align 8, !dbg !6354, !tbaa !6225, !ctir !328
  %st_gid996 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 5, !dbg !6354, !ctir !317
  %574 = load i32, i32* %st_gid996, align 8, !dbg !6354, !tbaa !6225, !ctir !328
  %cmp997 = icmp eq i32 %573, %574, !dbg !6354
  br i1 %cmp997, label %if.end1004, label %if.then999, !dbg !6355

if.then999:                                       ; preds = %land.lhs.true994, %lor.lhs.false989, %land.lhs.true986
  %575 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6356, !tbaa !2995
  %576 = load i8*, i8** %dst_name.addr, align 8, !dbg !6358, !tbaa !2995
  %577 = load i8, i8* %new_dst.addr, align 1, !dbg !6359, !tbaa !3106
  %tobool1000 = trunc i8 %577 to i1, !dbg !6359
  %call1001 = call i32 @set_owner(%struct.cp_options* %575, i8* %576, i32 -1, %struct.stat* %src_sb, i1 zeroext %tobool1000, %struct.stat* %dst_sb), !dbg !6360
  switch i32 %call1001, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb1002
  ], !dbg !6361

sw.bb:                                            ; preds = %if.then999
  store i1 false, i1* %retval, align 1, !dbg !6362
  br label %return, !dbg !6362

sw.bb1002:                                        ; preds = %if.then999
  %578 = load i32, i32* %src_mode, align 4, !dbg !6364, !tbaa !2982
  %and1003 = and i32 %578, -3585, !dbg !6364
  store i32 %and1003, i32* %src_mode, align 4, !dbg !6364, !tbaa !2982
  br label %sw.epilog, !dbg !6365

sw.epilog:                                        ; preds = %if.then999, %sw.bb1002
  br label %if.end1004, !dbg !6366

if.end1004:                                       ; preds = %sw.epilog, %land.lhs.true994, %land.lhs.true982, %if.end980
  %579 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6367, !tbaa !2995
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %579, i32 0, i32 24, !dbg !6369, !ctir !253
  %580 = load i8, i8* %preserve_xattr, align 1, !dbg !6369, !tbaa !3469
  %tobool1005 = trunc i8 %580 to i1, !dbg !6369, !ctir !120
  br i1 %tobool1005, label %land.lhs.true1007, label %if.end1013, !dbg !6370

land.lhs.true1007:                                ; preds = %if.end1004
  %581 = load i8*, i8** %src_name.addr, align 8, !dbg !6371, !tbaa !2995
  %582 = load i8*, i8** %dst_name.addr, align 8, !dbg !6372, !tbaa !2995
  %583 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6373, !tbaa !2995
  %call1008 = call zeroext i1 @copy_attr(i8* %581, i32 -1, i8* %582, i32 -1, %struct.cp_options* %583), !dbg !6374
  br i1 %call1008, label %if.end1013, label %land.lhs.true1009, !dbg !6375

land.lhs.true1009:                                ; preds = %land.lhs.true1007
  %584 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6376, !tbaa !2995
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %584, i32 0, i32 25, !dbg !6377, !ctir !253
  %585 = load i8, i8* %require_preserve_xattr, align 8, !dbg !6377, !tbaa !3473
  %tobool1010 = trunc i8 %585 to i1, !dbg !6377, !ctir !120
  br i1 %tobool1010, label %if.then1012, label %if.end1013, !dbg !6378

if.then1012:                                      ; preds = %land.lhs.true1009
  store i1 false, i1* %retval, align 1, !dbg !6379
  br label %return, !dbg !6379

if.end1013:                                       ; preds = %land.lhs.true1009, %land.lhs.true1007, %if.end1004
  %586 = load i8, i8* %dest_is_symlink, align 1, !dbg !6380, !tbaa !3106
  %tobool1014 = trunc i8 %586 to i1, !dbg !6380
  br i1 %tobool1014, label %if.then1015, label %if.end1017, !dbg !6382

if.then1015:                                      ; preds = %if.end1013
  %587 = load i8, i8* %delayed_ok, align 1, !dbg !6383, !tbaa !3106
  %tobool1016 = trunc i8 %587 to i1, !dbg !6383
  store i1 %tobool1016, i1* %retval, align 1, !dbg !6384
  br label %return, !dbg !6384

if.end1017:                                       ; preds = %if.end1013
  %588 = load i8*, i8** %dst_name.addr, align 8, !dbg !6385, !tbaa !2995
  call void @set_author(i8* %588, i32 -1, %struct.stat* %src_sb), !dbg !6386
  %589 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6387, !tbaa !2995
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %589, i32 0, i32 15, !dbg !6389, !ctir !253
  %590 = load i8, i8* %preserve_mode, align 2, !dbg !6389, !tbaa !3434
  %tobool1018 = trunc i8 %590 to i1, !dbg !6389, !ctir !120
  br i1 %tobool1018, label %if.then1024, label %lor.lhs.false1020, !dbg !6390

lor.lhs.false1020:                                ; preds = %if.end1017
  %591 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6391, !tbaa !2995
  %move_mode1021 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %591, i32 0, i32 9, !dbg !6392, !ctir !253
  %592 = load i8, i8* %move_mode1021, align 8, !dbg !6392, !tbaa !3414
  %tobool1022 = trunc i8 %592 to i1, !dbg !6392, !ctir !120
  br i1 %tobool1022, label %if.then1024, label %if.else1034, !dbg !6393

if.then1024:                                      ; preds = %lor.lhs.false1020, %if.end1017
  %593 = load i8*, i8** %src_name.addr, align 8, !dbg !6394, !tbaa !2995
  %594 = load i8*, i8** %dst_name.addr, align 8, !dbg !6397, !tbaa !2995
  %595 = load i32, i32* %src_mode, align 4, !dbg !6398, !tbaa !2982
  %call1025 = call i32 @copy_acl(i8* %593, i32 -1, i8* %594, i32 -1, i32 %595), !dbg !6399
  %cmp1026 = icmp ne i32 %call1025, 0, !dbg !6400
  br i1 %cmp1026, label %land.lhs.true1028, label %if.end1033, !dbg !6401

land.lhs.true1028:                                ; preds = %if.then1024
  %596 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6402, !tbaa !2995
  %require_preserve1029 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %596, i32 0, i32 21, !dbg !6403, !ctir !253
  %597 = load i8, i8* %require_preserve1029, align 4, !dbg !6403, !tbaa !3461
  %tobool1030 = trunc i8 %597 to i1, !dbg !6403, !ctir !120
  br i1 %tobool1030, label %if.then1032, label %if.end1033, !dbg !6404

if.then1032:                                      ; preds = %land.lhs.true1028
  store i1 false, i1* %retval, align 1, !dbg !6405
  br label %return, !dbg !6405

if.end1033:                                       ; preds = %land.lhs.true1028, %if.then1024
  br label %if.end1115, !dbg !6406

if.else1034:                                      ; preds = %lor.lhs.false1020
  %598 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6407, !tbaa !2995
  %set_mode1035 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %598, i32 0, i32 28, !dbg !6409, !ctir !253
  %599 = load i8, i8* %set_mode1035, align 1, !dbg !6409, !tbaa !3489
  %tobool1036 = trunc i8 %599 to i1, !dbg !6409, !ctir !120
  br i1 %tobool1036, label %if.then1037, label %if.else1044, !dbg !6410

if.then1037:                                      ; preds = %if.else1034
  %600 = load i8*, i8** %dst_name.addr, align 8, !dbg !6411, !tbaa !2995
  %601 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6414, !tbaa !2995
  %mode1038 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %601, i32 0, i32 4, !dbg !6415, !ctir !253
  %602 = load i32, i32* %mode1038, align 8, !dbg !6415, !tbaa !3493, !ctir !160
  %call1039 = call i32 @set_acl(i8* %600, i32 -1, i32 %602), !dbg !6416
  %cmp1040 = icmp ne i32 %call1039, 0, !dbg !6417
  br i1 %cmp1040, label %if.then1042, label %if.end1043, !dbg !6418

if.then1042:                                      ; preds = %if.then1037
  store i1 false, i1* %retval, align 1, !dbg !6419
  br label %return, !dbg !6419

if.end1043:                                       ; preds = %if.then1037
  br label %if.end1114, !dbg !6420

if.else1044:                                      ; preds = %if.else1034
  %603 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6421, !tbaa !2995
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %603, i32 0, i32 17, !dbg !6423, !ctir !253
  %604 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !6423, !tbaa !3442
  %tobool1045 = trunc i8 %604 to i1, !dbg !6423, !ctir !120
  br i1 %tobool1045, label %land.lhs.true1047, label %if.else1068, !dbg !6424

land.lhs.true1047:                                ; preds = %if.else1044
  %605 = load i8, i8* %new_dst.addr, align 1, !dbg !6425, !tbaa !3106
  %tobool1048 = trunc i8 %605 to i1, !dbg !6425
  br i1 %tobool1048, label %if.then1050, label %if.else1068, !dbg !6426

if.then1050:                                      ; preds = %land.lhs.true1047
  call void @llvm.dbg.declare(metadata i32* %default_permissions, metadata !6427, metadata !DIExpression()), !dbg !6429
  %606 = load i32, i32* %src_mode, align 4, !dbg !6430, !tbaa !2982
  %and1051 = and i32 %606, 61440, !dbg !6430
  %cmp1052 = icmp eq i32 %and1051, 16384, !dbg !6430
  br i1 %cmp1052, label %lor.end1058, label %lor.rhs1054, !dbg !6431

lor.rhs1054:                                      ; preds = %if.then1050
  %607 = load i32, i32* %src_mode, align 4, !dbg !6432, !tbaa !2982
  %and1055 = and i32 %607, 61440, !dbg !6432
  %cmp1056 = icmp eq i32 %and1055, 49152, !dbg !6432
  br label %lor.end1058, !dbg !6431

lor.end1058:                                      ; preds = %lor.rhs1054, %if.then1050
  %608 = phi i1 [ true, %if.then1050 ], [ %cmp1056, %lor.rhs1054 ]
  %609 = zext i1 %608 to i64, !dbg !6430
  %cond1059 = select i1 %608, i32 511, i32 438, !dbg !6430
  store i32 %cond1059, i32* %default_permissions, align 4, !dbg !6429, !tbaa !2982
  %610 = load i8*, i8** %dst_name.addr, align 8, !dbg !6433, !tbaa !2995
  %611 = load i32, i32* %default_permissions, align 4, !dbg !6435, !tbaa !2982
  %call1060 = call i32 @cached_umask(), !dbg !6436
  %neg1061 = xor i32 %call1060, -1, !dbg !6437
  %and1062 = and i32 %611, %neg1061, !dbg !6438
  %call1063 = call i32 @set_acl(i8* %610, i32 -1, i32 %and1062), !dbg !6439
  %cmp1064 = icmp ne i32 %call1063, 0, !dbg !6440
  br i1 %cmp1064, label %if.then1066, label %if.end1067, !dbg !6441

if.then1066:                                      ; preds = %lor.end1058
  store i1 false, i1* %retval, align 1, !dbg !6442
  br label %return, !dbg !6442

if.end1067:                                       ; preds = %lor.end1058
  br label %if.end1113, !dbg !6443

if.else1068:                                      ; preds = %land.lhs.true1047, %if.else1044
  %612 = load i32, i32* %omitted_permissions, align 4, !dbg !6444, !tbaa !2982
  %tobool1069 = icmp ne i32 %612, 0, !dbg !6444
  br i1 %tobool1069, label %if.then1070, label %if.end1096, !dbg !6447

if.then1070:                                      ; preds = %if.else1068
  %call1071 = call i32 @cached_umask(), !dbg !6448
  %neg1072 = xor i32 %call1071, -1, !dbg !6450
  %613 = load i32, i32* %omitted_permissions, align 4, !dbg !6451, !tbaa !2982
  %and1073 = and i32 %613, %neg1072, !dbg !6451
  store i32 %and1073, i32* %omitted_permissions, align 4, !dbg !6451, !tbaa !2982
  %614 = load i32, i32* %omitted_permissions, align 4, !dbg !6452, !tbaa !2982
  %tobool1074 = icmp ne i32 %614, 0, !dbg !6452
  br i1 %tobool1074, label %land.lhs.true1075, label %if.end1095, !dbg !6454

land.lhs.true1075:                                ; preds = %if.then1070
  %615 = load i8, i8* %restore_dst_mode, align 1, !dbg !6455, !tbaa !3106
  %tobool1076 = trunc i8 %615 to i1, !dbg !6455
  br i1 %tobool1076, label %if.end1095, label %if.then1077, !dbg !6456

if.then1077:                                      ; preds = %land.lhs.true1075
  %616 = load i8, i8* %new_dst.addr, align 1, !dbg !6457, !tbaa !3106
  %tobool1078 = trunc i8 %616 to i1, !dbg !6457
  br i1 %tobool1078, label %land.lhs.true1080, label %if.end1088, !dbg !6460

land.lhs.true1080:                                ; preds = %if.then1077
  %617 = load i8*, i8** %dst_name.addr, align 8, !dbg !6461, !tbaa !2995
  %call1081 = call i32 @lstat(i8* %617, %struct.stat* %dst_sb) #10, !dbg !6462
  %cmp1082 = icmp ne i32 %call1081, 0, !dbg !6463
  br i1 %cmp1082, label %if.then1084, label %if.end1088, !dbg !6464

if.then1084:                                      ; preds = %land.lhs.true1080
  %call1085 = call i32* @__errno_location() #15, !dbg !6465
  %618 = load i32, i32* %call1085, align 4, !dbg !6465, !tbaa !2982, !ctir !7
  %call1086 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #10, !dbg !6467
  %619 = load i8*, i8** %dst_name.addr, align 8, !dbg !6468, !tbaa !2995
  %call1087 = call i8* @quotearg_style(i32 4, i8* %619), !dbg !6468
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %618, i8* %call1086, i8* %call1087), !dbg !6469
  store i1 false, i1* %retval, align 1, !dbg !6470
  br label %return, !dbg !6470

if.end1088:                                       ; preds = %land.lhs.true1080, %if.then1077
  %st_mode1089 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !6471, !ctir !317
  %620 = load i32, i32* %st_mode1089, align 8, !dbg !6471, !tbaa !3178, !ctir !133
  store i32 %620, i32* %dst_mode, align 4, !dbg !6472, !tbaa !2982
  %621 = load i32, i32* %omitted_permissions, align 4, !dbg !6473, !tbaa !2982
  %622 = load i32, i32* %dst_mode, align 4, !dbg !6475, !tbaa !2982
  %neg1090 = xor i32 %622, -1, !dbg !6476
  %and1091 = and i32 %621, %neg1090, !dbg !6477
  %tobool1092 = icmp ne i32 %and1091, 0, !dbg !6477
  br i1 %tobool1092, label %if.then1093, label %if.end1094, !dbg !6478

if.then1093:                                      ; preds = %if.end1088
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !6479, !tbaa !3106
  br label %if.end1094, !dbg !6480

if.end1094:                                       ; preds = %if.then1093, %if.end1088
  br label %if.end1095, !dbg !6481

if.end1095:                                       ; preds = %if.end1094, %land.lhs.true1075, %if.then1070
  br label %if.end1096, !dbg !6482

if.end1096:                                       ; preds = %if.end1095, %if.else1068
  %623 = load i8, i8* %restore_dst_mode, align 1, !dbg !6483, !tbaa !3106
  %tobool1097 = trunc i8 %623 to i1, !dbg !6483
  br i1 %tobool1097, label %if.then1098, label %if.end1112, !dbg !6485

if.then1098:                                      ; preds = %if.end1096
  %624 = load i8*, i8** %dst_name.addr, align 8, !dbg !6486, !tbaa !2995
  %625 = load i32, i32* %dst_mode, align 4, !dbg !6489, !tbaa !2982
  %626 = load i32, i32* %omitted_permissions, align 4, !dbg !6490, !tbaa !2982
  %or1099 = or i32 %625, %626, !dbg !6491
  %call1100 = call i32 @chmod(i8* %624, i32 %or1099) #10, !dbg !6492
  %cmp1101 = icmp ne i32 %call1100, 0, !dbg !6493
  br i1 %cmp1101, label %if.then1103, label %if.end1111, !dbg !6494

if.then1103:                                      ; preds = %if.then1098
  %call1104 = call i32* @__errno_location() #15, !dbg !6495
  %627 = load i32, i32* %call1104, align 4, !dbg !6495, !tbaa !2982, !ctir !7
  %call1105 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.135, i64 0, i64 0)) #10, !dbg !6497
  %628 = load i8*, i8** %dst_name.addr, align 8, !dbg !6498, !tbaa !2995
  %call1106 = call i8* @quotearg_style(i32 4, i8* %628), !dbg !6498
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %627, i8* %call1105, i8* %call1106), !dbg !6499
  %629 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6500, !tbaa !2995
  %require_preserve1107 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %629, i32 0, i32 21, !dbg !6502, !ctir !253
  %630 = load i8, i8* %require_preserve1107, align 4, !dbg !6502, !tbaa !3461
  %tobool1108 = trunc i8 %630 to i1, !dbg !6502, !ctir !120
  br i1 %tobool1108, label %if.then1109, label %if.end1110, !dbg !6503

if.then1109:                                      ; preds = %if.then1103
  store i1 false, i1* %retval, align 1, !dbg !6504
  br label %return, !dbg !6504

if.end1110:                                       ; preds = %if.then1103
  br label %if.end1111, !dbg !6505

if.end1111:                                       ; preds = %if.end1110, %if.then1098
  br label %if.end1112, !dbg !6506

if.end1112:                                       ; preds = %if.end1111, %if.end1096
  br label %if.end1113

if.end1113:                                       ; preds = %if.end1112, %if.end1067
  br label %if.end1114

if.end1114:                                       ; preds = %if.end1113, %if.end1043
  br label %if.end1115

if.end1115:                                       ; preds = %if.end1114, %if.end1033
  %631 = load i8, i8* %delayed_ok, align 1, !dbg !6507, !tbaa !3106
  %tobool1116 = trunc i8 %631 to i1, !dbg !6507
  store i1 %tobool1116, i1* %retval, align 1, !dbg !6508
  br label %return, !dbg !6508

un_backup:                                        ; preds = %if.then921, %if.else888, %if.then883, %if.then863, %if.then823, %if.then810, %if.then786, %if.then767, %if.then750, %if.then728, %if.then718, %if.then667, %if.then631, %if.then619, %if.then612, %if.then596, %if.then489, %if.else477, %if.then453, %if.then163
  call void @llvm.dbg.label(metadata !6509), !dbg !6510
  %632 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6511, !tbaa !2995
  %preserve_security_context1117 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %632, i32 0, i32 22, !dbg !6513, !ctir !253
  %633 = load i8, i8* %preserve_security_context1117, align 1, !dbg !6513, !tbaa !3207
  %tobool1118 = trunc i8 %633 to i1, !dbg !6513, !ctir !120
  br i1 %tobool1118, label %if.then1119, label %if.end1120, !dbg !6514

if.then1119:                                      ; preds = %un_backup
  call void @restore_default_fscreatecon_or_die(), !dbg !6515
  br label %if.end1120, !dbg !6515

if.end1120:                                       ; preds = %if.then1119, %un_backup
  %634 = load i8*, i8** %earlier_file, align 8, !dbg !6516, !tbaa !2995
  %cmp1121 = icmp eq i8* %634, null, !dbg !6518
  br i1 %cmp1121, label %if.then1123, label %if.end1126, !dbg !6519

if.then1123:                                      ; preds = %if.end1120
  %st_ino1124 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !6520, !ctir !317
  %635 = load i64, i64* %st_ino1124, align 8, !dbg !6520, !tbaa !3870, !ctir !228
  %st_dev1125 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !6521, !ctir !317
  %636 = load i64, i64* %st_dev1125, align 8, !dbg !6521, !tbaa !3873, !ctir !231
  call void @forget_created(i64 %635, i64 %636), !dbg !6522
  br label %if.end1126, !dbg !6522

if.end1126:                                       ; preds = %if.then1123, %if.end1120
  %637 = load i8*, i8** %dst_backup, align 8, !dbg !6523, !tbaa !2995
  %tobool1127 = icmp ne i8* %637, null, !dbg !6523
  br i1 %tobool1127, label %if.then1128, label %if.end1146, !dbg !6525

if.then1128:                                      ; preds = %if.end1126
  %638 = load i8*, i8** %dst_backup, align 8, !dbg !6526, !tbaa !2995
  %639 = load i8*, i8** %dst_name.addr, align 8, !dbg !6529, !tbaa !2995
  %call1129 = call i32 @rename(i8* %638, i8* %639) #10, !dbg !6530
  %cmp1130 = icmp ne i32 %call1129, 0, !dbg !6531
  br i1 %cmp1130, label %if.then1132, label %if.else1136, !dbg !6532

if.then1132:                                      ; preds = %if.then1128
  %call1133 = call i32* @__errno_location() #15, !dbg !6533
  %640 = load i32, i32* %call1133, align 4, !dbg !6533, !tbaa !2982, !ctir !7
  %call1134 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50.136, i64 0, i64 0)) #10, !dbg !6534
  %641 = load i8*, i8** %dst_name.addr, align 8, !dbg !6535, !tbaa !2995
  %call1135 = call i8* @quotearg_style(i32 4, i8* %641), !dbg !6535
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %640, i8* %call1134, i8* %call1135), !dbg !6536
  br label %if.end1145, !dbg !6536

if.else1136:                                      ; preds = %if.then1128
  %642 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6537, !tbaa !2995
  %verbose1137 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %642, i32 0, i32 31, !dbg !6540, !ctir !253
  %643 = load i8, i8* %verbose1137, align 2, !dbg !6540, !tbaa !3195
  %tobool1138 = trunc i8 %643 to i1, !dbg !6540, !ctir !120
  br i1 %tobool1138, label %if.then1139, label %if.end1144, !dbg !6541

if.then1139:                                      ; preds = %if.else1136
  %call1140 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51.137, i64 0, i64 0)) #10, !dbg !6542
  %644 = load i8*, i8** %dst_backup, align 8, !dbg !6543, !tbaa !2995
  %call1141 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %644), !dbg !6543
  %645 = load i8*, i8** %dst_name.addr, align 8, !dbg !6544, !tbaa !2995
  %call1142 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %645), !dbg !6544
  %call1143 = call i32 (i8*, ...) @printf(i8* %call1140, i8* %call1141, i8* %call1142), !dbg !6545
  br label %if.end1144, !dbg !6545

if.end1144:                                       ; preds = %if.then1139, %if.else1136
  br label %if.end1145

if.end1145:                                       ; preds = %if.end1144, %if.then1132
  br label %if.end1146, !dbg !6546

if.end1146:                                       ; preds = %if.end1145, %if.end1126
  store i1 false, i1* %retval, align 1, !dbg !6547
  br label %return, !dbg !6547

return:                                           ; preds = %if.end1146, %if.end1115, %if.then1109, %if.then1084, %if.then1066, %if.then1042, %if.then1032, %if.then1015, %if.then1012, %sw.bb, %if.then977, %if.then949, %if.then945, %if.then590, %if.then555, %if.then536, %if.then530, %if.end527, %if.end490, %if.end467, %if.then377, %if.then333, %if.then300, %cond.end287, %if.then257, %if.else238, %if.then219, %if.else207, %if.then192, %if.then188, %if.end175, %if.end165, %if.then132, %if.then117, %if.then63, %cond.end47, %if.then34
  %646 = load i1, i1* %retval, align 1, !dbg !6548
  ret i1 %646, !dbg !6548
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @should_dereference(%struct.cp_options* %x, i1 zeroext %command_line_arg) #9 !dbg !6549 !ctir !358 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6550, metadata !DIExpression()), !dbg !6551
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !6552, metadata !DIExpression()), !dbg !6553
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6554, !tbaa !2995
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 1, !dbg !6555, !ctir !253
  %1 = load i32, i32* %dereference, align 4, !dbg !6555, !tbaa !3395, !ctir !76
  %cmp = icmp eq i32 %1, 4, !dbg !6556
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6557

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6558, !tbaa !2995
  %dereference1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 1, !dbg !6559, !ctir !253
  %3 = load i32, i32* %dereference1, align 4, !dbg !6559, !tbaa !3395, !ctir !76
  %cmp2 = icmp eq i32 %3, 3, !dbg !6560
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !6561

land.rhs:                                         ; preds = %lor.rhs
  %4 = load i8, i8* %command_line_arg.addr, align 1, !dbg !6562, !tbaa !3106
  %tobool = trunc i8 %4 to i1, !dbg !6562
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %5 = phi i1 [ false, %lor.rhs ], [ %tobool, %land.rhs ], !dbg !6563
  br label %lor.end, !dbg !6557

lor.end:                                          ; preds = %land.end, %entry
  %6 = phi i1 [ true, %entry ], [ %5, %land.end ]
  ret i1 %6, !dbg !6564
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @same_file_ok(i8* %src_name, %struct.stat* %src_sb, i8* %dst_name, %struct.stat* %dst_sb, %struct.cp_options* %x, i8* %return_now) #4 !dbg !6565 !ctir !360 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %return_now.addr = alloca i8*, align 8
  %src_sb_link = alloca %struct.stat*, align 8, !ctir !315
  %dst_sb_link = alloca %struct.stat*, align 8, !ctir !315
  %tmp_dst_sb = alloca %struct.stat, align 8, !ctir !317
  %tmp_src_sb = alloca %struct.stat, align 8, !ctir !317
  %same_link = alloca i8, align 1, !ctir !120
  %same = alloca i8, align 1, !ctir !120
  %sn = alloca i8, align 1, !ctir !120
  %abs_src = alloca i8*, align 8, !ctir !9
  %result = alloca i8, align 1, !ctir !120
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6566, metadata !DIExpression()), !dbg !6567
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6568, metadata !DIExpression()), !dbg !6569
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6570, metadata !DIExpression()), !dbg !6571
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6572, metadata !DIExpression()), !dbg !6573
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6574, metadata !DIExpression()), !dbg !6575
  store i8* %return_now, i8** %return_now.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %return_now.addr, metadata !6576, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb_link, metadata !6578, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb_link, metadata !6580, metadata !DIExpression()), !dbg !6581
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_dst_sb, metadata !6582, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_src_sb, metadata !6584, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.declare(metadata i8* %same_link, metadata !6586, metadata !DIExpression()), !dbg !6587
  call void @llvm.dbg.declare(metadata i8* %same, metadata !6588, metadata !DIExpression()), !dbg !6589
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6590, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 1, !dbg !6590, !ctir !316
  %1 = load i64, i64* %st_ino, align 8, !dbg !6590, !tbaa !3870, !ctir !228
  %2 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6590, !tbaa !2995
  %st_ino1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !6590, !ctir !316
  %3 = load i64, i64* %st_ino1, align 8, !dbg !6590, !tbaa !3870, !ctir !228
  %cmp = icmp eq i64 %1, %3, !dbg !6590
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6590

land.rhs:                                         ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6590, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !6590, !ctir !316
  %5 = load i64, i64* %st_dev, align 8, !dbg !6590, !tbaa !3873, !ctir !231
  %6 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6590, !tbaa !2995
  %st_dev2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 0, !dbg !6590, !ctir !316
  %7 = load i64, i64* %st_dev2, align 8, !dbg !6590, !tbaa !3873, !ctir !231
  %cmp3 = icmp eq i64 %5, %7, !dbg !6590
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !6591
  %frombool = zext i1 %8 to i8, !dbg !6589
  store i8 %frombool, i8* %same, align 1, !dbg !6589, !tbaa !3106
  %9 = load i8*, i8** %return_now.addr, align 8, !dbg !6592, !tbaa !2995
  store i8 0, i8* %9, align 1, !dbg !6593, !tbaa !3106, !ctir !120
  %10 = load i8, i8* %same, align 1, !dbg !6594, !tbaa !3106
  %tobool = trunc i8 %10 to i1, !dbg !6594
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6596

land.lhs.true:                                    ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6597, !tbaa !2995
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 8, !dbg !6598, !ctir !253
  %12 = load i8, i8* %hard_link, align 1, !dbg !6598, !tbaa !3407
  %tobool4 = trunc i8 %12 to i1, !dbg !6598, !ctir !120
  br i1 %tobool4, label %if.then, label %if.end, !dbg !6599

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %return_now.addr, align 8, !dbg !6600, !tbaa !2995
  store i8 1, i8* %13, align 1, !dbg !6602, !tbaa !3106, !ctir !120
  store i1 true, i1* %retval, align 1, !dbg !6603
  br label %return, !dbg !6603

if.end:                                           ; preds = %land.lhs.true, %land.end
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6604, !tbaa !2995
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 1, !dbg !6606, !ctir !253
  %15 = load i32, i32* %dereference, align 4, !dbg !6606, !tbaa !3395, !ctir !76
  %cmp5 = icmp eq i32 %15, 2, !dbg !6607
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !6608

if.then6:                                         ; preds = %if.end
  %16 = load i8, i8* %same, align 1, !dbg !6609, !tbaa !3106
  %tobool7 = trunc i8 %16 to i1, !dbg !6609
  %frombool8 = zext i1 %tobool7 to i8, !dbg !6611
  store i8 %frombool8, i8* %same_link, align 1, !dbg !6611, !tbaa !3106
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6612, !tbaa !2995
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !6612, !ctir !316
  %18 = load i32, i32* %st_mode, align 8, !dbg !6612, !tbaa !3178, !ctir !133
  %and = and i32 %18, 61440, !dbg !6612
  %cmp9 = icmp eq i32 %and, 40960, !dbg !6612
  br i1 %cmp9, label %land.lhs.true10, label %if.end28, !dbg !6614

land.lhs.true10:                                  ; preds = %if.then6
  %19 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6615, !tbaa !2995
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 3, !dbg !6615, !ctir !316
  %20 = load i32, i32* %st_mode11, align 8, !dbg !6615, !tbaa !3178, !ctir !133
  %and12 = and i32 %20, 61440, !dbg !6615
  %cmp13 = icmp eq i32 %and12, 40960, !dbg !6615
  br i1 %cmp13, label %if.then14, label %if.end28, !dbg !6616

if.then14:                                        ; preds = %land.lhs.true10
  call void @llvm.dbg.declare(metadata i8* %sn, metadata !6617, metadata !DIExpression()), !dbg !6619
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !6620, !tbaa !2995
  %22 = load i8*, i8** %dst_name.addr, align 8, !dbg !6621, !tbaa !2995
  %call = call zeroext i1 @same_name(i8* %21, i8* %22), !dbg !6622
  %frombool15 = zext i1 %call to i8, !dbg !6619
  store i8 %frombool15, i8* %sn, align 1, !dbg !6619, !tbaa !3106
  %23 = load i8, i8* %sn, align 1, !dbg !6623, !tbaa !3106
  %tobool16 = trunc i8 %23 to i1, !dbg !6623
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !6625

if.then17:                                        ; preds = %if.then14
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6626, !tbaa !2995
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 0, !dbg !6629, !ctir !253
  %25 = load i32, i32* %backup_type, align 8, !dbg !6629, !tbaa !3326, !ctir !68
  %cmp18 = icmp ne i32 %25, 0, !dbg !6630
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !6631

if.then19:                                        ; preds = %if.then17
  store i1 true, i1* %retval, align 1, !dbg !6632
  br label %return, !dbg !6632

if.end20:                                         ; preds = %if.then17
  %26 = load i8, i8* %same_link, align 1, !dbg !6633, !tbaa !3106
  %tobool21 = trunc i8 %26 to i1, !dbg !6633
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !6635

if.then22:                                        ; preds = %if.end20
  %27 = load i8*, i8** %return_now.addr, align 8, !dbg !6636, !tbaa !2995
  store i8 1, i8* %27, align 1, !dbg !6638, !tbaa !3106, !ctir !120
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6639, !tbaa !2995
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 9, !dbg !6640, !ctir !253
  %29 = load i8, i8* %move_mode, align 8, !dbg !6640, !tbaa !3414
  %tobool23 = trunc i8 %29 to i1, !dbg !6640, !ctir !120
  %lnot = xor i1 %tobool23, true, !dbg !6641
  store i1 %lnot, i1* %retval, align 1, !dbg !6642
  br label %return, !dbg !6642

if.end24:                                         ; preds = %if.end20
  br label %if.end25, !dbg !6643

if.end25:                                         ; preds = %if.end24, %if.then14
  %30 = load i8, i8* %sn, align 1, !dbg !6644, !tbaa !3106
  %tobool26 = trunc i8 %30 to i1, !dbg !6644
  %lnot27 = xor i1 %tobool26, true, !dbg !6645
  store i1 %lnot27, i1* %retval, align 1, !dbg !6646
  br label %return, !dbg !6646

if.end28:                                         ; preds = %land.lhs.true10, %if.then6
  %31 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6647, !tbaa !2995
  store %struct.stat* %31, %struct.stat** %src_sb_link, align 8, !dbg !6648, !tbaa !2995
  %32 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6649, !tbaa !2995
  store %struct.stat* %32, %struct.stat** %dst_sb_link, align 8, !dbg !6650, !tbaa !2995
  br label %if.end58, !dbg !6651

if.else:                                          ; preds = %if.end
  %33 = load i8, i8* %same, align 1, !dbg !6652, !tbaa !3106
  %tobool29 = trunc i8 %33 to i1, !dbg !6652
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !6655

if.then30:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !6656
  br label %return, !dbg !6656

if.end31:                                         ; preds = %if.else
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !6657, !tbaa !2995
  %call32 = call i32 @lstat(i8* %34, %struct.stat* %tmp_dst_sb) #10, !dbg !6659
  %cmp33 = icmp ne i32 %call32, 0, !dbg !6660
  br i1 %cmp33, label %if.then36, label %lor.lhs.false, !dbg !6661

lor.lhs.false:                                    ; preds = %if.end31
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !6662, !tbaa !2995
  %call34 = call i32 @lstat(i8* %35, %struct.stat* %tmp_src_sb) #10, !dbg !6663
  %cmp35 = icmp ne i32 %call34, 0, !dbg !6664
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !6665

if.then36:                                        ; preds = %lor.lhs.false, %if.end31
  store i1 true, i1* %retval, align 1, !dbg !6666
  br label %return, !dbg !6666

if.end37:                                         ; preds = %lor.lhs.false
  store %struct.stat* %tmp_src_sb, %struct.stat** %src_sb_link, align 8, !dbg !6667, !tbaa !2995
  store %struct.stat* %tmp_dst_sb, %struct.stat** %dst_sb_link, align 8, !dbg !6668, !tbaa !2995
  %36 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6669, !tbaa !2995
  %st_ino38 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 1, !dbg !6669, !ctir !316
  %37 = load i64, i64* %st_ino38, align 8, !dbg !6669, !tbaa !3870, !ctir !228
  %38 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6669, !tbaa !2995
  %st_ino39 = getelementptr inbounds %struct.stat, %struct.stat* %38, i32 0, i32 1, !dbg !6669, !ctir !316
  %39 = load i64, i64* %st_ino39, align 8, !dbg !6669, !tbaa !3870, !ctir !228
  %cmp40 = icmp eq i64 %37, %39, !dbg !6669
  br i1 %cmp40, label %land.rhs41, label %land.end45, !dbg !6669

land.rhs41:                                       ; preds = %if.end37
  %40 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6669, !tbaa !2995
  %st_dev42 = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 0, !dbg !6669, !ctir !316
  %41 = load i64, i64* %st_dev42, align 8, !dbg !6669, !tbaa !3873, !ctir !231
  %42 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6669, !tbaa !2995
  %st_dev43 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 0, !dbg !6669, !ctir !316
  %43 = load i64, i64* %st_dev43, align 8, !dbg !6669, !tbaa !3873, !ctir !231
  %cmp44 = icmp eq i64 %41, %43, !dbg !6669
  br label %land.end45

land.end45:                                       ; preds = %land.rhs41, %if.end37
  %44 = phi i1 [ false, %if.end37 ], [ %cmp44, %land.rhs41 ], !dbg !6670
  %frombool46 = zext i1 %44 to i8, !dbg !6671
  store i8 %frombool46, i8* %same_link, align 1, !dbg !6671, !tbaa !3106
  %45 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6672, !tbaa !2995
  %st_mode47 = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 3, !dbg !6672, !ctir !316
  %46 = load i32, i32* %st_mode47, align 8, !dbg !6672, !tbaa !3178, !ctir !133
  %and48 = and i32 %46, 61440, !dbg !6672
  %cmp49 = icmp eq i32 %and48, 40960, !dbg !6672
  br i1 %cmp49, label %land.lhs.true50, label %if.end57, !dbg !6674

land.lhs.true50:                                  ; preds = %land.end45
  %47 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6675, !tbaa !2995
  %st_mode51 = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 3, !dbg !6675, !ctir !316
  %48 = load i32, i32* %st_mode51, align 8, !dbg !6675, !tbaa !3178, !ctir !133
  %and52 = and i32 %48, 61440, !dbg !6675
  %cmp53 = icmp eq i32 %and52, 40960, !dbg !6675
  br i1 %cmp53, label %land.lhs.true54, label %if.end57, !dbg !6676

land.lhs.true54:                                  ; preds = %land.lhs.true50
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6677, !tbaa !2995
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %49, i32 0, i32 6, !dbg !6678, !ctir !253
  %50 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !6678, !tbaa !3399
  %tobool55 = trunc i8 %50 to i1, !dbg !6678, !ctir !120
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !6679

if.then56:                                        ; preds = %land.lhs.true54
  store i1 true, i1* %retval, align 1, !dbg !6680
  br label %return, !dbg !6680

if.end57:                                         ; preds = %land.lhs.true54, %land.lhs.true50, %land.end45
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end28
  %51 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6681, !tbaa !2995
  %backup_type59 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %51, i32 0, i32 0, !dbg !6683, !ctir !253
  %52 = load i32, i32* %backup_type59, align 8, !dbg !6683, !tbaa !3326, !ctir !68
  %cmp60 = icmp ne i32 %52, 0, !dbg !6684
  br i1 %cmp60, label %if.then61, label %if.end82, !dbg !6685

if.then61:                                        ; preds = %if.end58
  %53 = load i8, i8* %same_link, align 1, !dbg !6686, !tbaa !3106
  %tobool62 = trunc i8 %53 to i1, !dbg !6686
  br i1 %tobool62, label %if.end79, label %if.then63, !dbg !6689

if.then63:                                        ; preds = %if.then61
  %54 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6690, !tbaa !2995
  %move_mode64 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %54, i32 0, i32 9, !dbg !6693, !ctir !253
  %55 = load i8, i8* %move_mode64, align 8, !dbg !6693, !tbaa !3414
  %tobool65 = trunc i8 %55 to i1, !dbg !6693, !ctir !120
  br i1 %tobool65, label %if.end78, label %land.lhs.true66, !dbg !6694

land.lhs.true66:                                  ; preds = %if.then63
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6695, !tbaa !2995
  %dereference67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 1, !dbg !6696, !ctir !253
  %57 = load i32, i32* %dereference67, align 4, !dbg !6696, !tbaa !3395, !ctir !76
  %cmp68 = icmp ne i32 %57, 2, !dbg !6697
  br i1 %cmp68, label %land.lhs.true69, label %if.end78, !dbg !6698

land.lhs.true69:                                  ; preds = %land.lhs.true66
  %58 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6699, !tbaa !2995
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %58, i32 0, i32 3, !dbg !6699, !ctir !316
  %59 = load i32, i32* %st_mode70, align 8, !dbg !6699, !tbaa !3178, !ctir !133
  %and71 = and i32 %59, 61440, !dbg !6699
  %cmp72 = icmp eq i32 %and71, 40960, !dbg !6699
  br i1 %cmp72, label %land.lhs.true73, label %if.end78, !dbg !6700

land.lhs.true73:                                  ; preds = %land.lhs.true69
  %60 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6701, !tbaa !2995
  %st_mode74 = getelementptr inbounds %struct.stat, %struct.stat* %60, i32 0, i32 3, !dbg !6701, !ctir !316
  %61 = load i32, i32* %st_mode74, align 8, !dbg !6701, !tbaa !3178, !ctir !133
  %and75 = and i32 %61, 61440, !dbg !6701
  %cmp76 = icmp eq i32 %and75, 40960, !dbg !6701
  br i1 %cmp76, label %if.end78, label %if.then77, !dbg !6702

if.then77:                                        ; preds = %land.lhs.true73
  store i1 false, i1* %retval, align 1, !dbg !6703
  br label %return, !dbg !6703

if.end78:                                         ; preds = %land.lhs.true73, %land.lhs.true69, %land.lhs.true66, %if.then63
  store i1 true, i1* %retval, align 1, !dbg !6704
  br label %return, !dbg !6704

if.end79:                                         ; preds = %if.then61
  %62 = load i8*, i8** %src_name.addr, align 8, !dbg !6705, !tbaa !2995
  %63 = load i8*, i8** %dst_name.addr, align 8, !dbg !6706, !tbaa !2995
  %call80 = call zeroext i1 @same_name(i8* %62, i8* %63), !dbg !6707
  %lnot81 = xor i1 %call80, true, !dbg !6708
  store i1 %lnot81, i1* %retval, align 1, !dbg !6709
  br label %return, !dbg !6709

if.end82:                                         ; preds = %if.end58
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6710, !tbaa !2995
  %move_mode83 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 9, !dbg !6712, !ctir !253
  %65 = load i8, i8* %move_mode83, align 8, !dbg !6712, !tbaa !3414
  %tobool84 = trunc i8 %65 to i1, !dbg !6712, !ctir !120
  br i1 %tobool84, label %if.then88, label %lor.lhs.false85, !dbg !6713

lor.lhs.false85:                                  ; preds = %if.end82
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6714, !tbaa !2995
  %unlink_dest_before_opening86 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 6, !dbg !6715, !ctir !253
  %67 = load i8, i8* %unlink_dest_before_opening86, align 1, !dbg !6715, !tbaa !3399
  %tobool87 = trunc i8 %67 to i1, !dbg !6715, !ctir !120
  br i1 %tobool87, label %if.then88, label %if.end104, !dbg !6716

if.then88:                                        ; preds = %lor.lhs.false85, %if.end82
  %68 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6717, !tbaa !2995
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %68, i32 0, i32 3, !dbg !6717, !ctir !316
  %69 = load i32, i32* %st_mode89, align 8, !dbg !6717, !tbaa !3178, !ctir !133
  %and90 = and i32 %69, 61440, !dbg !6717
  %cmp91 = icmp eq i32 %and90, 40960, !dbg !6717
  br i1 %cmp91, label %if.then92, label %if.end93, !dbg !6720

if.then92:                                        ; preds = %if.then88
  store i1 true, i1* %retval, align 1, !dbg !6721
  br label %return, !dbg !6721

if.end93:                                         ; preds = %if.then88
  %70 = load i8, i8* %same_link, align 1, !dbg !6722, !tbaa !3106
  %tobool94 = trunc i8 %70 to i1, !dbg !6722
  br i1 %tobool94, label %land.lhs.true95, label %if.end103, !dbg !6724

land.lhs.true95:                                  ; preds = %if.end93
  %71 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6725, !tbaa !2995
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %71, i32 0, i32 2, !dbg !6726, !ctir !316
  %72 = load i64, i64* %st_nlink, align 8, !dbg !6726, !tbaa !5420, !ctir !323
  %cmp96 = icmp ult i64 1, %72, !dbg !6727
  br i1 %cmp96, label %land.lhs.true97, label %if.end103, !dbg !6728

land.lhs.true97:                                  ; preds = %land.lhs.true95
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !6729, !tbaa !2995
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !6730, !tbaa !2995
  %call98 = call zeroext i1 @same_name(i8* %73, i8* %74), !dbg !6731
  br i1 %call98, label %if.end103, label %if.then99, !dbg !6732

if.then99:                                        ; preds = %land.lhs.true97
  %75 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6733, !tbaa !2995
  %move_mode100 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %75, i32 0, i32 9, !dbg !6734, !ctir !253
  %76 = load i8, i8* %move_mode100, align 8, !dbg !6734, !tbaa !3414
  %tobool101 = trunc i8 %76 to i1, !dbg !6734, !ctir !120
  %lnot102 = xor i1 %tobool101, true, !dbg !6735
  store i1 %lnot102, i1* %retval, align 1, !dbg !6736
  br label %return, !dbg !6736

if.end103:                                        ; preds = %land.lhs.true97, %land.lhs.true95, %if.end93
  br label %if.end104, !dbg !6737

if.end104:                                        ; preds = %if.end103, %lor.lhs.false85
  %77 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6738, !tbaa !2995
  %st_mode105 = getelementptr inbounds %struct.stat, %struct.stat* %77, i32 0, i32 3, !dbg !6738, !ctir !316
  %78 = load i32, i32* %st_mode105, align 8, !dbg !6738, !tbaa !3178, !ctir !133
  %and106 = and i32 %78, 61440, !dbg !6738
  %cmp107 = icmp eq i32 %and106, 40960, !dbg !6738
  br i1 %cmp107, label %if.end126, label %land.lhs.true108, !dbg !6740

land.lhs.true108:                                 ; preds = %if.end104
  %79 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6741, !tbaa !2995
  %st_mode109 = getelementptr inbounds %struct.stat, %struct.stat* %79, i32 0, i32 3, !dbg !6741, !ctir !316
  %80 = load i32, i32* %st_mode109, align 8, !dbg !6741, !tbaa !3178, !ctir !133
  %and110 = and i32 %80, 61440, !dbg !6741
  %cmp111 = icmp eq i32 %and110, 40960, !dbg !6741
  br i1 %cmp111, label %if.end126, label %if.then112, !dbg !6742

if.then112:                                       ; preds = %land.lhs.true108
  %81 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6743, !tbaa !2995
  %st_ino113 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 1, !dbg !6743, !ctir !316
  %82 = load i64, i64* %st_ino113, align 8, !dbg !6743, !tbaa !3870, !ctir !228
  %83 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6743, !tbaa !2995
  %st_ino114 = getelementptr inbounds %struct.stat, %struct.stat* %83, i32 0, i32 1, !dbg !6743, !ctir !316
  %84 = load i64, i64* %st_ino114, align 8, !dbg !6743, !tbaa !3870, !ctir !228
  %cmp115 = icmp eq i64 %82, %84, !dbg !6743
  br i1 %cmp115, label %land.lhs.true116, label %if.then120, !dbg !6743

land.lhs.true116:                                 ; preds = %if.then112
  %85 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6743, !tbaa !2995
  %st_dev117 = getelementptr inbounds %struct.stat, %struct.stat* %85, i32 0, i32 0, !dbg !6743, !ctir !316
  %86 = load i64, i64* %st_dev117, align 8, !dbg !6743, !tbaa !3873, !ctir !231
  %87 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6743, !tbaa !2995
  %st_dev118 = getelementptr inbounds %struct.stat, %struct.stat* %87, i32 0, i32 0, !dbg !6743, !ctir !316
  %88 = load i64, i64* %st_dev118, align 8, !dbg !6743, !tbaa !3873, !ctir !231
  %cmp119 = icmp eq i64 %86, %88, !dbg !6743
  br i1 %cmp119, label %if.end121, label %if.then120, !dbg !6746

if.then120:                                       ; preds = %land.lhs.true116, %if.then112
  store i1 true, i1* %retval, align 1, !dbg !6747
  br label %return, !dbg !6747

if.end121:                                        ; preds = %land.lhs.true116
  %89 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6748, !tbaa !2995
  %hard_link122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 8, !dbg !6750, !ctir !253
  %90 = load i8, i8* %hard_link122, align 1, !dbg !6750, !tbaa !3407
  %tobool123 = trunc i8 %90 to i1, !dbg !6750, !ctir !120
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !6751

if.then124:                                       ; preds = %if.end121
  %91 = load i8*, i8** %return_now.addr, align 8, !dbg !6752, !tbaa !2995
  store i8 1, i8* %91, align 1, !dbg !6754, !tbaa !3106, !ctir !120
  store i1 true, i1* %retval, align 1, !dbg !6755
  br label %return, !dbg !6755

if.end125:                                        ; preds = %if.end121
  br label %if.end126, !dbg !6756

if.end126:                                        ; preds = %if.end125, %land.lhs.true108, %if.end104
  %92 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6757, !tbaa !2995
  %move_mode127 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %92, i32 0, i32 9, !dbg !6759, !ctir !253
  %93 = load i8, i8* %move_mode127, align 8, !dbg !6759, !tbaa !3414
  %tobool128 = trunc i8 %93 to i1, !dbg !6759, !ctir !120
  br i1 %tobool128, label %land.lhs.true129, label %if.end145, !dbg !6760

land.lhs.true129:                                 ; preds = %if.end126
  %94 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6761, !tbaa !2995
  %st_mode130 = getelementptr inbounds %struct.stat, %struct.stat* %94, i32 0, i32 3, !dbg !6761, !ctir !316
  %95 = load i32, i32* %st_mode130, align 8, !dbg !6761, !tbaa !3178, !ctir !133
  %and131 = and i32 %95, 61440, !dbg !6761
  %cmp132 = icmp eq i32 %and131, 40960, !dbg !6761
  br i1 %cmp132, label %land.lhs.true133, label %if.end145, !dbg !6762

land.lhs.true133:                                 ; preds = %land.lhs.true129
  %96 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6763, !tbaa !2995
  %st_nlink134 = getelementptr inbounds %struct.stat, %struct.stat* %96, i32 0, i32 2, !dbg !6764, !ctir !316
  %97 = load i64, i64* %st_nlink134, align 8, !dbg !6764, !tbaa !5420, !ctir !323
  %cmp135 = icmp ult i64 1, %97, !dbg !6765
  br i1 %cmp135, label %if.then136, label %if.end145, !dbg !6766

if.then136:                                       ; preds = %land.lhs.true133
  call void @llvm.dbg.declare(metadata i8** %abs_src, metadata !6767, metadata !DIExpression()), !dbg !6769
  %98 = load i8*, i8** %src_name.addr, align 8, !dbg !6770, !tbaa !2995
  %call137 = call i8* @canonicalize_file_name(i8* %98) #10, !dbg !6771
  store i8* %call137, i8** %abs_src, align 8, !dbg !6769, !tbaa !2995
  %99 = load i8*, i8** %abs_src, align 8, !dbg !6772, !tbaa !2995
  %tobool138 = icmp ne i8* %99, null, !dbg !6772
  br i1 %tobool138, label %if.then139, label %if.end144, !dbg !6774

if.then139:                                       ; preds = %if.then136
  call void @llvm.dbg.declare(metadata i8* %result, metadata !6775, metadata !DIExpression()), !dbg !6777
  %100 = load i8*, i8** %abs_src, align 8, !dbg !6778, !tbaa !2995
  %101 = load i8*, i8** %dst_name.addr, align 8, !dbg !6779, !tbaa !2995
  %call140 = call zeroext i1 @same_name(i8* %100, i8* %101), !dbg !6780
  %lnot141 = xor i1 %call140, true, !dbg !6781
  %frombool142 = zext i1 %lnot141 to i8, !dbg !6777
  store i8 %frombool142, i8* %result, align 1, !dbg !6777, !tbaa !3106
  %102 = load i8*, i8** %abs_src, align 8, !dbg !6782, !tbaa !2995
  call void @free(i8* %102) #10, !dbg !6783
  %103 = load i8, i8* %result, align 1, !dbg !6784, !tbaa !3106
  %tobool143 = trunc i8 %103 to i1, !dbg !6784
  store i1 %tobool143, i1* %retval, align 1, !dbg !6785
  br label %return, !dbg !6785

if.end144:                                        ; preds = %if.then136
  br label %if.end145, !dbg !6786

if.end145:                                        ; preds = %if.end144, %land.lhs.true133, %land.lhs.true129, %if.end126
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6787, !tbaa !2995
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 29, !dbg !6789, !ctir !253
  %105 = load i8, i8* %symbolic_link, align 4, !dbg !6789, !tbaa !3485
  %tobool146 = trunc i8 %105 to i1, !dbg !6789, !ctir !120
  br i1 %tobool146, label %land.lhs.true147, label %if.end152, !dbg !6790

land.lhs.true147:                                 ; preds = %if.end145
  %106 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6791, !tbaa !2995
  %st_mode148 = getelementptr inbounds %struct.stat, %struct.stat* %106, i32 0, i32 3, !dbg !6791, !ctir !316
  %107 = load i32, i32* %st_mode148, align 8, !dbg !6791, !tbaa !3178, !ctir !133
  %and149 = and i32 %107, 61440, !dbg !6791
  %cmp150 = icmp eq i32 %and149, 40960, !dbg !6791
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !6792

if.then151:                                       ; preds = %land.lhs.true147
  store i1 true, i1* %retval, align 1, !dbg !6793
  br label %return, !dbg !6793

if.end152:                                        ; preds = %land.lhs.true147, %if.end145
  %108 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6794, !tbaa !2995
  %dereference153 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %108, i32 0, i32 1, !dbg !6796, !ctir !253
  %109 = load i32, i32* %dereference153, align 4, !dbg !6796, !tbaa !3395, !ctir !76
  %cmp154 = icmp eq i32 %109, 2, !dbg !6797
  br i1 %cmp154, label %if.then155, label %if.end194, !dbg !6798

if.then155:                                       ; preds = %if.end152
  %110 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6799, !tbaa !2995
  %st_mode156 = getelementptr inbounds %struct.stat, %struct.stat* %110, i32 0, i32 3, !dbg !6799, !ctir !316
  %111 = load i32, i32* %st_mode156, align 8, !dbg !6799, !tbaa !3178, !ctir !133
  %and157 = and i32 %111, 61440, !dbg !6799
  %cmp158 = icmp eq i32 %and157, 40960, !dbg !6799
  br i1 %cmp158, label %if.else160, label %if.then159, !dbg !6802

if.then159:                                       ; preds = %if.then155
  %112 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6803, !tbaa !2995
  %113 = bitcast %struct.stat* %tmp_src_sb to i8*, !dbg !6804
  %114 = bitcast %struct.stat* %112 to i8*, !dbg !6804
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 144, i1 false), !dbg !6804, !tbaa.struct !6805
  br label %if.end165, !dbg !6806

if.else160:                                       ; preds = %if.then155
  %115 = load i8*, i8** %src_name.addr, align 8, !dbg !6807, !tbaa !2995
  %call161 = call i32 @stat(i8* %115, %struct.stat* %tmp_src_sb) #10, !dbg !6809
  %cmp162 = icmp ne i32 %call161, 0, !dbg !6810
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !6811

if.then163:                                       ; preds = %if.else160
  store i1 true, i1* %retval, align 1, !dbg !6812
  br label %return, !dbg !6812

if.end164:                                        ; preds = %if.else160
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then159
  %116 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6813, !tbaa !2995
  %st_mode166 = getelementptr inbounds %struct.stat, %struct.stat* %116, i32 0, i32 3, !dbg !6813, !ctir !316
  %117 = load i32, i32* %st_mode166, align 8, !dbg !6813, !tbaa !3178, !ctir !133
  %and167 = and i32 %117, 61440, !dbg !6813
  %cmp168 = icmp eq i32 %and167, 40960, !dbg !6813
  br i1 %cmp168, label %if.else170, label %if.then169, !dbg !6815

if.then169:                                       ; preds = %if.end165
  %118 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6816, !tbaa !2995
  %119 = bitcast %struct.stat* %tmp_dst_sb to i8*, !dbg !6817
  %120 = bitcast %struct.stat* %118 to i8*, !dbg !6817
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 144, i1 false), !dbg !6817, !tbaa.struct !6805
  br label %if.end175, !dbg !6818

if.else170:                                       ; preds = %if.end165
  %121 = load i8*, i8** %dst_name.addr, align 8, !dbg !6819, !tbaa !2995
  %call171 = call i32 @stat(i8* %121, %struct.stat* %tmp_dst_sb) #10, !dbg !6821
  %cmp172 = icmp ne i32 %call171, 0, !dbg !6822
  br i1 %cmp172, label %if.then173, label %if.end174, !dbg !6823

if.then173:                                       ; preds = %if.else170
  store i1 true, i1* %retval, align 1, !dbg !6824
  br label %return, !dbg !6824

if.end174:                                        ; preds = %if.else170
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then169
  %st_ino176 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 1, !dbg !6825, !ctir !317
  %122 = load i64, i64* %st_ino176, align 8, !dbg !6825, !tbaa !3870, !ctir !228
  %st_ino177 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 1, !dbg !6825, !ctir !317
  %123 = load i64, i64* %st_ino177, align 8, !dbg !6825, !tbaa !3870, !ctir !228
  %cmp178 = icmp eq i64 %122, %123, !dbg !6825
  br i1 %cmp178, label %land.lhs.true179, label %if.then183, !dbg !6825

land.lhs.true179:                                 ; preds = %if.end175
  %st_dev180 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 0, !dbg !6825, !ctir !317
  %124 = load i64, i64* %st_dev180, align 8, !dbg !6825, !tbaa !3873, !ctir !231
  %st_dev181 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 0, !dbg !6825, !ctir !317
  %125 = load i64, i64* %st_dev181, align 8, !dbg !6825, !tbaa !3873, !ctir !231
  %cmp182 = icmp eq i64 %124, %125, !dbg !6825
  br i1 %cmp182, label %if.end184, label %if.then183, !dbg !6827

if.then183:                                       ; preds = %land.lhs.true179, %if.end175
  store i1 true, i1* %retval, align 1, !dbg !6828
  br label %return, !dbg !6828

if.end184:                                        ; preds = %land.lhs.true179
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6829, !tbaa !2995
  %hard_link185 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %126, i32 0, i32 8, !dbg !6831, !ctir !253
  %127 = load i8, i8* %hard_link185, align 1, !dbg !6831, !tbaa !3407
  %tobool186 = trunc i8 %127 to i1, !dbg !6831, !ctir !120
  br i1 %tobool186, label %if.then187, label %if.end193, !dbg !6832

if.then187:                                       ; preds = %if.end184
  %128 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6833, !tbaa !2995
  %st_mode188 = getelementptr inbounds %struct.stat, %struct.stat* %128, i32 0, i32 3, !dbg !6833, !ctir !316
  %129 = load i32, i32* %st_mode188, align 8, !dbg !6833, !tbaa !3178, !ctir !133
  %and189 = and i32 %129, 61440, !dbg !6833
  %cmp190 = icmp eq i32 %and189, 40960, !dbg !6833
  %lnot191 = xor i1 %cmp190, true, !dbg !6835
  %130 = load i8*, i8** %return_now.addr, align 8, !dbg !6836, !tbaa !2995
  %frombool192 = zext i1 %lnot191 to i8, !dbg !6837
  store i8 %frombool192, i8* %130, align 1, !dbg !6837, !tbaa !3106, !ctir !120
  store i1 true, i1* %retval, align 1, !dbg !6838
  br label %return, !dbg !6838

if.end193:                                        ; preds = %if.end184
  br label %if.end194, !dbg !6839

if.end194:                                        ; preds = %if.end193, %if.end152
  store i1 false, i1* %retval, align 1, !dbg !6840
  br label %return, !dbg !6840

return:                                           ; preds = %if.end194, %if.then187, %if.then183, %if.then173, %if.then163, %if.then151, %if.then139, %if.then124, %if.then120, %if.then99, %if.then92, %if.end79, %if.end78, %if.then77, %if.then56, %if.then36, %if.then30, %if.end25, %if.then22, %if.then19, %if.then
  %131 = load i1, i1* %retval, align 1, !dbg !6841
  ret i1 %131, !dbg !6841
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hard_link(i8* %src_name, i8* %dst_name, i1 zeroext %replace, i1 zeroext %verbose, i1 zeroext %dereference) #4 !dbg !6842 !ctir !362 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %replace.addr = alloca i8, align 1
  %verbose.addr = alloca i8, align 1
  %dereference.addr = alloca i8, align 1
  %err = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6843, metadata !DIExpression()), !dbg !6844
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6845, metadata !DIExpression()), !dbg !6846
  %frombool = zext i1 %replace to i8
  store i8 %frombool, i8* %replace.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %replace.addr, metadata !6847, metadata !DIExpression()), !dbg !6848
  %frombool1 = zext i1 %verbose to i8
  store i8 %frombool1, i8* %verbose.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %verbose.addr, metadata !6849, metadata !DIExpression()), !dbg !6850
  %frombool2 = zext i1 %dereference to i8
  store i8 %frombool2, i8* %dereference.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %dereference.addr, metadata !6851, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6853, metadata !DIExpression()), !dbg !6854
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !6855, !tbaa !2995
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !6856, !tbaa !2995
  %2 = load i8, i8* %dereference.addr, align 1, !dbg !6857, !tbaa !3106
  %tobool = trunc i8 %2 to i1, !dbg !6857
  %3 = zext i1 %tobool to i64, !dbg !6857
  %cond = select i1 %tobool, i32 1024, i32 0, !dbg !6857
  %4 = load i8, i8* %replace.addr, align 1, !dbg !6858, !tbaa !3106
  %tobool3 = trunc i8 %4 to i1, !dbg !6858
  %call = call i32 @force_linkat(i32 -100, i8* %0, i32 -100, i8* %1, i32 %cond, i1 zeroext %tobool3, i32 -1), !dbg !6859
  store i32 %call, i32* %err, align 4, !dbg !6854, !tbaa !2982
  %5 = load i32, i32* %err, align 4, !dbg !6860, !tbaa !2982
  %cmp = icmp slt i32 0, %5, !dbg !6862
  br i1 %cmp, label %if.then, label %if.end, !dbg !6863

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !6864, !tbaa !2982
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52.148, i64 0, i64 0)) #10, !dbg !6866
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !6867, !tbaa !2995
  %call5 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %7), !dbg !6867
  %8 = load i8*, i8** %src_name.addr, align 8, !dbg !6868, !tbaa !2995
  %call6 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %8), !dbg !6868
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call4, i8* %call5, i8* %call6), !dbg !6869
  store i1 false, i1* %retval, align 1, !dbg !6870
  br label %return, !dbg !6870

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %err, align 4, !dbg !6871, !tbaa !2982
  %cmp7 = icmp slt i32 %9, 0, !dbg !6873
  br i1 %cmp7, label %land.lhs.true, label %if.end13, !dbg !6874

land.lhs.true:                                    ; preds = %if.end
  %10 = load i8, i8* %verbose.addr, align 1, !dbg !6875, !tbaa !3106
  %tobool8 = trunc i8 %10 to i1, !dbg !6875
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !6876

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #10, !dbg !6877
  %11 = load i8*, i8** %dst_name.addr, align 8, !dbg !6878, !tbaa !2995
  %call11 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !6878
  %call12 = call i32 (i8*, ...) @printf(i8* %call10, i8* %call11), !dbg !6879
  br label %if.end13, !dbg !6879

if.end13:                                         ; preds = %if.then9, %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !6880
  br label %return, !dbg !6880

return:                                           ; preds = %if.end13, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !6881
  ret i1 %12, !dbg !6881
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abandon_move(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6882 !ctir !364 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6883, metadata !DIExpression()), !dbg !6884
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6885, metadata !DIExpression()), !dbg !6886
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6887, metadata !DIExpression()), !dbg !6888
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6889, !tbaa !2995
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 9, !dbg !6889, !ctir !253
  %1 = load i8, i8* %move_mode, align 8, !dbg !6889, !tbaa !3414
  %tobool = trunc i8 %1 to i1, !dbg !6889, !ctir !120
  br i1 %tobool, label %if.then, label %if.else, !dbg !6892

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !6892

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53.147, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 1746, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.abandon_move, i64 0, i64 0)) #13, !dbg !6889
  unreachable, !dbg !6889

if.end:                                           ; preds = %if.then
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6893, !tbaa !2995
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 2, !dbg !6894, !ctir !253
  %3 = load i32, i32* %interactive, align 8, !dbg !6894, !tbaa !3152, !ctir !83
  %cmp = icmp eq i32 %3, 2, !dbg !6895
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6896

lor.rhs:                                          ; preds = %if.end
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6897, !tbaa !2995
  %interactive1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 2, !dbg !6898, !ctir !253
  %5 = load i32, i32* %interactive1, align 8, !dbg !6898, !tbaa !3152, !ctir !83
  %cmp2 = icmp eq i32 %5, 3, !dbg !6899
  br i1 %cmp2, label %land.rhs, label %lor.lhs.false, !dbg !6900

lor.lhs.false:                                    ; preds = %lor.rhs
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6901, !tbaa !2995
  %interactive3 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 2, !dbg !6902, !ctir !253
  %7 = load i32, i32* %interactive3, align 8, !dbg !6902, !tbaa !3152, !ctir !83
  %cmp4 = icmp eq i32 %7, 4, !dbg !6903
  br i1 %cmp4, label %land.lhs.true, label %land.end, !dbg !6904

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6905, !tbaa !2995
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 32, !dbg !6906, !ctir !253
  %9 = load i8, i8* %stdin_tty, align 1, !dbg !6906, !tbaa !3498
  %tobool5 = trunc i8 %9 to i1, !dbg !6906, !ctir !120
  br i1 %tobool5, label %land.lhs.true6, label %land.end, !dbg !6907

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %dst_name.addr, align 8, !dbg !6908, !tbaa !2995
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6909, !tbaa !2995
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !6910, !ctir !316
  %12 = load i32, i32* %st_mode, align 8, !dbg !6910, !tbaa !3178, !ctir !133
  %call = call zeroext i1 @writable_destination(i8* %10, i32 %12), !dbg !6911
  br i1 %call, label %land.end, label %land.rhs, !dbg !6912

land.rhs:                                         ; preds = %land.lhs.true6, %lor.rhs
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6913, !tbaa !2995
  %14 = load i8*, i8** %dst_name.addr, align 8, !dbg !6914, !tbaa !2995
  %15 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6915, !tbaa !2995
  %call7 = call zeroext i1 @overwrite_ok(%struct.cp_options* %13, i8* %14, %struct.stat* %15), !dbg !6916
  %lnot = xor i1 %call7, true, !dbg !6917
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %land.lhs.true, %lor.lhs.false
  %16 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !6918
  br label %lor.end, !dbg !6896

lor.end:                                          ; preds = %land.end, %if.end
  %17 = phi i1 [ true, %if.end ], [ %16, %land.end ]
  ret i1 %17, !dbg !6919
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @overwrite_ok(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6920 !ctir !364 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %perms = alloca [12 x i8], align 1, !ctir !368
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6921, metadata !DIExpression()), !dbg !6922
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6923, metadata !DIExpression()), !dbg !6924
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6925, metadata !DIExpression()), !dbg !6926
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !6927, !tbaa !2995
  %1 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6929, !tbaa !2995
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %1, i32 0, i32 3, !dbg !6930, !ctir !316
  %2 = load i32, i32* %st_mode, align 8, !dbg !6930, !tbaa !3178, !ctir !133
  %call = call zeroext i1 @writable_destination(i8* %0, i32 %2), !dbg !6931
  br i1 %call, label %if.else, label %if.then, !dbg !6932

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [12 x i8]* %perms, metadata !6933, metadata !DIExpression()), !dbg !6935
  %3 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6936, !tbaa !2995
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !6937, !ctir !316
  %4 = load i32, i32* %st_mode1, align 8, !dbg !6937, !tbaa !3178, !ctir !133
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 0, !dbg !6938
  call void @strmode(i32 %4, i8* %arraydecay), !dbg !6939
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 10, !dbg !6940, !ctir !368
  store i8 0, i8* %arrayidx, align 1, !dbg !6941, !tbaa !3657
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6942, !tbaa !2995
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6943, !tbaa !2995
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 9, !dbg !6944, !ctir !253
  %7 = load i8, i8* %move_mode, align 8, !dbg !6944, !tbaa !3414
  %tobool = trunc i8 %7 to i1, !dbg !6944, !ctir !120
  br i1 %tobool, label %cond.true, label %lor.lhs.false, !dbg !6945

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6946, !tbaa !2995
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 6, !dbg !6947, !ctir !253
  %9 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !6947, !tbaa !3399
  %tobool2 = trunc i8 %9 to i1, !dbg !6947, !ctir !120
  br i1 %tobool2, label %cond.true, label %lor.lhs.false3, !dbg !6948

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6949, !tbaa !2995
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 7, !dbg !6950, !ctir !253
  %11 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6950, !tbaa !3403
  %tobool4 = trunc i8 %11 to i1, !dbg !6950, !ctir !120
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !6951

cond.true:                                        ; preds = %lor.lhs.false3, %lor.lhs.false, %if.then
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.54.144, i64 0, i64 0)) #10, !dbg !6952
  br label %cond.end, !dbg !6951

cond.false:                                       ; preds = %lor.lhs.false3
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55.145, i64 0, i64 0)) #10, !dbg !6953
  br label %cond.end, !dbg !6951

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %call6, %cond.false ], !dbg !6951
  %12 = load i8*, i8** @program_name, align 8, !dbg !6954, !tbaa !2995
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !6955, !tbaa !2995
  %call7 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6955
  %14 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6956, !tbaa !2995
  %st_mode8 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !6957, !ctir !316
  %15 = load i32, i32* %st_mode8, align 8, !dbg !6957, !tbaa !3178, !ctir !133
  %and = and i32 %15, 4095, !dbg !6958
  %conv = zext i32 %and to i64, !dbg !6959
  %arrayidx9 = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 1, !dbg !6960, !ctir !368
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %cond, i8* %12, i8* %call7, i64 %conv, i8* %arrayidx9), !dbg !6961
  br label %if.end, !dbg !6962

if.else:                                          ; preds = %entry
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6963, !tbaa !2995
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56.146, i64 0, i64 0)) #10, !dbg !6965
  %17 = load i8*, i8** @program_name, align 8, !dbg !6966, !tbaa !2995
  %18 = load i8*, i8** %dst_name.addr, align 8, !dbg !6967, !tbaa !2995
  %call12 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !6967
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call11, i8* %17, i8* %call12), !dbg !6968
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %call14 = call zeroext i1 @yesno(), !dbg !6969
  ret i1 %call14, !dbg !6970
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot.106(i8* %file_name) #4 !dbg !6971 !ctir !200 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !10
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !6972, metadata !DIExpression()), !dbg !6973
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !6974, !tbaa !2995
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !6974, !ctir !115
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6974, !tbaa !3657
  %conv = sext i8 %1 to i32, !dbg !6974
  %cmp = icmp eq i32 %conv, 46, !dbg !6976
  br i1 %cmp, label %if.then, label %if.else, !dbg !6977

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !6978, metadata !DIExpression()), !dbg !6980
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !6981, !tbaa !2995
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !6982, !tbaa !2995
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !6982, !ctir !115
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !6982, !tbaa !3657
  %conv3 = sext i8 %4 to i32, !dbg !6982
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !6983
  %conv5 = zext i1 %cmp4 to i32, !dbg !6983
  %add = add nsw i32 %conv5, 1, !dbg !6984
  %idxprom = sext i32 %add to i64, !dbg !6981
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !6981, !ctir !115
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !6981, !tbaa !3657
  store i8 %5, i8* %sep, align 1, !dbg !6980, !tbaa !3657
  %6 = load i8, i8* %sep, align 1, !dbg !6985, !tbaa !3657
  %tobool = icmp ne i8 %6, 0, !dbg !6985
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6986

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !6987, !tbaa !3657
  %conv7 = sext i8 %7 to i32, !dbg !6987
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !6987
  br label %lor.end, !dbg !6986

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !6988
  br label %return, !dbg !6988

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !6989
  br label %return, !dbg !6989

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !6990
  ret i1 %9, !dbg !6990
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @source_is_dst_backup(i8* %srcbase, %struct.stat* %src_st, i8* %dst_name) #4 !dbg !6991 !ctir !405 {
entry:
  %retval = alloca i1, align 1
  %srcbase.addr = alloca i8*, align 8
  %src_st.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %srcbaselen = alloca i64, align 8, !ctir !55
  %dstbase = alloca i8*, align 8, !ctir !115
  %dstbaselen = alloca i64, align 8, !ctir !55
  %suffixlen = alloca i64, align 8, !ctir !55
  %dstlen = alloca i64, align 8, !ctir !55
  %dst_back = alloca i8*, align 8, !ctir !9
  %dst_back_sb = alloca %struct.stat, align 8, !ctir !317
  %dst_back_status = alloca i32, align 4, !ctir !7
  store i8* %srcbase, i8** %srcbase.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %srcbase.addr, metadata !6992, metadata !DIExpression()), !dbg !6993
  store %struct.stat* %src_st, %struct.stat** %src_st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %src_st.addr, metadata !6994, metadata !DIExpression()), !dbg !6995
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6996, metadata !DIExpression()), !dbg !6997
  call void @llvm.dbg.declare(metadata i64* %srcbaselen, metadata !6998, metadata !DIExpression()), !dbg !6999
  %0 = load i8*, i8** %srcbase.addr, align 8, !dbg !7000, !tbaa !2995
  %call = call i64 @strlen(i8* %0) #14, !dbg !7001
  store i64 %call, i64* %srcbaselen, align 8, !dbg !6999, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8** %dstbase, metadata !7002, metadata !DIExpression()), !dbg !7003
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !7004, !tbaa !2995
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !7005
  store i8* %call1, i8** %dstbase, align 8, !dbg !7003, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %dstbaselen, metadata !7006, metadata !DIExpression()), !dbg !7007
  %2 = load i8*, i8** %dstbase, align 8, !dbg !7008, !tbaa !2995
  %call2 = call i64 @strlen(i8* %2) #14, !dbg !7009
  store i64 %call2, i64* %dstbaselen, align 8, !dbg !7007, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %suffixlen, metadata !7010, metadata !DIExpression()), !dbg !7011
  %3 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !7012, !tbaa !2995
  %call3 = call i64 @strlen(i8* %3) #14, !dbg !7013
  store i64 %call3, i64* %suffixlen, align 8, !dbg !7011, !tbaa !3848
  %4 = load i64, i64* %srcbaselen, align 8, !dbg !7014, !tbaa !3848
  %5 = load i64, i64* %dstbaselen, align 8, !dbg !7016, !tbaa !3848
  %6 = load i64, i64* %suffixlen, align 8, !dbg !7017, !tbaa !3848
  %add = add i64 %5, %6, !dbg !7018
  %cmp = icmp eq i64 %4, %add, !dbg !7019
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !7020

land.lhs.true:                                    ; preds = %entry
  %7 = load i8*, i8** %srcbase.addr, align 8, !dbg !7021, !tbaa !2995
  %8 = load i8*, i8** %dstbase, align 8, !dbg !7022, !tbaa !2995
  %9 = load i64, i64* %dstbaselen, align 8, !dbg !7023, !tbaa !3848
  %call4 = call i32 @memcmp(i8* %7, i8* %8, i64 %9) #14, !dbg !7024
  %cmp5 = icmp eq i32 %call4, 0, !dbg !7025
  br i1 %cmp5, label %land.lhs.true6, label %if.then, !dbg !7026

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %srcbase.addr, align 8, !dbg !7027, !tbaa !2995
  %11 = load i64, i64* %dstbaselen, align 8, !dbg !7027, !tbaa !3848
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !7027
  %12 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !7027, !tbaa !2995
  %call7 = call i32 @strcmp(i8* %add.ptr, i8* %12) #14, !dbg !7027
  %cmp8 = icmp eq i32 %call7, 0, !dbg !7027
  br i1 %cmp8, label %if.end, label %if.then, !dbg !7028

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !7029
  br label %return, !dbg !7029

if.end:                                           ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata i64* %dstlen, metadata !7030, metadata !DIExpression()), !dbg !7031
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !7032, !tbaa !2995
  %call9 = call i64 @strlen(i8* %13) #14, !dbg !7033
  store i64 %call9, i64* %dstlen, align 8, !dbg !7031, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8** %dst_back, metadata !7034, metadata !DIExpression()), !dbg !7035
  %14 = load i64, i64* %dstlen, align 8, !dbg !7036, !tbaa !3848
  %15 = load i64, i64* %suffixlen, align 8, !dbg !7037, !tbaa !3848
  %add10 = add i64 %14, %15, !dbg !7038
  %add11 = add i64 %add10, 1, !dbg !7039
  %call12 = call noalias i8* @xmalloc(i64 %add11), !dbg !7040
  store i8* %call12, i8** %dst_back, align 8, !dbg !7035, !tbaa !2995
  %16 = load i8*, i8** %dst_back, align 8, !dbg !7041, !tbaa !2995
  %17 = load i8*, i8** %dst_name.addr, align 8, !dbg !7042, !tbaa !2995
  %18 = load i64, i64* %dstlen, align 8, !dbg !7043, !tbaa !3848
  %call13 = call i8* @mempcpy(i8* %16, i8* %17, i64 %18) #10, !dbg !7044
  %19 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !7045, !tbaa !2995
  %call14 = call i8* @strcpy(i8* %call13, i8* %19) #10, !dbg !7046
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_back_sb, metadata !7047, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.declare(metadata i32* %dst_back_status, metadata !7049, metadata !DIExpression()), !dbg !7050
  %20 = load i8*, i8** %dst_back, align 8, !dbg !7051, !tbaa !2995
  %call15 = call i32 @stat(i8* %20, %struct.stat* %dst_back_sb) #10, !dbg !7052
  store i32 %call15, i32* %dst_back_status, align 4, !dbg !7050, !tbaa !2982
  %21 = load i8*, i8** %dst_back, align 8, !dbg !7053, !tbaa !2995
  call void @free(i8* %21) #10, !dbg !7054
  %22 = load i32, i32* %dst_back_status, align 4, !dbg !7055, !tbaa !2982
  %cmp16 = icmp eq i32 %22, 0, !dbg !7056
  br i1 %cmp16, label %land.rhs, label %land.end22, !dbg !7057

land.rhs:                                         ; preds = %if.end
  %23 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !7058, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !7058, !ctir !316
  %24 = load i64, i64* %st_ino, align 8, !dbg !7058, !tbaa !3870, !ctir !228
  %st_ino17 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 1, !dbg !7058, !ctir !317
  %25 = load i64, i64* %st_ino17, align 8, !dbg !7058, !tbaa !3870, !ctir !228
  %cmp18 = icmp eq i64 %24, %25, !dbg !7058
  br i1 %cmp18, label %land.rhs19, label %land.end, !dbg !7058

land.rhs19:                                       ; preds = %land.rhs
  %26 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !7058, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 0, !dbg !7058, !ctir !316
  %27 = load i64, i64* %st_dev, align 8, !dbg !7058, !tbaa !3873, !ctir !231
  %st_dev20 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 0, !dbg !7058, !ctir !317
  %28 = load i64, i64* %st_dev20, align 8, !dbg !7058, !tbaa !3873, !ctir !231
  %cmp21 = icmp eq i64 %27, %28, !dbg !7058
  br label %land.end

land.end:                                         ; preds = %land.rhs19, %land.rhs
  %29 = phi i1 [ false, %land.rhs ], [ %cmp21, %land.rhs19 ], !dbg !7059
  br label %land.end22

land.end22:                                       ; preds = %land.end, %if.end
  %30 = phi i1 [ false, %if.end ], [ %29, %land.end ], !dbg !7059
  store i1 %30, i1* %retval, align 1, !dbg !7060
  br label %return, !dbg !7060

return:                                           ; preds = %land.end22, %if.then
  %31 = load i1, i1* %retval, align 1, !dbg !7061
  ret i1 %31, !dbg !7061
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_verbose(i8* %src, i8* %dst, i8* %backup_dst_name) #4 !dbg !7062 !ctir !407 {
entry:
  %src.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  %backup_dst_name.addr = alloca i8*, align 8
  store i8* %src, i8** %src.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !7063, metadata !DIExpression()), !dbg !7064
  store i8* %dst, i8** %dst.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !7065, metadata !DIExpression()), !dbg !7066
  store i8* %backup_dst_name, i8** %backup_dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %backup_dst_name.addr, metadata !7067, metadata !DIExpression()), !dbg !7068
  %0 = load i8*, i8** %src.addr, align 8, !dbg !7069, !tbaa !2995
  %call = call i8* @quotearg_n_style(i32 0, i32 4, i8* %0), !dbg !7069
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !7070, !tbaa !2995
  %call1 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %1), !dbg !7070
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57.142, i64 0, i64 0), i8* %call, i8* %call1), !dbg !7071
  %2 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !7072, !tbaa !2995
  %tobool = icmp ne i8* %2, null, !dbg !7072
  br i1 %tobool, label %if.then, label %if.end, !dbg !7074

if.then:                                          ; preds = %entry
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58.143, i64 0, i64 0)) #10, !dbg !7075
  %3 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !7076, !tbaa !2995
  %call4 = call i8* @quotearg_style(i32 4, i8* %3), !dbg !7076
  %call5 = call i32 (i8*, ...) @printf(i8* %call3, i8* %call4), !dbg !7077
  br label %if.end, !dbg !7077

if.end:                                           ; preds = %if.then, %entry
  %call6 = call i32 @putchar_unlocked(i32 10), !dbg !7078
  ret void, !dbg !7079
}

; Function Attrs: nounwind
declare dso_local i32 @rename(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @rmdir(i8*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_ancestor(%struct.stat* %sb, %struct.dir_list* %ancestors) #9 !dbg !7080 !ctir !409 {
entry:
  %retval = alloca i1, align 1
  %sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !7081, metadata !DIExpression()), !dbg !7082
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !7083, metadata !DIExpression()), !dbg !7084
  br label %while.cond, !dbg !7085

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7086, !tbaa !2995
  %cmp = icmp ne %struct.dir_list* %0, null, !dbg !7087
  br i1 %cmp, label %while.body, label %while.end, !dbg !7085

while.body:                                       ; preds = %while.cond
  %1 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7088, !tbaa !2995
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %1, i32 0, i32 1, !dbg !7091, !ctir !412
  %2 = load i64, i64* %ino, align 8, !dbg !7091, !tbaa !5833, !ctir !227
  %3 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7092, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 1, !dbg !7093, !ctir !316
  %4 = load i64, i64* %st_ino, align 8, !dbg !7093, !tbaa !3870, !ctir !228
  %cmp1 = icmp eq i64 %2, %4, !dbg !7094
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !7095

land.lhs.true:                                    ; preds = %while.body
  %5 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7096, !tbaa !2995
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %5, i32 0, i32 2, !dbg !7097, !ctir !412
  %6 = load i64, i64* %dev, align 8, !dbg !7097, !tbaa !5838, !ctir !230
  %7 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7098, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !7099, !ctir !316
  %8 = load i64, i64* %st_dev, align 8, !dbg !7099, !tbaa !3873, !ctir !231
  %cmp2 = icmp eq i64 %6, %8, !dbg !7100
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7101

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !7102
  br label %return, !dbg !7102

if.end:                                           ; preds = %land.lhs.true, %while.body
  %9 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7103, !tbaa !2995
  %parent = getelementptr inbounds %struct.dir_list, %struct.dir_list* %9, i32 0, i32 0, !dbg !7104, !ctir !412
  %10 = load %struct.dir_list*, %struct.dir_list** %parent, align 8, !dbg !7104, !tbaa !5827, !ctir !350
  store %struct.dir_list* %10, %struct.dir_list** %ancestors.addr, align 8, !dbg !7105, !tbaa !2995
  br label %while.cond, !dbg !7085, !llvm.loop !7106

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !7108
  br label %return, !dbg !7108

return:                                           ; preds = %while.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !7109
  ret i1 %11, !dbg !7109
}

; Function Attrs: nounwind
declare dso_local i32 @mkdir(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_dir(i8* %src_name_in, i8* %dst_name_in, i1 zeroext %new_dst, %struct.stat* %src_sb, %struct.dir_list* %ancestors, %struct.cp_options* %x, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self) #4 !dbg !7110 !ctir !413 {
entry:
  %retval = alloca i1, align 1
  %src_name_in.addr = alloca i8*, align 8
  %dst_name_in.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %src_sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %name_space = alloca i8*, align 8, !ctir !9
  %namep = alloca i8*, align 8, !ctir !9
  %non_command_line_options = alloca %struct.cp_options, align 8, !ctir !254
  %ok = alloca i8, align 1, !ctir !120
  %new_first_dir_created = alloca i8, align 1, !ctir !120
  %local_copy_into_self = alloca i8, align 1, !ctir !120
  %src_name = alloca i8*, align 8, !ctir !9
  %dst_name = alloca i8*, align 8, !ctir !9
  %first_dir_created = alloca i8, align 1, !ctir !120
  store i8* %src_name_in, i8** %src_name_in.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %src_name_in.addr, metadata !7111, metadata !DIExpression()), !dbg !7112
  store i8* %dst_name_in, i8** %dst_name_in.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name_in.addr, metadata !7113, metadata !DIExpression()), !dbg !7114
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !7115, metadata !DIExpression()), !dbg !7116
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7117, metadata !DIExpression()), !dbg !7118
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !7119, metadata !DIExpression()), !dbg !7120
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7121, metadata !DIExpression()), !dbg !7122
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !7123, metadata !DIExpression()), !dbg !7124
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !7125, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !7127, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.declare(metadata i8** %namep, metadata !7129, metadata !DIExpression()), !dbg !7130
  call void @llvm.dbg.declare(metadata %struct.cp_options* %non_command_line_options, metadata !7131, metadata !DIExpression()), !dbg !7132
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7133, !tbaa !2995
  %1 = bitcast %struct.cp_options* %non_command_line_options to i8*, !dbg !7134
  %2 = bitcast %struct.cp_options* %0 to i8*, !dbg !7134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 80, i1 false), !dbg !7134, !tbaa.struct !7135
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !7136, metadata !DIExpression()), !dbg !7137
  store i8 1, i8* %ok, align 1, !dbg !7137, !tbaa !3106
  %3 = load i8*, i8** %src_name_in.addr, align 8, !dbg !7138, !tbaa !2995
  %call = call i8* @savedir(i8* %3, i32 2), !dbg !7139
  store i8* %call, i8** %name_space, align 8, !dbg !7140, !tbaa !2995
  %4 = load i8*, i8** %name_space, align 8, !dbg !7141, !tbaa !2995
  %cmp = icmp eq i8* %4, null, !dbg !7143
  br i1 %cmp, label %if.then, label %if.end, !dbg !7144

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7145
  %5 = load i32, i32* %call1, align 4, !dbg !7145, !tbaa !2982, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59.141, i64 0, i64 0)) #10, !dbg !7147
  %6 = load i8*, i8** %src_name_in.addr, align 8, !dbg !7148, !tbaa !2995
  %call3 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !7148
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call2, i8* %call3), !dbg !7149
  store i1 false, i1* %retval, align 1, !dbg !7150
  br label %return, !dbg !7150

if.end:                                           ; preds = %entry
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7151, !tbaa !2995
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 1, !dbg !7153, !ctir !253
  %8 = load i32, i32* %dereference, align 4, !dbg !7153, !tbaa !3395, !ctir !76
  %cmp4 = icmp eq i32 %8, 3, !dbg !7154
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !7155

if.then5:                                         ; preds = %if.end
  %dereference6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %non_command_line_options, i32 0, i32 1, !dbg !7156, !ctir !254
  store i32 2, i32* %dereference6, align 4, !dbg !7157, !tbaa !3395, !ctir !76
  br label %if.end7, !dbg !7158

if.end7:                                          ; preds = %if.then5, %if.end
  call void @llvm.dbg.declare(metadata i8* %new_first_dir_created, metadata !7159, metadata !DIExpression()), !dbg !7160
  store i8 0, i8* %new_first_dir_created, align 1, !dbg !7160, !tbaa !3106
  %9 = load i8*, i8** %name_space, align 8, !dbg !7161, !tbaa !2995
  store i8* %9, i8** %namep, align 8, !dbg !7162, !tbaa !2995
  br label %while.cond, !dbg !7163

while.cond:                                       ; preds = %if.end28, %if.end7
  %10 = load i8*, i8** %namep, align 8, !dbg !7164, !tbaa !2995
  %11 = load i8, i8* %10, align 1, !dbg !7165, !tbaa !3657, !ctir !10
  %conv = sext i8 %11 to i32, !dbg !7165
  %cmp8 = icmp ne i32 %conv, 0, !dbg !7166
  br i1 %cmp8, label %while.body, label %while.end, !dbg !7163

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %local_copy_into_self, metadata !7167, metadata !DIExpression()), !dbg !7169
  call void @llvm.dbg.declare(metadata i8** %src_name, metadata !7170, metadata !DIExpression()), !dbg !7171
  %12 = load i8*, i8** %src_name_in.addr, align 8, !dbg !7172, !tbaa !2995
  %13 = load i8*, i8** %namep, align 8, !dbg !7173, !tbaa !2995
  %call10 = call i8* @file_name_concat(i8* %12, i8* %13, i8** null), !dbg !7174
  store i8* %call10, i8** %src_name, align 8, !dbg !7171, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name, metadata !7175, metadata !DIExpression()), !dbg !7176
  %14 = load i8*, i8** %dst_name_in.addr, align 8, !dbg !7177, !tbaa !2995
  %15 = load i8*, i8** %namep, align 8, !dbg !7178, !tbaa !2995
  %call11 = call i8* @file_name_concat(i8* %14, i8* %15, i8** null), !dbg !7179
  store i8* %call11, i8** %dst_name, align 8, !dbg !7176, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8* %first_dir_created, metadata !7180, metadata !DIExpression()), !dbg !7181
  %16 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !7182, !tbaa !2995
  %17 = load i8, i8* %16, align 1, !dbg !7183, !tbaa !3106
  %tobool = trunc i8 %17 to i1, !dbg !7183, !ctir !120
  %frombool12 = zext i1 %tobool to i8, !dbg !7181
  store i8 %frombool12, i8* %first_dir_created, align 1, !dbg !7181, !tbaa !3106
  %18 = load i8*, i8** %src_name, align 8, !dbg !7184, !tbaa !2995
  %19 = load i8*, i8** %dst_name, align 8, !dbg !7185, !tbaa !2995
  %20 = load i8, i8* %new_dst.addr, align 1, !dbg !7186, !tbaa !3106
  %tobool13 = trunc i8 %20 to i1, !dbg !7186
  %21 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7187, !tbaa !2995
  %22 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7188, !tbaa !2995
  %call14 = call zeroext i1 @copy_internal(i8* %18, i8* %19, i1 zeroext %tobool13, %struct.stat* %21, %struct.dir_list* %22, %struct.cp_options* %non_command_line_options, i1 zeroext false, i8* %first_dir_created, i8* %local_copy_into_self, i8* null), !dbg !7189
  %conv15 = zext i1 %call14 to i32, !dbg !7189
  %23 = load i8, i8* %ok, align 1, !dbg !7190, !tbaa !3106
  %tobool16 = trunc i8 %23 to i1, !dbg !7190
  %conv17 = zext i1 %tobool16 to i32, !dbg !7190
  %and = and i32 %conv17, %conv15, !dbg !7190
  %tobool18 = icmp ne i32 %and, 0, !dbg !7190
  %frombool19 = zext i1 %tobool18 to i8, !dbg !7190
  store i8 %frombool19, i8* %ok, align 1, !dbg !7190, !tbaa !3106
  %24 = load i8, i8* %local_copy_into_self, align 1, !dbg !7191, !tbaa !3106
  %tobool20 = trunc i8 %24 to i1, !dbg !7191
  %conv21 = zext i1 %tobool20 to i32, !dbg !7191
  %25 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !7192, !tbaa !2995
  %26 = load i8, i8* %25, align 1, !dbg !7193, !tbaa !3106
  %tobool22 = trunc i8 %26 to i1, !dbg !7193, !ctir !120
  %conv23 = zext i1 %tobool22 to i32, !dbg !7193
  %or = or i32 %conv23, %conv21, !dbg !7193
  %tobool24 = icmp ne i32 %or, 0, !dbg !7193
  %frombool25 = zext i1 %tobool24 to i8, !dbg !7193
  store i8 %frombool25, i8* %25, align 1, !dbg !7193, !tbaa !3106, !ctir !120
  %27 = load i8*, i8** %dst_name, align 8, !dbg !7194, !tbaa !2995
  call void @free(i8* %27) #10, !dbg !7195
  %28 = load i8*, i8** %src_name, align 8, !dbg !7196, !tbaa !2995
  call void @free(i8* %28) #10, !dbg !7197
  %29 = load i8, i8* %local_copy_into_self, align 1, !dbg !7198, !tbaa !3106
  %tobool26 = trunc i8 %29 to i1, !dbg !7198
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !7200

if.then27:                                        ; preds = %while.body
  br label %while.end, !dbg !7201

if.end28:                                         ; preds = %while.body
  %30 = load i8, i8* %first_dir_created, align 1, !dbg !7202, !tbaa !3106
  %tobool29 = trunc i8 %30 to i1, !dbg !7202
  %conv30 = zext i1 %tobool29 to i32, !dbg !7202
  %31 = load i8, i8* %new_first_dir_created, align 1, !dbg !7203, !tbaa !3106
  %tobool31 = trunc i8 %31 to i1, !dbg !7203
  %conv32 = zext i1 %tobool31 to i32, !dbg !7203
  %or33 = or i32 %conv32, %conv30, !dbg !7203
  %tobool34 = icmp ne i32 %or33, 0, !dbg !7203
  %frombool35 = zext i1 %tobool34 to i8, !dbg !7203
  store i8 %frombool35, i8* %new_first_dir_created, align 1, !dbg !7203, !tbaa !3106
  %32 = load i8*, i8** %namep, align 8, !dbg !7204, !tbaa !2995
  %call36 = call i64 @strlen(i8* %32) #14, !dbg !7205
  %add = add i64 %call36, 1, !dbg !7206
  %33 = load i8*, i8** %namep, align 8, !dbg !7207, !tbaa !2995
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %add, !dbg !7207
  store i8* %add.ptr, i8** %namep, align 8, !dbg !7207, !tbaa !2995
  br label %while.cond, !dbg !7163, !llvm.loop !7208

while.end:                                        ; preds = %if.then27, %while.cond
  %34 = load i8*, i8** %name_space, align 8, !dbg !7210, !tbaa !2995
  call void @free(i8* %34) #10, !dbg !7211
  %35 = load i8, i8* %new_first_dir_created, align 1, !dbg !7212, !tbaa !3106
  %tobool37 = trunc i8 %35 to i1, !dbg !7212
  %36 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !7213, !tbaa !2995
  %frombool38 = zext i1 %tobool37 to i8, !dbg !7214
  store i8 %frombool38, i8* %36, align 1, !dbg !7214, !tbaa !3106, !ctir !120
  %37 = load i8, i8* %ok, align 1, !dbg !7215, !tbaa !3106
  %tobool39 = trunc i8 %37 to i1, !dbg !7215
  store i1 %tobool39, i1* %retval, align 1, !dbg !7216
  br label %return, !dbg !7216

return:                                           ; preds = %while.end, %if.then
  %38 = load i1, i1* %retval, align 1, !dbg !7217
  ret i1 %38, !dbg !7217
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_reg(i8* %src_name, i8* %dst_name, %struct.cp_options* %x, i32 %dst_mode, i32 %omitted_permissions, i8* %new_dst, %struct.stat* %src_sb) #4 !dbg !7218 !ctir !415 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_mode.addr = alloca i32, align 4
  %omitted_permissions.addr = alloca i32, align 4
  %new_dst.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %buf = alloca i8*, align 8, !ctir !9
  %buf_alloc = alloca i8*, align 8, !ctir !9
  %name_alloc = alloca i8*, align 8, !ctir !9
  %dest_desc = alloca i32, align 4, !ctir !7
  %dest_errno = alloca i32, align 4, !ctir !7
  %source_desc = alloca i32, align 4, !ctir !7
  %src_mode = alloca i32, align 4, !ctir !160
  %sb = alloca %struct.stat, align 8, !ctir !317
  %src_open_sb = alloca %struct.stat, align 8, !ctir !317
  %return_val = alloca i8, align 1, !ctir !120
  %data_copy_required = alloca i8, align 1, !ctir !120
  %open_flags = alloca i32, align 4, !ctir !7
  %open_flags72 = alloca i32, align 4, !ctir !7
  %dangling_link_sb = alloca %struct.stat, align 8, !ctir !317
  %clone_ok = alloca i8, align 1, !ctir !120
  %buf_alignment = alloca i64, align 8, !ctir !55
  %buf_size = alloca i64, align 8, !ctir !55
  %hole_size = alloca i64, align 8, !ctir !55
  %make_holes = alloca i8, align 1, !ctir !120
  %sparse_src = alloca i8, align 1, !ctir !120
  %blcm_max = alloca i64, align 8, !ctir !55
  %blcm = alloca i64, align 8, !ctir !55
  %normal_copy_required = alloca i8, align 1, !ctir !120
  %n_read = alloca i64, align 8, !ctir !248
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !120
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !357
  %tmp = alloca %struct.timespec, align 8
  %tmp271 = alloca %struct.timespec, align 8
  %access_changed = alloca i8, align 1, !ctir !120
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !7219, metadata !DIExpression()), !dbg !7220
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7221, metadata !DIExpression()), !dbg !7222
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7223, metadata !DIExpression()), !dbg !7224
  store i32 %dst_mode, i32* %dst_mode.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dst_mode.addr, metadata !7225, metadata !DIExpression()), !dbg !7226
  store i32 %omitted_permissions, i32* %omitted_permissions.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions.addr, metadata !7227, metadata !DIExpression()), !dbg !7228
  store i8* %new_dst, i8** %new_dst.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %new_dst.addr, metadata !7229, metadata !DIExpression()), !dbg !7230
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7231, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !7233, metadata !DIExpression()), !dbg !7234
  call void @llvm.dbg.declare(metadata i8** %buf_alloc, metadata !7235, metadata !DIExpression()), !dbg !7236
  store i8* null, i8** %buf_alloc, align 8, !dbg !7236, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name_alloc, metadata !7237, metadata !DIExpression()), !dbg !7238
  store i8* null, i8** %name_alloc, align 8, !dbg !7238, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32* %dest_desc, metadata !7239, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.declare(metadata i32* %dest_errno, metadata !7241, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.declare(metadata i32* %source_desc, metadata !7243, metadata !DIExpression()), !dbg !7244
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !7245, metadata !DIExpression()), !dbg !7246
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7247, !tbaa !2995
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !7248, !ctir !316
  %1 = load i32, i32* %st_mode, align 8, !dbg !7248, !tbaa !3178, !ctir !133
  store i32 %1, i32* %src_mode, align 4, !dbg !7246, !tbaa !2982
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !7249, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.declare(metadata %struct.stat* %src_open_sb, metadata !7251, metadata !DIExpression()), !dbg !7252
  call void @llvm.dbg.declare(metadata i8* %return_val, metadata !7253, metadata !DIExpression()), !dbg !7254
  store i8 1, i8* %return_val, align 1, !dbg !7254, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %data_copy_required, metadata !7255, metadata !DIExpression()), !dbg !7256
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7257, !tbaa !2995
  %data_copy_required1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !7258, !ctir !253
  %3 = load i8, i8* %data_copy_required1, align 1, !dbg !7258, !tbaa !3457
  %tobool = trunc i8 %3 to i1, !dbg !7258, !ctir !120
  %frombool = zext i1 %tobool to i8, !dbg !7256
  store i8 %frombool, i8* %data_copy_required, align 1, !dbg !7256, !tbaa !3106
  %4 = load i8*, i8** %src_name.addr, align 8, !dbg !7259, !tbaa !2995
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7260, !tbaa !2995
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 1, !dbg !7261, !ctir !253
  %6 = load i32, i32* %dereference, align 4, !dbg !7261, !tbaa !3395, !ctir !76
  %cmp = icmp eq i32 %6, 2, !dbg !7262
  %7 = zext i1 %cmp to i64, !dbg !7260
  %cond = select i1 %cmp, i32 131072, i32 0, !dbg !7260
  %or = or i32 0, %cond, !dbg !7263
  %call = call i32 (i8*, i32, ...) @open_safer(i8* %4, i32 %or), !dbg !7264
  store i32 %call, i32* %source_desc, align 4, !dbg !7265, !tbaa !2982
  %8 = load i32, i32* %source_desc, align 4, !dbg !7266, !tbaa !2982
  %cmp2 = icmp slt i32 %8, 0, !dbg !7268
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7269

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #15, !dbg !7270
  %9 = load i32, i32* %call3, align 4, !dbg !7270, !tbaa !2982, !ctir !7
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60.138, i64 0, i64 0)) #10, !dbg !7272
  %10 = load i8*, i8** %src_name.addr, align 8, !dbg !7273, !tbaa !2995
  %call5 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !7273
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call4, i8* %call5), !dbg !7274
  store i1 false, i1* %retval, align 1, !dbg !7275
  br label %return, !dbg !7275

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %source_desc, align 4, !dbg !7276, !tbaa !2982
  %call6 = call i32 @fstat(i32 %11, %struct.stat* %src_open_sb) #10, !dbg !7278
  %cmp7 = icmp ne i32 %call6, 0, !dbg !7279
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !7280

if.then8:                                         ; preds = %if.end
  %call9 = call i32* @__errno_location() #15, !dbg !7281
  %12 = load i32, i32* %call9, align 4, !dbg !7281, !tbaa !2982, !ctir !7
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.139, i64 0, i64 0)) #10, !dbg !7283
  %13 = load i8*, i8** %src_name.addr, align 8, !dbg !7284, !tbaa !2995
  %call11 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !7284
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call10, i8* %call11), !dbg !7285
  store i8 0, i8* %return_val, align 1, !dbg !7286, !tbaa !3106
  br label %close_src_desc, !dbg !7287

if.end12:                                         ; preds = %if.end
  %14 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7288, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 1, !dbg !7288, !ctir !316
  %15 = load i64, i64* %st_ino, align 8, !dbg !7288, !tbaa !3870, !ctir !228
  %st_ino13 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 1, !dbg !7288, !ctir !317
  %16 = load i64, i64* %st_ino13, align 8, !dbg !7288, !tbaa !3870, !ctir !228
  %cmp14 = icmp eq i64 %15, %16, !dbg !7288
  br i1 %cmp14, label %land.lhs.true, label %if.then17, !dbg !7288

land.lhs.true:                                    ; preds = %if.end12
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7288, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !7288, !ctir !316
  %18 = load i64, i64* %st_dev, align 8, !dbg !7288, !tbaa !3873, !ctir !231
  %st_dev15 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 0, !dbg !7288, !ctir !317
  %19 = load i64, i64* %st_dev15, align 8, !dbg !7288, !tbaa !3873, !ctir !231
  %cmp16 = icmp eq i64 %18, %19, !dbg !7288
  br i1 %cmp16, label %if.end20, label %if.then17, !dbg !7290

if.then17:                                        ; preds = %land.lhs.true, %if.end12
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.62.140, i64 0, i64 0)) #10, !dbg !7291
  %20 = load i8*, i8** %src_name.addr, align 8, !dbg !7293, !tbaa !2995
  %call19 = call i8* @quotearg_style(i32 4, i8* %20), !dbg !7293
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call18, i8* %call19), !dbg !7294
  store i8 0, i8* %return_val, align 1, !dbg !7295, !tbaa !3106
  br label %close_src_desc, !dbg !7296

if.end20:                                         ; preds = %land.lhs.true
  %21 = load i8*, i8** %new_dst.addr, align 8, !dbg !7297, !tbaa !2995
  %22 = load i8, i8* %21, align 1, !dbg !7299, !tbaa !3106
  %tobool21 = trunc i8 %22 to i1, !dbg !7299, !ctir !120
  br i1 %tobool21, label %if.end69, label %if.then22, !dbg !7300

if.then22:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !7301, metadata !DIExpression()), !dbg !7303
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7304, !tbaa !2995
  %data_copy_required23 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 20, !dbg !7305, !ctir !253
  %24 = load i8, i8* %data_copy_required23, align 1, !dbg !7305, !tbaa !3457
  %tobool24 = trunc i8 %24 to i1, !dbg !7305, !ctir !120
  %25 = zext i1 %tobool24 to i64, !dbg !7304
  %cond25 = select i1 %tobool24, i32 512, i32 0, !dbg !7304
  %or26 = or i32 1, %cond25, !dbg !7306
  store i32 %or26, i32* %open_flags, align 4, !dbg !7303, !tbaa !2982
  %26 = load i8*, i8** %dst_name.addr, align 8, !dbg !7307, !tbaa !2995
  %27 = load i32, i32* %open_flags, align 4, !dbg !7308, !tbaa !2982
  %call27 = call i32 (i8*, i32, ...) @open_safer(i8* %26, i32 %27), !dbg !7309
  store i32 %call27, i32* %dest_desc, align 4, !dbg !7310, !tbaa !2982
  %call28 = call i32* @__errno_location() #15, !dbg !7311
  %28 = load i32, i32* %call28, align 4, !dbg !7311, !tbaa !2982, !ctir !7
  store i32 %28, i32* %dest_errno, align 4, !dbg !7312, !tbaa !2982
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7313, !tbaa !2995
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !7315, !ctir !253
  %30 = load i8, i8* %set_security_context, align 1, !dbg !7315, !tbaa !3210
  %tobool29 = trunc i8 %30 to i1, !dbg !7315, !ctir !120
  br i1 %tobool29, label %land.lhs.true31, label %lor.lhs.false, !dbg !7316

lor.lhs.false:                                    ; preds = %if.then22
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7317, !tbaa !2995
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 22, !dbg !7318, !ctir !253
  %32 = load i8, i8* %preserve_security_context, align 1, !dbg !7318, !tbaa !3207
  %tobool30 = trunc i8 %32 to i1, !dbg !7318, !ctir !120
  br i1 %tobool30, label %land.lhs.true31, label %if.end42, !dbg !7319

land.lhs.true31:                                  ; preds = %lor.lhs.false, %if.then22
  %33 = load i32, i32* %dest_desc, align 4, !dbg !7320, !tbaa !2982
  %cmp32 = icmp sle i32 0, %33, !dbg !7321
  br i1 %cmp32, label %if.then33, label %if.end42, !dbg !7322

if.then33:                                        ; preds = %land.lhs.true31
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !7323, !tbaa !2995
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7326, !tbaa !2995
  %preserve_security_context34 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 22, !dbg !7327, !ctir !253
  %36 = load i8, i8* %preserve_security_context34, align 1, !dbg !7327, !tbaa !3207
  %tobool35 = trunc i8 %36 to i1, !dbg !7327, !ctir !120
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7328, !tbaa !2995
  %call36 = call zeroext i1 @set_file_security_ctx(i8* %34, i1 zeroext %tobool35, i1 zeroext false, %struct.cp_options* %37), !dbg !7329
  br i1 %call36, label %if.end41, label %if.then37, !dbg !7330

if.then37:                                        ; preds = %if.then33
  %38 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7331, !tbaa !2995
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %38, i32 0, i32 23, !dbg !7334, !ctir !253
  %39 = load i8, i8* %require_preserve_context, align 2, !dbg !7334, !tbaa !3465
  %tobool38 = trunc i8 %39 to i1, !dbg !7334, !ctir !120
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !7335

if.then39:                                        ; preds = %if.then37
  store i8 0, i8* %return_val, align 1, !dbg !7336, !tbaa !3106
  br label %close_src_and_dst_desc, !dbg !7338

if.end40:                                         ; preds = %if.then37
  br label %if.end41, !dbg !7339

if.end41:                                         ; preds = %if.end40, %if.then33
  br label %if.end42, !dbg !7340

if.end42:                                         ; preds = %if.end41, %land.lhs.true31, %lor.lhs.false
  %40 = load i32, i32* %dest_desc, align 4, !dbg !7341, !tbaa !2982
  %cmp43 = icmp slt i32 %40, 0, !dbg !7343
  br i1 %cmp43, label %land.lhs.true44, label %if.end68, !dbg !7344

land.lhs.true44:                                  ; preds = %if.end42
  %41 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7345, !tbaa !2995
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %41, i32 0, i32 7, !dbg !7346, !ctir !253
  %42 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !7346, !tbaa !3403
  %tobool45 = trunc i8 %42 to i1, !dbg !7346, !ctir !120
  br i1 %tobool45, label %if.then46, label %if.end68, !dbg !7347

if.then46:                                        ; preds = %land.lhs.true44
  %43 = load i8*, i8** %dst_name.addr, align 8, !dbg !7348, !tbaa !2995
  %call47 = call i32 @unlink(i8* %43) #10, !dbg !7351
  %cmp48 = icmp ne i32 %call47, 0, !dbg !7352
  br i1 %cmp48, label %if.then49, label %if.end53, !dbg !7353

if.then49:                                        ; preds = %if.then46
  %call50 = call i32* @__errno_location() #15, !dbg !7354
  %44 = load i32, i32* %call50, align 4, !dbg !7354, !tbaa !2982, !ctir !7
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.110, i64 0, i64 0)) #10, !dbg !7356
  %45 = load i8*, i8** %dst_name.addr, align 8, !dbg !7357, !tbaa !2995
  %call52 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !7357
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %44, i8* %call51, i8* %call52), !dbg !7358
  store i8 0, i8* %return_val, align 1, !dbg !7359, !tbaa !3106
  br label %close_src_desc, !dbg !7360

if.end53:                                         ; preds = %if.then46
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7361, !tbaa !2995
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 31, !dbg !7363, !ctir !253
  %47 = load i8, i8* %verbose, align 2, !dbg !7363, !tbaa !3195
  %tobool54 = trunc i8 %47 to i1, !dbg !7363, !ctir !120
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !7364

if.then55:                                        ; preds = %if.end53
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #10, !dbg !7365
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !7366, !tbaa !2995
  %call57 = call i8* @quotearg_style(i32 4, i8* %48), !dbg !7366
  %call58 = call i32 (i8*, ...) @printf(i8* %call56, i8* %call57), !dbg !7367
  br label %if.end59, !dbg !7367

if.end59:                                         ; preds = %if.then55, %if.end53
  %49 = load i8*, i8** %new_dst.addr, align 8, !dbg !7368, !tbaa !2995
  store i8 1, i8* %49, align 1, !dbg !7369, !tbaa !3106, !ctir !120
  %50 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7370, !tbaa !2995
  %set_security_context60 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %50, i32 0, i32 18, !dbg !7372, !ctir !253
  %51 = load i8, i8* %set_security_context60, align 1, !dbg !7372, !tbaa !3210
  %tobool61 = trunc i8 %51 to i1, !dbg !7372, !ctir !120
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !7373

if.then62:                                        ; preds = %if.end59
  %52 = load i8*, i8** %src_name.addr, align 8, !dbg !7374, !tbaa !2995
  %53 = load i8*, i8** %dst_name.addr, align 8, !dbg !7377, !tbaa !2995
  %54 = load i32, i32* %dst_mode.addr, align 4, !dbg !7378, !tbaa !2982
  %55 = load i8*, i8** %new_dst.addr, align 8, !dbg !7379, !tbaa !2995
  %56 = load i8, i8* %55, align 1, !dbg !7380, !tbaa !3106
  %tobool63 = trunc i8 %56 to i1, !dbg !7380, !ctir !120
  %57 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7381, !tbaa !2995
  %call64 = call zeroext i1 @set_process_security_ctx(i8* %52, i8* %53, i32 %54, i1 zeroext %tobool63, %struct.cp_options* %57), !dbg !7382
  br i1 %call64, label %if.end66, label %if.then65, !dbg !7383

if.then65:                                        ; preds = %if.then62
  store i8 0, i8* %return_val, align 1, !dbg !7384, !tbaa !3106
  br label %close_src_desc, !dbg !7386

if.end66:                                         ; preds = %if.then62
  br label %if.end67, !dbg !7387

if.end67:                                         ; preds = %if.end66, %if.end59
  br label %if.end68, !dbg !7388

if.end68:                                         ; preds = %if.end67, %land.lhs.true44, %if.end42
  br label %if.end69, !dbg !7389

if.end69:                                         ; preds = %if.end68, %if.end20
  %58 = load i8*, i8** %new_dst.addr, align 8, !dbg !7390, !tbaa !2995
  %59 = load i8, i8* %58, align 1, !dbg !7392, !tbaa !3106
  %tobool70 = trunc i8 %59 to i1, !dbg !7392, !ctir !120
  br i1 %tobool70, label %if.then71, label %if.else112, !dbg !7393

if.then71:                                        ; preds = %if.end69
  br label %open_with_O_CREAT, !dbg !7394

open_with_O_CREAT:                                ; preds = %if.then124, %if.then71
  call void @llvm.dbg.label(metadata !7395), !dbg !7397
  call void @llvm.dbg.declare(metadata i32* %open_flags72, metadata !7398, metadata !DIExpression()), !dbg !7399
  store i32 65, i32* %open_flags72, align 4, !dbg !7399, !tbaa !2982
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !7400, !tbaa !2995
  %61 = load i32, i32* %open_flags72, align 4, !dbg !7401, !tbaa !2982
  %or73 = or i32 %61, 128, !dbg !7402
  %62 = load i32, i32* %dst_mode.addr, align 4, !dbg !7403, !tbaa !2982
  %63 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7404, !tbaa !2982
  %neg = xor i32 %63, -1, !dbg !7405
  %and = and i32 %62, %neg, !dbg !7406
  %call74 = call i32 (i8*, i32, ...) @open_safer(i8* %60, i32 %or73, i32 %and), !dbg !7407
  store i32 %call74, i32* %dest_desc, align 4, !dbg !7408, !tbaa !2982
  %call75 = call i32* @__errno_location() #15, !dbg !7409
  %64 = load i32, i32* %call75, align 4, !dbg !7409, !tbaa !2982, !ctir !7
  store i32 %64, i32* %dest_errno, align 4, !dbg !7410, !tbaa !2982
  %65 = load i32, i32* %dest_desc, align 4, !dbg !7411, !tbaa !2982
  %cmp76 = icmp slt i32 %65, 0, !dbg !7413
  br i1 %cmp76, label %land.lhs.true77, label %if.end99, !dbg !7414

land.lhs.true77:                                  ; preds = %open_with_O_CREAT
  %66 = load i32, i32* %dest_errno, align 4, !dbg !7415, !tbaa !2982
  %cmp78 = icmp eq i32 %66, 17, !dbg !7416
  br i1 %cmp78, label %land.lhs.true79, label %if.end99, !dbg !7417

land.lhs.true79:                                  ; preds = %land.lhs.true77
  %67 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7418, !tbaa !2995
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 9, !dbg !7419, !ctir !253
  %68 = load i8, i8* %move_mode, align 8, !dbg !7419, !tbaa !3414
  %tobool80 = trunc i8 %68 to i1, !dbg !7419, !ctir !120
  br i1 %tobool80, label %if.end99, label %if.then81, !dbg !7420

if.then81:                                        ; preds = %land.lhs.true79
  call void @llvm.dbg.declare(metadata %struct.stat* %dangling_link_sb, metadata !7421, metadata !DIExpression()), !dbg !7423
  %69 = load i8*, i8** %dst_name.addr, align 8, !dbg !7424, !tbaa !2995
  %call82 = call i32 @lstat(i8* %69, %struct.stat* %dangling_link_sb) #10, !dbg !7426
  %cmp83 = icmp eq i32 %call82, 0, !dbg !7427
  br i1 %cmp83, label %land.lhs.true84, label %if.end98, !dbg !7428

land.lhs.true84:                                  ; preds = %if.then81
  %st_mode85 = getelementptr inbounds %struct.stat, %struct.stat* %dangling_link_sb, i32 0, i32 3, !dbg !7429, !ctir !317
  %70 = load i32, i32* %st_mode85, align 8, !dbg !7429, !tbaa !3178, !ctir !133
  %and86 = and i32 %70, 61440, !dbg !7429
  %cmp87 = icmp eq i32 %and86, 40960, !dbg !7429
  br i1 %cmp87, label %if.then88, label %if.end98, !dbg !7430

if.then88:                                        ; preds = %land.lhs.true84
  %71 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7431, !tbaa !2995
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %71, i32 0, i32 33, !dbg !7434, !ctir !253
  %72 = load i8, i8* %open_dangling_dest_symlink, align 8, !dbg !7434, !tbaa !3502
  %tobool89 = trunc i8 %72 to i1, !dbg !7434, !ctir !120
  br i1 %tobool89, label %if.then90, label %if.else, !dbg !7435

if.then90:                                        ; preds = %if.then88
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !7436, !tbaa !2995
  %74 = load i32, i32* %open_flags72, align 4, !dbg !7438, !tbaa !2982
  %75 = load i32, i32* %dst_mode.addr, align 4, !dbg !7439, !tbaa !2982
  %76 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7440, !tbaa !2982
  %neg91 = xor i32 %76, -1, !dbg !7441
  %and92 = and i32 %75, %neg91, !dbg !7442
  %call93 = call i32 (i8*, i32, ...) @open_safer(i8* %73, i32 %74, i32 %and92), !dbg !7443
  store i32 %call93, i32* %dest_desc, align 4, !dbg !7444, !tbaa !2982
  %call94 = call i32* @__errno_location() #15, !dbg !7445
  %77 = load i32, i32* %call94, align 4, !dbg !7445, !tbaa !2982, !ctir !7
  store i32 %77, i32* %dest_errno, align 4, !dbg !7446, !tbaa !2982
  br label %if.end97, !dbg !7447

if.else:                                          ; preds = %if.then88
  %call95 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63, i64 0, i64 0)) #10, !dbg !7448
  %78 = load i8*, i8** %dst_name.addr, align 8, !dbg !7450, !tbaa !2995
  %call96 = call i8* @quotearg_style(i32 4, i8* %78), !dbg !7450
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call95, i8* %call96), !dbg !7451
  store i8 0, i8* %return_val, align 1, !dbg !7452, !tbaa !3106
  br label %close_src_desc, !dbg !7453

if.end97:                                         ; preds = %if.then90
  br label %if.end98, !dbg !7454

if.end98:                                         ; preds = %if.end97, %land.lhs.true84, %if.then81
  br label %if.end99, !dbg !7455

if.end99:                                         ; preds = %if.end98, %land.lhs.true79, %land.lhs.true77, %open_with_O_CREAT
  %79 = load i32, i32* %dest_desc, align 4, !dbg !7456, !tbaa !2982
  %cmp100 = icmp slt i32 %79, 0, !dbg !7458
  br i1 %cmp100, label %land.lhs.true101, label %if.end111, !dbg !7459

land.lhs.true101:                                 ; preds = %if.end99
  %80 = load i32, i32* %dest_errno, align 4, !dbg !7460, !tbaa !2982
  %cmp102 = icmp eq i32 %80, 21, !dbg !7461
  br i1 %cmp102, label %land.lhs.true103, label %if.end111, !dbg !7462

land.lhs.true103:                                 ; preds = %land.lhs.true101
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !7463, !tbaa !2995
  %82 = load i8, i8* %81, align 1, !dbg !7464, !tbaa !3657, !ctir !116
  %conv = sext i8 %82 to i32, !dbg !7464
  %tobool104 = icmp ne i32 %conv, 0, !dbg !7464
  br i1 %tobool104, label %land.lhs.true105, label %if.end111, !dbg !7465

land.lhs.true105:                                 ; preds = %land.lhs.true103
  %83 = load i8*, i8** %dst_name.addr, align 8, !dbg !7466, !tbaa !2995
  %84 = load i8*, i8** %dst_name.addr, align 8, !dbg !7467, !tbaa !2995
  %call106 = call i64 @strlen(i8* %84) #14, !dbg !7468
  %sub = sub i64 %call106, 1, !dbg !7469
  %arrayidx = getelementptr inbounds i8, i8* %83, i64 %sub, !dbg !7466, !ctir !115
  %85 = load i8, i8* %arrayidx, align 1, !dbg !7466, !tbaa !3657
  %conv107 = sext i8 %85 to i32, !dbg !7466
  %cmp108 = icmp eq i32 %conv107, 47, !dbg !7470
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !7471

if.then110:                                       ; preds = %land.lhs.true105
  store i32 20, i32* %dest_errno, align 4, !dbg !7472, !tbaa !2982
  br label %if.end111, !dbg !7473

if.end111:                                        ; preds = %if.then110, %land.lhs.true105, %land.lhs.true103, %land.lhs.true101, %if.end99
  br label %if.end113, !dbg !7474

if.else112:                                       ; preds = %if.end69
  store i32 0, i32* %omitted_permissions.addr, align 4, !dbg !7475, !tbaa !2982
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.end111
  %86 = load i32, i32* %dest_desc, align 4, !dbg !7477, !tbaa !2982
  %cmp114 = icmp slt i32 %86, 0, !dbg !7479
  br i1 %cmp114, label %if.then116, label %if.end128, !dbg !7480

if.then116:                                       ; preds = %if.end113
  %87 = load i32, i32* %dest_errno, align 4, !dbg !7481, !tbaa !2982
  %cmp117 = icmp eq i32 %87, 2, !dbg !7484
  br i1 %cmp117, label %land.lhs.true119, label %if.end125, !dbg !7485

land.lhs.true119:                                 ; preds = %if.then116
  %88 = load i8*, i8** %new_dst.addr, align 8, !dbg !7486, !tbaa !2995
  %89 = load i8, i8* %88, align 1, !dbg !7487, !tbaa !3106
  %tobool120 = trunc i8 %89 to i1, !dbg !7487, !ctir !120
  br i1 %tobool120, label %if.end125, label %land.lhs.true121, !dbg !7488

land.lhs.true121:                                 ; preds = %land.lhs.true119
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7489, !tbaa !2995
  %move_mode122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 9, !dbg !7490, !ctir !253
  %91 = load i8, i8* %move_mode122, align 8, !dbg !7490, !tbaa !3414
  %tobool123 = trunc i8 %91 to i1, !dbg !7490, !ctir !120
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !7491

if.then124:                                       ; preds = %land.lhs.true121
  %92 = load i8*, i8** %new_dst.addr, align 8, !dbg !7492, !tbaa !2995
  store i8 1, i8* %92, align 1, !dbg !7494, !tbaa !3106, !ctir !120
  br label %open_with_O_CREAT, !dbg !7495

if.end125:                                        ; preds = %land.lhs.true121, %land.lhs.true119, %if.then116
  %93 = load i32, i32* %dest_errno, align 4, !dbg !7496, !tbaa !2982
  %call126 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i64 0, i64 0)) #10, !dbg !7497
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !7498, !tbaa !2995
  %call127 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !7498
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call126, i8* %call127), !dbg !7499
  store i8 0, i8* %return_val, align 1, !dbg !7500, !tbaa !3106
  br label %close_src_desc, !dbg !7501

if.end128:                                        ; preds = %if.end113
  %95 = load i32, i32* %dest_desc, align 4, !dbg !7502, !tbaa !2982
  %call129 = call i32 @fstat(i32 %95, %struct.stat* %sb) #10, !dbg !7504
  %cmp130 = icmp ne i32 %call129, 0, !dbg !7505
  br i1 %cmp130, label %if.then132, label %if.end136, !dbg !7506

if.then132:                                       ; preds = %if.end128
  %call133 = call i32* @__errno_location() #15, !dbg !7507
  %96 = load i32, i32* %call133, align 4, !dbg !7507, !tbaa !2982, !ctir !7
  %call134 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.139, i64 0, i64 0)) #10, !dbg !7509
  %97 = load i8*, i8** %dst_name.addr, align 8, !dbg !7510, !tbaa !2995
  %call135 = call i8* @quotearg_style(i32 4, i8* %97), !dbg !7510
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %96, i8* %call134, i8* %call135), !dbg !7511
  store i8 0, i8* %return_val, align 1, !dbg !7512, !tbaa !3106
  br label %close_src_and_dst_desc, !dbg !7513

if.end136:                                        ; preds = %if.end128
  %98 = load i8, i8* %data_copy_required, align 1, !dbg !7514, !tbaa !3106
  %tobool137 = trunc i8 %98 to i1, !dbg !7514
  br i1 %tobool137, label %land.lhs.true139, label %if.end161, !dbg !7516

land.lhs.true139:                                 ; preds = %if.end136
  %99 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7517, !tbaa !2995
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %99, i32 0, i32 36, !dbg !7518, !ctir !253
  %100 = load i32, i32* %reflink_mode, align 8, !dbg !7518, !tbaa !3391, !ctir !95
  %tobool140 = icmp ne i32 %100, 0, !dbg !7517
  br i1 %tobool140, label %if.then141, label %if.end161, !dbg !7519

if.then141:                                       ; preds = %land.lhs.true139
  call void @llvm.dbg.declare(metadata i8* %clone_ok, metadata !7520, metadata !DIExpression()), !dbg !7522
  %101 = load i32, i32* %dest_desc, align 4, !dbg !7523, !tbaa !2982
  %102 = load i32, i32* %source_desc, align 4, !dbg !7524, !tbaa !2982
  %call142 = call i32 @clone_file(i32 %101, i32 %102), !dbg !7525
  %cmp143 = icmp eq i32 %call142, 0, !dbg !7526
  %frombool145 = zext i1 %cmp143 to i8, !dbg !7522
  store i8 %frombool145, i8* %clone_ok, align 1, !dbg !7522, !tbaa !3106
  %103 = load i8, i8* %clone_ok, align 1, !dbg !7527, !tbaa !3106
  %tobool146 = trunc i8 %103 to i1, !dbg !7527
  br i1 %tobool146, label %if.then152, label %lor.lhs.false148, !dbg !7529

lor.lhs.false148:                                 ; preds = %if.then141
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7530, !tbaa !2995
  %reflink_mode149 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 36, !dbg !7531, !ctir !253
  %105 = load i32, i32* %reflink_mode149, align 8, !dbg !7531, !tbaa !3391, !ctir !95
  %cmp150 = icmp eq i32 %105, 2, !dbg !7532
  br i1 %cmp150, label %if.then152, label %if.end160, !dbg !7533

if.then152:                                       ; preds = %lor.lhs.false148, %if.then141
  %106 = load i8, i8* %clone_ok, align 1, !dbg !7534, !tbaa !3106
  %tobool153 = trunc i8 %106 to i1, !dbg !7534
  br i1 %tobool153, label %if.end159, label %if.then154, !dbg !7537

if.then154:                                       ; preds = %if.then152
  %call155 = call i32* @__errno_location() #15, !dbg !7538
  %107 = load i32, i32* %call155, align 4, !dbg !7538, !tbaa !2982, !ctir !7
  %call156 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !7540
  %108 = load i8*, i8** %dst_name.addr, align 8, !dbg !7541, !tbaa !2995
  %call157 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %108), !dbg !7541
  %109 = load i8*, i8** %src_name.addr, align 8, !dbg !7542, !tbaa !2995
  %call158 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %109), !dbg !7542
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %107, i8* %call156, i8* %call157, i8* %call158), !dbg !7543
  store i8 0, i8* %return_val, align 1, !dbg !7544, !tbaa !3106
  br label %close_src_and_dst_desc, !dbg !7545

if.end159:                                        ; preds = %if.then152
  store i8 0, i8* %data_copy_required, align 1, !dbg !7546, !tbaa !3106
  br label %if.end160, !dbg !7547

if.end160:                                        ; preds = %if.end159, %lor.lhs.false148
  br label %if.end161, !dbg !7548

if.end161:                                        ; preds = %if.end160, %land.lhs.true139, %if.end136
  %110 = load i8, i8* %data_copy_required, align 1, !dbg !7549, !tbaa !3106
  %tobool162 = trunc i8 %110 to i1, !dbg !7549
  br i1 %tobool162, label %if.then163, label %if.end265, !dbg !7551

if.then163:                                       ; preds = %if.end161
  call void @llvm.dbg.declare(metadata i64* %buf_alignment, metadata !7552, metadata !DIExpression()), !dbg !7554
  %call164 = call i32 @getpagesize() #15, !dbg !7555
  %conv165 = sext i32 %call164 to i64, !dbg !7555
  store i64 %conv165, i64* %buf_alignment, align 8, !dbg !7554, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !7556, metadata !DIExpression()), !dbg !7557
  %call166 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb), !dbg !7558
  store i64 %call166, i64* %buf_size, align 8, !dbg !7557, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %hole_size, metadata !7559, metadata !DIExpression()), !dbg !7560
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7561, !ctir !317
  %111 = load i64, i64* %st_blksize, align 8, !dbg !7561, !tbaa !7562, !ctir !333
  %cmp167 = icmp slt i64 0, %111, !dbg !7561
  br i1 %cmp167, label %land.lhs.true169, label %cond.false, !dbg !7561

land.lhs.true169:                                 ; preds = %if.then163
  %st_blksize170 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7561, !ctir !317
  %112 = load i64, i64* %st_blksize170, align 8, !dbg !7561, !tbaa !7562, !ctir !333
  %cmp171 = icmp ule i64 %112, 2305843009213693952, !dbg !7561
  br i1 %cmp171, label %cond.true, label %cond.false, !dbg !7561

cond.true:                                        ; preds = %land.lhs.true169
  %st_blksize173 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7561, !ctir !317
  %113 = load i64, i64* %st_blksize173, align 8, !dbg !7561, !tbaa !7562, !ctir !333
  br label %cond.end, !dbg !7561

cond.false:                                       ; preds = %land.lhs.true169, %if.then163
  br label %cond.end, !dbg !7561

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond174 = phi i64 [ %113, %cond.true ], [ 512, %cond.false ], !dbg !7561
  store i64 %cond174, i64* %hole_size, align 8, !dbg !7560, !tbaa !3848
  %114 = load i32, i32* %source_desc, align 4, !dbg !7563, !tbaa !2982
  call void @fdadvise(i32 %114, i64 0, i64 0, i32 2), !dbg !7564
  call void @llvm.dbg.declare(metadata i8* %make_holes, metadata !7565, metadata !DIExpression()), !dbg !7566
  store i8 0, i8* %make_holes, align 1, !dbg !7566, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %sparse_src, metadata !7567, metadata !DIExpression()), !dbg !7568
  %call175 = call zeroext i1 @is_probably_sparse(%struct.stat* %src_open_sb), !dbg !7569
  %frombool176 = zext i1 %call175 to i8, !dbg !7568
  store i8 %frombool176, i8* %sparse_src, align 1, !dbg !7568, !tbaa !3106
  %st_mode177 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !7570, !ctir !317
  %115 = load i32, i32* %st_mode177, align 8, !dbg !7570, !tbaa !3178, !ctir !133
  %and178 = and i32 %115, 61440, !dbg !7570
  %cmp179 = icmp eq i32 %and178, 32768, !dbg !7570
  br i1 %cmp179, label %if.then181, label %if.end194, !dbg !7572

if.then181:                                       ; preds = %cond.end
  %116 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7573, !tbaa !2995
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %116, i32 0, i32 3, !dbg !7576, !ctir !253
  %117 = load i32, i32* %sparse_mode, align 4, !dbg !7576, !tbaa !3481, !ctir !89
  %cmp182 = icmp eq i32 %117, 3, !dbg !7577
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !7578

if.then184:                                       ; preds = %if.then181
  store i8 1, i8* %make_holes, align 1, !dbg !7579, !tbaa !3106
  br label %if.end185, !dbg !7580

if.end185:                                        ; preds = %if.then184, %if.then181
  %118 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7581, !tbaa !2995
  %sparse_mode186 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %118, i32 0, i32 3, !dbg !7583, !ctir !253
  %119 = load i32, i32* %sparse_mode186, align 4, !dbg !7583, !tbaa !3481, !ctir !89
  %cmp187 = icmp eq i32 %119, 2, !dbg !7584
  br i1 %cmp187, label %land.lhs.true189, label %if.end193, !dbg !7585

land.lhs.true189:                                 ; preds = %if.end185
  %120 = load i8, i8* %sparse_src, align 1, !dbg !7586, !tbaa !3106
  %tobool190 = trunc i8 %120 to i1, !dbg !7586
  br i1 %tobool190, label %if.then192, label %if.end193, !dbg !7587

if.then192:                                       ; preds = %land.lhs.true189
  store i8 1, i8* %make_holes, align 1, !dbg !7588, !tbaa !3106
  br label %if.end193, !dbg !7589

if.end193:                                        ; preds = %if.then192, %land.lhs.true189, %if.end185
  br label %if.end194, !dbg !7590

if.end194:                                        ; preds = %if.end193, %cond.end
  %121 = load i8, i8* %make_holes, align 1, !dbg !7591, !tbaa !3106
  %tobool195 = trunc i8 %121 to i1, !dbg !7591
  br i1 %tobool195, label %if.end220, label %if.then196, !dbg !7593

if.then196:                                       ; preds = %if.end194
  call void @llvm.dbg.declare(metadata i64* %blcm_max, metadata !7594, metadata !DIExpression()), !dbg !7596
  %122 = load i64, i64* %buf_alignment, align 8, !dbg !7597, !tbaa !3848
  %sub197 = sub i64 9223372036854775807, %122, !dbg !7598
  store i64 %sub197, i64* %blcm_max, align 8, !dbg !7596, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %blcm, metadata !7599, metadata !DIExpression()), !dbg !7600
  %call198 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %src_open_sb), !dbg !7601
  %123 = load i64, i64* %buf_size, align 8, !dbg !7602, !tbaa !3848
  %124 = load i64, i64* %blcm_max, align 8, !dbg !7603, !tbaa !3848
  %call199 = call i64 @buffer_lcm(i64 %call198, i64 %123, i64 %124) #15, !dbg !7604
  store i64 %call199, i64* %blcm, align 8, !dbg !7600, !tbaa !3848
  %st_mode200 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 3, !dbg !7605, !ctir !317
  %125 = load i32, i32* %st_mode200, align 8, !dbg !7605, !tbaa !3178, !ctir !133
  %and201 = and i32 %125, 61440, !dbg !7605
  %cmp202 = icmp eq i32 %and201, 32768, !dbg !7605
  br i1 %cmp202, label %land.lhs.true204, label %if.end209, !dbg !7607

land.lhs.true204:                                 ; preds = %if.then196
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7608, !ctir !317
  %126 = load i64, i64* %st_size, align 8, !dbg !7608, !tbaa !4516, !ctir !29
  %127 = load i64, i64* %buf_size, align 8, !dbg !7609, !tbaa !3848
  %cmp205 = icmp ult i64 %126, %127, !dbg !7610
  br i1 %cmp205, label %if.then207, label %if.end209, !dbg !7611

if.then207:                                       ; preds = %land.lhs.true204
  %st_size208 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7612, !ctir !317
  %128 = load i64, i64* %st_size208, align 8, !dbg !7612, !tbaa !4516, !ctir !29
  %add = add nsw i64 %128, 1, !dbg !7613
  store i64 %add, i64* %buf_size, align 8, !dbg !7614, !tbaa !3848
  br label %if.end209, !dbg !7615

if.end209:                                        ; preds = %if.then207, %land.lhs.true204, %if.then196
  %129 = load i64, i64* %blcm, align 8, !dbg !7616, !tbaa !3848
  %sub210 = sub i64 %129, 1, !dbg !7617
  %130 = load i64, i64* %buf_size, align 8, !dbg !7618, !tbaa !3848
  %add211 = add i64 %130, %sub210, !dbg !7618
  store i64 %add211, i64* %buf_size, align 8, !dbg !7618, !tbaa !3848
  %131 = load i64, i64* %buf_size, align 8, !dbg !7619, !tbaa !3848
  %132 = load i64, i64* %blcm, align 8, !dbg !7620, !tbaa !3848
  %rem = urem i64 %131, %132, !dbg !7621
  %133 = load i64, i64* %buf_size, align 8, !dbg !7622, !tbaa !3848
  %sub212 = sub i64 %133, %rem, !dbg !7622
  store i64 %sub212, i64* %buf_size, align 8, !dbg !7622, !tbaa !3848
  %134 = load i64, i64* %buf_size, align 8, !dbg !7623, !tbaa !3848
  %cmp213 = icmp eq i64 %134, 0, !dbg !7625
  br i1 %cmp213, label %if.then218, label %lor.lhs.false215, !dbg !7626

lor.lhs.false215:                                 ; preds = %if.end209
  %135 = load i64, i64* %blcm_max, align 8, !dbg !7627, !tbaa !3848
  %136 = load i64, i64* %buf_size, align 8, !dbg !7628, !tbaa !3848
  %cmp216 = icmp ult i64 %135, %136, !dbg !7629
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !7630

if.then218:                                       ; preds = %lor.lhs.false215, %if.end209
  %137 = load i64, i64* %blcm, align 8, !dbg !7631, !tbaa !3848
  store i64 %137, i64* %buf_size, align 8, !dbg !7632, !tbaa !3848
  br label %if.end219, !dbg !7633

if.end219:                                        ; preds = %if.then218, %lor.lhs.false215
  br label %if.end220, !dbg !7634

if.end220:                                        ; preds = %if.end219, %if.end194
  %138 = load i64, i64* %buf_size, align 8, !dbg !7635, !tbaa !3848
  %139 = load i64, i64* %buf_alignment, align 8, !dbg !7636, !tbaa !3848
  %add221 = add i64 %138, %139, !dbg !7637
  %call222 = call noalias i8* @xmalloc(i64 %add221), !dbg !7638
  store i8* %call222, i8** %buf_alloc, align 8, !dbg !7639, !tbaa !2995
  %140 = load i8*, i8** %buf_alloc, align 8, !dbg !7640, !tbaa !2995
  %141 = load i64, i64* %buf_alignment, align 8, !dbg !7641, !tbaa !3848
  %call223 = call i8* @ptr_align(i8* %140, i64 %141), !dbg !7642
  store i8* %call223, i8** %buf, align 8, !dbg !7643, !tbaa !2995
  %142 = load i8, i8* %sparse_src, align 1, !dbg !7644, !tbaa !3106
  %tobool224 = trunc i8 %142 to i1, !dbg !7644
  br i1 %tobool224, label %if.then225, label %if.end240, !dbg !7646

if.then225:                                       ; preds = %if.end220
  call void @llvm.dbg.declare(metadata i8* %normal_copy_required, metadata !7647, metadata !DIExpression()), !dbg !7649
  %143 = load i32, i32* %source_desc, align 4, !dbg !7650, !tbaa !2982
  %144 = load i32, i32* %dest_desc, align 4, !dbg !7652, !tbaa !2982
  %145 = load i8*, i8** %buf, align 8, !dbg !7653, !tbaa !2995
  %146 = load i64, i64* %buf_size, align 8, !dbg !7654, !tbaa !3848
  %147 = load i64, i64* %hole_size, align 8, !dbg !7655, !tbaa !3848
  %st_size226 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7656, !ctir !317
  %148 = load i64, i64* %st_size226, align 8, !dbg !7656, !tbaa !4516, !ctir !29
  %149 = load i8, i8* %make_holes, align 1, !dbg !7657, !tbaa !3106
  %tobool227 = trunc i8 %149 to i1, !dbg !7657
  br i1 %tobool227, label %cond.true229, label %cond.false231, !dbg !7657

cond.true229:                                     ; preds = %if.then225
  %150 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7658, !tbaa !2995
  %sparse_mode230 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %150, i32 0, i32 3, !dbg !7659, !ctir !253
  %151 = load i32, i32* %sparse_mode230, align 4, !dbg !7659, !tbaa !3481, !ctir !89
  br label %cond.end232, !dbg !7657

cond.false231:                                    ; preds = %if.then225
  br label %cond.end232, !dbg !7657

cond.end232:                                      ; preds = %cond.false231, %cond.true229
  %cond233 = phi i32 [ %151, %cond.true229 ], [ 1, %cond.false231 ], !dbg !7657
  %152 = load i8*, i8** %src_name.addr, align 8, !dbg !7660, !tbaa !2995
  %153 = load i8*, i8** %dst_name.addr, align 8, !dbg !7661, !tbaa !2995
  %call234 = call zeroext i1 @extent_copy(i32 %143, i32 %144, i8* %145, i64 %146, i64 %147, i64 %148, i32 %cond233, i8* %152, i8* %153, i8* %normal_copy_required), !dbg !7662
  br i1 %call234, label %if.then235, label %if.end236, !dbg !7663

if.then235:                                       ; preds = %cond.end232
  br label %preserve_metadata, !dbg !7664

if.end236:                                        ; preds = %cond.end232
  %154 = load i8, i8* %normal_copy_required, align 1, !dbg !7665, !tbaa !3106
  %tobool237 = trunc i8 %154 to i1, !dbg !7665
  br i1 %tobool237, label %if.end239, label %if.then238, !dbg !7667

if.then238:                                       ; preds = %if.end236
  store i8 0, i8* %return_val, align 1, !dbg !7668, !tbaa !3106
  br label %close_src_and_dst_desc, !dbg !7670

if.end239:                                        ; preds = %if.end236
  br label %if.end240, !dbg !7671

if.end240:                                        ; preds = %if.end239, %if.end220
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !7672, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !7674, metadata !DIExpression()), !dbg !7675
  %155 = load i32, i32* %source_desc, align 4, !dbg !7676, !tbaa !2982
  %156 = load i32, i32* %dest_desc, align 4, !dbg !7678, !tbaa !2982
  %157 = load i8*, i8** %buf, align 8, !dbg !7679, !tbaa !2995
  %158 = load i64, i64* %buf_size, align 8, !dbg !7680, !tbaa !3848
  %159 = load i8, i8* %make_holes, align 1, !dbg !7681, !tbaa !3106
  %tobool241 = trunc i8 %159 to i1, !dbg !7681
  br i1 %tobool241, label %cond.true243, label %cond.false244, !dbg !7681

cond.true243:                                     ; preds = %if.end240
  %160 = load i64, i64* %hole_size, align 8, !dbg !7682, !tbaa !3848
  br label %cond.end245, !dbg !7681

cond.false244:                                    ; preds = %if.end240
  br label %cond.end245, !dbg !7681

cond.end245:                                      ; preds = %cond.false244, %cond.true243
  %cond246 = phi i64 [ %160, %cond.true243 ], [ 0, %cond.false244 ], !dbg !7681
  %161 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7683, !tbaa !2995
  %sparse_mode247 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %161, i32 0, i32 3, !dbg !7684, !ctir !253
  %162 = load i32, i32* %sparse_mode247, align 4, !dbg !7684, !tbaa !3481, !ctir !89
  %cmp248 = icmp eq i32 %162, 3, !dbg !7685
  %163 = load i8*, i8** %src_name.addr, align 8, !dbg !7686, !tbaa !2995
  %164 = load i8*, i8** %dst_name.addr, align 8, !dbg !7687, !tbaa !2995
  %call250 = call zeroext i1 @sparse_copy(i32 %155, i32 %156, i8* %157, i64 %158, i64 %cond246, i1 zeroext %cmp248, i8* %163, i8* %164, i64 -1, i64* %n_read, i8* %wrote_hole_at_eof), !dbg !7688
  br i1 %call250, label %if.else252, label %if.then251, !dbg !7689

if.then251:                                       ; preds = %cond.end245
  store i8 0, i8* %return_val, align 1, !dbg !7690, !tbaa !3106
  br label %close_src_and_dst_desc, !dbg !7692

if.else252:                                       ; preds = %cond.end245
  %165 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !7693, !tbaa !3106
  %tobool253 = trunc i8 %165 to i1, !dbg !7693
  br i1 %tobool253, label %land.lhs.true255, label %if.end263, !dbg !7695

land.lhs.true255:                                 ; preds = %if.else252
  %166 = load i32, i32* %dest_desc, align 4, !dbg !7696, !tbaa !2982
  %167 = load i64, i64* %n_read, align 8, !dbg !7697, !tbaa !3848
  %call256 = call i32 @ftruncate(i32 %166, i64 %167) #10, !dbg !7698
  %cmp257 = icmp slt i32 %call256, 0, !dbg !7699
  br i1 %cmp257, label %if.then259, label %if.end263, !dbg !7700

if.then259:                                       ; preds = %land.lhs.true255
  %call260 = call i32* @__errno_location() #15, !dbg !7701
  %168 = load i32, i32* %call260, align 4, !dbg !7701, !tbaa !2982, !ctir !7
  %call261 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i64 0, i64 0)) #10, !dbg !7703
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !7704, !tbaa !2995
  %call262 = call i8* @quotearg_style(i32 4, i8* %169), !dbg !7704
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %168, i8* %call261, i8* %call262), !dbg !7705
  store i8 0, i8* %return_val, align 1, !dbg !7706, !tbaa !3106
  br label %close_src_and_dst_desc, !dbg !7707

if.end263:                                        ; preds = %land.lhs.true255, %if.else252
  br label %if.end264

if.end264:                                        ; preds = %if.end263
  br label %if.end265, !dbg !7708

if.end265:                                        ; preds = %if.end264, %if.end161
  br label %preserve_metadata, !dbg !7549

preserve_metadata:                                ; preds = %if.end265, %if.then235
  call void @llvm.dbg.label(metadata !7709), !dbg !7710
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7711, !tbaa !2995
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 16, !dbg !7713, !ctir !253
  %171 = load i8, i8* %preserve_timestamps, align 1, !dbg !7713, !tbaa !3438
  %tobool266 = trunc i8 %171 to i1, !dbg !7713, !ctir !120
  br i1 %tobool266, label %if.then267, label %if.end284, !dbg !7714

if.then267:                                       ; preds = %preserve_metadata
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !7715, metadata !DIExpression()), !dbg !7717
  %arrayidx268 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !7718, !ctir !357
  %172 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7719, !tbaa !2995
  %call269 = call { i64, i64 } @get_stat_atime(%struct.stat* %172) #14, !dbg !7720
  %173 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !7720
  %174 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 0, !dbg !7720
  %175 = extractvalue { i64, i64 } %call269, 0, !dbg !7720
  store i64 %175, i64* %174, align 8, !dbg !7720
  %176 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 1, !dbg !7720
  %177 = extractvalue { i64, i64 } %call269, 1, !dbg !7720
  store i64 %177, i64* %176, align 8, !dbg !7720
  %178 = bitcast %struct.timespec* %arrayidx268 to i8*, !dbg !7720
  %179 = bitcast %struct.timespec* %tmp to i8*, !dbg !7720
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %178, i8* align 8 %179, i64 16, i1 false), !dbg !7720, !tbaa.struct !6321
  %arrayidx270 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !7721, !ctir !357
  %180 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7722, !tbaa !2995
  %call272 = call { i64, i64 } @get_stat_mtime(%struct.stat* %180) #14, !dbg !7723
  %181 = bitcast %struct.timespec* %tmp271 to { i64, i64 }*, !dbg !7723
  %182 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 0, !dbg !7723
  %183 = extractvalue { i64, i64 } %call272, 0, !dbg !7723
  store i64 %183, i64* %182, align 8, !dbg !7723
  %184 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 1, !dbg !7723
  %185 = extractvalue { i64, i64 } %call272, 1, !dbg !7723
  store i64 %185, i64* %184, align 8, !dbg !7723
  %186 = bitcast %struct.timespec* %arrayidx270 to i8*, !dbg !7723
  %187 = bitcast %struct.timespec* %tmp271 to i8*, !dbg !7723
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %186, i8* align 8 %187, i64 16, i1 false), !dbg !7723, !tbaa.struct !6321
  %188 = load i32, i32* %dest_desc, align 4, !dbg !7724, !tbaa !2982
  %189 = load i8*, i8** %dst_name.addr, align 8, !dbg !7726, !tbaa !2995
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !7727
  %call273 = call i32 @fdutimens(i32 %188, i8* %189, %struct.timespec* %arraydecay), !dbg !7728
  %cmp274 = icmp ne i32 %call273, 0, !dbg !7729
  br i1 %cmp274, label %if.then276, label %if.end283, !dbg !7730

if.then276:                                       ; preds = %if.then267
  %call277 = call i32* @__errno_location() #15, !dbg !7731
  %190 = load i32, i32* %call277, align 4, !dbg !7731, !tbaa !2982, !ctir !7
  %call278 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.134, i64 0, i64 0)) #10, !dbg !7733
  %191 = load i8*, i8** %dst_name.addr, align 8, !dbg !7734, !tbaa !2995
  %call279 = call i8* @quotearg_style(i32 4, i8* %191), !dbg !7734
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %190, i8* %call278, i8* %call279), !dbg !7735
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7736, !tbaa !2995
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 21, !dbg !7738, !ctir !253
  %193 = load i8, i8* %require_preserve, align 4, !dbg !7738, !tbaa !3461
  %tobool280 = trunc i8 %193 to i1, !dbg !7738, !ctir !120
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !7739

if.then281:                                       ; preds = %if.then276
  store i8 0, i8* %return_val, align 1, !dbg !7740, !tbaa !3106
  br label %close_src_and_dst_desc, !dbg !7742

if.end282:                                        ; preds = %if.then276
  br label %if.end283, !dbg !7743

if.end283:                                        ; preds = %if.end282, %if.then267
  br label %if.end284, !dbg !7744

if.end284:                                        ; preds = %if.end283, %preserve_metadata
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7745, !tbaa !2995
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 14, !dbg !7747, !ctir !253
  %195 = load i8, i8* %preserve_ownership, align 1, !dbg !7747, !tbaa !3426
  %tobool285 = trunc i8 %195 to i1, !dbg !7747, !ctir !120
  br i1 %tobool285, label %land.lhs.true287, label %if.end300, !dbg !7748

land.lhs.true287:                                 ; preds = %if.end284
  %196 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7749, !tbaa !2995
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %196, i32 0, i32 4, !dbg !7749, !ctir !316
  %197 = load i32, i32* %st_uid, align 4, !dbg !7749, !tbaa !6223, !ctir !326
  %st_uid288 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 4, !dbg !7749, !ctir !317
  %198 = load i32, i32* %st_uid288, align 4, !dbg !7749, !tbaa !6223, !ctir !326
  %cmp289 = icmp eq i32 %197, %198, !dbg !7749
  br i1 %cmp289, label %land.lhs.true291, label %if.then295, !dbg !7749

land.lhs.true291:                                 ; preds = %land.lhs.true287
  %199 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7749, !tbaa !2995
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %199, i32 0, i32 5, !dbg !7749, !ctir !316
  %200 = load i32, i32* %st_gid, align 8, !dbg !7749, !tbaa !6225, !ctir !328
  %st_gid292 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 5, !dbg !7749, !ctir !317
  %201 = load i32, i32* %st_gid292, align 8, !dbg !7749, !tbaa !6225, !ctir !328
  %cmp293 = icmp eq i32 %200, %201, !dbg !7749
  br i1 %cmp293, label %if.end300, label %if.then295, !dbg !7750

if.then295:                                       ; preds = %land.lhs.true291, %land.lhs.true287
  %202 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7751, !tbaa !2995
  %203 = load i8*, i8** %dst_name.addr, align 8, !dbg !7753, !tbaa !2995
  %204 = load i32, i32* %dest_desc, align 4, !dbg !7754, !tbaa !2982
  %205 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7755, !tbaa !2995
  %206 = load i8*, i8** %new_dst.addr, align 8, !dbg !7756, !tbaa !2995
  %207 = load i8, i8* %206, align 1, !dbg !7757, !tbaa !3106
  %tobool296 = trunc i8 %207 to i1, !dbg !7757, !ctir !120
  %call297 = call i32 @set_owner(%struct.cp_options* %202, i8* %203, i32 %204, %struct.stat* %205, i1 zeroext %tobool296, %struct.stat* %sb), !dbg !7758
  switch i32 %call297, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb298
  ], !dbg !7759

sw.bb:                                            ; preds = %if.then295
  store i8 0, i8* %return_val, align 1, !dbg !7760, !tbaa !3106
  br label %close_src_and_dst_desc, !dbg !7762

sw.bb298:                                         ; preds = %if.then295
  %208 = load i32, i32* %src_mode, align 4, !dbg !7763, !tbaa !2982
  %and299 = and i32 %208, -3585, !dbg !7763
  store i32 %and299, i32* %src_mode, align 4, !dbg !7763, !tbaa !2982
  br label %sw.epilog, !dbg !7764

sw.epilog:                                        ; preds = %if.then295, %sw.bb298
  br label %if.end300, !dbg !7765

if.end300:                                        ; preds = %sw.epilog, %land.lhs.true291, %if.end284
  %209 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7766, !tbaa !2995
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %209, i32 0, i32 24, !dbg !7768, !ctir !253
  %210 = load i8, i8* %preserve_xattr, align 1, !dbg !7768, !tbaa !3469
  %tobool301 = trunc i8 %210 to i1, !dbg !7768, !ctir !120
  br i1 %tobool301, label %if.then302, label %if.end328, !dbg !7769

if.then302:                                       ; preds = %if.end300
  call void @llvm.dbg.declare(metadata i8* %access_changed, metadata !7770, metadata !DIExpression()), !dbg !7772
  store i8 0, i8* %access_changed, align 1, !dbg !7772, !tbaa !3106
  %st_mode303 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !7773, !ctir !317
  %211 = load i32, i32* %st_mode303, align 8, !dbg !7773, !tbaa !3178, !ctir !133
  %and304 = and i32 %211, 128, !dbg !7775
  %tobool305 = icmp ne i32 %and304, 0, !dbg !7775
  br i1 %tobool305, label %if.end315, label %land.lhs.true306, !dbg !7776

land.lhs.true306:                                 ; preds = %if.then302
  %call307 = call i32 @geteuid() #10, !dbg !7777
  %cmp308 = icmp ne i32 %call307, 0, !dbg !7778
  br i1 %cmp308, label %if.then310, label %if.end315, !dbg !7779

if.then310:                                       ; preds = %land.lhs.true306
  %212 = load i32, i32* %dest_desc, align 4, !dbg !7780, !tbaa !2982
  %213 = load i8*, i8** %dst_name.addr, align 8, !dbg !7782, !tbaa !2995
  %call311 = call i32 @fchmod_or_lchmod(i32 %212, i8* %213, i32 384), !dbg !7783
  %cmp312 = icmp eq i32 %call311, 0, !dbg !7784
  %frombool314 = zext i1 %cmp312 to i8, !dbg !7785
  store i8 %frombool314, i8* %access_changed, align 1, !dbg !7785, !tbaa !3106
  br label %if.end315, !dbg !7786

if.end315:                                        ; preds = %if.then310, %land.lhs.true306, %if.then302
  %214 = load i8*, i8** %src_name.addr, align 8, !dbg !7787, !tbaa !2995
  %215 = load i32, i32* %source_desc, align 4, !dbg !7789, !tbaa !2982
  %216 = load i8*, i8** %dst_name.addr, align 8, !dbg !7790, !tbaa !2995
  %217 = load i32, i32* %dest_desc, align 4, !dbg !7791, !tbaa !2982
  %218 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7792, !tbaa !2995
  %call316 = call zeroext i1 @copy_attr(i8* %214, i32 %215, i8* %216, i32 %217, %struct.cp_options* %218), !dbg !7793
  br i1 %call316, label %if.end321, label %land.lhs.true317, !dbg !7794

land.lhs.true317:                                 ; preds = %if.end315
  %219 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7795, !tbaa !2995
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %219, i32 0, i32 25, !dbg !7796, !ctir !253
  %220 = load i8, i8* %require_preserve_xattr, align 8, !dbg !7796, !tbaa !3473
  %tobool318 = trunc i8 %220 to i1, !dbg !7796, !ctir !120
  br i1 %tobool318, label %if.then320, label %if.end321, !dbg !7797

if.then320:                                       ; preds = %land.lhs.true317
  store i8 0, i8* %return_val, align 1, !dbg !7798, !tbaa !3106
  br label %if.end321, !dbg !7799

if.end321:                                        ; preds = %if.then320, %land.lhs.true317, %if.end315
  %221 = load i8, i8* %access_changed, align 1, !dbg !7800, !tbaa !3106
  %tobool322 = trunc i8 %221 to i1, !dbg !7800
  br i1 %tobool322, label %if.then323, label %if.end327, !dbg !7802

if.then323:                                       ; preds = %if.end321
  %222 = load i32, i32* %dest_desc, align 4, !dbg !7803, !tbaa !2982
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !7804, !tbaa !2995
  %224 = load i32, i32* %dst_mode.addr, align 4, !dbg !7805, !tbaa !2982
  %225 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7806, !tbaa !2982
  %neg324 = xor i32 %225, -1, !dbg !7807
  %and325 = and i32 %224, %neg324, !dbg !7808
  %call326 = call i32 @fchmod_or_lchmod(i32 %222, i8* %223, i32 %and325), !dbg !7809
  br label %if.end327, !dbg !7809

if.end327:                                        ; preds = %if.then323, %if.end321
  br label %if.end328, !dbg !7810

if.end328:                                        ; preds = %if.end327, %if.end300
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !7811, !tbaa !2995
  %227 = load i32, i32* %dest_desc, align 4, !dbg !7812, !tbaa !2982
  %228 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7813, !tbaa !2995
  call void @set_author(i8* %226, i32 %227, %struct.stat* %228), !dbg !7814
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7815, !tbaa !2995
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 15, !dbg !7817, !ctir !253
  %230 = load i8, i8* %preserve_mode, align 2, !dbg !7817, !tbaa !3434
  %tobool329 = trunc i8 %230 to i1, !dbg !7817, !ctir !120
  br i1 %tobool329, label %if.then335, label %lor.lhs.false331, !dbg !7818

lor.lhs.false331:                                 ; preds = %if.end328
  %231 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7819, !tbaa !2995
  %move_mode332 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %231, i32 0, i32 9, !dbg !7820, !ctir !253
  %232 = load i8, i8* %move_mode332, align 8, !dbg !7820, !tbaa !3414
  %tobool333 = trunc i8 %232 to i1, !dbg !7820, !ctir !120
  br i1 %tobool333, label %if.then335, label %if.else345, !dbg !7821

if.then335:                                       ; preds = %lor.lhs.false331, %if.end328
  %233 = load i8*, i8** %src_name.addr, align 8, !dbg !7822, !tbaa !2995
  %234 = load i32, i32* %source_desc, align 4, !dbg !7825, !tbaa !2982
  %235 = load i8*, i8** %dst_name.addr, align 8, !dbg !7826, !tbaa !2995
  %236 = load i32, i32* %dest_desc, align 4, !dbg !7827, !tbaa !2982
  %237 = load i32, i32* %src_mode, align 4, !dbg !7828, !tbaa !2982
  %call336 = call i32 @copy_acl(i8* %233, i32 %234, i8* %235, i32 %236, i32 %237), !dbg !7829
  %cmp337 = icmp ne i32 %call336, 0, !dbg !7830
  br i1 %cmp337, label %land.lhs.true339, label %if.end344, !dbg !7831

land.lhs.true339:                                 ; preds = %if.then335
  %238 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7832, !tbaa !2995
  %require_preserve340 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %238, i32 0, i32 21, !dbg !7833, !ctir !253
  %239 = load i8, i8* %require_preserve340, align 4, !dbg !7833, !tbaa !3461
  %tobool341 = trunc i8 %239 to i1, !dbg !7833, !ctir !120
  br i1 %tobool341, label %if.then343, label %if.end344, !dbg !7834

if.then343:                                       ; preds = %land.lhs.true339
  store i8 0, i8* %return_val, align 1, !dbg !7835, !tbaa !3106
  br label %if.end344, !dbg !7836

if.end344:                                        ; preds = %if.then343, %land.lhs.true339, %if.then335
  br label %if.end391, !dbg !7837

if.else345:                                       ; preds = %lor.lhs.false331
  %240 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7838, !tbaa !2995
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %240, i32 0, i32 28, !dbg !7840, !ctir !253
  %241 = load i8, i8* %set_mode, align 1, !dbg !7840, !tbaa !3489
  %tobool346 = trunc i8 %241 to i1, !dbg !7840, !ctir !120
  br i1 %tobool346, label %if.then347, label %if.else353, !dbg !7841

if.then347:                                       ; preds = %if.else345
  %242 = load i8*, i8** %dst_name.addr, align 8, !dbg !7842, !tbaa !2995
  %243 = load i32, i32* %dest_desc, align 4, !dbg !7845, !tbaa !2982
  %244 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7846, !tbaa !2995
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %244, i32 0, i32 4, !dbg !7847, !ctir !253
  %245 = load i32, i32* %mode, align 8, !dbg !7847, !tbaa !3493, !ctir !160
  %call348 = call i32 @set_acl(i8* %242, i32 %243, i32 %245), !dbg !7848
  %cmp349 = icmp ne i32 %call348, 0, !dbg !7849
  br i1 %cmp349, label %if.then351, label %if.end352, !dbg !7850

if.then351:                                       ; preds = %if.then347
  store i8 0, i8* %return_val, align 1, !dbg !7851, !tbaa !3106
  br label %if.end352, !dbg !7852

if.end352:                                        ; preds = %if.then351, %if.then347
  br label %if.end390, !dbg !7853

if.else353:                                       ; preds = %if.else345
  %246 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7854, !tbaa !2995
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %246, i32 0, i32 17, !dbg !7856, !ctir !253
  %247 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !7856, !tbaa !3442
  %tobool354 = trunc i8 %247 to i1, !dbg !7856, !ctir !120
  br i1 %tobool354, label %land.lhs.true356, label %if.else368, !dbg !7857

land.lhs.true356:                                 ; preds = %if.else353
  %248 = load i8*, i8** %new_dst.addr, align 8, !dbg !7858, !tbaa !2995
  %249 = load i8, i8* %248, align 1, !dbg !7859, !tbaa !3106
  %tobool357 = trunc i8 %249 to i1, !dbg !7859, !ctir !120
  br i1 %tobool357, label %if.then359, label %if.else368, !dbg !7860

if.then359:                                       ; preds = %land.lhs.true356
  %250 = load i8*, i8** %dst_name.addr, align 8, !dbg !7861, !tbaa !2995
  %251 = load i32, i32* %dest_desc, align 4, !dbg !7864, !tbaa !2982
  %call360 = call i32 @cached_umask(), !dbg !7865
  %neg361 = xor i32 %call360, -1, !dbg !7866
  %and362 = and i32 438, %neg361, !dbg !7867
  %call363 = call i32 @set_acl(i8* %250, i32 %251, i32 %and362), !dbg !7868
  %cmp364 = icmp ne i32 %call363, 0, !dbg !7869
  br i1 %cmp364, label %if.then366, label %if.end367, !dbg !7870

if.then366:                                       ; preds = %if.then359
  store i8 0, i8* %return_val, align 1, !dbg !7871, !tbaa !3106
  br label %if.end367, !dbg !7872

if.end367:                                        ; preds = %if.then366, %if.then359
  br label %if.end389, !dbg !7873

if.else368:                                       ; preds = %land.lhs.true356, %if.else353
  %252 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7874, !tbaa !2982
  %tobool369 = icmp ne i32 %252, 0, !dbg !7874
  br i1 %tobool369, label %if.then370, label %if.end388, !dbg !7876

if.then370:                                       ; preds = %if.else368
  %call371 = call i32 @cached_umask(), !dbg !7877
  %neg372 = xor i32 %call371, -1, !dbg !7879
  %253 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7880, !tbaa !2982
  %and373 = and i32 %253, %neg372, !dbg !7880
  store i32 %and373, i32* %omitted_permissions.addr, align 4, !dbg !7880, !tbaa !2982
  %254 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7881, !tbaa !2982
  %tobool374 = icmp ne i32 %254, 0, !dbg !7881
  br i1 %tobool374, label %land.lhs.true375, label %if.end387, !dbg !7883

land.lhs.true375:                                 ; preds = %if.then370
  %255 = load i32, i32* %dest_desc, align 4, !dbg !7884, !tbaa !2982
  %256 = load i8*, i8** %dst_name.addr, align 8, !dbg !7885, !tbaa !2995
  %257 = load i32, i32* %dst_mode.addr, align 4, !dbg !7886, !tbaa !2982
  %call376 = call i32 @fchmod_or_lchmod(i32 %255, i8* %256, i32 %257), !dbg !7887
  %cmp377 = icmp ne i32 %call376, 0, !dbg !7888
  br i1 %cmp377, label %if.then379, label %if.end387, !dbg !7889

if.then379:                                       ; preds = %land.lhs.true375
  %call380 = call i32* @__errno_location() #15, !dbg !7890
  %258 = load i32, i32* %call380, align 4, !dbg !7890, !tbaa !2982, !ctir !7
  %call381 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.135, i64 0, i64 0)) #10, !dbg !7892
  %259 = load i8*, i8** %dst_name.addr, align 8, !dbg !7893, !tbaa !2995
  %call382 = call i8* @quotearg_style(i32 4, i8* %259), !dbg !7893
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %258, i8* %call381, i8* %call382), !dbg !7894
  %260 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7895, !tbaa !2995
  %require_preserve383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %260, i32 0, i32 21, !dbg !7897, !ctir !253
  %261 = load i8, i8* %require_preserve383, align 4, !dbg !7897, !tbaa !3461
  %tobool384 = trunc i8 %261 to i1, !dbg !7897, !ctir !120
  br i1 %tobool384, label %if.then385, label %if.end386, !dbg !7898

if.then385:                                       ; preds = %if.then379
  store i8 0, i8* %return_val, align 1, !dbg !7899, !tbaa !3106
  br label %if.end386, !dbg !7900

if.end386:                                        ; preds = %if.then385, %if.then379
  br label %if.end387, !dbg !7901

if.end387:                                        ; preds = %if.end386, %land.lhs.true375, %if.then370
  br label %if.end388, !dbg !7902

if.end388:                                        ; preds = %if.end387, %if.else368
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.end367
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.end352
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %if.end344
  br label %close_src_and_dst_desc, !dbg !7820

close_src_and_dst_desc:                           ; preds = %if.end391, %sw.bb, %if.then281, %if.then259, %if.then251, %if.then238, %if.then154, %if.then132, %if.then39
  call void @llvm.dbg.label(metadata !7903), !dbg !7904
  %262 = load i32, i32* %dest_desc, align 4, !dbg !7905, !tbaa !2982
  %call392 = call i32 @close(i32 %262), !dbg !7907
  %cmp393 = icmp slt i32 %call392, 0, !dbg !7908
  br i1 %cmp393, label %if.then395, label %if.end399, !dbg !7909

if.then395:                                       ; preds = %close_src_and_dst_desc
  %call396 = call i32* @__errno_location() #15, !dbg !7910
  %263 = load i32, i32* %call396, align 4, !dbg !7910, !tbaa !2982, !ctir !7
  %call397 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !7912
  %264 = load i8*, i8** %dst_name.addr, align 8, !dbg !7913, !tbaa !2995
  %call398 = call i8* @quotearg_style(i32 4, i8* %264), !dbg !7913
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %263, i8* %call397, i8* %call398), !dbg !7914
  store i8 0, i8* %return_val, align 1, !dbg !7915, !tbaa !3106
  br label %if.end399, !dbg !7916

if.end399:                                        ; preds = %if.then395, %close_src_and_dst_desc
  br label %close_src_desc, !dbg !7917

close_src_desc:                                   ; preds = %if.end399, %if.end125, %if.else, %if.then65, %if.then49, %if.then17, %if.then8
  call void @llvm.dbg.label(metadata !7918), !dbg !7919
  %265 = load i32, i32* %source_desc, align 4, !dbg !7920, !tbaa !2982
  %call400 = call i32 @close(i32 %265), !dbg !7922
  %cmp401 = icmp slt i32 %call400, 0, !dbg !7923
  br i1 %cmp401, label %if.then403, label %if.end407, !dbg !7924

if.then403:                                       ; preds = %close_src_desc
  %call404 = call i32* @__errno_location() #15, !dbg !7925
  %266 = load i32, i32* %call404, align 4, !dbg !7925, !tbaa !2982, !ctir !7
  %call405 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !7927
  %267 = load i8*, i8** %src_name.addr, align 8, !dbg !7928, !tbaa !2995
  %call406 = call i8* @quotearg_style(i32 4, i8* %267), !dbg !7928
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %266, i8* %call405, i8* %call406), !dbg !7929
  store i8 0, i8* %return_val, align 1, !dbg !7930, !tbaa !3106
  br label %if.end407, !dbg !7931

if.end407:                                        ; preds = %if.then403, %close_src_desc
  %268 = load i8*, i8** %buf_alloc, align 8, !dbg !7932, !tbaa !2995
  call void @free(i8* %268) #10, !dbg !7933
  %269 = load i8*, i8** %name_alloc, align 8, !dbg !7934, !tbaa !2995
  call void @free(i8* %269) #10, !dbg !7935
  %270 = load i8, i8* %return_val, align 1, !dbg !7936, !tbaa !3106
  %tobool408 = trunc i8 %270 to i1, !dbg !7936
  store i1 %tobool408, i1* %retval, align 1, !dbg !7937
  br label %return, !dbg !7937

return:                                           ; preds = %if.end407, %if.then
  %271 = load i1, i1* %retval, align 1, !dbg !7938
  ret i1 %271, !dbg !7938
}

; Function Attrs: nounwind
declare dso_local i32 @mknod(i8*, i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @mkfifo(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_fscreatecon_or_die() #4 !dbg !7939 !ctir !134 {
entry:
  %call = call i32 @setfscreatecon(i8* null), !dbg !7940
  %cmp = icmp ne i32 %call, 0, !dbg !7942
  br i1 %cmp, label %if.then, label %if.end, !dbg !7943

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7944
  %0 = load i32, i32* %call1, align 4, !dbg !7944, !tbaa !2982, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.75, i64 0, i64 0)) #10, !dbg !7944
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %0, i8* %call2), !dbg !7944
  unreachable, !dbg !7944

if.end:                                           ; preds = %entry
  ret void, !dbg !7945
}

; Function Attrs: nounwind
declare dso_local i32 @lchown(i8*, i32, i32) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @chown_failure_ok(%struct.cp_options* %x) #9 !dbg !7946 !ctir !303 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7947, metadata !DIExpression()), !dbg !7948
  %call = call i32* @__errno_location() #15, !dbg !7949
  %0 = load i32, i32* %call, align 4, !dbg !7949, !tbaa !2982, !ctir !7
  %cmp = icmp eq i32 %0, 1, !dbg !7950
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7951

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7952
  %1 = load i32, i32* %call1, align 4, !dbg !7952, !tbaa !2982, !ctir !7
  %cmp2 = icmp eq i32 %1, 22, !dbg !7953
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7954

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7955, !tbaa !2995
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 11, !dbg !7956, !ctir !253
  %3 = load i8, i8* %chown_privileges, align 2, !dbg !7956, !tbaa !7957
  %tobool = trunc i8 %3 to i1, !dbg !7956, !ctir !120
  %lnot = xor i1 %tobool, true, !dbg !7958
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7959
  ret i1 %4, !dbg !7960
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @utimens_symlink(i8* %file, %struct.timespec* %timespec) #4 !dbg !7961 !ctir !469 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %err = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !7962, metadata !DIExpression()), !dbg !7963
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !7964, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7966, metadata !DIExpression()), !dbg !7967
  %0 = load i8*, i8** %file.addr, align 8, !dbg !7968, !tbaa !2995
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !7969, !tbaa !2995
  %call = call i32 @lutimens(i8* %0, %struct.timespec* %1), !dbg !7970
  store i32 %call, i32* %err, align 4, !dbg !7967, !tbaa !2982
  %2 = load i32, i32* %err, align 4, !dbg !7971, !tbaa !2982
  %tobool = icmp ne i32 %2, 0, !dbg !7971
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7973

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7974
  %3 = load i32, i32* %call1, align 4, !dbg !7974, !tbaa !2982, !ctir !7
  %cmp = icmp eq i32 %3, 38, !dbg !7975
  br i1 %cmp, label %if.then, label %if.end, !dbg !7976

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %err, align 4, !dbg !7977, !tbaa !2982
  br label %if.end, !dbg !7978

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i32, i32* %err, align 4, !dbg !7979, !tbaa !2982
  ret i32 %4, !dbg !7980
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_owner(%struct.cp_options* %x, i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb, i1 zeroext %new_dst, %struct.stat* %dst_sb) #4 !dbg !7981 !ctir !473 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  %new_dst.addr = alloca i8, align 1
  %dst_sb.addr = alloca %struct.stat*, align 8
  %uid = alloca i32, align 4, !ctir !475
  %gid = alloca i32, align 4, !ctir !476
  %old_mode = alloca i32, align 4, !ctir !160
  %new_mode = alloca i32, align 4, !ctir !160
  %restrictive_temp_mode = alloca i32, align 4, !ctir !160
  %saved_errno = alloca i32, align 4, !ctir !7
  %__x = alloca i32, align 4, !ctir !7
  %saved_errno54 = alloca i32, align 4, !ctir !7
  %__x56 = alloca i32, align 4, !ctir !7
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7982, metadata !DIExpression()), !dbg !7983
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7984, metadata !DIExpression()), !dbg !7985
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !7986, metadata !DIExpression()), !dbg !7987
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7988, metadata !DIExpression()), !dbg !7989
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !7990, metadata !DIExpression()), !dbg !7991
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !7992, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !7994, metadata !DIExpression()), !dbg !7995
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7996, !tbaa !2995
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 4, !dbg !7997, !ctir !316
  %1 = load i32, i32* %st_uid, align 4, !dbg !7997, !tbaa !6223, !ctir !326
  store i32 %1, i32* %uid, align 4, !dbg !7995, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %gid, metadata !7998, metadata !DIExpression()), !dbg !7999
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !8000, !tbaa !2995
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 5, !dbg !8001, !ctir !316
  %3 = load i32, i32* %st_gid, align 8, !dbg !8001, !tbaa !6225, !ctir !328
  store i32 %3, i32* %gid, align 4, !dbg !7999, !tbaa !2982
  %4 = load i8, i8* %new_dst.addr, align 1, !dbg !8002, !tbaa !3106
  %tobool = trunc i8 %4 to i1, !dbg !8002
  br i1 %tobool, label %if.end20, label %land.lhs.true, !dbg !8004

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8005, !tbaa !2995
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 15, !dbg !8006, !ctir !253
  %6 = load i8, i8* %preserve_mode, align 2, !dbg !8006, !tbaa !3434
  %tobool1 = trunc i8 %6 to i1, !dbg !8006, !ctir !120
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !8007

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8008, !tbaa !2995
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 9, !dbg !8009, !ctir !253
  %8 = load i8, i8* %move_mode, align 8, !dbg !8009, !tbaa !3414
  %tobool2 = trunc i8 %8 to i1, !dbg !8009, !ctir !120
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !8010

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8011, !tbaa !2995
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 28, !dbg !8012, !ctir !253
  %10 = load i8, i8* %set_mode, align 1, !dbg !8012, !tbaa !3489
  %tobool4 = trunc i8 %10 to i1, !dbg !8012, !ctir !120
  br i1 %tobool4, label %if.then, label %if.end20, !dbg !8013

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %old_mode, metadata !8014, metadata !DIExpression()), !dbg !8016
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !8017, !tbaa !2995
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !8018, !ctir !316
  %12 = load i32, i32* %st_mode, align 8, !dbg !8018, !tbaa !3178, !ctir !133
  store i32 %12, i32* %old_mode, align 4, !dbg !8016, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %new_mode, metadata !8019, metadata !DIExpression()), !dbg !8020
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8021, !tbaa !2995
  %preserve_mode5 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !8022, !ctir !253
  %14 = load i8, i8* %preserve_mode5, align 2, !dbg !8022, !tbaa !3434
  %tobool6 = trunc i8 %14 to i1, !dbg !8022, !ctir !120
  br i1 %tobool6, label %cond.true, label %lor.lhs.false7, !dbg !8023

lor.lhs.false7:                                   ; preds = %if.then
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8024, !tbaa !2995
  %move_mode8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 9, !dbg !8025, !ctir !253
  %16 = load i8, i8* %move_mode8, align 8, !dbg !8025, !tbaa !3414
  %tobool9 = trunc i8 %16 to i1, !dbg !8025, !ctir !120
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !8021

cond.true:                                        ; preds = %lor.lhs.false7, %if.then
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !8026, !tbaa !2995
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !8027, !ctir !316
  %18 = load i32, i32* %st_mode10, align 8, !dbg !8027, !tbaa !3178, !ctir !133
  br label %cond.end, !dbg !8021

cond.false:                                       ; preds = %lor.lhs.false7
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8028, !tbaa !2995
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 4, !dbg !8029, !ctir !253
  %20 = load i32, i32* %mode, align 8, !dbg !8029, !tbaa !3493, !ctir !160
  br label %cond.end, !dbg !8021

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %20, %cond.false ], !dbg !8021
  store i32 %cond, i32* %new_mode, align 4, !dbg !8020, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %restrictive_temp_mode, metadata !8030, metadata !DIExpression()), !dbg !8031
  %21 = load i32, i32* %old_mode, align 4, !dbg !8032, !tbaa !2982
  %22 = load i32, i32* %new_mode, align 4, !dbg !8033, !tbaa !2982
  %and = and i32 %21, %22, !dbg !8034
  %and11 = and i32 %and, 448, !dbg !8035
  store i32 %and11, i32* %restrictive_temp_mode, align 4, !dbg !8031, !tbaa !2982
  %23 = load i8*, i8** %dst_name.addr, align 8, !dbg !8036, !tbaa !2995
  %24 = load i32, i32* %dest_desc.addr, align 4, !dbg !8038, !tbaa !2982
  %25 = load i32, i32* %restrictive_temp_mode, align 4, !dbg !8039, !tbaa !2982
  %call = call i32 @qset_acl(i8* %23, i32 %24, i32 %25), !dbg !8040
  %cmp = icmp ne i32 %call, 0, !dbg !8041
  br i1 %cmp, label %if.then12, label %if.end19, !dbg !8042

if.then12:                                        ; preds = %cond.end
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8043, !tbaa !2995
  %call13 = call zeroext i1 @owner_failure_ok(%struct.cp_options* %26), !dbg !8046
  br i1 %call13, label %if.end, label %if.then14, !dbg !8047

if.then14:                                        ; preds = %if.then12
  %call15 = call i32* @__errno_location() #15, !dbg !8048
  %27 = load i32, i32* %call15, align 4, !dbg !8048, !tbaa !2982, !ctir !7
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76, i64 0, i64 0)) #10, !dbg !8049
  %28 = load i8*, i8** %dst_name.addr, align 8, !dbg !8050, !tbaa !2995
  %call17 = call i8* @quotearg_style(i32 4, i8* %28), !dbg !8050
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %27, i8* %call16, i8* %call17), !dbg !8051
  br label %if.end, !dbg !8051

if.end:                                           ; preds = %if.then14, %if.then12
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8052, !tbaa !2995
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 21, !dbg !8053, !ctir !253
  %30 = load i8, i8* %require_preserve, align 4, !dbg !8053, !tbaa !3461
  %tobool18 = trunc i8 %30 to i1, !dbg !8053, !ctir !120
  %conv = zext i1 %tobool18 to i32, !dbg !8052
  %sub = sub nsw i32 0, %conv, !dbg !8054
  store i32 %sub, i32* %retval, align 4, !dbg !8055
  br label %return, !dbg !8055

if.end19:                                         ; preds = %cond.end
  br label %if.end20, !dbg !8056

if.end20:                                         ; preds = %if.end19, %lor.lhs.false3, %entry
  %31 = load i32, i32* %dest_desc.addr, align 4, !dbg !8057, !tbaa !2982
  %cmp21 = icmp ne i32 %31, -1, !dbg !8059
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !8060

if.then23:                                        ; preds = %if.end20
  %32 = load i32, i32* %dest_desc.addr, align 4, !dbg !8061, !tbaa !2982
  %33 = load i32, i32* %uid, align 4, !dbg !8064, !tbaa !2982
  %34 = load i32, i32* %gid, align 4, !dbg !8065, !tbaa !2982
  %call24 = call i32 @fchown(i32 %32, i32 %33, i32 %34) #10, !dbg !8066
  %cmp25 = icmp eq i32 %call24, 0, !dbg !8067
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !8068

if.then27:                                        ; preds = %if.then23
  store i32 1, i32* %retval, align 4, !dbg !8069
  br label %return, !dbg !8069

if.end28:                                         ; preds = %if.then23
  %call29 = call i32* @__errno_location() #15, !dbg !8070
  %35 = load i32, i32* %call29, align 4, !dbg !8070, !tbaa !2982, !ctir !7
  %cmp30 = icmp eq i32 %35, 1, !dbg !8072
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !8073

lor.lhs.false32:                                  ; preds = %if.end28
  %call33 = call i32* @__errno_location() #15, !dbg !8074
  %36 = load i32, i32* %call33, align 4, !dbg !8074, !tbaa !2982, !ctir !7
  %cmp34 = icmp eq i32 %36, 22, !dbg !8075
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !8076

if.then36:                                        ; preds = %lor.lhs.false32, %if.end28
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !8077, metadata !DIExpression()), !dbg !8079
  %call37 = call i32* @__errno_location() #15, !dbg !8080
  %37 = load i32, i32* %call37, align 4, !dbg !8080, !tbaa !2982, !ctir !7
  store i32 %37, i32* %saved_errno, align 4, !dbg !8079, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !8081, metadata !DIExpression()), !dbg !8083
  %38 = load i32, i32* %dest_desc.addr, align 4, !dbg !8083, !tbaa !2982
  %39 = load i32, i32* %gid, align 4, !dbg !8083, !tbaa !2982
  %call38 = call i32 @fchown(i32 %38, i32 -1, i32 %39) #10, !dbg !8083
  store i32 %call38, i32* %__x, align 4, !dbg !8083, !tbaa !2982
  %40 = load i32, i32* %__x, align 4, !dbg !8083, !tbaa !2982
  %41 = load i32, i32* %saved_errno, align 4, !dbg !8084, !tbaa !2982
  %call39 = call i32* @__errno_location() #15, !dbg !8085
  store i32 %41, i32* %call39, align 4, !dbg !8086, !tbaa !2982, !ctir !7
  br label %if.end40, !dbg !8087

if.end40:                                         ; preds = %if.then36, %lor.lhs.false32
  br label %if.end60, !dbg !8088

if.else:                                          ; preds = %if.end20
  %42 = load i8*, i8** %dst_name.addr, align 8, !dbg !8089, !tbaa !2995
  %43 = load i32, i32* %uid, align 4, !dbg !8092, !tbaa !2982
  %44 = load i32, i32* %gid, align 4, !dbg !8093, !tbaa !2982
  %call41 = call i32 @lchown(i8* %42, i32 %43, i32 %44) #10, !dbg !8094
  %cmp42 = icmp eq i32 %call41, 0, !dbg !8095
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !8096

if.then44:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !8097
  br label %return, !dbg !8097

if.end45:                                         ; preds = %if.else
  %call46 = call i32* @__errno_location() #15, !dbg !8098
  %45 = load i32, i32* %call46, align 4, !dbg !8098, !tbaa !2982, !ctir !7
  %cmp47 = icmp eq i32 %45, 1, !dbg !8100
  br i1 %cmp47, label %if.then53, label %lor.lhs.false49, !dbg !8101

lor.lhs.false49:                                  ; preds = %if.end45
  %call50 = call i32* @__errno_location() #15, !dbg !8102
  %46 = load i32, i32* %call50, align 4, !dbg !8102, !tbaa !2982, !ctir !7
  %cmp51 = icmp eq i32 %46, 22, !dbg !8103
  br i1 %cmp51, label %if.then53, label %if.end59, !dbg !8104

if.then53:                                        ; preds = %lor.lhs.false49, %if.end45
  call void @llvm.dbg.declare(metadata i32* %saved_errno54, metadata !8105, metadata !DIExpression()), !dbg !8107
  %call55 = call i32* @__errno_location() #15, !dbg !8108
  %47 = load i32, i32* %call55, align 4, !dbg !8108, !tbaa !2982, !ctir !7
  store i32 %47, i32* %saved_errno54, align 4, !dbg !8107, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %__x56, metadata !8109, metadata !DIExpression()), !dbg !8111
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !8111, !tbaa !2995
  %49 = load i32, i32* %gid, align 4, !dbg !8111, !tbaa !2982
  %call57 = call i32 @lchown(i8* %48, i32 -1, i32 %49) #10, !dbg !8111
  store i32 %call57, i32* %__x56, align 4, !dbg !8111, !tbaa !2982
  %50 = load i32, i32* %__x56, align 4, !dbg !8111, !tbaa !2982
  %51 = load i32, i32* %saved_errno54, align 4, !dbg !8112, !tbaa !2982
  %call58 = call i32* @__errno_location() #15, !dbg !8113
  store i32 %51, i32* %call58, align 4, !dbg !8114, !tbaa !2982, !ctir !7
  br label %if.end59, !dbg !8115

if.end59:                                         ; preds = %if.then53, %lor.lhs.false49
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end40
  %52 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8116, !tbaa !2995
  %call61 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %52) #14, !dbg !8118
  br i1 %call61, label %if.end70, label %if.then62, !dbg !8119

if.then62:                                        ; preds = %if.end60
  %call63 = call i32* @__errno_location() #15, !dbg !8120
  %53 = load i32, i32* %call63, align 4, !dbg !8120, !tbaa !2982, !ctir !7
  %call64 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.132, i64 0, i64 0)) #10, !dbg !8122
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !8123, !tbaa !2995
  %call65 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !8123
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call64, i8* %call65), !dbg !8124
  %55 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8125, !tbaa !2995
  %require_preserve66 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %55, i32 0, i32 21, !dbg !8127, !ctir !253
  %56 = load i8, i8* %require_preserve66, align 4, !dbg !8127, !tbaa !3461
  %tobool67 = trunc i8 %56 to i1, !dbg !8127, !ctir !120
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !8128

if.then68:                                        ; preds = %if.then62
  store i32 -1, i32* %retval, align 4, !dbg !8129
  br label %return, !dbg !8129

if.end69:                                         ; preds = %if.then62
  br label %if.end70, !dbg !8130

if.end70:                                         ; preds = %if.end69, %if.end60
  store i32 0, i32* %retval, align 4, !dbg !8131
  br label %return, !dbg !8131

return:                                           ; preds = %if.end70, %if.then68, %if.then44, %if.then27, %if.end
  %57 = load i32, i32* %retval, align 4, !dbg !8132
  ret i32 %57, !dbg !8132
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_attr(i8* %src_path, i32 %src_fd, i8* %dst_path, i32 %dst_fd, %struct.cp_options* %x) #4 !dbg !8133 !ctir !477 {
entry:
  %src_path.addr = alloca i8*, align 8
  %src_fd.addr = alloca i32, align 4
  %dst_path.addr = alloca i8*, align 8
  %dst_fd.addr = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %ret = alloca i32, align 4, !ctir !7
  %all_errors = alloca i8, align 1, !ctir !120
  %some_errors = alloca i8, align 1, !ctir !120
  %selinux_done = alloca i8, align 1, !ctir !120
  %ctx = alloca %struct.error_context, align 8, !ctir !482
  store i8* %src_path, i8** %src_path.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %src_path.addr, metadata !8134, metadata !DIExpression()), !dbg !8135
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8136, metadata !DIExpression()), !dbg !8137
  store i8* %dst_path, i8** %dst_path.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_path.addr, metadata !8138, metadata !DIExpression()), !dbg !8139
  store i32 %dst_fd, i32* %dst_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dst_fd.addr, metadata !8140, metadata !DIExpression()), !dbg !8141
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !8142, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8144, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !8146, metadata !DIExpression()), !dbg !8147
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8148, !tbaa !2995
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !8149, !ctir !253
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !8149, !tbaa !3457
  %tobool = trunc i8 %1 to i1, !dbg !8149, !ctir !120
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !8150

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8151, !tbaa !2995
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 25, !dbg !8152, !ctir !253
  %3 = load i8, i8* %require_preserve_xattr, align 8, !dbg !8152, !tbaa !3473
  %tobool1 = trunc i8 %3 to i1, !dbg !8152, !ctir !120
  br label %lor.end, !dbg !8150

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool1, %lor.rhs ]
  %frombool = zext i1 %4 to i8, !dbg !8147
  store i8 %frombool, i8* %all_errors, align 1, !dbg !8147, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !8153, metadata !DIExpression()), !dbg !8154
  %5 = load i8, i8* %all_errors, align 1, !dbg !8155, !tbaa !3106
  %tobool2 = trunc i8 %5 to i1, !dbg !8155
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !8156

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8157, !tbaa !2995
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !8158, !ctir !253
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !8158, !tbaa !3453
  %tobool3 = trunc i8 %7 to i1, !dbg !8158, !ctir !120
  %lnot = xor i1 %tobool3, true, !dbg !8159
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !8160
  %frombool4 = zext i1 %8 to i8, !dbg !8154
  store i8 %frombool4, i8* %some_errors, align 1, !dbg !8154, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %selinux_done, metadata !8161, metadata !DIExpression()), !dbg !8162
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8163, !tbaa !2995
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 22, !dbg !8164, !ctir !253
  %10 = load i8, i8* %preserve_security_context, align 1, !dbg !8164, !tbaa !3207
  %tobool5 = trunc i8 %10 to i1, !dbg !8164, !ctir !120
  br i1 %tobool5, label %lor.end8, label %lor.rhs6, !dbg !8165

lor.rhs6:                                         ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8166, !tbaa !2995
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 18, !dbg !8167, !ctir !253
  %12 = load i8, i8* %set_security_context, align 1, !dbg !8167, !tbaa !3210
  %tobool7 = trunc i8 %12 to i1, !dbg !8167, !ctir !120
  br label %lor.end8, !dbg !8165

lor.end8:                                         ; preds = %lor.rhs6, %land.end
  %13 = phi i1 [ true, %land.end ], [ %tobool7, %lor.rhs6 ]
  %frombool9 = zext i1 %13 to i8, !dbg !8162
  store i8 %frombool9, i8* %selinux_done, align 1, !dbg !8162, !tbaa !3106
  call void @llvm.dbg.declare(metadata %struct.error_context* %ctx, metadata !8168, metadata !DIExpression()), !dbg !8169
  %error = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 0, !dbg !8170
  %14 = load i8, i8* %all_errors, align 1, !dbg !8171, !tbaa !3106
  %tobool10 = trunc i8 %14 to i1, !dbg !8171
  %15 = zext i1 %tobool10 to i64, !dbg !8171
  %cond = select i1 %tobool10, void (%struct.error_context*, i8*, ...)* @copy_attr_allerror, void (%struct.error_context*, i8*, ...)* @copy_attr_error, !dbg !8171
  store void (%struct.error_context*, i8*, ...)* %cond, void (%struct.error_context*, i8*, ...)** %error, align 8, !dbg !8170, !tbaa !8172
  %quote = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 1, !dbg !8170
  store i8* (%struct.error_context*, i8*)* @copy_attr_quote, i8* (%struct.error_context*, i8*)** %quote, align 8, !dbg !8170, !tbaa !8174
  %quote_free = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 2, !dbg !8170
  store void (%struct.error_context*, i8*)* @copy_attr_free, void (%struct.error_context*, i8*)** %quote_free, align 8, !dbg !8170, !tbaa !8175
  %16 = load i32, i32* %src_fd.addr, align 4, !dbg !8176, !tbaa !2982
  %cmp = icmp sle i32 0, %16, !dbg !8178
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !8179

land.lhs.true:                                    ; preds = %lor.end8
  %17 = load i32, i32* %dst_fd.addr, align 4, !dbg !8180, !tbaa !2982
  %cmp11 = icmp sle i32 0, %17, !dbg !8181
  br i1 %cmp11, label %if.then, label %if.else, !dbg !8182

if.then:                                          ; preds = %land.lhs.true
  %18 = load i8*, i8** %src_path.addr, align 8, !dbg !8183, !tbaa !2995
  %19 = load i32, i32* %src_fd.addr, align 4, !dbg !8184, !tbaa !2982
  %20 = load i8*, i8** %dst_path.addr, align 8, !dbg !8185, !tbaa !2995
  %21 = load i32, i32* %dst_fd.addr, align 4, !dbg !8186, !tbaa !2982
  %22 = load i8, i8* %selinux_done, align 1, !dbg !8187, !tbaa !3106
  %tobool12 = trunc i8 %22 to i1, !dbg !8187
  %23 = zext i1 %tobool12 to i64, !dbg !8187
  %cond13 = select i1 %tobool12, i32 (i8*, %struct.error_context*)* @check_selinux_attr, i32 (i8*, %struct.error_context*)* null, !dbg !8187
  %24 = load i8, i8* %all_errors, align 1, !dbg !8188, !tbaa !3106
  %tobool14 = trunc i8 %24 to i1, !dbg !8188
  br i1 %tobool14, label %cond.true, label %lor.lhs.false, !dbg !8189

lor.lhs.false:                                    ; preds = %if.then
  %25 = load i8, i8* %some_errors, align 1, !dbg !8190, !tbaa !3106
  %tobool15 = trunc i8 %25 to i1, !dbg !8190
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !8188

cond.true:                                        ; preds = %lor.lhs.false, %if.then
  br label %cond.end, !dbg !8188

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !8188

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond16 = phi %struct.error_context* [ %ctx, %cond.true ], [ null, %cond.false ], !dbg !8188
  %call = call i32 @attr_copy_fd(i8* %18, i32 %19, i8* %20, i32 %21, i32 (i8*, %struct.error_context*)* %cond13, %struct.error_context* %cond16), !dbg !8191
  store i32 %call, i32* %ret, align 4, !dbg !8192, !tbaa !2982
  br label %if.end, !dbg !8193

if.else:                                          ; preds = %land.lhs.true, %lor.end8
  %26 = load i8*, i8** %src_path.addr, align 8, !dbg !8194, !tbaa !2995
  %27 = load i8*, i8** %dst_path.addr, align 8, !dbg !8195, !tbaa !2995
  %28 = load i8, i8* %selinux_done, align 1, !dbg !8196, !tbaa !3106
  %tobool17 = trunc i8 %28 to i1, !dbg !8196
  %29 = zext i1 %tobool17 to i64, !dbg !8196
  %cond18 = select i1 %tobool17, i32 (i8*, %struct.error_context*)* @check_selinux_attr, i32 (i8*, %struct.error_context*)* null, !dbg !8196
  %30 = load i8, i8* %all_errors, align 1, !dbg !8197, !tbaa !3106
  %tobool19 = trunc i8 %30 to i1, !dbg !8197
  br i1 %tobool19, label %cond.true22, label %lor.lhs.false20, !dbg !8198

lor.lhs.false20:                                  ; preds = %if.else
  %31 = load i8, i8* %some_errors, align 1, !dbg !8199, !tbaa !3106
  %tobool21 = trunc i8 %31 to i1, !dbg !8199
  br i1 %tobool21, label %cond.true22, label %cond.false23, !dbg !8197

cond.true22:                                      ; preds = %lor.lhs.false20, %if.else
  br label %cond.end24, !dbg !8197

cond.false23:                                     ; preds = %lor.lhs.false20
  br label %cond.end24, !dbg !8197

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi %struct.error_context* [ %ctx, %cond.true22 ], [ null, %cond.false23 ], !dbg !8197
  %call26 = call i32 @attr_copy_file(i8* %26, i8* %27, i32 (i8*, %struct.error_context*)* %cond18, %struct.error_context* %cond25), !dbg !8200
  store i32 %call26, i32* %ret, align 4, !dbg !8201, !tbaa !2982
  br label %if.end

if.end:                                           ; preds = %cond.end24, %cond.end
  %32 = load i32, i32* %ret, align 4, !dbg !8202, !tbaa !2982
  %cmp27 = icmp eq i32 %32, 0, !dbg !8203
  ret i1 %cmp27, !dbg !8204
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_author(i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb) #4 !dbg !8205 !ctir !508 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8206, metadata !DIExpression()), !dbg !8207
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !8208, metadata !DIExpression()), !dbg !8209
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !8210, metadata !DIExpression()), !dbg !8211
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !8212, !tbaa !2995
  %1 = load i32, i32* %dest_desc.addr, align 4, !dbg !8213, !tbaa !2982
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !8214, !tbaa !2995
  ret void, !dbg !8215
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @cached_umask() #4 !dbg !513 !ctir !305 {
entry:
  %0 = load i32, i32* @cached_umask.mask, align 4, !dbg !8216, !tbaa !2982
  %cmp = icmp eq i32 %0, -1, !dbg !8218
  br i1 %cmp, label %if.then, label %if.end, !dbg !8219

if.then:                                          ; preds = %entry
  %call = call i32 @umask(i32 0) #10, !dbg !8220
  store i32 %call, i32* @cached_umask.mask, align 4, !dbg !8222, !tbaa !2982
  %1 = load i32, i32* @cached_umask.mask, align 4, !dbg !8223, !tbaa !2982
  %call1 = call i32 @umask(i32 %1) #10, !dbg !8224
  br label %if.end, !dbg !8225

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* @cached_umask.mask, align 4, !dbg !8226, !tbaa !2982
  ret i32 %2, !dbg !8227
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_allerror(%struct.error_context* %ctx, i8* %fmt, ...) #4 !dbg !8228 !ctir !479 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %fmt.addr = alloca i8*, align 8
  %err = alloca i32, align 4, !ctir !7
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !495
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !8229, metadata !DIExpression()), !dbg !8230
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !8231, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8233, metadata !DIExpression()), !dbg !8234
  %call = call i32* @__errno_location() #15, !dbg !8235
  %0 = load i32, i32* %call, align 4, !dbg !8235, !tbaa !2982, !ctir !7
  store i32 %0, i32* %err, align 4, !dbg !8234, !tbaa !2982
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !8236, metadata !DIExpression()), !dbg !8237
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !8238
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !8238
  call void @llvm.va_start(i8* %arraydecay1), !dbg !8238
  %1 = load i32, i32* %err, align 4, !dbg !8239, !tbaa !2982
  %2 = load i8*, i8** %fmt.addr, align 8, !dbg !8240, !tbaa !2995
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !8241
  call void @verror(i32 0, i32 %1, i8* %2, %struct.__va_list_tag* %arraydecay2), !dbg !8242
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !8243
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !8243
  call void @llvm.va_end(i8* %arraydecay34), !dbg !8243
  ret void, !dbg !8244
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_error(%struct.error_context* %ctx, i8* %fmt, ...) #4 !dbg !8245 !ctir !479 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %fmt.addr = alloca i8*, align 8
  %err = alloca i32, align 4, !ctir !7
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !495
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !8246, metadata !DIExpression()), !dbg !8247
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !8248, metadata !DIExpression()), !dbg !8249
  %call = call i32* @__errno_location() #15, !dbg !8250
  %0 = load i32, i32* %call, align 4, !dbg !8250, !tbaa !2982, !ctir !7
  %call1 = call zeroext i1 @errno_unsupported(i32 %0), !dbg !8252
  br i1 %call1, label %if.end, label %if.then, !dbg !8253

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8254, metadata !DIExpression()), !dbg !8256
  %call2 = call i32* @__errno_location() #15, !dbg !8257
  %1 = load i32, i32* %call2, align 4, !dbg !8257, !tbaa !2982, !ctir !7
  store i32 %1, i32* %err, align 4, !dbg !8256, !tbaa !2982
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !8258, metadata !DIExpression()), !dbg !8259
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !8260
  %arraydecay3 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !8260
  call void @llvm.va_start(i8* %arraydecay3), !dbg !8260
  %2 = load i32, i32* %err, align 4, !dbg !8261, !tbaa !2982
  %3 = load i8*, i8** %fmt.addr, align 8, !dbg !8262, !tbaa !2995
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !8263
  call void @verror(i32 0, i32 %2, i8* %3, %struct.__va_list_tag* %arraydecay4), !dbg !8264
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !8265
  %arraydecay56 = bitcast %struct.__va_list_tag* %arraydecay5 to i8*, !dbg !8265
  call void @llvm.va_end(i8* %arraydecay56), !dbg !8265
  br label %if.end, !dbg !8266

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8267
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @copy_attr_quote(%struct.error_context* %ctx, i8* %str) #4 !dbg !8268 !ctir !491 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !8269, metadata !DIExpression()), !dbg !8270
  store i8* %str, i8** %str.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !8271, metadata !DIExpression()), !dbg !8272
  %0 = load i8*, i8** %str.addr, align 8, !dbg !8273, !tbaa !2995
  %call = call i8* @quotearg_style(i32 4, i8* %0), !dbg !8273
  ret i8* %call, !dbg !8274
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_free(%struct.error_context* %ctx, i8* %str) #4 !dbg !8275 !ctir !479 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !8276, metadata !DIExpression()), !dbg !8277
  store i8* %str, i8** %str.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !8278, metadata !DIExpression()), !dbg !8279
  ret void, !dbg !8280
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @check_selinux_attr(i8* %name, %struct.error_context* %ctx) #4 !dbg !8281 !ctir !506 {
entry:
  %name.addr = alloca i8*, align 8
  %ctx.addr = alloca %struct.error_context*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8282, metadata !DIExpression()), !dbg !8283
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !8284, metadata !DIExpression()), !dbg !8285
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8286, !tbaa !2995
  %call = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i64 0, i64 0), i64 16) #14, !dbg !8286
  %tobool = icmp ne i32 %call, 0, !dbg !8286
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8287

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8288, !tbaa !2995
  %2 = load %struct.error_context*, %struct.error_context** %ctx.addr, align 8, !dbg !8289, !tbaa !2995
  %call1 = call i32 @attr_copy_check_permissions(i8* %1, %struct.error_context* %2), !dbg !8290
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8287
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !8291
  %land.ext = zext i1 %3 to i32, !dbg !8287
  ret i32 %land.ext, !dbg !8292
}

declare dso_local i32 @attr_copy_fd(i8*, i32, i8*, i32, i32 (i8*, %struct.error_context*)*, %struct.error_context*) #3

declare dso_local i32 @attr_copy_file(i8*, i8*, i32 (i8*, %struct.error_context*)*, %struct.error_context*) #3

declare dso_local i32 @attr_copy_check_permissions(i8*, %struct.error_context*) #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @owner_failure_ok(%struct.cp_options* %x) #4 !dbg !8293 !ctir !303 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !8294, metadata !DIExpression()), !dbg !8295
  %call = call i32* @__errno_location() #15, !dbg !8296
  %0 = load i32, i32* %call, align 4, !dbg !8296, !tbaa !2982, !ctir !7
  %cmp = icmp eq i32 %0, 1, !dbg !8297
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !8298

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !8299
  %1 = load i32, i32* %call1, align 4, !dbg !8299, !tbaa !2982, !ctir !7
  %cmp2 = icmp eq i32 %1, 22, !dbg !8300
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !8301

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8302, !tbaa !2995
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !8303, !ctir !253
  %3 = load i8, i8* %owner_privileges, align 1, !dbg !8303, !tbaa !8304
  %tobool = trunc i8 %3 to i1, !dbg !8303, !ctir !120
  %lnot = xor i1 %tobool, true, !dbg !8305
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !8306
  ret i1 %4, !dbg !8307
}

; Function Attrs: nounwind
declare dso_local i32 @fchown(i32, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @clone_file(i32 %dest_fd, i32 %src_fd) #4 !dbg !8308 !ctir !417 {
entry:
  %dest_fd.addr = alloca i32, align 4
  %src_fd.addr = alloca i32, align 4
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !8309, metadata !DIExpression()), !dbg !8310
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8311, metadata !DIExpression()), !dbg !8312
  %0 = load i32, i32* %dest_fd.addr, align 4, !dbg !8313, !tbaa !2982
  %1 = load i32, i32* %src_fd.addr, align 4, !dbg !8314, !tbaa !2982
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 1074041865, i32 %1) #10, !dbg !8315
  ret i32 %call, !dbg !8316
}

; Function Attrs: nounwind readnone
declare dso_local i32 @getpagesize() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb) #4 !dbg !8317 !ctir !419 {
entry:
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !8319, metadata !DIExpression()), !dbg !8320
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8321, !ctir !317
  %0 = load i64, i64* %st_blksize, align 8, !dbg !8321, !tbaa !7562, !ctir !333
  %cmp = icmp slt i64 0, %0, !dbg !8321
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !8321

land.lhs.true:                                    ; preds = %entry
  %st_blksize1 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8321, !ctir !317
  %1 = load i64, i64* %st_blksize1, align 8, !dbg !8321, !tbaa !7562, !ctir !333
  %cmp2 = icmp ule i64 %1, 2305843009213693952, !dbg !8321
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !8321

cond.true:                                        ; preds = %land.lhs.true
  %st_blksize3 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8321, !ctir !317
  %2 = load i64, i64* %st_blksize3, align 8, !dbg !8321, !tbaa !7562, !ctir !333
  br label %cond.end, !dbg !8321

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !8321

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 512, %cond.false ], !dbg !8321
  %cmp4 = icmp sgt i64 131072, %cond, !dbg !8321
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !8321

cond.true5:                                       ; preds = %cond.end
  br label %cond.end17, !dbg !8321

cond.false6:                                      ; preds = %cond.end
  %st_blksize7 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8321, !ctir !317
  %3 = load i64, i64* %st_blksize7, align 8, !dbg !8321, !tbaa !7562, !ctir !333
  %cmp8 = icmp slt i64 0, %3, !dbg !8321
  br i1 %cmp8, label %land.lhs.true9, label %cond.false14, !dbg !8321

land.lhs.true9:                                   ; preds = %cond.false6
  %st_blksize10 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8321, !ctir !317
  %4 = load i64, i64* %st_blksize10, align 8, !dbg !8321, !tbaa !7562, !ctir !333
  %cmp11 = icmp ule i64 %4, 2305843009213693952, !dbg !8321
  br i1 %cmp11, label %cond.true12, label %cond.false14, !dbg !8321

cond.true12:                                      ; preds = %land.lhs.true9
  %st_blksize13 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8321, !ctir !317
  %5 = load i64, i64* %st_blksize13, align 8, !dbg !8321, !tbaa !7562, !ctir !333
  br label %cond.end15, !dbg !8321

cond.false14:                                     ; preds = %land.lhs.true9, %cond.false6
  br label %cond.end15, !dbg !8321

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi i64 [ %5, %cond.true12 ], [ 512, %cond.false14 ], !dbg !8321
  br label %cond.end17, !dbg !8321

cond.end17:                                       ; preds = %cond.end15, %cond.true5
  %cond18 = phi i64 [ 131072, %cond.true5 ], [ %cond16, %cond.end15 ], !dbg !8321
  ret i64 %cond18, !dbg !8322
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_probably_sparse(%struct.stat* %sb) #4 !dbg !8323 !ctir !421 {
entry:
  %sb.addr = alloca %struct.stat*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !8324, metadata !DIExpression()), !dbg !8325
  %0 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !8326, !tbaa !2995
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !8326, !ctir !316
  %1 = load i32, i32* %st_mode, align 8, !dbg !8326, !tbaa !3178, !ctir !133
  %and = and i32 %1, 61440, !dbg !8326
  %cmp = icmp eq i32 %and, 32768, !dbg !8326
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8327

land.rhs:                                         ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !8328, !tbaa !2995
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 10, !dbg !8328, !ctir !316
  %3 = load i64, i64* %st_blocks, align 8, !dbg !8328, !tbaa !8329, !ctir !335
  %4 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !8330, !tbaa !2995
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 8, !dbg !8331, !ctir !316
  %5 = load i64, i64* %st_size, align 8, !dbg !8331, !tbaa !4516, !ctir !29
  %div = sdiv i64 %5, 512, !dbg !8332
  %cmp1 = icmp slt i64 %3, %div, !dbg !8333
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !8334
  ret i1 %6, !dbg !8335
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @ptr_align(i8* %ptr, i64 %alignment) #4 !dbg !8336 !ctir !423 {
entry:
  %ptr.addr = alloca i8*, align 8
  %alignment.addr = alloca i64, align 8
  %p0 = alloca i8*, align 8, !ctir !115
  %p1 = alloca i8*, align 8, !ctir !115
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8337, metadata !DIExpression()), !dbg !8338
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !8339, metadata !DIExpression()), !dbg !8340
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !8341, metadata !DIExpression()), !dbg !8342
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !8343, !tbaa !2995
  store i8* %0, i8** %p0, align 8, !dbg !8342, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !8344, metadata !DIExpression()), !dbg !8345
  %1 = load i8*, i8** %p0, align 8, !dbg !8346, !tbaa !2995
  %2 = load i64, i64* %alignment.addr, align 8, !dbg !8347, !tbaa !3848
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !8348
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !8349
  store i8* %add.ptr1, i8** %p1, align 8, !dbg !8345, !tbaa !2995
  %3 = load i8*, i8** %p1, align 8, !dbg !8350, !tbaa !2995
  %4 = load i8*, i8** %p1, align 8, !dbg !8351, !tbaa !2995
  %5 = ptrtoint i8* %4 to i64, !dbg !8352
  %6 = load i64, i64* %alignment.addr, align 8, !dbg !8353, !tbaa !3848
  %rem = urem i64 %5, %6, !dbg !8354
  %idx.neg = sub i64 0, %rem, !dbg !8355
  %add.ptr2 = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !8355
  ret i8* %add.ptr2, !dbg !8356
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i64 %src_total_size, i32 %sparse_mode, i8* %src_name, i8* %dst_name, i8* %require_normal_copy) #4 !dbg !8357 !ctir !427 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %src_total_size.addr = alloca i64, align 8
  %sparse_mode.addr = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %require_normal_copy.addr = alloca i8*, align 8
  %scan = alloca %struct.extent_scan, align 8, !ctir !439
  %last_ext_start = alloca i64, align 8, !ctir !248
  %last_ext_len = alloca i64, align 8, !ctir !248
  %dest_pos = alloca i64, align 8, !ctir !248
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !120
  %ok = alloca i8, align 1, !ctir !120
  %empty_extent = alloca i8, align 1, !ctir !120
  %i = alloca i32, align 4, !ctir !70
  %ext_start = alloca i64, align 8, !ctir !248
  %ext_len = alloca i64, align 8, !ctir !248
  %ext_hole_size = alloca i64, align 8, !ctir !248
  %nzeros = alloca i64, align 8, !ctir !248
  %n_read = alloca i64, align 8, !ctir !248
  %read_hole = alloca i8, align 1, !ctir !120
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8358, metadata !DIExpression()), !dbg !8359
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !8360, metadata !DIExpression()), !dbg !8361
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8362, metadata !DIExpression()), !dbg !8363
  store i64 %buf_size, i64* %buf_size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !8364, metadata !DIExpression()), !dbg !8365
  store i64 %hole_size, i64* %hole_size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !8366, metadata !DIExpression()), !dbg !8367
  store i64 %src_total_size, i64* %src_total_size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %src_total_size.addr, metadata !8368, metadata !DIExpression()), !dbg !8369
  store i32 %sparse_mode, i32* %sparse_mode.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %sparse_mode.addr, metadata !8370, metadata !DIExpression()), !dbg !8371
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !8372, metadata !DIExpression()), !dbg !8373
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8374, metadata !DIExpression()), !dbg !8375
  store i8* %require_normal_copy, i8** %require_normal_copy.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %require_normal_copy.addr, metadata !8376, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.declare(metadata %struct.extent_scan* %scan, metadata !8378, metadata !DIExpression()), !dbg !8379
  call void @llvm.dbg.declare(metadata i64* %last_ext_start, metadata !8380, metadata !DIExpression()), !dbg !8381
  store i64 0, i64* %last_ext_start, align 8, !dbg !8381, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %last_ext_len, metadata !8382, metadata !DIExpression()), !dbg !8383
  store i64 0, i64* %last_ext_len, align 8, !dbg !8383, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %dest_pos, metadata !8384, metadata !DIExpression()), !dbg !8385
  store i64 0, i64* %dest_pos, align 8, !dbg !8385, !tbaa !3848
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !8386, !tbaa !2982
  call void @extent_scan_init(i32 %0, %struct.extent_scan* %scan), !dbg !8387
  %1 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !8388, !tbaa !2995
  store i8 0, i8* %1, align 1, !dbg !8389, !tbaa !3106, !ctir !120
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !8390, metadata !DIExpression()), !dbg !8391
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !8391, !tbaa !3106
  br label %do.body, !dbg !8392

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !8393, metadata !DIExpression()), !dbg !8395
  %call = call zeroext i1 @extent_scan_read(%struct.extent_scan* %scan), !dbg !8396
  %frombool = zext i1 %call to i8, !dbg !8395
  store i8 %frombool, i8* %ok, align 1, !dbg !8395, !tbaa !3106
  %2 = load i8, i8* %ok, align 1, !dbg !8397, !tbaa !3106
  %tobool = trunc i8 %2 to i1, !dbg !8397
  br i1 %tobool, label %if.end9, label %if.then, !dbg !8399

if.then:                                          ; preds = %do.body
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8400, !ctir !439
  %3 = load i8, i8* %hit_final_extent, align 1, !dbg !8400, !tbaa !8403
  %tobool1 = trunc i8 %3 to i1, !dbg !8400, !ctir !120
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !8405

if.then2:                                         ; preds = %if.then
  br label %do.end, !dbg !8406

if.end:                                           ; preds = %if.then
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 4, !dbg !8407, !ctir !439
  %4 = load i8, i8* %initial_scan_failed, align 8, !dbg !8407, !tbaa !8409
  %tobool3 = trunc i8 %4 to i1, !dbg !8407, !ctir !120
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8410

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !8411, !tbaa !2995
  store i8 1, i8* %5, align 1, !dbg !8413, !tbaa !3106, !ctir !120
  store i1 false, i1* %retval, align 1, !dbg !8414
  br label %return, !dbg !8414

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #15, !dbg !8415
  %6 = load i32, i32* %call6, align 4, !dbg !8415, !tbaa !2982, !ctir !7
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.68, i64 0, i64 0)) #10, !dbg !8416
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !8417, !tbaa !2995
  %call8 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %7), !dbg !8417
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call7, i8* %call8), !dbg !8418
  store i1 false, i1* %retval, align 1, !dbg !8419
  br label %return, !dbg !8419

if.end9:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8* %empty_extent, metadata !8420, metadata !DIExpression()), !dbg !8421
  store i8 0, i8* %empty_extent, align 1, !dbg !8421, !tbaa !3106
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8422, metadata !DIExpression()), !dbg !8424
  store i32 0, i32* %i, align 4, !dbg !8424, !tbaa !2982
  br label %for.cond, !dbg !8425

for.cond:                                         ; preds = %for.inc, %if.end9
  %8 = load i32, i32* %i, align 4, !dbg !8426, !tbaa !2982
  %conv = zext i32 %8 to i64, !dbg !8426
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !8428, !ctir !439
  %9 = load i64, i64* %ei_count, align 8, !dbg !8428, !tbaa !8429, !ctir !55
  %cmp = icmp ult i64 %conv, %9, !dbg !8430
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8431

lor.rhs:                                          ; preds = %for.cond
  %10 = load i8, i8* %empty_extent, align 1, !dbg !8432, !tbaa !3106
  %tobool11 = trunc i8 %10 to i1, !dbg !8432
  br label %lor.end, !dbg !8431

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %11 = phi i1 [ true, %for.cond ], [ %tobool11, %lor.rhs ]
  br i1 %11, label %for.body, label %for.end, !dbg !8433

for.body:                                         ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i64* %ext_start, metadata !8434, metadata !DIExpression()), !dbg !8436
  call void @llvm.dbg.declare(metadata i64* %ext_len, metadata !8437, metadata !DIExpression()), !dbg !8438
  call void @llvm.dbg.declare(metadata i64* %ext_hole_size, metadata !8439, metadata !DIExpression()), !dbg !8440
  %12 = load i32, i32* %i, align 4, !dbg !8441, !tbaa !2982
  %conv13 = zext i32 %12 to i64, !dbg !8441
  %ei_count14 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !8443, !ctir !439
  %13 = load i64, i64* %ei_count14, align 8, !dbg !8443, !tbaa !8429, !ctir !55
  %cmp15 = icmp ult i64 %conv13, %13, !dbg !8444
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !8445

if.then17:                                        ; preds = %for.body
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8446, !ctir !439
  %14 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8446, !tbaa !8448, !ctir !429
  %15 = load i32, i32* %i, align 4, !dbg !8449, !tbaa !2982
  %idxprom = zext i32 %15 to i64, !dbg !8450
  %arrayidx = getelementptr inbounds %struct.extent_info, %struct.extent_info* %14, i64 %idxprom, !dbg !8450, !ctir !429
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx, i32 0, i32 0, !dbg !8451, !ctir !430
  %16 = load i64, i64* %ext_logical, align 8, !dbg !8451, !tbaa !8452, !ctir !248
  store i64 %16, i64* %ext_start, align 8, !dbg !8454, !tbaa !3848
  %ext_info18 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8455, !ctir !439
  %17 = load %struct.extent_info*, %struct.extent_info** %ext_info18, align 8, !dbg !8455, !tbaa !8448, !ctir !429
  %18 = load i32, i32* %i, align 4, !dbg !8456, !tbaa !2982
  %idxprom19 = zext i32 %18 to i64, !dbg !8457
  %arrayidx20 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %17, i64 %idxprom19, !dbg !8457, !ctir !429
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx20, i32 0, i32 1, !dbg !8458, !ctir !430
  %19 = load i64, i64* %ext_length, align 8, !dbg !8458, !tbaa !8459, !ctir !248
  store i64 %19, i64* %ext_len, align 8, !dbg !8460, !tbaa !3848
  br label %if.end25, !dbg !8461

if.else:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !8462, !tbaa !2982
  %dec = add i32 %20, -1, !dbg !8462
  store i32 %dec, i32* %i, align 4, !dbg !8462, !tbaa !2982
  %21 = load i64, i64* %last_ext_start, align 8, !dbg !8464, !tbaa !3848
  %ext_info21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8465, !ctir !439
  %22 = load %struct.extent_info*, %struct.extent_info** %ext_info21, align 8, !dbg !8465, !tbaa !8448, !ctir !429
  %23 = load i32, i32* %i, align 4, !dbg !8466, !tbaa !2982
  %idxprom22 = zext i32 %23 to i64, !dbg !8467
  %arrayidx23 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %22, i64 %idxprom22, !dbg !8467, !ctir !429
  %ext_length24 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx23, i32 0, i32 1, !dbg !8468, !ctir !430
  %24 = load i64, i64* %ext_length24, align 8, !dbg !8468, !tbaa !8459, !ctir !248
  %add = add nsw i64 %21, %24, !dbg !8469
  store i64 %add, i64* %ext_start, align 8, !dbg !8470, !tbaa !3848
  store i64 0, i64* %ext_len, align 8, !dbg !8471, !tbaa !3848
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17
  %25 = load i64, i64* %src_total_size.addr, align 8, !dbg !8472, !tbaa !3848
  %26 = load i64, i64* %ext_start, align 8, !dbg !8474, !tbaa !3848
  %27 = load i64, i64* %ext_len, align 8, !dbg !8475, !tbaa !3848
  %add26 = add nsw i64 %26, %27, !dbg !8476
  %cmp27 = icmp slt i64 %25, %add26, !dbg !8477
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !8478

if.then29:                                        ; preds = %if.end25
  %28 = load i64, i64* %src_total_size.addr, align 8, !dbg !8479, !tbaa !3848
  %29 = load i64, i64* %ext_start, align 8, !dbg !8482, !tbaa !3848
  %cmp30 = icmp slt i64 %28, %29, !dbg !8483
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !8484

if.then32:                                        ; preds = %if.then29
  %30 = load i64, i64* %src_total_size.addr, align 8, !dbg !8485, !tbaa !3848
  store i64 %30, i64* %ext_start, align 8, !dbg !8486, !tbaa !3848
  br label %if.end33, !dbg !8487

if.end33:                                         ; preds = %if.then32, %if.then29
  %31 = load i64, i64* %src_total_size.addr, align 8, !dbg !8488, !tbaa !3848
  %32 = load i64, i64* %ext_start, align 8, !dbg !8489, !tbaa !3848
  %sub = sub nsw i64 %31, %32, !dbg !8490
  store i64 %sub, i64* %ext_len, align 8, !dbg !8491, !tbaa !3848
  br label %if.end34, !dbg !8492

if.end34:                                         ; preds = %if.end33, %if.end25
  %33 = load i64, i64* %ext_start, align 8, !dbg !8493, !tbaa !3848
  %34 = load i64, i64* %last_ext_start, align 8, !dbg !8494, !tbaa !3848
  %sub35 = sub nsw i64 %33, %34, !dbg !8495
  %35 = load i64, i64* %last_ext_len, align 8, !dbg !8496, !tbaa !3848
  %sub36 = sub nsw i64 %sub35, %35, !dbg !8497
  store i64 %sub36, i64* %ext_hole_size, align 8, !dbg !8498, !tbaa !3848
  store i8 0, i8* %wrote_hole_at_eof, align 1, !dbg !8499, !tbaa !3106
  %36 = load i64, i64* %ext_hole_size, align 8, !dbg !8500, !tbaa !3848
  %tobool37 = icmp ne i64 %36, 0, !dbg !8500
  br i1 %tobool37, label %if.then38, label %if.end82, !dbg !8502

if.then38:                                        ; preds = %if.end34
  %37 = load i32, i32* %src_fd.addr, align 4, !dbg !8503, !tbaa !2982
  %38 = load i64, i64* %ext_start, align 8, !dbg !8506, !tbaa !3848
  %call39 = call i64 @lseek(i32 %37, i64 %38, i32 0) #10, !dbg !8507
  %cmp40 = icmp slt i64 %call39, 0, !dbg !8508
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !8509

if.then42:                                        ; preds = %if.then38
  %call43 = call i32* @__errno_location() #15, !dbg !8510
  %39 = load i32, i32* %call43, align 4, !dbg !8510, !tbaa !2982, !ctir !7
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i64 0, i64 0)) #10, !dbg !8512
  %40 = load i8*, i8** %src_name.addr, align 8, !dbg !8513, !tbaa !2995
  %call45 = call i8* @quotearg_style(i32 4, i8* %40), !dbg !8513
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %39, i8* %call44, i8* %call45), !dbg !8514
  br label %fail, !dbg !8514

fail:                                             ; preds = %if.then90, %if.then70, %if.then59, %if.then42
  call void @llvm.dbg.label(metadata !8515), !dbg !8516
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !8517
  store i1 false, i1* %retval, align 1, !dbg !8518
  br label %return, !dbg !8518

if.end46:                                         ; preds = %if.then38
  %41 = load i8, i8* %empty_extent, align 1, !dbg !8519, !tbaa !3106
  %tobool47 = trunc i8 %41 to i1, !dbg !8519
  br i1 %tobool47, label %land.lhs.true, label %lor.lhs.false, !dbg !8521

land.lhs.true:                                    ; preds = %if.end46
  %42 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8522, !tbaa !3657
  %cmp49 = icmp eq i32 %42, 3, !dbg !8523
  br i1 %cmp49, label %if.then55, label %lor.lhs.false, !dbg !8524

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end46
  %43 = load i8, i8* %empty_extent, align 1, !dbg !8525, !tbaa !3106
  %tobool51 = trunc i8 %43 to i1, !dbg !8525
  br i1 %tobool51, label %if.else61, label %land.lhs.true52, !dbg !8526

land.lhs.true52:                                  ; preds = %lor.lhs.false
  %44 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8527, !tbaa !3657
  %cmp53 = icmp ne i32 %44, 1, !dbg !8528
  br i1 %cmp53, label %if.then55, label %if.else61, !dbg !8529

if.then55:                                        ; preds = %land.lhs.true52, %land.lhs.true
  %45 = load i32, i32* %dest_fd.addr, align 4, !dbg !8530, !tbaa !2982
  %46 = load i8*, i8** %dst_name.addr, align 8, !dbg !8533, !tbaa !2995
  %47 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8534, !tbaa !3657
  %cmp56 = icmp eq i32 %47, 3, !dbg !8535
  %48 = load i64, i64* %ext_hole_size, align 8, !dbg !8536, !tbaa !3848
  %call58 = call zeroext i1 @create_hole(i32 %45, i8* %46, i1 zeroext %cmp56, i64 %48), !dbg !8537
  br i1 %call58, label %if.end60, label %if.then59, !dbg !8538

if.then59:                                        ; preds = %if.then55
  br label %fail, !dbg !8539

if.end60:                                         ; preds = %if.then55
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !8540, !tbaa !3106
  br label %if.end81, !dbg !8541

if.else61:                                        ; preds = %land.lhs.true52, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %nzeros, metadata !8542, metadata !DIExpression()), !dbg !8544
  %49 = load i64, i64* %ext_hole_size, align 8, !dbg !8545, !tbaa !3848
  store i64 %49, i64* %nzeros, align 8, !dbg !8544, !tbaa !3848
  %50 = load i8, i8* %empty_extent, align 1, !dbg !8546, !tbaa !3106
  %tobool62 = trunc i8 %50 to i1, !dbg !8546
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !8548

if.then63:                                        ; preds = %if.else61
  %51 = load i64, i64* %src_total_size.addr, align 8, !dbg !8549, !tbaa !3848
  %52 = load i64, i64* %dest_pos, align 8, !dbg !8549, !tbaa !3848
  %sub64 = sub nsw i64 %51, %52, !dbg !8549
  %53 = load i64, i64* %ext_hole_size, align 8, !dbg !8549, !tbaa !3848
  %cmp65 = icmp slt i64 %sub64, %53, !dbg !8549
  br i1 %cmp65, label %cond.true, label %cond.false, !dbg !8549

cond.true:                                        ; preds = %if.then63
  %54 = load i64, i64* %src_total_size.addr, align 8, !dbg !8549, !tbaa !3848
  %55 = load i64, i64* %dest_pos, align 8, !dbg !8549, !tbaa !3848
  %sub67 = sub nsw i64 %54, %55, !dbg !8549
  br label %cond.end, !dbg !8549

cond.false:                                       ; preds = %if.then63
  %56 = load i64, i64* %ext_hole_size, align 8, !dbg !8549, !tbaa !3848
  br label %cond.end, !dbg !8549

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub67, %cond.true ], [ %56, %cond.false ], !dbg !8549
  store i64 %cond, i64* %nzeros, align 8, !dbg !8550, !tbaa !3848
  br label %if.end68, !dbg !8551

if.end68:                                         ; preds = %cond.end, %if.else61
  %57 = load i32, i32* %dest_fd.addr, align 4, !dbg !8552, !tbaa !2982
  %58 = load i64, i64* %nzeros, align 8, !dbg !8554, !tbaa !3848
  %call69 = call zeroext i1 @write_zeros(i32 %57, i64 %58), !dbg !8555
  br i1 %call69, label %if.end74, label %if.then70, !dbg !8556

if.then70:                                        ; preds = %if.end68
  %call71 = call i32* @__errno_location() #15, !dbg !8557
  %59 = load i32, i32* %call71, align 4, !dbg !8557, !tbaa !2982, !ctir !7
  %call72 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i64 0, i64 0)) #10, !dbg !8559
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !8560, !tbaa !2995
  %call73 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %60), !dbg !8560
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %59, i8* %call72, i8* %call73), !dbg !8561
  br label %fail, !dbg !8562

if.end74:                                         ; preds = %if.end68
  %61 = load i64, i64* %src_total_size.addr, align 8, !dbg !8563, !tbaa !3848
  %62 = load i64, i64* %ext_start, align 8, !dbg !8563, !tbaa !3848
  %cmp75 = icmp slt i64 %61, %62, !dbg !8563
  br i1 %cmp75, label %cond.true77, label %cond.false78, !dbg !8563

cond.true77:                                      ; preds = %if.end74
  %63 = load i64, i64* %src_total_size.addr, align 8, !dbg !8563, !tbaa !3848
  br label %cond.end79, !dbg !8563

cond.false78:                                     ; preds = %if.end74
  %64 = load i64, i64* %ext_start, align 8, !dbg !8563, !tbaa !3848
  br label %cond.end79, !dbg !8563

cond.end79:                                       ; preds = %cond.false78, %cond.true77
  %cond80 = phi i64 [ %63, %cond.true77 ], [ %64, %cond.false78 ], !dbg !8563
  store i64 %cond80, i64* %dest_pos, align 8, !dbg !8564, !tbaa !3848
  br label %if.end81

if.end81:                                         ; preds = %cond.end79, %if.end60
  br label %if.end82, !dbg !8565

if.end82:                                         ; preds = %if.end81, %if.end34
  %65 = load i64, i64* %ext_start, align 8, !dbg !8566, !tbaa !3848
  store i64 %65, i64* %last_ext_start, align 8, !dbg !8567, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !8568, metadata !DIExpression()), !dbg !8571
  store i8 0, i8* %empty_extent, align 1, !dbg !8572, !tbaa !3106
  %66 = load i64, i64* %ext_len, align 8, !dbg !8573, !tbaa !3848
  store i64 %66, i64* %last_ext_len, align 8, !dbg !8574, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8* %read_hole, metadata !8575, metadata !DIExpression()), !dbg !8576
  %67 = load i32, i32* %src_fd.addr, align 4, !dbg !8577, !tbaa !2982
  %68 = load i32, i32* %dest_fd.addr, align 4, !dbg !8579, !tbaa !2982
  %69 = load i8*, i8** %buf.addr, align 8, !dbg !8580, !tbaa !2995
  %70 = load i64, i64* %buf_size.addr, align 8, !dbg !8581, !tbaa !3848
  %71 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8582, !tbaa !3657
  %cmp83 = icmp eq i32 %71, 3, !dbg !8583
  br i1 %cmp83, label %cond.true85, label %cond.false86, !dbg !8582

cond.true85:                                      ; preds = %if.end82
  %72 = load i64, i64* %hole_size.addr, align 8, !dbg !8584, !tbaa !3848
  br label %cond.end87, !dbg !8582

cond.false86:                                     ; preds = %if.end82
  br label %cond.end87, !dbg !8582

cond.end87:                                       ; preds = %cond.false86, %cond.true85
  %cond88 = phi i64 [ %72, %cond.true85 ], [ 0, %cond.false86 ], !dbg !8582
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !8585, !tbaa !2995
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !8586, !tbaa !2995
  %75 = load i64, i64* %ext_len, align 8, !dbg !8587, !tbaa !3848
  %call89 = call zeroext i1 @sparse_copy(i32 %67, i32 %68, i8* %69, i64 %70, i64 %cond88, i1 zeroext true, i8* %73, i8* %74, i64 %75, i64* %n_read, i8* %read_hole), !dbg !8588
  br i1 %call89, label %if.end91, label %if.then90, !dbg !8589

if.then90:                                        ; preds = %cond.end87
  br label %fail, !dbg !8590

if.end91:                                         ; preds = %cond.end87
  %76 = load i64, i64* %ext_start, align 8, !dbg !8591, !tbaa !3848
  %77 = load i64, i64* %n_read, align 8, !dbg !8592, !tbaa !3848
  %add92 = add nsw i64 %76, %77, !dbg !8593
  store i64 %add92, i64* %dest_pos, align 8, !dbg !8594, !tbaa !3848
  %78 = load i64, i64* %n_read, align 8, !dbg !8595, !tbaa !3848
  %tobool93 = icmp ne i64 %78, 0, !dbg !8595
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !8597

if.then94:                                        ; preds = %if.end91
  %79 = load i8, i8* %read_hole, align 1, !dbg !8598, !tbaa !3106
  %tobool95 = trunc i8 %79 to i1, !dbg !8598
  %frombool96 = zext i1 %tobool95 to i8, !dbg !8599
  store i8 %frombool96, i8* %wrote_hole_at_eof, align 1, !dbg !8599, !tbaa !3106
  br label %if.end97, !dbg !8600

if.end97:                                         ; preds = %if.then94, %if.end91
  %80 = load i64, i64* %dest_pos, align 8, !dbg !8601, !tbaa !3848
  %81 = load i64, i64* %src_total_size.addr, align 8, !dbg !8603, !tbaa !3848
  %cmp98 = icmp eq i64 %80, %81, !dbg !8604
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !8605

if.then100:                                       ; preds = %if.end97
  %hit_final_extent101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8606, !ctir !439
  store i8 1, i8* %hit_final_extent101, align 1, !dbg !8608, !tbaa !8403, !ctir !120
  br label %for.end, !dbg !8609

if.end102:                                        ; preds = %if.end97
  br label %for.inc, !dbg !8610

for.inc:                                          ; preds = %if.end102
  %82 = load i32, i32* %i, align 4, !dbg !8611, !tbaa !2982
  %inc = add i32 %82, 1, !dbg !8611
  store i32 %inc, i32* %i, align 4, !dbg !8611, !tbaa !2982
  br label %for.cond, !dbg !8612, !llvm.loop !8613

for.end:                                          ; preds = %if.then100, %lor.end
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !8615
  br label %do.cond, !dbg !8616

do.cond:                                          ; preds = %for.end
  %hit_final_extent103 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8617, !ctir !439
  %83 = load i8, i8* %hit_final_extent103, align 1, !dbg !8617, !tbaa !8403
  %tobool104 = trunc i8 %83 to i1, !dbg !8617, !ctir !120
  %lnot = xor i1 %tobool104, true, !dbg !8618
  br i1 %lnot, label %do.body, label %do.end, !dbg !8616, !llvm.loop !8619

do.end:                                           ; preds = %do.cond, %if.then2
  %84 = load i64, i64* %dest_pos, align 8, !dbg !8621, !tbaa !3848
  %85 = load i64, i64* %src_total_size.addr, align 8, !dbg !8623, !tbaa !3848
  %cmp105 = icmp slt i64 %84, %85, !dbg !8624
  br i1 %cmp105, label %land.lhs.true110, label %lor.lhs.false107, !dbg !8625

lor.lhs.false107:                                 ; preds = %do.end
  %86 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !8626, !tbaa !3106
  %tobool108 = trunc i8 %86 to i1, !dbg !8626
  br i1 %tobool108, label %land.lhs.true110, label %if.end123, !dbg !8627

land.lhs.true110:                                 ; preds = %lor.lhs.false107, %do.end
  %87 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8628, !tbaa !3657
  %cmp111 = icmp ne i32 %87, 1, !dbg !8629
  br i1 %cmp111, label %cond.true113, label %cond.false116, !dbg !8630

cond.true113:                                     ; preds = %land.lhs.true110
  %88 = load i32, i32* %dest_fd.addr, align 4, !dbg !8631, !tbaa !2982
  %89 = load i64, i64* %src_total_size.addr, align 8, !dbg !8632, !tbaa !3848
  %call114 = call i32 @ftruncate(i32 %88, i64 %89) #10, !dbg !8633
  %tobool115 = icmp ne i32 %call114, 0, !dbg !8633
  br i1 %tobool115, label %if.then119, label %if.end123, !dbg !8628

cond.false116:                                    ; preds = %land.lhs.true110
  %90 = load i32, i32* %dest_fd.addr, align 4, !dbg !8634, !tbaa !2982
  %91 = load i64, i64* %src_total_size.addr, align 8, !dbg !8635, !tbaa !3848
  %92 = load i64, i64* %dest_pos, align 8, !dbg !8636, !tbaa !3848
  %sub117 = sub nsw i64 %91, %92, !dbg !8637
  %call118 = call zeroext i1 @write_zeros(i32 %90, i64 %sub117), !dbg !8638
  br i1 %call118, label %if.end123, label %if.then119, !dbg !8630

if.then119:                                       ; preds = %cond.false116, %cond.true113
  %call120 = call i32* @__errno_location() #15, !dbg !8639
  %93 = load i32, i32* %call120, align 4, !dbg !8639, !tbaa !2982, !ctir !7
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i64 0, i64 0)) #10, !dbg !8641
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !8642, !tbaa !2995
  %call122 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !8642
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call121, i8* %call122), !dbg !8643
  store i1 false, i1* %retval, align 1, !dbg !8644
  br label %return, !dbg !8644

if.end123:                                        ; preds = %cond.false116, %cond.true113, %lor.lhs.false107
  %95 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8645, !tbaa !3657
  %cmp124 = icmp eq i32 %95, 3, !dbg !8647
  br i1 %cmp124, label %land.lhs.true126, label %if.end138, !dbg !8648

land.lhs.true126:                                 ; preds = %if.end123
  %96 = load i64, i64* %dest_pos, align 8, !dbg !8649, !tbaa !3848
  %97 = load i64, i64* %src_total_size.addr, align 8, !dbg !8650, !tbaa !3848
  %cmp127 = icmp slt i64 %96, %97, !dbg !8651
  br i1 %cmp127, label %land.lhs.true129, label %if.end138, !dbg !8652

land.lhs.true129:                                 ; preds = %land.lhs.true126
  %98 = load i32, i32* %dest_fd.addr, align 4, !dbg !8653, !tbaa !2982
  %99 = load i64, i64* %dest_pos, align 8, !dbg !8654, !tbaa !3848
  %100 = load i64, i64* %src_total_size.addr, align 8, !dbg !8655, !tbaa !3848
  %101 = load i64, i64* %dest_pos, align 8, !dbg !8656, !tbaa !3848
  %sub130 = sub nsw i64 %100, %101, !dbg !8657
  %call131 = call i32 @punch_hole(i32 %98, i64 %99, i64 %sub130), !dbg !8658
  %cmp132 = icmp slt i32 %call131, 0, !dbg !8659
  br i1 %cmp132, label %if.then134, label %if.end138, !dbg !8660

if.then134:                                       ; preds = %land.lhs.true129
  %call135 = call i32* @__errno_location() #15, !dbg !8661
  %102 = load i32, i32* %call135, align 4, !dbg !8661, !tbaa !2982, !ctir !7
  %call136 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !8663
  %103 = load i8*, i8** %dst_name.addr, align 8, !dbg !8664, !tbaa !2995
  %call137 = call i8* @quotearg_style(i32 4, i8* %103), !dbg !8664
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %102, i8* %call136, i8* %call137), !dbg !8665
  store i1 false, i1* %retval, align 1, !dbg !8666
  br label %return, !dbg !8666

if.end138:                                        ; preds = %land.lhs.true129, %land.lhs.true126, %if.end123
  store i1 true, i1* %retval, align 1, !dbg !8667
  br label %return, !dbg !8667

return:                                           ; preds = %if.end138, %if.then134, %if.then119, %fail, %if.end5, %if.then4
  %104 = load i1, i1* %retval, align 1, !dbg !8668
  ret i1 %104, !dbg !8668
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @sparse_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i1 zeroext %punch_holes, i8* %src_name, i8* %dst_name, i64 %max_n_read, i64* %total_n_read, i8* %last_write_made_hole) #4 !dbg !8669 !ctir !454 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %punch_holes.addr = alloca i8, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %max_n_read.addr = alloca i64, align 8
  %total_n_read.addr = alloca i64*, align 8
  %last_write_made_hole.addr = alloca i8*, align 8
  %make_hole = alloca i8, align 1, !ctir !120
  %psize = alloca i64, align 8, !ctir !248
  %n_read = alloca i64, align 8, !ctir !460
  %csize = alloca i64, align 8, !ctir !55
  %cbuf = alloca i8*, align 8, !ctir !9
  %pbuf = alloca i8*, align 8, !ctir !9
  %prev_hole = alloca i8, align 1, !ctir !120
  %transition = alloca i8, align 1, !ctir !120
  %last_chunk = alloca i8, align 1, !ctir !120
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8670, metadata !DIExpression()), !dbg !8671
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !8672, metadata !DIExpression()), !dbg !8673
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8674, metadata !DIExpression()), !dbg !8675
  store i64 %buf_size, i64* %buf_size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !8676, metadata !DIExpression()), !dbg !8677
  store i64 %hole_size, i64* %hole_size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !8678, metadata !DIExpression()), !dbg !8679
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !8680, metadata !DIExpression()), !dbg !8681
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !8682, metadata !DIExpression()), !dbg !8683
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8684, metadata !DIExpression()), !dbg !8685
  store i64 %max_n_read, i64* %max_n_read.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %max_n_read.addr, metadata !8686, metadata !DIExpression()), !dbg !8687
  store i64* %total_n_read, i64** %total_n_read.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64** %total_n_read.addr, metadata !8688, metadata !DIExpression()), !dbg !8689
  store i8* %last_write_made_hole, i8** %last_write_made_hole.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %last_write_made_hole.addr, metadata !8690, metadata !DIExpression()), !dbg !8691
  %0 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !8692, !tbaa !2995
  store i8 0, i8* %0, align 1, !dbg !8693, !tbaa !3106, !ctir !120
  %1 = load i64*, i64** %total_n_read.addr, align 8, !dbg !8694, !tbaa !2995
  store i64 0, i64* %1, align 8, !dbg !8695, !tbaa !3848, !ctir !248
  call void @llvm.dbg.declare(metadata i8* %make_hole, metadata !8696, metadata !DIExpression()), !dbg !8697
  store i8 0, i8* %make_hole, align 1, !dbg !8697, !tbaa !3106
  call void @llvm.dbg.declare(metadata i64* %psize, metadata !8698, metadata !DIExpression()), !dbg !8699
  store i64 0, i64* %psize, align 8, !dbg !8699, !tbaa !3848
  br label %while.cond, !dbg !8700

while.cond:                                       ; preds = %while.end, %if.then4, %entry
  %2 = load i64, i64* %max_n_read.addr, align 8, !dbg !8701, !tbaa !3848
  %tobool = icmp ne i64 %2, 0, !dbg !8700
  br i1 %tobool, label %while.body, label %while.end94, !dbg !8700

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !8702, metadata !DIExpression()), !dbg !8704
  %3 = load i32, i32* %src_fd.addr, align 4, !dbg !8705, !tbaa !2982
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !8706, !tbaa !2995
  %5 = load i64, i64* %max_n_read.addr, align 8, !dbg !8707, !tbaa !3848
  %6 = load i64, i64* %buf_size.addr, align 8, !dbg !8707, !tbaa !3848
  %cmp = icmp ult i64 %5, %6, !dbg !8707
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8707

cond.true:                                        ; preds = %while.body
  %7 = load i64, i64* %max_n_read.addr, align 8, !dbg !8707, !tbaa !3848
  br label %cond.end, !dbg !8707

cond.false:                                       ; preds = %while.body
  %8 = load i64, i64* %buf_size.addr, align 8, !dbg !8707, !tbaa !3848
  br label %cond.end, !dbg !8707

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !8707
  %call = call i64 @read(i32 %3, i8* %4, i64 %cond), !dbg !8708
  store i64 %call, i64* %n_read, align 8, !dbg !8704, !tbaa !3848
  %9 = load i64, i64* %n_read, align 8, !dbg !8709, !tbaa !3848
  %cmp1 = icmp slt i64 %9, 0, !dbg !8711
  br i1 %cmp1, label %if.then, label %if.end8, !dbg !8712

if.then:                                          ; preds = %cond.end
  %call2 = call i32* @__errno_location() #15, !dbg !8713
  %10 = load i32, i32* %call2, align 4, !dbg !8713, !tbaa !2982, !ctir !7
  %cmp3 = icmp eq i32 %10, 4, !dbg !8716
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !8717

if.then4:                                         ; preds = %if.then
  br label %while.cond, !dbg !8718, !llvm.loop !8719

if.end:                                           ; preds = %if.then
  %call5 = call i32* @__errno_location() #15, !dbg !8721
  %11 = load i32, i32* %call5, align 4, !dbg !8721, !tbaa !2982, !ctir !7
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i64 0, i64 0)) #10, !dbg !8722
  %12 = load i8*, i8** %src_name.addr, align 8, !dbg !8723, !tbaa !2995
  %call7 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !8723
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %11, i8* %call6, i8* %call7), !dbg !8724
  store i1 false, i1* %retval, align 1, !dbg !8725
  br label %return, !dbg !8725

if.end8:                                          ; preds = %cond.end
  %13 = load i64, i64* %n_read, align 8, !dbg !8726, !tbaa !3848
  %cmp9 = icmp eq i64 %13, 0, !dbg !8728
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !8729

if.then10:                                        ; preds = %if.end8
  br label %while.end94, !dbg !8730

if.end11:                                         ; preds = %if.end8
  %14 = load i64, i64* %n_read, align 8, !dbg !8731, !tbaa !3848
  %15 = load i64, i64* %max_n_read.addr, align 8, !dbg !8732, !tbaa !3848
  %sub = sub i64 %15, %14, !dbg !8732
  store i64 %sub, i64* %max_n_read.addr, align 8, !dbg !8732, !tbaa !3848
  %16 = load i64, i64* %n_read, align 8, !dbg !8733, !tbaa !3848
  %17 = load i64*, i64** %total_n_read.addr, align 8, !dbg !8734, !tbaa !2995
  %18 = load i64, i64* %17, align 8, !dbg !8735, !tbaa !3848, !ctir !248
  %add = add nsw i64 %18, %16, !dbg !8735
  store i64 %add, i64* %17, align 8, !dbg !8735, !tbaa !3848, !ctir !248
  call void @llvm.dbg.declare(metadata i64* %csize, metadata !8736, metadata !DIExpression()), !dbg !8737
  %19 = load i64, i64* %hole_size.addr, align 8, !dbg !8738, !tbaa !3848
  %tobool12 = icmp ne i64 %19, 0, !dbg !8738
  br i1 %tobool12, label %cond.true13, label %cond.false14, !dbg !8738

cond.true13:                                      ; preds = %if.end11
  %20 = load i64, i64* %hole_size.addr, align 8, !dbg !8739, !tbaa !3848
  br label %cond.end15, !dbg !8738

cond.false14:                                     ; preds = %if.end11
  %21 = load i64, i64* %buf_size.addr, align 8, !dbg !8740, !tbaa !3848
  br label %cond.end15, !dbg !8738

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i64 [ %20, %cond.true13 ], [ %21, %cond.false14 ], !dbg !8738
  store i64 %cond16, i64* %csize, align 8, !dbg !8737, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8** %cbuf, metadata !8741, metadata !DIExpression()), !dbg !8742
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !8743, !tbaa !2995
  store i8* %22, i8** %cbuf, align 8, !dbg !8742, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %pbuf, metadata !8744, metadata !DIExpression()), !dbg !8745
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !8746, !tbaa !2995
  store i8* %23, i8** %pbuf, align 8, !dbg !8745, !tbaa !2995
  br label %while.cond17, !dbg !8747

while.cond17:                                     ; preds = %if.end90, %cond.end15
  %24 = load i64, i64* %n_read, align 8, !dbg !8748, !tbaa !3848
  %tobool18 = icmp ne i64 %24, 0, !dbg !8747
  br i1 %tobool18, label %while.body19, label %while.end, !dbg !8747

while.body19:                                     ; preds = %while.cond17
  call void @llvm.dbg.declare(metadata i8* %prev_hole, metadata !8749, metadata !DIExpression()), !dbg !8751
  %25 = load i8, i8* %make_hole, align 1, !dbg !8752, !tbaa !3106
  %tobool20 = trunc i8 %25 to i1, !dbg !8752
  %frombool21 = zext i1 %tobool20 to i8, !dbg !8751
  store i8 %frombool21, i8* %prev_hole, align 1, !dbg !8751, !tbaa !3106
  %26 = load i64, i64* %csize, align 8, !dbg !8753, !tbaa !3848
  %27 = load i64, i64* %n_read, align 8, !dbg !8753, !tbaa !3848
  %cmp22 = icmp ult i64 %26, %27, !dbg !8753
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !8753

cond.true23:                                      ; preds = %while.body19
  %28 = load i64, i64* %csize, align 8, !dbg !8753, !tbaa !3848
  br label %cond.end25, !dbg !8753

cond.false24:                                     ; preds = %while.body19
  %29 = load i64, i64* %n_read, align 8, !dbg !8753, !tbaa !3848
  br label %cond.end25, !dbg !8753

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i64 [ %28, %cond.true23 ], [ %29, %cond.false24 ], !dbg !8753
  store i64 %cond26, i64* %csize, align 8, !dbg !8754, !tbaa !3848
  %30 = load i64, i64* %hole_size.addr, align 8, !dbg !8755, !tbaa !3848
  %tobool27 = icmp ne i64 %30, 0, !dbg !8755
  br i1 %tobool27, label %land.lhs.true, label %if.end32, !dbg !8757

land.lhs.true:                                    ; preds = %cond.end25
  %31 = load i64, i64* %csize, align 8, !dbg !8758, !tbaa !3848
  %tobool28 = icmp ne i64 %31, 0, !dbg !8758
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !8759

if.then29:                                        ; preds = %land.lhs.true
  %32 = load i8*, i8** %cbuf, align 8, !dbg !8760, !tbaa !2995
  %33 = load i64, i64* %csize, align 8, !dbg !8761, !tbaa !3848
  %call30 = call zeroext i1 @is_nul(i8* %32, i64 %33) #14, !dbg !8762
  %frombool31 = zext i1 %call30 to i8, !dbg !8763
  store i8 %frombool31, i8* %make_hole, align 1, !dbg !8763, !tbaa !3106
  br label %if.end32, !dbg !8764

if.end32:                                         ; preds = %if.then29, %land.lhs.true, %cond.end25
  call void @llvm.dbg.declare(metadata i8* %transition, metadata !8765, metadata !DIExpression()), !dbg !8766
  %34 = load i8, i8* %make_hole, align 1, !dbg !8767, !tbaa !3106
  %tobool33 = trunc i8 %34 to i1, !dbg !8767
  %conv = zext i1 %tobool33 to i32, !dbg !8767
  %35 = load i8, i8* %prev_hole, align 1, !dbg !8768, !tbaa !3106
  %tobool34 = trunc i8 %35 to i1, !dbg !8768
  %conv35 = zext i1 %tobool34 to i32, !dbg !8768
  %cmp36 = icmp ne i32 %conv, %conv35, !dbg !8769
  br i1 %cmp36, label %land.rhs, label %land.end, !dbg !8770

land.rhs:                                         ; preds = %if.end32
  %36 = load i64, i64* %psize, align 8, !dbg !8771, !tbaa !3848
  %tobool38 = icmp ne i64 %36, 0, !dbg !8770
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end32
  %37 = phi i1 [ false, %if.end32 ], [ %tobool38, %land.rhs ], !dbg !8772
  %frombool39 = zext i1 %37 to i8, !dbg !8766
  store i8 %frombool39, i8* %transition, align 1, !dbg !8766, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %last_chunk, metadata !8773, metadata !DIExpression()), !dbg !8774
  %38 = load i64, i64* %n_read, align 8, !dbg !8775, !tbaa !3848
  %39 = load i64, i64* %csize, align 8, !dbg !8776, !tbaa !3848
  %cmp40 = icmp eq i64 %38, %39, !dbg !8777
  br i1 %cmp40, label %land.lhs.true42, label %lor.rhs, !dbg !8778

land.lhs.true42:                                  ; preds = %land.end
  %40 = load i8, i8* %make_hole, align 1, !dbg !8779, !tbaa !3106
  %tobool43 = trunc i8 %40 to i1, !dbg !8779
  br i1 %tobool43, label %lor.rhs, label %lor.end, !dbg !8780

lor.rhs:                                          ; preds = %land.lhs.true42, %land.end
  %41 = load i64, i64* %csize, align 8, !dbg !8781, !tbaa !3848
  %tobool44 = icmp ne i64 %41, 0, !dbg !8782
  %lnot = xor i1 %tobool44, true, !dbg !8782
  br label %lor.end, !dbg !8780

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true42
  %42 = phi i1 [ true, %land.lhs.true42 ], [ %lnot, %lor.rhs ]
  %frombool45 = zext i1 %42 to i8, !dbg !8774
  store i8 %frombool45, i8* %last_chunk, align 1, !dbg !8774, !tbaa !3106
  %43 = load i8, i8* %transition, align 1, !dbg !8783, !tbaa !3106
  %tobool46 = trunc i8 %43 to i1, !dbg !8783
  br i1 %tobool46, label %if.then50, label %lor.lhs.false, !dbg !8785

lor.lhs.false:                                    ; preds = %lor.end
  %44 = load i8, i8* %last_chunk, align 1, !dbg !8786, !tbaa !3106
  %tobool48 = trunc i8 %44 to i1, !dbg !8786
  br i1 %tobool48, label %if.then50, label %if.else80, !dbg !8787

if.then50:                                        ; preds = %lor.lhs.false, %lor.end
  %45 = load i8, i8* %transition, align 1, !dbg !8788, !tbaa !3106
  %tobool51 = trunc i8 %45 to i1, !dbg !8788
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !8791

if.then52:                                        ; preds = %if.then50
  %46 = load i64, i64* %csize, align 8, !dbg !8792, !tbaa !3848
  %47 = load i64, i64* %psize, align 8, !dbg !8793, !tbaa !3848
  %add53 = add i64 %47, %46, !dbg !8793
  store i64 %add53, i64* %psize, align 8, !dbg !8793, !tbaa !3848
  br label %if.end54, !dbg !8794

if.end54:                                         ; preds = %if.then52, %if.then50
  %48 = load i8, i8* %prev_hole, align 1, !dbg !8795, !tbaa !3106
  %tobool55 = trunc i8 %48 to i1, !dbg !8795
  br i1 %tobool55, label %if.else, label %if.then56, !dbg !8797

if.then56:                                        ; preds = %if.end54
  %49 = load i32, i32* %dest_fd.addr, align 4, !dbg !8798, !tbaa !2982
  %50 = load i8*, i8** %pbuf, align 8, !dbg !8801, !tbaa !2995
  %51 = load i64, i64* %psize, align 8, !dbg !8802, !tbaa !3848
  %call57 = call i64 @full_write(i32 %49, i8* %50, i64 %51), !dbg !8803
  %52 = load i64, i64* %psize, align 8, !dbg !8804, !tbaa !3848
  %cmp58 = icmp ne i64 %call57, %52, !dbg !8805
  br i1 %cmp58, label %if.then60, label %if.end64, !dbg !8806

if.then60:                                        ; preds = %if.then56
  %call61 = call i32* @__errno_location() #15, !dbg !8807
  %53 = load i32, i32* %call61, align 4, !dbg !8807, !tbaa !2982, !ctir !7
  %call62 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73, i64 0, i64 0)) #10, !dbg !8809
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !8810, !tbaa !2995
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !8810
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call62, i8* %call63), !dbg !8811
  store i1 false, i1* %retval, align 1, !dbg !8812
  br label %return, !dbg !8812

if.end64:                                         ; preds = %if.then56
  br label %if.end69, !dbg !8813

if.else:                                          ; preds = %if.end54
  %55 = load i32, i32* %dest_fd.addr, align 4, !dbg !8814, !tbaa !2982
  %56 = load i8*, i8** %dst_name.addr, align 8, !dbg !8817, !tbaa !2995
  %57 = load i8, i8* %punch_holes.addr, align 1, !dbg !8818, !tbaa !3106
  %tobool65 = trunc i8 %57 to i1, !dbg !8818
  %58 = load i64, i64* %psize, align 8, !dbg !8819, !tbaa !3848
  %call66 = call zeroext i1 @create_hole(i32 %55, i8* %56, i1 zeroext %tobool65, i64 %58), !dbg !8820
  br i1 %call66, label %if.end68, label %if.then67, !dbg !8821

if.then67:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !8822
  br label %return, !dbg !8822

if.end68:                                         ; preds = %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end64
  %59 = load i8*, i8** %cbuf, align 8, !dbg !8823, !tbaa !2995
  store i8* %59, i8** %pbuf, align 8, !dbg !8824, !tbaa !2995
  %60 = load i64, i64* %csize, align 8, !dbg !8825, !tbaa !3848
  store i64 %60, i64* %psize, align 8, !dbg !8826, !tbaa !3848
  %61 = load i8, i8* %last_chunk, align 1, !dbg !8827, !tbaa !3106
  %tobool70 = trunc i8 %61 to i1, !dbg !8827
  br i1 %tobool70, label %if.then71, label %if.end79, !dbg !8829

if.then71:                                        ; preds = %if.end69
  %62 = load i64, i64* %csize, align 8, !dbg !8830, !tbaa !3848
  %tobool72 = icmp ne i64 %62, 0, !dbg !8830
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !8833

if.then73:                                        ; preds = %if.then71
  store i64 0, i64* %n_read, align 8, !dbg !8834, !tbaa !3848
  br label %if.end74, !dbg !8835

if.end74:                                         ; preds = %if.then73, %if.then71
  %63 = load i8, i8* %transition, align 1, !dbg !8836, !tbaa !3106
  %tobool75 = trunc i8 %63 to i1, !dbg !8836
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !8838

if.then76:                                        ; preds = %if.end74
  store i64 0, i64* %csize, align 8, !dbg !8839, !tbaa !3848
  br label %if.end78, !dbg !8840

if.else77:                                        ; preds = %if.end74
  store i64 0, i64* %psize, align 8, !dbg !8841, !tbaa !3848
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  br label %if.end79, !dbg !8842

if.end79:                                         ; preds = %if.end78, %if.end69
  br label %if.end90, !dbg !8843

if.else80:                                        ; preds = %lor.lhs.false
  %64 = load i64, i64* %psize, align 8, !dbg !8844, !tbaa !3848
  %65 = load i64, i64* %csize, align 8, !dbg !8847, !tbaa !3848
  %sub81 = sub i64 9223372036854775807, %65, !dbg !8848
  %cmp82 = icmp ule i64 %64, %sub81, !dbg !8849
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !8850

if.then84:                                        ; preds = %if.else80
  %66 = load i64, i64* %csize, align 8, !dbg !8851, !tbaa !3848
  %67 = load i64, i64* %psize, align 8, !dbg !8852, !tbaa !3848
  %add85 = add i64 %67, %66, !dbg !8852
  store i64 %add85, i64* %psize, align 8, !dbg !8852, !tbaa !3848
  br label %if.end89, !dbg !8853

if.else86:                                        ; preds = %if.else80
  %call87 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74, i64 0, i64 0)) #10, !dbg !8854
  %68 = load i8*, i8** %src_name.addr, align 8, !dbg !8856, !tbaa !2995
  %call88 = call i8* @quotearg_style(i32 4, i8* %68), !dbg !8856
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call87, i8* %call88), !dbg !8857
  store i1 false, i1* %retval, align 1, !dbg !8858
  br label %return, !dbg !8858

if.end89:                                         ; preds = %if.then84
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end79
  %69 = load i64, i64* %csize, align 8, !dbg !8859, !tbaa !3848
  %70 = load i64, i64* %n_read, align 8, !dbg !8860, !tbaa !3848
  %sub91 = sub i64 %70, %69, !dbg !8860
  store i64 %sub91, i64* %n_read, align 8, !dbg !8860, !tbaa !3848
  %71 = load i64, i64* %csize, align 8, !dbg !8861, !tbaa !3848
  %72 = load i8*, i8** %cbuf, align 8, !dbg !8862, !tbaa !2995
  %add.ptr = getelementptr inbounds i8, i8* %72, i64 %71, !dbg !8862
  store i8* %add.ptr, i8** %cbuf, align 8, !dbg !8862, !tbaa !2995
  br label %while.cond17, !dbg !8747, !llvm.loop !8863

while.end:                                        ; preds = %while.cond17
  %73 = load i8, i8* %make_hole, align 1, !dbg !8865, !tbaa !3106
  %tobool92 = trunc i8 %73 to i1, !dbg !8865
  %74 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !8866, !tbaa !2995
  %frombool93 = zext i1 %tobool92 to i8, !dbg !8867
  store i8 %frombool93, i8* %74, align 1, !dbg !8867, !tbaa !3106, !ctir !120
  br label %while.cond, !dbg !8700, !llvm.loop !8719

while.end94:                                      ; preds = %if.then10, %while.cond
  %75 = load i8, i8* %make_hole, align 1, !dbg !8868, !tbaa !3106
  %tobool95 = trunc i8 %75 to i1, !dbg !8868
  br i1 %tobool95, label %land.lhs.true97, label %if.else101, !dbg !8870

land.lhs.true97:                                  ; preds = %while.end94
  %76 = load i32, i32* %dest_fd.addr, align 4, !dbg !8871, !tbaa !2982
  %77 = load i8*, i8** %dst_name.addr, align 8, !dbg !8872, !tbaa !2995
  %78 = load i8, i8* %punch_holes.addr, align 1, !dbg !8873, !tbaa !3106
  %tobool98 = trunc i8 %78 to i1, !dbg !8873
  %79 = load i64, i64* %psize, align 8, !dbg !8874, !tbaa !3848
  %call99 = call zeroext i1 @create_hole(i32 %76, i8* %77, i1 zeroext %tobool98, i64 %79), !dbg !8875
  br i1 %call99, label %if.else101, label %if.then100, !dbg !8876

if.then100:                                       ; preds = %land.lhs.true97
  store i1 false, i1* %retval, align 1, !dbg !8877
  br label %return, !dbg !8877

if.else101:                                       ; preds = %land.lhs.true97, %while.end94
  store i1 true, i1* %retval, align 1, !dbg !8878
  br label %return, !dbg !8878

return:                                           ; preds = %if.else101, %if.then100, %if.else86, %if.then67, %if.then60, %if.end
  %80 = load i1, i1* %retval, align 1, !dbg !8879
  ret i1 %80, !dbg !8879
}

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fchmod_or_lchmod(i32 %desc, i8* %name, i32 %mode) #4 !dbg !8880 !ctir !467 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !8881, metadata !DIExpression()), !dbg !8882
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8883, metadata !DIExpression()), !dbg !8884
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8885, metadata !DIExpression()), !dbg !8886
  %0 = load i32, i32* %desc.addr, align 4, !dbg !8887, !tbaa !2982
  %cmp = icmp sle i32 0, %0, !dbg !8889
  br i1 %cmp, label %if.then, label %if.end, !dbg !8890

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !8891, !tbaa !2982
  %2 = load i32, i32* %mode.addr, align 4, !dbg !8892, !tbaa !2982
  %call = call i32 @fchmod(i32 %1, i32 %2) #10, !dbg !8893
  store i32 %call, i32* %retval, align 4, !dbg !8894
  br label %return, !dbg !8894

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8895, !tbaa !2995
  %4 = load i32, i32* %mode.addr, align 4, !dbg !8896, !tbaa !2982
  %call1 = call i32 @chmod(i8* %3, i32 %4) #10, !dbg !8897
  store i32 %call1, i32* %retval, align 4, !dbg !8898
  br label %return, !dbg !8898

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8899
  ret i32 %5, !dbg !8899
}

; Function Attrs: nounwind
declare dso_local i32 @fchmod(i32, i32) #2

declare dso_local i64 @read(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_nul(i8* %buf, i64 %length) #9 !dbg !8900 !ctir !462 {
entry:
  %retval = alloca i1, align 1
  %buf.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !464
  %word = alloca i8, align 1, !ctir !466
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8901, metadata !DIExpression()), !dbg !8902
  store i64 %length, i64* %length.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8903, metadata !DIExpression()), !dbg !8904
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8905, metadata !DIExpression()), !dbg !8906
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !8907, !tbaa !2995
  store i8* %0, i8** %p, align 8, !dbg !8906, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8* %word, metadata !8908, metadata !DIExpression()), !dbg !8909
  %1 = load i64, i64* %length.addr, align 8, !dbg !8910, !tbaa !3848
  %tobool = icmp ne i64 %1, 0, !dbg !8910
  br i1 %tobool, label %if.end, label %if.then, !dbg !8912

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !8913
  br label %return, !dbg !8913

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !8914

while.cond:                                       ; preds = %if.end7, %if.end
  %2 = load i64, i64* %length.addr, align 8, !dbg !8915, !tbaa !3848
  %and = and i64 %2, 0, !dbg !8915
  %tobool1 = icmp ne i64 %and, 0, !dbg !8914
  br i1 %tobool1, label %while.body, label %while.end, !dbg !8914

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %p, align 8, !dbg !8916, !tbaa !2995
  %4 = load i8, i8* %3, align 1, !dbg !8919, !tbaa !3657, !ctir !465
  %tobool2 = icmp ne i8 %4, 0, !dbg !8919
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8920

if.then3:                                         ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !8921
  br label %return, !dbg !8921

if.end4:                                          ; preds = %while.body
  %5 = load i8*, i8** %p, align 8, !dbg !8922, !tbaa !2995
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8922
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8922, !tbaa !2995
  %6 = load i64, i64* %length.addr, align 8, !dbg !8923, !tbaa !3848
  %dec = add i64 %6, -1, !dbg !8923
  store i64 %dec, i64* %length.addr, align 8, !dbg !8923, !tbaa !3848
  %7 = load i64, i64* %length.addr, align 8, !dbg !8924, !tbaa !3848
  %tobool5 = icmp ne i64 %7, 0, !dbg !8924
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8926

if.then6:                                         ; preds = %if.end4
  store i1 true, i1* %retval, align 1, !dbg !8927
  br label %return, !dbg !8927

if.end7:                                          ; preds = %if.end4
  br label %while.cond, !dbg !8914, !llvm.loop !8928

while.end:                                        ; preds = %while.cond
  br label %for.cond, !dbg !8930

for.cond:                                         ; preds = %if.end16, %while.end
  %8 = load i8*, i8** %p, align 8, !dbg !8931, !tbaa !2995
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %word, i8* align 1 %8, i64 1, i1 false), !dbg !8935
  %9 = load i8, i8* %word, align 1, !dbg !8936, !tbaa !3657
  %tobool8 = icmp ne i8 %9, 0, !dbg !8936
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8938

if.then9:                                         ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !8939
  br label %return, !dbg !8939

if.end10:                                         ; preds = %for.cond
  %10 = load i8*, i8** %p, align 8, !dbg !8940, !tbaa !2995
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 1, !dbg !8940
  store i8* %add.ptr, i8** %p, align 8, !dbg !8940, !tbaa !2995
  %11 = load i64, i64* %length.addr, align 8, !dbg !8941, !tbaa !3848
  %sub = sub i64 %11, 1, !dbg !8941
  store i64 %sub, i64* %length.addr, align 8, !dbg !8941, !tbaa !3848
  %12 = load i64, i64* %length.addr, align 8, !dbg !8942, !tbaa !3848
  %tobool11 = icmp ne i64 %12, 0, !dbg !8942
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8944

if.then12:                                        ; preds = %if.end10
  store i1 true, i1* %retval, align 1, !dbg !8945
  br label %return, !dbg !8945

if.end13:                                         ; preds = %if.end10
  %13 = load i64, i64* %length.addr, align 8, !dbg !8946, !tbaa !3848
  %and14 = and i64 %13, 15, !dbg !8946
  %cmp = icmp eq i64 %and14, 0, !dbg !8948
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !8949

if.then15:                                        ; preds = %if.end13
  br label %for.end, !dbg !8950

if.end16:                                         ; preds = %if.end13
  br label %for.cond, !dbg !8951, !llvm.loop !8952

for.end:                                          ; preds = %if.then15
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !8955, !tbaa !2995
  %15 = load i8*, i8** %p, align 8, !dbg !8956, !tbaa !2995
  %16 = load i64, i64* %length.addr, align 8, !dbg !8957, !tbaa !3848
  %call = call i32 @memcmp(i8* %14, i8* %15, i64 %16) #14, !dbg !8958
  %cmp17 = icmp eq i32 %call, 0, !dbg !8959
  store i1 %cmp17, i1* %retval, align 1, !dbg !8960
  br label %return, !dbg !8960

return:                                           ; preds = %for.end, %if.then12, %if.then9, %if.then6, %if.then3, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !8961
  ret i1 %17, !dbg !8961
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hole(i32 %fd, i8* %name, i1 zeroext %punch_holes, i64 %size) #4 !dbg !8962 !ctir !448 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %punch_holes.addr = alloca i8, align 1
  %size.addr = alloca i64, align 8
  %file_end = alloca i64, align 8, !ctir !248
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8963, metadata !DIExpression()), !dbg !8964
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8965, metadata !DIExpression()), !dbg !8966
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !8967, metadata !DIExpression()), !dbg !8968
  store i64 %size, i64* %size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8969, metadata !DIExpression()), !dbg !8970
  call void @llvm.dbg.declare(metadata i64* %file_end, metadata !8971, metadata !DIExpression()), !dbg !8972
  %0 = load i32, i32* %fd.addr, align 4, !dbg !8973, !tbaa !2982
  %1 = load i64, i64* %size.addr, align 8, !dbg !8974, !tbaa !3848
  %call = call i64 @lseek(i32 %0, i64 %1, i32 1) #10, !dbg !8975
  store i64 %call, i64* %file_end, align 8, !dbg !8972, !tbaa !3848
  %2 = load i64, i64* %file_end, align 8, !dbg !8976, !tbaa !3848
  %cmp = icmp slt i64 %2, 0, !dbg !8978
  br i1 %cmp, label %if.then, label %if.end, !dbg !8979

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !8980
  %3 = load i32, i32* %call1, align 4, !dbg !8980, !tbaa !2982, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i64 0, i64 0)) #10, !dbg !8982
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8983, !tbaa !2995
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !8983
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !8984
  store i1 false, i1* %retval, align 1, !dbg !8985
  br label %return, !dbg !8985

if.end:                                           ; preds = %entry
  %5 = load i8, i8* %punch_holes.addr, align 1, !dbg !8986, !tbaa !3106
  %tobool = trunc i8 %5 to i1, !dbg !8986
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !8988

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %fd.addr, align 4, !dbg !8989, !tbaa !2982
  %7 = load i64, i64* %file_end, align 8, !dbg !8990, !tbaa !3848
  %8 = load i64, i64* %size.addr, align 8, !dbg !8991, !tbaa !3848
  %sub = sub nsw i64 %7, %8, !dbg !8992
  %9 = load i64, i64* %size.addr, align 8, !dbg !8993, !tbaa !3848
  %call4 = call i32 @punch_hole(i32 %6, i64 %sub, i64 %9), !dbg !8994
  %cmp5 = icmp slt i32 %call4, 0, !dbg !8995
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !8996

if.then6:                                         ; preds = %land.lhs.true
  %call7 = call i32* @__errno_location() #15, !dbg !8997
  %10 = load i32, i32* %call7, align 4, !dbg !8997, !tbaa !2982, !ctir !7
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !8999
  %11 = load i8*, i8** %name.addr, align 8, !dbg !9000, !tbaa !2995
  %call9 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !9000
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call8, i8* %call9), !dbg !9001
  store i1 false, i1* %retval, align 1, !dbg !9002
  br label %return, !dbg !9002

if.end10:                                         ; preds = %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !9003
  br label %return, !dbg !9003

return:                                           ; preds = %if.end10, %if.then6, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !9004
  ret i1 %12, !dbg !9004
}

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @punch_hole(i32 %fd, i64 %offset, i64 %length) #4 !dbg !9005 !ctir !452 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %length.addr = alloca i64, align 8
  %ret = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !9006, metadata !DIExpression()), !dbg !9007
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !9008, metadata !DIExpression()), !dbg !9009
  store i64 %length, i64* %length.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !9010, metadata !DIExpression()), !dbg !9011
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9012, metadata !DIExpression()), !dbg !9013
  store i32 0, i32* %ret, align 4, !dbg !9013, !tbaa !2982
  %0 = load i32, i32* %fd.addr, align 4, !dbg !9014, !tbaa !2982
  %1 = load i64, i64* %offset.addr, align 8, !dbg !9015, !tbaa !3848
  %2 = load i64, i64* %length.addr, align 8, !dbg !9016, !tbaa !3848
  %call = call i32 @fallocate(i32 %0, i32 3, i64 %1, i64 %2), !dbg !9017
  store i32 %call, i32* %ret, align 4, !dbg !9018, !tbaa !2982
  %3 = load i32, i32* %ret, align 4, !dbg !9019, !tbaa !2982
  %cmp = icmp slt i32 %3, 0, !dbg !9021
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9022

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !9023
  %4 = load i32, i32* %call1, align 4, !dbg !9023, !tbaa !2982, !ctir !7
  %call2 = call zeroext i1 @is_ENOTSUP(i32 %4), !dbg !9024
  br i1 %call2, label %if.then, label %lor.lhs.false, !dbg !9025

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call3 = call i32* @__errno_location() #15, !dbg !9026
  %5 = load i32, i32* %call3, align 4, !dbg !9026, !tbaa !2982, !ctir !7
  %cmp4 = icmp eq i32 %5, 38, !dbg !9027
  br i1 %cmp4, label %if.then, label %if.end, !dbg !9028

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !9029, !tbaa !2982
  br label %if.end, !dbg !9030

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !9031, !tbaa !2982
  ret i32 %6, !dbg !9032
}

declare dso_local i32 @fallocate(i32, i32, i64, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %err) #4 !dbg !9033 !ctir !307 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !9034, metadata !DIExpression()), !dbg !9035
  %0 = load i32, i32* %err.addr, align 4, !dbg !9036, !tbaa !2982
  %cmp = icmp eq i32 %0, 95, !dbg !9037
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9038

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !9038

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  ret i1 %1, !dbg !9039
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extent_scan_free(%struct.extent_scan* %scan) #4 !dbg !9040 !ctir !436 {
entry:
  %scan.addr = alloca %struct.extent_scan*, align 8
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !9041, metadata !DIExpression()), !dbg !9042
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9043, !tbaa !2995
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !9044, !ctir !439
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !9044, !tbaa !8448, !ctir !429
  %2 = bitcast %struct.extent_info* %1 to i8*, !dbg !9043
  call void @free(i8* %2) #10, !dbg !9045
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9046, !tbaa !2995
  %ext_info1 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !9047, !ctir !439
  store %struct.extent_info* null, %struct.extent_info** %ext_info1, align 8, !dbg !9048, !tbaa !8448, !ctir !429
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9049, !tbaa !2995
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 3, !dbg !9050, !ctir !439
  store i64 0, i64* %ei_count, align 8, !dbg !9051, !tbaa !8429, !ctir !55
  ret void, !dbg !9052
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @write_zeros(i32 %fd, i64 %n_bytes) #4 !dbg !518 !ctir !450 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %n_bytes.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !9053, metadata !DIExpression()), !dbg !9054
  store i64 %n_bytes, i64* %n_bytes.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n_bytes.addr, metadata !9055, metadata !DIExpression()), !dbg !9056
  %0 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !9057, !tbaa !2995
  %cmp = icmp eq i8* %0, null, !dbg !9059
  br i1 %cmp, label %if.then, label %if.end3, !dbg !9060

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @write_zeros.nz, align 8, !dbg !9061, !tbaa !3848
  %call = call noalias i8* @calloc(i64 %1, i64 1) #10, !dbg !9063
  store i8* %call, i8** @write_zeros.zeros, align 8, !dbg !9064, !tbaa !2995
  %2 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !9065, !tbaa !2995
  %cmp1 = icmp eq i8* %2, null, !dbg !9067
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !9068

if.then2:                                         ; preds = %if.then
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @write_zeros.fallback, i64 0, i64 0), i8** @write_zeros.zeros, align 8, !dbg !9069, !tbaa !2995
  store i64 1024, i64* @write_zeros.nz, align 8, !dbg !9071, !tbaa !3848
  br label %if.end, !dbg !9072

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !9073

if.end3:                                          ; preds = %if.end, %entry
  br label %while.cond, !dbg !9074

while.cond:                                       ; preds = %if.end8, %if.end3
  %3 = load i64, i64* %n_bytes.addr, align 8, !dbg !9075, !tbaa !3848
  %tobool = icmp ne i64 %3, 0, !dbg !9074
  br i1 %tobool, label %while.body, label %while.end, !dbg !9074

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n, metadata !9076, metadata !DIExpression()), !dbg !9078
  %4 = load i64, i64* @write_zeros.nz, align 8, !dbg !9079, !tbaa !3848
  %5 = load i64, i64* %n_bytes.addr, align 8, !dbg !9079, !tbaa !3848
  %cmp4 = icmp ult i64 %4, %5, !dbg !9079
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !9079

cond.true:                                        ; preds = %while.body
  %6 = load i64, i64* @write_zeros.nz, align 8, !dbg !9079, !tbaa !3848
  br label %cond.end, !dbg !9079

cond.false:                                       ; preds = %while.body
  %7 = load i64, i64* %n_bytes.addr, align 8, !dbg !9079, !tbaa !3848
  br label %cond.end, !dbg !9079

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !9079
  store i64 %cond, i64* %n, align 8, !dbg !9078, !tbaa !3848
  %8 = load i32, i32* %fd.addr, align 4, !dbg !9080, !tbaa !2982
  %9 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !9082, !tbaa !2995
  %10 = load i64, i64* %n, align 8, !dbg !9083, !tbaa !3848
  %call5 = call i64 @full_write(i32 %8, i8* %9, i64 %10), !dbg !9084
  %11 = load i64, i64* %n, align 8, !dbg !9085, !tbaa !3848
  %cmp6 = icmp ne i64 %call5, %11, !dbg !9086
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !9087

if.then7:                                         ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !9088
  br label %return, !dbg !9088

if.end8:                                          ; preds = %cond.end
  %12 = load i64, i64* %n, align 8, !dbg !9089, !tbaa !3848
  %13 = load i64, i64* %n_bytes.addr, align 8, !dbg !9090, !tbaa !3848
  %sub = sub i64 %13, %12, !dbg !9090
  store i64 %sub, i64* %n_bytes.addr, align 8, !dbg !9090, !tbaa !3848
  br label %while.cond, !dbg !9074, !llvm.loop !9091

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !9093
  br label %return, !dbg !9093

return:                                           ; preds = %while.end, %if.then7
  %14 = load i1, i1* %retval, align 1, !dbg !9094
  ret i1 %14, !dbg !9094
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: nounwind
declare dso_local i8* @mempcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @writable_destination(i8* %file, i32 %mode) #4 !dbg !9095 !ctir !366 {
entry:
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9096, metadata !DIExpression()), !dbg !9097
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9098, metadata !DIExpression()), !dbg !9099
  %0 = load i32, i32* %mode.addr, align 4, !dbg !9100, !tbaa !2982
  %and = and i32 %0, 61440, !dbg !9100
  %cmp = icmp eq i32 %and, 40960, !dbg !9100
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !9101

lor.lhs.false:                                    ; preds = %entry
  %call = call zeroext i1 @can_write_any_file(), !dbg !9102
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !9103

lor.rhs:                                          ; preds = %lor.lhs.false
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9104, !tbaa !2995
  %call1 = call i32 @euidaccess(i8* %1, i32 2) #10, !dbg !9105
  %cmp2 = icmp eq i32 %call1, 0, !dbg !9106
  br label %lor.end, !dbg !9103

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %2 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %2, !dbg !9107
}

; Function Attrs: nounwind
declare dso_local i32 @euidaccess(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i8* @canonicalize_file_name(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cp_options_default(%struct.cp_options* %x) #4 !dbg !9108 !ctir !297 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !9109, metadata !DIExpression()), !dbg !9110
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !9111, !tbaa !2995
  %1 = bitcast %struct.cp_options* %0 to i8*, !dbg !9112
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 80, i1 false), !dbg !9112
  %call = call i32 @geteuid() #10, !dbg !9113
  %cmp = icmp eq i32 %call, 0, !dbg !9114
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !9115, !tbaa !2995
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !9116, !ctir !254
  %frombool = zext i1 %cmp to i8, !dbg !9117
  store i8 %frombool, i8* %owner_privileges, align 1, !dbg !9117, !tbaa !8304, !ctir !120
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !9118, !tbaa !2995
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 11, !dbg !9119, !ctir !254
  %frombool1 = zext i1 %cmp to i8, !dbg !9120
  store i8 %frombool1, i8* %chown_privileges, align 2, !dbg !9120, !tbaa !7957, !ctir !120
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !9121, !tbaa !2995
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 35, !dbg !9122, !ctir !254
  store i32 -1, i32* %rename_errno, align 4, !dbg !9123, !tbaa !3279, !ctir !7
  ret void, !dbg !9124
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_created(i64 %ino, i64 %dev) #4 !dbg !9125 !ctir !531 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %probe = alloca %struct.Src_to_dest, align 8, !ctir !534
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !533
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !9126, metadata !DIExpression()), !dbg !9127
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !9128, metadata !DIExpression()), !dbg !9129
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %probe, metadata !9130, metadata !DIExpression()), !dbg !9131
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !9132, metadata !DIExpression()), !dbg !9133
  %0 = load i64, i64* %ino.addr, align 8, !dbg !9134, !tbaa !3848
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 0, !dbg !9135, !ctir !534
  store i64 %0, i64* %st_ino, align 8, !dbg !9136, !tbaa !9137, !ctir !227
  %1 = load i64, i64* %dev.addr, align 8, !dbg !9139, !tbaa !3848
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 1, !dbg !9140, !ctir !534
  store i64 %1, i64* %st_dev, align 8, !dbg !9141, !tbaa !9142, !ctir !230
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 2, !dbg !9143, !ctir !534
  store i8* null, i8** %name, align 8, !dbg !9144, !tbaa !9145, !ctir !9
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9146, !tbaa !2995
  %3 = bitcast %struct.Src_to_dest* %probe to i8*, !dbg !9147
  %call = call i8* @hash_delete(%struct.hash_table* %2, i8* %3), !dbg !9148
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !9148
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %ent, align 8, !dbg !9149, !tbaa !2995
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9150, !tbaa !2995
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !9150
  br i1 %tobool, label %if.then, label %if.end, !dbg !9152

if.then:                                          ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9153, !tbaa !2995
  %7 = bitcast %struct.Src_to_dest* %6 to i8*, !dbg !9153
  call void @src_to_dest_free(i8* %7), !dbg !9154
  br label %if.end, !dbg !9154

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9155
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @src_to_dest_free(i8* %x) #4 !dbg !9156 !ctir !545 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !533
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !9157, metadata !DIExpression()), !dbg !9158
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !9159, metadata !DIExpression()), !dbg !9160
  %0 = load i8*, i8** %x.addr, align 8, !dbg !9161, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !9161
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !9160, !tbaa !2995
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !9162, !tbaa !2995
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !9163, !ctir !534
  %3 = load i8*, i8** %name, align 8, !dbg !9163, !tbaa !9145, !ctir !9
  call void @free(i8* %3) #10, !dbg !9164
  %4 = load i8*, i8** %x.addr, align 8, !dbg !9165, !tbaa !2995
  call void @free(i8* %4) #10, !dbg !9166
  ret void, !dbg !9167
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @src_to_dest_lookup(i64 %ino, i64 %dev) #4 !dbg !9168 !ctir !539 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest, align 8, !ctir !534
  %e = alloca %struct.Src_to_dest*, align 8, !ctir !541
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !9169, metadata !DIExpression()), !dbg !9170
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !9171, metadata !DIExpression()), !dbg !9172
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %ent, metadata !9173, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %e, metadata !9175, metadata !DIExpression()), !dbg !9176
  %0 = load i64, i64* %ino.addr, align 8, !dbg !9177, !tbaa !3848
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 0, !dbg !9178, !ctir !534
  store i64 %0, i64* %st_ino, align 8, !dbg !9179, !tbaa !9137, !ctir !227
  %1 = load i64, i64* %dev.addr, align 8, !dbg !9180, !tbaa !3848
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 1, !dbg !9181, !ctir !534
  store i64 %1, i64* %st_dev, align 8, !dbg !9182, !tbaa !9142, !ctir !230
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9183, !tbaa !2995
  %3 = bitcast %struct.Src_to_dest* %ent to i8*, !dbg !9184
  %call = call i8* @hash_lookup(%struct.hash_table* %2, i8* %3), !dbg !9185
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !9185
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %e, align 8, !dbg !9186, !tbaa !2995
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !9187, !tbaa !2995
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !9187
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9187

cond.true:                                        ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !9188, !tbaa !2995
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 2, !dbg !9189, !ctir !542
  %7 = load i8*, i8** %name, align 8, !dbg !9189, !tbaa !9145, !ctir !9
  br label %cond.end, !dbg !9187

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9187

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ null, %cond.false ], !dbg !9187
  ret i8* %cond, !dbg !9190
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @remember_copied(i8* %name, i64 %ino, i64 %dev) #4 !dbg !9191 !ctir !543 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !533
  %ent_from_table = alloca %struct.Src_to_dest*, align 8, !ctir !533
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9192, metadata !DIExpression()), !dbg !9193
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !9194, metadata !DIExpression()), !dbg !9195
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !9196, metadata !DIExpression()), !dbg !9197
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !9198, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent_from_table, metadata !9200, metadata !DIExpression()), !dbg !9201
  %call = call noalias i8* @xmalloc(i64 24), !dbg !9202
  %0 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !9202
  store %struct.Src_to_dest* %0, %struct.Src_to_dest** %ent, align 8, !dbg !9203, !tbaa !2995
  %1 = load i8*, i8** %name.addr, align 8, !dbg !9204, !tbaa !2995
  %call1 = call noalias i8* @xstrdup(i8* %1), !dbg !9205
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9206, !tbaa !2995
  %name2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !9207, !ctir !534
  store i8* %call1, i8** %name2, align 8, !dbg !9208, !tbaa !9145, !ctir !9
  %3 = load i64, i64* %ino.addr, align 8, !dbg !9209, !tbaa !3848
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9210, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !9211, !ctir !534
  store i64 %3, i64* %st_ino, align 8, !dbg !9212, !tbaa !9137, !ctir !227
  %5 = load i64, i64* %dev.addr, align 8, !dbg !9213, !tbaa !3848
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9214, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 1, !dbg !9215, !ctir !534
  store i64 %5, i64* %st_dev, align 8, !dbg !9216, !tbaa !9142, !ctir !230
  %7 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9217, !tbaa !2995
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9218, !tbaa !2995
  %9 = bitcast %struct.Src_to_dest* %8 to i8*, !dbg !9218
  %call3 = call i8* @hash_insert(%struct.hash_table* %7, i8* %9), !dbg !9219
  %10 = bitcast i8* %call3 to %struct.Src_to_dest*, !dbg !9219
  store %struct.Src_to_dest* %10, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !9220, !tbaa !2995
  %11 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !9221, !tbaa !2995
  %cmp = icmp eq %struct.Src_to_dest* %11, null, !dbg !9223
  br i1 %cmp, label %if.then, label %if.end, !dbg !9224

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !9225
  unreachable, !dbg !9225

if.end:                                           ; preds = %entry
  %12 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !9227, !tbaa !2995
  %13 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9229, !tbaa !2995
  %cmp4 = icmp ne %struct.Src_to_dest* %12, %13, !dbg !9230
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !9231

if.then5:                                         ; preds = %if.end
  %14 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9232, !tbaa !2995
  %15 = bitcast %struct.Src_to_dest* %14 to i8*, !dbg !9232
  call void @src_to_dest_free(i8* %15), !dbg !9234
  %16 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !9235, !tbaa !2995
  %name6 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %16, i32 0, i32 2, !dbg !9236, !ctir !534
  %17 = load i8*, i8** %name6, align 8, !dbg !9236, !tbaa !9145, !ctir !9
  store i8* %17, i8** %retval, align 8, !dbg !9237
  br label %return, !dbg !9237

if.end7:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !9238
  br label %return, !dbg !9238

return:                                           ; preds = %if.end7, %if.then5
  %18 = load i8*, i8** %retval, align 8, !dbg !9239
  ret i8* %18, !dbg !9239
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_init() #4 !dbg !9240 !ctir !134 {
entry:
  %call = call %struct.hash_table* @hash_initialize(i64 103, %struct.hash_tuning* null, i64 (i8*, i64)* @src_to_dest_hash, i1 (i8*, i8*)* @src_to_dest_compare, void (i8*)* @src_to_dest_free), !dbg !9241
  store %struct.hash_table* %call, %struct.hash_table** @src_to_dest, align 8, !dbg !9242, !tbaa !2995
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9243, !tbaa !2995
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !9245
  br i1 %cmp, label %if.then, label %if.end, !dbg !9246

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !9247
  unreachable, !dbg !9247

if.end:                                           ; preds = %entry
  ret void, !dbg !9248
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @src_to_dest_hash(i8* %x, i64 %table_size) #4 !dbg !9249 !ctir !547 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.Src_to_dest*, align 8, !ctir !541
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !9250, metadata !DIExpression()), !dbg !9251
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !9252, metadata !DIExpression()), !dbg !9253
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %p, metadata !9254, metadata !DIExpression()), !dbg !9255
  %0 = load i8*, i8** %x.addr, align 8, !dbg !9256, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !9256
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %p, align 8, !dbg !9255, !tbaa !2995
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %p, align 8, !dbg !9257, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 0, !dbg !9258, !ctir !542
  %3 = load i64, i64* %st_ino, align 8, !dbg !9258, !tbaa !9137, !ctir !227
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !9259, !tbaa !3848
  %rem = urem i64 %3, %4, !dbg !9260
  ret i64 %rem, !dbg !9261
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @src_to_dest_compare(i8* %x, i8* %y) #4 !dbg !9262 !ctir !549 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !541
  %b = alloca %struct.Src_to_dest*, align 8, !ctir !541
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !9263, metadata !DIExpression()), !dbg !9264
  store i8* %y, i8** %y.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !9265, metadata !DIExpression()), !dbg !9266
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !9267, metadata !DIExpression()), !dbg !9268
  %0 = load i8*, i8** %x.addr, align 8, !dbg !9269, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !9269
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !9268, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %b, metadata !9270, metadata !DIExpression()), !dbg !9271
  %2 = load i8*, i8** %y.addr, align 8, !dbg !9272, !tbaa !2995
  %3 = bitcast i8* %2 to %struct.Src_to_dest*, !dbg !9272
  store %struct.Src_to_dest* %3, %struct.Src_to_dest** %b, align 8, !dbg !9271, !tbaa !2995
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !9273, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !9273, !ctir !542
  %5 = load i64, i64* %st_ino, align 8, !dbg !9273, !tbaa !9137, !ctir !227
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !9273, !tbaa !2995
  %st_ino1 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 0, !dbg !9273, !ctir !542
  %7 = load i64, i64* %st_ino1, align 8, !dbg !9273, !tbaa !9137, !ctir !227
  %cmp = icmp eq i64 %5, %7, !dbg !9273
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9273

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !9273, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %8, i32 0, i32 1, !dbg !9273, !ctir !542
  %9 = load i64, i64* %st_dev, align 8, !dbg !9273, !tbaa !9142, !ctir !230
  %10 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !9273, !tbaa !2995
  %st_dev2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %10, i32 0, i32 1, !dbg !9273, !ctir !542
  %11 = load i64, i64* %st_dev2, align 8, !dbg !9273, !tbaa !9142, !ctir !230
  %cmp3 = icmp eq i64 %9, %11, !dbg !9273
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !9274
  %13 = zext i1 %12 to i64, !dbg !9273
  %cond = select i1 %12, i32 1, i32 0, !dbg !9273
  %tobool = icmp ne i32 %cond, 0, !dbg !9273
  ret i1 %tobool, !dbg !9275
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_all() #4 !dbg !9276 !ctir !134 {
entry:
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9277, !tbaa !2995
  call void @hash_free(%struct.hash_table* %0), !dbg !9278
  ret void, !dbg !9279
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extent_scan_init(i32 %src_fd, %struct.extent_scan* %scan) #4 !dbg !9280 !ctir !1529 {
entry:
  %src_fd.addr = alloca i32, align 4
  %scan.addr = alloca %struct.extent_scan*, align 8
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !9281, metadata !DIExpression()), !dbg !9282
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !9283, metadata !DIExpression()), !dbg !9284
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !9285, !tbaa !2982
  %1 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9286, !tbaa !2995
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %1, i32 0, i32 0, !dbg !9287, !ctir !1532
  store i32 %0, i32* %fd, align 8, !dbg !9288, !tbaa !9289, !ctir !7
  %2 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9290, !tbaa !2995
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %2, i32 0, i32 3, !dbg !9291, !ctir !1532
  store i64 0, i64* %ei_count, align 8, !dbg !9292, !tbaa !8429, !ctir !55
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9293, !tbaa !2995
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !9294, !ctir !1532
  store %struct.extent_info* null, %struct.extent_info** %ext_info, align 8, !dbg !9295, !tbaa !8448, !ctir !1541
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9296, !tbaa !2995
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !9297, !ctir !1532
  store i64 0, i64* %scan_start, align 8, !dbg !9298, !tbaa !9299, !ctir !1528
  %5 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9300, !tbaa !2995
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %5, i32 0, i32 4, !dbg !9301, !ctir !1532
  store i8 0, i8* %initial_scan_failed, align 8, !dbg !9302, !tbaa !8409, !ctir !120
  %6 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9303, !tbaa !2995
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %6, i32 0, i32 5, !dbg !9304, !ctir !1532
  store i8 0, i8* %hit_final_extent, align 1, !dbg !9305, !tbaa !8403, !ctir !120
  %call = call zeroext i1 @extent_need_sync(), !dbg !9306
  %7 = zext i1 %call to i64, !dbg !9306
  %cond = select i1 %call, i32 1, i32 0, !dbg !9306
  %8 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9307, !tbaa !2995
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %8, i32 0, i32 2, !dbg !9308, !ctir !1532
  store i32 %cond, i32* %fm_flags, align 8, !dbg !9309, !tbaa !9310, !ctir !70
  ret void, !dbg !9311
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_need_sync() #4 !dbg !9312 !ctir !1245 {
entry:
  ret i1 true, !dbg !9313
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @extent_scan_read(%struct.extent_scan* %scan) #4 !dbg !9314 !ctir !1547 {
entry:
  %retval = alloca i1, align 1
  %scan.addr = alloca %struct.extent_scan*, align 8
  %si = alloca i32, align 4, !ctir !70
  %last_ei = alloca %struct.extent_info*, align 8, !ctir !1541
  %fiemap_buf = alloca %union.anon.20, align 8, !ctir !9315
  %fiemap = alloca %struct.fiemap*, align 8, !ctir !1549
  %fm_extents = alloca %struct.fiemap_extent*, align 8, !ctir !1578
  %prev_idx = alloca i64, align 8, !ctir !55
  %i = alloca i32, align 4, !ctir !70
  %new_logical = alloca i64, align 8, !ctir !1554
  %length_adjust = alloca i64, align 8, !ctir !1554
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !9319, metadata !DIExpression()), !dbg !9320
  call void @llvm.dbg.declare(metadata i32* %si, metadata !9321, metadata !DIExpression()), !dbg !9322
  store i32 0, i32* %si, align 4, !dbg !9322, !tbaa !2982
  call void @llvm.dbg.declare(metadata %struct.extent_info** %last_ei, metadata !9323, metadata !DIExpression()), !dbg !9324
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9325, !tbaa !2995
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !9326, !ctir !1532
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !9326, !tbaa !8448, !ctir !1541
  store %struct.extent_info* %1, %struct.extent_info** %last_ei, align 8, !dbg !9324, !tbaa !2995
  br label %while.body, !dbg !9327

while.body:                                       ; preds = %entry, %if.end165
  call void @llvm.dbg.declare(metadata %union.anon.20* %fiemap_buf, metadata !9328, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.declare(metadata %struct.fiemap** %fiemap, metadata !9331, metadata !DIExpression()), !dbg !9332
  %f = bitcast %union.anon.20* %fiemap_buf to %struct.fiemap*, !dbg !9333
  store %struct.fiemap* %f, %struct.fiemap** %fiemap, align 8, !dbg !9332, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.fiemap_extent** %fm_extents, metadata !9334, metadata !DIExpression()), !dbg !9335
  %2 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9336, !tbaa !2995
  %fm_extents1 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %2, i32 0, i32 6, !dbg !9337, !ctir !1550
  %arrayidx = getelementptr inbounds [0 x %struct.fiemap_extent], [0 x %struct.fiemap_extent]* %fm_extents1, i64 0, i64 0, !dbg !9336, !ctir !1565
  store %struct.fiemap_extent* %arrayidx, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9335, !tbaa !2995
  %3 = bitcast %union.anon.20* %fiemap_buf to i8*, !dbg !9338
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 4096, i1 false), !dbg !9338
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9339, !tbaa !2995
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !9340, !ctir !1532
  %5 = load i64, i64* %scan_start, align 8, !dbg !9340, !tbaa !9299, !ctir !1528
  %6 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9341, !tbaa !2995
  %fm_start = getelementptr inbounds %struct.fiemap, %struct.fiemap* %6, i32 0, i32 0, !dbg !9342, !ctir !1550
  store i64 %5, i64* %fm_start, align 8, !dbg !9343, !tbaa !9344, !ctir !1554
  %7 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9346, !tbaa !2995
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %7, i32 0, i32 2, !dbg !9347, !ctir !1532
  %8 = load i32, i32* %fm_flags, align 8, !dbg !9347, !tbaa !9310, !ctir !70
  %9 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9348, !tbaa !2995
  %fm_flags2 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %9, i32 0, i32 2, !dbg !9349, !ctir !1550
  store i32 %8, i32* %fm_flags2, align 8, !dbg !9350, !tbaa !9351, !ctir !1559
  %10 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9352, !tbaa !2995
  %fm_extent_count = getelementptr inbounds %struct.fiemap, %struct.fiemap* %10, i32 0, i32 4, !dbg !9353, !ctir !1550
  store i32 72, i32* %fm_extent_count, align 8, !dbg !9354, !tbaa !9355, !ctir !1559
  %11 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9356, !tbaa !2995
  %scan_start3 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %11, i32 0, i32 1, !dbg !9357, !ctir !1532
  %12 = load i64, i64* %scan_start3, align 8, !dbg !9357, !tbaa !9299, !ctir !1528
  %sub = sub i64 -1, %12, !dbg !9358
  %13 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9359, !tbaa !2995
  %fm_length = getelementptr inbounds %struct.fiemap, %struct.fiemap* %13, i32 0, i32 1, !dbg !9360, !ctir !1550
  store i64 %sub, i64* %fm_length, align 8, !dbg !9361, !tbaa !9362, !ctir !1554
  %14 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9363, !tbaa !2995
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %14, i32 0, i32 0, !dbg !9365, !ctir !1532
  %15 = load i32, i32* %fd, align 8, !dbg !9365, !tbaa !9289, !ctir !7
  %16 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9366, !tbaa !2995
  %call = call i32 (i32, i64, ...) @ioctl(i32 %15, i64 3223348747, %struct.fiemap* %16) #10, !dbg !9367
  %cmp = icmp slt i32 %call, 0, !dbg !9368
  br i1 %cmp, label %if.then, label %if.end7, !dbg !9369

if.then:                                          ; preds = %while.body
  %17 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9370, !tbaa !2995
  %scan_start4 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %17, i32 0, i32 1, !dbg !9373, !ctir !1532
  %18 = load i64, i64* %scan_start4, align 8, !dbg !9373, !tbaa !9299, !ctir !1528
  %cmp5 = icmp eq i64 %18, 0, !dbg !9374
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !9375

if.then6:                                         ; preds = %if.then
  %19 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9376, !tbaa !2995
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %19, i32 0, i32 4, !dbg !9377, !ctir !1532
  store i8 1, i8* %initial_scan_failed, align 8, !dbg !9378, !tbaa !8409, !ctir !120
  br label %if.end, !dbg !9376

if.end:                                           ; preds = %if.then6, %if.then
  store i1 false, i1* %retval, align 1, !dbg !9379
  br label %return, !dbg !9379

if.end7:                                          ; preds = %while.body
  %20 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9380, !tbaa !2995
  %fm_mapped_extents = getelementptr inbounds %struct.fiemap, %struct.fiemap* %20, i32 0, i32 3, !dbg !9382, !ctir !1550
  %21 = load i32, i32* %fm_mapped_extents, align 4, !dbg !9382, !tbaa !9383, !ctir !1559
  %cmp8 = icmp eq i32 %21, 0, !dbg !9384
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !9385

if.then9:                                         ; preds = %if.end7
  %22 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9386, !tbaa !2995
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 5, !dbg !9388, !ctir !1532
  store i8 1, i8* %hit_final_extent, align 1, !dbg !9389, !tbaa !8403, !ctir !120
  %23 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9390, !tbaa !2995
  %scan_start10 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %23, i32 0, i32 1, !dbg !9391, !ctir !1532
  %24 = load i64, i64* %scan_start10, align 8, !dbg !9391, !tbaa !9299, !ctir !1528
  %cmp11 = icmp ne i64 %24, 0, !dbg !9392
  store i1 %cmp11, i1* %retval, align 1, !dbg !9393
  br label %return, !dbg !9393

if.end12:                                         ; preds = %if.end7
  %25 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9394, !tbaa !2995
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %25, i32 0, i32 3, !dbg !9394, !ctir !1532
  %26 = load i64, i64* %ei_count, align 8, !dbg !9394, !tbaa !8429, !ctir !55
  %27 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9394, !tbaa !2995
  %fm_mapped_extents13 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %27, i32 0, i32 3, !dbg !9394, !ctir !1550
  %28 = load i32, i32* %fm_mapped_extents13, align 4, !dbg !9394, !tbaa !9383, !ctir !1559
  %conv = zext i32 %28 to i64, !dbg !9394
  %sub14 = sub i64 -1, %conv, !dbg !9394
  %cmp15 = icmp ule i64 %26, %sub14, !dbg !9394
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !9397

if.then17:                                        ; preds = %if.end12
  br label %if.end18, !dbg !9397

if.else:                                          ; preds = %if.end12
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.170, i64 0, i64 0), i32 126, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !9394
  unreachable, !dbg !9394

if.end18:                                         ; preds = %if.then17
  %29 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9398, !tbaa !2995
  %fm_mapped_extents19 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %29, i32 0, i32 3, !dbg !9399, !ctir !1550
  %30 = load i32, i32* %fm_mapped_extents19, align 4, !dbg !9399, !tbaa !9383, !ctir !1559
  %conv20 = zext i32 %30 to i64, !dbg !9398
  %31 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9400, !tbaa !2995
  %ei_count21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %31, i32 0, i32 3, !dbg !9401, !ctir !1532
  %32 = load i64, i64* %ei_count21, align 8, !dbg !9402, !tbaa !8429, !ctir !55
  %add = add i64 %32, %conv20, !dbg !9402
  store i64 %add, i64* %ei_count21, align 8, !dbg !9402, !tbaa !8429, !ctir !55
  call void @llvm.dbg.declare(metadata i64* %prev_idx, metadata !9403, metadata !DIExpression()), !dbg !9405
  %33 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9406, !tbaa !2995
  %34 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9407, !tbaa !2995
  %ext_info22 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %34, i32 0, i32 6, !dbg !9408, !ctir !1532
  %35 = load %struct.extent_info*, %struct.extent_info** %ext_info22, align 8, !dbg !9408, !tbaa !8448, !ctir !1541
  %sub.ptr.lhs.cast = ptrtoint %struct.extent_info* %33 to i64, !dbg !9409
  %sub.ptr.rhs.cast = ptrtoint %struct.extent_info* %35 to i64, !dbg !9409
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9409
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !9409
  store i64 %sub.ptr.div, i64* %prev_idx, align 8, !dbg !9405, !tbaa !3848
  %36 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9410, !tbaa !2995
  %ext_info23 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %36, i32 0, i32 6, !dbg !9411, !ctir !1532
  %37 = load %struct.extent_info*, %struct.extent_info** %ext_info23, align 8, !dbg !9411, !tbaa !8448, !ctir !1541
  %38 = bitcast %struct.extent_info* %37 to i8*, !dbg !9410
  %39 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9412, !tbaa !2995
  %ei_count24 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %39, i32 0, i32 3, !dbg !9413, !ctir !1532
  %40 = load i64, i64* %ei_count24, align 8, !dbg !9413, !tbaa !8429, !ctir !55
  %call25 = call i8* @xnrealloc(i8* %38, i64 %40, i64 24), !dbg !9414
  %41 = bitcast i8* %call25 to %struct.extent_info*, !dbg !9414
  %42 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9415, !tbaa !2995
  %ext_info26 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %42, i32 0, i32 6, !dbg !9416, !ctir !1532
  store %struct.extent_info* %41, %struct.extent_info** %ext_info26, align 8, !dbg !9417, !tbaa !8448, !ctir !1541
  %43 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9418, !tbaa !2995
  %ext_info27 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %43, i32 0, i32 6, !dbg !9419, !ctir !1532
  %44 = load %struct.extent_info*, %struct.extent_info** %ext_info27, align 8, !dbg !9419, !tbaa !8448, !ctir !1541
  %45 = load i64, i64* %prev_idx, align 8, !dbg !9420, !tbaa !3848
  %add.ptr = getelementptr inbounds %struct.extent_info, %struct.extent_info* %44, i64 %45, !dbg !9421
  store %struct.extent_info* %add.ptr, %struct.extent_info** %last_ei, align 8, !dbg !9422, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9423, metadata !DIExpression()), !dbg !9424
  store i32 0, i32* %i, align 4, !dbg !9424, !tbaa !2982
  store i32 0, i32* %i, align 4, !dbg !9425, !tbaa !2982
  br label %for.cond, !dbg !9427

for.cond:                                         ; preds = %for.inc, %if.end18
  %46 = load i32, i32* %i, align 4, !dbg !9428, !tbaa !2982
  %47 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9430, !tbaa !2995
  %fm_mapped_extents28 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %47, i32 0, i32 3, !dbg !9431, !ctir !1550
  %48 = load i32, i32* %fm_mapped_extents28, align 4, !dbg !9431, !tbaa !9383, !ctir !1559
  %cmp29 = icmp ult i32 %46, %48, !dbg !9432
  br i1 %cmp29, label %for.body, label %for.end, !dbg !9433

for.body:                                         ; preds = %for.cond
  %49 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9434, !tbaa !2995
  %50 = load i32, i32* %i, align 4, !dbg !9434, !tbaa !2982
  %idxprom = zext i32 %50 to i64, !dbg !9434
  %arrayidx31 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %49, i64 %idxprom, !dbg !9434, !ctir !1578
  %fe_logical = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx31, i32 0, i32 0, !dbg !9434, !ctir !1566
  %51 = load i64, i64* %fe_logical, align 8, !dbg !9434, !tbaa !9438, !ctir !1554
  %52 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9434, !tbaa !2995
  %53 = load i32, i32* %i, align 4, !dbg !9434, !tbaa !2982
  %idxprom32 = zext i32 %53 to i64, !dbg !9434
  %arrayidx33 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %52, i64 %idxprom32, !dbg !9434, !ctir !1578
  %fe_length = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx33, i32 0, i32 2, !dbg !9434, !ctir !1566
  %54 = load i64, i64* %fe_length, align 8, !dbg !9434, !tbaa !9440, !ctir !1554
  %sub34 = sub i64 9223372036854775807, %54, !dbg !9434
  %cmp35 = icmp ule i64 %51, %sub34, !dbg !9434
  br i1 %cmp35, label %if.then37, label %if.else38, !dbg !9441

if.then37:                                        ; preds = %for.body
  br label %if.end39, !dbg !9441

if.else38:                                        ; preds = %for.body
  call void @__assert_fail(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.171, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.170, i64 0, i64 0), i32 141, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !9434
  unreachable, !dbg !9434

if.end39:                                         ; preds = %if.then37
  %55 = load i32, i32* %si, align 4, !dbg !9442, !tbaa !2982
  %tobool = icmp ne i32 %55, 0, !dbg !9442
  br i1 %tobool, label %land.lhs.true, label %if.else61, !dbg !9444

land.lhs.true:                                    ; preds = %if.end39
  %56 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9445, !tbaa !2995
  %ext_flags = getelementptr inbounds %struct.extent_info, %struct.extent_info* %56, i32 0, i32 2, !dbg !9446, !ctir !1542
  %57 = load i32, i32* %ext_flags, align 8, !dbg !9446, !tbaa !9447, !ctir !70
  %58 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9448, !tbaa !2995
  %59 = load i32, i32* %i, align 4, !dbg !9449, !tbaa !2982
  %idxprom40 = zext i32 %59 to i64, !dbg !9448
  %arrayidx41 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %58, i64 %idxprom40, !dbg !9448, !ctir !1578
  %fe_flags = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx41, i32 0, i32 4, !dbg !9450, !ctir !1566
  %60 = load i32, i32* %fe_flags, align 8, !dbg !9450, !tbaa !9451, !ctir !1559
  %and = and i32 %60, -2, !dbg !9452
  %cmp42 = icmp eq i32 %57, %and, !dbg !9453
  br i1 %cmp42, label %land.lhs.true44, label %if.else61, !dbg !9454

land.lhs.true44:                                  ; preds = %land.lhs.true
  %61 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9455, !tbaa !2995
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %61, i32 0, i32 0, !dbg !9456, !ctir !1542
  %62 = load i64, i64* %ext_logical, align 8, !dbg !9456, !tbaa !8452, !ctir !1528
  %63 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9457, !tbaa !2995
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %63, i32 0, i32 1, !dbg !9458, !ctir !1542
  %64 = load i64, i64* %ext_length, align 8, !dbg !9458, !tbaa !8459, !ctir !1528
  %add45 = add nsw i64 %62, %64, !dbg !9459
  %65 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9460, !tbaa !2995
  %66 = load i32, i32* %i, align 4, !dbg !9461, !tbaa !2982
  %idxprom46 = zext i32 %66 to i64, !dbg !9460
  %arrayidx47 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %65, i64 %idxprom46, !dbg !9460, !ctir !1578
  %fe_logical48 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx47, i32 0, i32 0, !dbg !9462, !ctir !1566
  %67 = load i64, i64* %fe_logical48, align 8, !dbg !9462, !tbaa !9438, !ctir !1554
  %cmp49 = icmp eq i64 %add45, %67, !dbg !9463
  br i1 %cmp49, label %if.then51, label %if.else61, !dbg !9464

if.then51:                                        ; preds = %land.lhs.true44
  %68 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9465, !tbaa !2995
  %69 = load i32, i32* %i, align 4, !dbg !9467, !tbaa !2982
  %idxprom52 = zext i32 %69 to i64, !dbg !9465
  %arrayidx53 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %68, i64 %idxprom52, !dbg !9465, !ctir !1578
  %fe_length54 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx53, i32 0, i32 2, !dbg !9468, !ctir !1566
  %70 = load i64, i64* %fe_length54, align 8, !dbg !9468, !tbaa !9440, !ctir !1554
  %71 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9469, !tbaa !2995
  %ext_length55 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %71, i32 0, i32 1, !dbg !9470, !ctir !1542
  %72 = load i64, i64* %ext_length55, align 8, !dbg !9471, !tbaa !8459, !ctir !1528
  %add56 = add i64 %72, %70, !dbg !9471
  store i64 %add56, i64* %ext_length55, align 8, !dbg !9471, !tbaa !8459, !ctir !1528
  %73 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9472, !tbaa !2995
  %74 = load i32, i32* %i, align 4, !dbg !9473, !tbaa !2982
  %idxprom57 = zext i32 %74 to i64, !dbg !9472
  %arrayidx58 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %73, i64 %idxprom57, !dbg !9472, !ctir !1578
  %fe_flags59 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx58, i32 0, i32 4, !dbg !9474, !ctir !1566
  %75 = load i32, i32* %fe_flags59, align 8, !dbg !9474, !tbaa !9451, !ctir !1559
  %76 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9475, !tbaa !2995
  %ext_flags60 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %76, i32 0, i32 2, !dbg !9476, !ctir !1542
  store i32 %75, i32* %ext_flags60, align 8, !dbg !9477, !tbaa !9447, !ctir !70
  br label %if.end131, !dbg !9478

if.else61:                                        ; preds = %land.lhs.true44, %land.lhs.true, %if.end39
  %77 = load i32, i32* %si, align 4, !dbg !9479, !tbaa !2982
  %cmp62 = icmp eq i32 %77, 0, !dbg !9481
  br i1 %cmp62, label %land.lhs.true64, label %lor.lhs.false, !dbg !9482

land.lhs.true64:                                  ; preds = %if.else61
  %78 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9483, !tbaa !2995
  %scan_start65 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %78, i32 0, i32 1, !dbg !9484, !ctir !1532
  %79 = load i64, i64* %scan_start65, align 8, !dbg !9484, !tbaa !9299, !ctir !1528
  %80 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9485, !tbaa !2995
  %81 = load i32, i32* %i, align 4, !dbg !9486, !tbaa !2982
  %idxprom66 = zext i32 %81 to i64, !dbg !9485
  %arrayidx67 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %80, i64 %idxprom66, !dbg !9485, !ctir !1578
  %fe_logical68 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx67, i32 0, i32 0, !dbg !9487, !ctir !1566
  %82 = load i64, i64* %fe_logical68, align 8, !dbg !9487, !tbaa !9438, !ctir !1554
  %cmp69 = icmp ugt i64 %79, %82, !dbg !9488
  br i1 %cmp69, label %if.then81, label %lor.lhs.false, !dbg !9489

lor.lhs.false:                                    ; preds = %land.lhs.true64, %if.else61
  %83 = load i32, i32* %si, align 4, !dbg !9490, !tbaa !2982
  %tobool71 = icmp ne i32 %83, 0, !dbg !9490
  br i1 %tobool71, label %land.lhs.true72, label %if.else115, !dbg !9491

land.lhs.true72:                                  ; preds = %lor.lhs.false
  %84 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9492, !tbaa !2995
  %ext_logical73 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %84, i32 0, i32 0, !dbg !9493, !ctir !1542
  %85 = load i64, i64* %ext_logical73, align 8, !dbg !9493, !tbaa !8452, !ctir !1528
  %86 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9494, !tbaa !2995
  %ext_length74 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %86, i32 0, i32 1, !dbg !9495, !ctir !1542
  %87 = load i64, i64* %ext_length74, align 8, !dbg !9495, !tbaa !8459, !ctir !1528
  %add75 = add nsw i64 %85, %87, !dbg !9496
  %88 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9497, !tbaa !2995
  %89 = load i32, i32* %i, align 4, !dbg !9498, !tbaa !2982
  %idxprom76 = zext i32 %89 to i64, !dbg !9497
  %arrayidx77 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %88, i64 %idxprom76, !dbg !9497, !ctir !1578
  %fe_logical78 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx77, i32 0, i32 0, !dbg !9499, !ctir !1566
  %90 = load i64, i64* %fe_logical78, align 8, !dbg !9499, !tbaa !9438, !ctir !1554
  %cmp79 = icmp ugt i64 %add75, %90, !dbg !9500
  br i1 %cmp79, label %if.then81, label %if.else115, !dbg !9501

if.then81:                                        ; preds = %land.lhs.true72, %land.lhs.true64
  call void @llvm.dbg.declare(metadata i64* %new_logical, metadata !9502, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.declare(metadata i64* %length_adjust, metadata !9505, metadata !DIExpression()), !dbg !9506
  %91 = load i32, i32* %si, align 4, !dbg !9507, !tbaa !2982
  %cmp82 = icmp eq i32 %91, 0, !dbg !9509
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !9510

if.then84:                                        ; preds = %if.then81
  %92 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9511, !tbaa !2995
  %scan_start85 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %92, i32 0, i32 1, !dbg !9512, !ctir !1532
  %93 = load i64, i64* %scan_start85, align 8, !dbg !9512, !tbaa !9299, !ctir !1528
  store i64 %93, i64* %new_logical, align 8, !dbg !9513, !tbaa !3848
  br label %if.end90, !dbg !9514

if.else86:                                        ; preds = %if.then81
  %94 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9515, !tbaa !2995
  %ext_logical87 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %94, i32 0, i32 0, !dbg !9517, !ctir !1542
  %95 = load i64, i64* %ext_logical87, align 8, !dbg !9517, !tbaa !8452, !ctir !1528
  %96 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9518, !tbaa !2995
  %ext_length88 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %96, i32 0, i32 1, !dbg !9519, !ctir !1542
  %97 = load i64, i64* %ext_length88, align 8, !dbg !9519, !tbaa !8459, !ctir !1528
  %add89 = add nsw i64 %95, %97, !dbg !9520
  store i64 %add89, i64* %new_logical, align 8, !dbg !9521, !tbaa !3848
  br label %if.end90

if.end90:                                         ; preds = %if.else86, %if.then84
  %98 = load i64, i64* %new_logical, align 8, !dbg !9522, !tbaa !3848
  %99 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9523, !tbaa !2995
  %100 = load i32, i32* %i, align 4, !dbg !9524, !tbaa !2982
  %idxprom91 = zext i32 %100 to i64, !dbg !9523
  %arrayidx92 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %99, i64 %idxprom91, !dbg !9523, !ctir !1578
  %fe_logical93 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx92, i32 0, i32 0, !dbg !9525, !ctir !1566
  %101 = load i64, i64* %fe_logical93, align 8, !dbg !9525, !tbaa !9438, !ctir !1554
  %sub94 = sub i64 %98, %101, !dbg !9526
  store i64 %sub94, i64* %length_adjust, align 8, !dbg !9527, !tbaa !3848
  %102 = load i64, i64* %length_adjust, align 8, !dbg !9528, !tbaa !3848
  %103 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9530, !tbaa !2995
  %104 = load i32, i32* %i, align 4, !dbg !9531, !tbaa !2982
  %idxprom95 = zext i32 %104 to i64, !dbg !9530
  %arrayidx96 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %103, i64 %idxprom95, !dbg !9530, !ctir !1578
  %fe_length97 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx96, i32 0, i32 2, !dbg !9532, !ctir !1566
  %105 = load i64, i64* %fe_length97, align 8, !dbg !9532, !tbaa !9440, !ctir !1554
  %cmp98 = icmp ult i64 %102, %105, !dbg !9533
  br i1 %cmp98, label %if.then100, label %if.end107, !dbg !9534

if.then100:                                       ; preds = %if.end90
  %106 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9535, !tbaa !2995
  %scan_start101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %106, i32 0, i32 1, !dbg !9538, !ctir !1532
  %107 = load i64, i64* %scan_start101, align 8, !dbg !9538, !tbaa !9299, !ctir !1528
  %cmp102 = icmp eq i64 %107, 0, !dbg !9539
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !9540

if.then104:                                       ; preds = %if.then100
  %108 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9541, !tbaa !2995
  %initial_scan_failed105 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %108, i32 0, i32 4, !dbg !9542, !ctir !1532
  store i8 1, i8* %initial_scan_failed105, align 8, !dbg !9543, !tbaa !8409, !ctir !120
  br label %if.end106, !dbg !9541

if.end106:                                        ; preds = %if.then104, %if.then100
  store i1 false, i1* %retval, align 1, !dbg !9544
  br label %return, !dbg !9544

if.end107:                                        ; preds = %if.end90
  %109 = load i64, i64* %new_logical, align 8, !dbg !9545, !tbaa !3848
  %110 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9546, !tbaa !2995
  %111 = load i32, i32* %i, align 4, !dbg !9547, !tbaa !2982
  %idxprom108 = zext i32 %111 to i64, !dbg !9546
  %arrayidx109 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %110, i64 %idxprom108, !dbg !9546, !ctir !1578
  %fe_logical110 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx109, i32 0, i32 0, !dbg !9548, !ctir !1566
  store i64 %109, i64* %fe_logical110, align 8, !dbg !9549, !tbaa !9438, !ctir !1554
  %112 = load i64, i64* %length_adjust, align 8, !dbg !9550, !tbaa !3848
  %113 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9551, !tbaa !2995
  %114 = load i32, i32* %i, align 4, !dbg !9552, !tbaa !2982
  %idxprom111 = zext i32 %114 to i64, !dbg !9551
  %arrayidx112 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %113, i64 %idxprom111, !dbg !9551, !ctir !1578
  %fe_length113 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx112, i32 0, i32 2, !dbg !9553, !ctir !1566
  %115 = load i64, i64* %fe_length113, align 8, !dbg !9554, !tbaa !9440, !ctir !1554
  %sub114 = sub i64 %115, %112, !dbg !9554
  store i64 %sub114, i64* %fe_length113, align 8, !dbg !9554, !tbaa !9440, !ctir !1554
  %116 = load i32, i32* %i, align 4, !dbg !9555, !tbaa !2982
  %dec = add i32 %116, -1, !dbg !9555
  store i32 %dec, i32* %i, align 4, !dbg !9555, !tbaa !2982
  br label %for.inc, !dbg !9556

if.else115:                                       ; preds = %land.lhs.true72, %lor.lhs.false
  %117 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9557, !tbaa !2995
  %ext_info116 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %117, i32 0, i32 6, !dbg !9559, !ctir !1532
  %118 = load %struct.extent_info*, %struct.extent_info** %ext_info116, align 8, !dbg !9559, !tbaa !8448, !ctir !1541
  %119 = load i32, i32* %si, align 4, !dbg !9560, !tbaa !2982
  %idx.ext = zext i32 %119 to i64, !dbg !9561
  %add.ptr117 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %118, i64 %idx.ext, !dbg !9561
  store %struct.extent_info* %add.ptr117, %struct.extent_info** %last_ei, align 8, !dbg !9562, !tbaa !2995
  %120 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9563, !tbaa !2995
  %121 = load i32, i32* %i, align 4, !dbg !9564, !tbaa !2982
  %idxprom118 = zext i32 %121 to i64, !dbg !9563
  %arrayidx119 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %120, i64 %idxprom118, !dbg !9563, !ctir !1578
  %fe_logical120 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx119, i32 0, i32 0, !dbg !9565, !ctir !1566
  %122 = load i64, i64* %fe_logical120, align 8, !dbg !9565, !tbaa !9438, !ctir !1554
  %123 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9566, !tbaa !2995
  %ext_logical121 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %123, i32 0, i32 0, !dbg !9567, !ctir !1542
  store i64 %122, i64* %ext_logical121, align 8, !dbg !9568, !tbaa !8452, !ctir !1528
  %124 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9569, !tbaa !2995
  %125 = load i32, i32* %i, align 4, !dbg !9570, !tbaa !2982
  %idxprom122 = zext i32 %125 to i64, !dbg !9569
  %arrayidx123 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %124, i64 %idxprom122, !dbg !9569, !ctir !1578
  %fe_length124 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx123, i32 0, i32 2, !dbg !9571, !ctir !1566
  %126 = load i64, i64* %fe_length124, align 8, !dbg !9571, !tbaa !9440, !ctir !1554
  %127 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9572, !tbaa !2995
  %ext_length125 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %127, i32 0, i32 1, !dbg !9573, !ctir !1542
  store i64 %126, i64* %ext_length125, align 8, !dbg !9574, !tbaa !8459, !ctir !1528
  %128 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9575, !tbaa !2995
  %129 = load i32, i32* %i, align 4, !dbg !9576, !tbaa !2982
  %idxprom126 = zext i32 %129 to i64, !dbg !9575
  %arrayidx127 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %128, i64 %idxprom126, !dbg !9575, !ctir !1578
  %fe_flags128 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx127, i32 0, i32 4, !dbg !9577, !ctir !1566
  %130 = load i32, i32* %fe_flags128, align 8, !dbg !9577, !tbaa !9451, !ctir !1559
  %131 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9578, !tbaa !2995
  %ext_flags129 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %131, i32 0, i32 2, !dbg !9579, !ctir !1542
  store i32 %130, i32* %ext_flags129, align 8, !dbg !9580, !tbaa !9447, !ctir !70
  %132 = load i32, i32* %si, align 4, !dbg !9581, !tbaa !2982
  %inc = add i32 %132, 1, !dbg !9581
  store i32 %inc, i32* %si, align 4, !dbg !9581, !tbaa !2982
  br label %if.end130

if.end130:                                        ; preds = %if.else115
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then51
  br label %for.inc, !dbg !9582

for.inc:                                          ; preds = %if.end131, %if.end107
  %133 = load i32, i32* %i, align 4, !dbg !9583, !tbaa !2982
  %inc132 = add i32 %133, 1, !dbg !9583
  store i32 %inc132, i32* %i, align 4, !dbg !9583, !tbaa !2982
  br label %for.cond, !dbg !9584, !llvm.loop !9585

for.end:                                          ; preds = %for.cond
  %134 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9587, !tbaa !2995
  %ext_flags133 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %134, i32 0, i32 2, !dbg !9589, !ctir !1542
  %135 = load i32, i32* %ext_flags133, align 8, !dbg !9589, !tbaa !9447, !ctir !70
  %and134 = and i32 %135, 1, !dbg !9590
  %tobool135 = icmp ne i32 %and134, 0, !dbg !9590
  br i1 %tobool135, label %if.then136, label %if.end138, !dbg !9591

if.then136:                                       ; preds = %for.end
  %136 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9592, !tbaa !2995
  %hit_final_extent137 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %136, i32 0, i32 5, !dbg !9593, !ctir !1532
  store i8 1, i8* %hit_final_extent137, align 1, !dbg !9594, !tbaa !8403, !ctir !120
  br label %if.end138, !dbg !9592

if.end138:                                        ; preds = %if.then136, %for.end
  %137 = load i32, i32* %si, align 4, !dbg !9595, !tbaa !2982
  %cmp139 = icmp ugt i32 %137, 72, !dbg !9597
  br i1 %cmp139, label %land.lhs.true141, label %if.end150, !dbg !9598

land.lhs.true141:                                 ; preds = %if.end138
  %138 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9599, !tbaa !2995
  %hit_final_extent142 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %138, i32 0, i32 5, !dbg !9600, !ctir !1532
  %139 = load i8, i8* %hit_final_extent142, align 1, !dbg !9600, !tbaa !8403
  %tobool143 = trunc i8 %139 to i1, !dbg !9600, !ctir !120
  br i1 %tobool143, label %if.end150, label %if.then144, !dbg !9601

if.then144:                                       ; preds = %land.lhs.true141
  %140 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9602, !tbaa !2995
  %ext_info145 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %140, i32 0, i32 6, !dbg !9603, !ctir !1532
  %141 = load %struct.extent_info*, %struct.extent_info** %ext_info145, align 8, !dbg !9603, !tbaa !8448, !ctir !1541
  %142 = load i32, i32* %si, align 4, !dbg !9604, !tbaa !2982
  %dec146 = add i32 %142, -1, !dbg !9604
  store i32 %dec146, i32* %si, align 4, !dbg !9604, !tbaa !2982
  %idx.ext147 = zext i32 %dec146 to i64, !dbg !9605
  %add.ptr148 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %141, i64 %idx.ext147, !dbg !9605
  %add.ptr149 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %add.ptr148, i64 -1, !dbg !9606
  store %struct.extent_info* %add.ptr149, %struct.extent_info** %last_ei, align 8, !dbg !9607, !tbaa !2995
  br label %if.end150, !dbg !9608

if.end150:                                        ; preds = %if.then144, %land.lhs.true141, %if.end138
  %143 = load i32, i32* %si, align 4, !dbg !9609, !tbaa !2982
  %conv151 = zext i32 %143 to i64, !dbg !9609
  %144 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9610, !tbaa !2995
  %ei_count152 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %144, i32 0, i32 3, !dbg !9611, !ctir !1532
  store i64 %conv151, i64* %ei_count152, align 8, !dbg !9612, !tbaa !8429, !ctir !55
  %145 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9613, !tbaa !2995
  %hit_final_extent153 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %145, i32 0, i32 5, !dbg !9615, !ctir !1532
  %146 = load i8, i8* %hit_final_extent153, align 1, !dbg !9615, !tbaa !8403
  %tobool154 = trunc i8 %146 to i1, !dbg !9615, !ctir !120
  br i1 %tobool154, label %if.then155, label %if.else156, !dbg !9616

if.then155:                                       ; preds = %if.end150
  br label %while.end, !dbg !9617

if.else156:                                       ; preds = %if.end150
  %147 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9618, !tbaa !2995
  %ext_logical157 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %147, i32 0, i32 0, !dbg !9619, !ctir !1542
  %148 = load i64, i64* %ext_logical157, align 8, !dbg !9619, !tbaa !8452, !ctir !1528
  %149 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9620, !tbaa !2995
  %ext_length158 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %149, i32 0, i32 1, !dbg !9621, !ctir !1542
  %150 = load i64, i64* %ext_length158, align 8, !dbg !9621, !tbaa !8459, !ctir !1528
  %add159 = add nsw i64 %148, %150, !dbg !9622
  %151 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9623, !tbaa !2995
  %scan_start160 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %151, i32 0, i32 1, !dbg !9624, !ctir !1532
  store i64 %add159, i64* %scan_start160, align 8, !dbg !9625, !tbaa !9299, !ctir !1528
  br label %if.end161

if.end161:                                        ; preds = %if.else156
  %152 = load i32, i32* %si, align 4, !dbg !9626, !tbaa !2982
  %cmp162 = icmp uge i32 %152, 72, !dbg !9628
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !9629

if.then164:                                       ; preds = %if.end161
  br label %while.end, !dbg !9630

if.end165:                                        ; preds = %if.end161
  br label %while.body, !dbg !9327, !llvm.loop !9631

while.end:                                        ; preds = %if.then164, %if.then155
  store i1 true, i1* %retval, align 1, !dbg !9633
  br label %return, !dbg !9633

return:                                           ; preds = %while.end, %if.end106, %if.then9, %if.end
  %153 = load i1, i1* %retval, align 1, !dbg !9634
  ret i1 %153, !dbg !9634
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_linkat(i32 %srcdir, i8* %srcname, i32 %dstdir, i8* %dstname, i32 %flags, i1 zeroext %force, i32 %linkat_errno) #4 !dbg !9635 !ctir !557 {
entry:
  %retval = alloca i32, align 4
  %srcdir.addr = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %force.addr = alloca i8, align 1
  %linkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !559
  %dsttmp = alloca i8*, align 8, !ctir !9
  %arg = alloca %struct.link_arg, align 8, !ctir !573
  %err = alloca i32, align 4, !ctir !7
  store i32 %srcdir, i32* %srcdir.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %srcdir.addr, metadata !9636, metadata !DIExpression()), !dbg !9637
  store i8* %srcname, i8** %srcname.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !9638, metadata !DIExpression()), !dbg !9639
  store i32 %dstdir, i32* %dstdir.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !9640, metadata !DIExpression()), !dbg !9641
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9642, metadata !DIExpression()), !dbg !9643
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9644, metadata !DIExpression()), !dbg !9645
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !9646, metadata !DIExpression()), !dbg !9647
  store i32 %linkat_errno, i32* %linkat_errno.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %linkat_errno.addr, metadata !9648, metadata !DIExpression()), !dbg !9649
  %0 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9650, !tbaa !2982
  %cmp = icmp slt i32 %0, 0, !dbg !9652
  br i1 %cmp, label %if.then, label %if.end, !dbg !9653

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %srcdir.addr, align 4, !dbg !9654, !tbaa !2982
  %2 = load i8*, i8** %srcname.addr, align 8, !dbg !9655, !tbaa !2995
  %3 = load i32, i32* %dstdir.addr, align 4, !dbg !9656, !tbaa !2982
  %4 = load i8*, i8** %dstname.addr, align 8, !dbg !9657, !tbaa !2995
  %5 = load i32, i32* %flags.addr, align 4, !dbg !9658, !tbaa !2982
  %call = call i32 @linkat(i32 %1, i8* %2, i32 %3, i8* %4, i32 %5) #10, !dbg !9659
  %cmp1 = icmp eq i32 %call, 0, !dbg !9660
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9659

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9659

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !9661
  %6 = load i32, i32* %call2, align 4, !dbg !9661, !tbaa !2982, !ctir !7
  br label %cond.end, !dbg !9659

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %6, %cond.false ], !dbg !9659
  store i32 %cond, i32* %linkat_errno.addr, align 4, !dbg !9662, !tbaa !2982
  br label %if.end, !dbg !9663

if.end:                                           ; preds = %cond.end, %entry
  %7 = load i8, i8* %force.addr, align 1, !dbg !9664, !tbaa !3106
  %tobool = trunc i8 %7 to i1, !dbg !9664
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !9666

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9667, !tbaa !2982
  %cmp3 = icmp ne i32 %8, 17, !dbg !9668
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9669

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9670, !tbaa !2982
  store i32 %9, i32* %retval, align 4, !dbg !9671
  br label %return, !dbg !9671

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !9672, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9674, metadata !DIExpression()), !dbg !9675
  %10 = load i8*, i8** %dstname.addr, align 8, !dbg !9676, !tbaa !2995
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9677
  %call6 = call i8* @samedir_template(i8* %10, i8* %arraydecay), !dbg !9678
  store i8* %call6, i8** %dsttmp, align 8, !dbg !9675, !tbaa !2995
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !9679, !tbaa !2995
  %tobool7 = icmp ne i8* %11, null, !dbg !9679
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !9681

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #15, !dbg !9682
  %12 = load i32, i32* %call9, align 4, !dbg !9682, !tbaa !2982, !ctir !7
  store i32 %12, i32* %retval, align 4, !dbg !9683
  br label %return, !dbg !9683

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.link_arg* %arg, metadata !9684, metadata !DIExpression()), !dbg !9685
  %srcdir11 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 0, !dbg !9686
  %13 = load i32, i32* %srcdir.addr, align 4, !dbg !9687, !tbaa !2982
  store i32 %13, i32* %srcdir11, align 8, !dbg !9686, !tbaa !9688
  %srcname12 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 1, !dbg !9686
  %14 = load i8*, i8** %srcname.addr, align 8, !dbg !9690, !tbaa !2995
  store i8* %14, i8** %srcname12, align 8, !dbg !9686, !tbaa !9691
  %dstdir13 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 2, !dbg !9686
  %15 = load i32, i32* %dstdir.addr, align 4, !dbg !9692, !tbaa !2982
  store i32 %15, i32* %dstdir13, align 8, !dbg !9686, !tbaa !9693
  %flags14 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 3, !dbg !9686
  %16 = load i32, i32* %flags.addr, align 4, !dbg !9694, !tbaa !2982
  store i32 %16, i32* %flags14, align 4, !dbg !9686, !tbaa !9695
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9696, metadata !DIExpression()), !dbg !9697
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !9698, !tbaa !2995
  %18 = bitcast %struct.link_arg* %arg to i8*, !dbg !9700
  %call15 = call i32 @try_tempname_len(i8* %17, i32 0, i8* %18, i32 (i8*, i8*)* @try_link, i64 6), !dbg !9701
  %cmp16 = icmp ne i32 %call15, 0, !dbg !9702
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !9703

if.then17:                                        ; preds = %if.end10
  %call18 = call i32* @__errno_location() #15, !dbg !9704
  %19 = load i32, i32* %call18, align 4, !dbg !9704, !tbaa !2982, !ctir !7
  store i32 %19, i32* %err, align 4, !dbg !9705, !tbaa !2982
  br label %if.end27, !dbg !9706

if.else:                                          ; preds = %if.end10
  %20 = load i32, i32* %dstdir.addr, align 4, !dbg !9707, !tbaa !2982
  %21 = load i8*, i8** %dsttmp, align 8, !dbg !9709, !tbaa !2995
  %22 = load i32, i32* %dstdir.addr, align 4, !dbg !9710, !tbaa !2982
  %23 = load i8*, i8** %dstname.addr, align 8, !dbg !9711, !tbaa !2995
  %call19 = call i32 @renameat(i32 %20, i8* %21, i32 %22, i8* %23) #10, !dbg !9712
  %cmp20 = icmp eq i32 %call19, 0, !dbg !9713
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !9712

cond.true21:                                      ; preds = %if.else
  br label %cond.end24, !dbg !9712

cond.false22:                                     ; preds = %if.else
  %call23 = call i32* @__errno_location() #15, !dbg !9714
  %24 = load i32, i32* %call23, align 4, !dbg !9714, !tbaa !2982, !ctir !7
  br label %cond.end24, !dbg !9712

cond.end24:                                       ; preds = %cond.false22, %cond.true21
  %cond25 = phi i32 [ -1, %cond.true21 ], [ %24, %cond.false22 ], !dbg !9712
  store i32 %cond25, i32* %err, align 4, !dbg !9715, !tbaa !2982
  %25 = load i32, i32* %dstdir.addr, align 4, !dbg !9716, !tbaa !2982
  %26 = load i8*, i8** %dsttmp, align 8, !dbg !9717, !tbaa !2995
  %call26 = call i32 @unlinkat(i32 %25, i8* %26, i32 0) #10, !dbg !9718
  br label %if.end27

if.end27:                                         ; preds = %cond.end24, %if.then17
  %27 = load i8*, i8** %dsttmp, align 8, !dbg !9719, !tbaa !2995
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9721
  %cmp29 = icmp ne i8* %27, %arraydecay28, !dbg !9722
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !9723

if.then30:                                        ; preds = %if.end27
  %28 = load i8*, i8** %dsttmp, align 8, !dbg !9724, !tbaa !2995
  call void @free(i8* %28) #10, !dbg !9725
  br label %if.end31, !dbg !9725

if.end31:                                         ; preds = %if.then30, %if.end27
  %29 = load i32, i32* %err, align 4, !dbg !9726, !tbaa !2982
  store i32 %29, i32* %retval, align 4, !dbg !9727
  br label %return, !dbg !9727

return:                                           ; preds = %if.end31, %if.then8, %if.then4
  %30 = load i32, i32* %retval, align 4, !dbg !9728
  ret i32 %30, !dbg !9728
}

; Function Attrs: nounwind
declare dso_local i32 @linkat(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @samedir_template(i8* %dstname, i8* %buf) #4 !dbg !9729 !ctir !564 {
entry:
  %retval = alloca i8*, align 8
  %dstname.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %dstdirlen = alloca i64, align 8, !ctir !566
  %dsttmpsize = alloca i64, align 8, !ctir !55
  %dsttmp = alloca i8*, align 8, !ctir !9
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9730, metadata !DIExpression()), !dbg !9731
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9732, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.declare(metadata i64* %dstdirlen, metadata !9734, metadata !DIExpression()), !dbg !9735
  %0 = load i8*, i8** %dstname.addr, align 8, !dbg !9736, !tbaa !2995
  %call = call i8* @last_component(i8* %0) #14, !dbg !9737
  %1 = load i8*, i8** %dstname.addr, align 8, !dbg !9738, !tbaa !2995
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9739
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9739
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9739
  store i64 %sub.ptr.sub, i64* %dstdirlen, align 8, !dbg !9735, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %dsttmpsize, metadata !9740, metadata !DIExpression()), !dbg !9741
  %2 = load i64, i64* %dstdirlen, align 8, !dbg !9742, !tbaa !3848
  %add = add i64 %2, 9, !dbg !9743
  store i64 %add, i64* %dsttmpsize, align 8, !dbg !9741, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9744, metadata !DIExpression()), !dbg !9745
  %3 = load i64, i64* %dsttmpsize, align 8, !dbg !9746, !tbaa !3848
  %cmp = icmp ule i64 %3, 256, !dbg !9748
  br i1 %cmp, label %if.then, label %if.else, !dbg !9749

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !9750, !tbaa !2995
  store i8* %4, i8** %dsttmp, align 8, !dbg !9751, !tbaa !2995
  br label %if.end3, !dbg !9752

if.else:                                          ; preds = %entry
  %5 = load i64, i64* %dsttmpsize, align 8, !dbg !9753, !tbaa !3848
  %call1 = call noalias i8* @malloc(i64 %5) #10, !dbg !9755
  store i8* %call1, i8** %dsttmp, align 8, !dbg !9756, !tbaa !2995
  %6 = load i8*, i8** %dsttmp, align 8, !dbg !9757, !tbaa !2995
  %tobool = icmp ne i8* %6, null, !dbg !9757
  br i1 %tobool, label %if.end, label %if.then2, !dbg !9759

if.then2:                                         ; preds = %if.else
  %7 = load i8*, i8** %dsttmp, align 8, !dbg !9760, !tbaa !2995
  store i8* %7, i8** %retval, align 8, !dbg !9761
  br label %return, !dbg !9761

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %dsttmp, align 8, !dbg !9762, !tbaa !2995
  %9 = load i8*, i8** %dstname.addr, align 8, !dbg !9763, !tbaa !2995
  %10 = load i64, i64* %dstdirlen, align 8, !dbg !9764, !tbaa !3848
  %call4 = call i8* @mempcpy(i8* %8, i8* %9, i64 %10) #10, !dbg !9765
  %call5 = call i8* @strcpy(i8* %call4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @simple_pattern, i64 0, i64 0)) #10, !dbg !9766
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !9767, !tbaa !2995
  store i8* %11, i8** %retval, align 8, !dbg !9768
  br label %return, !dbg !9768

return:                                           ; preds = %if.end3, %if.then2
  %12 = load i8*, i8** %retval, align 8, !dbg !9769
  ret i8* %12, !dbg !9769
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_link(i8* %dest, i8* %arg) #4 !dbg !9770 !ctir !570 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.link_arg*, align 8, !ctir !572
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !9771, metadata !DIExpression()), !dbg !9772
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9773, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.declare(metadata %struct.link_arg** %a, metadata !9775, metadata !DIExpression()), !dbg !9776
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9777, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.link_arg*, !dbg !9777
  store %struct.link_arg* %1, %struct.link_arg** %a, align 8, !dbg !9776, !tbaa !2995
  %2 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9778, !tbaa !2995
  %srcdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %2, i32 0, i32 0, !dbg !9779, !ctir !573
  %3 = load i32, i32* %srcdir, align 8, !dbg !9779, !tbaa !9688, !ctir !7
  %4 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9780, !tbaa !2995
  %srcname = getelementptr inbounds %struct.link_arg, %struct.link_arg* %4, i32 0, i32 1, !dbg !9781, !ctir !573
  %5 = load i8*, i8** %srcname, align 8, !dbg !9781, !tbaa !9691, !ctir !115
  %6 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9782, !tbaa !2995
  %dstdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %6, i32 0, i32 2, !dbg !9783, !ctir !573
  %7 = load i32, i32* %dstdir, align 8, !dbg !9783, !tbaa !9693, !ctir !7
  %8 = load i8*, i8** %dest.addr, align 8, !dbg !9784, !tbaa !2995
  %9 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9785, !tbaa !2995
  %flags = getelementptr inbounds %struct.link_arg, %struct.link_arg* %9, i32 0, i32 3, !dbg !9786, !ctir !573
  %10 = load i32, i32* %flags, align 4, !dbg !9786, !tbaa !9695, !ctir !7
  %call = call i32 @linkat(i32 %3, i8* %5, i32 %7, i8* %8, i32 %10) #10, !dbg !9787
  ret i32 %call, !dbg !9788
}

; Function Attrs: nounwind
declare dso_local i32 @renameat(i32, i8*, i32, i8*) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_symlinkat(i8* %srcname, i32 %dstdir, i8* %dstname, i1 zeroext %force, i32 %symlinkat_errno) #4 !dbg !9789 !ctir !562 {
entry:
  %retval = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %force.addr = alloca i8, align 1
  %symlinkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !559
  %dsttmp = alloca i8*, align 8, !ctir !9
  %arg = alloca %struct.symlink_arg, align 8, !ctir !580
  %err = alloca i32, align 4, !ctir !7
  store i8* %srcname, i8** %srcname.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !9790, metadata !DIExpression()), !dbg !9791
  store i32 %dstdir, i32* %dstdir.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !9792, metadata !DIExpression()), !dbg !9793
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9794, metadata !DIExpression()), !dbg !9795
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !9796, metadata !DIExpression()), !dbg !9797
  store i32 %symlinkat_errno, i32* %symlinkat_errno.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %symlinkat_errno.addr, metadata !9798, metadata !DIExpression()), !dbg !9799
  %0 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9800, !tbaa !2982
  %cmp = icmp slt i32 %0, 0, !dbg !9802
  br i1 %cmp, label %if.then, label %if.end, !dbg !9803

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %srcname.addr, align 8, !dbg !9804, !tbaa !2995
  %2 = load i32, i32* %dstdir.addr, align 4, !dbg !9805, !tbaa !2982
  %3 = load i8*, i8** %dstname.addr, align 8, !dbg !9806, !tbaa !2995
  %call = call i32 @symlinkat(i8* %1, i32 %2, i8* %3) #10, !dbg !9807
  %cmp1 = icmp eq i32 %call, 0, !dbg !9808
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9807

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9807

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !9809
  %4 = load i32, i32* %call2, align 4, !dbg !9809, !tbaa !2982, !ctir !7
  br label %cond.end, !dbg !9807

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !9807
  store i32 %cond, i32* %symlinkat_errno.addr, align 4, !dbg !9810, !tbaa !2982
  br label %if.end, !dbg !9811

if.end:                                           ; preds = %cond.end, %entry
  %5 = load i8, i8* %force.addr, align 1, !dbg !9812, !tbaa !3106
  %tobool = trunc i8 %5 to i1, !dbg !9812
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !9814

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9815, !tbaa !2982
  %cmp3 = icmp ne i32 %6, 17, !dbg !9816
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9817

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9818, !tbaa !2982
  store i32 %7, i32* %retval, align 4, !dbg !9819
  br label %return, !dbg !9819

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !9820, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9822, metadata !DIExpression()), !dbg !9823
  %8 = load i8*, i8** %dstname.addr, align 8, !dbg !9824, !tbaa !2995
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9825
  %call6 = call i8* @samedir_template(i8* %8, i8* %arraydecay), !dbg !9826
  store i8* %call6, i8** %dsttmp, align 8, !dbg !9823, !tbaa !2995
  %9 = load i8*, i8** %dsttmp, align 8, !dbg !9827, !tbaa !2995
  %tobool7 = icmp ne i8* %9, null, !dbg !9827
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !9829

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #15, !dbg !9830
  %10 = load i32, i32* %call9, align 4, !dbg !9830, !tbaa !2982, !ctir !7
  store i32 %10, i32* %retval, align 4, !dbg !9831
  br label %return, !dbg !9831

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.symlink_arg* %arg, metadata !9832, metadata !DIExpression()), !dbg !9833
  %srcname11 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 0, !dbg !9834
  %11 = load i8*, i8** %srcname.addr, align 8, !dbg !9835, !tbaa !2995
  store i8* %11, i8** %srcname11, align 8, !dbg !9834, !tbaa !9836
  %dstdir12 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 1, !dbg !9834
  %12 = load i32, i32* %dstdir.addr, align 4, !dbg !9838, !tbaa !2982
  store i32 %12, i32* %dstdir12, align 8, !dbg !9834, !tbaa !9839
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9840, metadata !DIExpression()), !dbg !9841
  %13 = load i8*, i8** %dsttmp, align 8, !dbg !9842, !tbaa !2995
  %14 = bitcast %struct.symlink_arg* %arg to i8*, !dbg !9844
  %call13 = call i32 @try_tempname_len(i8* %13, i32 0, i8* %14, i32 (i8*, i8*)* @try_symlink, i64 6), !dbg !9845
  %cmp14 = icmp ne i32 %call13, 0, !dbg !9846
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !9847

if.then15:                                        ; preds = %if.end10
  %call16 = call i32* @__errno_location() #15, !dbg !9848
  %15 = load i32, i32* %call16, align 4, !dbg !9848, !tbaa !2982, !ctir !7
  store i32 %15, i32* %err, align 4, !dbg !9849, !tbaa !2982
  br label %if.end24, !dbg !9850

if.else:                                          ; preds = %if.end10
  %16 = load i32, i32* %dstdir.addr, align 4, !dbg !9851, !tbaa !2982
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !9853, !tbaa !2995
  %18 = load i32, i32* %dstdir.addr, align 4, !dbg !9854, !tbaa !2982
  %19 = load i8*, i8** %dstname.addr, align 8, !dbg !9855, !tbaa !2995
  %call17 = call i32 @renameat(i32 %16, i8* %17, i32 %18, i8* %19) #10, !dbg !9856
  %cmp18 = icmp ne i32 %call17, 0, !dbg !9857
  br i1 %cmp18, label %if.then19, label %if.else22, !dbg !9858

if.then19:                                        ; preds = %if.else
  %call20 = call i32* @__errno_location() #15, !dbg !9859
  %20 = load i32, i32* %call20, align 4, !dbg !9859, !tbaa !2982, !ctir !7
  store i32 %20, i32* %err, align 4, !dbg !9861, !tbaa !2982
  %21 = load i32, i32* %dstdir.addr, align 4, !dbg !9862, !tbaa !2982
  %22 = load i8*, i8** %dsttmp, align 8, !dbg !9863, !tbaa !2995
  %call21 = call i32 @unlinkat(i32 %21, i8* %22, i32 0) #10, !dbg !9864
  br label %if.end23, !dbg !9865

if.else22:                                        ; preds = %if.else
  store i32 -1, i32* %err, align 4, !dbg !9866, !tbaa !2982
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then15
  %23 = load i8*, i8** %dsttmp, align 8, !dbg !9868, !tbaa !2995
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9870
  %cmp26 = icmp ne i8* %23, %arraydecay25, !dbg !9871
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !9872

if.then27:                                        ; preds = %if.end24
  %24 = load i8*, i8** %dsttmp, align 8, !dbg !9873, !tbaa !2995
  call void @free(i8* %24) #10, !dbg !9874
  br label %if.end28, !dbg !9874

if.end28:                                         ; preds = %if.then27, %if.end24
  %25 = load i32, i32* %err, align 4, !dbg !9875, !tbaa !2982
  store i32 %25, i32* %retval, align 4, !dbg !9876
  br label %return, !dbg !9876

return:                                           ; preds = %if.end28, %if.then8, %if.then4
  %26 = load i32, i32* %retval, align 4, !dbg !9877
  ret i32 %26, !dbg !9877
}

; Function Attrs: nounwind
declare dso_local i32 @symlinkat(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_symlink(i8* %dest, i8* %arg) #4 !dbg !9878 !ctir !570 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.symlink_arg*, align 8, !ctir !579
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !9879, metadata !DIExpression()), !dbg !9880
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9881, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.declare(metadata %struct.symlink_arg** %a, metadata !9883, metadata !DIExpression()), !dbg !9884
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9885, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.symlink_arg*, !dbg !9885
  store %struct.symlink_arg* %1, %struct.symlink_arg** %a, align 8, !dbg !9884, !tbaa !2995
  %2 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9886, !tbaa !2995
  %srcname = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %2, i32 0, i32 0, !dbg !9887, !ctir !580
  %3 = load i8*, i8** %srcname, align 8, !dbg !9887, !tbaa !9836, !ctir !115
  %4 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9888, !tbaa !2995
  %dstdir = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %4, i32 0, i32 1, !dbg !9889, !ctir !580
  %5 = load i32, i32* %dstdir, align 8, !dbg !9889, !tbaa !9839, !ctir !7
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !9890, !tbaa !2995
  %call = call i32 @symlinkat(i8* %3, i32 %5, i8* %6) #10, !dbg !9891
  ret i32 %call, !dbg !9892
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @copy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !9893 !ctir !1584 {
entry:
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !9895, metadata !DIExpression()), !dbg !9896
  store i32 %source_desc, i32* %source_desc.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !9897, metadata !DIExpression()), !dbg !9898
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !9899, metadata !DIExpression()), !dbg !9900
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !9901, metadata !DIExpression()), !dbg !9902
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9903, metadata !DIExpression()), !dbg !9904
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9905, metadata !DIExpression()), !dbg !9906
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !9907, !tbaa !2995
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !9908, !tbaa !2982
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !9909, !tbaa !2995
  %3 = load i32, i32* %dest_desc.addr, align 4, !dbg !9910, !tbaa !2982
  %4 = load i32, i32* %mode.addr, align 4, !dbg !9911, !tbaa !2982
  %call = call i32 @qcopy_acl(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4), !dbg !9912
  store i32 %call, i32* %ret, align 4, !dbg !9906, !tbaa !2982
  %5 = load i32, i32* %ret, align 4, !dbg !9913, !tbaa !2982
  switch i32 %5, label %sw.default [
    i32 -2, label %sw.bb
    i32 -1, label %sw.bb3
  ], !dbg !9914

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !9915
  %6 = load i32, i32* %call1, align 4, !dbg !9915, !tbaa !2982, !ctir !7
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !9917, !tbaa !2995
  %call2 = call i8* @quote(i8* %7), !dbg !9918
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.181, i64 0, i64 0), i8* %call2), !dbg !9919
  br label %sw.epilog, !dbg !9920

sw.bb3:                                           ; preds = %entry
  %call4 = call i32* @__errno_location() #15, !dbg !9921
  %8 = load i32, i32* %call4, align 4, !dbg !9921, !tbaa !2982, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.182, i64 0, i64 0)) #10, !dbg !9922
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !9923, !tbaa !2995
  %call6 = call i8* @quote(i8* %9), !dbg !9924
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call5, i8* %call6), !dbg !9925
  br label %sw.epilog, !dbg !9926

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !9927

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb
  %10 = load i32, i32* %ret, align 4, !dbg !9928, !tbaa !2982
  ret i32 %10, !dbg !9929
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !9930 !ctir !1589 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9932, metadata !DIExpression()), !dbg !9933
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !9934, metadata !DIExpression()), !dbg !9935
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9936, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9938, metadata !DIExpression()), !dbg !9939
  %0 = load i8*, i8** %name.addr, align 8, !dbg !9940, !tbaa !2995
  %1 = load i32, i32* %desc.addr, align 4, !dbg !9941, !tbaa !2982
  %2 = load i32, i32* %mode.addr, align 4, !dbg !9942, !tbaa !2982
  %call = call i32 @qset_acl(i8* %0, i32 %1, i32 %2), !dbg !9943
  store i32 %call, i32* %ret, align 4, !dbg !9939, !tbaa !2982
  %3 = load i32, i32* %ret, align 4, !dbg !9944, !tbaa !2982
  %cmp = icmp ne i32 %3, 0, !dbg !9946
  br i1 %cmp, label %if.then, label %if.end, !dbg !9947

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !9948
  %4 = load i32, i32* %call1, align 4, !dbg !9948, !tbaa !2982, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.185, i64 0, i64 0)) #10, !dbg !9949
  %5 = load i8*, i8** %name.addr, align 8, !dbg !9950, !tbaa !2995
  %call3 = call i8* @quote(i8* %5), !dbg !9951
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* %call2, i8* %call3), !dbg !9952
  br label %if.end, !dbg !9952

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !9953, !tbaa !2982
  ret i32 %6, !dbg !9954
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @areadlink_with_size(i8* %file, i64 %size) #4 !dbg !9955 !ctir !990 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %symlink_max = alloca i64, align 8, !ctir !55
  %INITIAL_LIMIT_BOUND = alloca i64, align 8, !ctir !55
  %initial_limit = alloca i64, align 8, !ctir !55
  %buf_size = alloca i64, align 8, !ctir !55
  %r = alloca i64, align 8, !ctir !606
  %link_length = alloca i64, align 8, !ctir !55
  %buffer = alloca i8*, align 8, !ctir !9
  %saved_errno = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9957, metadata !DIExpression()), !dbg !9958
  store i64 %size, i64* %size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9959, metadata !DIExpression()), !dbg !9960
  call void @llvm.dbg.declare(metadata i64* %symlink_max, metadata !9961, metadata !DIExpression()), !dbg !9962
  store i64 1024, i64* %symlink_max, align 8, !dbg !9962, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %INITIAL_LIMIT_BOUND, metadata !9963, metadata !DIExpression()), !dbg !9964
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9964, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %initial_limit, metadata !9965, metadata !DIExpression()), !dbg !9966
  %0 = load i64, i64* %symlink_max, align 8, !dbg !9967, !tbaa !3848
  %1 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9968, !tbaa !3848
  %cmp = icmp ult i64 %0, %1, !dbg !9969
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9967

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %symlink_max, align 8, !dbg !9970, !tbaa !3848
  %add = add i64 %2, 1, !dbg !9971
  br label %cond.end, !dbg !9967

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9972, !tbaa !3848
  br label %cond.end, !dbg !9967

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !9967
  store i64 %cond, i64* %initial_limit, align 8, !dbg !9966, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !9973, metadata !DIExpression()), !dbg !9974
  %4 = load i64, i64* %size.addr, align 8, !dbg !9975, !tbaa !3848
  %5 = load i64, i64* %initial_limit, align 8, !dbg !9976, !tbaa !3848
  %cmp1 = icmp ult i64 %4, %5, !dbg !9977
  br i1 %cmp1, label %cond.true2, label %cond.false4, !dbg !9975

cond.true2:                                       ; preds = %cond.end
  %6 = load i64, i64* %size.addr, align 8, !dbg !9978, !tbaa !3848
  %add3 = add i64 %6, 1, !dbg !9979
  br label %cond.end5, !dbg !9975

cond.false4:                                      ; preds = %cond.end
  %7 = load i64, i64* %initial_limit, align 8, !dbg !9980, !tbaa !3848
  br label %cond.end5, !dbg !9975

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi i64 [ %add3, %cond.true2 ], [ %7, %cond.false4 ], !dbg !9975
  store i64 %cond6, i64* %buf_size, align 8, !dbg !9974, !tbaa !3848
  br label %while.body, !dbg !9981

while.body:                                       ; preds = %cond.end5, %if.end26
  call void @llvm.dbg.declare(metadata i64* %r, metadata !9982, metadata !DIExpression()), !dbg !9984
  call void @llvm.dbg.declare(metadata i64* %link_length, metadata !9985, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !9987, metadata !DIExpression()), !dbg !9988
  %8 = load i64, i64* %buf_size, align 8, !dbg !9989, !tbaa !3848
  %call = call noalias i8* @malloc(i64 %8) #10, !dbg !9990
  store i8* %call, i8** %buffer, align 8, !dbg !9988, !tbaa !2995
  %9 = load i8*, i8** %buffer, align 8, !dbg !9991, !tbaa !2995
  %cmp7 = icmp eq i8* %9, null, !dbg !9993
  br i1 %cmp7, label %if.then, label %if.end, !dbg !9994

if.then:                                          ; preds = %while.body
  store i8* null, i8** %retval, align 8, !dbg !9995
  br label %return, !dbg !9995

if.end:                                           ; preds = %while.body
  %10 = load i8*, i8** %file.addr, align 8, !dbg !9996, !tbaa !2995
  %11 = load i8*, i8** %buffer, align 8, !dbg !9997, !tbaa !2995
  %12 = load i64, i64* %buf_size, align 8, !dbg !9998, !tbaa !3848
  %call8 = call i64 @readlink(i8* %10, i8* %11, i64 %12) #10, !dbg !9999
  store i64 %call8, i64* %r, align 8, !dbg !10000, !tbaa !3848
  %13 = load i64, i64* %r, align 8, !dbg !10001, !tbaa !3848
  store i64 %13, i64* %link_length, align 8, !dbg !10002, !tbaa !3848
  %14 = load i64, i64* %r, align 8, !dbg !10003, !tbaa !3848
  %cmp9 = icmp slt i64 %14, 0, !dbg !10005
  br i1 %cmp9, label %land.lhs.true, label %if.end15, !dbg !10006

land.lhs.true:                                    ; preds = %if.end
  %call10 = call i32* @__errno_location() #15, !dbg !10007
  %15 = load i32, i32* %call10, align 4, !dbg !10007, !tbaa !2982, !ctir !7
  %cmp11 = icmp ne i32 %15, 34, !dbg !10008
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !10009

if.then12:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !10010, metadata !DIExpression()), !dbg !10012
  %call13 = call i32* @__errno_location() #15, !dbg !10013
  %16 = load i32, i32* %call13, align 4, !dbg !10013, !tbaa !2982, !ctir !7
  store i32 %16, i32* %saved_errno, align 4, !dbg !10012, !tbaa !2982
  %17 = load i8*, i8** %buffer, align 8, !dbg !10014, !tbaa !2995
  call void @free(i8* %17) #10, !dbg !10015
  %18 = load i32, i32* %saved_errno, align 4, !dbg !10016, !tbaa !2982
  %call14 = call i32* @__errno_location() #15, !dbg !10017
  store i32 %18, i32* %call14, align 4, !dbg !10018, !tbaa !2982, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !10019
  br label %return, !dbg !10019

if.end15:                                         ; preds = %land.lhs.true, %if.end
  %19 = load i64, i64* %link_length, align 8, !dbg !10020, !tbaa !3848
  %20 = load i64, i64* %buf_size, align 8, !dbg !10022, !tbaa !3848
  %cmp16 = icmp ult i64 %19, %20, !dbg !10023
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !10024

if.then17:                                        ; preds = %if.end15
  %21 = load i8*, i8** %buffer, align 8, !dbg !10025, !tbaa !2995
  %22 = load i64, i64* %link_length, align 8, !dbg !10027, !tbaa !3848
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 %22, !dbg !10025, !ctir !9
  store i8 0, i8* %arrayidx, align 1, !dbg !10028, !tbaa !3657
  %23 = load i8*, i8** %buffer, align 8, !dbg !10029, !tbaa !2995
  store i8* %23, i8** %retval, align 8, !dbg !10030
  br label %return, !dbg !10030

if.end18:                                         ; preds = %if.end15
  %24 = load i8*, i8** %buffer, align 8, !dbg !10031, !tbaa !2995
  call void @free(i8* %24) #10, !dbg !10032
  %25 = load i64, i64* %buf_size, align 8, !dbg !10033, !tbaa !3848
  %cmp19 = icmp ule i64 %25, 4611686018427387903, !dbg !10035
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !10036

if.then20:                                        ; preds = %if.end18
  %26 = load i64, i64* %buf_size, align 8, !dbg !10037, !tbaa !3848
  %mul = mul i64 %26, 2, !dbg !10037
  store i64 %mul, i64* %buf_size, align 8, !dbg !10037, !tbaa !3848
  br label %if.end26, !dbg !10038

if.else:                                          ; preds = %if.end18
  %27 = load i64, i64* %buf_size, align 8, !dbg !10039, !tbaa !3848
  %cmp21 = icmp ult i64 %27, 9223372036854775807, !dbg !10041
  br i1 %cmp21, label %if.then22, label %if.else23, !dbg !10042

if.then22:                                        ; preds = %if.else
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !10043, !tbaa !3848
  br label %if.end25, !dbg !10044

if.else23:                                        ; preds = %if.else
  %call24 = call i32* @__errno_location() #15, !dbg !10045
  store i32 12, i32* %call24, align 4, !dbg !10047, !tbaa !2982, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !10048
  br label %return, !dbg !10048

if.end25:                                         ; preds = %if.then22
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then20
  br label %while.body, !dbg !9981, !llvm.loop !10049

return:                                           ; preds = %if.else23, %if.then17, %if.then12, %if.then
  %28 = load i8*, i8** %retval, align 8, !dbg !10051
  ret i8* %28, !dbg !10051
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_simple_backup_suffix(i8* %s) #4 !dbg !10052 !ctir !136 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !10053, metadata !DIExpression()), !dbg !10054
  %0 = load i8*, i8** %s.addr, align 8, !dbg !10055, !tbaa !2995
  %tobool = icmp ne i8* %0, null, !dbg !10055
  br i1 %tobool, label %if.end, label %if.then, !dbg !10057

if.then:                                          ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.192, i64 0, i64 0)) #10, !dbg !10058
  store i8* %call, i8** %s.addr, align 8, !dbg !10059, !tbaa !2995
  br label %if.end, !dbg !10060

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !10061, !tbaa !2995
  %tobool1 = icmp ne i8* %1, null, !dbg !10061
  br i1 %tobool1, label %land.lhs.true, label %cond.false, !dbg !10062

land.lhs.true:                                    ; preds = %if.end
  %2 = load i8*, i8** %s.addr, align 8, !dbg !10063, !tbaa !2995
  %3 = load i8, i8* %2, align 1, !dbg !10064, !tbaa !3657, !ctir !116
  %conv = sext i8 %3 to i32, !dbg !10064
  %tobool2 = icmp ne i32 %conv, 0, !dbg !10064
  br i1 %tobool2, label %land.lhs.true3, label %cond.false, !dbg !10065

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %s.addr, align 8, !dbg !10066, !tbaa !2995
  %5 = load i8*, i8** %s.addr, align 8, !dbg !10067, !tbaa !2995
  %call4 = call i8* @last_component(i8* %5) #14, !dbg !10068
  %cmp = icmp eq i8* %4, %call4, !dbg !10069
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10061

cond.true:                                        ; preds = %land.lhs.true3
  %6 = load i8*, i8** %s.addr, align 8, !dbg !10070, !tbaa !2995
  br label %cond.end, !dbg !10061

cond.false:                                       ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  br label %cond.end, !dbg !10061

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.193, i64 0, i64 0), %cond.false ], !dbg !10061
  store i8* %cond, i8** @simple_backup_suffix, align 8, !dbg !10071, !tbaa !2995
  ret void, !dbg !10072
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backupfile_internal(i32 %dir_fd, i8* %file, i32 %backup_type, i1 zeroext %rename) #4 !dbg !10073 !ctir !604 {
entry:
  %retval = alloca i8*, align 8
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %rename.addr = alloca i8, align 1
  %base_offset = alloca i64, align 8, !ctir !566
  %filelen = alloca i64, align 8, !ctir !55
  %simple_backup_suffix_size = alloca i64, align 8, !ctir !55
  %backup_suffix_size_guess = alloca i64, align 8, !ctir !55
  %ssize = alloca i64, align 8, !ctir !606
  %s = alloca i8*, align 8, !ctir !9
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !607
  %sdir = alloca i32, align 4, !ctir !7
  %base_max = alloca i64, align 8, !ctir !55
  %flags = alloca i32, align 4, !ctir !70
  %e = alloca i32, align 4, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10074, metadata !DIExpression()), !dbg !10075
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10076, metadata !DIExpression()), !dbg !10077
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !10078, metadata !DIExpression()), !dbg !10079
  %frombool = zext i1 %rename to i8
  store i8 %frombool, i8* %rename.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %rename.addr, metadata !10080, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.declare(metadata i64* %base_offset, metadata !10082, metadata !DIExpression()), !dbg !10083
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10084, !tbaa !2995
  %call = call i8* @last_component(i8* %0) #14, !dbg !10085
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10086, !tbaa !2995
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10087
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !10087
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10087
  store i64 %sub.ptr.sub, i64* %base_offset, align 8, !dbg !10083, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %filelen, metadata !10088, metadata !DIExpression()), !dbg !10089
  %2 = load i64, i64* %base_offset, align 8, !dbg !10090, !tbaa !3848
  %3 = load i8*, i8** %file.addr, align 8, !dbg !10091, !tbaa !2995
  %4 = load i64, i64* %base_offset, align 8, !dbg !10092, !tbaa !3848
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !10093
  %call1 = call i64 @strlen(i8* %add.ptr) #14, !dbg !10094
  %add = add i64 %2, %call1, !dbg !10095
  store i64 %add, i64* %filelen, align 8, !dbg !10089, !tbaa !3848
  %5 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !10096, !tbaa !2995
  %tobool = icmp ne i8* %5, null, !dbg !10096
  br i1 %tobool, label %if.end, label %if.then, !dbg !10098

if.then:                                          ; preds = %entry
  call void @set_simple_backup_suffix(i8* null), !dbg !10099
  br label %if.end, !dbg !10099

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i64* %simple_backup_suffix_size, metadata !10100, metadata !DIExpression()), !dbg !10101
  %6 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !10102, !tbaa !2995
  %call2 = call i64 @strlen(i8* %6) #14, !dbg !10103
  %add3 = add i64 %call2, 1, !dbg !10104
  store i64 %add3, i64* %simple_backup_suffix_size, align 8, !dbg !10101, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %backup_suffix_size_guess, metadata !10105, metadata !DIExpression()), !dbg !10106
  %7 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !10107, !tbaa !3848
  store i64 %7, i64* %backup_suffix_size_guess, align 8, !dbg !10106, !tbaa !3848
  %8 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !10108, !tbaa !3848
  %cmp = icmp ult i64 %8, 9, !dbg !10110
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !10111

if.then4:                                         ; preds = %if.end
  store i64 9, i64* %backup_suffix_size_guess, align 8, !dbg !10112, !tbaa !3848
  br label %if.end5, !dbg !10113

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.dbg.declare(metadata i64* %ssize, metadata !10114, metadata !DIExpression()), !dbg !10115
  %9 = load i64, i64* %filelen, align 8, !dbg !10116, !tbaa !3848
  %10 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !10117, !tbaa !3848
  %add6 = add i64 %9, %10, !dbg !10118
  %add7 = add i64 %add6, 1, !dbg !10119
  store i64 %add7, i64* %ssize, align 8, !dbg !10115, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8** %s, metadata !10120, metadata !DIExpression()), !dbg !10121
  %11 = load i64, i64* %ssize, align 8, !dbg !10122, !tbaa !3848
  %call8 = call noalias i8* @malloc(i64 %11) #10, !dbg !10123
  store i8* %call8, i8** %s, align 8, !dbg !10121, !tbaa !2995
  %12 = load i8*, i8** %s, align 8, !dbg !10124, !tbaa !2995
  %tobool9 = icmp ne i8* %12, null, !dbg !10124
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !10126

if.then10:                                        ; preds = %if.end5
  %13 = load i8*, i8** %s, align 8, !dbg !10127, !tbaa !2995
  store i8* %13, i8** %retval, align 8, !dbg !10128
  br label %return, !dbg !10128

if.end11:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !10129, metadata !DIExpression()), !dbg !10130
  store %struct.__dirstream* null, %struct.__dirstream** %dirp, align 8, !dbg !10130, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32* %sdir, metadata !10131, metadata !DIExpression()), !dbg !10132
  store i32 -1, i32* %sdir, align 4, !dbg !10132, !tbaa !2982
  call void @llvm.dbg.declare(metadata i64* %base_max, metadata !10133, metadata !DIExpression()), !dbg !10134
  store i64 0, i64* %base_max, align 8, !dbg !10134, !tbaa !3848
  br label %while.body, !dbg !10135

while.body:                                       ; preds = %if.end11, %if.end46
  %14 = load i8*, i8** %s, align 8, !dbg !10136, !tbaa !2995
  %15 = load i8*, i8** %file.addr, align 8, !dbg !10138, !tbaa !2995
  %16 = load i64, i64* %filelen, align 8, !dbg !10139, !tbaa !3848
  %add12 = add i64 %16, 1, !dbg !10140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %add12, i1 false), !dbg !10141
  %17 = load i32, i32* %backup_type.addr, align 4, !dbg !10142, !tbaa !3657
  %cmp13 = icmp eq i32 %17, 1, !dbg !10144
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !10145

if.then14:                                        ; preds = %while.body
  %18 = load i8*, i8** %s, align 8, !dbg !10146, !tbaa !2995
  %19 = load i64, i64* %filelen, align 8, !dbg !10147, !tbaa !3848
  %add.ptr15 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !10148
  %20 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !10149, !tbaa !2995
  %21 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !10150, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr15, i8* align 1 %20, i64 %21, i1 false), !dbg !10151
  br label %if.end25, !dbg !10151

if.else:                                          ; preds = %while.body
  %22 = load i32, i32* %dir_fd.addr, align 4, !dbg !10152, !tbaa !2982
  %23 = load i64, i64* %ssize, align 8, !dbg !10153, !tbaa !3848
  %24 = load i64, i64* %filelen, align 8, !dbg !10154, !tbaa !3848
  %25 = load i64, i64* %base_offset, align 8, !dbg !10155, !tbaa !3848
  %call16 = call i32 @numbered_backup(i32 %22, i8** %s, i64 %23, i64 %24, i64 %25, %struct.__dirstream** %dirp, i32* %sdir), !dbg !10156
  switch i32 %call16, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb17
    i32 1, label %sw.bb22
    i32 3, label %sw.bb23
  ], !dbg !10157

sw.bb:                                            ; preds = %if.else
  br label %sw.epilog, !dbg !10158

sw.bb17:                                          ; preds = %if.else
  %26 = load i32, i32* %backup_type.addr, align 4, !dbg !10160, !tbaa !3657
  %cmp18 = icmp eq i32 %26, 2, !dbg !10162
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !10163

if.then19:                                        ; preds = %sw.bb17
  store i32 1, i32* %backup_type.addr, align 4, !dbg !10164, !tbaa !3657
  %27 = load i8*, i8** %s, align 8, !dbg !10166, !tbaa !2995
  %28 = load i64, i64* %filelen, align 8, !dbg !10167, !tbaa !3848
  %add.ptr20 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !10168
  %29 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !10169, !tbaa !2995
  %30 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !10170, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr20, i8* align 1 %29, i64 %30, i1 false), !dbg !10171
  br label %if.end21, !dbg !10172

if.end21:                                         ; preds = %if.then19, %sw.bb17
  br label %sw.bb22, !dbg !10173

sw.bb22:                                          ; preds = %if.else, %if.end21
  %31 = load i8*, i8** %s, align 8, !dbg !10174, !tbaa !2995
  %32 = load i64, i64* %filelen, align 8, !dbg !10175, !tbaa !3848
  %33 = load i32, i32* %sdir, align 4, !dbg !10176, !tbaa !2982
  call void @check_extension(i8* %31, i64 %32, i8 signext 126, i32 %33, i64* %base_max), !dbg !10177
  br label %sw.epilog, !dbg !10178

sw.bb23:                                          ; preds = %if.else
  %34 = load i8*, i8** %s, align 8, !dbg !10179, !tbaa !2995
  call void @free(i8* %34) #10, !dbg !10180
  %call24 = call i32* @__errno_location() #15, !dbg !10181
  store i32 12, i32* %call24, align 4, !dbg !10182, !tbaa !2982, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !10183
  br label %return, !dbg !10183

sw.epilog:                                        ; preds = %if.else, %sw.bb22, %sw.bb
  br label %if.end25

if.end25:                                         ; preds = %sw.epilog, %if.then14
  %35 = load i8, i8* %rename.addr, align 1, !dbg !10184, !tbaa !3106
  %tobool26 = trunc i8 %35 to i1, !dbg !10184
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !10186

if.then27:                                        ; preds = %if.end25
  br label %while.end, !dbg !10187

if.end28:                                         ; preds = %if.end25
  %36 = load i32, i32* %sdir, align 4, !dbg !10188, !tbaa !2982
  %cmp29 = icmp slt i32 %36, 0, !dbg !10190
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !10191

if.then30:                                        ; preds = %if.end28
  store i32 -100, i32* %sdir, align 4, !dbg !10192, !tbaa !2982
  store i64 0, i64* %base_offset, align 8, !dbg !10194, !tbaa !3848
  br label %if.end31, !dbg !10195

if.end31:                                         ; preds = %if.then30, %if.end28
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !10196, metadata !DIExpression()), !dbg !10197
  %37 = load i32, i32* %backup_type.addr, align 4, !dbg !10198, !tbaa !3657
  %cmp32 = icmp eq i32 %37, 1, !dbg !10199
  %38 = zext i1 %cmp32 to i64, !dbg !10198
  %cond = select i1 %cmp32, i32 0, i32 1, !dbg !10198
  store i32 %cond, i32* %flags, align 4, !dbg !10197, !tbaa !2982
  %39 = load i8*, i8** %file.addr, align 8, !dbg !10200, !tbaa !2995
  %40 = load i32, i32* %sdir, align 4, !dbg !10202, !tbaa !2982
  %41 = load i8*, i8** %s, align 8, !dbg !10203, !tbaa !2995
  %42 = load i64, i64* %base_offset, align 8, !dbg !10204, !tbaa !3848
  %add.ptr33 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !10205
  %43 = load i32, i32* %flags, align 4, !dbg !10206, !tbaa !2982
  %call34 = call i32 @renameatu(i32 -100, i8* %39, i32 %40, i8* %add.ptr33, i32 %43), !dbg !10207
  %cmp35 = icmp eq i32 %call34, 0, !dbg !10208
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !10209

if.then36:                                        ; preds = %if.end31
  br label %while.end, !dbg !10210

if.end37:                                         ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %e, metadata !10211, metadata !DIExpression()), !dbg !10212
  %call38 = call i32* @__errno_location() #15, !dbg !10213
  %44 = load i32, i32* %call38, align 4, !dbg !10213, !tbaa !2982, !ctir !7
  store i32 %44, i32* %e, align 4, !dbg !10212, !tbaa !2982
  %45 = load i32, i32* %e, align 4, !dbg !10214, !tbaa !2982
  %cmp39 = icmp ne i32 %45, 17, !dbg !10216
  br i1 %cmp39, label %if.then40, label %if.end46, !dbg !10217

if.then40:                                        ; preds = %if.end37
  %46 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10218, !tbaa !2995
  %tobool41 = icmp ne %struct.__dirstream* %46, null, !dbg !10218
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !10221

if.then42:                                        ; preds = %if.then40
  %47 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10222, !tbaa !2995
  %call43 = call i32 @closedir(%struct.__dirstream* %47), !dbg !10223
  br label %if.end44, !dbg !10223

if.end44:                                         ; preds = %if.then42, %if.then40
  %48 = load i8*, i8** %s, align 8, !dbg !10224, !tbaa !2995
  call void @free(i8* %48) #10, !dbg !10225
  %49 = load i32, i32* %e, align 4, !dbg !10226, !tbaa !2982
  %call45 = call i32* @__errno_location() #15, !dbg !10227
  store i32 %49, i32* %call45, align 4, !dbg !10228, !tbaa !2982, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !10229
  br label %return, !dbg !10229

if.end46:                                         ; preds = %if.end37
  br label %while.body, !dbg !10135, !llvm.loop !10230

while.end:                                        ; preds = %if.then36, %if.then27
  %50 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10232, !tbaa !2995
  %tobool47 = icmp ne %struct.__dirstream* %50, null, !dbg !10232
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !10234

if.then48:                                        ; preds = %while.end
  %51 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10235, !tbaa !2995
  %call49 = call i32 @closedir(%struct.__dirstream* %51), !dbg !10236
  br label %if.end50, !dbg !10236

if.end50:                                         ; preds = %if.then48, %while.end
  %52 = load i8*, i8** %s, align 8, !dbg !10237, !tbaa !2995
  store i8* %52, i8** %retval, align 8, !dbg !10238
  br label %return, !dbg !10238

return:                                           ; preds = %if.end50, %if.end44, %sw.bb23, %if.then10
  %53 = load i8*, i8** %retval, align 8, !dbg !10239
  ret i8* %53, !dbg !10239
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @numbered_backup(i32 %dir_fd, i8** %buffer, i64 %buffer_size, i64 %filelen, i64 %base_offset, %struct.__dirstream** %dirpp, i32* %pnew_fd) #4 !dbg !10240 !ctir !611 {
entry:
  %retval = alloca i32, align 4
  %dir_fd.addr = alloca i32, align 4
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %filelen.addr = alloca i64, align 8
  %base_offset.addr = alloca i64, align 8
  %dirpp.addr = alloca %struct.__dirstream**, align 8
  %pnew_fd.addr = alloca i32*, align 8
  %result = alloca i32, align 4, !ctir !596
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !607
  %dp = alloca %struct.dirent*, align 8, !ctir !614
  %buf = alloca i8*, align 8, !ctir !9
  %versionlenmax = alloca i64, align 8, !ctir !55
  %base = alloca i8*, align 8, !ctir !9
  %baselen = alloca i64, align 8, !ctir !55
  %tmp = alloca [2 x i8], align 1, !ctir !623
  %p = alloca i8*, align 8, !ctir !115
  %q = alloca i8*, align 8, !ctir !9
  %all_9s = alloca i8, align 1, !ctir !120
  %versionlen = alloca i64, align 8, !ctir !55
  %new_buffer_size = alloca i64, align 8, !ctir !55
  %new_buf = alloca i8*, align 8, !ctir !9
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10241, metadata !DIExpression()), !dbg !10242
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !10243, metadata !DIExpression()), !dbg !10244
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !10245, metadata !DIExpression()), !dbg !10246
  store i64 %filelen, i64* %filelen.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !10247, metadata !DIExpression()), !dbg !10248
  store i64 %base_offset, i64* %base_offset.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %base_offset.addr, metadata !10249, metadata !DIExpression()), !dbg !10250
  store %struct.__dirstream** %dirpp, %struct.__dirstream*** %dirpp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.__dirstream*** %dirpp.addr, metadata !10251, metadata !DIExpression()), !dbg !10252
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !10253, metadata !DIExpression()), !dbg !10254
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10255, metadata !DIExpression()), !dbg !10256
  store i32 2, i32* %result, align 4, !dbg !10256, !tbaa !3657
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !10257, metadata !DIExpression()), !dbg !10258
  %0 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !10259, !tbaa !2995
  %1 = load %struct.__dirstream*, %struct.__dirstream** %0, align 8, !dbg !10260, !tbaa !2995, !ctir !607
  store %struct.__dirstream* %1, %struct.__dirstream** %dirp, align 8, !dbg !10258, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !10261, metadata !DIExpression()), !dbg !10262
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !10263, metadata !DIExpression()), !dbg !10264
  %2 = load i8**, i8*** %buffer.addr, align 8, !dbg !10265, !tbaa !2995
  %3 = load i8*, i8** %2, align 8, !dbg !10266, !tbaa !2995, !ctir !9
  store i8* %3, i8** %buf, align 8, !dbg !10264, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %versionlenmax, metadata !10267, metadata !DIExpression()), !dbg !10268
  store i64 1, i64* %versionlenmax, align 8, !dbg !10268, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10269, metadata !DIExpression()), !dbg !10270
  %4 = load i8*, i8** %buf, align 8, !dbg !10271, !tbaa !2995
  %5 = load i64, i64* %base_offset.addr, align 8, !dbg !10272, !tbaa !3848
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !10273
  store i8* %add.ptr, i8** %base, align 8, !dbg !10270, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10274, metadata !DIExpression()), !dbg !10275
  %6 = load i8*, i8** %base, align 8, !dbg !10276, !tbaa !2995
  %call = call i64 @base_len(i8* %6) #14, !dbg !10277
  store i64 %call, i64* %baselen, align 8, !dbg !10275, !tbaa !3848
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10278, !tbaa !2995
  %tobool = icmp ne %struct.__dirstream* %7, null, !dbg !10278
  br i1 %tobool, label %if.then, label %if.else, !dbg !10280

if.then:                                          ; preds = %entry
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10281, !tbaa !2995
  call void @rewinddir(%struct.__dirstream* %8) #10, !dbg !10282
  br label %if.end12, !dbg !10282

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !10283, metadata !DIExpression()), !dbg !10285
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10286
  %9 = load i8*, i8** %base, align 8, !dbg !10287, !tbaa !2995
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %9, i64 2, i1 false), !dbg !10286
  %10 = load i8*, i8** %base, align 8, !dbg !10288, !tbaa !2995
  %call1 = call i8* @strcpy(i8* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.194, i64 0, i64 0)) #10, !dbg !10289
  %11 = load i32, i32* %dir_fd.addr, align 4, !dbg !10290, !tbaa !2982
  %12 = load i8*, i8** %buf, align 8, !dbg !10291, !tbaa !2995
  %13 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !10292, !tbaa !2995
  %call2 = call %struct.__dirstream* @opendirat(i32 %11, i8* %12, i32 0, i32* %13), !dbg !10293
  store %struct.__dirstream* %call2, %struct.__dirstream** %dirp, align 8, !dbg !10294, !tbaa !2995
  %14 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10295, !tbaa !2995
  %tobool3 = icmp ne %struct.__dirstream* %14, null, !dbg !10295
  br i1 %tobool3, label %if.end, label %land.lhs.true, !dbg !10297

land.lhs.true:                                    ; preds = %if.else
  %call4 = call i32* @__errno_location() #15, !dbg !10298
  %15 = load i32, i32* %call4, align 4, !dbg !10298, !tbaa !2982, !ctir !7
  %cmp = icmp eq i32 %15, 12, !dbg !10299
  br i1 %cmp, label %if.then5, label %if.end, !dbg !10300

if.then5:                                         ; preds = %land.lhs.true
  store i32 3, i32* %result, align 4, !dbg !10301, !tbaa !3657
  br label %if.end, !dbg !10302

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.else
  %16 = load i8*, i8** %base, align 8, !dbg !10303, !tbaa !2995
  %arraydecay6 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10304
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %arraydecay6, i64 2, i1 false), !dbg !10304
  %17 = load i8*, i8** %base, align 8, !dbg !10305, !tbaa !2995
  %18 = load i64, i64* %baselen, align 8, !dbg !10306, !tbaa !3848
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !10307
  %call8 = call i8* @strcpy(i8* %add.ptr7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.195, i64 0, i64 0)) #10, !dbg !10308
  %19 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10309, !tbaa !2995
  %tobool9 = icmp ne %struct.__dirstream* %19, null, !dbg !10309
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !10311

if.then10:                                        ; preds = %if.end
  %20 = load i32, i32* %result, align 4, !dbg !10312, !tbaa !3657
  store i32 %20, i32* %retval, align 4, !dbg !10313
  br label %return, !dbg !10313

if.end11:                                         ; preds = %if.end
  %21 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10314, !tbaa !2995
  %22 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !10315, !tbaa !2995
  store %struct.__dirstream* %21, %struct.__dirstream** %22, align 8, !dbg !10316, !tbaa !2995, !ctir !607
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  br label %while.cond, !dbg !10317

while.cond:                                       ; preds = %while.end, %if.then73, %if.then38, %if.then26, %if.then18, %if.end12
  %23 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10318, !tbaa !2995
  %call13 = call %struct.dirent* @readdir(%struct.__dirstream* %23), !dbg !10319
  store %struct.dirent* %call13, %struct.dirent** %dp, align 8, !dbg !10320, !tbaa !2995
  %cmp14 = icmp ne %struct.dirent* %call13, null, !dbg !10321
  br i1 %cmp14, label %while.body, label %while.end109, !dbg !10317

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10322, metadata !DIExpression()), !dbg !10324
  call void @llvm.dbg.declare(metadata i8** %q, metadata !10325, metadata !DIExpression()), !dbg !10326
  call void @llvm.dbg.declare(metadata i8* %all_9s, metadata !10327, metadata !DIExpression()), !dbg !10328
  call void @llvm.dbg.declare(metadata i64* %versionlen, metadata !10329, metadata !DIExpression()), !dbg !10330
  %24 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !10331, !tbaa !2995
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %24, i32 0, i32 4, !dbg !10331, !ctir !615
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !10331
  %call16 = call i64 @strlen(i8* %arraydecay15) #14, !dbg !10331
  %25 = load i64, i64* %baselen, align 8, !dbg !10333, !tbaa !3848
  %add = add i64 %25, 4, !dbg !10334
  %cmp17 = icmp ult i64 %call16, %add, !dbg !10335
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !10336

if.then18:                                        ; preds = %while.body
  br label %while.cond, !dbg !10337, !llvm.loop !10338

if.end19:                                         ; preds = %while.body
  %26 = load i8*, i8** %buf, align 8, !dbg !10340, !tbaa !2995
  %27 = load i64, i64* %base_offset.addr, align 8, !dbg !10342, !tbaa !3848
  %add.ptr20 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !10343
  %28 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !10344, !tbaa !2995
  %d_name21 = getelementptr inbounds %struct.dirent, %struct.dirent* %28, i32 0, i32 4, !dbg !10345, !ctir !615
  %arraydecay22 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name21, i64 0, i64 0, !dbg !10344
  %29 = load i64, i64* %baselen, align 8, !dbg !10346, !tbaa !3848
  %add23 = add i64 %29, 2, !dbg !10347
  %call24 = call i32 @memcmp(i8* %add.ptr20, i8* %arraydecay22, i64 %add23) #14, !dbg !10348
  %cmp25 = icmp ne i32 %call24, 0, !dbg !10349
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !10350

if.then26:                                        ; preds = %if.end19
  br label %while.cond, !dbg !10351, !llvm.loop !10338

if.end27:                                         ; preds = %if.end19
  %30 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !10352, !tbaa !2995
  %d_name28 = getelementptr inbounds %struct.dirent, %struct.dirent* %30, i32 0, i32 4, !dbg !10353, !ctir !615
  %arraydecay29 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name28, i64 0, i64 0, !dbg !10352
  %31 = load i64, i64* %baselen, align 8, !dbg !10354, !tbaa !3848
  %add.ptr30 = getelementptr inbounds i8, i8* %arraydecay29, i64 %31, !dbg !10355
  %add.ptr31 = getelementptr inbounds i8, i8* %add.ptr30, i64 2, !dbg !10356
  store i8* %add.ptr31, i8** %p, align 8, !dbg !10357, !tbaa !2995
  %32 = load i8*, i8** %p, align 8, !dbg !10358, !tbaa !2995
  %33 = load i8, i8* %32, align 1, !dbg !10360, !tbaa !3657, !ctir !116
  %conv = sext i8 %33 to i32, !dbg !10360
  %cmp32 = icmp sle i32 49, %conv, !dbg !10361
  br i1 %cmp32, label %land.lhs.true34, label %if.then38, !dbg !10362

land.lhs.true34:                                  ; preds = %if.end27
  %34 = load i8*, i8** %p, align 8, !dbg !10363, !tbaa !2995
  %35 = load i8, i8* %34, align 1, !dbg !10364, !tbaa !3657, !ctir !116
  %conv35 = sext i8 %35 to i32, !dbg !10364
  %cmp36 = icmp sle i32 %conv35, 57, !dbg !10365
  br i1 %cmp36, label %if.end39, label %if.then38, !dbg !10366

if.then38:                                        ; preds = %land.lhs.true34, %if.end27
  br label %while.cond, !dbg !10367, !llvm.loop !10338

if.end39:                                         ; preds = %land.lhs.true34
  %36 = load i8*, i8** %p, align 8, !dbg !10368, !tbaa !2995
  %37 = load i8, i8* %36, align 1, !dbg !10369, !tbaa !3657, !ctir !116
  %conv40 = sext i8 %37 to i32, !dbg !10369
  %cmp41 = icmp eq i32 %conv40, 57, !dbg !10370
  %frombool = zext i1 %cmp41 to i8, !dbg !10371
  store i8 %frombool, i8* %all_9s, align 1, !dbg !10371, !tbaa !3106
  store i64 1, i64* %versionlen, align 8, !dbg !10372, !tbaa !3848
  br label %for.cond, !dbg !10374

for.cond:                                         ; preds = %for.inc, %if.end39
  %38 = load i8*, i8** %p, align 8, !dbg !10375, !tbaa !2995
  %39 = load i64, i64* %versionlen, align 8, !dbg !10375, !tbaa !3848
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !10375, !ctir !115
  %40 = load i8, i8* %arrayidx, align 1, !dbg !10375, !tbaa !3657
  %conv43 = sext i8 %40 to i32, !dbg !10375
  %sub = sub i32 %conv43, 48, !dbg !10375
  %cmp44 = icmp ule i32 %sub, 9, !dbg !10375
  br i1 %cmp44, label %for.body, label %for.end, !dbg !10377

for.body:                                         ; preds = %for.cond
  %41 = load i8*, i8** %p, align 8, !dbg !10378, !tbaa !2995
  %42 = load i64, i64* %versionlen, align 8, !dbg !10379, !tbaa !3848
  %arrayidx46 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !10378, !ctir !115
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !10378, !tbaa !3657
  %conv47 = sext i8 %43 to i32, !dbg !10378
  %cmp48 = icmp eq i32 %conv47, 57, !dbg !10380
  %conv49 = zext i1 %cmp48 to i32, !dbg !10380
  %44 = load i8, i8* %all_9s, align 1, !dbg !10381, !tbaa !3106
  %tobool50 = trunc i8 %44 to i1, !dbg !10381
  %conv51 = zext i1 %tobool50 to i32, !dbg !10381
  %and = and i32 %conv51, %conv49, !dbg !10381
  %tobool52 = icmp ne i32 %and, 0, !dbg !10381
  %frombool53 = zext i1 %tobool52 to i8, !dbg !10381
  store i8 %frombool53, i8* %all_9s, align 1, !dbg !10381, !tbaa !3106
  br label %for.inc, !dbg !10382

for.inc:                                          ; preds = %for.body
  %45 = load i64, i64* %versionlen, align 8, !dbg !10383, !tbaa !3848
  %inc = add i64 %45, 1, !dbg !10383
  store i64 %inc, i64* %versionlen, align 8, !dbg !10383, !tbaa !3848
  br label %for.cond, !dbg !10384, !llvm.loop !10385

for.end:                                          ; preds = %for.cond
  %46 = load i8*, i8** %p, align 8, !dbg !10387, !tbaa !2995
  %47 = load i64, i64* %versionlen, align 8, !dbg !10389, !tbaa !3848
  %arrayidx54 = getelementptr inbounds i8, i8* %46, i64 %47, !dbg !10387, !ctir !115
  %48 = load i8, i8* %arrayidx54, align 1, !dbg !10387, !tbaa !3657
  %conv55 = sext i8 %48 to i32, !dbg !10387
  %cmp56 = icmp eq i32 %conv55, 126, !dbg !10390
  br i1 %cmp56, label %land.lhs.true58, label %if.then73, !dbg !10391

land.lhs.true58:                                  ; preds = %for.end
  %49 = load i8*, i8** %p, align 8, !dbg !10392, !tbaa !2995
  %50 = load i64, i64* %versionlen, align 8, !dbg !10393, !tbaa !3848
  %add59 = add i64 %50, 1, !dbg !10394
  %arrayidx60 = getelementptr inbounds i8, i8* %49, i64 %add59, !dbg !10392, !ctir !115
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !10392, !tbaa !3657
  %tobool61 = icmp ne i8 %51, 0, !dbg !10392
  br i1 %tobool61, label %if.then73, label %land.lhs.true62, !dbg !10395

land.lhs.true62:                                  ; preds = %land.lhs.true58
  %52 = load i64, i64* %versionlenmax, align 8, !dbg !10396, !tbaa !3848
  %53 = load i64, i64* %versionlen, align 8, !dbg !10397, !tbaa !3848
  %cmp63 = icmp ult i64 %52, %53, !dbg !10398
  br i1 %cmp63, label %if.end74, label %lor.lhs.false, !dbg !10399

lor.lhs.false:                                    ; preds = %land.lhs.true62
  %54 = load i64, i64* %versionlenmax, align 8, !dbg !10400, !tbaa !3848
  %55 = load i64, i64* %versionlen, align 8, !dbg !10401, !tbaa !3848
  %cmp65 = icmp eq i64 %54, %55, !dbg !10402
  br i1 %cmp65, label %land.lhs.true67, label %if.then73, !dbg !10403

land.lhs.true67:                                  ; preds = %lor.lhs.false
  %56 = load i8*, i8** %buf, align 8, !dbg !10404, !tbaa !2995
  %57 = load i64, i64* %filelen.addr, align 8, !dbg !10405, !tbaa !3848
  %add.ptr68 = getelementptr inbounds i8, i8* %56, i64 %57, !dbg !10406
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr68, i64 2, !dbg !10407
  %58 = load i8*, i8** %p, align 8, !dbg !10408, !tbaa !2995
  %59 = load i64, i64* %versionlen, align 8, !dbg !10409, !tbaa !3848
  %call70 = call i32 @memcmp(i8* %add.ptr69, i8* %58, i64 %59) #14, !dbg !10410
  %cmp71 = icmp sle i32 %call70, 0, !dbg !10411
  br i1 %cmp71, label %if.end74, label %if.then73, !dbg !10412

if.then73:                                        ; preds = %land.lhs.true67, %lor.lhs.false, %land.lhs.true58, %for.end
  br label %while.cond, !dbg !10413, !llvm.loop !10338

if.end74:                                         ; preds = %land.lhs.true67, %land.lhs.true62
  %60 = load i8, i8* %all_9s, align 1, !dbg !10414, !tbaa !3106
  %tobool75 = trunc i8 %60 to i1, !dbg !10414
  %conv76 = zext i1 %tobool75 to i64, !dbg !10414
  %61 = load i64, i64* %versionlen, align 8, !dbg !10415, !tbaa !3848
  %add77 = add i64 %conv76, %61, !dbg !10416
  store i64 %add77, i64* %versionlenmax, align 8, !dbg !10417, !tbaa !3848
  %62 = load i8, i8* %all_9s, align 1, !dbg !10418, !tbaa !3106
  %tobool78 = trunc i8 %62 to i1, !dbg !10418
  %63 = zext i1 %tobool78 to i64, !dbg !10418
  %cond = select i1 %tobool78, i32 1, i32 0, !dbg !10418
  store i32 %cond, i32* %result, align 4, !dbg !10419, !tbaa !3657
  call void @llvm.dbg.declare(metadata i64* %new_buffer_size, metadata !10420, metadata !DIExpression()), !dbg !10421
  %64 = load i64, i64* %filelen.addr, align 8, !dbg !10422, !tbaa !3848
  %add80 = add i64 %64, 2, !dbg !10423
  %65 = load i64, i64* %versionlenmax, align 8, !dbg !10424, !tbaa !3848
  %add81 = add i64 %add80, %65, !dbg !10425
  %add82 = add i64 %add81, 2, !dbg !10426
  store i64 %add82, i64* %new_buffer_size, align 8, !dbg !10421, !tbaa !3848
  %66 = load i64, i64* %buffer_size.addr, align 8, !dbg !10427, !tbaa !3848
  %67 = load i64, i64* %new_buffer_size, align 8, !dbg !10429, !tbaa !3848
  %cmp83 = icmp ult i64 %66, %67, !dbg !10430
  br i1 %cmp83, label %if.then85, label %if.end94, !dbg !10431

if.then85:                                        ; preds = %if.end74
  %68 = load i64, i64* %new_buffer_size, align 8, !dbg !10432, !tbaa !3848
  %cmp86 = icmp ult i64 4611686018427387903, %68, !dbg !10432
  br i1 %cmp86, label %if.end89, label %if.then88, !dbg !10435

if.then88:                                        ; preds = %if.then85
  %69 = load i64, i64* %new_buffer_size, align 8, !dbg !10436, !tbaa !3848
  %mul = mul i64 %69, 2, !dbg !10436
  store i64 %mul, i64* %new_buffer_size, align 8, !dbg !10436, !tbaa !3848
  br label %if.end89, !dbg !10437

if.end89:                                         ; preds = %if.then88, %if.then85
  call void @llvm.dbg.declare(metadata i8** %new_buf, metadata !10438, metadata !DIExpression()), !dbg !10439
  %70 = load i8*, i8** %buf, align 8, !dbg !10440, !tbaa !2995
  %71 = load i64, i64* %new_buffer_size, align 8, !dbg !10441, !tbaa !3848
  %call90 = call i8* @realloc(i8* %70, i64 %71) #10, !dbg !10442
  store i8* %call90, i8** %new_buf, align 8, !dbg !10439, !tbaa !2995
  %72 = load i8*, i8** %new_buf, align 8, !dbg !10443, !tbaa !2995
  %tobool91 = icmp ne i8* %72, null, !dbg !10443
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !10445

if.then92:                                        ; preds = %if.end89
  %73 = load i8*, i8** %buf, align 8, !dbg !10446, !tbaa !2995
  %74 = load i8**, i8*** %buffer.addr, align 8, !dbg !10448, !tbaa !2995
  store i8* %73, i8** %74, align 8, !dbg !10449, !tbaa !2995, !ctir !9
  store i32 3, i32* %retval, align 4, !dbg !10450
  br label %return, !dbg !10450

if.end93:                                         ; preds = %if.end89
  %75 = load i8*, i8** %new_buf, align 8, !dbg !10451, !tbaa !2995
  store i8* %75, i8** %buf, align 8, !dbg !10452, !tbaa !2995
  %76 = load i64, i64* %new_buffer_size, align 8, !dbg !10453, !tbaa !3848
  store i64 %76, i64* %buffer_size.addr, align 8, !dbg !10454, !tbaa !3848
  br label %if.end94, !dbg !10455

if.end94:                                         ; preds = %if.end93, %if.end74
  %77 = load i8*, i8** %buf, align 8, !dbg !10456, !tbaa !2995
  %78 = load i64, i64* %filelen.addr, align 8, !dbg !10457, !tbaa !3848
  %add.ptr95 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !10458
  store i8* %add.ptr95, i8** %q, align 8, !dbg !10459, !tbaa !2995
  %79 = load i8*, i8** %q, align 8, !dbg !10460, !tbaa !2995
  %incdec.ptr = getelementptr inbounds i8, i8* %79, i32 1, !dbg !10460
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !10460, !tbaa !2995
  store i8 46, i8* %79, align 1, !dbg !10461, !tbaa !3657, !ctir !10
  %80 = load i8*, i8** %q, align 8, !dbg !10462, !tbaa !2995
  %incdec.ptr96 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !10462
  store i8* %incdec.ptr96, i8** %q, align 8, !dbg !10462, !tbaa !2995
  store i8 126, i8* %80, align 1, !dbg !10463, !tbaa !3657, !ctir !10
  %81 = load i8*, i8** %q, align 8, !dbg !10464, !tbaa !2995
  store i8 48, i8* %81, align 1, !dbg !10465, !tbaa !3657, !ctir !10
  %82 = load i8, i8* %all_9s, align 1, !dbg !10466, !tbaa !3106
  %tobool97 = trunc i8 %82 to i1, !dbg !10466
  %conv98 = zext i1 %tobool97 to i32, !dbg !10466
  %83 = load i8*, i8** %q, align 8, !dbg !10467, !tbaa !2995
  %idx.ext = sext i32 %conv98 to i64, !dbg !10467
  %add.ptr99 = getelementptr inbounds i8, i8* %83, i64 %idx.ext, !dbg !10467
  store i8* %add.ptr99, i8** %q, align 8, !dbg !10467, !tbaa !2995
  %84 = load i8*, i8** %q, align 8, !dbg !10468, !tbaa !2995
  %85 = load i8*, i8** %p, align 8, !dbg !10469, !tbaa !2995
  %86 = load i64, i64* %versionlen, align 8, !dbg !10470, !tbaa !3848
  %add100 = add i64 %86, 2, !dbg !10471
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %85, i64 %add100, i1 false), !dbg !10472
  %87 = load i64, i64* %versionlen, align 8, !dbg !10473, !tbaa !3848
  %88 = load i8*, i8** %q, align 8, !dbg !10474, !tbaa !2995
  %add.ptr101 = getelementptr inbounds i8, i8* %88, i64 %87, !dbg !10474
  store i8* %add.ptr101, i8** %q, align 8, !dbg !10474, !tbaa !2995
  br label %while.cond102, !dbg !10475

while.cond102:                                    ; preds = %while.body107, %if.end94
  %89 = load i8*, i8** %q, align 8, !dbg !10476, !tbaa !2995
  %incdec.ptr103 = getelementptr inbounds i8, i8* %89, i32 -1, !dbg !10476
  store i8* %incdec.ptr103, i8** %q, align 8, !dbg !10476, !tbaa !2995
  %90 = load i8, i8* %incdec.ptr103, align 1, !dbg !10477, !tbaa !3657, !ctir !10
  %conv104 = sext i8 %90 to i32, !dbg !10477
  %cmp105 = icmp eq i32 %conv104, 57, !dbg !10478
  br i1 %cmp105, label %while.body107, label %while.end, !dbg !10475

while.body107:                                    ; preds = %while.cond102
  %91 = load i8*, i8** %q, align 8, !dbg !10479, !tbaa !2995
  store i8 48, i8* %91, align 1, !dbg !10480, !tbaa !3657, !ctir !10
  br label %while.cond102, !dbg !10475, !llvm.loop !10481

while.end:                                        ; preds = %while.cond102
  %92 = load i8*, i8** %q, align 8, !dbg !10483, !tbaa !2995
  %93 = load i8, i8* %92, align 1, !dbg !10484, !tbaa !3657, !ctir !10
  %inc108 = add i8 %93, 1, !dbg !10484
  store i8 %inc108, i8* %92, align 1, !dbg !10484, !tbaa !3657, !ctir !10
  br label %while.cond, !dbg !10317, !llvm.loop !10338

while.end109:                                     ; preds = %while.cond
  %94 = load i8*, i8** %buf, align 8, !dbg !10485, !tbaa !2995
  %95 = load i8**, i8*** %buffer.addr, align 8, !dbg !10486, !tbaa !2995
  store i8* %94, i8** %95, align 8, !dbg !10487, !tbaa !2995, !ctir !9
  %96 = load i32, i32* %result, align 4, !dbg !10488, !tbaa !3657
  store i32 %96, i32* %retval, align 4, !dbg !10489
  br label %return, !dbg !10489

return:                                           ; preds = %while.end109, %if.then92, %if.then10
  %97 = load i32, i32* %retval, align 4, !dbg !10490
  ret i32 %97, !dbg !10490
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_extension(i8* %file, i64 %filelen, i8 signext %e, i32 %dir_fd, i64* %base_max) #4 !dbg !10491 !ctir !624 {
entry:
  %file.addr = alloca i8*, align 8
  %filelen.addr = alloca i64, align 8
  %e.addr = alloca i8, align 1
  %dir_fd.addr = alloca i32, align 4
  %base_max.addr = alloca i64*, align 8
  %base = alloca i8*, align 8, !ctir !9
  %baselen = alloca i64, align 8, !ctir !55
  %baselen_max = alloca i64, align 8, !ctir !55
  %name_max = alloca i64, align 8, !ctir !31
  %tmp = alloca [2 x i8], align 1, !ctir !623
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10492, metadata !DIExpression()), !dbg !10493
  store i64 %filelen, i64* %filelen.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !10494, metadata !DIExpression()), !dbg !10495
  store i8 %e, i8* %e.addr, align 1, !tbaa !3657
  call void @llvm.dbg.declare(metadata i8* %e.addr, metadata !10496, metadata !DIExpression()), !dbg !10497
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10498, metadata !DIExpression()), !dbg !10499
  store i64* %base_max, i64** %base_max.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64** %base_max.addr, metadata !10500, metadata !DIExpression()), !dbg !10501
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10502, metadata !DIExpression()), !dbg !10503
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10504, !tbaa !2995
  %call = call i8* @last_component(i8* %0) #14, !dbg !10505
  store i8* %call, i8** %base, align 8, !dbg !10503, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10506, metadata !DIExpression()), !dbg !10507
  %1 = load i8*, i8** %base, align 8, !dbg !10508, !tbaa !2995
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !10509
  store i64 %call1, i64* %baselen, align 8, !dbg !10507, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %baselen_max, metadata !10510, metadata !DIExpression()), !dbg !10511
  store i64 255, i64* %baselen_max, align 8, !dbg !10511, !tbaa !3848
  %2 = load i64, i64* %baselen, align 8, !dbg !10512, !tbaa !3848
  %cmp = icmp ult i64 14, %2, !dbg !10514
  br i1 %cmp, label %if.then, label %if.end27, !dbg !10515

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %base_max.addr, align 8, !dbg !10516, !tbaa !2995
  %4 = load i64, i64* %3, align 8, !dbg !10519, !tbaa !3848, !ctir !55
  %cmp2 = icmp eq i64 %4, 0, !dbg !10520
  br i1 %cmp2, label %if.then3, label %if.end26, !dbg !10521

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %name_max, metadata !10522, metadata !DIExpression()), !dbg !10524
  %5 = load i32, i32* %dir_fd.addr, align 4, !dbg !10525, !tbaa !2982
  %cmp4 = icmp slt i32 %5, 0, !dbg !10527
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !10528

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !10529, metadata !DIExpression()), !dbg !10531
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10532
  %6 = load i8*, i8** %base, align 8, !dbg !10533, !tbaa !2995
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %6, i64 2, i1 false), !dbg !10532
  %7 = load i8*, i8** %base, align 8, !dbg !10534, !tbaa !2995
  %call6 = call i8* @strcpy(i8* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.194, i64 0, i64 0)) #10, !dbg !10535
  %call7 = call i32* @__errno_location() #15, !dbg !10536
  store i32 0, i32* %call7, align 4, !dbg !10537, !tbaa !2982, !ctir !7
  %8 = load i8*, i8** %file.addr, align 8, !dbg !10538, !tbaa !2995
  %call8 = call i64 @pathconf(i8* %8, i32 3) #10, !dbg !10539
  store i64 %call8, i64* %name_max, align 8, !dbg !10540, !tbaa !3848
  %call9 = call i32* @__errno_location() #15, !dbg !10541
  %9 = load i32, i32* %call9, align 4, !dbg !10541, !tbaa !2982, !ctir !7
  %tobool = icmp ne i32 %9, 0, !dbg !10542
  %lnot = xor i1 %tobool, true, !dbg !10542
  %lnot.ext = zext i1 %lnot to i32, !dbg !10542
  %conv = sext i32 %lnot.ext to i64, !dbg !10542
  %10 = load i64, i64* %name_max, align 8, !dbg !10543, !tbaa !3848
  %sub = sub nsw i64 %10, %conv, !dbg !10543
  store i64 %sub, i64* %name_max, align 8, !dbg !10543, !tbaa !3848
  %11 = load i8*, i8** %base, align 8, !dbg !10544, !tbaa !2995
  %arraydecay10 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10545
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %arraydecay10, i64 2, i1 false), !dbg !10545
  br label %if.end, !dbg !10546

if.else:                                          ; preds = %if.then3
  %call11 = call i32* @__errno_location() #15, !dbg !10547
  store i32 0, i32* %call11, align 4, !dbg !10549, !tbaa !2982, !ctir !7
  %12 = load i32, i32* %dir_fd.addr, align 4, !dbg !10550, !tbaa !2982
  %call12 = call i64 @fpathconf(i32 %12, i32 3) #10, !dbg !10551
  store i64 %call12, i64* %name_max, align 8, !dbg !10552, !tbaa !3848
  %call13 = call i32* @__errno_location() #15, !dbg !10553
  %13 = load i32, i32* %call13, align 4, !dbg !10553, !tbaa !2982, !ctir !7
  %tobool14 = icmp ne i32 %13, 0, !dbg !10554
  %lnot15 = xor i1 %tobool14, true, !dbg !10554
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !10554
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !10554
  %14 = load i64, i64* %name_max, align 8, !dbg !10555, !tbaa !3848
  %sub18 = sub nsw i64 %14, %conv17, !dbg !10555
  store i64 %sub18, i64* %name_max, align 8, !dbg !10555, !tbaa !3848
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %15 = load i64, i64* %name_max, align 8, !dbg !10556, !tbaa !3848
  %cmp19 = icmp sle i64 0, %15, !dbg !10557
  br i1 %cmp19, label %land.lhs.true, label %cond.false, !dbg !10558

land.lhs.true:                                    ; preds = %if.end
  %16 = load i64, i64* %name_max, align 8, !dbg !10559, !tbaa !3848
  %cmp21 = icmp ule i64 %16, -1, !dbg !10560
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !10561

cond.true:                                        ; preds = %land.lhs.true
  %17 = load i64, i64* %name_max, align 8, !dbg !10562, !tbaa !3848
  br label %cond.end, !dbg !10561

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %18 = load i64, i64* %name_max, align 8, !dbg !10563, !tbaa !3848
  %cmp23 = icmp slt i64 %18, -1, !dbg !10564
  %19 = zext i1 %cmp23 to i64, !dbg !10563
  %cond = select i1 %cmp23, i64 14, i64 -1, !dbg !10563
  br label %cond.end, !dbg !10561

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i64 [ %17, %cond.true ], [ %cond, %cond.false ], !dbg !10561
  %20 = load i64*, i64** %base_max.addr, align 8, !dbg !10565, !tbaa !2995
  store i64 %cond25, i64* %20, align 8, !dbg !10566, !tbaa !3848, !ctir !55
  br label %if.end26, !dbg !10567

if.end26:                                         ; preds = %cond.end, %if.then
  %21 = load i64*, i64** %base_max.addr, align 8, !dbg !10568, !tbaa !2995
  %22 = load i64, i64* %21, align 8, !dbg !10569, !tbaa !3848, !ctir !55
  store i64 %22, i64* %baselen_max, align 8, !dbg !10570, !tbaa !3848
  br label %if.end27, !dbg !10571

if.end27:                                         ; preds = %if.end26, %entry
  %23 = load i64, i64* %baselen_max, align 8, !dbg !10572, !tbaa !3848
  %24 = load i64, i64* %baselen, align 8, !dbg !10574, !tbaa !3848
  %cmp28 = icmp ult i64 %23, %24, !dbg !10575
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !10576

if.then30:                                        ; preds = %if.end27
  %25 = load i8*, i8** %file.addr, align 8, !dbg !10577, !tbaa !2995
  %26 = load i64, i64* %filelen.addr, align 8, !dbg !10579, !tbaa !3848
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !10580
  %27 = load i8*, i8** %base, align 8, !dbg !10581, !tbaa !2995
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !10582
  %sub.ptr.rhs.cast = ptrtoint i8* %27 to i64, !dbg !10582
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10582
  store i64 %sub.ptr.sub, i64* %baselen, align 8, !dbg !10583, !tbaa !3848
  %28 = load i64, i64* %baselen_max, align 8, !dbg !10584, !tbaa !3848
  %29 = load i64, i64* %baselen, align 8, !dbg !10586, !tbaa !3848
  %cmp31 = icmp ule i64 %28, %29, !dbg !10587
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !10588

if.then33:                                        ; preds = %if.then30
  %30 = load i64, i64* %baselen_max, align 8, !dbg !10589, !tbaa !3848
  %sub34 = sub i64 %30, 1, !dbg !10590
  store i64 %sub34, i64* %baselen, align 8, !dbg !10591, !tbaa !3848
  br label %if.end35, !dbg !10592

if.end35:                                         ; preds = %if.then33, %if.then30
  %31 = load i8, i8* %e.addr, align 1, !dbg !10593, !tbaa !3657
  %32 = load i8*, i8** %base, align 8, !dbg !10594, !tbaa !2995
  %33 = load i64, i64* %baselen, align 8, !dbg !10595, !tbaa !3848
  %arrayidx = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !10594, !ctir !9
  store i8 %31, i8* %arrayidx, align 1, !dbg !10596, !tbaa !3657
  %34 = load i8*, i8** %base, align 8, !dbg !10597, !tbaa !2995
  %35 = load i64, i64* %baselen, align 8, !dbg !10598, !tbaa !3848
  %add = add i64 %35, 1, !dbg !10599
  %arrayidx36 = getelementptr inbounds i8, i8* %34, i64 %add, !dbg !10597, !ctir !9
  store i8 0, i8* %arrayidx36, align 1, !dbg !10600, !tbaa !3657
  br label %if.end37, !dbg !10601

if.end37:                                         ; preds = %if.end35, %if.end27
  ret void, !dbg !10602
}

; Function Attrs: nounwind
declare dso_local i64 @pathconf(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i64 @fpathconf(i32, i32) #2

; Function Attrs: nounwind
declare dso_local void @rewinddir(%struct.__dirstream*) #2

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backup_file_rename(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !10603 !ctir !634 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10605, metadata !DIExpression()), !dbg !10606
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10607, metadata !DIExpression()), !dbg !10608
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !10609, metadata !DIExpression()), !dbg !10610
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !10611, !tbaa !2982
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10612, !tbaa !2995
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !10613, !tbaa !3657
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext true), !dbg !10614
  ret i8* %call, !dbg !10615
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @find_backup_file_name(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !10616 !ctir !634 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %result = alloca i8*, align 8, !ctir !9
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10617, metadata !DIExpression()), !dbg !10618
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10619, metadata !DIExpression()), !dbg !10620
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !10621, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.declare(metadata i8** %result, metadata !10623, metadata !DIExpression()), !dbg !10624
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !10625, !tbaa !2982
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10626, !tbaa !2995
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !10627, !tbaa !3657
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext false), !dbg !10628
  store i8* %call, i8** %result, align 8, !dbg !10624, !tbaa !2995
  %3 = load i8*, i8** %result, align 8, !dbg !10629, !tbaa !2995
  %tobool = icmp ne i8* %3, null, !dbg !10629
  br i1 %tobool, label %if.end, label %if.then, !dbg !10631

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !10632
  unreachable, !dbg !10632

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %result, align 8, !dbg !10633, !tbaa !2995
  ret i8* %4, !dbg !10634
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_version(i8* %context, i8* %version) #4 !dbg !10635 !ctir !636 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10636, metadata !DIExpression()), !dbg !10637
  store i8* %version, i8** %version.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !10638, metadata !DIExpression()), !dbg !10639
  %0 = load i8*, i8** %version.addr, align 8, !dbg !10640, !tbaa !2995
  %cmp = icmp eq i8* %0, null, !dbg !10642
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10643

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !10644, !tbaa !2995
  %2 = load i8, i8* %1, align 1, !dbg !10645, !tbaa !3657, !ctir !116
  %conv = sext i8 %2 to i32, !dbg !10645
  %cmp1 = icmp eq i32 %conv, 0, !dbg !10646
  br i1 %cmp1, label %if.then, label %if.else, !dbg !10647

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !10648
  br label %return, !dbg !10648

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %context.addr, align 8, !dbg !10649, !tbaa !2995
  %4 = load i8*, i8** %version.addr, align 8, !dbg !10649, !tbaa !2995
  %5 = load void ()*, void ()** @argmatch_die, align 8, !dbg !10649, !tbaa !2995
  %call = call i64 @__xargmatch_internal(i8* %3, i8* %4, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @backup_args, i64 0, i64 0), i8* bitcast ([8 x i32]* @backup_types to i8*), i64 4, void ()* %5), !dbg !10649
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @backup_types, i64 0, i64 %call, !dbg !10649, !ctir !638
  %6 = load i32, i32* %arrayidx, align 4, !dbg !10649, !tbaa !3657
  store i32 %6, i32* %retval, align 4, !dbg !10650
  br label %return, !dbg !10650

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !10651
  ret i32 %7, !dbg !10651
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xget_version(i8* %context, i8* %version) #4 !dbg !10652 !ctir !636 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10653, metadata !DIExpression()), !dbg !10654
  store i8* %version, i8** %version.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !10655, metadata !DIExpression()), !dbg !10656
  %0 = load i8*, i8** %version.addr, align 8, !dbg !10657, !tbaa !2995
  %tobool = icmp ne i8* %0, null, !dbg !10657
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10659

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !10660, !tbaa !2995
  %2 = load i8, i8* %1, align 1, !dbg !10661, !tbaa !3657, !ctir !116
  %conv = sext i8 %2 to i32, !dbg !10661
  %tobool1 = icmp ne i32 %conv, 0, !dbg !10661
  br i1 %tobool1, label %if.then, label %if.else, !dbg !10662

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %context.addr, align 8, !dbg !10663, !tbaa !2995
  %4 = load i8*, i8** %version.addr, align 8, !dbg !10664, !tbaa !2995
  %call = call i32 @get_version(i8* %3, i8* %4), !dbg !10665
  store i32 %call, i32* %retval, align 4, !dbg !10666
  br label %return, !dbg !10666

if.else:                                          ; preds = %land.lhs.true, %entry
  %call2 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.208, i64 0, i64 0)) #10, !dbg !10667
  %call3 = call i32 @get_version(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.209, i64 0, i64 0), i8* %call2), !dbg !10668
  store i32 %call3, i32* %retval, align 4, !dbg !10669
  br label %return, !dbg !10669

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10670
  ret i32 %5, !dbg !10670
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local i64 @buffer_lcm(i64 %a, i64 %b, i64 %lcm_max) #11 !dbg !10671 !ctir !1600 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %lcm_max.addr = alloca i64, align 8
  %size = alloca i64, align 8, !ctir !55
  %lcm = alloca i64, align 8, !ctir !55
  %m = alloca i64, align 8, !ctir !55
  %n = alloca i64, align 8, !ctir !55
  %q = alloca i64, align 8, !ctir !55
  %r = alloca i64, align 8, !ctir !55
  store i64 %a, i64* %a.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !10673, metadata !DIExpression()), !dbg !10674
  store i64 %b, i64* %b.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !10675, metadata !DIExpression()), !dbg !10676
  store i64 %lcm_max, i64* %lcm_max.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %lcm_max.addr, metadata !10677, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.declare(metadata i64* %size, metadata !10679, metadata !DIExpression()), !dbg !10680
  %0 = load i64, i64* %a.addr, align 8, !dbg !10681, !tbaa !3848
  %tobool = icmp ne i64 %0, 0, !dbg !10681
  br i1 %tobool, label %if.else, label %if.then, !dbg !10683

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %b.addr, align 8, !dbg !10684, !tbaa !3848
  %tobool1 = icmp ne i64 %1, 0, !dbg !10684
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !10684

cond.true:                                        ; preds = %if.then
  %2 = load i64, i64* %b.addr, align 8, !dbg !10685, !tbaa !3848
  br label %cond.end, !dbg !10684

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !10684

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 8192, %cond.false ], !dbg !10684
  store i64 %cond, i64* %size, align 8, !dbg !10686, !tbaa !3848
  br label %if.end9, !dbg !10687

if.else:                                          ; preds = %entry
  %3 = load i64, i64* %b.addr, align 8, !dbg !10688, !tbaa !3848
  %tobool2 = icmp ne i64 %3, 0, !dbg !10688
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !10691

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %lcm, metadata !10692, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.declare(metadata i64* %m, metadata !10695, metadata !DIExpression()), !dbg !10696
  call void @llvm.dbg.declare(metadata i64* %n, metadata !10697, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.declare(metadata i64* %q, metadata !10699, metadata !DIExpression()), !dbg !10700
  call void @llvm.dbg.declare(metadata i64* %r, metadata !10701, metadata !DIExpression()), !dbg !10702
  %4 = load i64, i64* %a.addr, align 8, !dbg !10703, !tbaa !3848
  store i64 %4, i64* %m, align 8, !dbg !10705, !tbaa !3848
  %5 = load i64, i64* %b.addr, align 8, !dbg !10706, !tbaa !3848
  store i64 %5, i64* %n, align 8, !dbg !10707, !tbaa !3848
  br label %for.cond, !dbg !10708

for.cond:                                         ; preds = %for.inc, %if.then3
  %6 = load i64, i64* %m, align 8, !dbg !10709, !tbaa !3848
  %7 = load i64, i64* %n, align 8, !dbg !10711, !tbaa !3848
  %rem = urem i64 %6, %7, !dbg !10712
  store i64 %rem, i64* %r, align 8, !dbg !10713, !tbaa !3848
  %cmp = icmp ne i64 %rem, 0, !dbg !10714
  br i1 %cmp, label %for.body, label %for.end, !dbg !10715

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !10716

for.inc:                                          ; preds = %for.body
  %8 = load i64, i64* %n, align 8, !dbg !10717, !tbaa !3848
  store i64 %8, i64* %m, align 8, !dbg !10718, !tbaa !3848
  %9 = load i64, i64* %r, align 8, !dbg !10719, !tbaa !3848
  store i64 %9, i64* %n, align 8, !dbg !10720, !tbaa !3848
  br label %for.cond, !dbg !10721, !llvm.loop !10722

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %a.addr, align 8, !dbg !10724, !tbaa !3848
  %11 = load i64, i64* %n, align 8, !dbg !10725, !tbaa !3848
  %div = udiv i64 %10, %11, !dbg !10726
  store i64 %div, i64* %q, align 8, !dbg !10727, !tbaa !3848
  %12 = load i64, i64* %q, align 8, !dbg !10728, !tbaa !3848
  %13 = load i64, i64* %b.addr, align 8, !dbg !10729, !tbaa !3848
  %mul = mul i64 %12, %13, !dbg !10730
  store i64 %mul, i64* %lcm, align 8, !dbg !10731, !tbaa !3848
  %14 = load i64, i64* %lcm, align 8, !dbg !10732, !tbaa !3848
  %15 = load i64, i64* %lcm_max.addr, align 8, !dbg !10734, !tbaa !3848
  %cmp4 = icmp ule i64 %14, %15, !dbg !10735
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !10736

land.lhs.true:                                    ; preds = %for.end
  %16 = load i64, i64* %lcm, align 8, !dbg !10737, !tbaa !3848
  %17 = load i64, i64* %b.addr, align 8, !dbg !10738, !tbaa !3848
  %div5 = udiv i64 %16, %17, !dbg !10739
  %18 = load i64, i64* %q, align 8, !dbg !10740, !tbaa !3848
  %cmp6 = icmp eq i64 %div5, %18, !dbg !10741
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !10742

if.then7:                                         ; preds = %land.lhs.true
  %19 = load i64, i64* %lcm, align 8, !dbg !10743, !tbaa !3848
  store i64 %19, i64* %retval, align 8, !dbg !10744
  br label %return, !dbg !10744

if.end:                                           ; preds = %land.lhs.true, %for.end
  br label %if.end8, !dbg !10745

if.end8:                                          ; preds = %if.end, %if.else
  %20 = load i64, i64* %a.addr, align 8, !dbg !10746, !tbaa !3848
  store i64 %20, i64* %size, align 8, !dbg !10747, !tbaa !3848
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %cond.end
  %21 = load i64, i64* %size, align 8, !dbg !10748, !tbaa !3848
  %22 = load i64, i64* %lcm_max.addr, align 8, !dbg !10749, !tbaa !3848
  %cmp10 = icmp ule i64 %21, %22, !dbg !10750
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !10748

cond.true11:                                      ; preds = %if.end9
  %23 = load i64, i64* %size, align 8, !dbg !10751, !tbaa !3848
  br label %cond.end13, !dbg !10748

cond.false12:                                     ; preds = %if.end9
  %24 = load i64, i64* %lcm_max.addr, align 8, !dbg !10752, !tbaa !3848
  br label %cond.end13, !dbg !10748

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i64 [ %23, %cond.true11 ], [ %24, %cond.false12 ], !dbg !10748
  store i64 %cond14, i64* %retval, align 8, !dbg !10753
  br label %return, !dbg !10753

return:                                           ; preds = %cond.end13, %if.then7
  %25 = load i64, i64* %retval, align 8, !dbg !10754
  ret i64 %25, !dbg !10754
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin_set_file_name(i8* %file) #4 !dbg !10755 !ctir !136 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10756, metadata !DIExpression()), !dbg !10757
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10758, !tbaa !2995
  store i8* %0, i8** @file_name, align 8, !dbg !10759, !tbaa !2995
  ret void, !dbg !10760
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin() #4 !dbg !10761 !ctir !134 {
entry:
  %fail = alloca i8, align 1, !ctir !120
  %close_error = alloca i8*, align 8, !ctir !115
  call void @llvm.dbg.declare(metadata i8* %fail, metadata !10762, metadata !DIExpression()), !dbg !10763
  store i8 0, i8* %fail, align 1, !dbg !10763, !tbaa !3106
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10764, !tbaa !2995
  %call = call i64 @freadahead(%struct._IO_FILE* %0) #14, !dbg !10766
  %cmp = icmp ugt i64 %call, 0, !dbg !10767
  br i1 %cmp, label %if.then, label %if.end6, !dbg !10768

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10769, !tbaa !2995
  %call1 = call i32 @rpl_fseeko(%struct._IO_FILE* %1, i64 0, i32 1), !dbg !10772
  %cmp2 = icmp eq i32 %call1, 0, !dbg !10773
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !10774

land.lhs.true:                                    ; preds = %if.then
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10775, !tbaa !2995
  %call3 = call i32 @rpl_fflush(%struct._IO_FILE* %2), !dbg !10776
  %cmp4 = icmp ne i32 %call3, 0, !dbg !10777
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !10778

if.then5:                                         ; preds = %land.lhs.true
  store i8 1, i8* %fail, align 1, !dbg !10779, !tbaa !3106
  br label %if.end, !dbg !10780

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end6, !dbg !10781

if.end6:                                          ; preds = %if.end, %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10782, !tbaa !2995
  %call7 = call i32 @close_stream(%struct._IO_FILE* %3), !dbg !10784
  %cmp8 = icmp ne i32 %call7, 0, !dbg !10785
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10786

if.then9:                                         ; preds = %if.end6
  store i8 1, i8* %fail, align 1, !dbg !10787, !tbaa !3106
  br label %if.end10, !dbg !10788

if.end10:                                         ; preds = %if.then9, %if.end6
  %4 = load i8, i8* %fail, align 1, !dbg !10789, !tbaa !3106
  %tobool = trunc i8 %4 to i1, !dbg !10789
  br i1 %tobool, label %if.then11, label %if.end19, !dbg !10791

if.then11:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %close_error, metadata !10792, metadata !DIExpression()), !dbg !10794
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.214, i64 0, i64 0)) #10, !dbg !10795
  store i8* %call12, i8** %close_error, align 8, !dbg !10794, !tbaa !2995
  %5 = load i8*, i8** @file_name, align 8, !dbg !10796, !tbaa !2995
  %tobool13 = icmp ne i8* %5, null, !dbg !10796
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !10798

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #15, !dbg !10799
  %6 = load i32, i32* %call15, align 4, !dbg !10799, !tbaa !2982, !ctir !7
  %7 = load i8*, i8** @file_name, align 8, !dbg !10800, !tbaa !2995
  %call16 = call i8* @quotearg_colon(i8* %7), !dbg !10801
  %8 = load i8*, i8** %close_error, align 8, !dbg !10802, !tbaa !2995
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.215, i64 0, i64 0), i8* %call16, i8* %8), !dbg !10803
  br label %if.end18, !dbg !10803

if.else:                                          ; preds = %if.then11
  %call17 = call i32* @__errno_location() #15, !dbg !10804
  %9 = load i32, i32* %call17, align 4, !dbg !10804, !tbaa !2982, !ctir !7
  %10 = load i8*, i8** %close_error, align 8, !dbg !10805, !tbaa !2995
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.216, i64 0, i64 0), i8* %10), !dbg !10806
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then14
  br label %if.end19, !dbg !10807

if.end19:                                         ; preds = %if.end18, %if.end10
  call void @close_stdout(), !dbg !10808
  %11 = load i8, i8* %fail, align 1, !dbg !10809, !tbaa !3106
  %tobool20 = trunc i8 %11 to i1, !dbg !10809
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !10811

if.then21:                                        ; preds = %if.end19
  %12 = load volatile i32, i32* @exit_failure, align 4, !dbg !10812, !tbaa !2982
  call void @_exit(i32 %12) #16, !dbg !10813
  unreachable, !dbg !10813

if.end22:                                         ; preds = %if.end19
  ret void, !dbg !10814
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #4 !dbg !10815 !ctir !136 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10816, metadata !DIExpression()), !dbg !10817
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10818, !tbaa !2995
  store i8* %0, i8** @file_name.217, align 8, !dbg !10819, !tbaa !2995
  ret void, !dbg !10820
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #4 !dbg !10821 !ctir !698 {
entry:
  %ignore.addr = alloca i8, align 1
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !10822, metadata !DIExpression()), !dbg !10823
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !10824, !tbaa !3106
  %tobool = trunc i8 %0 to i1, !dbg !10824
  %frombool1 = zext i1 %tobool to i8, !dbg !10825
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !10825, !tbaa !3106
  ret void, !dbg !10826
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #4 !dbg !10827 !ctir !134 {
entry:
  %write_error = alloca i8*, align 8, !ctir !115
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10828, !tbaa !2995
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !10830
  %cmp = icmp ne i32 %call, 0, !dbg !10831
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !10832

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !10833, !tbaa !3106
  %tobool = trunc i8 %1 to i1, !dbg !10833
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !10834

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #15, !dbg !10835
  %2 = load i32, i32* %call2, align 4, !dbg !10835, !tbaa !2982, !ctir !7
  %cmp3 = icmp eq i32 %2, 32, !dbg !10836
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !10837

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !10838, metadata !DIExpression()), !dbg !10840
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.220, i64 0, i64 0)) #10, !dbg !10841
  store i8* %call4, i8** %write_error, align 8, !dbg !10840, !tbaa !2995
  %3 = load i8*, i8** @file_name.217, align 8, !dbg !10842, !tbaa !2995
  %tobool5 = icmp ne i8* %3, null, !dbg !10842
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !10844

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #15, !dbg !10845
  %4 = load i32, i32* %call7, align 4, !dbg !10845, !tbaa !2982, !ctir !7
  %5 = load i8*, i8** @file_name.217, align 8, !dbg !10846, !tbaa !2995
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !10847
  %6 = load i8*, i8** %write_error, align 8, !dbg !10848, !tbaa !2995
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.221, i64 0, i64 0), i8* %call8, i8* %6), !dbg !10849
  br label %if.end, !dbg !10849

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #15, !dbg !10850
  %7 = load i32, i32* %call9, align 4, !dbg !10850, !tbaa !2982, !ctir !7
  %8 = load i8*, i8** %write_error, align 8, !dbg !10851, !tbaa !2995
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.222, i64 0, i64 0), i8* %8), !dbg !10852
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !10853, !tbaa !2982
  call void @_exit(i32 %9) #16, !dbg !10854
  unreachable, !dbg !10854

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10855, !tbaa !2995
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !10857
  %cmp12 = icmp ne i32 %call11, 0, !dbg !10858
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10859

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !10860, !tbaa !2982
  call void @_exit(i32 %11) #16, !dbg !10861
  unreachable, !dbg !10861

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !10862
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @dir_name(i8* %file) #4 !dbg !10863 !ctir !988 {
entry:
  %file.addr = alloca i8*, align 8
  %result = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10865, metadata !DIExpression()), !dbg !10866
  call void @llvm.dbg.declare(metadata i8** %result, metadata !10867, metadata !DIExpression()), !dbg !10868
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10869, !tbaa !2995
  %call = call i8* @mdir_name(i8* %0), !dbg !10870
  store i8* %call, i8** %result, align 8, !dbg !10868, !tbaa !2995
  %1 = load i8*, i8** %result, align 8, !dbg !10871, !tbaa !2995
  %tobool = icmp ne i8* %1, null, !dbg !10871
  br i1 %tobool, label %if.end, label %if.then, !dbg !10873

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !10874
  unreachable, !dbg !10874

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %result, align 8, !dbg !10875, !tbaa !2995
  ret i8* %2, !dbg !10876
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @dir_len(i8* %file) #9 !dbg !10877 !ctir !1608 {
entry:
  %file.addr = alloca i8*, align 8
  %prefix_length = alloca i64, align 8, !ctir !55
  %length = alloca i64, align 8, !ctir !55
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10879, metadata !DIExpression()), !dbg !10880
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !10881, metadata !DIExpression()), !dbg !10882
  store i64 0, i64* %prefix_length, align 8, !dbg !10882, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10883, metadata !DIExpression()), !dbg !10884
  %0 = load i64, i64* %prefix_length, align 8, !dbg !10885, !tbaa !3848
  %cmp = icmp ne i64 %0, 0, !dbg !10886
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10885

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10885

cond.false:                                       ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10887, !tbaa !2995
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10887, !ctir !115
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10887, !tbaa !3657
  %conv = sext i8 %2 to i32, !dbg !10887
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10887
  %3 = zext i1 %cmp1 to i64, !dbg !10887
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !10887
  br label %cond.end, !dbg !10885

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !10885
  %conv4 = sext i32 %cond3 to i64, !dbg !10888
  %4 = load i64, i64* %prefix_length, align 8, !dbg !10889, !tbaa !3848
  %add = add i64 %4, %conv4, !dbg !10889
  store i64 %add, i64* %prefix_length, align 8, !dbg !10889, !tbaa !3848
  %5 = load i8*, i8** %file.addr, align 8, !dbg !10890, !tbaa !2995
  %call = call i8* @last_component(i8* %5) #14, !dbg !10892
  %6 = load i8*, i8** %file.addr, align 8, !dbg !10893, !tbaa !2995
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10894
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !10894
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10894
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !10895, !tbaa !3848
  br label %for.cond, !dbg !10896

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i64, i64* %prefix_length, align 8, !dbg !10897, !tbaa !3848
  %8 = load i64, i64* %length, align 8, !dbg !10899, !tbaa !3848
  %cmp5 = icmp ult i64 %7, %8, !dbg !10900
  br i1 %cmp5, label %for.body, label %for.end, !dbg !10901

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %file.addr, align 8, !dbg !10902, !tbaa !2995
  %10 = load i64, i64* %length, align 8, !dbg !10902, !tbaa !3848
  %sub = sub i64 %10, 1, !dbg !10902
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !10902, !ctir !115
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !10902, !tbaa !3657
  %conv8 = sext i8 %11 to i32, !dbg !10902
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10902
  br i1 %cmp9, label %if.end, label %if.then, !dbg !10904

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10905

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10902

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %length, align 8, !dbg !10906, !tbaa !3848
  %dec = add i64 %12, -1, !dbg !10906
  store i64 %dec, i64* %length, align 8, !dbg !10906, !tbaa !3848
  br label %for.cond, !dbg !10907, !llvm.loop !10908

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i64, i64* %length, align 8, !dbg !10910, !tbaa !3848
  ret i64 %13, !dbg !10911
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mdir_name(i8* %file) #4 !dbg !10912 !ctir !988 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %length = alloca i64, align 8, !ctir !55
  %append_dot = alloca i8, align 1, !ctir !120
  %dir = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10913, metadata !DIExpression()), !dbg !10914
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10915, metadata !DIExpression()), !dbg !10916
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10917, !tbaa !2995
  %call = call i64 @dir_len(i8* %0) #14, !dbg !10918
  store i64 %call, i64* %length, align 8, !dbg !10916, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8* %append_dot, metadata !10919, metadata !DIExpression()), !dbg !10920
  %1 = load i64, i64* %length, align 8, !dbg !10921, !tbaa !3848
  %cmp = icmp eq i64 %1, 0, !dbg !10922
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10923

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !10923

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !10920
  store i8 %frombool, i8* %append_dot, align 1, !dbg !10920, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !10924, metadata !DIExpression()), !dbg !10925
  %3 = load i64, i64* %length, align 8, !dbg !10926, !tbaa !3848
  %4 = load i8, i8* %append_dot, align 1, !dbg !10927, !tbaa !3106
  %tobool = trunc i8 %4 to i1, !dbg !10927
  %conv = zext i1 %tobool to i64, !dbg !10927
  %add = add i64 %3, %conv, !dbg !10928
  %add1 = add i64 %add, 1, !dbg !10929
  %call2 = call noalias i8* @malloc(i64 %add1) #10, !dbg !10930
  store i8* %call2, i8** %dir, align 8, !dbg !10925, !tbaa !2995
  %5 = load i8*, i8** %dir, align 8, !dbg !10931, !tbaa !2995
  %tobool3 = icmp ne i8* %5, null, !dbg !10931
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10933

if.then:                                          ; preds = %lor.end
  store i8* null, i8** %retval, align 8, !dbg !10934
  br label %return, !dbg !10934

if.end:                                           ; preds = %lor.end
  %6 = load i8*, i8** %dir, align 8, !dbg !10935, !tbaa !2995
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10936, !tbaa !2995
  %8 = load i64, i64* %length, align 8, !dbg !10937, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !10938
  %9 = load i8, i8* %append_dot, align 1, !dbg !10939, !tbaa !3106
  %tobool4 = trunc i8 %9 to i1, !dbg !10939
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10941

if.then5:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir, align 8, !dbg !10942, !tbaa !2995
  %11 = load i64, i64* %length, align 8, !dbg !10943, !tbaa !3848
  %inc = add i64 %11, 1, !dbg !10943
  store i64 %inc, i64* %length, align 8, !dbg !10943, !tbaa !3848
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !10942, !ctir !9
  store i8 46, i8* %arrayidx, align 1, !dbg !10944, !tbaa !3657
  br label %if.end6, !dbg !10942

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !10945, !tbaa !2995
  %13 = load i64, i64* %length, align 8, !dbg !10946, !tbaa !3848
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !10945, !ctir !9
  store i8 0, i8* %arrayidx7, align 1, !dbg !10947, !tbaa !3657
  %14 = load i8*, i8** %dir, align 8, !dbg !10948, !tbaa !2995
  store i8* %14, i8** %retval, align 8, !dbg !10949
  br label %return, !dbg !10949

return:                                           ; preds = %if.end6, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !10950
  ret i8* %15, !dbg !10950
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @last_component(i8* %name) #9 !dbg !10951 !ctir !988 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !115
  %p = alloca i8*, align 8, !ctir !115
  %saw_slash = alloca i8, align 1, !ctir !120
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10953, metadata !DIExpression()), !dbg !10954
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10955, metadata !DIExpression()), !dbg !10956
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10957, !tbaa !2995
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !10958
  store i8* %add.ptr, i8** %base, align 8, !dbg !10956, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10959, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.declare(metadata i8* %saw_slash, metadata !10961, metadata !DIExpression()), !dbg !10962
  store i8 0, i8* %saw_slash, align 1, !dbg !10962, !tbaa !3106
  br label %while.cond, !dbg !10963

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !10964, !tbaa !2995
  %2 = load i8, i8* %1, align 1, !dbg !10964, !tbaa !3657, !ctir !116
  %conv = sext i8 %2 to i32, !dbg !10964
  %cmp = icmp eq i32 %conv, 47, !dbg !10964
  br i1 %cmp, label %while.body, label %while.end, !dbg !10963

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %base, align 8, !dbg !10965, !tbaa !2995
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !10965
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !10965, !tbaa !2995
  br label %while.cond, !dbg !10963, !llvm.loop !10966

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !10967, !tbaa !2995
  store i8* %4, i8** %p, align 8, !dbg !10969, !tbaa !2995
  br label %for.cond, !dbg !10970

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i8*, i8** %p, align 8, !dbg !10971, !tbaa !2995
  %6 = load i8, i8* %5, align 1, !dbg !10973, !tbaa !3657, !ctir !116
  %tobool = icmp ne i8 %6, 0, !dbg !10974
  br i1 %tobool, label %for.body, label %for.end, !dbg !10974

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %p, align 8, !dbg !10975, !tbaa !2995
  %8 = load i8, i8* %7, align 1, !dbg !10975, !tbaa !3657, !ctir !116
  %conv2 = sext i8 %8 to i32, !dbg !10975
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !10975
  br i1 %cmp3, label %if.then, label %if.else, !dbg !10978

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !10979, !tbaa !3106
  br label %if.end7, !dbg !10980

if.else:                                          ; preds = %for.body
  %9 = load i8, i8* %saw_slash, align 1, !dbg !10981, !tbaa !3106
  %tobool5 = trunc i8 %9 to i1, !dbg !10981
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !10983

if.then6:                                         ; preds = %if.else
  %10 = load i8*, i8** %p, align 8, !dbg !10984, !tbaa !2995
  store i8* %10, i8** %base, align 8, !dbg !10986, !tbaa !2995
  store i8 0, i8* %saw_slash, align 1, !dbg !10987, !tbaa !3106
  br label %if.end, !dbg !10988

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10989

for.inc:                                          ; preds = %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !10990, !tbaa !2995
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !10990
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !10990, !tbaa !2995
  br label %for.cond, !dbg !10991, !llvm.loop !10992

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !10994, !tbaa !2995
  ret i8* %12, !dbg !10995
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @base_len(i8* %name) #9 !dbg !10996 !ctir !1608 {
entry:
  %name.addr = alloca i8*, align 8
  %len = alloca i64, align 8, !ctir !55
  %prefix_len = alloca i64, align 8, !ctir !55
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10997, metadata !DIExpression()), !dbg !10998
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10999, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !11001, metadata !DIExpression()), !dbg !11002
  store i64 0, i64* %prefix_len, align 8, !dbg !11002, !tbaa !3848
  %0 = load i8*, i8** %name.addr, align 8, !dbg !11003, !tbaa !2995
  %call = call i64 @strlen(i8* %0) #14, !dbg !11005
  store i64 %call, i64* %len, align 8, !dbg !11006, !tbaa !3848
  br label %for.cond, !dbg !11007

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %len, align 8, !dbg !11008, !tbaa !3848
  %cmp = icmp ult i64 1, %1, !dbg !11010
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11011

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !11012, !tbaa !2995
  %3 = load i64, i64* %len, align 8, !dbg !11012, !tbaa !3848
  %sub = sub i64 %3, 1, !dbg !11012
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !11012, !ctir !115
  %4 = load i8, i8* %arrayidx, align 1, !dbg !11012, !tbaa !3657
  %conv = sext i8 %4 to i32, !dbg !11012
  %cmp1 = icmp eq i32 %conv, 47, !dbg !11012
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !11013
  br i1 %5, label %for.body, label %for.end, !dbg !11014

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !11015

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %len, align 8, !dbg !11016, !tbaa !3848
  %dec = add i64 %6, -1, !dbg !11016
  store i64 %dec, i64* %len, align 8, !dbg !11016, !tbaa !3848
  br label %for.cond, !dbg !11017, !llvm.loop !11018

for.end:                                          ; preds = %land.end
  %7 = load i64, i64* %len, align 8, !dbg !11020, !tbaa !3848
  ret i64 %7, !dbg !11021
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strip_trailing_slashes(i8* %file) #4 !dbg !11022 !ctir !1616 {
entry:
  %file.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !9
  %base_lim = alloca i8*, align 8, !ctir !9
  %had_slash = alloca i8, align 1, !ctir !120
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !11024, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.declare(metadata i8** %base, metadata !11026, metadata !DIExpression()), !dbg !11027
  %0 = load i8*, i8** %file.addr, align 8, !dbg !11028, !tbaa !2995
  %call = call i8* @last_component(i8* %0) #14, !dbg !11029
  store i8* %call, i8** %base, align 8, !dbg !11027, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %base_lim, metadata !11030, metadata !DIExpression()), !dbg !11031
  call void @llvm.dbg.declare(metadata i8* %had_slash, metadata !11032, metadata !DIExpression()), !dbg !11033
  %1 = load i8*, i8** %base, align 8, !dbg !11034, !tbaa !2995
  %2 = load i8, i8* %1, align 1, !dbg !11036, !tbaa !3657, !ctir !10
  %tobool = icmp ne i8 %2, 0, !dbg !11036
  br i1 %tobool, label %if.end, label %if.then, !dbg !11037

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %file.addr, align 8, !dbg !11038, !tbaa !2995
  store i8* %3, i8** %base, align 8, !dbg !11039, !tbaa !2995
  br label %if.end, !dbg !11040

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8*, i8** %base, align 8, !dbg !11041, !tbaa !2995
  %5 = load i8*, i8** %base, align 8, !dbg !11042, !tbaa !2995
  %call1 = call i64 @base_len(i8* %5) #14, !dbg !11043
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %call1, !dbg !11044
  store i8* %add.ptr, i8** %base_lim, align 8, !dbg !11045, !tbaa !2995
  %6 = load i8*, i8** %base_lim, align 8, !dbg !11046, !tbaa !2995
  %7 = load i8, i8* %6, align 1, !dbg !11047, !tbaa !3657, !ctir !10
  %conv = sext i8 %7 to i32, !dbg !11047
  %cmp = icmp ne i32 %conv, 0, !dbg !11048
  %frombool = zext i1 %cmp to i8, !dbg !11049
  store i8 %frombool, i8* %had_slash, align 1, !dbg !11049, !tbaa !3106
  %8 = load i8*, i8** %base_lim, align 8, !dbg !11050, !tbaa !2995
  store i8 0, i8* %8, align 1, !dbg !11051, !tbaa !3657, !ctir !10
  %9 = load i8, i8* %had_slash, align 1, !dbg !11052, !tbaa !3106
  %tobool3 = trunc i8 %9 to i1, !dbg !11052
  ret i1 %tobool3, !dbg !11053
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fdadvise(i32 %fd, i64 %offset, i64 %len, i32 %advice) #4 !dbg !11054 !ctir !1631 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %advice.addr = alloca i32, align 4
  %__x = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !11056, metadata !DIExpression()), !dbg !11057
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !11058, metadata !DIExpression()), !dbg !11059
  store i64 %len, i64* %len.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !11060, metadata !DIExpression()), !dbg !11061
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !11062, metadata !DIExpression()), !dbg !11063
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !11064, metadata !DIExpression()), !dbg !11066
  %0 = load i32, i32* %fd.addr, align 4, !dbg !11066, !tbaa !2982
  %1 = load i64, i64* %offset.addr, align 8, !dbg !11066, !tbaa !3848
  %2 = load i64, i64* %len.addr, align 8, !dbg !11066, !tbaa !3848
  %3 = load i32, i32* %advice.addr, align 4, !dbg !11066, !tbaa !3657
  %call = call i32 @posix_fadvise(i32 %0, i64 %1, i64 %2, i32 %3) #10, !dbg !11066
  store i32 %call, i32* %__x, align 4, !dbg !11066, !tbaa !2982
  %4 = load i32, i32* %__x, align 4, !dbg !11066, !tbaa !2982
  ret void, !dbg !11067
}

; Function Attrs: nounwind
declare dso_local i32 @posix_fadvise(i32, i64, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fadvise(%struct._IO_FILE* %fp, i32 %advice) #4 !dbg !11068 !ctir !1634 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %advice.addr = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !11069, metadata !DIExpression()), !dbg !11070
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !11071, metadata !DIExpression()), !dbg !11072
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !11073, !tbaa !2995
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !11073
  br i1 %tobool, label %if.then, label %if.end, !dbg !11075

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !11076, !tbaa !2995
  %call = call i32 @fileno(%struct._IO_FILE* %1) #10, !dbg !11077
  %2 = load i32, i32* %advice.addr, align 4, !dbg !11078, !tbaa !3657
  call void @fdadvise(i32 %call, i64 0, i64 0, i32 %2), !dbg !11079
  br label %if.end, !dbg !11079

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11080
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @open_safer(i8* %file, i32 %flags, ...) #4 !dbg !11081 !ctir !1673 {
entry:
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !160
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1675
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !11085, metadata !DIExpression()), !dbg !11086
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11087, metadata !DIExpression()), !dbg !11088
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !11089, metadata !DIExpression()), !dbg !11090
  store i32 0, i32* %mode, align 4, !dbg !11090, !tbaa !2982
  %0 = load i32, i32* %flags.addr, align 4, !dbg !11091, !tbaa !2982
  %and = and i32 %0, 64, !dbg !11093
  %tobool = icmp ne i32 %and, 0, !dbg !11093
  br i1 %tobool, label %if.then, label %if.end, !dbg !11094

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !11095, metadata !DIExpression()), !dbg !11097
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !11098
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !11098
  call void @llvm.va_start(i8* %arraydecay1), !dbg !11098
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !11099
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !11099
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !11099
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !11099
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !11099

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !11099
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !11099
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !11099
  %3 = bitcast i8* %2 to i32*, !dbg !11099
  %4 = add i32 %gp_offset, 8, !dbg !11099
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !11099
  br label %vaarg.end, !dbg !11099

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !11099
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !11099
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !11099
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !11099
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !11099
  br label %vaarg.end, !dbg !11099

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !11099
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !11099
  store i32 %6, i32* %mode, align 4, !dbg !11100, !tbaa !2982
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !11101
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !11101
  call void @llvm.va_end(i8* %arraydecay34), !dbg !11101
  br label %if.end, !dbg !11102

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i8*, i8** %file.addr, align 8, !dbg !11103, !tbaa !2995
  %8 = load i32, i32* %flags.addr, align 4, !dbg !11104, !tbaa !2982
  %9 = load i32, i32* %mode, align 4, !dbg !11105, !tbaa !2982
  %call = call i32 (i8*, i32, ...) @open(i8* %7, i32 %8, i32 %9), !dbg !11106
  %call5 = call i32 @fd_safer(i32 %call), !dbg !11107
  ret i32 %call5, !dbg !11108
}

declare dso_local i32 @open(i8*, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @record_file(%struct.hash_table* %ht, i8* nonnull %file, %struct.stat* nonnull %stats) #4 !dbg !11109 !ctir !1687 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*, align 8, !ctir !1712
  %ent_from_table = alloca %struct.F_triple*, align 8, !ctir !1712
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !11111, metadata !DIExpression()), !dbg !11112
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !11113, metadata !DIExpression()), !dbg !11114
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !11115, metadata !DIExpression()), !dbg !11116
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent, metadata !11117, metadata !DIExpression()), !dbg !11118
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !11119, !tbaa !2995
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !11121
  br i1 %cmp, label %if.then, label %if.end, !dbg !11122

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !11123

if.end:                                           ; preds = %entry
  %call = call noalias i8* @xmalloc(i64 24), !dbg !11124
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !11124
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !11125, !tbaa !2995
  %2 = load i8*, i8** %file.addr, align 8, !dbg !11126, !tbaa !2995
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !11127
  %3 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11128, !tbaa !2995
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %3, i32 0, i32 0, !dbg !11129, !ctir !1713
  store i8* %call1, i8** %name, align 8, !dbg !11130, !tbaa !11131, !ctir !9
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !11133, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !11134, !ctir !1690
  %5 = load i64, i64* %st_ino, align 8, !dbg !11134, !tbaa !3870, !ctir !228
  %6 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11135, !tbaa !2995
  %st_ino2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !11136, !ctir !1713
  store i64 %5, i64* %st_ino2, align 8, !dbg !11137, !tbaa !11138, !ctir !227
  %7 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !11139, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !11140, !ctir !1690
  %8 = load i64, i64* %st_dev, align 8, !dbg !11140, !tbaa !3873, !ctir !231
  %9 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11141, !tbaa !2995
  %st_dev3 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 2, !dbg !11142, !ctir !1713
  store i64 %8, i64* %st_dev3, align 8, !dbg !11143, !tbaa !11144, !ctir !230
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent_from_table, metadata !11145, metadata !DIExpression()), !dbg !11147
  %10 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !11148, !tbaa !2995
  %11 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11149, !tbaa !2995
  %12 = bitcast %struct.F_triple* %11 to i8*, !dbg !11149
  %call4 = call i8* @hash_insert(%struct.hash_table* %10, i8* %12), !dbg !11150
  %13 = bitcast i8* %call4 to %struct.F_triple*, !dbg !11150
  store %struct.F_triple* %13, %struct.F_triple** %ent_from_table, align 8, !dbg !11147, !tbaa !2995
  %14 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !11151, !tbaa !2995
  %cmp5 = icmp eq %struct.F_triple* %14, null, !dbg !11153
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !11154

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #16, !dbg !11155
  unreachable, !dbg !11155

if.end7:                                          ; preds = %if.end
  %15 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !11157, !tbaa !2995
  %16 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11159, !tbaa !2995
  %cmp8 = icmp ne %struct.F_triple* %15, %16, !dbg !11160
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11161

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11162, !tbaa !2995
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !11162
  call void @triple_free(i8* %18), !dbg !11164
  br label %if.end10, !dbg !11165

if.end10:                                         ; preds = %if.then, %if.then9, %if.end7
  ret void, !dbg !11166
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #4 !dbg !11167 !ctir !1719 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %new_ent = alloca %struct.F_triple, align 8, !ctir !1713
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !11168, metadata !DIExpression()), !dbg !11169
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !11170, metadata !DIExpression()), !dbg !11171
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !11172, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.declare(metadata %struct.F_triple* %new_ent, metadata !11174, metadata !DIExpression()), !dbg !11175
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !11176, !tbaa !2995
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !11178
  br i1 %cmp, label %if.then, label %if.end, !dbg !11179

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11180
  br label %return, !dbg !11180

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !11181, !tbaa !2995
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !11182, !ctir !1713
  store i8* %1, i8** %name, align 8, !dbg !11183, !tbaa !11131, !ctir !9
  %2 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !11184, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !11185, !ctir !1690
  %3 = load i64, i64* %st_ino, align 8, !dbg !11185, !tbaa !3870, !ctir !228
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !11186, !ctir !1713
  store i64 %3, i64* %st_ino1, align 8, !dbg !11187, !tbaa !11138, !ctir !227
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !11188, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !11189, !ctir !1690
  %5 = load i64, i64* %st_dev, align 8, !dbg !11189, !tbaa !3873, !ctir !231
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !11190, !ctir !1713
  store i64 %5, i64* %st_dev2, align 8, !dbg !11191, !tbaa !11144, !ctir !230
  %6 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !11192, !tbaa !2995
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !11193
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !11194
  %tobool = icmp ne i8* %call, null, !dbg !11195
  %lnot = xor i1 %tobool, true, !dbg !11195
  %lnot3 = xor i1 %lnot, true, !dbg !11196
  store i1 %lnot3, i1* %retval, align 1, !dbg !11197
  br label %return, !dbg !11197

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !11198
  ret i1 %8, !dbg !11198
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @file_type(%struct.stat* %st) #9 !dbg !11199 !ctir !1726 {
entry:
  %retval = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !11201, metadata !DIExpression()), !dbg !11202
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11203, !tbaa !2995
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !11203, !ctir !1729
  %1 = load i32, i32* %st_mode, align 8, !dbg !11203, !tbaa !3178, !ctir !133
  %and = and i32 %1, 61440, !dbg !11203
  %cmp = icmp eq i32 %and, 32768, !dbg !11203
  br i1 %cmp, label %if.then, label %if.end, !dbg !11205

if.then:                                          ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11206, !tbaa !2995
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 8, !dbg !11207, !ctir !1729
  %3 = load i64, i64* %st_size, align 8, !dbg !11207, !tbaa !4516, !ctir !29
  %cmp1 = icmp eq i64 %3, 0, !dbg !11208
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !11206

cond.true:                                        ; preds = %if.then
  %call = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.245, i64 0, i64 0)) #10, !dbg !11209
  br label %cond.end, !dbg !11206

cond.false:                                       ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.246, i64 0, i64 0)) #10, !dbg !11210
  br label %cond.end, !dbg !11206

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call2, %cond.false ], !dbg !11206
  store i8* %cond, i8** %retval, align 8, !dbg !11211
  br label %return, !dbg !11211

if.end:                                           ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11212, !tbaa !2995
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 3, !dbg !11212, !ctir !1729
  %5 = load i32, i32* %st_mode3, align 8, !dbg !11212, !tbaa !3178, !ctir !133
  %and4 = and i32 %5, 61440, !dbg !11212
  %cmp5 = icmp eq i32 %and4, 16384, !dbg !11212
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !11214

if.then6:                                         ; preds = %if.end
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.247, i64 0, i64 0)) #10, !dbg !11215
  store i8* %call7, i8** %retval, align 8, !dbg !11216
  br label %return, !dbg !11216

if.end8:                                          ; preds = %if.end
  %6 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11217, !tbaa !2995
  %st_mode9 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !11217, !ctir !1729
  %7 = load i32, i32* %st_mode9, align 8, !dbg !11217, !tbaa !3178, !ctir !133
  %and10 = and i32 %7, 61440, !dbg !11217
  %cmp11 = icmp eq i32 %and10, 40960, !dbg !11217
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !11219

if.then12:                                        ; preds = %if.end8
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.248, i64 0, i64 0)) #10, !dbg !11220
  store i8* %call13, i8** %retval, align 8, !dbg !11221
  br label %return, !dbg !11221

if.end14:                                         ; preds = %if.end8
  %8 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11222, !tbaa !2995
  %st_mode15 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !11222, !ctir !1729
  %9 = load i32, i32* %st_mode15, align 8, !dbg !11222, !tbaa !3178, !ctir !133
  %10 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11222, !tbaa !2995
  %st_mode16 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !11222, !ctir !1729
  %11 = load i32, i32* %st_mode16, align 8, !dbg !11222, !tbaa !3178, !ctir !133
  %sub = sub i32 %9, %11, !dbg !11222
  %tobool = icmp ne i32 %sub, 0, !dbg !11222
  br i1 %tobool, label %if.then17, label %if.end19, !dbg !11224

if.then17:                                        ; preds = %if.end14
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.249, i64 0, i64 0)) #10, !dbg !11225
  store i8* %call18, i8** %retval, align 8, !dbg !11226
  br label %return, !dbg !11226

if.end19:                                         ; preds = %if.end14
  %12 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11227, !tbaa !2995
  %st_mode20 = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 3, !dbg !11227, !ctir !1729
  %13 = load i32, i32* %st_mode20, align 8, !dbg !11227, !tbaa !3178, !ctir !133
  %14 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11227, !tbaa !2995
  %st_mode21 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !11227, !ctir !1729
  %15 = load i32, i32* %st_mode21, align 8, !dbg !11227, !tbaa !3178, !ctir !133
  %sub22 = sub i32 %13, %15, !dbg !11227
  %tobool23 = icmp ne i32 %sub22, 0, !dbg !11227
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !11229

if.then24:                                        ; preds = %if.end19
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.250, i64 0, i64 0)) #10, !dbg !11230
  store i8* %call25, i8** %retval, align 8, !dbg !11231
  br label %return, !dbg !11231

if.end26:                                         ; preds = %if.end19
  %16 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11232, !tbaa !2995
  %st_mode27 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !11232, !ctir !1729
  %17 = load i32, i32* %st_mode27, align 8, !dbg !11232, !tbaa !3178, !ctir !133
  %18 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11232, !tbaa !2995
  %st_mode28 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 3, !dbg !11232, !ctir !1729
  %19 = load i32, i32* %st_mode28, align 8, !dbg !11232, !tbaa !3178, !ctir !133
  %sub29 = sub i32 %17, %19, !dbg !11232
  %tobool30 = icmp ne i32 %sub29, 0, !dbg !11232
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !11234

if.then31:                                        ; preds = %if.end26
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.251, i64 0, i64 0)) #10, !dbg !11235
  store i8* %call32, i8** %retval, align 8, !dbg !11236
  br label %return, !dbg !11236

if.end33:                                         ; preds = %if.end26
  %20 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11237, !tbaa !2995
  %st_mode34 = getelementptr inbounds %struct.stat, %struct.stat* %20, i32 0, i32 3, !dbg !11237, !ctir !1729
  %21 = load i32, i32* %st_mode34, align 8, !dbg !11237, !tbaa !3178, !ctir !133
  %and35 = and i32 %21, 61440, !dbg !11237
  %cmp36 = icmp eq i32 %and35, 24576, !dbg !11237
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !11239

if.then37:                                        ; preds = %if.end33
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.252, i64 0, i64 0)) #10, !dbg !11240
  store i8* %call38, i8** %retval, align 8, !dbg !11241
  br label %return, !dbg !11241

if.end39:                                         ; preds = %if.end33
  %22 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11242, !tbaa !2995
  %st_mode40 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 3, !dbg !11242, !ctir !1729
  %23 = load i32, i32* %st_mode40, align 8, !dbg !11242, !tbaa !3178, !ctir !133
  %and41 = and i32 %23, 61440, !dbg !11242
  %cmp42 = icmp eq i32 %and41, 8192, !dbg !11242
  br i1 %cmp42, label %if.then43, label %if.end45, !dbg !11244

if.then43:                                        ; preds = %if.end39
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.253, i64 0, i64 0)) #10, !dbg !11245
  store i8* %call44, i8** %retval, align 8, !dbg !11246
  br label %return, !dbg !11246

if.end45:                                         ; preds = %if.end39
  %24 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11247, !tbaa !2995
  %st_mode46 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 3, !dbg !11247, !ctir !1729
  %25 = load i32, i32* %st_mode46, align 8, !dbg !11247, !tbaa !3178, !ctir !133
  %and47 = and i32 %25, 61440, !dbg !11247
  %cmp48 = icmp eq i32 %and47, 4096, !dbg !11247
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !11249

if.then49:                                        ; preds = %if.end45
  %call50 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.254, i64 0, i64 0)) #10, !dbg !11250
  store i8* %call50, i8** %retval, align 8, !dbg !11251
  br label %return, !dbg !11251

if.end51:                                         ; preds = %if.end45
  %26 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11252, !tbaa !2995
  %st_mode52 = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 3, !dbg !11252, !ctir !1729
  %27 = load i32, i32* %st_mode52, align 8, !dbg !11252, !tbaa !3178, !ctir !133
  %and53 = and i32 %27, 61440, !dbg !11252
  %cmp54 = icmp eq i32 %and53, 49152, !dbg !11252
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !11254

if.then55:                                        ; preds = %if.end51
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10.255, i64 0, i64 0)) #10, !dbg !11255
  store i8* %call56, i8** %retval, align 8, !dbg !11256
  br label %return, !dbg !11256

if.end57:                                         ; preds = %if.end51
  %call58 = call i8* @gettext(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.256, i64 0, i64 0)) #10, !dbg !11257
  store i8* %call58, i8** %retval, align 8, !dbg !11258
  br label %return, !dbg !11258

return:                                           ; preds = %if.end57, %if.then55, %if.then49, %if.then43, %if.then37, %if.then31, %if.then24, %if.then17, %if.then12, %if.then6, %cond.end
  %28 = load i8*, i8** %retval, align 8, !dbg !11259
  ret i8* %28, !dbg !11259
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strmode(i32 %mode, i8* %str) #4 !dbg !11260 !ctir !1754 {
entry:
  %mode.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !11262, metadata !DIExpression()), !dbg !11263
  store i8* %str, i8** %str.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11264, metadata !DIExpression()), !dbg !11265
  %0 = load i32, i32* %mode.addr, align 4, !dbg !11266, !tbaa !2982
  %call = call signext i8 @ftypelet(i32 %0), !dbg !11267
  %1 = load i8*, i8** %str.addr, align 8, !dbg !11268, !tbaa !2995
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !11268, !ctir !9
  store i8 %call, i8* %arrayidx, align 1, !dbg !11269, !tbaa !3657
  %2 = load i32, i32* %mode.addr, align 4, !dbg !11270, !tbaa !2982
  %and = and i32 %2, 256, !dbg !11271
  %tobool = icmp ne i32 %and, 0, !dbg !11270
  %3 = zext i1 %tobool to i64, !dbg !11270
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !11270
  %conv = trunc i32 %cond to i8, !dbg !11270
  %4 = load i8*, i8** %str.addr, align 8, !dbg !11272, !tbaa !2995
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !11272, !ctir !9
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !11273, !tbaa !3657
  %5 = load i32, i32* %mode.addr, align 4, !dbg !11274, !tbaa !2982
  %and2 = and i32 %5, 128, !dbg !11275
  %tobool3 = icmp ne i32 %and2, 0, !dbg !11274
  %6 = zext i1 %tobool3 to i64, !dbg !11274
  %cond4 = select i1 %tobool3, i32 119, i32 45, !dbg !11274
  %conv5 = trunc i32 %cond4 to i8, !dbg !11274
  %7 = load i8*, i8** %str.addr, align 8, !dbg !11276, !tbaa !2995
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !11276, !ctir !9
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !11277, !tbaa !3657
  %8 = load i32, i32* %mode.addr, align 4, !dbg !11278, !tbaa !2982
  %and7 = and i32 %8, 2048, !dbg !11279
  %tobool8 = icmp ne i32 %and7, 0, !dbg !11279
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !11278

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %mode.addr, align 4, !dbg !11280, !tbaa !2982
  %and9 = and i32 %9, 64, !dbg !11281
  %tobool10 = icmp ne i32 %and9, 0, !dbg !11280
  %10 = zext i1 %tobool10 to i64, !dbg !11280
  %cond11 = select i1 %tobool10, i32 115, i32 83, !dbg !11280
  br label %cond.end, !dbg !11278

cond.false:                                       ; preds = %entry
  %11 = load i32, i32* %mode.addr, align 4, !dbg !11282, !tbaa !2982
  %and12 = and i32 %11, 64, !dbg !11283
  %tobool13 = icmp ne i32 %and12, 0, !dbg !11282
  %12 = zext i1 %tobool13 to i64, !dbg !11282
  %cond14 = select i1 %tobool13, i32 120, i32 45, !dbg !11282
  br label %cond.end, !dbg !11278

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond11, %cond.true ], [ %cond14, %cond.false ], !dbg !11278
  %conv16 = trunc i32 %cond15 to i8, !dbg !11284
  %13 = load i8*, i8** %str.addr, align 8, !dbg !11285, !tbaa !2995
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !11285, !ctir !9
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !11286, !tbaa !3657
  %14 = load i32, i32* %mode.addr, align 4, !dbg !11287, !tbaa !2982
  %and18 = and i32 %14, 32, !dbg !11288
  %tobool19 = icmp ne i32 %and18, 0, !dbg !11287
  %15 = zext i1 %tobool19 to i64, !dbg !11287
  %cond20 = select i1 %tobool19, i32 114, i32 45, !dbg !11287
  %conv21 = trunc i32 %cond20 to i8, !dbg !11287
  %16 = load i8*, i8** %str.addr, align 8, !dbg !11289, !tbaa !2995
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !11289, !ctir !9
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !11290, !tbaa !3657
  %17 = load i32, i32* %mode.addr, align 4, !dbg !11291, !tbaa !2982
  %and23 = and i32 %17, 16, !dbg !11292
  %tobool24 = icmp ne i32 %and23, 0, !dbg !11291
  %18 = zext i1 %tobool24 to i64, !dbg !11291
  %cond25 = select i1 %tobool24, i32 119, i32 45, !dbg !11291
  %conv26 = trunc i32 %cond25 to i8, !dbg !11291
  %19 = load i8*, i8** %str.addr, align 8, !dbg !11293, !tbaa !2995
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 5, !dbg !11293, !ctir !9
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !11294, !tbaa !3657
  %20 = load i32, i32* %mode.addr, align 4, !dbg !11295, !tbaa !2982
  %and28 = and i32 %20, 1024, !dbg !11296
  %tobool29 = icmp ne i32 %and28, 0, !dbg !11296
  br i1 %tobool29, label %cond.true30, label %cond.false34, !dbg !11295

cond.true30:                                      ; preds = %cond.end
  %21 = load i32, i32* %mode.addr, align 4, !dbg !11297, !tbaa !2982
  %and31 = and i32 %21, 8, !dbg !11298
  %tobool32 = icmp ne i32 %and31, 0, !dbg !11297
  %22 = zext i1 %tobool32 to i64, !dbg !11297
  %cond33 = select i1 %tobool32, i32 115, i32 83, !dbg !11297
  br label %cond.end38, !dbg !11295

cond.false34:                                     ; preds = %cond.end
  %23 = load i32, i32* %mode.addr, align 4, !dbg !11299, !tbaa !2982
  %and35 = and i32 %23, 8, !dbg !11300
  %tobool36 = icmp ne i32 %and35, 0, !dbg !11299
  %24 = zext i1 %tobool36 to i64, !dbg !11299
  %cond37 = select i1 %tobool36, i32 120, i32 45, !dbg !11299
  br label %cond.end38, !dbg !11295

cond.end38:                                       ; preds = %cond.false34, %cond.true30
  %cond39 = phi i32 [ %cond33, %cond.true30 ], [ %cond37, %cond.false34 ], !dbg !11295
  %conv40 = trunc i32 %cond39 to i8, !dbg !11301
  %25 = load i8*, i8** %str.addr, align 8, !dbg !11302, !tbaa !2995
  %arrayidx41 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !11302, !ctir !9
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !11303, !tbaa !3657
  %26 = load i32, i32* %mode.addr, align 4, !dbg !11304, !tbaa !2982
  %and42 = and i32 %26, 4, !dbg !11305
  %tobool43 = icmp ne i32 %and42, 0, !dbg !11304
  %27 = zext i1 %tobool43 to i64, !dbg !11304
  %cond44 = select i1 %tobool43, i32 114, i32 45, !dbg !11304
  %conv45 = trunc i32 %cond44 to i8, !dbg !11304
  %28 = load i8*, i8** %str.addr, align 8, !dbg !11306, !tbaa !2995
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 7, !dbg !11306, !ctir !9
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !11307, !tbaa !3657
  %29 = load i32, i32* %mode.addr, align 4, !dbg !11308, !tbaa !2982
  %and47 = and i32 %29, 2, !dbg !11309
  %tobool48 = icmp ne i32 %and47, 0, !dbg !11308
  %30 = zext i1 %tobool48 to i64, !dbg !11308
  %cond49 = select i1 %tobool48, i32 119, i32 45, !dbg !11308
  %conv50 = trunc i32 %cond49 to i8, !dbg !11308
  %31 = load i8*, i8** %str.addr, align 8, !dbg !11310, !tbaa !2995
  %arrayidx51 = getelementptr inbounds i8, i8* %31, i64 8, !dbg !11310, !ctir !9
  store i8 %conv50, i8* %arrayidx51, align 1, !dbg !11311, !tbaa !3657
  %32 = load i32, i32* %mode.addr, align 4, !dbg !11312, !tbaa !2982
  %and52 = and i32 %32, 512, !dbg !11313
  %tobool53 = icmp ne i32 %and52, 0, !dbg !11313
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !11312

cond.true54:                                      ; preds = %cond.end38
  %33 = load i32, i32* %mode.addr, align 4, !dbg !11314, !tbaa !2982
  %and55 = and i32 %33, 1, !dbg !11315
  %tobool56 = icmp ne i32 %and55, 0, !dbg !11314
  %34 = zext i1 %tobool56 to i64, !dbg !11314
  %cond57 = select i1 %tobool56, i32 116, i32 84, !dbg !11314
  br label %cond.end62, !dbg !11312

cond.false58:                                     ; preds = %cond.end38
  %35 = load i32, i32* %mode.addr, align 4, !dbg !11316, !tbaa !2982
  %and59 = and i32 %35, 1, !dbg !11317
  %tobool60 = icmp ne i32 %and59, 0, !dbg !11316
  %36 = zext i1 %tobool60 to i64, !dbg !11316
  %cond61 = select i1 %tobool60, i32 120, i32 45, !dbg !11316
  br label %cond.end62, !dbg !11312

cond.end62:                                       ; preds = %cond.false58, %cond.true54
  %cond63 = phi i32 [ %cond57, %cond.true54 ], [ %cond61, %cond.false58 ], !dbg !11312
  %conv64 = trunc i32 %cond63 to i8, !dbg !11318
  %37 = load i8*, i8** %str.addr, align 8, !dbg !11319, !tbaa !2995
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 9, !dbg !11319, !ctir !9
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !11320, !tbaa !3657
  %38 = load i8*, i8** %str.addr, align 8, !dbg !11321, !tbaa !2995
  %arrayidx66 = getelementptr inbounds i8, i8* %38, i64 10, !dbg !11321, !ctir !9
  store i8 32, i8* %arrayidx66, align 1, !dbg !11322, !tbaa !3657
  %39 = load i8*, i8** %str.addr, align 8, !dbg !11323, !tbaa !2995
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 11, !dbg !11323, !ctir !9
  store i8 0, i8* %arrayidx67, align 1, !dbg !11324, !tbaa !3657
  ret void, !dbg !11325
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %bits) #4 !dbg !11326 !ctir !1781 {
entry:
  %retval = alloca i8, align 1
  %bits.addr = alloca i32, align 4
  store i32 %bits, i32* %bits.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !11327, metadata !DIExpression()), !dbg !11328
  %0 = load i32, i32* %bits.addr, align 4, !dbg !11329, !tbaa !2982
  %and = and i32 %0, 61440, !dbg !11329
  %cmp = icmp eq i32 %and, 32768, !dbg !11329
  br i1 %cmp, label %if.then, label %if.end, !dbg !11331

if.then:                                          ; preds = %entry
  store i8 45, i8* %retval, align 1, !dbg !11332
  br label %return, !dbg !11332

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !11333, !tbaa !2982
  %and1 = and i32 %1, 61440, !dbg !11333
  %cmp2 = icmp eq i32 %and1, 16384, !dbg !11333
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11335

if.then3:                                         ; preds = %if.end
  store i8 100, i8* %retval, align 1, !dbg !11336
  br label %return, !dbg !11336

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %bits.addr, align 4, !dbg !11337, !tbaa !2982
  %and5 = and i32 %2, 61440, !dbg !11337
  %cmp6 = icmp eq i32 %and5, 24576, !dbg !11337
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11339

if.then7:                                         ; preds = %if.end4
  store i8 98, i8* %retval, align 1, !dbg !11340
  br label %return, !dbg !11340

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %bits.addr, align 4, !dbg !11341, !tbaa !2982
  %and9 = and i32 %3, 61440, !dbg !11341
  %cmp10 = icmp eq i32 %and9, 8192, !dbg !11341
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11343

if.then11:                                        ; preds = %if.end8
  store i8 99, i8* %retval, align 1, !dbg !11344
  br label %return, !dbg !11344

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %bits.addr, align 4, !dbg !11345, !tbaa !2982
  %and13 = and i32 %4, 61440, !dbg !11345
  %cmp14 = icmp eq i32 %and13, 40960, !dbg !11345
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !11347

if.then15:                                        ; preds = %if.end12
  store i8 108, i8* %retval, align 1, !dbg !11348
  br label %return, !dbg !11348

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %bits.addr, align 4, !dbg !11349, !tbaa !2982
  %and17 = and i32 %5, 61440, !dbg !11349
  %cmp18 = icmp eq i32 %and17, 4096, !dbg !11349
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !11351

if.then19:                                        ; preds = %if.end16
  store i8 112, i8* %retval, align 1, !dbg !11352
  br label %return, !dbg !11352

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %bits.addr, align 4, !dbg !11353, !tbaa !2982
  %and21 = and i32 %6, 61440, !dbg !11353
  %cmp22 = icmp eq i32 %and21, 49152, !dbg !11353
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !11355

if.then23:                                        ; preds = %if.end20
  store i8 115, i8* %retval, align 1, !dbg !11356
  br label %return, !dbg !11356

if.end24:                                         ; preds = %if.end20
  store i8 63, i8* %retval, align 1, !dbg !11357
  br label %return, !dbg !11357

return:                                           ; preds = %if.end24, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !11358
  ret i8 %7, !dbg !11358
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @filemodestring(%struct.stat* %statp, i8* %str) #4 !dbg !11359 !ctir !1756 {
entry:
  %statp.addr = alloca %struct.stat*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.stat* %statp, %struct.stat** %statp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %statp.addr, metadata !11360, metadata !DIExpression()), !dbg !11361
  store i8* %str, i8** %str.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11362, metadata !DIExpression()), !dbg !11363
  %0 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11364, !tbaa !2995
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !11365, !ctir !1759
  %1 = load i32, i32* %st_mode, align 8, !dbg !11365, !tbaa !3178, !ctir !133
  %2 = load i8*, i8** %str.addr, align 8, !dbg !11366, !tbaa !2995
  call void @strmode(i32 %1, i8* %2), !dbg !11367
  %3 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11368, !tbaa !2995
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !11368, !ctir !1759
  %4 = load i32, i32* %st_mode1, align 8, !dbg !11368, !tbaa !3178, !ctir !133
  %5 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11368, !tbaa !2995
  %st_mode2 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3, !dbg !11368, !ctir !1759
  %6 = load i32, i32* %st_mode2, align 8, !dbg !11368, !tbaa !3178, !ctir !133
  %sub = sub i32 %4, %6, !dbg !11368
  %tobool = icmp ne i32 %sub, 0, !dbg !11368
  br i1 %tobool, label %if.then, label %if.else, !dbg !11370

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %str.addr, align 8, !dbg !11371, !tbaa !2995
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !11371, !ctir !9
  store i8 70, i8* %arrayidx, align 1, !dbg !11372, !tbaa !3657
  br label %if.end18, !dbg !11371

if.else:                                          ; preds = %entry
  %8 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11373, !tbaa !2995
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !11373, !ctir !1759
  %9 = load i32, i32* %st_mode3, align 8, !dbg !11373, !tbaa !3178, !ctir !133
  %10 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11373, !tbaa !2995
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !11373, !ctir !1759
  %11 = load i32, i32* %st_mode4, align 8, !dbg !11373, !tbaa !3178, !ctir !133
  %sub5 = sub i32 %9, %11, !dbg !11373
  %tobool6 = icmp ne i32 %sub5, 0, !dbg !11373
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !11376

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !11377, !tbaa !2995
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !11377, !ctir !9
  store i8 81, i8* %arrayidx8, align 1, !dbg !11378, !tbaa !3657
  br label %if.end17, !dbg !11377

if.else9:                                         ; preds = %if.else
  %13 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11379, !tbaa !2995
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 3, !dbg !11379, !ctir !1759
  %14 = load i32, i32* %st_mode10, align 8, !dbg !11379, !tbaa !3178, !ctir !133
  %15 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11379, !tbaa !2995
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !11379, !ctir !1759
  %16 = load i32, i32* %st_mode11, align 8, !dbg !11379, !tbaa !3178, !ctir !133
  %sub12 = sub i32 %14, %16, !dbg !11379
  %tobool13 = icmp ne i32 %sub12, 0, !dbg !11379
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !11381

if.then14:                                        ; preds = %if.else9
  %17 = load i8*, i8** %str.addr, align 8, !dbg !11382, !tbaa !2995
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !11382, !ctir !9
  store i8 83, i8* %arrayidx15, align 1, !dbg !11383, !tbaa !3657
  br label %if.end, !dbg !11382

if.else16:                                        ; preds = %if.else9
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !11384
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @file_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !11385 !ctir !1786 {
entry:
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %p = alloca i8*, align 8, !ctir !9
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !11387, metadata !DIExpression()), !dbg !11388
  store i8* %base, i8** %base.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !11389, metadata !DIExpression()), !dbg !11390
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !11391, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11393, metadata !DIExpression()), !dbg !11394
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !11395, !tbaa !2995
  %1 = load i8*, i8** %base.addr, align 8, !dbg !11396, !tbaa !2995
  %2 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11397, !tbaa !2995
  %call = call i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2), !dbg !11398
  store i8* %call, i8** %p, align 8, !dbg !11394, !tbaa !2995
  %3 = load i8*, i8** %p, align 8, !dbg !11399, !tbaa !2995
  %cmp = icmp eq i8* %3, null, !dbg !11401
  br i1 %cmp, label %if.then, label %if.end, !dbg !11402

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !11403
  unreachable, !dbg !11403

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !11404, !tbaa !2995
  ret i8* %4, !dbg !11405
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mfile_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !11406 !ctir !1786 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %dirbase = alloca i8*, align 8, !ctir !115
  %dirbaselen = alloca i64, align 8, !ctir !55
  %dirlen = alloca i64, align 8, !ctir !55
  %baselen = alloca i64, align 8, !ctir !55
  %sep = alloca i8, align 1, !ctir !10
  %p_concat = alloca i8*, align 8, !ctir !9
  %p = alloca i8*, align 8, !ctir !9
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !11408, metadata !DIExpression()), !dbg !11409
  store i8* %base, i8** %base.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !11410, metadata !DIExpression()), !dbg !11411
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !11412, metadata !DIExpression()), !dbg !11413
  call void @llvm.dbg.declare(metadata i8** %dirbase, metadata !11414, metadata !DIExpression()), !dbg !11415
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !11416, !tbaa !2995
  %call = call i8* @last_component(i8* %0) #14, !dbg !11417
  store i8* %call, i8** %dirbase, align 8, !dbg !11415, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %dirbaselen, metadata !11418, metadata !DIExpression()), !dbg !11419
  %1 = load i8*, i8** %dirbase, align 8, !dbg !11420, !tbaa !2995
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !11421
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !11419, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %dirlen, metadata !11422, metadata !DIExpression()), !dbg !11423
  %2 = load i8*, i8** %dirbase, align 8, !dbg !11424, !tbaa !2995
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !11425, !tbaa !2995
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !11426
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !11426
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11426
  %4 = load i64, i64* %dirbaselen, align 8, !dbg !11427, !tbaa !3848
  %add = add i64 %sub.ptr.sub, %4, !dbg !11428
  store i64 %add, i64* %dirlen, align 8, !dbg !11423, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !11429, metadata !DIExpression()), !dbg !11430
  %5 = load i8*, i8** %base.addr, align 8, !dbg !11431, !tbaa !2995
  %call2 = call i64 @strlen(i8* %5) #14, !dbg !11432
  store i64 %call2, i64* %baselen, align 8, !dbg !11430, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !11433, metadata !DIExpression()), !dbg !11434
  store i8 0, i8* %sep, align 1, !dbg !11434, !tbaa !3657
  %6 = load i64, i64* %dirbaselen, align 8, !dbg !11435, !tbaa !3848
  %tobool = icmp ne i64 %6, 0, !dbg !11435
  br i1 %tobool, label %if.then, label %if.else, !dbg !11437

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !11438, !tbaa !2995
  %8 = load i64, i64* %dirlen, align 8, !dbg !11438, !tbaa !3848
  %sub = sub i64 %8, 1, !dbg !11438
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !11438, !ctir !115
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11438, !tbaa !3657
  %conv = sext i8 %9 to i32, !dbg !11438
  %cmp = icmp eq i32 %conv, 47, !dbg !11438
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !11441

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %base.addr, align 8, !dbg !11442, !tbaa !2995
  %11 = load i8, i8* %10, align 1, !dbg !11442, !tbaa !3657, !ctir !116
  %conv4 = sext i8 %11 to i32, !dbg !11442
  %cmp5 = icmp eq i32 %conv4, 47, !dbg !11442
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !11443

if.then7:                                         ; preds = %land.lhs.true
  store i8 47, i8* %sep, align 1, !dbg !11444, !tbaa !3657
  br label %if.end, !dbg !11445

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %if.end13, !dbg !11446

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base.addr, align 8, !dbg !11447, !tbaa !2995
  %13 = load i8, i8* %12, align 1, !dbg !11447, !tbaa !3657, !ctir !116
  %conv8 = sext i8 %13 to i32, !dbg !11447
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !11447
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !11449

if.then11:                                        ; preds = %if.else
  store i8 46, i8* %sep, align 1, !dbg !11450, !tbaa !3657
  br label %if.end12, !dbg !11452

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i8** %p_concat, metadata !11453, metadata !DIExpression()), !dbg !11454
  %14 = load i64, i64* %dirlen, align 8, !dbg !11455, !tbaa !3848
  %15 = load i8, i8* %sep, align 1, !dbg !11456, !tbaa !3657
  %conv14 = sext i8 %15 to i32, !dbg !11456
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !11457
  %conv16 = zext i1 %cmp15 to i32, !dbg !11457
  %conv17 = sext i32 %conv16 to i64, !dbg !11458
  %add18 = add i64 %14, %conv17, !dbg !11459
  %16 = load i64, i64* %baselen, align 8, !dbg !11460, !tbaa !3848
  %add19 = add i64 %add18, %16, !dbg !11461
  %add20 = add i64 %add19, 1, !dbg !11462
  %call21 = call noalias i8* @malloc(i64 %add20) #10, !dbg !11463
  store i8* %call21, i8** %p_concat, align 8, !dbg !11454, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11464, metadata !DIExpression()), !dbg !11465
  %17 = load i8*, i8** %p_concat, align 8, !dbg !11466, !tbaa !2995
  %cmp22 = icmp eq i8* %17, null, !dbg !11468
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !11469

if.then24:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !11470
  br label %return, !dbg !11470

if.end25:                                         ; preds = %if.end13
  %18 = load i8*, i8** %p_concat, align 8, !dbg !11471, !tbaa !2995
  %19 = load i8*, i8** %dir.addr, align 8, !dbg !11472, !tbaa !2995
  %20 = load i64, i64* %dirlen, align 8, !dbg !11473, !tbaa !3848
  %call26 = call i8* @mempcpy(i8* %18, i8* %19, i64 %20) #10, !dbg !11474
  store i8* %call26, i8** %p, align 8, !dbg !11475, !tbaa !2995
  %21 = load i8, i8* %sep, align 1, !dbg !11476, !tbaa !3657
  %22 = load i8*, i8** %p, align 8, !dbg !11477, !tbaa !2995
  store i8 %21, i8* %22, align 1, !dbg !11478, !tbaa !3657, !ctir !10
  %23 = load i8, i8* %sep, align 1, !dbg !11479, !tbaa !3657
  %conv27 = sext i8 %23 to i32, !dbg !11479
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !11480
  %conv29 = zext i1 %cmp28 to i32, !dbg !11480
  %24 = load i8*, i8** %p, align 8, !dbg !11481, !tbaa !2995
  %idx.ext = sext i32 %conv29 to i64, !dbg !11481
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !11481
  store i8* %add.ptr, i8** %p, align 8, !dbg !11481, !tbaa !2995
  %25 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11482, !tbaa !2995
  %tobool30 = icmp ne i8** %25, null, !dbg !11482
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !11484

if.then31:                                        ; preds = %if.end25
  %26 = load i8*, i8** %p, align 8, !dbg !11485, !tbaa !2995
  %27 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11486, !tbaa !2995
  store i8* %26, i8** %27, align 8, !dbg !11487, !tbaa !2995, !ctir !9
  br label %if.end32, !dbg !11488

if.end32:                                         ; preds = %if.then31, %if.end25
  %28 = load i8*, i8** %p, align 8, !dbg !11489, !tbaa !2995
  %29 = load i8*, i8** %base.addr, align 8, !dbg !11490, !tbaa !2995
  %30 = load i64, i64* %baselen, align 8, !dbg !11491, !tbaa !3848
  %call33 = call i8* @mempcpy(i8* %28, i8* %29, i64 %30) #10, !dbg !11492
  store i8* %call33, i8** %p, align 8, !dbg !11493, !tbaa !2995
  %31 = load i8*, i8** %p, align 8, !dbg !11494, !tbaa !2995
  store i8 0, i8* %31, align 1, !dbg !11495, !tbaa !3657, !ctir !10
  %32 = load i8*, i8** %p_concat, align 8, !dbg !11496, !tbaa !2995
  store i8* %32, i8** %retval, align 8, !dbg !11497
  br label %return, !dbg !11497

return:                                           ; preds = %if.end32, %if.then24
  %33 = load i8*, i8** %retval, align 8, !dbg !11498
  ret i8* %33, !dbg !11498
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !11499 !ctir !1794 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %total = alloca i64, align 8, !ctir !55
  %ptr = alloca i8*, align 8, !ctir !115
  %n_rw = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !11501, metadata !DIExpression()), !dbg !11502
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11503, metadata !DIExpression()), !dbg !11504
  store i64 %count, i64* %count.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11505, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.declare(metadata i64* %total, metadata !11507, metadata !DIExpression()), !dbg !11508
  store i64 0, i64* %total, align 8, !dbg !11508, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !11509, metadata !DIExpression()), !dbg !11510
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11511, !tbaa !2995
  store i8* %0, i8** %ptr, align 8, !dbg !11510, !tbaa !2995
  br label %while.cond, !dbg !11512

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !11513, !tbaa !3848
  %cmp = icmp ugt i64 %1, 0, !dbg !11514
  br i1 %cmp, label %while.body, label %while.end, !dbg !11512

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !11515, metadata !DIExpression()), !dbg !11517
  %2 = load i32, i32* %fd.addr, align 4, !dbg !11518, !tbaa !2982
  %3 = load i8*, i8** %ptr, align 8, !dbg !11519, !tbaa !2995
  %4 = load i64, i64* %count.addr, align 8, !dbg !11520, !tbaa !3848
  %call = call i64 @safe_write(i32 %2, i8* %3, i64 %4), !dbg !11521
  store i64 %call, i64* %n_rw, align 8, !dbg !11517, !tbaa !3848
  %5 = load i64, i64* %n_rw, align 8, !dbg !11522, !tbaa !3848
  %cmp1 = icmp eq i64 %5, -1, !dbg !11524
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11525

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !11526

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !11527, !tbaa !3848
  %cmp2 = icmp eq i64 %6, 0, !dbg !11529
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !11530

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #15, !dbg !11531
  store i32 28, i32* %call4, align 4, !dbg !11533, !tbaa !2982, !ctir !7
  br label %while.end, !dbg !11534

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !11535, !tbaa !3848
  %8 = load i64, i64* %total, align 8, !dbg !11536, !tbaa !3848
  %add = add i64 %8, %7, !dbg !11536
  store i64 %add, i64* %total, align 8, !dbg !11536, !tbaa !3848
  %9 = load i64, i64* %n_rw, align 8, !dbg !11537, !tbaa !3848
  %10 = load i8*, i8** %ptr, align 8, !dbg !11538, !tbaa !2995
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !11538
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !11538, !tbaa !2995
  %11 = load i64, i64* %n_rw, align 8, !dbg !11539, !tbaa !3848
  %12 = load i64, i64* %count.addr, align 8, !dbg !11540, !tbaa !3848
  %sub = sub i64 %12, %11, !dbg !11540
  store i64 %sub, i64* %count.addr, align 8, !dbg !11540, !tbaa !3848
  br label %while.cond, !dbg !11512, !llvm.loop !11541

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !11543, !tbaa !3848
  ret i64 %13, !dbg !11544
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #9 !dbg !11545 !ctir !750 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11546, metadata !DIExpression()), !dbg !11547
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11548, !tbaa !2995
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !11549, !ctir !753
  %1 = load i64, i64* %n_buckets, align 8, !dbg !11549, !tbaa !11550, !ctir !55
  ret i64 %1, !dbg !11552
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #9 !dbg !11553 !ctir !750 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11554, metadata !DIExpression()), !dbg !11555
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11556, !tbaa !2995
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !11557, !ctir !753
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !11557, !tbaa !11558, !ctir !55
  ret i64 %1, !dbg !11559
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #9 !dbg !11560 !ctir !750 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11561, metadata !DIExpression()), !dbg !11562
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11563, !tbaa !2995
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11564, !ctir !753
  %1 = load i64, i64* %n_entries, align 8, !dbg !11564, !tbaa !11565, !ctir !55
  ret i64 %1, !dbg !11566
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #9 !dbg !11567 !ctir !750 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !765
  %max_bucket_length = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !765
  %bucket_length = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11568, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11570, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11572, metadata !DIExpression()), !dbg !11573
  store i64 0, i64* %max_bucket_length, align 8, !dbg !11573, !tbaa !3848
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11574, !tbaa !2995
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11576, !ctir !753
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11576, !tbaa !11577, !ctir !759
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11578, !tbaa !2995
  br label %for.cond, !dbg !11579

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11580, !tbaa !2995
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11582, !tbaa !2995
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11583, !ctir !753
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11583, !tbaa !11584, !ctir !765
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11585
  br i1 %cmp, label %for.body, label %for.end, !dbg !11586

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11587, !tbaa !2995
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11590, !ctir !766
  %6 = load i8*, i8** %data, align 8, !dbg !11590, !tbaa !11591, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11587
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11593

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11594, metadata !DIExpression()), !dbg !11596
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11597, !tbaa !2995
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11596, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !11598, metadata !DIExpression()), !dbg !11599
  store i64 1, i64* %bucket_length, align 8, !dbg !11599, !tbaa !3848
  br label %while.cond, !dbg !11600

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11601, !tbaa !2995
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11602, !ctir !766
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11602, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !11604, !tbaa !2995
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11605, !tbaa !2995
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !11600
  br i1 %tobool2, label %while.body, label %while.end, !dbg !11600

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !11606, !tbaa !3848
  %inc = add i64 %11, 1, !dbg !11606
  store i64 %inc, i64* %bucket_length, align 8, !dbg !11606, !tbaa !3848
  br label %while.cond, !dbg !11600, !llvm.loop !11607

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !11608, !tbaa !3848
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11610, !tbaa !3848
  %cmp3 = icmp ugt i64 %12, %13, !dbg !11611
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11612

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !11613, !tbaa !3848
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !11614, !tbaa !3848
  br label %if.end, !dbg !11615

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !11616

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11617

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11618, !tbaa !2995
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !11618
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11618, !tbaa !2995
  br label %for.cond, !dbg !11619, !llvm.loop !11620

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !11622, !tbaa !3848
  ret i64 %16, !dbg !11623
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #9 !dbg !11624 !ctir !792 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !765
  %n_buckets_used = alloca i64, align 8, !ctir !55
  %n_entries = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !765
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11625, metadata !DIExpression()), !dbg !11626
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11627, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11629, metadata !DIExpression()), !dbg !11630
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11630, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11631, metadata !DIExpression()), !dbg !11632
  store i64 0, i64* %n_entries, align 8, !dbg !11632, !tbaa !3848
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11633, !tbaa !2995
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11635, !ctir !753
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11635, !tbaa !11577, !ctir !759
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11636, !tbaa !2995
  br label %for.cond, !dbg !11637

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11638, !tbaa !2995
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11640, !tbaa !2995
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11641, !ctir !753
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11641, !tbaa !11584, !ctir !765
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11642
  br i1 %cmp, label %for.body, label %for.end, !dbg !11643

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11644, !tbaa !2995
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11647, !ctir !766
  %6 = load i8*, i8** %data, align 8, !dbg !11647, !tbaa !11591, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11644
  br i1 %tobool, label %if.then, label %if.end, !dbg !11648

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11649, metadata !DIExpression()), !dbg !11651
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11652, !tbaa !2995
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11651, !tbaa !2995
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !11653, !tbaa !3848
  %inc = add i64 %8, 1, !dbg !11653
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11653, !tbaa !3848
  %9 = load i64, i64* %n_entries, align 8, !dbg !11654, !tbaa !3848
  %inc2 = add i64 %9, 1, !dbg !11654
  store i64 %inc2, i64* %n_entries, align 8, !dbg !11654, !tbaa !3848
  br label %while.cond, !dbg !11655

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11656, !tbaa !2995
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !11657, !ctir !766
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11657, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11658, !tbaa !2995
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11659, !tbaa !2995
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !11655
  br i1 %tobool3, label %while.body, label %while.end, !dbg !11655

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !11660, !tbaa !3848
  %inc4 = add i64 %13, 1, !dbg !11660
  store i64 %inc4, i64* %n_entries, align 8, !dbg !11660, !tbaa !3848
  br label %while.cond, !dbg !11655, !llvm.loop !11661

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11662

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !11663

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11664, !tbaa !2995
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11664
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11664, !tbaa !2995
  br label %for.cond, !dbg !11665, !llvm.loop !11666

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !11668, !tbaa !3848
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11670, !tbaa !2995
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !11671, !ctir !753
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !11671, !tbaa !11558, !ctir !55
  %cmp6 = icmp eq i64 %15, %17, !dbg !11672
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !11673

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !11674, !tbaa !3848
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11675, !tbaa !2995
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11676, !ctir !753
  %20 = load i64, i64* %n_entries7, align 8, !dbg !11676, !tbaa !11565, !ctir !55
  %cmp8 = icmp eq i64 %18, %20, !dbg !11677
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11678

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !11679
  br label %return, !dbg !11679

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !11680
  br label %return, !dbg !11680

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !11681
  ret i1 %21, !dbg !11681
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #4 !dbg !11682 !ctir !794 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %n_entries = alloca i64, align 8, !ctir !55
  %n_buckets = alloca i64, align 8, !ctir !55
  %n_buckets_used = alloca i64, align 8, !ctir !55
  %max_bucket_length = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11683, metadata !DIExpression()), !dbg !11684
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11685, metadata !DIExpression()), !dbg !11686
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11687, metadata !DIExpression()), !dbg !11688
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11689, !tbaa !2995
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #14, !dbg !11690
  store i64 %call, i64* %n_entries, align 8, !dbg !11688, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !11691, metadata !DIExpression()), !dbg !11692
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11693, !tbaa !2995
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #14, !dbg !11694
  store i64 %call1, i64* %n_buckets, align 8, !dbg !11692, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11695, metadata !DIExpression()), !dbg !11696
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11697, !tbaa !2995
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #14, !dbg !11698
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !11696, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11699, metadata !DIExpression()), !dbg !11700
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11701, !tbaa !2995
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #14, !dbg !11702
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !11700, !tbaa !3848
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11703, !tbaa !2995
  %5 = load i64, i64* %n_entries, align 8, !dbg !11704, !tbaa !3848
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.265, i64 0, i64 0), i64 %5), !dbg !11705
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11706, !tbaa !2995
  %7 = load i64, i64* %n_buckets, align 8, !dbg !11707, !tbaa !3848
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.266, i64 0, i64 0), i64 %7), !dbg !11708
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11709, !tbaa !2995
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !11710, !tbaa !3848
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !11711, !tbaa !3848
  %conv = uitofp i64 %10 to double, !dbg !11711
  %mul = fmul double 1.000000e+02, %conv, !dbg !11712
  %11 = load i64, i64* %n_buckets, align 8, !dbg !11713, !tbaa !3848
  %conv6 = uitofp i64 %11 to double, !dbg !11713
  %div = fdiv double %mul, %conv6, !dbg !11714
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.267, i64 0, i64 0), i64 %9, double %div), !dbg !11715
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11716, !tbaa !2995
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11717, !tbaa !3848
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.268, i64 0, i64 0), i64 %13), !dbg !11718
  ret void, !dbg !11719
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11720 !ctir !830 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !765
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !765
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11721, metadata !DIExpression()), !dbg !11722
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11723, metadata !DIExpression()), !dbg !11724
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11725, metadata !DIExpression()), !dbg !11726
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11727, !tbaa !2995
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11728, !tbaa !2995
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11729
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11726, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11730, metadata !DIExpression()), !dbg !11731
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11732, !tbaa !2995
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !11734, !ctir !766
  %3 = load i8*, i8** %data, align 8, !dbg !11734, !tbaa !11591, !ctir !53
  %cmp = icmp eq i8* %3, null, !dbg !11735
  br i1 %cmp, label %if.then, label %if.end, !dbg !11736

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11737
  br label %return, !dbg !11737

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11738, !tbaa !2995
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !11740, !tbaa !2995
  br label %for.cond, !dbg !11741

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11742, !tbaa !2995
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !11744
  br i1 %tobool, label %for.body, label %for.end, !dbg !11744

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !11745, !tbaa !2995
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11747, !tbaa !2995
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11748, !ctir !766
  %8 = load i8*, i8** %data2, align 8, !dbg !11748, !tbaa !11591, !ctir !53
  %cmp3 = icmp eq i8* %6, %8, !dbg !11749
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !11750

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11751, !tbaa !2995
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !11752, !ctir !753
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11752, !tbaa !11753, !ctir !786
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !11754, !tbaa !2995
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11755, !tbaa !2995
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11756, !ctir !766
  %13 = load i8*, i8** %data4, align 8, !dbg !11756, !tbaa !11591, !ctir !53
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !11751
  br i1 %call5, label %if.then6, label %if.end8, !dbg !11757

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11758, !tbaa !2995
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11759, !ctir !766
  %15 = load i8*, i8** %data7, align 8, !dbg !11759, !tbaa !11591, !ctir !53
  store i8* %15, i8** %retval, align 8, !dbg !11760
  br label %return, !dbg !11760

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11761

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11762, !tbaa !2995
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11763, !ctir !766
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11763, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11764, !tbaa !2995
  br label %for.cond, !dbg !11765, !llvm.loop !11766

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !11768
  br label %return, !dbg !11768

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !11769
  ret i8* %18, !dbg !11769
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #4 !dbg !11770 !ctir !860 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %key.addr = alloca i8*, align 8
  %n = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11771, metadata !DIExpression()), !dbg !11772
  store i8* %key, i8** %key.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11773, metadata !DIExpression()), !dbg !11774
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11775, metadata !DIExpression()), !dbg !11776
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11777, !tbaa !2995
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !11778, !ctir !753
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11778, !tbaa !11779, !ctir !783
  %2 = load i8*, i8** %key.addr, align 8, !dbg !11780, !tbaa !2995
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11781, !tbaa !2995
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !11782, !ctir !753
  %4 = load i64, i64* %n_buckets, align 8, !dbg !11782, !tbaa !11550, !ctir !55
  %call = call i64 %1(i8* %2, i64 %4), !dbg !11777
  store i64 %call, i64* %n, align 8, !dbg !11776, !tbaa !3848
  %5 = load i64, i64* %n, align 8, !dbg !11783, !tbaa !3848
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11785, !tbaa !2995
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !11786, !ctir !753
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !11786, !tbaa !11550, !ctir !55
  %cmp = icmp ult i64 %5, %7, !dbg !11787
  br i1 %cmp, label %if.end, label %if.then, !dbg !11788

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !11789
  unreachable, !dbg !11789

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11790, !tbaa !2995
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !11791, !ctir !753
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11791, !tbaa !11577, !ctir !759
  %10 = load i64, i64* %n, align 8, !dbg !11792, !tbaa !3848
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !11793
  ret %struct.hash_entry* %add.ptr, !dbg !11794
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #9 !dbg !11795 !ctir !832 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !765
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11796, metadata !DIExpression()), !dbg !11797
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11798, metadata !DIExpression()), !dbg !11799
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11800, !tbaa !2995
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11802, !ctir !753
  %1 = load i64, i64* %n_entries, align 8, !dbg !11802, !tbaa !11565, !ctir !55
  %cmp = icmp eq i64 %1, 0, !dbg !11803
  br i1 %cmp, label %if.then, label %if.end, !dbg !11804

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11805
  br label %return, !dbg !11805

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11806, !tbaa !2995
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !11808, !ctir !753
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11808, !tbaa !11577, !ctir !759
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !11809, !tbaa !2995
  br label %for.cond, !dbg !11810

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11811, !tbaa !2995
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11814, !tbaa !2995
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !11815, !ctir !753
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11815, !tbaa !11584, !ctir !765
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !11816
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !11817

if.then3:                                         ; preds = %for.cond
  call void @abort() #13, !dbg !11818
  unreachable, !dbg !11818

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11819, !tbaa !2995
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11821, !ctir !766
  %8 = load i8*, i8** %data, align 8, !dbg !11821, !tbaa !11591, !ctir !53
  %tobool = icmp ne i8* %8, null, !dbg !11819
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !11822

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11823, !tbaa !2995
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11824, !ctir !766
  %10 = load i8*, i8** %data5, align 8, !dbg !11824, !tbaa !11591, !ctir !53
  store i8* %10, i8** %retval, align 8, !dbg !11825
  br label %return, !dbg !11825

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !11826

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11827, !tbaa !2995
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !11827
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11827, !tbaa !2995
  br label %for.cond, !dbg !11828, !llvm.loop !11829

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !11832
  ret i8* %12, !dbg !11832
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11833 !ctir !830 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !765
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !765
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11834, metadata !DIExpression()), !dbg !11835
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11836, metadata !DIExpression()), !dbg !11837
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11838, metadata !DIExpression()), !dbg !11839
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11840, !tbaa !2995
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11841, !tbaa !2995
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11842
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11839, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11843, metadata !DIExpression()), !dbg !11844
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11845, !tbaa !2995
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !11846, !tbaa !2995
  br label %do.body, !dbg !11847

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11848, !tbaa !2995
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !11851, !ctir !766
  %4 = load i8*, i8** %data, align 8, !dbg !11851, !tbaa !11591, !ctir !53
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !11852, !tbaa !2995
  %cmp = icmp eq i8* %4, %5, !dbg !11853
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11854

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11855, !tbaa !2995
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !11856, !ctir !766
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11856, !tbaa !11603, !ctir !759
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !11855
  br i1 %tobool, label %if.then, label %if.end, !dbg !11857

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11858, !tbaa !2995
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11859, !ctir !766
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11859, !tbaa !11603, !ctir !759
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11860, !ctir !760
  %10 = load i8*, i8** %data3, align 8, !dbg !11860, !tbaa !11591, !ctir !53
  store i8* %10, i8** %retval, align 8, !dbg !11861
  br label %return, !dbg !11861

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11862, !tbaa !2995
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !11863, !ctir !766
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !11863, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !11864, !tbaa !2995
  br label %do.cond, !dbg !11865

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11866, !tbaa !2995
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !11867
  br i1 %cmp5, label %do.body, label %do.end, !dbg !11865, !llvm.loop !11868

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !11870

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11871, !tbaa !2995
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11871
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11871, !tbaa !2995
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11872, !tbaa !2995
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !11873, !ctir !753
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11873, !tbaa !11584, !ctir !765
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !11874
  br i1 %cmp6, label %while.body, label %while.end, !dbg !11870

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11875, !tbaa !2995
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !11877, !ctir !766
  %18 = load i8*, i8** %data7, align 8, !dbg !11877, !tbaa !11591, !ctir !53
  %tobool8 = icmp ne i8* %18, null, !dbg !11875
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11878

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11879, !tbaa !2995
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !11880, !ctir !766
  %20 = load i8*, i8** %data10, align 8, !dbg !11880, !tbaa !11591, !ctir !53
  store i8* %20, i8** %retval, align 8, !dbg !11881
  br label %return, !dbg !11881

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !11870, !llvm.loop !11882

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !11884
  br label %return, !dbg !11884

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !11885
  ret i8* %21, !dbg !11885
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #4 !dbg !11886 !ctir !834 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %counter = alloca i64, align 8, !ctir !55
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !765
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !765
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11887, metadata !DIExpression()), !dbg !11888
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !11889, metadata !DIExpression()), !dbg !11890
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !11891, metadata !DIExpression()), !dbg !11892
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11893, metadata !DIExpression()), !dbg !11894
  store i64 0, i64* %counter, align 8, !dbg !11894, !tbaa !3848
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11895, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11897, metadata !DIExpression()), !dbg !11898
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11899, !tbaa !2995
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11901, !ctir !753
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11901, !tbaa !11577, !ctir !759
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11902, !tbaa !2995
  br label %for.cond, !dbg !11903

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11904, !tbaa !2995
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11906, !tbaa !2995
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11907, !ctir !753
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11907, !tbaa !11584, !ctir !765
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11908
  br i1 %cmp, label %for.body, label %for.end10, !dbg !11909

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11910, !tbaa !2995
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11913, !ctir !766
  %6 = load i8*, i8** %data, align 8, !dbg !11913, !tbaa !11591, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11910
  br i1 %tobool, label %if.then, label %if.end8, !dbg !11914

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11915, !tbaa !2995
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11918, !tbaa !2995
  br label %for.cond2, !dbg !11919

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11920, !tbaa !2995
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11922
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11922

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !11923, !tbaa !3848
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !11926, !tbaa !3848
  %cmp5 = icmp uge i64 %9, %10, !dbg !11927
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !11928

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !11929, !tbaa !3848
  store i64 %11, i64* %retval, align 8, !dbg !11930
  br label %return, !dbg !11930

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11931, !tbaa !2995
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11932, !ctir !766
  %13 = load i8*, i8** %data7, align 8, !dbg !11932, !tbaa !11591, !ctir !53
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !11933, !tbaa !2995
  %15 = load i64, i64* %counter, align 8, !dbg !11934, !tbaa !3848
  %inc = add i64 %15, 1, !dbg !11934
  store i64 %inc, i64* %counter, align 8, !dbg !11934, !tbaa !3848
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !11933, !ctir !836
  store i8* %13, i8** %arrayidx, align 8, !dbg !11935, !tbaa !2995
  br label %for.inc, !dbg !11936

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11937, !tbaa !2995
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11938, !ctir !766
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11938, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11939, !tbaa !2995
  br label %for.cond2, !dbg !11940, !llvm.loop !11941

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !11943

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !11944

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11945, !tbaa !2995
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !11945
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11945, !tbaa !2995
  br label %for.cond, !dbg !11946, !llvm.loop !11947

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !11949, !tbaa !3848
  store i64 %19, i64* %retval, align 8, !dbg !11950
  br label %return, !dbg !11950

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !11951
  ret i64 %20, !dbg !11951
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #4 !dbg !11952 !ctir !837 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %processor.addr = alloca i1 (i8*, i8*)*, align 8
  %processor_data.addr = alloca i8*, align 8
  %counter = alloca i64, align 8, !ctir !55
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !765
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !765
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11953, metadata !DIExpression()), !dbg !11954
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !11955, metadata !DIExpression()), !dbg !11956
  store i8* %processor_data, i8** %processor_data.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !11957, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11959, metadata !DIExpression()), !dbg !11960
  store i64 0, i64* %counter, align 8, !dbg !11960, !tbaa !3848
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11961, metadata !DIExpression()), !dbg !11962
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11963, metadata !DIExpression()), !dbg !11964
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11965, !tbaa !2995
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11967, !ctir !753
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11967, !tbaa !11577, !ctir !759
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11968, !tbaa !2995
  br label %for.cond, !dbg !11969

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11970, !tbaa !2995
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11972, !tbaa !2995
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11973, !ctir !753
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11973, !tbaa !11584, !ctir !765
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11974
  br i1 %cmp, label %for.body, label %for.end9, !dbg !11975

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11976, !tbaa !2995
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11979, !ctir !766
  %6 = load i8*, i8** %data, align 8, !dbg !11979, !tbaa !11591, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11976
  br i1 %tobool, label %if.then, label %if.end7, !dbg !11980

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11981, !tbaa !2995
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11984, !tbaa !2995
  br label %for.cond2, !dbg !11985

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11986, !tbaa !2995
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11988
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11988

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !11989, !tbaa !2995
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11992, !tbaa !2995
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !11993, !ctir !766
  %11 = load i8*, i8** %data5, align 8, !dbg !11993, !tbaa !11591, !ctir !53
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !11994, !tbaa !2995
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !11989
  br i1 %call, label %if.end, label %if.then6, !dbg !11995

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !11996, !tbaa !3848
  store i64 %13, i64* %retval, align 8, !dbg !11997
  br label %return, !dbg !11997

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !11998, !tbaa !3848
  %inc = add i64 %14, 1, !dbg !11998
  store i64 %inc, i64* %counter, align 8, !dbg !11998, !tbaa !3848
  br label %for.inc, !dbg !11999

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12000, !tbaa !2995
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !12001, !ctir !766
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12001, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !12002, !tbaa !2995
  br label %for.cond2, !dbg !12003, !llvm.loop !12004

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !12006

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !12007

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12008, !tbaa !2995
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !12008
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12008, !tbaa !2995
  br label %for.cond, !dbg !12009, !llvm.loop !12010

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !12012, !tbaa !3848
  store i64 %18, i64* %retval, align 8, !dbg !12013
  br label %return, !dbg !12013

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !12014
  ret i64 %19, !dbg !12014
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #9 !dbg !12015 !ctir !843 {
entry:
  %string.addr = alloca i8*, align 8
  %n_buckets.addr = alloca i64, align 8
  %value = alloca i64, align 8, !ctir !55
  %ch = alloca i8, align 1, !ctir !466
  store i8* %string, i8** %string.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !12016, metadata !DIExpression()), !dbg !12017
  store i64 %n_buckets, i64* %n_buckets.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !12018, metadata !DIExpression()), !dbg !12019
  call void @llvm.dbg.declare(metadata i64* %value, metadata !12020, metadata !DIExpression()), !dbg !12021
  store i64 0, i64* %value, align 8, !dbg !12021, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !12022, metadata !DIExpression()), !dbg !12023
  br label %for.cond, !dbg !12024

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !12025, !tbaa !2995
  %1 = load i8, i8* %0, align 1, !dbg !12028, !tbaa !3657, !ctir !116
  store i8 %1, i8* %ch, align 1, !dbg !12029, !tbaa !3657
  %tobool = icmp ne i8 %1, 0, !dbg !12030
  br i1 %tobool, label %for.body, label %for.end, !dbg !12030

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !12031, !tbaa !3848
  %mul = mul i64 %2, 31, !dbg !12032
  %3 = load i8, i8* %ch, align 1, !dbg !12033, !tbaa !3657
  %conv = zext i8 %3 to i64, !dbg !12033
  %add = add i64 %mul, %conv, !dbg !12034
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !12035, !tbaa !3848
  %rem = urem i64 %add, %4, !dbg !12036
  store i64 %rem, i64* %value, align 8, !dbg !12037, !tbaa !3848
  br label %for.inc, !dbg !12038

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !12039, !tbaa !2995
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !12039
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !12039, !tbaa !2995
  br label %for.cond, !dbg !12040, !llvm.loop !12041

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !12043, !tbaa !3848
  ret i64 %6, !dbg !12044
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #4 !dbg !12045 !ctir !845 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12046, metadata !DIExpression()), !dbg !12047
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12048, !tbaa !2995
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !12049
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !12049, !tbaa.struct !12050
  ret void, !dbg !12053
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #4 !dbg !12054 !ctir !848 {
entry:
  %retval = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %hasher.addr = alloca i64 (i8*, i64)*, align 8
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8
  %data_freer.addr = alloca void (i8*)*, align 8
  %table = alloca %struct.hash_table*, align 8, !ctir !850
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12055, metadata !DIExpression()), !dbg !12056
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12057, metadata !DIExpression()), !dbg !12058
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !12059, metadata !DIExpression()), !dbg !12060
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !12061, metadata !DIExpression()), !dbg !12062
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !12063, metadata !DIExpression()), !dbg !12064
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !12065, metadata !DIExpression()), !dbg !12066
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12067, !tbaa !2995
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !12069
  br i1 %cmp, label %if.then, label %if.end, !dbg !12070

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12071, !tbaa !2995
  br label %if.end, !dbg !12072

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12073, !tbaa !2995
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !12075
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !12076

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12077, !tbaa !2995
  br label %if.end3, !dbg !12078

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #10, !dbg !12079
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !12079
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !12080, !tbaa !2995
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12081, !tbaa !2995
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !12083
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !12084

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12085
  br label %return, !dbg !12085

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12086, !tbaa !2995
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !12086
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !12088

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12089, !tbaa !2995
  br label %if.end8, !dbg !12090

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12091, !tbaa !2995
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12092, !tbaa !2995
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !12093, !ctir !754
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !12094, !tbaa !12095, !ctir !771
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12096, !tbaa !2995
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !12098
  br i1 %call10, label %if.end12, label %if.then11, !dbg !12099

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !12100

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12102, !tbaa !3848
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12103, !tbaa !2995
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #14, !dbg !12104
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12105, !tbaa !2995
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !12106, !ctir !754
  store i64 %call13, i64* %n_buckets, align 8, !dbg !12107, !tbaa !11550, !ctir !55
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12108, !tbaa !2995
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12110, !ctir !754
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !12110, !tbaa !11550, !ctir !55
  %tobool15 = icmp ne i64 %12, 0, !dbg !12108
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !12111

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !12112

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12113, !tbaa !2995
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12114, !ctir !754
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !12114, !tbaa !11550, !ctir !55
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #10, !dbg !12115
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !12115
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12116, !tbaa !2995
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !12117, !ctir !754
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !12118, !tbaa !11577, !ctir !759
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12119, !tbaa !2995
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !12121, !ctir !754
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !12121, !tbaa !11577, !ctir !759
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !12122
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !12123

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !12124

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12125, !tbaa !2995
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !12126, !ctir !754
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !12126, !tbaa !11577, !ctir !759
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12127, !tbaa !2995
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !12128, !ctir !754
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !12128, !tbaa !11550, !ctir !55
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !12129
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12130, !tbaa !2995
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12131, !ctir !754
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12132, !tbaa !11584, !ctir !765
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12133, !tbaa !2995
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !12134, !ctir !754
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12135, !tbaa !11558, !ctir !55
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12136, !tbaa !2995
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !12137, !ctir !754
  store i64 0, i64* %n_entries, align 8, !dbg !12138, !tbaa !11565, !ctir !55
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12139, !tbaa !2995
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12140, !tbaa !2995
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !12141, !ctir !754
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !12142, !tbaa !11779, !ctir !783
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12143, !tbaa !2995
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12144, !tbaa !2995
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !12145, !ctir !754
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !12146, !tbaa !11753, !ctir !786
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !12147, !tbaa !2995
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12148, !tbaa !2995
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12149, !ctir !754
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !12150, !tbaa !12151, !ctir !789
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12152, !tbaa !2995
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12153, !ctir !754
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !12154, !tbaa !12155, !ctir !759
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12156, !tbaa !2995
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !12157
  br label %return, !dbg !12157

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !12158), !dbg !12159
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12160, !tbaa !2995
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !12160
  call void @free(i8* %35) #10, !dbg !12161
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12162
  br label %return, !dbg !12162

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !12163
  ret %struct.hash_table* %36, !dbg !12163
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #4 !dbg !12164 !ctir !547 {
entry:
  %data.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %val = alloca i64, align 8, !ctir !55
  store i8* %data, i8** %data.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12165, metadata !DIExpression()), !dbg !12166
  store i64 %n, i64* %n.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12167, metadata !DIExpression()), !dbg !12168
  call void @llvm.dbg.declare(metadata i64* %val, metadata !12169, metadata !DIExpression()), !dbg !12170
  %0 = load i8*, i8** %data.addr, align 8, !dbg !12171, !tbaa !2995
  %1 = ptrtoint i8* %0 to i64, !dbg !12172
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !12173
  store i64 %call, i64* %val, align 8, !dbg !12170, !tbaa !3848
  %2 = load i64, i64* %val, align 8, !dbg !12174, !tbaa !3848
  %3 = load i64, i64* %n.addr, align 8, !dbg !12175, !tbaa !3848
  %rem = urem i64 %2, %3, !dbg !12176
  ret i64 %rem, !dbg !12177
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #4 !dbg !12178 !ctir !549 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !12179, metadata !DIExpression()), !dbg !12180
  store i8* %b, i8** %b.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !12181, metadata !DIExpression()), !dbg !12182
  %0 = load i8*, i8** %a.addr, align 8, !dbg !12183, !tbaa !2995
  %1 = load i8*, i8** %b.addr, align 8, !dbg !12184, !tbaa !2995
  %cmp = icmp eq i8* %0, %1, !dbg !12185
  ret i1 %cmp, !dbg !12186
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #4 !dbg !12187 !ctir !862 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !771
  %epsilon = alloca float, align 4, !ctir !777
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12188, metadata !DIExpression()), !dbg !12189
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !12190, metadata !DIExpression()), !dbg !12191
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12192, !tbaa !2995
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !12193, !ctir !754
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !12193, !tbaa !12095, !ctir !771
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !12191, !tbaa !2995
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !12194, metadata !DIExpression()), !dbg !12195
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12196, !tbaa !2995
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !12198
  br i1 %cmp, label %if.then, label %if.end, !dbg !12199

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !12200
  br label %return, !dbg !12200

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !12201, !tbaa !12051
  %3 = load float, float* %epsilon, align 4, !dbg !12202, !tbaa !12051
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12204, !tbaa !2995
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !12205, !ctir !772
  %5 = load float, float* %growth_threshold, align 4, !dbg !12205, !tbaa !12206, !ctir !777
  %cmp2 = fcmp olt float %3, %5, !dbg !12208
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !12209

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12210, !tbaa !2995
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !12211, !ctir !772
  %7 = load float, float* %growth_threshold3, align 4, !dbg !12211, !tbaa !12206, !ctir !777
  %8 = load float, float* %epsilon, align 4, !dbg !12212, !tbaa !12051
  %sub = fsub float 1.000000e+00, %8, !dbg !12213
  %cmp4 = fcmp olt float %7, %sub, !dbg !12214
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !12215

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !12216, !tbaa !12051
  %add = fadd float 1.000000e+00, %9, !dbg !12217
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12218, !tbaa !2995
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !12219, !ctir !772
  %11 = load float, float* %growth_factor, align 4, !dbg !12219, !tbaa !12220, !ctir !777
  %cmp6 = fcmp olt float %add, %11, !dbg !12221
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !12222

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12223, !tbaa !2995
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12224, !ctir !772
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12224, !tbaa !12225, !ctir !777
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !12226
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !12227

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12228, !tbaa !2995
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !12229, !ctir !772
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !12229, !tbaa !12225, !ctir !777
  %16 = load float, float* %epsilon, align 4, !dbg !12230, !tbaa !12051
  %add11 = fadd float %15, %16, !dbg !12231
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12232, !tbaa !2995
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !12233, !ctir !772
  %18 = load float, float* %shrink_factor, align 4, !dbg !12233, !tbaa !12234, !ctir !777
  %cmp12 = fcmp olt float %add11, %18, !dbg !12235
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !12236

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12237, !tbaa !2995
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !12238, !ctir !772
  %20 = load float, float* %shrink_factor14, align 4, !dbg !12238, !tbaa !12234, !ctir !777
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !12239
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !12240

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12241, !tbaa !2995
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !12242, !ctir !772
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !12242, !tbaa !12225, !ctir !777
  %23 = load float, float* %epsilon, align 4, !dbg !12243, !tbaa !12051
  %add18 = fadd float %22, %23, !dbg !12244
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12245, !tbaa !2995
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !12246, !ctir !772
  %25 = load float, float* %growth_threshold19, align 4, !dbg !12246, !tbaa !12206, !ctir !777
  %cmp20 = fcmp olt float %add18, %25, !dbg !12247
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !12248

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !12249
  br label %return, !dbg !12249

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12250, !tbaa !2995
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !12251, !ctir !754
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !12252, !tbaa !12095, !ctir !771
  store i1 false, i1* %retval, align 1, !dbg !12253
  br label %return, !dbg !12253

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !12254
  ret i1 %27, !dbg !12254
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #9 !dbg !12255 !ctir !864 {
entry:
  %retval = alloca i64, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %new_candidate = alloca float, align 4, !ctir !777
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12256, metadata !DIExpression()), !dbg !12257
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12258, metadata !DIExpression()), !dbg !12259
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12260, !tbaa !2995
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !12262, !ctir !772
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !12262, !tbaa !12263
  %tobool = trunc i8 %1 to i1, !dbg !12262, !ctir !120
  br i1 %tobool, label %if.end4, label %if.then, !dbg !12264

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !12265, metadata !DIExpression()), !dbg !12267
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12268, !tbaa !3848
  %conv = uitofp i64 %2 to float, !dbg !12268
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12269, !tbaa !2995
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !12270, !ctir !772
  %4 = load float, float* %growth_threshold, align 4, !dbg !12270, !tbaa !12206, !ctir !777
  %div = fdiv float %conv, %4, !dbg !12271
  store float %div, float* %new_candidate, align 4, !dbg !12267, !tbaa !12051
  %5 = load float, float* %new_candidate, align 4, !dbg !12272, !tbaa !12051
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !12274
  br i1 %cmp, label %if.then2, label %if.end, !dbg !12275

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !12276
  br label %return, !dbg !12276

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !12277, !tbaa !12051
  %conv3 = fptoui float %6 to i64, !dbg !12277
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !12278, !tbaa !3848
  br label %if.end4, !dbg !12279

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !12280, !tbaa !3848
  %call = call i64 @next_prime(i64 %7) #15, !dbg !12281
  store i64 %call, i64* %candidate.addr, align 8, !dbg !12282, !tbaa !3848
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12283, !tbaa !3848
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !12283
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !12285

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !12286
  br label %return, !dbg !12286

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !12287, !tbaa !3848
  store i64 %9, i64* %retval, align 8, !dbg !12288
  br label %return, !dbg !12288

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !12289
  ret i64 %10, !dbg !12289
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #11 !dbg !12290 !ctir !866 {
entry:
  %candidate.addr = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12291, metadata !DIExpression()), !dbg !12292
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12293, !tbaa !3848
  %cmp = icmp ult i64 %0, 10, !dbg !12295
  br i1 %cmp, label %if.then, label %if.end, !dbg !12296

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !12297, !tbaa !3848
  br label %if.end, !dbg !12298

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !12299, !tbaa !3848
  %or = or i64 %1, 1, !dbg !12299
  store i64 %or, i64* %candidate.addr, align 8, !dbg !12299, !tbaa !3848
  br label %while.cond, !dbg !12300

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12301, !tbaa !3848
  %cmp1 = icmp ne i64 -1, %2, !dbg !12302
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !12303

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12304, !tbaa !3848
  %call = call zeroext i1 @is_prime(i64 %3) #15, !dbg !12305
  %lnot = xor i1 %call, true, !dbg !12306
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !12307
  br i1 %4, label %while.body, label %while.end, !dbg !12300

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !12308, !tbaa !3848
  %add = add i64 %5, 2, !dbg !12308
  store i64 %add, i64* %candidate.addr, align 8, !dbg !12308, !tbaa !3848
  br label %while.cond, !dbg !12300, !llvm.loop !12309

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !12311, !tbaa !3848
  ret i64 %6, !dbg !12312
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #11 !dbg !12313 !ctir !868 {
entry:
  %candidate.addr = alloca i64, align 8
  %divisor = alloca i64, align 8, !ctir !55
  %square = alloca i64, align 8, !ctir !55
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12314, metadata !DIExpression()), !dbg !12315
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !12316, metadata !DIExpression()), !dbg !12317
  store i64 3, i64* %divisor, align 8, !dbg !12317, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %square, metadata !12318, metadata !DIExpression()), !dbg !12319
  %0 = load i64, i64* %divisor, align 8, !dbg !12320, !tbaa !3848
  %1 = load i64, i64* %divisor, align 8, !dbg !12321, !tbaa !3848
  %mul = mul i64 %0, %1, !dbg !12322
  store i64 %mul, i64* %square, align 8, !dbg !12319, !tbaa !3848
  br label %while.cond, !dbg !12323

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !12324, !tbaa !3848
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12325, !tbaa !3848
  %cmp = icmp ult i64 %2, %3, !dbg !12326
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12327

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !12328, !tbaa !3848
  %5 = load i64, i64* %divisor, align 8, !dbg !12329, !tbaa !3848
  %rem = urem i64 %4, %5, !dbg !12330
  %tobool = icmp ne i64 %rem, 0, !dbg !12327
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !12331
  br i1 %6, label %while.body, label %while.end, !dbg !12323

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !12332, !tbaa !3848
  %inc = add i64 %7, 1, !dbg !12332
  store i64 %inc, i64* %divisor, align 8, !dbg !12332, !tbaa !3848
  %8 = load i64, i64* %divisor, align 8, !dbg !12334, !tbaa !3848
  %mul1 = mul i64 4, %8, !dbg !12335
  %9 = load i64, i64* %square, align 8, !dbg !12336, !tbaa !3848
  %add = add i64 %9, %mul1, !dbg !12336
  store i64 %add, i64* %square, align 8, !dbg !12336, !tbaa !3848
  %10 = load i64, i64* %divisor, align 8, !dbg !12337, !tbaa !3848
  %inc2 = add i64 %10, 1, !dbg !12337
  store i64 %inc2, i64* %divisor, align 8, !dbg !12337, !tbaa !3848
  br label %while.cond, !dbg !12323, !llvm.loop !12338

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !12340, !tbaa !3848
  %12 = load i64, i64* %divisor, align 8, !dbg !12341, !tbaa !3848
  %rem3 = urem i64 %11, %12, !dbg !12342
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !12340
  %13 = zext i1 %tobool4 to i64, !dbg !12340
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !12340
  %tobool5 = icmp ne i32 %cond, 0, !dbg !12343
  ret i1 %tobool5, !dbg !12344
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #4 !dbg !12345 !ctir !851 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !759
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !759
  %next = alloca %struct.hash_entry*, align 8, !ctir !759
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12346, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12348, metadata !DIExpression()), !dbg !12349
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12350, !tbaa !2995
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12352, !ctir !754
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12352, !tbaa !11577, !ctir !759
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12353, !tbaa !2995
  br label %for.cond, !dbg !12354

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12355, !tbaa !2995
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12357, !tbaa !2995
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12358, !ctir !754
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12358, !tbaa !11584, !ctir !765
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12359
  br i1 %cmp, label %for.body, label %for.end24, !dbg !12360

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12361, !tbaa !2995
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12364, !ctir !760
  %6 = load i8*, i8** %data, align 8, !dbg !12364, !tbaa !11591, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !12361
  br i1 %tobool, label %if.then, label %if.end22, !dbg !12365

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12366, metadata !DIExpression()), !dbg !12368
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12369, metadata !DIExpression()), !dbg !12370
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12371, !tbaa !2995
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12373, !ctir !760
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !12373, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12374, !tbaa !2995
  br label %for.cond3, !dbg !12375

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12376, !tbaa !2995
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !12378
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !12378

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12379, !tbaa !2995
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !12382, !ctir !754
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12382, !tbaa !12151, !ctir !789
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !12379
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !12383

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12384, !tbaa !2995
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !12385, !ctir !754
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12385, !tbaa !12151, !ctir !789
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12386, !tbaa !2995
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12387, !ctir !760
  %15 = load i8*, i8** %data9, align 8, !dbg !12387, !tbaa !11591, !ctir !53
  call void %13(i8* %15), !dbg !12384
  br label %if.end, !dbg !12384

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12388, !tbaa !2995
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12389, !ctir !760
  store i8* null, i8** %data10, align 8, !dbg !12390, !tbaa !11591, !ctir !53
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12391, !tbaa !2995
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12392, !ctir !760
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !12392, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !12393, !tbaa !2995
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12394, !tbaa !2995
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !12395, !ctir !754
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12395, !tbaa !12155, !ctir !759
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12396, !tbaa !2995
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !12397, !ctir !760
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12398, !tbaa !11603, !ctir !759
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12399, !tbaa !2995
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12400, !tbaa !2995
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !12401, !ctir !754
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !12402, !tbaa !12155, !ctir !759
  br label %for.inc, !dbg !12403

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12404, !tbaa !2995
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !12405, !tbaa !2995
  br label %for.cond3, !dbg !12406, !llvm.loop !12407

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12409, !tbaa !2995
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !12411, !ctir !754
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !12411, !tbaa !12151, !ctir !789
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !12409
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !12412

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12413, !tbaa !2995
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !12414, !ctir !754
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !12414, !tbaa !12151, !ctir !789
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12415, !tbaa !2995
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !12416, !ctir !760
  %30 = load i8*, i8** %data18, align 8, !dbg !12416, !tbaa !11591, !ctir !53
  call void %28(i8* %30), !dbg !12413
  br label %if.end19, !dbg !12413

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12417, !tbaa !2995
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !12418, !ctir !760
  store i8* null, i8** %data20, align 8, !dbg !12419, !tbaa !11591, !ctir !53
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12420, !tbaa !2995
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12421, !ctir !760
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !12422, !tbaa !11603, !ctir !759
  br label %if.end22, !dbg !12423

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !12424

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12425, !tbaa !2995
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12425
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12425, !tbaa !2995
  br label %for.cond, !dbg !12426, !llvm.loop !12427

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12429, !tbaa !2995
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !12430, !ctir !754
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12431, !tbaa !11558, !ctir !55
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12432, !tbaa !2995
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !12433, !ctir !754
  store i64 0, i64* %n_entries, align 8, !dbg !12434, !tbaa !11565, !ctir !55
  ret void, !dbg !12435
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #4 !dbg !12436 !ctir !851 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !759
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !759
  %next = alloca %struct.hash_entry*, align 8, !ctir !759
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12437, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12439, metadata !DIExpression()), !dbg !12440
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12441, metadata !DIExpression()), !dbg !12442
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12443, metadata !DIExpression()), !dbg !12444
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12445, !tbaa !2995
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !12447, !ctir !754
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12447, !tbaa !12151, !ctir !789
  %tobool = icmp ne void (i8*)* %1, null, !dbg !12445
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !12448

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12449, !tbaa !2995
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !12450, !ctir !754
  %3 = load i64, i64* %n_entries, align 8, !dbg !12450, !tbaa !11565, !ctir !55
  %tobool1 = icmp ne i64 %3, 0, !dbg !12449
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !12451

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12452, !tbaa !2995
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !12455, !ctir !754
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !12455, !tbaa !11577, !ctir !759
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !12456, !tbaa !2995
  br label %for.cond, !dbg !12457

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12458, !tbaa !2995
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12460, !tbaa !2995
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !12461, !ctir !754
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12461, !tbaa !11584, !ctir !765
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !12462
  br i1 %cmp, label %for.body, label %for.end12, !dbg !12463

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12464, !tbaa !2995
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !12467, !ctir !760
  %10 = load i8*, i8** %data, align 8, !dbg !12467, !tbaa !11591, !ctir !53
  %tobool3 = icmp ne i8* %10, null, !dbg !12464
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12468

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12469, !tbaa !2995
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !12472, !tbaa !2995
  br label %for.cond5, !dbg !12473

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12474, !tbaa !2995
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !12476
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !12476

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12477, !tbaa !2995
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !12478, !ctir !754
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12478, !tbaa !12151, !ctir !789
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12479, !tbaa !2995
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !12480, !ctir !760
  %16 = load i8*, i8** %data9, align 8, !dbg !12480, !tbaa !11591, !ctir !53
  call void %14(i8* %16), !dbg !12477
  br label %for.inc, !dbg !12477

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12481, !tbaa !2995
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12482, !ctir !760
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !12482, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !12483, !tbaa !2995
  br label %for.cond5, !dbg !12484, !llvm.loop !12485

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !12487

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !12488

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12489, !tbaa !2995
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !12489
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12489, !tbaa !2995
  br label %for.cond, !dbg !12490, !llvm.loop !12491

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !12493

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12494, !tbaa !2995
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !12496, !ctir !754
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !12496, !tbaa !11577, !ctir !759
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !12497, !tbaa !2995
  br label %for.cond15, !dbg !12498

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12499, !tbaa !2995
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12501, !tbaa !2995
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12502, !ctir !754
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !12502, !tbaa !11584, !ctir !765
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !12503
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !12504

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12505, !tbaa !2995
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !12508, !ctir !760
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !12508, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !12509, !tbaa !2995
  br label %for.cond20, !dbg !12510

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12511, !tbaa !2995
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !12513
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !12513

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12514, !tbaa !2995
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !12516, !ctir !760
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !12516, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !12517, !tbaa !2995
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12518, !tbaa !2995
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !12518
  call void @free(i8* %31) #10, !dbg !12519
  br label %for.inc24, !dbg !12520

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12521, !tbaa !2995
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !12522, !tbaa !2995
  br label %for.cond20, !dbg !12523, !llvm.loop !12524

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !12526

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12527, !tbaa !2995
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12527
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !12527, !tbaa !2995
  br label %for.cond15, !dbg !12528, !llvm.loop !12529

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12531, !tbaa !2995
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12533, !ctir !754
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12533, !tbaa !12155, !ctir !759
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !12534, !tbaa !2995
  br label %for.cond29, !dbg !12535

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12536, !tbaa !2995
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !12538
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !12538

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12539, !tbaa !2995
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !12541, !ctir !760
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !12541, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !12542, !tbaa !2995
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12543, !tbaa !2995
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !12543
  call void @free(i8* %40) #10, !dbg !12544
  br label %for.inc33, !dbg !12545

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12546, !tbaa !2995
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12547, !tbaa !2995
  br label %for.cond29, !dbg !12548, !llvm.loop !12549

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12551, !tbaa !2995
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12552, !ctir !754
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !12552, !tbaa !11577, !ctir !759
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !12551
  call void @free(i8* %44) #10, !dbg !12553
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12554, !tbaa !2995
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !12554
  call void @free(i8* %46) #10, !dbg !12555
  ret void, !dbg !12556
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #4 !dbg !12557 !ctir !853 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %storage = alloca %struct.hash_table, align 8, !ctir !754
  %new_table = alloca %struct.hash_table*, align 8, !ctir !850
  %new_size = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12558, metadata !DIExpression()), !dbg !12559
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12560, metadata !DIExpression()), !dbg !12561
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !12562, metadata !DIExpression()), !dbg !12563
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !12564, metadata !DIExpression()), !dbg !12565
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !12566, metadata !DIExpression()), !dbg !12567
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12568, !tbaa !3848
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12569, !tbaa !2995
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !12570, !ctir !754
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12570, !tbaa !12095, !ctir !771
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #14, !dbg !12571
  store i64 %call, i64* %new_size, align 8, !dbg !12567, !tbaa !3848
  %3 = load i64, i64* %new_size, align 8, !dbg !12572, !tbaa !3848
  %tobool = icmp ne i64 %3, 0, !dbg !12572
  br i1 %tobool, label %if.end, label %if.then, !dbg !12574

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12575
  br label %return, !dbg !12575

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !12576, !tbaa !3848
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12578, !tbaa !2995
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !12579, !ctir !754
  %6 = load i64, i64* %n_buckets, align 8, !dbg !12579, !tbaa !11550, !ctir !55
  %cmp = icmp eq i64 %4, %6, !dbg !12580
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12581

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !12582
  br label %return, !dbg !12582

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !12583, !tbaa !2995
  %7 = load i64, i64* %new_size, align 8, !dbg !12584, !tbaa !3848
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #10, !dbg !12585
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !12585
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12586, !tbaa !2995
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !12587, !ctir !754
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !12588, !tbaa !11577, !ctir !759
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12589, !tbaa !2995
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !12591, !ctir !754
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !12591, !tbaa !11577, !ctir !759
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !12592
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12593

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !12594
  br label %return, !dbg !12594

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !12595, !tbaa !3848
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12596, !tbaa !2995
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12597, !ctir !754
  store i64 %12, i64* %n_buckets8, align 8, !dbg !12598, !tbaa !11550, !ctir !55
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12599, !tbaa !2995
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !12600, !ctir !754
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !12600, !tbaa !11577, !ctir !759
  %16 = load i64, i64* %new_size, align 8, !dbg !12601, !tbaa !3848
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !12602
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12603, !tbaa !2995
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !12604, !ctir !754
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12605, !tbaa !11584, !ctir !765
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12606, !tbaa !2995
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !12607, !ctir !754
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12608, !tbaa !11558, !ctir !55
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12609, !tbaa !2995
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !12610, !ctir !754
  store i64 0, i64* %n_entries, align 8, !dbg !12611, !tbaa !11565, !ctir !55
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12612, !tbaa !2995
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !12613, !ctir !754
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !12613, !tbaa !12095, !ctir !771
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12614, !tbaa !2995
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !12615, !ctir !754
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !12616, !tbaa !12095, !ctir !771
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12617, !tbaa !2995
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !12618, !ctir !754
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !12618, !tbaa !11779, !ctir !783
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12619, !tbaa !2995
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !12620, !ctir !754
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !12621, !tbaa !11779, !ctir !783
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12622, !tbaa !2995
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !12623, !ctir !754
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12623, !tbaa !11753, !ctir !786
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12624, !tbaa !2995
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !12625, !ctir !754
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !12626, !tbaa !11753, !ctir !786
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12627, !tbaa !2995
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !12628, !ctir !754
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12628, !tbaa !12151, !ctir !789
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12629, !tbaa !2995
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12630, !ctir !754
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !12631, !tbaa !12151, !ctir !789
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12632, !tbaa !2995
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12633, !ctir !754
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12633, !tbaa !12155, !ctir !759
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12634, !tbaa !2995
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12635, !ctir !754
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !12636, !tbaa !12155, !ctir !759
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12637, !tbaa !2995
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12639, !tbaa !2995
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !12640
  br i1 %call16, label %if.then17, label %if.end29, !dbg !12641

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12642, !tbaa !2995
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !12644, !ctir !754
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !12644, !tbaa !11577, !ctir !759
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !12642
  call void @free(i8* %39) #10, !dbg !12645
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12646, !tbaa !2995
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !12647, !ctir !754
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !12647, !tbaa !11577, !ctir !759
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12648, !tbaa !2995
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12649, !ctir !754
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !12650, !tbaa !11577, !ctir !759
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12651, !tbaa !2995
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !12652, !ctir !754
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !12652, !tbaa !11584, !ctir !765
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12653, !tbaa !2995
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !12654, !ctir !754
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !12655, !tbaa !11584, !ctir !765
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12656, !tbaa !2995
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !12657, !ctir !754
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !12657, !tbaa !11550, !ctir !55
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12658, !tbaa !2995
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !12659, !ctir !754
  store i64 %47, i64* %n_buckets24, align 8, !dbg !12660, !tbaa !11550, !ctir !55
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12661, !tbaa !2995
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12662, !ctir !754
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !12662, !tbaa !11558, !ctir !55
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12663, !tbaa !2995
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !12664, !ctir !754
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !12665, !tbaa !11558, !ctir !55
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12666, !tbaa !2995
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !12667, !ctir !754
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !12667, !tbaa !12155, !ctir !759
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12668, !tbaa !2995
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !12669, !ctir !754
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !12670, !tbaa !12155, !ctir !759
  store i1 true, i1* %retval, align 1, !dbg !12671
  br label %return, !dbg !12671

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12672, !tbaa !2995
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !12673, !ctir !754
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !12673, !tbaa !12155, !ctir !759
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12674, !tbaa !2995
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !12675, !ctir !754
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !12676, !tbaa !12155, !ctir !759
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12677, !tbaa !2995
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12679, !tbaa !2995
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !12680
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !12681

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12682, !tbaa !2995
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12683, !tbaa !2995
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !12684
  br i1 %call33, label %if.end35, label %if.then34, !dbg !12685

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #13, !dbg !12686
  unreachable, !dbg !12686

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12687, !tbaa !2995
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !12688, !ctir !754
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !12688, !tbaa !11577, !ctir !759
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !12687
  call void @free(i8* %64) #10, !dbg !12689
  store i1 false, i1* %retval, align 1, !dbg !12690
  br label %return, !dbg !12690

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !12691
  ret i1 %65, !dbg !12691
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #4 !dbg !12692 !ctir !870 {
entry:
  %retval = alloca i1, align 1
  %dst.addr = alloca %struct.hash_table*, align 8
  %src.addr = alloca %struct.hash_table*, align 8
  %safe.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !759
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !759
  %next = alloca %struct.hash_entry*, align 8, !ctir !759
  %data2 = alloca i8*, align 8, !ctir !53
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !759
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !759
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !12693, metadata !DIExpression()), !dbg !12694
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !12695, metadata !DIExpression()), !dbg !12696
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !12697, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12699, metadata !DIExpression()), !dbg !12700
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12701, metadata !DIExpression()), !dbg !12702
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12703, metadata !DIExpression()), !dbg !12704
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12705, !tbaa !2995
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12707, !ctir !754
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12707, !tbaa !11577, !ctir !759
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12708, !tbaa !2995
  br label %for.cond, !dbg !12709

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12710, !tbaa !2995
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12712, !tbaa !2995
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12713, !ctir !754
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12713, !tbaa !11584, !ctir !765
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12714
  br i1 %cmp, label %for.body, label %for.end42, !dbg !12715

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12716, !tbaa !2995
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12718, !ctir !760
  %6 = load i8*, i8** %data, align 8, !dbg !12718, !tbaa !11591, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !12716
  br i1 %tobool, label %if.then, label %if.end40, !dbg !12719

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !12720, metadata !DIExpression()), !dbg !12722
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !12723, metadata !DIExpression()), !dbg !12724
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12725, !tbaa !2995
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12727, !ctir !760
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !12727, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12728, !tbaa !2995
  br label %for.cond4, !dbg !12729

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12730, !tbaa !2995
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !12732
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !12732

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12733, !tbaa !2995
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12735, !ctir !760
  %11 = load i8*, i8** %data7, align 8, !dbg !12735, !tbaa !11591, !ctir !53
  store i8* %11, i8** %data2, align 8, !dbg !12736, !tbaa !2995
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12737, !tbaa !2995
  %13 = load i8*, i8** %data2, align 8, !dbg !12738, !tbaa !2995
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !12739
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !12740, !tbaa !2995
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12741, !tbaa !2995
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !12742, !ctir !760
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !12742, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !12743, !tbaa !2995
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12744, !tbaa !2995
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12746, !ctir !760
  %17 = load i8*, i8** %data9, align 8, !dbg !12746, !tbaa !11591, !ctir !53
  %tobool10 = icmp ne i8* %17, null, !dbg !12744
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12747

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12748, !tbaa !2995
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !12750, !ctir !760
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12750, !tbaa !11603, !ctir !759
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12751, !tbaa !2995
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !12752, !ctir !760
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !12753, !tbaa !11603, !ctir !759
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12754, !tbaa !2995
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12755, !tbaa !2995
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !12756, !ctir !760
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !12757, !tbaa !11603, !ctir !759
  br label %if.end, !dbg !12758

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !12759, !tbaa !2995
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12761, !tbaa !2995
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !12762, !ctir !760
  store i8* %23, i8** %data15, align 8, !dbg !12763, !tbaa !11591, !ctir !53
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12764, !tbaa !2995
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !12765, !ctir !754
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !12766, !tbaa !11558, !ctir !55
  %inc = add i64 %26, 1, !dbg !12766
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !12766, !tbaa !11558, !ctir !55
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12767, !tbaa !2995
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12768, !tbaa !2995
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !12769
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !12770

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12771, !tbaa !2995
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12772, !tbaa !2995
  br label %for.cond4, !dbg !12773, !llvm.loop !12774

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12776, !tbaa !2995
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !12777, !ctir !760
  %31 = load i8*, i8** %data16, align 8, !dbg !12777, !tbaa !11591, !ctir !53
  store i8* %31, i8** %data2, align 8, !dbg !12778, !tbaa !2995
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12779, !tbaa !2995
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12780, !ctir !760
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !12781, !tbaa !11603, !ctir !759
  %33 = load i8, i8* %safe.addr, align 1, !dbg !12782, !tbaa !3106
  %tobool18 = trunc i8 %33 to i1, !dbg !12782
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12784

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !12785

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12786, !tbaa !2995
  %35 = load i8*, i8** %data2, align 8, !dbg !12787, !tbaa !2995
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !12788
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !12789, !tbaa !2995
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12790, !tbaa !2995
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !12792, !ctir !760
  %37 = load i8*, i8** %data22, align 8, !dbg !12792, !tbaa !11591, !ctir !53
  %tobool23 = icmp ne i8* %37, null, !dbg !12790
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !12793

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12794, metadata !DIExpression()), !dbg !12796
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12797, !tbaa !2995
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !12798
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !12796, !tbaa !2995
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12799, !tbaa !2995
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !12801
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !12802

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !12803
  br label %return, !dbg !12803

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !12804, !tbaa !2995
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12805, !tbaa !2995
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !12806, !ctir !760
  store i8* %40, i8** %data29, align 8, !dbg !12807, !tbaa !11591, !ctir !53
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12808, !tbaa !2995
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12809, !ctir !760
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12809, !tbaa !11603, !ctir !759
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12810, !tbaa !2995
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !12811, !ctir !760
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !12812, !tbaa !11603, !ctir !759
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12813, !tbaa !2995
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12814, !tbaa !2995
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12815, !ctir !760
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !12816, !tbaa !11603, !ctir !759
  br label %if.end37, !dbg !12817

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !12818, !tbaa !2995
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12820, !tbaa !2995
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !12821, !ctir !760
  store i8* %47, i8** %data34, align 8, !dbg !12822, !tbaa !11591, !ctir !53
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12823, !tbaa !2995
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12824, !ctir !754
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !12825, !tbaa !11558, !ctir !55
  %inc36 = add i64 %50, 1, !dbg !12825
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !12825, !tbaa !11558, !ctir !55
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12826, !tbaa !2995
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !12827, !ctir !760
  store i8* null, i8** %data38, align 8, !dbg !12828, !tbaa !11591, !ctir !53
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12829, !tbaa !2995
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !12830, !ctir !754
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !12831, !tbaa !11558, !ctir !55
  %dec = add i64 %53, -1, !dbg !12831
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !12831, !tbaa !11558, !ctir !55
  br label %if.end40, !dbg !12832

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !12718

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12833, !tbaa !2995
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !12833
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12833, !tbaa !2995
  br label %for.cond, !dbg !12834, !llvm.loop !12835

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !12837
  br label %return, !dbg !12837

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !12838
  ret i1 %55, !dbg !12838
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #4 !dbg !12839 !ctir !872 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12840, metadata !DIExpression()), !dbg !12841
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !12842, metadata !DIExpression()), !dbg !12843
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12844, !tbaa !2995
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !12845, !ctir !760
  store i8* null, i8** %data, align 8, !dbg !12846, !tbaa !11591, !ctir !53
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12847, !tbaa !2995
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !12848, !ctir !754
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12848, !tbaa !12155, !ctir !759
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12849, !tbaa !2995
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !12850, !ctir !760
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !12851, !tbaa !11603, !ctir !759
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12852, !tbaa !2995
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12853, !tbaa !2995
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !12854, !ctir !754
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12855, !tbaa !12155, !ctir !759
  ret void, !dbg !12856
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #4 !dbg !12857 !ctir !877 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %new = alloca %struct.hash_entry*, align 8, !ctir !759
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12858, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !12860, metadata !DIExpression()), !dbg !12861
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12862, !tbaa !2995
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !12864, !ctir !754
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12864, !tbaa !12155, !ctir !759
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !12862
  br i1 %tobool, label %if.then, label %if.else, !dbg !12865

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12866, !tbaa !2995
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !12868, !ctir !754
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !12868, !tbaa !12155, !ctir !759
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !12869, !tbaa !2995
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12870, !tbaa !2995
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !12871, !ctir !760
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12871, !tbaa !11603, !ctir !759
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12872, !tbaa !2995
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !12873, !ctir !754
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12874, !tbaa !12155, !ctir !759
  br label %if.end, !dbg !12875

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #10, !dbg !12876
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !12876
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !12878, !tbaa !2995
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12879, !tbaa !2995
  ret %struct.hash_entry* %8, !dbg !12880
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #4 !dbg !12881 !ctir !855 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent.addr = alloca i8**, align 8
  %data = alloca i8*, align 8, !ctir !53
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !759
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !771
  %candidate = alloca float, align 4, !ctir !777
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !759
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12882, metadata !DIExpression()), !dbg !12883
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12884, metadata !DIExpression()), !dbg !12885
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !12886, metadata !DIExpression()), !dbg !12887
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12888, metadata !DIExpression()), !dbg !12889
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12890, metadata !DIExpression()), !dbg !12891
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !12892, !tbaa !2995
  %tobool = icmp ne i8* %0, null, !dbg !12892
  br i1 %tobool, label %if.end, label %if.then, !dbg !12894

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !12895
  unreachable, !dbg !12895

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12896, !tbaa !2995
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !12898, !tbaa !2995
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12899
  store i8* %call, i8** %data, align 8, !dbg !12900, !tbaa !2995
  %cmp = icmp ne i8* %call, null, !dbg !12901
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !12902

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12903, !tbaa !2995
  %tobool3 = icmp ne i8** %3, null, !dbg !12903
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !12906

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !12907, !tbaa !2995
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12908, !tbaa !2995
  store i8* %4, i8** %5, align 8, !dbg !12909, !tbaa !2995, !ctir !425
  br label %if.end5, !dbg !12910

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !12911
  br label %return, !dbg !12911

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12912, !tbaa !2995
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !12914, !ctir !754
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !12914, !tbaa !11558, !ctir !55
  %conv = uitofp i64 %7 to float, !dbg !12912
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12915, !tbaa !2995
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !12916, !ctir !754
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12916, !tbaa !12095, !ctir !771
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !12917, !ctir !772
  %10 = load float, float* %growth_threshold, align 4, !dbg !12917, !tbaa !12206, !ctir !777
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12918, !tbaa !2995
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12919, !ctir !754
  %12 = load i64, i64* %n_buckets, align 8, !dbg !12919, !tbaa !11550, !ctir !55
  %conv7 = uitofp i64 %12 to float, !dbg !12918
  %mul = fmul float %10, %conv7, !dbg !12920
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !12921
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !12922

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12923, !tbaa !2995
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !12925
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12926, !tbaa !2995
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !12928, !ctir !754
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !12928, !tbaa !11558, !ctir !55
  %conv13 = uitofp i64 %15 to float, !dbg !12926
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12929, !tbaa !2995
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !12930, !ctir !754
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !12930, !tbaa !12095, !ctir !771
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !12931, !ctir !772
  %18 = load float, float* %growth_threshold15, align 4, !dbg !12931, !tbaa !12206, !ctir !777
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12932, !tbaa !2995
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !12933, !ctir !754
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !12933, !tbaa !11550, !ctir !55
  %conv17 = uitofp i64 %20 to float, !dbg !12932
  %mul18 = fmul float %18, %conv17, !dbg !12934
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !12935
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !12936

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !12937, metadata !DIExpression()), !dbg !12939
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12940, !tbaa !2995
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !12941, !ctir !754
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !12941, !tbaa !12095, !ctir !771
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !12939, !tbaa !2995
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !12942, metadata !DIExpression()), !dbg !12943
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12944, !tbaa !2995
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !12945, !ctir !772
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !12945, !tbaa !12263
  %tobool24 = trunc i8 %24 to i1, !dbg !12945, !ctir !120
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !12944

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12946, !tbaa !2995
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !12947, !ctir !754
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !12947, !tbaa !11550, !ctir !55
  %conv27 = uitofp i64 %26 to float, !dbg !12946
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12948, !tbaa !2995
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !12949, !ctir !772
  %28 = load float, float* %growth_factor, align 4, !dbg !12949, !tbaa !12220, !ctir !777
  %mul28 = fmul float %conv27, %28, !dbg !12950
  br label %cond.end, !dbg !12944

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12951, !tbaa !2995
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !12952, !ctir !754
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !12952, !tbaa !11550, !ctir !55
  %conv30 = uitofp i64 %30 to float, !dbg !12951
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12953, !tbaa !2995
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !12954, !ctir !772
  %32 = load float, float* %growth_factor31, align 4, !dbg !12954, !tbaa !12220, !ctir !777
  %mul32 = fmul float %conv30, %32, !dbg !12955
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12956, !tbaa !2995
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !12957, !ctir !772
  %34 = load float, float* %growth_threshold33, align 4, !dbg !12957, !tbaa !12206, !ctir !777
  %mul34 = fmul float %mul32, %34, !dbg !12958
  br label %cond.end, !dbg !12944

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !12944
  store float %cond, float* %candidate, align 4, !dbg !12943, !tbaa !12051
  %35 = load float, float* %candidate, align 4, !dbg !12959, !tbaa !12051
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !12961
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12962

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !12963
  br label %return, !dbg !12963

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12964, !tbaa !2995
  %37 = load float, float* %candidate, align 4, !dbg !12966, !tbaa !12051
  %conv39 = fptoui float %37 to i64, !dbg !12966
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !12967
  br i1 %call40, label %if.end42, label %if.then41, !dbg !12968

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !12969
  br label %return, !dbg !12969

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12970, !tbaa !2995
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !12972, !tbaa !2995
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12973
  %cmp44 = icmp ne i8* %call43, null, !dbg !12974
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !12975

if.then46:                                        ; preds = %if.end42
  call void @abort() #13, !dbg !12976
  unreachable, !dbg !12976

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !12977

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !12978

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12979, !tbaa !2995
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12981, !ctir !760
  %41 = load i8*, i8** %data50, align 8, !dbg !12981, !tbaa !11591, !ctir !53
  %tobool51 = icmp ne i8* %41, null, !dbg !12979
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !12982

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12983, metadata !DIExpression()), !dbg !12985
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12986, !tbaa !2995
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !12987
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !12985, !tbaa !2995
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12988, !tbaa !2995
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !12990
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !12991

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !12992
  br label %return, !dbg !12992

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !12993, !tbaa !2995
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12994, !tbaa !2995
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !12995, !ctir !760
  store i8* %44, i8** %data58, align 8, !dbg !12996, !tbaa !11591, !ctir !53
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12997, !tbaa !2995
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12998, !ctir !760
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12998, !tbaa !11603, !ctir !759
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12999, !tbaa !2995
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13000, !ctir !760
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !13001, !tbaa !11603, !ctir !759
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13002, !tbaa !2995
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13003, !tbaa !2995
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13004, !ctir !760
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !13005, !tbaa !11603, !ctir !759
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13006, !tbaa !2995
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !13007, !ctir !754
  %52 = load i64, i64* %n_entries, align 8, !dbg !13008, !tbaa !11565, !ctir !55
  %inc = add i64 %52, 1, !dbg !13008
  store i64 %inc, i64* %n_entries, align 8, !dbg !13008, !tbaa !11565, !ctir !55
  store i32 1, i32* %retval, align 4, !dbg !13009
  br label %return, !dbg !13009

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !13010, !tbaa !2995
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13011, !tbaa !2995
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !13012, !ctir !760
  store i8* %53, i8** %data62, align 8, !dbg !13013, !tbaa !11591, !ctir !53
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13014, !tbaa !2995
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !13015, !ctir !754
  %56 = load i64, i64* %n_entries63, align 8, !dbg !13016, !tbaa !11565, !ctir !55
  %inc64 = add i64 %56, 1, !dbg !13016
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !13016, !tbaa !11565, !ctir !55
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13017, !tbaa !2995
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !13018, !ctir !754
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !13019, !tbaa !11558, !ctir !55
  %inc66 = add i64 %58, 1, !dbg !13019
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !13019, !tbaa !11558, !ctir !55
  store i32 1, i32* %retval, align 4, !dbg !13020
  br label %return, !dbg !13020

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !13021
  ret i32 %59, !dbg !13021
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #4 !dbg !13022 !ctir !874 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket_head.addr = alloca %struct.hash_entry**, align 8
  %delete.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !759
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !759
  %data7 = alloca i8*, align 8, !ctir !53
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !759
  %data29 = alloca i8*, align 8, !ctir !53
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !759
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13023, metadata !DIExpression()), !dbg !13024
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13025, metadata !DIExpression()), !dbg !13026
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !13027, metadata !DIExpression()), !dbg !13028
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !13029, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13031, metadata !DIExpression()), !dbg !13032
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13033, !tbaa !2995
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13034, !tbaa !2995
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !13035
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !13032, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13036, metadata !DIExpression()), !dbg !13037
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13038, !tbaa !2995
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !13039, !tbaa !2995
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !13040, !tbaa !2995, !ctir !759
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13041, !tbaa !2995
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !13043, !ctir !760
  %5 = load i8*, i8** %data, align 8, !dbg !13043, !tbaa !11591, !ctir !53
  %cmp = icmp eq i8* %5, null, !dbg !13044
  br i1 %cmp, label %if.then, label %if.end, !dbg !13045

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13046
  br label %return, !dbg !13046

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !13047, !tbaa !2995
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13049, !tbaa !2995
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !13050, !ctir !760
  %8 = load i8*, i8** %data2, align 8, !dbg !13050, !tbaa !11591, !ctir !53
  %cmp3 = icmp eq i8* %6, %8, !dbg !13051
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !13052

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13053, !tbaa !2995
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !13054, !ctir !754
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !13054, !tbaa !11753, !ctir !786
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !13055, !tbaa !2995
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13056, !tbaa !2995
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !13057, !ctir !760
  %13 = load i8*, i8** %data4, align 8, !dbg !13057, !tbaa !11591, !ctir !53
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !13053
  br i1 %call5, label %if.then6, label %if.end17, !dbg !13058

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !13059, metadata !DIExpression()), !dbg !13061
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13062, !tbaa !2995
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !13063, !ctir !760
  %15 = load i8*, i8** %data8, align 8, !dbg !13063, !tbaa !11591, !ctir !53
  store i8* %15, i8** %data7, align 8, !dbg !13061, !tbaa !2995
  %16 = load i8, i8* %delete.addr, align 1, !dbg !13064, !tbaa !3106
  %tobool = trunc i8 %16 to i1, !dbg !13064
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !13066

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13067, !tbaa !2995
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !13070, !ctir !760
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13070, !tbaa !11603, !ctir !759
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !13067
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !13071

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !13072, metadata !DIExpression()), !dbg !13074
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13075, !tbaa !2995
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !13076, !ctir !760
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !13076, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !13074, !tbaa !2995
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13077, !tbaa !2995
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13078, !tbaa !2995
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !13079
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !13079
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !13079, !tbaa.struct !13080
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13081, !tbaa !2995
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13082, !tbaa !2995
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !13083
  br label %if.end15, !dbg !13084

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13085, !tbaa !2995
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !13087, !ctir !760
  store i8* null, i8** %data14, align 8, !dbg !13088, !tbaa !11591, !ctir !53
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !13089

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !13090, !tbaa !2995
  store i8* %28, i8** %retval, align 8, !dbg !13091
  br label %return, !dbg !13091

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13092, !tbaa !2995
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !13094, !tbaa !2995
  br label %for.cond, !dbg !13095

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13096, !tbaa !2995
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !13098, !ctir !760
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !13098, !tbaa !11603, !ctir !759
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !13099
  br i1 %tobool19, label %for.body, label %for.end, !dbg !13099

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !13100, !tbaa !2995
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13103, !tbaa !2995
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !13104, !ctir !760
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !13104, !tbaa !11603, !ctir !759
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !13105, !ctir !760
  %35 = load i8*, i8** %data21, align 8, !dbg !13105, !tbaa !11591, !ctir !53
  %cmp22 = icmp eq i8* %32, %35, !dbg !13106
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !13107

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13108, !tbaa !2995
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !13109, !ctir !754
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !13109, !tbaa !11753, !ctir !786
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !13110, !tbaa !2995
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13111, !tbaa !2995
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !13112, !ctir !760
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !13112, !tbaa !11603, !ctir !759
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !13113, !ctir !760
  %41 = load i8*, i8** %data26, align 8, !dbg !13113, !tbaa !11591, !ctir !53
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !13108
  br i1 %call27, label %if.then28, label %if.end39, !dbg !13114

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !13115, metadata !DIExpression()), !dbg !13117
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13118, !tbaa !2995
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !13119, !ctir !760
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !13119, !tbaa !11603, !ctir !759
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !13120, !ctir !760
  %44 = load i8*, i8** %data31, align 8, !dbg !13120, !tbaa !11591, !ctir !53
  store i8* %44, i8** %data29, align 8, !dbg !13117, !tbaa !2995
  %45 = load i8, i8* %delete.addr, align 1, !dbg !13121, !tbaa !3106
  %tobool32 = trunc i8 %45 to i1, !dbg !13121
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !13123

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !13124, metadata !DIExpression()), !dbg !13126
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13127, !tbaa !2995
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !13128, !ctir !760
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !13128, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !13126, !tbaa !2995
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13129, !tbaa !2995
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13130, !ctir !760
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !13130, !tbaa !11603, !ctir !759
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13131, !tbaa !2995
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13132, !ctir !760
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !13133, !tbaa !11603, !ctir !759
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13134, !tbaa !2995
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13135, !tbaa !2995
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !13136
  br label %if.end38, !dbg !13137

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !13138, !tbaa !2995
  store i8* %53, i8** %retval, align 8, !dbg !13139
  br label %return, !dbg !13139

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !13140

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13141, !tbaa !2995
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !13142, !ctir !760
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !13142, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !13143, !tbaa !2995
  br label %for.cond, !dbg !13144, !llvm.loop !13145

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !13147
  br label %return, !dbg !13147

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !13148
  ret i8* %56, !dbg !13148
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #4 !dbg !13149 !ctir !858 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent = alloca i8*, align 8, !ctir !425
  %err = alloca i32, align 4, !ctir !7
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13150, metadata !DIExpression()), !dbg !13151
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13152, metadata !DIExpression()), !dbg !13153
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !13154, metadata !DIExpression()), !dbg !13155
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13156, metadata !DIExpression()), !dbg !13157
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13158, !tbaa !2995
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13159, !tbaa !2995
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !13160
  store i32 %call, i32* %err, align 4, !dbg !13157, !tbaa !2982
  %2 = load i32, i32* %err, align 4, !dbg !13161, !tbaa !2982
  %cmp = icmp eq i32 %2, -1, !dbg !13162
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13161

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !13161

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !13163, !tbaa !2982
  %cmp2 = icmp eq i32 %3, 0, !dbg !13164
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !13163

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !13165, !tbaa !2995
  br label %cond.end, !dbg !13163

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !13166, !tbaa !2995
  br label %cond.end, !dbg !13163

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !13163
  br label %cond.end5, !dbg !13161

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !13161
  ret i8* %cond6, !dbg !13167
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #4 !dbg !13168 !ctir !858 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8, !ctir !53
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !759
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !771
  %candidate = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !759
  %next = alloca %struct.hash_entry*, align 8, !ctir !759
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13169, metadata !DIExpression()), !dbg !13170
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13171, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.declare(metadata i8** %data, metadata !13173, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13175, metadata !DIExpression()), !dbg !13176
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13177, !tbaa !2995
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13178, !tbaa !2995
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !13179
  store i8* %call, i8** %data, align 8, !dbg !13180, !tbaa !2995
  %2 = load i8*, i8** %data, align 8, !dbg !13181, !tbaa !2995
  %tobool = icmp ne i8* %2, null, !dbg !13181
  br i1 %tobool, label %if.end, label %if.then, !dbg !13183

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13184
  br label %return, !dbg !13184

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13185, !tbaa !2995
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !13186, !ctir !754
  %4 = load i64, i64* %n_entries, align 8, !dbg !13187, !tbaa !11565, !ctir !55
  %dec = add i64 %4, -1, !dbg !13187
  store i64 %dec, i64* %n_entries, align 8, !dbg !13187, !tbaa !11565, !ctir !55
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13188, !tbaa !2995
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !13190, !ctir !760
  %6 = load i8*, i8** %data2, align 8, !dbg !13190, !tbaa !11591, !ctir !53
  %tobool3 = icmp ne i8* %6, null, !dbg !13188
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !13191

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13192, !tbaa !2995
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !13194, !ctir !754
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !13195, !tbaa !11558, !ctir !55
  %dec5 = add i64 %8, -1, !dbg !13195
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !13195, !tbaa !11558, !ctir !55
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13196, !tbaa !2995
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !13198, !ctir !754
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !13198, !tbaa !11558, !ctir !55
  %conv = uitofp i64 %10 to float, !dbg !13196
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13199, !tbaa !2995
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !13200, !ctir !754
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !13200, !tbaa !12095, !ctir !771
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !13201, !ctir !772
  %13 = load float, float* %shrink_threshold, align 4, !dbg !13201, !tbaa !12225, !ctir !777
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13202, !tbaa !2995
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !13203, !ctir !754
  %15 = load i64, i64* %n_buckets, align 8, !dbg !13203, !tbaa !11550, !ctir !55
  %conv7 = uitofp i64 %15 to float, !dbg !13202
  %mul = fmul float %13, %conv7, !dbg !13204
  %cmp = fcmp olt float %conv, %mul, !dbg !13205
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !13206

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13207, !tbaa !2995
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !13209
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13210, !tbaa !2995
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !13212, !ctir !754
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !13212, !tbaa !11558, !ctir !55
  %conv12 = uitofp i64 %18 to float, !dbg !13210
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13213, !tbaa !2995
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !13214, !ctir !754
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !13214, !tbaa !12095, !ctir !771
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !13215, !ctir !772
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !13215, !tbaa !12225, !ctir !777
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13216, !tbaa !2995
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !13217, !ctir !754
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !13217, !tbaa !11550, !ctir !55
  %conv16 = uitofp i64 %23 to float, !dbg !13216
  %mul17 = fmul float %21, %conv16, !dbg !13218
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !13219
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !13220

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !13221, metadata !DIExpression()), !dbg !13223
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13224, !tbaa !2995
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !13225, !ctir !754
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13225, !tbaa !12095, !ctir !771
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !13223, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !13226, metadata !DIExpression()), !dbg !13227
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13228, !tbaa !2995
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !13229, !ctir !772
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !13229, !tbaa !12263
  %tobool23 = trunc i8 %27 to i1, !dbg !13229, !ctir !120
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !13228

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13230, !tbaa !2995
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !13231, !ctir !754
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !13231, !tbaa !11550, !ctir !55
  %conv26 = uitofp i64 %29 to float, !dbg !13230
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13232, !tbaa !2995
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !13233, !ctir !772
  %31 = load float, float* %shrink_factor, align 4, !dbg !13233, !tbaa !12234, !ctir !777
  %mul27 = fmul float %conv26, %31, !dbg !13234
  br label %cond.end, !dbg !13228

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13235, !tbaa !2995
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !13236, !ctir !754
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !13236, !tbaa !11550, !ctir !55
  %conv29 = uitofp i64 %33 to float, !dbg !13235
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13237, !tbaa !2995
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !13238, !ctir !772
  %35 = load float, float* %shrink_factor30, align 4, !dbg !13238, !tbaa !12234, !ctir !777
  %mul31 = fmul float %conv29, %35, !dbg !13239
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13240, !tbaa !2995
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !13241, !ctir !772
  %37 = load float, float* %growth_threshold, align 4, !dbg !13241, !tbaa !12206, !ctir !777
  %mul32 = fmul float %mul31, %37, !dbg !13242
  br label %cond.end, !dbg !13228

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !13228
  %conv33 = fptoui float %cond to i64, !dbg !13243
  store i64 %conv33, i64* %candidate, align 8, !dbg !13227, !tbaa !3848
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13244, !tbaa !2995
  %39 = load i64, i64* %candidate, align 8, !dbg !13246, !tbaa !3848
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !13247
  br i1 %call34, label %if.end39, label %if.then35, !dbg !13248

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13249, metadata !DIExpression()), !dbg !13251
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13252, !tbaa !2995
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !13253, !ctir !754
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !13253, !tbaa !12155, !ctir !759
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !13251, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !13254, metadata !DIExpression()), !dbg !13255
  br label %while.cond, !dbg !13256

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13257, !tbaa !2995
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !13256
  br i1 %tobool36, label %while.body, label %while.end, !dbg !13256

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13258, !tbaa !2995
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !13260, !ctir !760
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !13260, !tbaa !11603, !ctir !759
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !13261, !tbaa !2995
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13262, !tbaa !2995
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !13262
  call void @free(i8* %46) #10, !dbg !13263
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13264, !tbaa !2995
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !13265, !tbaa !2995
  br label %while.cond, !dbg !13256, !llvm.loop !13266

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13268, !tbaa !2995
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !13269, !ctir !754
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !13270, !tbaa !12155, !ctir !759
  br label %if.end39, !dbg !13271

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !13272

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !13273

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !13274

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !13275, !tbaa !2995
  store i8* %49, i8** %retval, align 8, !dbg !13276
  br label %return, !dbg !13276

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !13277
  ret i8* %50, !dbg !13277
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash(i8* %x, i64 %table_size) #9 !dbg !13278 !ctir !547 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1799
  %tmp = alloca i64, align 8, !ctir !55
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13280, metadata !DIExpression()), !dbg !13281
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !13282, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !13284, metadata !DIExpression()), !dbg !13285
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13286, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13286
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !13285, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !13287, metadata !DIExpression()), !dbg !13288
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13289, !tbaa !2995
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !13290, !ctir !1800
  %3 = load i8*, i8** %name, align 8, !dbg !13290, !tbaa !11131, !ctir !9
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !13291, !tbaa !3848
  %call = call i64 @hash_pjw(i8* %3, i64 %4) #14, !dbg !13292
  store i64 %call, i64* %tmp, align 8, !dbg !13288, !tbaa !3848
  %5 = load i64, i64* %tmp, align 8, !dbg !13293, !tbaa !3848
  %6 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13294, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13295, !ctir !1800
  %7 = load i64, i64* %st_ino, align 8, !dbg !13295, !tbaa !11138, !ctir !227
  %xor = xor i64 %5, %7, !dbg !13296
  %8 = load i64, i64* %table_size.addr, align 8, !dbg !13297, !tbaa !3848
  %rem = urem i64 %xor, %8, !dbg !13298
  ret i64 %rem, !dbg !13299
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash_no_name(i8* %x, i64 %table_size) #9 !dbg !13300 !ctir !547 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1799
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13301, metadata !DIExpression()), !dbg !13302
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !13303, metadata !DIExpression()), !dbg !13304
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !13305, metadata !DIExpression()), !dbg !13306
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13307, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13307
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !13306, !tbaa !2995
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13308, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 1, !dbg !13309, !ctir !1800
  %3 = load i64, i64* %st_ino, align 8, !dbg !13309, !tbaa !11138, !ctir !227
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !13310, !tbaa !3848
  %rem = urem i64 %3, %4, !dbg !13311
  ret i64 %rem, !dbg !13312
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @triple_compare(i8* %x, i8* %y) #4 !dbg !13313 !ctir !549 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1799
  %b = alloca %struct.F_triple*, align 8, !ctir !1799
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13314, metadata !DIExpression()), !dbg !13315
  store i8* %y, i8** %y.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !13316, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13318, metadata !DIExpression()), !dbg !13319
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13320, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13320
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13319, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !13321, metadata !DIExpression()), !dbg !13322
  %2 = load i8*, i8** %y.addr, align 8, !dbg !13323, !tbaa !2995
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !13323
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !13322, !tbaa !2995
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13324, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !13324, !ctir !1800
  %5 = load i64, i64* %st_ino, align 8, !dbg !13324, !tbaa !11138, !ctir !227
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13324, !tbaa !2995
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13324, !ctir !1800
  %7 = load i64, i64* %st_ino1, align 8, !dbg !13324, !tbaa !11138, !ctir !227
  %cmp = icmp eq i64 %5, %7, !dbg !13324
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13324

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13324, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !13324, !ctir !1800
  %9 = load i64, i64* %st_dev, align 8, !dbg !13324, !tbaa !11144, !ctir !230
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13324, !tbaa !2995
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !13324, !ctir !1800
  %11 = load i64, i64* %st_dev2, align 8, !dbg !13324, !tbaa !11144, !ctir !230
  %cmp3 = icmp eq i64 %9, %11, !dbg !13324
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !13325

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13326, !tbaa !2995
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !13327, !ctir !1800
  %13 = load i8*, i8** %name, align 8, !dbg !13327, !tbaa !11131, !ctir !9
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13328, !tbaa !2995
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !13329, !ctir !1800
  %15 = load i8*, i8** %name4, align 8, !dbg !13329, !tbaa !11131, !ctir !9
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !13330
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ], !dbg !13331
  %17 = zext i1 %16 to i64, !dbg !13332
  %cond = select i1 %16, i32 1, i32 0, !dbg !13332
  %tobool = icmp ne i32 %cond, 0, !dbg !13332
  ret i1 %tobool, !dbg !13333
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @triple_compare_ino_str(i8* %x, i8* %y) #9 !dbg !13334 !ctir !549 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1799
  %b = alloca %struct.F_triple*, align 8, !ctir !1799
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13335, metadata !DIExpression()), !dbg !13336
  store i8* %y, i8** %y.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !13337, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13339, metadata !DIExpression()), !dbg !13340
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13341, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13341
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13340, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !13342, metadata !DIExpression()), !dbg !13343
  %2 = load i8*, i8** %y.addr, align 8, !dbg !13344, !tbaa !2995
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !13344
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !13343, !tbaa !2995
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13345, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !13345, !ctir !1800
  %5 = load i64, i64* %st_ino, align 8, !dbg !13345, !tbaa !11138, !ctir !227
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13345, !tbaa !2995
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13345, !ctir !1800
  %7 = load i64, i64* %st_ino1, align 8, !dbg !13345, !tbaa !11138, !ctir !227
  %cmp = icmp eq i64 %5, %7, !dbg !13345
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13345

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13345, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !13345, !ctir !1800
  %9 = load i64, i64* %st_dev, align 8, !dbg !13345, !tbaa !11144, !ctir !230
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13345, !tbaa !2995
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !13345, !ctir !1800
  %11 = load i64, i64* %st_dev2, align 8, !dbg !13345, !tbaa !11144, !ctir !230
  %cmp3 = icmp eq i64 %9, %11, !dbg !13345
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !13346

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13347, !tbaa !2995
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !13347, !ctir !1800
  %13 = load i8*, i8** %name, align 8, !dbg !13347, !tbaa !11131, !ctir !9
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13347, !tbaa !2995
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !13347, !ctir !1800
  %15 = load i8*, i8** %name4, align 8, !dbg !13347, !tbaa !11131, !ctir !9
  %call = call i32 @strcmp(i8* %13, i8* %15) #14, !dbg !13347
  %cmp5 = icmp eq i32 %call, 0, !dbg !13347
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !13348
  %17 = zext i1 %16 to i64, !dbg !13349
  %cond = select i1 %16, i32 1, i32 0, !dbg !13349
  %tobool = icmp ne i32 %cond, 0, !dbg !13349
  ret i1 %tobool, !dbg !13350
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @triple_free(i8* %x) #4 !dbg !13351 !ctir !545 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1806
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13352, metadata !DIExpression()), !dbg !13353
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13354, metadata !DIExpression()), !dbg !13355
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13356, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13356
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13355, !tbaa !2995
  %2 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13357, !tbaa !2995
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !13358, !ctir !1801
  %3 = load i8*, i8** %name, align 8, !dbg !13358, !tbaa !11131, !ctir !9
  call void @free(i8* %3) #10, !dbg !13359
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13360, !tbaa !2995
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !13360
  call void @free(i8* %5) #10, !dbg !13361
  ret void, !dbg !13362
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendirat(i32 %dir_fd, i8* %dir, i32 %extra_flags, i32* %pnew_fd) #4 !dbg !13363 !ctir !1810 {
entry:
  %retval = alloca %struct.__dirstream*, align 8
  %dir_fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %extra_flags.addr = alloca i32, align 4
  %pnew_fd.addr = alloca i32*, align 8
  %open_flags = alloca i32, align 4, !ctir !7
  %new_fd = alloca i32, align 4, !ctir !7
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !607
  %fdopendir_errno = alloca i32, align 4, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !13365, metadata !DIExpression()), !dbg !13366
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !13367, metadata !DIExpression()), !dbg !13368
  store i32 %extra_flags, i32* %extra_flags.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %extra_flags.addr, metadata !13369, metadata !DIExpression()), !dbg !13370
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !13371, metadata !DIExpression()), !dbg !13372
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !13373, metadata !DIExpression()), !dbg !13374
  %0 = load i32, i32* %extra_flags.addr, align 4, !dbg !13375, !tbaa !2982
  %or = or i32 592128, %0, !dbg !13376
  store i32 %or, i32* %open_flags, align 4, !dbg !13374, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %new_fd, metadata !13377, metadata !DIExpression()), !dbg !13378
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !13379, !tbaa !2982
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !13380, !tbaa !2995
  %3 = load i32, i32* %open_flags, align 4, !dbg !13381, !tbaa !2982
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %1, i8* %2, i32 %3), !dbg !13382
  store i32 %call, i32* %new_fd, align 4, !dbg !13378, !tbaa !2982
  %4 = load i32, i32* %new_fd, align 4, !dbg !13383, !tbaa !2982
  %cmp = icmp slt i32 %4, 0, !dbg !13385
  br i1 %cmp, label %if.then, label %if.end, !dbg !13386

if.then:                                          ; preds = %entry
  store %struct.__dirstream* null, %struct.__dirstream** %retval, align 8, !dbg !13387
  br label %return, !dbg !13387

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !13388, metadata !DIExpression()), !dbg !13389
  %5 = load i32, i32* %new_fd, align 4, !dbg !13390, !tbaa !2982
  %call1 = call %struct.__dirstream* @fdopendir(i32 %5), !dbg !13391
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !13389, !tbaa !2995
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13392, !tbaa !2995
  %tobool = icmp ne %struct.__dirstream* %6, null, !dbg !13392
  br i1 %tobool, label %if.then2, label %if.else, !dbg !13394

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %new_fd, align 4, !dbg !13395, !tbaa !2982
  %8 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !13396, !tbaa !2995
  store i32 %7, i32* %8, align 4, !dbg !13397, !tbaa !2982, !ctir !7
  br label %if.end6, !dbg !13398

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %fdopendir_errno, metadata !13399, metadata !DIExpression()), !dbg !13401
  %call3 = call i32* @__errno_location() #15, !dbg !13402
  %9 = load i32, i32* %call3, align 4, !dbg !13402, !tbaa !2982, !ctir !7
  store i32 %9, i32* %fdopendir_errno, align 4, !dbg !13401, !tbaa !2982
  %10 = load i32, i32* %new_fd, align 4, !dbg !13403, !tbaa !2982
  %call4 = call i32 @close(i32 %10), !dbg !13404
  %11 = load i32, i32* %fdopendir_errno, align 4, !dbg !13405, !tbaa !2982
  %call5 = call i32* @__errno_location() #15, !dbg !13406
  store i32 %11, i32* %call5, align 4, !dbg !13407, !tbaa !2982, !ctir !7
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then2
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13408, !tbaa !2995
  store %struct.__dirstream* %12, %struct.__dirstream** %retval, align 8, !dbg !13409
  br label %return, !dbg !13409

return:                                           ; preds = %if.end6, %if.then
  %13 = load %struct.__dirstream*, %struct.__dirstream** %retval, align 8, !dbg !13410
  ret %struct.__dirstream* %13, !dbg !13410
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @priv_set_remove_linkdir() #4 !dbg !13411 !ctir !1815 {
entry:
  ret i32 -1, !dbg !13413
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @priv_set_restore_linkdir() #4 !dbg !13414 !ctir !1815 {
entry:
  ret i32 -1, !dbg !13415
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #4 !dbg !13416 !ctir !136 {
entry:
  %argv0.addr = alloca i8*, align 8
  %slash = alloca i8*, align 8, !ctir !115
  %base = alloca i8*, align 8, !ctir !115
  store i8* %argv0, i8** %argv0.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !13417, metadata !DIExpression()), !dbg !13418
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !13419, metadata !DIExpression()), !dbg !13420
  call void @llvm.dbg.declare(metadata i8** %base, metadata !13421, metadata !DIExpression()), !dbg !13422
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !13423, !tbaa !2995
  %cmp = icmp eq i8* %0, null, !dbg !13425
  br i1 %cmp, label %if.then, label %if.end, !dbg !13426

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !13427, !tbaa !2995
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.295, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !13429
  call void @abort() #13, !dbg !13430
  unreachable, !dbg !13430

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !13431, !tbaa !2995
  %call1 = call i8* @strrchr(i8* %2, i32 47) #14, !dbg !13432
  store i8* %call1, i8** %slash, align 8, !dbg !13433, !tbaa !2995
  %3 = load i8*, i8** %slash, align 8, !dbg !13434, !tbaa !2995
  %cmp2 = icmp ne i8* %3, null, !dbg !13435
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !13434

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !13436, !tbaa !2995
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !13437
  br label %cond.end, !dbg !13434

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !13438, !tbaa !2995
  br label %cond.end, !dbg !13434

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !13434
  store i8* %cond, i8** %base, align 8, !dbg !13439, !tbaa !2995
  %6 = load i8*, i8** %base, align 8, !dbg !13440, !tbaa !2995
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !13442, !tbaa !2995
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !13443
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !13443
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13443
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !13444
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !13445

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !13446, !tbaa !2995
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !13447
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.296, i64 0, i64 0), i64 7) #14, !dbg !13448
  %cmp6 = icmp eq i32 %call5, 0, !dbg !13449
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !13450

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !13451, !tbaa !2995
  store i8* %9, i8** %argv0.addr, align 8, !dbg !13453, !tbaa !2995
  %10 = load i8*, i8** %base, align 8, !dbg !13454, !tbaa !2995
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.297, i64 0, i64 0), i64 3) #14, !dbg !13456
  %cmp9 = icmp eq i32 %call8, 0, !dbg !13457
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !13458

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !13459, !tbaa !2995
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !13461
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !13462, !tbaa !2995
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !13463, !tbaa !2995
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !13464, !tbaa !2995
  br label %if.end12, !dbg !13465

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !13466

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !13467, !tbaa !2995
  store i8* %13, i8** @program_name, align 8, !dbg !13468, !tbaa !2995
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !13469, !tbaa !2995
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !13470, !tbaa !2995
  ret void, !dbg !13471
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qcopy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !13472 !ctir !1584 {
entry:
  %retval = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %struct.permission_context, align 8, !ctir !13474
  %ret = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !13480, metadata !DIExpression()), !dbg !13481
  store i32 %source_desc, i32* %source_desc.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !13482, metadata !DIExpression()), !dbg !13483
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !13484, metadata !DIExpression()), !dbg !13485
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !13486, metadata !DIExpression()), !dbg !13487
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13488, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !13490, metadata !DIExpression()), !dbg !13491
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13492, metadata !DIExpression()), !dbg !13493
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !13494, !tbaa !2995
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !13495, !tbaa !2982
  %2 = load i32, i32* %mode.addr, align 4, !dbg !13496, !tbaa !2982
  %call = call i32 @get_permissions(i8* %0, i32 %1, i32 %2, %struct.permission_context* %ctx), !dbg !13497
  store i32 %call, i32* %ret, align 4, !dbg !13498, !tbaa !2982
  %3 = load i32, i32* %ret, align 4, !dbg !13499, !tbaa !2982
  %cmp = icmp ne i32 %3, 0, !dbg !13501
  br i1 %cmp, label %if.then, label %if.end, !dbg !13502

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4, !dbg !13503
  br label %return, !dbg !13503

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !13504, !tbaa !2995
  %5 = load i32, i32* %dest_desc.addr, align 4, !dbg !13505, !tbaa !2982
  %call1 = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %4, i32 %5), !dbg !13506
  store i32 %call1, i32* %ret, align 4, !dbg !13507, !tbaa !2982
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !13508
  %6 = load i32, i32* %ret, align 4, !dbg !13509, !tbaa !2982
  store i32 %6, i32* %retval, align 4, !dbg !13510
  br label %return, !dbg !13510

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !13511
  ret i32 %7, !dbg !13511
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qset_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !13512 !ctir !1589 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %struct.permission_context, align 8, !ctir !13514
  %ret = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13520, metadata !DIExpression()), !dbg !13521
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !13522, metadata !DIExpression()), !dbg !13523
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13524, metadata !DIExpression()), !dbg !13525
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !13526, metadata !DIExpression()), !dbg !13527
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13528, metadata !DIExpression()), !dbg !13529
  %0 = bitcast %struct.permission_context* %ctx to i8*, !dbg !13530
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !13530
  %1 = load i32, i32* %mode.addr, align 4, !dbg !13531, !tbaa !2982
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %ctx, i32 0, i32 0, !dbg !13532, !ctir !13514
  store i32 %1, i32* %mode1, align 8, !dbg !13533, !tbaa !13534, !ctir !160
  %2 = load i8*, i8** %name.addr, align 8, !dbg !13536, !tbaa !2995
  %3 = load i32, i32* %desc.addr, align 4, !dbg !13537, !tbaa !2982
  %call = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %2, i32 %3), !dbg !13538
  store i32 %call, i32* %ret, align 4, !dbg !13539, !tbaa !2982
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !13540
  %4 = load i32, i32* %ret, align 4, !dbg !13541, !tbaa !2982
  ret i32 %4, !dbg !13542
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #4 !dbg !13543 !ctir !948 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !7
  %p = alloca %struct.quoting_options*, align 8, !ctir !950
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13544, metadata !DIExpression()), !dbg !13545
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13546, metadata !DIExpression()), !dbg !13547
  %call = call i32* @__errno_location() #15, !dbg !13548
  %0 = load i32, i32* %call, align 4, !dbg !13548, !tbaa !2982, !ctir !7
  store i32 %0, i32* %e, align 4, !dbg !13547, !tbaa !2982
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !13549, metadata !DIExpression()), !dbg !13550
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13551, !tbaa !2995
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13551
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13551

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13552, !tbaa !2995
  br label %cond.end, !dbg !13551

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13551

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13551
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !13551
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !13553
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !13553
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !13550, !tbaa !2995
  %5 = load i32, i32* %e, align 4, !dbg !13554, !tbaa !2982
  %call2 = call i32* @__errno_location() #15, !dbg !13555
  store i32 %5, i32* %call2, align 4, !dbg !13556, !tbaa !2982, !ctir !7
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13557, !tbaa !2995
  ret %struct.quoting_options* %6, !dbg !13558
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #4 !dbg !13559 !ctir !960 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13560, metadata !DIExpression()), !dbg !13561
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13562, !tbaa !2995
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13562
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13562

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13563, !tbaa !2995
  br label %cond.end, !dbg !13562

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13562

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13562
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !13564, !ctir !963
  %2 = load i32, i32* %style, align 8, !dbg !13564, !tbaa !13565, !ctir !926
  ret i32 %2, !dbg !13567
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #4 !dbg !13568 !ctir !964 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13569, metadata !DIExpression()), !dbg !13570
  store i32 %s, i32* %s.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !13571, metadata !DIExpression()), !dbg !13572
  %0 = load i32, i32* %s.addr, align 4, !dbg !13573, !tbaa !3657
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13574, !tbaa !2995
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13574
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13574

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13575, !tbaa !2995
  br label %cond.end, !dbg !13574

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13574

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13574
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !13576, !ctir !951
  store i32 %0, i32* %style, align 8, !dbg !13577, !tbaa !13565, !ctir !926
  ret void, !dbg !13578
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #4 !dbg !13579 !ctir !966 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1, !ctir !466
  %p = alloca i32*, align 8, !ctir !968
  %shift = alloca i32, align 4, !ctir !7
  %r = alloca i32, align 4, !ctir !7
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13580, metadata !DIExpression()), !dbg !13581
  store i8 %c, i8* %c.addr, align 1, !tbaa !3657
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !13582, metadata !DIExpression()), !dbg !13583
  store i32 %i, i32* %i.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13584, metadata !DIExpression()), !dbg !13585
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !13586, metadata !DIExpression()), !dbg !13587
  %0 = load i8, i8* %c.addr, align 1, !dbg !13588, !tbaa !3657
  store i8 %0, i8* %uc, align 1, !dbg !13587, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32** %p, metadata !13589, metadata !DIExpression()), !dbg !13590
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13591, !tbaa !2995
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13591
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13591

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13592, !tbaa !2995
  br label %cond.end, !dbg !13591

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13591

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13591
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !13593, !ctir !951
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !13594
  %3 = load i8, i8* %uc, align 1, !dbg !13595, !tbaa !3657
  %conv = zext i8 %3 to i64, !dbg !13595
  %div = udiv i64 %conv, 32, !dbg !13596
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !13597
  store i32* %add.ptr, i32** %p, align 8, !dbg !13590, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !13598, metadata !DIExpression()), !dbg !13599
  %4 = load i8, i8* %uc, align 1, !dbg !13600, !tbaa !3657
  %conv1 = zext i8 %4 to i64, !dbg !13600
  %rem = urem i64 %conv1, 32, !dbg !13601
  %conv2 = trunc i64 %rem to i32, !dbg !13600
  store i32 %conv2, i32* %shift, align 4, !dbg !13599, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13602, metadata !DIExpression()), !dbg !13603
  %5 = load i32*, i32** %p, align 8, !dbg !13604, !tbaa !2995
  %6 = load i32, i32* %5, align 4, !dbg !13605, !tbaa !2982, !ctir !70
  %7 = load i32, i32* %shift, align 4, !dbg !13606, !tbaa !2982
  %shr = lshr i32 %6, %7, !dbg !13607
  %and = and i32 %shr, 1, !dbg !13608
  store i32 %and, i32* %r, align 4, !dbg !13603, !tbaa !2982
  %8 = load i32, i32* %i.addr, align 4, !dbg !13609, !tbaa !2982
  %and3 = and i32 %8, 1, !dbg !13610
  %9 = load i32, i32* %r, align 4, !dbg !13611, !tbaa !2982
  %xor = xor i32 %and3, %9, !dbg !13612
  %10 = load i32, i32* %shift, align 4, !dbg !13613, !tbaa !2982
  %shl = shl i32 %xor, %10, !dbg !13614
  %11 = load i32*, i32** %p, align 8, !dbg !13615, !tbaa !2995
  %12 = load i32, i32* %11, align 4, !dbg !13616, !tbaa !2982, !ctir !70
  %xor4 = xor i32 %12, %shl, !dbg !13616
  store i32 %xor4, i32* %11, align 4, !dbg !13616, !tbaa !2982, !ctir !70
  %13 = load i32, i32* %r, align 4, !dbg !13617, !tbaa !2982
  ret i32 %13, !dbg !13618
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #4 !dbg !13619 !ctir !969 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %i.addr = alloca i32, align 4
  %r = alloca i32, align 4, !ctir !7
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13620, metadata !DIExpression()), !dbg !13621
  store i32 %i, i32* %i.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13622, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13624, metadata !DIExpression()), !dbg !13625
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13626, !tbaa !2995
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13626
  br i1 %tobool, label %if.end, label %if.then, !dbg !13628

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !13629, !tbaa !2995
  br label %if.end, !dbg !13630

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13631, !tbaa !2995
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !13632, !ctir !951
  %2 = load i32, i32* %flags, align 4, !dbg !13632, !tbaa !13633, !ctir !7
  store i32 %2, i32* %r, align 4, !dbg !13634, !tbaa !2982
  %3 = load i32, i32* %i.addr, align 4, !dbg !13635, !tbaa !2982
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13636, !tbaa !2995
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !13637, !ctir !951
  store i32 %3, i32* %flags1, align 4, !dbg !13638, !tbaa !13633, !ctir !7
  %5 = load i32, i32* %r, align 4, !dbg !13639, !tbaa !2982
  ret i32 %5, !dbg !13640
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #4 !dbg !13641 !ctir !971 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13642, metadata !DIExpression()), !dbg !13643
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !13644, metadata !DIExpression()), !dbg !13645
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !13646, metadata !DIExpression()), !dbg !13647
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13648, !tbaa !2995
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13648
  br i1 %tobool, label %if.end, label %if.then, !dbg !13650

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !13651, !tbaa !2995
  br label %if.end, !dbg !13652

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13653, !tbaa !2995
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !13654, !ctir !951
  store i32 10, i32* %style, align 8, !dbg !13655, !tbaa !13565, !ctir !926
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !13656, !tbaa !2995
  %tobool1 = icmp ne i8* %2, null, !dbg !13656
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !13658

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !13659, !tbaa !2995
  %tobool2 = icmp ne i8* %3, null, !dbg !13659
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !13660

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #13, !dbg !13661
  unreachable, !dbg !13661

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !13662, !tbaa !2995
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13663, !tbaa !2995
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !13664, !ctir !951
  store i8* %4, i8** %left_quote5, align 8, !dbg !13665, !tbaa !13666, !ctir !115
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !13667, !tbaa !2995
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13668, !tbaa !2995
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !13669, !ctir !951
  store i8* %6, i8** %right_quote6, align 8, !dbg !13670, !tbaa !13671, !ctir !115
  ret void, !dbg !13672
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !13673 !ctir !973 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !962
  %e = alloca i32, align 4, !ctir !7
  %r = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13674, metadata !DIExpression()), !dbg !13675
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !13676, metadata !DIExpression()), !dbg !13677
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13678, metadata !DIExpression()), !dbg !13679
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !13680, metadata !DIExpression()), !dbg !13681
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13682, metadata !DIExpression()), !dbg !13683
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !13684, metadata !DIExpression()), !dbg !13685
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13686, !tbaa !2995
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13686
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13686

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13687, !tbaa !2995
  br label %cond.end, !dbg !13686

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13686

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13686
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !13685, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13688, metadata !DIExpression()), !dbg !13689
  %call = call i32* @__errno_location() #15, !dbg !13690
  %2 = load i32, i32* %call, align 4, !dbg !13690, !tbaa !2982, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !13689, !tbaa !2982
  call void @llvm.dbg.declare(metadata i64* %r, metadata !13691, metadata !DIExpression()), !dbg !13692
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !13693, !tbaa !2995
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !13694, !tbaa !3848
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !13695, !tbaa !2995
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !13696, !tbaa !3848
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13697, !tbaa !2995
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !13698, !ctir !963
  %8 = load i32, i32* %style, align 8, !dbg !13698, !tbaa !13565, !ctir !926
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13699, !tbaa !2995
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !13700, !ctir !963
  %10 = load i32, i32* %flags, align 4, !dbg !13700, !tbaa !13633, !ctir !7
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13701, !tbaa !2995
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !13702, !ctir !963
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !13701
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13703, !tbaa !2995
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !13704, !ctir !963
  %13 = load i8*, i8** %left_quote, align 8, !dbg !13704, !tbaa !13666, !ctir !115
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13705, !tbaa !2995
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !13706, !ctir !963
  %15 = load i8*, i8** %right_quote, align 8, !dbg !13706, !tbaa !13671, !ctir !115
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !13707
  store i64 %call1, i64* %r, align 8, !dbg !13692, !tbaa !3848
  %16 = load i32, i32* %e, align 4, !dbg !13708, !tbaa !2982
  %call2 = call i32* @__errno_location() #15, !dbg !13709
  store i32 %16, i32* %call2, align 4, !dbg !13710, !tbaa !2982, !ctir !7
  %17 = load i64, i64* %r, align 8, !dbg !13711, !tbaa !3848
  ret i64 %17, !dbg !13712
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #4 !dbg !13713 !ctir !1020 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %quote_these_too.addr = alloca i32*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !55
  %len = alloca i64, align 8, !ctir !55
  %orig_buffersize = alloca i64, align 8, !ctir !55
  %quote_string = alloca i8*, align 8, !ctir !115
  %quote_string_len = alloca i64, align 8, !ctir !55
  %backslash_escapes = alloca i8, align 1, !ctir !120
  %unibyte_locale = alloca i8, align 1, !ctir !120
  %elide_outer_quotes = alloca i8, align 1, !ctir !120
  %pending_shell_escape_end = alloca i8, align 1, !ctir !120
  %encountered_single_quote = alloca i8, align 1, !ctir !120
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !120
  %c = alloca i8, align 1, !ctir !466
  %esc = alloca i8, align 1, !ctir !466
  %is_right_quote = alloca i8, align 1, !ctir !120
  %escaping = alloca i8, align 1, !ctir !120
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !120
  %m = alloca i64, align 8, !ctir !55
  %printable = alloca i8, align 1, !ctir !120
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1026
  %w = alloca i32, align 4, !ctir !1041
  %bytes = alloca i64, align 8, !ctir !55
  %j = alloca i64, align 8, !ctir !55
  %ilim = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13714, metadata !DIExpression()), !dbg !13715
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !13716, metadata !DIExpression()), !dbg !13717
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13718, metadata !DIExpression()), !dbg !13719
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !13720, metadata !DIExpression()), !dbg !13721
  store i32 %quoting_style, i32* %quoting_style.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !13722, metadata !DIExpression()), !dbg !13723
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13724, metadata !DIExpression()), !dbg !13725
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !13726, metadata !DIExpression()), !dbg !13727
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !13728, metadata !DIExpression()), !dbg !13729
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !13730, metadata !DIExpression()), !dbg !13731
  call void @llvm.dbg.declare(metadata i64* %i, metadata !13732, metadata !DIExpression()), !dbg !13733
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13734, metadata !DIExpression()), !dbg !13735
  store i64 0, i64* %len, align 8, !dbg !13735, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !13736, metadata !DIExpression()), !dbg !13737
  store i64 0, i64* %orig_buffersize, align 8, !dbg !13737, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !13738, metadata !DIExpression()), !dbg !13739
  store i8* null, i8** %quote_string, align 8, !dbg !13739, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !13740, metadata !DIExpression()), !dbg !13741
  store i64 0, i64* %quote_string_len, align 8, !dbg !13741, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !13742, metadata !DIExpression()), !dbg !13743
  store i8 0, i8* %backslash_escapes, align 1, !dbg !13743, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !13744, metadata !DIExpression()), !dbg !13745
  %call = call i64 @__ctype_get_mb_cur_max() #10, !dbg !13746
  %cmp = icmp eq i64 %call, 1, !dbg !13747
  %frombool = zext i1 %cmp to i8, !dbg !13745
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !13745, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !13748, metadata !DIExpression()), !dbg !13749
  %0 = load i32, i32* %flags.addr, align 4, !dbg !13750, !tbaa !2982
  %and = and i32 %0, 2, !dbg !13751
  %cmp1 = icmp ne i32 %and, 0, !dbg !13752
  %frombool2 = zext i1 %cmp1 to i8, !dbg !13749
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !13749, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !13753, metadata !DIExpression()), !dbg !13754
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !13754, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !13755, metadata !DIExpression()), !dbg !13756
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !13756, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !13757, metadata !DIExpression()), !dbg !13758
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !13758, !tbaa !3106
  br label %process_input, !dbg !13759

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !13760), !dbg !13761
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !13762, !tbaa !3657
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !13763

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !13764, !tbaa !3657
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !13766, !tbaa !3106
  br label %sw.bb3, !dbg !13767

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13768, !tbaa !3106
  %tobool = trunc i8 %2 to i1, !dbg !13768
  br i1 %tobool, label %if.end6, label %if.then, !dbg !13770

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !13771

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !13772, !tbaa !3848
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !13772, !tbaa !3848
  %cmp4 = icmp ult i64 %3, %4, !dbg !13772
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !13775

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !13772, !tbaa !2995
  %6 = load i64, i64* %len, align 8, !dbg !13772, !tbaa !3848
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !13772, !ctir !9
  store i8 34, i8* %arrayidx, align 1, !dbg !13772, !tbaa !3657
  br label %if.end, !dbg !13772

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !13775, !tbaa !3848
  %inc = add i64 %7, 1, !dbg !13775
  store i64 %inc, i64* %len, align 8, !dbg !13775, !tbaa !3848
  br label %do.end, !dbg !13775

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !13775

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13776, !tbaa !3106
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.312, i64 0, i64 0), i8** %quote_string, align 8, !dbg !13777, !tbaa !2995
  store i64 1, i64* %quote_string_len, align 8, !dbg !13778, !tbaa !3848
  br label %sw.epilog, !dbg !13779

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13780, !tbaa !3106
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !13781, !tbaa !3106
  br label %sw.epilog, !dbg !13782

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !13783, !tbaa !3657
  %cmp9 = icmp ne i32 %8, 10, !dbg !13786
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !13787

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !13788, !tbaa !3657
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.313, i64 0, i64 0), i32 %9), !dbg !13790
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !13791, !tbaa !2995
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !13792, !tbaa !3657
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), i32 %10), !dbg !13793
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !13794, !tbaa !2995
  br label %if.end13, !dbg !13795

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13796, !tbaa !3106
  %tobool14 = trunc i8 %11 to i1, !dbg !13796
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !13798

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !13799, !tbaa !2995
  store i8* %12, i8** %quote_string, align 8, !dbg !13801, !tbaa !2995
  br label %for.cond, !dbg !13802

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !13803, !tbaa !2995
  %14 = load i8, i8* %13, align 1, !dbg !13805, !tbaa !3657, !ctir !116
  %tobool16 = icmp ne i8 %14, 0, !dbg !13806
  br i1 %tobool16, label %for.body, label %for.end, !dbg !13806

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !13807

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !13808, !tbaa !3848
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !13808, !tbaa !3848
  %cmp18 = icmp ult i64 %15, %16, !dbg !13808
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !13811

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !13808, !tbaa !2995
  %18 = load i8, i8* %17, align 1, !dbg !13808, !tbaa !3657, !ctir !116
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !13808, !tbaa !2995
  %20 = load i64, i64* %len, align 8, !dbg !13808, !tbaa !3848
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !13808, !ctir !9
  store i8 %18, i8* %arrayidx20, align 1, !dbg !13808, !tbaa !3657
  br label %if.end21, !dbg !13808

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !13811, !tbaa !3848
  %inc22 = add i64 %21, 1, !dbg !13811
  store i64 %inc22, i64* %len, align 8, !dbg !13811, !tbaa !3848
  br label %do.end23, !dbg !13811

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !13811

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !13812, !tbaa !2995
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !13812
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !13812, !tbaa !2995
  br label %for.cond, !dbg !13813, !llvm.loop !13814

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !13815

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13816, !tbaa !3106
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !13817, !tbaa !2995
  store i8* %23, i8** %quote_string, align 8, !dbg !13818, !tbaa !2995
  %24 = load i8*, i8** %quote_string, align 8, !dbg !13819, !tbaa !2995
  %call25 = call i64 @strlen(i8* %24) #14, !dbg !13820
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !13821, !tbaa !3848
  br label %sw.epilog, !dbg !13822

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13823, !tbaa !3106
  br label %sw.bb27, !dbg !13824

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !13825, !tbaa !3106
  br label %sw.bb28, !dbg !13826

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13827, !tbaa !3106
  %tobool29 = trunc i8 %25 to i1, !dbg !13827
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !13829

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13830, !tbaa !3106
  br label %if.end31, !dbg !13831

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !13832

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !13833, !tbaa !3657
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13834, !tbaa !3106
  %tobool33 = trunc i8 %26 to i1, !dbg !13834
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !13836

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !13837

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !13838, !tbaa !3848
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !13838, !tbaa !3848
  %cmp36 = icmp ult i64 %27, %28, !dbg !13838
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !13841

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !13838, !tbaa !2995
  %30 = load i64, i64* %len, align 8, !dbg !13838, !tbaa !3848
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !13838, !ctir !9
  store i8 39, i8* %arrayidx38, align 1, !dbg !13838, !tbaa !3657
  br label %if.end39, !dbg !13838

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !13841, !tbaa !3848
  %inc40 = add i64 %31, 1, !dbg !13841
  store i64 %inc40, i64* %len, align 8, !dbg !13841, !tbaa !3848
  br label %do.end41, !dbg !13841

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !13841

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), i8** %quote_string, align 8, !dbg !13842, !tbaa !2995
  store i64 1, i64* %quote_string_len, align 8, !dbg !13843, !tbaa !3848
  br label %sw.epilog, !dbg !13844

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !13845, !tbaa !3106
  br label %sw.epilog, !dbg !13846

sw.default:                                       ; preds = %process_input
  call void @abort() #13, !dbg !13847
  unreachable, !dbg !13847

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !13848, !tbaa !3848
  br label %for.cond44, !dbg !13850

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !13851, !tbaa !3848
  %cmp45 = icmp eq i64 %32, -1, !dbg !13853
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !13851

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !13854, !tbaa !2995
  %34 = load i64, i64* %i, align 8, !dbg !13855, !tbaa !3848
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !13854, !ctir !115
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !13854, !tbaa !3657
  %conv = sext i8 %35 to i32, !dbg !13854
  %cmp47 = icmp eq i32 %conv, 0, !dbg !13856
  %conv48 = zext i1 %cmp47 to i32, !dbg !13856
  br label %cond.end, !dbg !13851

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !13857, !tbaa !3848
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !13858, !tbaa !3848
  %cmp49 = icmp eq i64 %36, %37, !dbg !13859
  %conv50 = zext i1 %cmp49 to i32, !dbg !13859
  br label %cond.end, !dbg !13851

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !13851
  %tobool51 = icmp ne i32 %cond, 0, !dbg !13860
  %lnot = xor i1 %tobool51, true, !dbg !13860
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !13861

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !13862, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !13865, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !13867, metadata !DIExpression()), !dbg !13868
  store i8 0, i8* %is_right_quote, align 1, !dbg !13868, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !13869, metadata !DIExpression()), !dbg !13870
  store i8 0, i8* %escaping, align 1, !dbg !13870, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !13871, metadata !DIExpression()), !dbg !13872
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !13872, !tbaa !3106
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !13873, !tbaa !3106
  %tobool53 = trunc i8 %38 to i1, !dbg !13873
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !13875

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !13876, !tbaa !3657
  %cmp55 = icmp ne i32 %39, 2, !dbg !13877
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !13878

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !13879, !tbaa !3848
  %tobool58 = icmp ne i64 %40, 0, !dbg !13879
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !13880

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !13881, !tbaa !3848
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !13882, !tbaa !3848
  %add = add i64 %41, %42, !dbg !13883
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !13884, !tbaa !3848
  %cmp60 = icmp eq i64 %43, -1, !dbg !13885
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !13886

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !13887, !tbaa !3848
  %cmp63 = icmp ult i64 1, %44, !dbg !13888
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !13884

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !13889, !tbaa !2995
  %call66 = call i64 @strlen(i8* %45) #14, !dbg !13890
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !13891, !tbaa !3848
  br label %cond.end68, !dbg !13884

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !13892, !tbaa !3848
  br label %cond.end68, !dbg !13884

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !13884
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !13893
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !13894

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !13895, !tbaa !2995
  %48 = load i64, i64* %i, align 8, !dbg !13896, !tbaa !3848
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !13897
  %49 = load i8*, i8** %quote_string, align 8, !dbg !13898, !tbaa !2995
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !13899, !tbaa !3848
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #14, !dbg !13900
  %cmp74 = icmp eq i32 %call73, 0, !dbg !13901
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !13902

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13903, !tbaa !3106
  %tobool77 = trunc i8 %51 to i1, !dbg !13903
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !13906

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !13907

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !13908, !tbaa !3106
  br label %if.end80, !dbg !13909

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !13910, !tbaa !2995
  %53 = load i64, i64* %i, align 8, !dbg !13911, !tbaa !3848
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !13910, !ctir !115
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !13910, !tbaa !3657
  store i8 %54, i8* %c, align 1, !dbg !13912, !tbaa !3657
  %55 = load i8, i8* %c, align 1, !dbg !13913, !tbaa !3657
  %conv82 = zext i8 %55 to i32, !dbg !13913
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !13914

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !13915, !tbaa !3106
  %tobool84 = trunc i8 %56 to i1, !dbg !13915
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !13918

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !13919

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13921, !tbaa !3106
  %tobool87 = trunc i8 %57 to i1, !dbg !13921
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !13924

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !13921

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !13924, !tbaa !3106
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !13925, !tbaa !3657
  %cmp90 = icmp eq i32 %58, 2, !dbg !13925
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !13925

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !13925, !tbaa !3106
  %tobool93 = trunc i8 %59 to i1, !dbg !13925
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !13924

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !13927

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !13929, !tbaa !3848
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !13929, !tbaa !3848
  %cmp96 = icmp ult i64 %60, %61, !dbg !13929
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !13932

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !13929, !tbaa !2995
  %63 = load i64, i64* %len, align 8, !dbg !13929, !tbaa !3848
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !13929, !ctir !9
  store i8 39, i8* %arrayidx99, align 1, !dbg !13929, !tbaa !3657
  br label %if.end100, !dbg !13929

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !13932, !tbaa !3848
  %inc101 = add i64 %64, 1, !dbg !13932
  store i64 %inc101, i64* %len, align 8, !dbg !13932, !tbaa !3848
  br label %do.end102, !dbg !13932

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !13927

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !13933, !tbaa !3848
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !13933, !tbaa !3848
  %cmp104 = icmp ult i64 %65, %66, !dbg !13933
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !13936

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !13933, !tbaa !2995
  %68 = load i64, i64* %len, align 8, !dbg !13933, !tbaa !3848
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !13933, !ctir !9
  store i8 36, i8* %arrayidx107, align 1, !dbg !13933, !tbaa !3657
  br label %if.end108, !dbg !13933

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !13936, !tbaa !3848
  %inc109 = add i64 %69, 1, !dbg !13936
  store i64 %inc109, i64* %len, align 8, !dbg !13936, !tbaa !3848
  br label %do.end110, !dbg !13936

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !13927

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !13937, !tbaa !3848
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !13937, !tbaa !3848
  %cmp112 = icmp ult i64 %70, %71, !dbg !13937
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !13940

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !13937, !tbaa !2995
  %73 = load i64, i64* %len, align 8, !dbg !13937, !tbaa !3848
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !13937, !ctir !9
  store i8 39, i8* %arrayidx115, align 1, !dbg !13937, !tbaa !3657
  br label %if.end116, !dbg !13937

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !13940, !tbaa !3848
  %inc117 = add i64 %74, 1, !dbg !13940
  store i64 %inc117, i64* %len, align 8, !dbg !13940, !tbaa !3848
  br label %do.end118, !dbg !13940

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !13927, !tbaa !3106
  br label %if.end119, !dbg !13927

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !13924

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !13941, !tbaa !3848
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !13941, !tbaa !3848
  %cmp121 = icmp ult i64 %75, %76, !dbg !13941
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !13944

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !13941, !tbaa !2995
  %78 = load i64, i64* %len, align 8, !dbg !13941, !tbaa !3848
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !13941, !ctir !9
  store i8 92, i8* %arrayidx124, align 1, !dbg !13941, !tbaa !3657
  br label %if.end125, !dbg !13941

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !13944, !tbaa !3848
  %inc126 = add i64 %79, 1, !dbg !13944
  store i64 %inc126, i64* %len, align 8, !dbg !13944, !tbaa !3848
  br label %do.end127, !dbg !13944

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !13924

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !13945, !tbaa !3657
  %cmp129 = icmp ne i32 %80, 2, !dbg !13947
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !13948

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !13949, !tbaa !3848
  %add132 = add i64 %81, 1, !dbg !13950
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !13951, !tbaa !3848
  %cmp133 = icmp ult i64 %add132, %82, !dbg !13952
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !13953

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !13954, !tbaa !2995
  %84 = load i64, i64* %i, align 8, !dbg !13955, !tbaa !3848
  %add136 = add i64 %84, 1, !dbg !13956
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !13954, !ctir !115
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !13954, !tbaa !3657
  %conv138 = sext i8 %85 to i32, !dbg !13954
  %cmp139 = icmp sle i32 48, %conv138, !dbg !13957
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !13958

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !13959, !tbaa !2995
  %87 = load i64, i64* %i, align 8, !dbg !13960, !tbaa !3848
  %add142 = add i64 %87, 1, !dbg !13961
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !13959, !ctir !115
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !13959, !tbaa !3657
  %conv144 = sext i8 %88 to i32, !dbg !13959
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !13962
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !13963

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !13964

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !13966, !tbaa !3848
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !13966, !tbaa !3848
  %cmp149 = icmp ult i64 %89, %90, !dbg !13966
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !13969

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !13966, !tbaa !2995
  %92 = load i64, i64* %len, align 8, !dbg !13966, !tbaa !3848
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !13966, !ctir !9
  store i8 48, i8* %arrayidx152, align 1, !dbg !13966, !tbaa !3657
  br label %if.end153, !dbg !13966

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !13969, !tbaa !3848
  %inc154 = add i64 %93, 1, !dbg !13969
  store i64 %inc154, i64* %len, align 8, !dbg !13969, !tbaa !3848
  br label %do.end155, !dbg !13969

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !13970

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !13971, !tbaa !3848
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !13971, !tbaa !3848
  %cmp157 = icmp ult i64 %94, %95, !dbg !13971
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !13974

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !13971, !tbaa !2995
  %97 = load i64, i64* %len, align 8, !dbg !13971, !tbaa !3848
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !13971, !ctir !9
  store i8 48, i8* %arrayidx160, align 1, !dbg !13971, !tbaa !3657
  br label %if.end161, !dbg !13971

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !13974, !tbaa !3848
  %inc162 = add i64 %98, 1, !dbg !13974
  store i64 %inc162, i64* %len, align 8, !dbg !13974, !tbaa !3848
  br label %do.end163, !dbg !13974

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !13975

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !13976, !tbaa !3657
  br label %if.end169, !dbg !13977

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !13978, !tbaa !2982
  %and165 = and i32 %99, 1, !dbg !13980
  %tobool166 = icmp ne i32 %and165, 0, !dbg !13980
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !13981

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !13982

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !13983

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !13984, !tbaa !3657
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !13985

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13986, !tbaa !3106
  %tobool172 = trunc i8 %101 to i1, !dbg !13986
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !13989

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !13990

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !13991

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !13992, !tbaa !2982
  %and176 = and i32 %102, 4, !dbg !13994
  %tobool177 = icmp ne i32 %and176, 0, !dbg !13994
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !13995

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !13996, !tbaa !3848
  %add179 = add i64 %103, 2, !dbg !13997
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !13998, !tbaa !3848
  %cmp180 = icmp ult i64 %add179, %104, !dbg !13999
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !14000

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !14001, !tbaa !2995
  %106 = load i64, i64* %i, align 8, !dbg !14002, !tbaa !3848
  %add183 = add i64 %106, 1, !dbg !14003
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !14001, !ctir !115
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !14001, !tbaa !3657
  %conv185 = sext i8 %107 to i32, !dbg !14001
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !14004
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !14005

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !14006, !tbaa !2995
  %109 = load i64, i64* %i, align 8, !dbg !14007, !tbaa !3848
  %add189 = add i64 %109, 2, !dbg !14008
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !14006, !ctir !115
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !14006, !tbaa !3657
  %conv191 = sext i8 %110 to i32, !dbg !14006
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !14009

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14010, !tbaa !3106
  %tobool193 = trunc i8 %111 to i1, !dbg !14010
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !14013

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !14014

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !14015, !tbaa !2995
  %113 = load i64, i64* %i, align 8, !dbg !14016, !tbaa !3848
  %add196 = add i64 %113, 2, !dbg !14017
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !14015, !ctir !115
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !14015, !tbaa !3657
  store i8 %114, i8* %c, align 1, !dbg !14018, !tbaa !3657
  %115 = load i64, i64* %i, align 8, !dbg !14019, !tbaa !3848
  %add198 = add i64 %115, 2, !dbg !14019
  store i64 %add198, i64* %i, align 8, !dbg !14019, !tbaa !3848
  br label %do.body199, !dbg !14020

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !14021, !tbaa !3848
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !14021, !tbaa !3848
  %cmp200 = icmp ult i64 %116, %117, !dbg !14021
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !14024

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !14021, !tbaa !2995
  %119 = load i64, i64* %len, align 8, !dbg !14021, !tbaa !3848
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !14021, !ctir !9
  store i8 63, i8* %arrayidx203, align 1, !dbg !14021, !tbaa !3657
  br label %if.end204, !dbg !14021

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !14024, !tbaa !3848
  %inc205 = add i64 %120, 1, !dbg !14024
  store i64 %inc205, i64* %len, align 8, !dbg !14024, !tbaa !3848
  br label %do.end206, !dbg !14024

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !14025

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !14026, !tbaa !3848
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !14026, !tbaa !3848
  %cmp208 = icmp ult i64 %121, %122, !dbg !14026
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !14029

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !14026, !tbaa !2995
  %124 = load i64, i64* %len, align 8, !dbg !14026, !tbaa !3848
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !14026, !ctir !9
  store i8 34, i8* %arrayidx211, align 1, !dbg !14026, !tbaa !3657
  br label %if.end212, !dbg !14026

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !14029, !tbaa !3848
  %inc213 = add i64 %125, 1, !dbg !14029
  store i64 %inc213, i64* %len, align 8, !dbg !14029, !tbaa !3848
  br label %do.end214, !dbg !14029

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !14030

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !14031, !tbaa !3848
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !14031, !tbaa !3848
  %cmp216 = icmp ult i64 %126, %127, !dbg !14031
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !14034

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !14031, !tbaa !2995
  %129 = load i64, i64* %len, align 8, !dbg !14031, !tbaa !3848
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !14031, !ctir !9
  store i8 34, i8* %arrayidx219, align 1, !dbg !14031, !tbaa !3657
  br label %if.end220, !dbg !14031

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !14034, !tbaa !3848
  %inc221 = add i64 %130, 1, !dbg !14034
  store i64 %inc221, i64* %len, align 8, !dbg !14034, !tbaa !3848
  br label %do.end222, !dbg !14034

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !14035

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !14036, !tbaa !3848
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !14036, !tbaa !3848
  %cmp224 = icmp ult i64 %131, %132, !dbg !14036
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !14039

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !14036, !tbaa !2995
  %134 = load i64, i64* %len, align 8, !dbg !14036, !tbaa !3848
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !14036, !ctir !9
  store i8 63, i8* %arrayidx227, align 1, !dbg !14036, !tbaa !3657
  br label %if.end228, !dbg !14036

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !14039, !tbaa !3848
  %inc229 = add i64 %135, 1, !dbg !14039
  store i64 %inc229, i64* %len, align 8, !dbg !14039, !tbaa !3848
  br label %do.end230, !dbg !14039

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !14040

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !14041

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !14042

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !14043

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !14044

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !14045

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !14046, !tbaa !3657
  br label %c_escape, !dbg !14047

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !14048, !tbaa !3657
  br label %c_escape, !dbg !14049

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !14050, !tbaa !3657
  br label %c_escape, !dbg !14051

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !14052, !tbaa !3657
  br label %c_and_shell_escape, !dbg !14053

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !14054, !tbaa !3657
  br label %c_and_shell_escape, !dbg !14055

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !14056, !tbaa !3657
  br label %c_and_shell_escape, !dbg !14057

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !14058, !tbaa !3657
  br label %c_escape, !dbg !14059

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !14060, !tbaa !3657
  store i8 %136, i8* %esc, align 1, !dbg !14061, !tbaa !3657
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !14062, !tbaa !3657
  %cmp244 = icmp eq i32 %137, 2, !dbg !14064
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !14065

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14066, !tbaa !3106
  %tobool247 = trunc i8 %138 to i1, !dbg !14066
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !14069

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !14070

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !14071

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !14072, !tbaa !3106
  %tobool251 = trunc i8 %139 to i1, !dbg !14072
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !14074

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14075, !tbaa !3106
  %tobool254 = trunc i8 %140 to i1, !dbg !14075
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !14076

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !14077, !tbaa !3848
  %tobool257 = icmp ne i64 %141, 0, !dbg !14077
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !14078

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !14079

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !14077

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !14080), !dbg !14081
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !14082, !tbaa !3657
  %cmp260 = icmp eq i32 %142, 2, !dbg !14084
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !14085

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14086, !tbaa !3106
  %tobool263 = trunc i8 %143 to i1, !dbg !14086
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !14087

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !14088

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !14086

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !14089), !dbg !14090
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !14091, !tbaa !3106
  %tobool267 = trunc i8 %144 to i1, !dbg !14091
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !14093

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !14094, !tbaa !3657
  store i8 %145, i8* %c, align 1, !dbg !14096, !tbaa !3657
  br label %store_escape, !dbg !14097

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !14098

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !14099, !tbaa !3848
  %cmp271 = icmp eq i64 %146, -1, !dbg !14101
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !14102

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !14103, !tbaa !2995
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !14103, !ctir !115
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !14103, !tbaa !3657
  %conv275 = sext i8 %148 to i32, !dbg !14103
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !14104
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !14099

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !14105, !tbaa !3848
  %cmp279 = icmp eq i64 %149, 1, !dbg !14106
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !14102

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !14107

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !14108

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !14109, !tbaa !3848
  %cmp284 = icmp ne i64 %150, 0, !dbg !14111
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !14112

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !14113

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !14114

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14115, !tbaa !3106
  br label %sw.bb289, !dbg !14116

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !14117, !tbaa !3657
  %cmp290 = icmp eq i32 %151, 2, !dbg !14119
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !14120

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14121, !tbaa !3106
  %tobool293 = trunc i8 %152 to i1, !dbg !14121
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !14122

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !14123

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !14124

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !14125, !tbaa !3106
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14126, !tbaa !3106
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !14127, !tbaa !3657
  %cmp298 = icmp eq i32 %153, 2, !dbg !14129
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !14130

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14131, !tbaa !3106
  %tobool301 = trunc i8 %154 to i1, !dbg !14131
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !14134

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !14135

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !14136, !tbaa !3848
  %tobool304 = icmp ne i64 %155, 0, !dbg !14136
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !14138

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !14139, !tbaa !3848
  %tobool306 = icmp ne i64 %156, 0, !dbg !14139
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !14140

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !14141, !tbaa !3848
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !14143, !tbaa !3848
  store i64 0, i64* %buffersize.addr, align 8, !dbg !14144, !tbaa !3848
  br label %if.end308, !dbg !14145

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !14146

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !14147, !tbaa !3848
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !14147, !tbaa !3848
  %cmp310 = icmp ult i64 %158, %159, !dbg !14147
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !14150

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !14147, !tbaa !2995
  %161 = load i64, i64* %len, align 8, !dbg !14147, !tbaa !3848
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !14147, !ctir !9
  store i8 39, i8* %arrayidx313, align 1, !dbg !14147, !tbaa !3657
  br label %if.end314, !dbg !14147

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !14150, !tbaa !3848
  %inc315 = add i64 %162, 1, !dbg !14150
  store i64 %inc315, i64* %len, align 8, !dbg !14150, !tbaa !3848
  br label %do.end316, !dbg !14150

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !14151

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !14152, !tbaa !3848
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !14152, !tbaa !3848
  %cmp318 = icmp ult i64 %163, %164, !dbg !14152
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !14155

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !14152, !tbaa !2995
  %166 = load i64, i64* %len, align 8, !dbg !14152, !tbaa !3848
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !14152, !ctir !9
  store i8 92, i8* %arrayidx321, align 1, !dbg !14152, !tbaa !3657
  br label %if.end322, !dbg !14152

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !14155, !tbaa !3848
  %inc323 = add i64 %167, 1, !dbg !14155
  store i64 %inc323, i64* %len, align 8, !dbg !14155, !tbaa !3848
  br label %do.end324, !dbg !14155

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !14156

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !14157, !tbaa !3848
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !14157, !tbaa !3848
  %cmp326 = icmp ult i64 %168, %169, !dbg !14157
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !14160

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !14157, !tbaa !2995
  %171 = load i64, i64* %len, align 8, !dbg !14157, !tbaa !3848
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !14157, !ctir !9
  store i8 39, i8* %arrayidx329, align 1, !dbg !14157, !tbaa !3657
  br label %if.end330, !dbg !14157

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !14160, !tbaa !3848
  %inc331 = add i64 %172, 1, !dbg !14160
  store i64 %inc331, i64* %len, align 8, !dbg !14160, !tbaa !3848
  br label %do.end332, !dbg !14160

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14161, !tbaa !3106
  br label %if.end333, !dbg !14162

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !14163

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14164, !tbaa !3106
  br label %sw.epilog564, !dbg !14165

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !14166, metadata !DIExpression()), !dbg !14168
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !14169, metadata !DIExpression()), !dbg !14170
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !14171, !tbaa !3106
  %tobool336 = trunc i8 %173 to i1, !dbg !14171
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !14173

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !14174, !tbaa !3848
  %call338 = call i16** @__ctype_b_loc() #15, !dbg !14176
  %174 = load i16*, i16** %call338, align 8, !dbg !14176, !tbaa !2995, !ctir !1024
  %175 = load i8, i8* %c, align 1, !dbg !14176, !tbaa !3657
  %conv339 = zext i8 %175 to i32, !dbg !14176
  %idxprom = sext i32 %conv339 to i64, !dbg !14176
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !14176, !ctir !1024
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !14176, !tbaa !3810
  %conv341 = zext i16 %176 to i32, !dbg !14176
  %and342 = and i32 %conv341, 16384, !dbg !14176
  %cmp343 = icmp ne i32 %and342, 0, !dbg !14177
  %frombool345 = zext i1 %cmp343 to i8, !dbg !14178
  store i8 %frombool345, i8* %printable, align 1, !dbg !14178, !tbaa !3106
  br label %if.end410, !dbg !14179

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !14180, metadata !DIExpression()), !dbg !14182
  %177 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !14183
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !14183
  store i64 0, i64* %m, align 8, !dbg !14184, !tbaa !3848
  store i8 1, i8* %printable, align 1, !dbg !14185, !tbaa !3106
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !14186, !tbaa !3848
  %cmp347 = icmp eq i64 %178, -1, !dbg !14188
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !14189

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !14190, !tbaa !2995
  %call350 = call i64 @strlen(i8* %179) #14, !dbg !14191
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !14192, !tbaa !3848
  br label %if.end351, !dbg !14193

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !14194

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !14195, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !14198, metadata !DIExpression()), !dbg !14199
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !14200, !tbaa !2995
  %181 = load i64, i64* %i, align 8, !dbg !14201, !tbaa !3848
  %182 = load i64, i64* %m, align 8, !dbg !14202, !tbaa !3848
  %add353 = add i64 %181, %182, !dbg !14203
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !14200, !ctir !115
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !14204, !tbaa !3848
  %184 = load i64, i64* %i, align 8, !dbg !14205, !tbaa !3848
  %185 = load i64, i64* %m, align 8, !dbg !14206, !tbaa !3848
  %add355 = add i64 %184, %185, !dbg !14207
  %sub = sub i64 %183, %add355, !dbg !14208
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.__mbstate_t* %mbstate), !dbg !14209
  store i64 %call356, i64* %bytes, align 8, !dbg !14199, !tbaa !3848
  %186 = load i64, i64* %bytes, align 8, !dbg !14210, !tbaa !3848
  %cmp357 = icmp eq i64 %186, 0, !dbg !14212
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !14213

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !14214

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !14215, !tbaa !3848
  %cmp361 = icmp eq i64 %187, -1, !dbg !14217
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !14218

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !14219, !tbaa !3106
  br label %do.end409, !dbg !14221

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !14222, !tbaa !3848
  %cmp365 = icmp eq i64 %188, -2, !dbg !14224
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !14225

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !14226, !tbaa !3106
  br label %while.cond, !dbg !14228

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !14229, !tbaa !3848
  %190 = load i64, i64* %m, align 8, !dbg !14230, !tbaa !3848
  %add368 = add i64 %189, %190, !dbg !14231
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !14232, !tbaa !3848
  %cmp369 = icmp ult i64 %add368, %191, !dbg !14233
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !14234

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !14235, !tbaa !2995
  %193 = load i64, i64* %i, align 8, !dbg !14236, !tbaa !3848
  %194 = load i64, i64* %m, align 8, !dbg !14237, !tbaa !3848
  %add371 = add i64 %193, %194, !dbg !14238
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !14235, !ctir !115
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !14235, !tbaa !3657
  %conv373 = sext i8 %195 to i32, !dbg !14235
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !14234
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !14239
  br i1 %196, label %while.body, label %while.end, !dbg !14228

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !14240, !tbaa !3848
  %inc375 = add i64 %197, 1, !dbg !14240
  store i64 %inc375, i64* %m, align 8, !dbg !14240, !tbaa !3848
  br label %while.cond, !dbg !14228, !llvm.loop !14241

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !14242

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14243, !tbaa !3106
  %tobool377 = trunc i8 %198 to i1, !dbg !14243
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !14246

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !14247, !tbaa !3657
  %cmp380 = icmp eq i32 %199, 2, !dbg !14248
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !14249

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !14250, metadata !DIExpression()), !dbg !14252
  store i64 1, i64* %j, align 8, !dbg !14253, !tbaa !3848
  br label %for.cond383, !dbg !14255

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !14256, !tbaa !3848
  %201 = load i64, i64* %bytes, align 8, !dbg !14258, !tbaa !3848
  %cmp384 = icmp ult i64 %200, %201, !dbg !14259
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !14260

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !14261, !tbaa !2995
  %203 = load i64, i64* %i, align 8, !dbg !14262, !tbaa !3848
  %204 = load i64, i64* %m, align 8, !dbg !14263, !tbaa !3848
  %add387 = add i64 %203, %204, !dbg !14264
  %205 = load i64, i64* %j, align 8, !dbg !14265, !tbaa !3848
  %add388 = add i64 %add387, %205, !dbg !14266
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !14261, !ctir !115
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !14261, !tbaa !3657
  %conv390 = sext i8 %206 to i32, !dbg !14261
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !14267

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !14268

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !14270

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !14271

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !14272, !tbaa !3848
  %inc395 = add i64 %207, 1, !dbg !14272
  store i64 %inc395, i64* %j, align 8, !dbg !14272, !tbaa !3848
  br label %for.cond383, !dbg !14273, !llvm.loop !14274

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !14276

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !14277, !tbaa !2982
  %call398 = call i32 @iswprint(i32 %208) #10, !dbg !14279
  %tobool399 = icmp ne i32 %call398, 0, !dbg !14279
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !14280

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !14281, !tbaa !3106
  br label %if.end401, !dbg !14282

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !14283, !tbaa !3848
  %210 = load i64, i64* %m, align 8, !dbg !14284, !tbaa !3848
  %add402 = add i64 %210, %209, !dbg !14284
  store i64 %add402, i64* %m, align 8, !dbg !14284, !tbaa !3848
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !14285

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #14, !dbg !14286
  %tobool407 = icmp ne i32 %call406, 0, !dbg !14287
  %lnot408 = xor i1 %tobool407, true, !dbg !14287
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !14285, !llvm.loop !14288

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !14290, !tbaa !3106
  %tobool411 = trunc i8 %211 to i1, !dbg !14290
  %frombool412 = zext i1 %tobool411 to i8, !dbg !14291
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !14291, !tbaa !3106
  %212 = load i64, i64* %m, align 8, !dbg !14292, !tbaa !3848
  %cmp413 = icmp ult i64 1, %212, !dbg !14294
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !14295

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !14296, !tbaa !3106
  %tobool415 = trunc i8 %213 to i1, !dbg !14296
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !14297

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !14298, !tbaa !3106
  %tobool418 = trunc i8 %214 to i1, !dbg !14298
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !14299

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !14300, metadata !DIExpression()), !dbg !14302
  %215 = load i64, i64* %i, align 8, !dbg !14303, !tbaa !3848
  %216 = load i64, i64* %m, align 8, !dbg !14304, !tbaa !3848
  %add420 = add i64 %215, %216, !dbg !14305
  store i64 %add420, i64* %ilim, align 8, !dbg !14302, !tbaa !3848
  br label %for.cond421, !dbg !14306

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !14307, !tbaa !3106
  %tobool422 = trunc i8 %217 to i1, !dbg !14307
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !14312

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !14313, !tbaa !3106
  %tobool425 = trunc i8 %218 to i1, !dbg !14313
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !14314

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !14315

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14317, !tbaa !3106
  %tobool428 = trunc i8 %219 to i1, !dbg !14317
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !14320

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !14317

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !14320, !tbaa !3106
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !14321, !tbaa !3657
  %cmp431 = icmp eq i32 %220, 2, !dbg !14321
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !14321

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14321, !tbaa !3106
  %tobool434 = trunc i8 %221 to i1, !dbg !14321
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !14320

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !14323

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !14325, !tbaa !3848
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !14325, !tbaa !3848
  %cmp437 = icmp ult i64 %222, %223, !dbg !14325
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !14328

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !14325, !tbaa !2995
  %225 = load i64, i64* %len, align 8, !dbg !14325, !tbaa !3848
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !14325, !ctir !9
  store i8 39, i8* %arrayidx440, align 1, !dbg !14325, !tbaa !3657
  br label %if.end441, !dbg !14325

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !14328, !tbaa !3848
  %inc442 = add i64 %226, 1, !dbg !14328
  store i64 %inc442, i64* %len, align 8, !dbg !14328, !tbaa !3848
  br label %do.end444, !dbg !14328

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !14323

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !14329, !tbaa !3848
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !14329, !tbaa !3848
  %cmp446 = icmp ult i64 %227, %228, !dbg !14329
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !14332

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !14329, !tbaa !2995
  %230 = load i64, i64* %len, align 8, !dbg !14329, !tbaa !3848
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !14329, !ctir !9
  store i8 36, i8* %arrayidx449, align 1, !dbg !14329, !tbaa !3657
  br label %if.end450, !dbg !14329

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !14332, !tbaa !3848
  %inc451 = add i64 %231, 1, !dbg !14332
  store i64 %inc451, i64* %len, align 8, !dbg !14332, !tbaa !3848
  br label %do.end453, !dbg !14332

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !14323

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !14333, !tbaa !3848
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !14333, !tbaa !3848
  %cmp455 = icmp ult i64 %232, %233, !dbg !14333
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !14336

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !14333, !tbaa !2995
  %235 = load i64, i64* %len, align 8, !dbg !14333, !tbaa !3848
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !14333, !ctir !9
  store i8 39, i8* %arrayidx458, align 1, !dbg !14333, !tbaa !3657
  br label %if.end459, !dbg !14333

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !14336, !tbaa !3848
  %inc460 = add i64 %236, 1, !dbg !14336
  store i64 %inc460, i64* %len, align 8, !dbg !14336, !tbaa !3848
  br label %do.end462, !dbg !14336

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14323, !tbaa !3106
  br label %if.end463, !dbg !14323

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !14320

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !14337, !tbaa !3848
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !14337, !tbaa !3848
  %cmp465 = icmp ult i64 %237, %238, !dbg !14337
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !14340

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !14337, !tbaa !2995
  %240 = load i64, i64* %len, align 8, !dbg !14337, !tbaa !3848
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !14337, !ctir !9
  store i8 92, i8* %arrayidx468, align 1, !dbg !14337, !tbaa !3657
  br label %if.end469, !dbg !14337

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !14340, !tbaa !3848
  %inc470 = add i64 %241, 1, !dbg !14340
  store i64 %inc470, i64* %len, align 8, !dbg !14340, !tbaa !3848
  br label %do.end472, !dbg !14340

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !14320

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !14341

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !14342, !tbaa !3848
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !14342, !tbaa !3848
  %cmp476 = icmp ult i64 %242, %243, !dbg !14342
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !14345

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !14342, !tbaa !3657
  %conv479 = zext i8 %244 to i32, !dbg !14342
  %shr = ashr i32 %conv479, 6, !dbg !14342
  %add480 = add nsw i32 48, %shr, !dbg !14342
  %conv481 = trunc i32 %add480 to i8, !dbg !14342
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !14342, !tbaa !2995
  %246 = load i64, i64* %len, align 8, !dbg !14342, !tbaa !3848
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !14342, !ctir !9
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !14342, !tbaa !3657
  br label %if.end483, !dbg !14342

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !14345, !tbaa !3848
  %inc484 = add i64 %247, 1, !dbg !14345
  store i64 %inc484, i64* %len, align 8, !dbg !14345, !tbaa !3848
  br label %do.end486, !dbg !14345

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !14346

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !14347, !tbaa !3848
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !14347, !tbaa !3848
  %cmp488 = icmp ult i64 %248, %249, !dbg !14347
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !14350

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !14347, !tbaa !3657
  %conv491 = zext i8 %250 to i32, !dbg !14347
  %shr492 = ashr i32 %conv491, 3, !dbg !14347
  %and493 = and i32 %shr492, 7, !dbg !14347
  %add494 = add nsw i32 48, %and493, !dbg !14347
  %conv495 = trunc i32 %add494 to i8, !dbg !14347
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !14347, !tbaa !2995
  %252 = load i64, i64* %len, align 8, !dbg !14347, !tbaa !3848
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !14347, !ctir !9
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !14347, !tbaa !3657
  br label %if.end497, !dbg !14347

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !14350, !tbaa !3848
  %inc498 = add i64 %253, 1, !dbg !14350
  store i64 %inc498, i64* %len, align 8, !dbg !14350, !tbaa !3848
  br label %do.end500, !dbg !14350

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !14351, !tbaa !3657
  %conv501 = zext i8 %254 to i32, !dbg !14351
  %and502 = and i32 %conv501, 7, !dbg !14352
  %add503 = add nsw i32 48, %and502, !dbg !14353
  %conv504 = trunc i32 %add503 to i8, !dbg !14354
  store i8 %conv504, i8* %c, align 1, !dbg !14355, !tbaa !3657
  br label %if.end518, !dbg !14356

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !14357, !tbaa !3106
  %tobool506 = trunc i8 %255 to i1, !dbg !14357
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !14359

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !14360

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !14362, !tbaa !3848
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !14362, !tbaa !3848
  %cmp509 = icmp ult i64 %256, %257, !dbg !14362
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !14365

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !14362, !tbaa !2995
  %259 = load i64, i64* %len, align 8, !dbg !14362, !tbaa !3848
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !14362, !ctir !9
  store i8 92, i8* %arrayidx512, align 1, !dbg !14362, !tbaa !3657
  br label %if.end513, !dbg !14362

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !14365, !tbaa !3848
  %inc514 = add i64 %260, 1, !dbg !14365
  store i64 %inc514, i64* %len, align 8, !dbg !14365, !tbaa !3848
  br label %do.end516, !dbg !14365

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !14366, !tbaa !3106
  br label %if.end517, !dbg !14367

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !14368, !tbaa !3848
  %262 = load i64, i64* %i, align 8, !dbg !14370, !tbaa !3848
  %add519 = add i64 %262, 1, !dbg !14371
  %cmp520 = icmp ule i64 %261, %add519, !dbg !14372
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !14373

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !14374

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !14375

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14376, !tbaa !3106
  %tobool525 = trunc i8 %263 to i1, !dbg !14376
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !14376

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !14376, !tbaa !3106
  %tobool528 = trunc i8 %264 to i1, !dbg !14376
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !14379

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !14380

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !14382, !tbaa !3848
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !14382, !tbaa !3848
  %cmp531 = icmp ult i64 %265, %266, !dbg !14382
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !14385

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !14382, !tbaa !2995
  %268 = load i64, i64* %len, align 8, !dbg !14382, !tbaa !3848
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !14382, !ctir !9
  store i8 39, i8* %arrayidx534, align 1, !dbg !14382, !tbaa !3657
  br label %if.end535, !dbg !14382

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !14385, !tbaa !3848
  %inc536 = add i64 %269, 1, !dbg !14385
  store i64 %inc536, i64* %len, align 8, !dbg !14385, !tbaa !3848
  br label %do.end538, !dbg !14385

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !14380

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !14386, !tbaa !3848
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !14386, !tbaa !3848
  %cmp540 = icmp ult i64 %270, %271, !dbg !14386
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !14389

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !14386, !tbaa !2995
  %273 = load i64, i64* %len, align 8, !dbg !14386, !tbaa !3848
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !14386, !ctir !9
  store i8 39, i8* %arrayidx543, align 1, !dbg !14386, !tbaa !3657
  br label %if.end544, !dbg !14386

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !14389, !tbaa !3848
  %inc545 = add i64 %274, 1, !dbg !14389
  store i64 %inc545, i64* %len, align 8, !dbg !14389, !tbaa !3848
  br label %do.end547, !dbg !14389

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14380, !tbaa !3106
  br label %if.end548, !dbg !14380

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !14379

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !14390

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !14391, !tbaa !3848
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !14391, !tbaa !3848
  %cmp552 = icmp ult i64 %275, %276, !dbg !14391
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !14394

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !14391, !tbaa !3657
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !14391, !tbaa !2995
  %279 = load i64, i64* %len, align 8, !dbg !14391, !tbaa !3848
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !14391, !ctir !9
  store i8 %277, i8* %arrayidx555, align 1, !dbg !14391, !tbaa !3657
  br label %if.end556, !dbg !14391

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !14394, !tbaa !3848
  %inc557 = add i64 %280, 1, !dbg !14394
  store i64 %inc557, i64* %len, align 8, !dbg !14394, !tbaa !3848
  br label %do.end559, !dbg !14394

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !14395, !tbaa !2995
  %282 = load i64, i64* %i, align 8, !dbg !14396, !tbaa !3848
  %inc560 = add i64 %282, 1, !dbg !14396
  store i64 %inc560, i64* %i, align 8, !dbg !14396, !tbaa !3848
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !14395, !ctir !115
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !14395, !tbaa !3657
  store i8 %283, i8* %c, align 1, !dbg !14397, !tbaa !3657
  br label %for.cond421, !dbg !14398, !llvm.loop !14399

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !14402

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !14403

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !14404, !tbaa !3106
  %tobool565 = trunc i8 %284 to i1, !dbg !14404
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !14406

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !14407, !tbaa !3657
  %cmp568 = icmp ne i32 %285, 2, !dbg !14408
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !14409

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14410, !tbaa !3106
  %tobool571 = trunc i8 %286 to i1, !dbg !14410
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !14411

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14412, !tbaa !2995
  %tobool574 = icmp ne i32* %287, null, !dbg !14412
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !14413

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14414, !tbaa !2995
  %289 = load i8, i8* %c, align 1, !dbg !14415, !tbaa !3657
  %conv576 = zext i8 %289 to i64, !dbg !14415
  %div = udiv i64 %conv576, 32, !dbg !14416
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !14414, !ctir !1022
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !14414, !tbaa !2982
  %291 = load i8, i8* %c, align 1, !dbg !14417, !tbaa !3657
  %conv578 = zext i8 %291 to i64, !dbg !14417
  %rem = urem i64 %conv578, 32, !dbg !14418
  %sh_prom = trunc i64 %rem to i32, !dbg !14419
  %shr579 = lshr i32 %290, %sh_prom, !dbg !14419
  %and580 = and i32 %shr579, 1, !dbg !14420
  %tobool581 = icmp ne i32 %and580, 0, !dbg !14420
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !14421

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !14422, !tbaa !3106
  %tobool583 = trunc i8 %292 to i1, !dbg !14422
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !14423

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !14424

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !14422

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !14425), !dbg !14426
  br label %do.body586, !dbg !14427

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14428, !tbaa !3106
  %tobool587 = trunc i8 %293 to i1, !dbg !14428
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !14431

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !14428

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !14431, !tbaa !3106
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !14432, !tbaa !3657
  %cmp590 = icmp eq i32 %294, 2, !dbg !14432
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !14432

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14432, !tbaa !3106
  %tobool593 = trunc i8 %295 to i1, !dbg !14432
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !14431

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !14434

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !14436, !tbaa !3848
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !14436, !tbaa !3848
  %cmp596 = icmp ult i64 %296, %297, !dbg !14436
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !14439

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !14436, !tbaa !2995
  %299 = load i64, i64* %len, align 8, !dbg !14436, !tbaa !3848
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !14436, !ctir !9
  store i8 39, i8* %arrayidx599, align 1, !dbg !14436, !tbaa !3657
  br label %if.end600, !dbg !14436

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !14439, !tbaa !3848
  %inc601 = add i64 %300, 1, !dbg !14439
  store i64 %inc601, i64* %len, align 8, !dbg !14439, !tbaa !3848
  br label %do.end603, !dbg !14439

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !14434

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !14440, !tbaa !3848
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !14440, !tbaa !3848
  %cmp605 = icmp ult i64 %301, %302, !dbg !14440
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !14443

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !14440, !tbaa !2995
  %304 = load i64, i64* %len, align 8, !dbg !14440, !tbaa !3848
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !14440, !ctir !9
  store i8 36, i8* %arrayidx608, align 1, !dbg !14440, !tbaa !3657
  br label %if.end609, !dbg !14440

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !14443, !tbaa !3848
  %inc610 = add i64 %305, 1, !dbg !14443
  store i64 %inc610, i64* %len, align 8, !dbg !14443, !tbaa !3848
  br label %do.end612, !dbg !14443

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !14434

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !14444, !tbaa !3848
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !14444, !tbaa !3848
  %cmp614 = icmp ult i64 %306, %307, !dbg !14444
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !14447

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !14444, !tbaa !2995
  %309 = load i64, i64* %len, align 8, !dbg !14444, !tbaa !3848
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !14444, !ctir !9
  store i8 39, i8* %arrayidx617, align 1, !dbg !14444, !tbaa !3657
  br label %if.end618, !dbg !14444

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !14447, !tbaa !3848
  %inc619 = add i64 %310, 1, !dbg !14447
  store i64 %inc619, i64* %len, align 8, !dbg !14447, !tbaa !3848
  br label %do.end621, !dbg !14447

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14434, !tbaa !3106
  br label %if.end622, !dbg !14434

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !14431

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !14448, !tbaa !3848
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !14448, !tbaa !3848
  %cmp624 = icmp ult i64 %311, %312, !dbg !14448
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !14451

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !14448, !tbaa !2995
  %314 = load i64, i64* %len, align 8, !dbg !14448, !tbaa !3848
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !14448, !ctir !9
  store i8 92, i8* %arrayidx627, align 1, !dbg !14448, !tbaa !3657
  br label %if.end628, !dbg !14448

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !14451, !tbaa !3848
  %inc629 = add i64 %315, 1, !dbg !14451
  store i64 %inc629, i64* %len, align 8, !dbg !14451, !tbaa !3848
  br label %do.end631, !dbg !14451

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !14431

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !14431

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !14452), !dbg !14453
  br label %do.body634, !dbg !14454

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14455, !tbaa !3106
  %tobool635 = trunc i8 %316 to i1, !dbg !14455
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !14455

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !14455, !tbaa !3106
  %tobool638 = trunc i8 %317 to i1, !dbg !14455
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !14458

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !14459

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !14461, !tbaa !3848
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !14461, !tbaa !3848
  %cmp641 = icmp ult i64 %318, %319, !dbg !14461
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !14464

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !14461, !tbaa !2995
  %321 = load i64, i64* %len, align 8, !dbg !14461, !tbaa !3848
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !14461, !ctir !9
  store i8 39, i8* %arrayidx644, align 1, !dbg !14461, !tbaa !3657
  br label %if.end645, !dbg !14461

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !14464, !tbaa !3848
  %inc646 = add i64 %322, 1, !dbg !14464
  store i64 %inc646, i64* %len, align 8, !dbg !14464, !tbaa !3848
  br label %do.end648, !dbg !14464

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !14459

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !14465, !tbaa !3848
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !14465, !tbaa !3848
  %cmp650 = icmp ult i64 %323, %324, !dbg !14465
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !14468

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !14465, !tbaa !2995
  %326 = load i64, i64* %len, align 8, !dbg !14465, !tbaa !3848
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !14465, !ctir !9
  store i8 39, i8* %arrayidx653, align 1, !dbg !14465, !tbaa !3657
  br label %if.end654, !dbg !14465

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !14468, !tbaa !3848
  %inc655 = add i64 %327, 1, !dbg !14468
  store i64 %inc655, i64* %len, align 8, !dbg !14468, !tbaa !3848
  br label %do.end657, !dbg !14468

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14459, !tbaa !3106
  br label %if.end658, !dbg !14459

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !14458

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !14469

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !14470, !tbaa !3848
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !14470, !tbaa !3848
  %cmp662 = icmp ult i64 %328, %329, !dbg !14470
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !14473

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !14470, !tbaa !3657
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !14470, !tbaa !2995
  %332 = load i64, i64* %len, align 8, !dbg !14470, !tbaa !3848
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !14470, !ctir !9
  store i8 %330, i8* %arrayidx665, align 1, !dbg !14470, !tbaa !3657
  br label %if.end666, !dbg !14470

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !14473, !tbaa !3848
  %inc667 = add i64 %333, 1, !dbg !14473
  store i64 %inc667, i64* %len, align 8, !dbg !14473, !tbaa !3848
  br label %do.end669, !dbg !14473

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !14474, !tbaa !3106
  %tobool670 = trunc i8 %334 to i1, !dbg !14474
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !14476

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14477, !tbaa !3106
  br label %if.end672, !dbg !14478

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !14479

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !14480, !tbaa !3848
  %inc674 = add i64 %335, 1, !dbg !14480
  store i64 %inc674, i64* %i, align 8, !dbg !14480, !tbaa !3848
  br label %for.cond44, !dbg !14481, !llvm.loop !14482

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !14484, !tbaa !3848
  %cmp676 = icmp eq i64 %336, 0, !dbg !14486
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !14487

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !14488, !tbaa !3657
  %cmp679 = icmp eq i32 %337, 2, !dbg !14489
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !14490

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14491, !tbaa !3106
  %tobool682 = trunc i8 %338 to i1, !dbg !14491
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !14492

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !14493

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !14494, !tbaa !3657
  %cmp686 = icmp eq i32 %339, 2, !dbg !14496
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !14497

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14498, !tbaa !3106
  %tobool689 = trunc i8 %340 to i1, !dbg !14498
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !14499

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !14500, !tbaa !3106
  %tobool691 = trunc i8 %341 to i1, !dbg !14500
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !14501

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14502, !tbaa !3106
  %tobool694 = trunc i8 %342 to i1, !dbg !14502
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !14505

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !14506, !tbaa !2995
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !14507, !tbaa !3848
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !14508, !tbaa !2995
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !14509, !tbaa !3848
  %347 = load i32, i32* %flags.addr, align 4, !dbg !14510, !tbaa !2982
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14511, !tbaa !2995
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !14512, !tbaa !2995
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !14513, !tbaa !2995
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !14514
  store i64 %call696, i64* %retval, align 8, !dbg !14515
  br label %return, !dbg !14515

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !14516, !tbaa !3848
  %tobool698 = icmp ne i64 %351, 0, !dbg !14516
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !14518

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !14519, !tbaa !3848
  %tobool700 = icmp ne i64 %352, 0, !dbg !14519
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !14520

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !14521, !tbaa !3848
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !14523, !tbaa !3848
  store i64 0, i64* %len, align 8, !dbg !14524, !tbaa !3848
  br label %process_input, !dbg !14525

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !14526

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !14527, !tbaa !2995
  %tobool705 = icmp ne i8* %354, null, !dbg !14527
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !14529

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14530, !tbaa !3106
  %tobool707 = trunc i8 %355 to i1, !dbg !14530
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !14531

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !14532

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !14533, !tbaa !2995
  %357 = load i8, i8* %356, align 1, !dbg !14536, !tbaa !3657, !ctir !116
  %tobool710 = icmp ne i8 %357, 0, !dbg !14537
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !14537

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !14538

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !14539, !tbaa !3848
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !14539, !tbaa !3848
  %cmp713 = icmp ult i64 %358, %359, !dbg !14539
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !14542

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !14539, !tbaa !2995
  %361 = load i8, i8* %360, align 1, !dbg !14539, !tbaa !3657, !ctir !116
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !14539, !tbaa !2995
  %363 = load i64, i64* %len, align 8, !dbg !14539, !tbaa !3848
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !14539, !ctir !9
  store i8 %361, i8* %arrayidx716, align 1, !dbg !14539, !tbaa !3657
  br label %if.end717, !dbg !14539

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !14542, !tbaa !3848
  %inc718 = add i64 %364, 1, !dbg !14542
  store i64 %inc718, i64* %len, align 8, !dbg !14542, !tbaa !3848
  br label %do.end720, !dbg !14542

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !14542

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !14543, !tbaa !2995
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !14543
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !14543, !tbaa !2995
  br label %for.cond709, !dbg !14544, !llvm.loop !14545

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !14546

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !14547, !tbaa !3848
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !14549, !tbaa !3848
  %cmp725 = icmp ult i64 %366, %367, !dbg !14550
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !14551

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !14552, !tbaa !2995
  %369 = load i64, i64* %len, align 8, !dbg !14553, !tbaa !3848
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !14552, !ctir !9
  store i8 0, i8* %arrayidx728, align 1, !dbg !14554, !tbaa !3657
  br label %if.end729, !dbg !14552

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !14555, !tbaa !3848
  store i64 %370, i64* %retval, align 8, !dbg !14556
  br label %return, !dbg !14556

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !14557), !dbg !14558
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !14559, !tbaa !3657
  %cmp730 = icmp eq i32 %371, 2, !dbg !14561
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !14562

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !14563, !tbaa !3106
  %tobool733 = trunc i8 %372 to i1, !dbg !14563
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !14564

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !14565, !tbaa !3657
  br label %if.end736, !dbg !14566

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !14567, !tbaa !2995
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !14568, !tbaa !3848
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !14569, !tbaa !2995
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !14570, !tbaa !3848
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !14571, !tbaa !3657
  %378 = load i32, i32* %flags.addr, align 4, !dbg !14572, !tbaa !2982
  %and737 = and i32 %378, -3, !dbg !14573
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !14574, !tbaa !2995
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !14575, !tbaa !2995
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !14576
  store i64 %call738, i64* %retval, align 8, !dbg !14577
  br label %return, !dbg !14577

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !14578
  ret i64 %381, !dbg !14578
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #4 !dbg !14579 !ctir !1042 {
entry:
  %retval = alloca i8*, align 8
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8, !ctir !115
  %locale_code = alloca i8*, align 8, !ctir !115
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !14580, metadata !DIExpression()), !dbg !14581
  store i32 %s, i32* %s.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14582, metadata !DIExpression()), !dbg !14583
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !14584, metadata !DIExpression()), !dbg !14585
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !14586, !tbaa !2995
  %call = call i8* @gettext(i8* %0) #10, !dbg !14586
  store i8* %call, i8** %translation, align 8, !dbg !14585, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !14587, metadata !DIExpression()), !dbg !14588
  %1 = load i8*, i8** %translation, align 8, !dbg !14589, !tbaa !2995
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !14591, !tbaa !2995
  %cmp = icmp ne i8* %1, %2, !dbg !14592
  br i1 %cmp, label %if.then, label %if.end, !dbg !14593

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !14594, !tbaa !2995
  store i8* %3, i8** %retval, align 8, !dbg !14595
  br label %return, !dbg !14595

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !14596
  store i8* %call1, i8** %locale_code, align 8, !dbg !14597, !tbaa !2995
  %4 = load i8*, i8** %locale_code, align 8, !dbg !14598, !tbaa !2995
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.315, i64 0, i64 0)) #14, !dbg !14598
  %cmp3 = icmp eq i32 %call2, 0, !dbg !14598
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !14600

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !14601, !tbaa !2995
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !14601, !ctir !115
  %6 = load i8, i8* %arrayidx, align 1, !dbg !14601, !tbaa !3657
  %conv = sext i8 %6 to i32, !dbg !14601
  %cmp5 = icmp eq i32 %conv, 96, !dbg !14602
  %7 = zext i1 %cmp5 to i64, !dbg !14601
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.316, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.317, i64 0, i64 0), !dbg !14601
  store i8* %cond, i8** %retval, align 8, !dbg !14603
  br label %return, !dbg !14603

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !14604, !tbaa !2995
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.318, i64 0, i64 0)) #14, !dbg !14604
  %cmp9 = icmp eq i32 %call8, 0, !dbg !14604
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !14606

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !14607, !tbaa !2995
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !14607, !ctir !115
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !14607, !tbaa !3657
  %conv13 = sext i8 %10 to i32, !dbg !14607
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !14608
  %11 = zext i1 %cmp14 to i64, !dbg !14607
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.319, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.320, i64 0, i64 0), !dbg !14607
  store i8* %cond16, i8** %retval, align 8, !dbg !14609
  br label %return, !dbg !14609

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !14610, !tbaa !3657
  %cmp18 = icmp eq i32 %12, 9, !dbg !14611
  %13 = zext i1 %cmp18 to i64, !dbg !14610
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.312, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), !dbg !14610
  store i8* %cond20, i8** %retval, align 8, !dbg !14612
  br label %return, !dbg !14612

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !14613
  ret i8* %14, !dbg !14613
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !14614 !ctir !975 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14615, metadata !DIExpression()), !dbg !14616
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14617, metadata !DIExpression()), !dbg !14618
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14619, metadata !DIExpression()), !dbg !14620
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14621, !tbaa !2995
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14622, !tbaa !3848
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14623, !tbaa !2995
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !14624
  ret i8* %call, !dbg !14625
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #4 !dbg !14626 !ctir !977 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %size.addr = alloca i64*, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !962
  %e = alloca i32, align 4, !ctir !7
  %flags = alloca i32, align 4, !ctir !7
  %bufsize = alloca i64, align 8, !ctir !55
  %buf = alloca i8*, align 8, !ctir !9
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14627, metadata !DIExpression()), !dbg !14628
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14629, metadata !DIExpression()), !dbg !14630
  store i64* %size, i64** %size.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !14631, metadata !DIExpression()), !dbg !14632
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14633, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14635, metadata !DIExpression()), !dbg !14636
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14637, !tbaa !2995
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14637
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14637

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14638, !tbaa !2995
  br label %cond.end, !dbg !14637

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14637

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14637
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !14636, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14639, metadata !DIExpression()), !dbg !14640
  %call = call i32* @__errno_location() #15, !dbg !14641
  %2 = load i32, i32* %call, align 4, !dbg !14641, !tbaa !2982, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !14640, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14642, metadata !DIExpression()), !dbg !14643
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14644, !tbaa !2995
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !14645, !ctir !963
  %4 = load i32, i32* %flags1, align 4, !dbg !14645, !tbaa !13633, !ctir !7
  %5 = load i64*, i64** %size.addr, align 8, !dbg !14646, !tbaa !2995
  %tobool2 = icmp ne i64* %5, null, !dbg !14646
  %6 = zext i1 %tobool2 to i64, !dbg !14646
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !14646
  %or = or i32 %4, %cond3, !dbg !14647
  store i32 %or, i32* %flags, align 4, !dbg !14643, !tbaa !2982
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !14648, metadata !DIExpression()), !dbg !14649
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !14650, !tbaa !2995
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !14651, !tbaa !3848
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14652, !tbaa !2995
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !14653, !ctir !963
  %10 = load i32, i32* %style, align 8, !dbg !14653, !tbaa !13565, !ctir !926
  %11 = load i32, i32* %flags, align 4, !dbg !14654, !tbaa !2982
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14655, !tbaa !2995
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !14656, !ctir !963
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14655
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14657, !tbaa !2995
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !14658, !ctir !963
  %14 = load i8*, i8** %left_quote, align 8, !dbg !14658, !tbaa !13666, !ctir !115
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14659, !tbaa !2995
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !14660, !ctir !963
  %16 = load i8*, i8** %right_quote, align 8, !dbg !14660, !tbaa !13671, !ctir !115
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !14661
  %add = add i64 %call4, 1, !dbg !14662
  store i64 %add, i64* %bufsize, align 8, !dbg !14649, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14663, metadata !DIExpression()), !dbg !14664
  %17 = load i64, i64* %bufsize, align 8, !dbg !14665, !tbaa !3848
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !14666
  store i8* %call5, i8** %buf, align 8, !dbg !14664, !tbaa !2995
  %18 = load i8*, i8** %buf, align 8, !dbg !14667, !tbaa !2995
  %19 = load i64, i64* %bufsize, align 8, !dbg !14668, !tbaa !3848
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !14669, !tbaa !2995
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !14670, !tbaa !3848
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14671, !tbaa !2995
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !14672, !ctir !963
  %23 = load i32, i32* %style6, align 8, !dbg !14672, !tbaa !13565, !ctir !926
  %24 = load i32, i32* %flags, align 4, !dbg !14673, !tbaa !2982
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14674, !tbaa !2995
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !14675, !ctir !963
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !14674
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14676, !tbaa !2995
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !14677, !ctir !963
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !14677, !tbaa !13666, !ctir !115
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14678, !tbaa !2995
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !14679, !ctir !963
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !14679, !tbaa !13671, !ctir !115
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !14680
  %30 = load i32, i32* %e, align 4, !dbg !14681, !tbaa !2982
  %call12 = call i32* @__errno_location() #15, !dbg !14682
  store i32 %30, i32* %call12, align 4, !dbg !14683, !tbaa !2982, !ctir !7
  %31 = load i64*, i64** %size.addr, align 8, !dbg !14684, !tbaa !2995
  %tobool13 = icmp ne i64* %31, null, !dbg !14684
  br i1 %tobool13, label %if.then, label %if.end, !dbg !14686

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !14687, !tbaa !3848
  %sub = sub i64 %32, 1, !dbg !14688
  %33 = load i64*, i64** %size.addr, align 8, !dbg !14689, !tbaa !2995
  store i64 %sub, i64* %33, align 8, !dbg !14690, !tbaa !3848, !ctir !55
  br label %if.end, !dbg !14691

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !14692, !tbaa !2995
  ret i8* %34, !dbg !14693
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #4 !dbg !14694 !ctir !134 {
entry:
  %sv = alloca %struct.slotvec*, align 8, !ctir !979
  %i = alloca i32, align 4, !ctir !7
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !14695, metadata !DIExpression()), !dbg !14696
  %0 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !14697, !tbaa !2995
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !14696, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14698, metadata !DIExpression()), !dbg !14699
  store i32 1, i32* %i, align 4, !dbg !14700, !tbaa !2982
  br label %for.cond, !dbg !14702

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !14703, !tbaa !2982
  %2 = load i32, i32* @nslots, align 4, !dbg !14705, !tbaa !2982
  %cmp = icmp slt i32 %1, %2, !dbg !14706
  br i1 %cmp, label %for.body, label %for.end, !dbg !14707

for.body:                                         ; preds = %for.cond
  %3 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14708, !tbaa !2995
  %4 = load i32, i32* %i, align 4, !dbg !14709, !tbaa !2982
  %idxprom = sext i32 %4 to i64, !dbg !14708
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %3, i64 %idxprom, !dbg !14708, !ctir !979
  %val = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !14710, !ctir !980
  %5 = load i8*, i8** %val, align 8, !dbg !14710, !tbaa !14711, !ctir !9
  call void @free(i8* %5) #10, !dbg !14713
  br label %for.inc, !dbg !14713

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !14714, !tbaa !2982
  %inc = add nsw i32 %6, 1, !dbg !14714
  store i32 %inc, i32* %i, align 4, !dbg !14714, !tbaa !2982
  br label %for.cond, !dbg !14715, !llvm.loop !14716

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14718, !tbaa !2995
  %arrayidx1 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %7, i64 0, !dbg !14718, !ctir !979
  %val2 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !14720, !ctir !980
  %8 = load i8*, i8** %val2, align 8, !dbg !14720, !tbaa !14711, !ctir !9
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !14721
  br i1 %cmp3, label %if.then, label %if.end, !dbg !14722

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14723, !tbaa !2995
  %arrayidx4 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 0, !dbg !14723, !ctir !979
  %val5 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !14725, !ctir !980
  %10 = load i8*, i8** %val5, align 8, !dbg !14725, !tbaa !14711, !ctir !9
  call void @free(i8* %10) #10, !dbg !14726
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !14727, !tbaa !14728, !ctir !55
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !14729, !tbaa !14711, !ctir !9
  br label %if.end, !dbg !14730

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14731, !tbaa !2995
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !14733
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !14734

if.then7:                                         ; preds = %if.end
  %12 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14735, !tbaa !2995
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !14735
  call void @free(i8* %13) #10, !dbg !14737
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !14738, !tbaa !2995
  br label %if.end8, !dbg !14739

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !14740, !tbaa !2982
  ret void, !dbg !14741
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #4 !dbg !14742 !ctir !984 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14743, metadata !DIExpression()), !dbg !14744
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14745, metadata !DIExpression()), !dbg !14746
  %0 = load i32, i32* %n.addr, align 4, !dbg !14747, !tbaa !2982
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14748, !tbaa !2995
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !14749
  ret i8* %call, !dbg !14750
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #4 !dbg !14751 !ctir !1044 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !7
  %sv = alloca %struct.slotvec*, align 8, !ctir !979
  %preallocated = alloca i8, align 1, !ctir !120
  %nmax = alloca i32, align 4, !ctir !7
  %size = alloca i64, align 8, !ctir !55
  %val = alloca i8*, align 8, !ctir !9
  %flags = alloca i32, align 4, !ctir !7
  %qsize = alloca i64, align 8, !ctir !55
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14752, metadata !DIExpression()), !dbg !14753
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14754, metadata !DIExpression()), !dbg !14755
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14756, metadata !DIExpression()), !dbg !14757
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !14758, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14760, metadata !DIExpression()), !dbg !14761
  %call = call i32* @__errno_location() #15, !dbg !14762
  %0 = load i32, i32* %call, align 4, !dbg !14762, !tbaa !2982, !ctir !7
  store i32 %0, i32* %e, align 4, !dbg !14761, !tbaa !2982
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !14763, metadata !DIExpression()), !dbg !14764
  %1 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !14765, !tbaa !2995
  store %struct.slotvec* %1, %struct.slotvec** %sv, align 8, !dbg !14764, !tbaa !2995
  %2 = load i32, i32* %n.addr, align 4, !dbg !14766, !tbaa !2982
  %cmp = icmp slt i32 %2, 0, !dbg !14768
  br i1 %cmp, label %if.then, label %if.end, !dbg !14769

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !14770
  unreachable, !dbg !14770

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !14771, !tbaa !2982
  %4 = load i32, i32* %n.addr, align 4, !dbg !14773, !tbaa !2982
  %cmp1 = icmp sle i32 %3, %4, !dbg !14774
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !14775

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !14776, metadata !DIExpression()), !dbg !14778
  %5 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14779, !tbaa !2995
  %cmp3 = icmp eq %struct.slotvec* %5, @slotvec0, !dbg !14780
  %frombool = zext i1 %cmp3 to i8, !dbg !14778
  store i8 %frombool, i8* %preallocated, align 1, !dbg !14778, !tbaa !3106
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !14781, metadata !DIExpression()), !dbg !14782
  store i32 2147483646, i32* %nmax, align 4, !dbg !14782, !tbaa !2982
  %6 = load i32, i32* %nmax, align 4, !dbg !14783, !tbaa !2982
  %7 = load i32, i32* %n.addr, align 4, !dbg !14785, !tbaa !2982
  %cmp4 = icmp slt i32 %6, %7, !dbg !14786
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !14787

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #16, !dbg !14788
  unreachable, !dbg !14788

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !14789, !tbaa !3106
  %tobool = trunc i8 %8 to i1, !dbg !14789
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14789

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !14789

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14790, !tbaa !2995
  br label %cond.end, !dbg !14789

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.slotvec* [ null, %cond.true ], [ %9, %cond.false ], !dbg !14789
  %10 = bitcast %struct.slotvec* %cond to i8*, !dbg !14789
  %11 = load i32, i32* %n.addr, align 4, !dbg !14791, !tbaa !2982
  %add = add nsw i32 %11, 1, !dbg !14792
  %conv = sext i32 %add to i64, !dbg !14793
  %mul = mul i64 %conv, 16, !dbg !14794
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !14795
  %12 = bitcast i8* %call7 to %struct.slotvec*, !dbg !14795
  store %struct.slotvec* %12, %struct.slotvec** %sv, align 8, !dbg !14796, !tbaa !2995
  store %struct.slotvec* %12, %struct.slotvec** @slotvec, align 8, !dbg !14797, !tbaa !2995
  %13 = load i8, i8* %preallocated, align 1, !dbg !14798, !tbaa !3106
  %tobool8 = trunc i8 %13 to i1, !dbg !14798
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !14800

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14801, !tbaa !2995
  %15 = bitcast %struct.slotvec* %14 to i8*, !dbg !14802
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !14802, !tbaa.struct !14803
  br label %if.end10, !dbg !14804

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14805, !tbaa !2995
  %17 = load i32, i32* @nslots, align 4, !dbg !14806, !tbaa !2982
  %idx.ext = sext i32 %17 to i64, !dbg !14807
  %add.ptr = getelementptr inbounds %struct.slotvec, %struct.slotvec* %16, i64 %idx.ext, !dbg !14807
  %18 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !14808
  %19 = load i32, i32* %n.addr, align 4, !dbg !14809, !tbaa !2982
  %add11 = add nsw i32 %19, 1, !dbg !14810
  %20 = load i32, i32* @nslots, align 4, !dbg !14811, !tbaa !2982
  %sub = sub nsw i32 %add11, %20, !dbg !14812
  %conv12 = sext i32 %sub to i64, !dbg !14813
  %mul13 = mul i64 %conv12, 16, !dbg !14814
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !14808
  %21 = load i32, i32* %n.addr, align 4, !dbg !14815, !tbaa !2982
  %add14 = add nsw i32 %21, 1, !dbg !14816
  store i32 %add14, i32* @nslots, align 4, !dbg !14817, !tbaa !2982
  br label %if.end15, !dbg !14818

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !14819, metadata !DIExpression()), !dbg !14821
  %22 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14822, !tbaa !2995
  %23 = load i32, i32* %n.addr, align 4, !dbg !14823, !tbaa !2982
  %idxprom = sext i32 %23 to i64, !dbg !14822
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %22, i64 %idxprom, !dbg !14822, !ctir !979
  %size16 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !14824, !ctir !980
  %24 = load i64, i64* %size16, align 8, !dbg !14824, !tbaa !14728, !ctir !55
  store i64 %24, i64* %size, align 8, !dbg !14821, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8** %val, metadata !14825, metadata !DIExpression()), !dbg !14826
  %25 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14827, !tbaa !2995
  %26 = load i32, i32* %n.addr, align 4, !dbg !14828, !tbaa !2982
  %idxprom17 = sext i32 %26 to i64, !dbg !14827
  %arrayidx18 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 %idxprom17, !dbg !14827, !ctir !979
  %val19 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx18, i32 0, i32 1, !dbg !14829, !ctir !980
  %27 = load i8*, i8** %val19, align 8, !dbg !14829, !tbaa !14711, !ctir !9
  store i8* %27, i8** %val, align 8, !dbg !14826, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14830, metadata !DIExpression()), !dbg !14831
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14832, !tbaa !2995
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !14833, !ctir !963
  %29 = load i32, i32* %flags20, align 4, !dbg !14833, !tbaa !13633, !ctir !7
  %or = or i32 %29, 1, !dbg !14834
  store i32 %or, i32* %flags, align 4, !dbg !14831, !tbaa !2982
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !14835, metadata !DIExpression()), !dbg !14836
  %30 = load i8*, i8** %val, align 8, !dbg !14837, !tbaa !2995
  %31 = load i64, i64* %size, align 8, !dbg !14838, !tbaa !3848
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !14839, !tbaa !2995
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !14840, !tbaa !3848
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14841, !tbaa !2995
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !14842, !ctir !963
  %35 = load i32, i32* %style, align 8, !dbg !14842, !tbaa !13565, !ctir !926
  %36 = load i32, i32* %flags, align 4, !dbg !14843, !tbaa !2982
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14844, !tbaa !2995
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !14845, !ctir !963
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14844
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14846, !tbaa !2995
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !14847, !ctir !963
  %39 = load i8*, i8** %left_quote, align 8, !dbg !14847, !tbaa !13666, !ctir !115
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14848, !tbaa !2995
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !14849, !ctir !963
  %41 = load i8*, i8** %right_quote, align 8, !dbg !14849, !tbaa !13671, !ctir !115
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !14850
  store i64 %call21, i64* %qsize, align 8, !dbg !14836, !tbaa !3848
  %42 = load i64, i64* %size, align 8, !dbg !14851, !tbaa !3848
  %43 = load i64, i64* %qsize, align 8, !dbg !14853, !tbaa !3848
  %cmp22 = icmp ule i64 %42, %43, !dbg !14854
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !14855

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !14856, !tbaa !3848
  %add25 = add i64 %44, 1, !dbg !14858
  store i64 %add25, i64* %size, align 8, !dbg !14859, !tbaa !3848
  %45 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14860, !tbaa !2995
  %46 = load i32, i32* %n.addr, align 4, !dbg !14861, !tbaa !2982
  %idxprom26 = sext i32 %46 to i64, !dbg !14860
  %arrayidx27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %45, i64 %idxprom26, !dbg !14860, !ctir !979
  %size28 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx27, i32 0, i32 0, !dbg !14862, !ctir !980
  store i64 %add25, i64* %size28, align 8, !dbg !14863, !tbaa !14728, !ctir !55
  %47 = load i8*, i8** %val, align 8, !dbg !14864, !tbaa !2995
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !14866
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !14867

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !14868, !tbaa !2995
  call void @free(i8* %48) #10, !dbg !14869
  br label %if.end32, !dbg !14869

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !14870, !tbaa !3848
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !14871
  store i8* %call33, i8** %val, align 8, !dbg !14872, !tbaa !2995
  %50 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14873, !tbaa !2995
  %51 = load i32, i32* %n.addr, align 4, !dbg !14874, !tbaa !2982
  %idxprom34 = sext i32 %51 to i64, !dbg !14873
  %arrayidx35 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %50, i64 %idxprom34, !dbg !14873, !ctir !979
  %val36 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx35, i32 0, i32 1, !dbg !14875, !ctir !980
  store i8* %call33, i8** %val36, align 8, !dbg !14876, !tbaa !14711, !ctir !9
  %52 = load i8*, i8** %val, align 8, !dbg !14877, !tbaa !2995
  %53 = load i64, i64* %size, align 8, !dbg !14878, !tbaa !3848
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !14879, !tbaa !2995
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !14880, !tbaa !3848
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14881, !tbaa !2995
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !14882, !ctir !963
  %57 = load i32, i32* %style37, align 8, !dbg !14882, !tbaa !13565, !ctir !926
  %58 = load i32, i32* %flags, align 4, !dbg !14883, !tbaa !2982
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14884, !tbaa !2995
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !14885, !ctir !963
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !14884
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14886, !tbaa !2995
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !14887, !ctir !963
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !14887, !tbaa !13666, !ctir !115
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14888, !tbaa !2995
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !14889, !ctir !963
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !14889, !tbaa !13671, !ctir !115
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !14890
  br label %if.end43, !dbg !14891

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !14892, !tbaa !2982
  %call44 = call i32* @__errno_location() #15, !dbg !14893
  store i32 %64, i32* %call44, align 4, !dbg !14894, !tbaa !2982, !ctir !7
  %65 = load i8*, i8** %val, align 8, !dbg !14895, !tbaa !2995
  ret i8* %65, !dbg !14896
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !14897 !ctir !986 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14898, metadata !DIExpression()), !dbg !14899
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14900, metadata !DIExpression()), !dbg !14901
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14902, metadata !DIExpression()), !dbg !14903
  %0 = load i32, i32* %n.addr, align 4, !dbg !14904, !tbaa !2982
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14905, !tbaa !2995
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !14906, !tbaa !3848
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !14907
  ret i8* %call, !dbg !14908
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #4 !dbg !14909 !ctir !988 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14910, metadata !DIExpression()), !dbg !14911
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14912, !tbaa !2995
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !14913
  ret i8* %call, !dbg !14914
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #4 !dbg !14915 !ctir !990 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14916, metadata !DIExpression()), !dbg !14917
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14918, metadata !DIExpression()), !dbg !14919
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14920, !tbaa !2995
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14921, !tbaa !3848
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !14922
  ret i8* %call, !dbg !14923
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #4 !dbg !14924 !ctir !992 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !963
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14925, metadata !DIExpression()), !dbg !14926
  store i32 %s, i32* %s.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14927, metadata !DIExpression()), !dbg !14928
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14929, metadata !DIExpression()), !dbg !14930
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14931, metadata !DIExpression()), !dbg !14932
  %0 = load i32, i32* %s.addr, align 4, !dbg !14933, !tbaa !3657
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !14934
  %1 = load i32, i32* %n.addr, align 4, !dbg !14935, !tbaa !2982
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14936, !tbaa !2995
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !14937
  ret i8* %call, !dbg !14938
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #4 !dbg !14939 !ctir !1046 {
entry:
  %style.addr = alloca i32, align 4
  store i32 %style, i32* %style.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !14940, metadata !DIExpression()), !dbg !14941
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !14942, metadata !DIExpression()), !dbg !14943
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !14943
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !14943
  %1 = load i32, i32* %style.addr, align 4, !dbg !14944, !tbaa !3657
  %cmp = icmp eq i32 %1, 10, !dbg !14946
  br i1 %cmp, label %if.then, label %if.end, !dbg !14947

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !14948
  unreachable, !dbg !14948

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !14949, !tbaa !3657
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !14950, !ctir !951
  store i32 %2, i32* %style1, align 8, !dbg !14951, !tbaa !13565, !ctir !926
  ret void, !dbg !14952
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #4 !dbg !14953 !ctir !994 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !963
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14954, metadata !DIExpression()), !dbg !14955
  store i32 %s, i32* %s.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14956, metadata !DIExpression()), !dbg !14957
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14958, metadata !DIExpression()), !dbg !14959
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14960, metadata !DIExpression()), !dbg !14961
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14962, metadata !DIExpression()), !dbg !14963
  %0 = load i32, i32* %s.addr, align 4, !dbg !14964, !tbaa !3657
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !14965
  %1 = load i32, i32* %n.addr, align 4, !dbg !14966, !tbaa !2982
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14967, !tbaa !2995
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !14968, !tbaa !3848
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !14969
  ret i8* %call, !dbg !14970
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #4 !dbg !14971 !ctir !996 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14972, metadata !DIExpression()), !dbg !14973
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14974, metadata !DIExpression()), !dbg !14975
  %0 = load i32, i32* %s.addr, align 4, !dbg !14976, !tbaa !3657
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14977, !tbaa !2995
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !14978
  ret i8* %call, !dbg !14979
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #4 !dbg !14980 !ctir !998 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %s, i32* %s.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14981, metadata !DIExpression()), !dbg !14982
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14983, metadata !DIExpression()), !dbg !14984
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14985, metadata !DIExpression()), !dbg !14986
  %0 = load i32, i32* %s.addr, align 4, !dbg !14987, !tbaa !3657
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14988, !tbaa !2995
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !14989, !tbaa !3848
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !14990
  ret i8* %call, !dbg !14991
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #4 !dbg !14992 !ctir !1000 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 8, !ctir !951
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14993, metadata !DIExpression()), !dbg !14994
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14995, metadata !DIExpression()), !dbg !14996
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !3657
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !14997, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !14999, metadata !DIExpression()), !dbg !15000
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !15001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15001, !tbaa.struct !15002
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15003, !tbaa !3657
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !15004
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15005, !tbaa !2995
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15006, !tbaa !3848
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !15007
  ret i8* %call1, !dbg !15008
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #4 !dbg !15009 !ctir !1002 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15010, metadata !DIExpression()), !dbg !15011
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !3657
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15012, metadata !DIExpression()), !dbg !15013
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15014, !tbaa !2995
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15015, !tbaa !3657
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !15016
  ret i8* %call, !dbg !15017
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #4 !dbg !15018 !ctir !988 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15019, metadata !DIExpression()), !dbg !15020
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15021, !tbaa !2995
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !15022
  ret i8* %call, !dbg !15023
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #4 !dbg !15024 !ctir !990 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15025, metadata !DIExpression()), !dbg !15026
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15027, metadata !DIExpression()), !dbg !15028
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15029, !tbaa !2995
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15030, !tbaa !3848
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !15031
  ret i8* %call, !dbg !15032
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #4 !dbg !15033 !ctir !992 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %options = alloca %struct.quoting_options, align 8, !ctir !951
  %tmp = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15034, metadata !DIExpression()), !dbg !15035
  store i32 %s, i32* %s.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15036, metadata !DIExpression()), !dbg !15037
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15038, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15040, metadata !DIExpression()), !dbg !15041
  %0 = load i32, i32* %s.addr, align 4, !dbg !15042, !tbaa !3657
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !15043
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !15043
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !15043
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !15043, !tbaa.struct !15002
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !15044
  %3 = load i32, i32* %n.addr, align 4, !dbg !15045, !tbaa !2982
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15046, !tbaa !2995
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !15047
  ret i8* %call1, !dbg !15048
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15049 !ctir !1004 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15050, metadata !DIExpression()), !dbg !15051
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15052, metadata !DIExpression()), !dbg !15053
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15054, metadata !DIExpression()), !dbg !15055
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15056, metadata !DIExpression()), !dbg !15057
  %0 = load i32, i32* %n.addr, align 4, !dbg !15058, !tbaa !2982
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15059, !tbaa !2995
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15060, !tbaa !2995
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !15061, !tbaa !2995
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !15062
  ret i8* %call, !dbg !15063
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15064 !ctir !1006 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !951
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15065, metadata !DIExpression()), !dbg !15066
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15067, metadata !DIExpression()), !dbg !15068
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15069, metadata !DIExpression()), !dbg !15070
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15071, metadata !DIExpression()), !dbg !15072
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15073, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15075, metadata !DIExpression()), !dbg !15076
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !15077
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15077, !tbaa.struct !15002
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15078, !tbaa !2995
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15079, !tbaa !2995
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !15080
  %3 = load i32, i32* %n.addr, align 4, !dbg !15081, !tbaa !2982
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15082, !tbaa !2995
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !15083, !tbaa !3848
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !15084
  ret i8* %call, !dbg !15085
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15086 !ctir !1008 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15087, metadata !DIExpression()), !dbg !15088
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15089, metadata !DIExpression()), !dbg !15090
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15091, metadata !DIExpression()), !dbg !15092
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15093, !tbaa !2995
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15094, !tbaa !2995
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15095, !tbaa !2995
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !15096
  ret i8* %call, !dbg !15097
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15098 !ctir !1010 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15099, metadata !DIExpression()), !dbg !15100
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15101, metadata !DIExpression()), !dbg !15102
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15103, metadata !DIExpression()), !dbg !15104
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15105, metadata !DIExpression()), !dbg !15106
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15107, !tbaa !2995
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15108, !tbaa !2995
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15109, !tbaa !2995
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15110, !tbaa !3848
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !15111
  ret i8* %call, !dbg !15112
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !15113 !ctir !1012 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15114, metadata !DIExpression()), !dbg !15115
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15116, metadata !DIExpression()), !dbg !15117
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15118, metadata !DIExpression()), !dbg !15119
  %0 = load i32, i32* %n.addr, align 4, !dbg !15120, !tbaa !2982
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15121, !tbaa !2995
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15122, !tbaa !3848
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !15123
  ret i8* %call, !dbg !15124
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #4 !dbg !15125 !ctir !1014 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15126, metadata !DIExpression()), !dbg !15127
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15128, metadata !DIExpression()), !dbg !15129
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15130, !tbaa !2995
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15131, !tbaa !3848
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !15132
  ret i8* %call, !dbg !15133
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #4 !dbg !15134 !ctir !1016 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15135, metadata !DIExpression()), !dbg !15136
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15137, metadata !DIExpression()), !dbg !15138
  %0 = load i32, i32* %n.addr, align 4, !dbg !15139, !tbaa !2982
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15140, !tbaa !2995
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !15141
  ret i8* %call, !dbg !15142
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #4 !dbg !15143 !ctir !1018 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15144, metadata !DIExpression()), !dbg !15145
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15146, !tbaa !2995
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !15147
  ret i8* %call, !dbg !15148
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @renameatu(i32 %fd1, i8* %src, i32 %fd2, i8* %dst, i32 %flags) #4 !dbg !15149 !ctir !1825 {
entry:
  %retval = alloca i32, align 4
  %fd1.addr = alloca i32, align 4
  %src.addr = alloca i8*, align 8
  %fd2.addr = alloca i32, align 4
  %dst.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %ret_val = alloca i32, align 4, !ctir !7
  %err = alloca i32, align 4, !ctir !7
  %src_len = alloca i64, align 8, !ctir !55
  %dst_len = alloca i64, align 8, !ctir !55
  %src_temp = alloca i8*, align 8, !ctir !9
  %dst_temp = alloca i8*, align 8, !ctir !9
  %src_slash = alloca i8, align 1, !ctir !120
  %dst_slash = alloca i8, align 1, !ctir !120
  %rename_errno = alloca i32, align 4, !ctir !7
  %src_st = alloca %struct.stat, align 8, !ctir !15151
  %dst_st = alloca %struct.stat, align 8, !ctir !15151
  %dst_found_nonexistent = alloca i8, align 1, !ctir !120
  store i32 %fd1, i32* %fd1.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd1.addr, metadata !15172, metadata !DIExpression()), !dbg !15173
  store i8* %src, i8** %src.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15174, metadata !DIExpression()), !dbg !15175
  store i32 %fd2, i32* %fd2.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd2.addr, metadata !15176, metadata !DIExpression()), !dbg !15177
  store i8* %dst, i8** %dst.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !15178, metadata !DIExpression()), !dbg !15179
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15180, metadata !DIExpression()), !dbg !15181
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !15182, metadata !DIExpression()), !dbg !15183
  store i32 -1, i32* %ret_val, align 4, !dbg !15183, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15184, metadata !DIExpression()), !dbg !15185
  store i32 22, i32* %err, align 4, !dbg !15185, !tbaa !2982
  %0 = load i32, i32* %fd1.addr, align 4, !dbg !15186, !tbaa !2982
  %1 = load i8*, i8** %src.addr, align 8, !dbg !15187, !tbaa !2995
  %2 = load i32, i32* %fd2.addr, align 4, !dbg !15188, !tbaa !2982
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !15189, !tbaa !2995
  %4 = load i32, i32* %flags.addr, align 4, !dbg !15190, !tbaa !2982
  %call = call i32 @renameat2(i32 %0, i8* %1, i32 %2, i8* %3, i32 %4) #10, !dbg !15191
  store i32 %call, i32* %ret_val, align 4, !dbg !15192, !tbaa !2982
  %call1 = call i32* @__errno_location() #15, !dbg !15193
  %5 = load i32, i32* %call1, align 4, !dbg !15193, !tbaa !2982, !ctir !7
  store i32 %5, i32* %err, align 4, !dbg !15194, !tbaa !2982
  %6 = load i32, i32* %ret_val, align 4, !dbg !15195, !tbaa !2982
  %cmp = icmp slt i32 %6, 0, !dbg !15197
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !15198

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !15199, !tbaa !2982
  %cmp2 = icmp eq i32 %7, 22, !dbg !15200
  br i1 %cmp2, label %if.end, label %lor.lhs.false, !dbg !15201

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load i32, i32* %err, align 4, !dbg !15202, !tbaa !2982
  %cmp3 = icmp eq i32 %8, 38, !dbg !15203
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !15204

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %9 = load i32, i32* %err, align 4, !dbg !15205, !tbaa !2982
  %cmp5 = icmp eq i32 %9, 95, !dbg !15206
  br i1 %cmp5, label %if.end, label %if.then, !dbg !15207

if.then:                                          ; preds = %lor.lhs.false4, %entry
  %10 = load i32, i32* %ret_val, align 4, !dbg !15208, !tbaa !2982
  store i32 %10, i32* %retval, align 4, !dbg !15209
  br label %return, !dbg !15209

if.end:                                           ; preds = %lor.lhs.false4, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %src_len, metadata !15210, metadata !DIExpression()), !dbg !15212
  call void @llvm.dbg.declare(metadata i64* %dst_len, metadata !15213, metadata !DIExpression()), !dbg !15214
  call void @llvm.dbg.declare(metadata i8** %src_temp, metadata !15215, metadata !DIExpression()), !dbg !15216
  %11 = load i8*, i8** %src.addr, align 8, !dbg !15217, !tbaa !2995
  store i8* %11, i8** %src_temp, align 8, !dbg !15216, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_temp, metadata !15218, metadata !DIExpression()), !dbg !15219
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !15220, !tbaa !2995
  store i8* %12, i8** %dst_temp, align 8, !dbg !15219, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8* %src_slash, metadata !15221, metadata !DIExpression()), !dbg !15222
  call void @llvm.dbg.declare(metadata i8* %dst_slash, metadata !15223, metadata !DIExpression()), !dbg !15224
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !15225, metadata !DIExpression()), !dbg !15226
  store i32 20, i32* %rename_errno, align 4, !dbg !15226, !tbaa !2982
  call void @llvm.dbg.declare(metadata %struct.stat* %src_st, metadata !15227, metadata !DIExpression()), !dbg !15228
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_st, metadata !15229, metadata !DIExpression()), !dbg !15230
  call void @llvm.dbg.declare(metadata i8* %dst_found_nonexistent, metadata !15231, metadata !DIExpression()), !dbg !15232
  store i8 0, i8* %dst_found_nonexistent, align 1, !dbg !15232, !tbaa !3106
  %13 = load i32, i32* %flags.addr, align 4, !dbg !15233, !tbaa !2982
  %cmp6 = icmp ne i32 %13, 0, !dbg !15235
  br i1 %cmp6, label %if.then7, label %if.end23, !dbg !15236

if.then7:                                         ; preds = %if.end
  %14 = load i32, i32* %flags.addr, align 4, !dbg !15237, !tbaa !2982
  %and = and i32 %14, -2, !dbg !15240
  %tobool = icmp ne i32 %and, 0, !dbg !15240
  br i1 %tobool, label %if.then8, label %if.else, !dbg !15241

if.then8:                                         ; preds = %if.then7
  %call9 = call i32 @errno_fail(i32 95), !dbg !15242
  store i32 %call9, i32* %retval, align 4, !dbg !15243
  br label %return, !dbg !15243

if.else:                                          ; preds = %if.then7
  %15 = load i32, i32* %fd2.addr, align 4, !dbg !15244, !tbaa !2982
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !15247, !tbaa !2995
  %call10 = call i32 @lstatat(i32 %15, i8* %16, %struct.stat* %dst_st), !dbg !15248
  %cmp11 = icmp eq i32 %call10, 0, !dbg !15249
  br i1 %cmp11, label %if.then15, label %lor.lhs.false12, !dbg !15250

lor.lhs.false12:                                  ; preds = %if.else
  %call13 = call i32* @__errno_location() #15, !dbg !15251
  %17 = load i32, i32* %call13, align 4, !dbg !15251, !tbaa !2982, !ctir !7
  %cmp14 = icmp eq i32 %17, 75, !dbg !15252
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !15253

if.then15:                                        ; preds = %lor.lhs.false12, %if.else
  %call16 = call i32 @errno_fail(i32 17), !dbg !15254
  store i32 %call16, i32* %retval, align 4, !dbg !15255
  br label %return, !dbg !15255

if.end17:                                         ; preds = %lor.lhs.false12
  %call18 = call i32* @__errno_location() #15, !dbg !15256
  %18 = load i32, i32* %call18, align 4, !dbg !15256, !tbaa !2982, !ctir !7
  %cmp19 = icmp ne i32 %18, 2, !dbg !15258
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !15259

if.then20:                                        ; preds = %if.end17
  store i32 -1, i32* %retval, align 4, !dbg !15260
  br label %return, !dbg !15260

if.end21:                                         ; preds = %if.end17
  store i8 1, i8* %dst_found_nonexistent, align 1, !dbg !15261, !tbaa !3106
  br label %if.end22

if.end22:                                         ; preds = %if.end21
  br label %if.end23, !dbg !15262

if.end23:                                         ; preds = %if.end22, %if.end
  %19 = load i8*, i8** %src.addr, align 8, !dbg !15263, !tbaa !2995
  %call24 = call i64 @strlen(i8* %19) #14, !dbg !15264
  store i64 %call24, i64* %src_len, align 8, !dbg !15265, !tbaa !3848
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !15266, !tbaa !2995
  %call25 = call i64 @strlen(i8* %20) #14, !dbg !15267
  store i64 %call25, i64* %dst_len, align 8, !dbg !15268, !tbaa !3848
  %21 = load i64, i64* %src_len, align 8, !dbg !15269, !tbaa !3848
  %tobool26 = icmp ne i64 %21, 0, !dbg !15269
  br i1 %tobool26, label %lor.lhs.false27, label %if.then29, !dbg !15271

lor.lhs.false27:                                  ; preds = %if.end23
  %22 = load i64, i64* %dst_len, align 8, !dbg !15272, !tbaa !3848
  %tobool28 = icmp ne i64 %22, 0, !dbg !15272
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !15273

if.then29:                                        ; preds = %lor.lhs.false27, %if.end23
  %23 = load i32, i32* %fd1.addr, align 4, !dbg !15274, !tbaa !2982
  %24 = load i8*, i8** %src.addr, align 8, !dbg !15275, !tbaa !2995
  %25 = load i32, i32* %fd2.addr, align 4, !dbg !15276, !tbaa !2982
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !15277, !tbaa !2995
  %call30 = call i32 @renameat(i32 %23, i8* %24, i32 %25, i8* %26) #10, !dbg !15278
  store i32 %call30, i32* %retval, align 4, !dbg !15279
  br label %return, !dbg !15279

if.end31:                                         ; preds = %lor.lhs.false27
  %27 = load i8*, i8** %src.addr, align 8, !dbg !15280, !tbaa !2995
  %28 = load i64, i64* %src_len, align 8, !dbg !15281, !tbaa !3848
  %sub = sub i64 %28, 1, !dbg !15282
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 %sub, !dbg !15280, !ctir !115
  %29 = load i8, i8* %arrayidx, align 1, !dbg !15280, !tbaa !3657
  %conv = sext i8 %29 to i32, !dbg !15280
  %cmp32 = icmp eq i32 %conv, 47, !dbg !15283
  %frombool = zext i1 %cmp32 to i8, !dbg !15284
  store i8 %frombool, i8* %src_slash, align 1, !dbg !15284, !tbaa !3106
  %30 = load i8*, i8** %dst.addr, align 8, !dbg !15285, !tbaa !2995
  %31 = load i64, i64* %dst_len, align 8, !dbg !15286, !tbaa !3848
  %sub34 = sub i64 %31, 1, !dbg !15287
  %arrayidx35 = getelementptr inbounds i8, i8* %30, i64 %sub34, !dbg !15285, !ctir !115
  %32 = load i8, i8* %arrayidx35, align 1, !dbg !15285, !tbaa !3657
  %conv36 = sext i8 %32 to i32, !dbg !15285
  %cmp37 = icmp eq i32 %conv36, 47, !dbg !15288
  %frombool39 = zext i1 %cmp37 to i8, !dbg !15289
  store i8 %frombool39, i8* %dst_slash, align 1, !dbg !15289, !tbaa !3106
  %33 = load i8, i8* %src_slash, align 1, !dbg !15290, !tbaa !3106
  %tobool40 = trunc i8 %33 to i1, !dbg !15290
  br i1 %tobool40, label %if.end45, label %land.lhs.true41, !dbg !15292

land.lhs.true41:                                  ; preds = %if.end31
  %34 = load i8, i8* %dst_slash, align 1, !dbg !15293, !tbaa !3106
  %tobool42 = trunc i8 %34 to i1, !dbg !15293
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !15294

if.then43:                                        ; preds = %land.lhs.true41
  %35 = load i32, i32* %fd1.addr, align 4, !dbg !15295, !tbaa !2982
  %36 = load i8*, i8** %src.addr, align 8, !dbg !15296, !tbaa !2995
  %37 = load i32, i32* %fd2.addr, align 4, !dbg !15297, !tbaa !2982
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !15298, !tbaa !2995
  %call44 = call i32 @renameat(i32 %35, i8* %36, i32 %37, i8* %38) #10, !dbg !15299
  store i32 %call44, i32* %retval, align 4, !dbg !15300
  br label %return, !dbg !15300

if.end45:                                         ; preds = %land.lhs.true41, %if.end31
  %39 = load i32, i32* %fd1.addr, align 4, !dbg !15301, !tbaa !2982
  %40 = load i8*, i8** %src.addr, align 8, !dbg !15303, !tbaa !2995
  %call46 = call i32 @lstatat(i32 %39, i8* %40, %struct.stat* %src_st), !dbg !15304
  %tobool47 = icmp ne i32 %call46, 0, !dbg !15304
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !15305

if.then48:                                        ; preds = %if.end45
  store i32 -1, i32* %retval, align 4, !dbg !15306
  br label %return, !dbg !15306

if.end49:                                         ; preds = %if.end45
  %41 = load i8, i8* %dst_found_nonexistent, align 1, !dbg !15307, !tbaa !3106
  %tobool50 = trunc i8 %41 to i1, !dbg !15307
  br i1 %tobool50, label %if.then51, label %if.else58, !dbg !15309

if.then51:                                        ; preds = %if.end49
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15310, !ctir !15151
  %42 = load i32, i32* %st_mode, align 8, !dbg !15310, !tbaa !3178, !ctir !133
  %and52 = and i32 %42, 61440, !dbg !15310
  %cmp53 = icmp eq i32 %and52, 16384, !dbg !15310
  br i1 %cmp53, label %if.end57, label %if.then55, !dbg !15313

if.then55:                                        ; preds = %if.then51
  %call56 = call i32 @errno_fail(i32 2), !dbg !15314
  store i32 %call56, i32* %retval, align 4, !dbg !15315
  br label %return, !dbg !15315

if.end57:                                         ; preds = %if.then51
  br label %if.end89, !dbg !15316

if.else58:                                        ; preds = %if.end49
  %43 = load i32, i32* %fd2.addr, align 4, !dbg !15317, !tbaa !2982
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !15319, !tbaa !2995
  %call59 = call i32 @lstatat(i32 %43, i8* %44, %struct.stat* %dst_st), !dbg !15320
  %tobool60 = icmp ne i32 %call59, 0, !dbg !15320
  br i1 %tobool60, label %if.then61, label %if.else72, !dbg !15321

if.then61:                                        ; preds = %if.else58
  %call62 = call i32* @__errno_location() #15, !dbg !15322
  %45 = load i32, i32* %call62, align 4, !dbg !15322, !tbaa !2982, !ctir !7
  %cmp63 = icmp ne i32 %45, 2, !dbg !15325
  br i1 %cmp63, label %if.then70, label %lor.lhs.false65, !dbg !15326

lor.lhs.false65:                                  ; preds = %if.then61
  %st_mode66 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15327, !ctir !15151
  %46 = load i32, i32* %st_mode66, align 8, !dbg !15327, !tbaa !3178, !ctir !133
  %and67 = and i32 %46, 61440, !dbg !15327
  %cmp68 = icmp eq i32 %and67, 16384, !dbg !15327
  br i1 %cmp68, label %if.end71, label %if.then70, !dbg !15328

if.then70:                                        ; preds = %lor.lhs.false65, %if.then61
  store i32 -1, i32* %retval, align 4, !dbg !15329
  br label %return, !dbg !15329

if.end71:                                         ; preds = %lor.lhs.false65
  br label %if.end88, !dbg !15330

if.else72:                                        ; preds = %if.else58
  %st_mode73 = getelementptr inbounds %struct.stat, %struct.stat* %dst_st, i32 0, i32 3, !dbg !15331, !ctir !15151
  %47 = load i32, i32* %st_mode73, align 8, !dbg !15331, !tbaa !3178, !ctir !133
  %and74 = and i32 %47, 61440, !dbg !15331
  %cmp75 = icmp eq i32 %and74, 16384, !dbg !15331
  br i1 %cmp75, label %if.else79, label %if.then77, !dbg !15333

if.then77:                                        ; preds = %if.else72
  %call78 = call i32 @errno_fail(i32 20), !dbg !15334
  store i32 %call78, i32* %retval, align 4, !dbg !15335
  br label %return, !dbg !15335

if.else79:                                        ; preds = %if.else72
  %st_mode80 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15336, !ctir !15151
  %48 = load i32, i32* %st_mode80, align 8, !dbg !15336, !tbaa !3178, !ctir !133
  %and81 = and i32 %48, 61440, !dbg !15336
  %cmp82 = icmp eq i32 %and81, 16384, !dbg !15336
  br i1 %cmp82, label %if.end86, label %if.then84, !dbg !15338

if.then84:                                        ; preds = %if.else79
  %call85 = call i32 @errno_fail(i32 21), !dbg !15339
  store i32 %call85, i32* %retval, align 4, !dbg !15340
  br label %return, !dbg !15340

if.end86:                                         ; preds = %if.else79
  br label %if.end87

if.end87:                                         ; preds = %if.end86
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end71
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end57
  %49 = load i32, i32* %fd1.addr, align 4, !dbg !15341, !tbaa !2982
  %50 = load i8*, i8** %src_temp, align 8, !dbg !15342, !tbaa !2995
  %51 = load i32, i32* %fd2.addr, align 4, !dbg !15343, !tbaa !2982
  %52 = load i8*, i8** %dst_temp, align 8, !dbg !15344, !tbaa !2995
  %call90 = call i32 @renameat(i32 %49, i8* %50, i32 %51, i8* %52) #10, !dbg !15345
  store i32 %call90, i32* %ret_val, align 4, !dbg !15346, !tbaa !2982
  %call91 = call i32* @__errno_location() #15, !dbg !15347
  %53 = load i32, i32* %call91, align 4, !dbg !15347, !tbaa !2982, !ctir !7
  store i32 %53, i32* %rename_errno, align 4, !dbg !15348, !tbaa !2982
  br label %out, !dbg !15349

out:                                              ; preds = %if.end89
  call void @llvm.dbg.label(metadata !15350), !dbg !15351
  %54 = load i8*, i8** %src_temp, align 8, !dbg !15352, !tbaa !2995
  %55 = load i8*, i8** %src.addr, align 8, !dbg !15354, !tbaa !2995
  %cmp92 = icmp ne i8* %54, %55, !dbg !15355
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !15356

if.then94:                                        ; preds = %out
  %56 = load i8*, i8** %src_temp, align 8, !dbg !15357, !tbaa !2995
  call void @free(i8* %56) #10, !dbg !15358
  br label %if.end95, !dbg !15358

if.end95:                                         ; preds = %if.then94, %out
  %57 = load i8*, i8** %dst_temp, align 8, !dbg !15359, !tbaa !2995
  %58 = load i8*, i8** %dst.addr, align 8, !dbg !15361, !tbaa !2995
  %cmp96 = icmp ne i8* %57, %58, !dbg !15362
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !15363

if.then98:                                        ; preds = %if.end95
  %59 = load i8*, i8** %dst_temp, align 8, !dbg !15364, !tbaa !2995
  call void @free(i8* %59) #10, !dbg !15365
  br label %if.end99, !dbg !15365

if.end99:                                         ; preds = %if.then98, %if.end95
  %60 = load i32, i32* %rename_errno, align 4, !dbg !15366, !tbaa !2982
  %call100 = call i32* @__errno_location() #15, !dbg !15367
  store i32 %60, i32* %call100, align 4, !dbg !15368, !tbaa !2982, !ctir !7
  %61 = load i32, i32* %ret_val, align 4, !dbg !15369, !tbaa !2982
  store i32 %61, i32* %retval, align 4, !dbg !15370
  br label %return, !dbg !15370

return:                                           ; preds = %if.end99, %if.then84, %if.then77, %if.then70, %if.then55, %if.then48, %if.then43, %if.then29, %if.then20, %if.then15, %if.then8, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !15371
  ret i32 %62, !dbg !15371
}

; Function Attrs: nounwind
declare dso_local i32 @renameat2(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @errno_fail(i32 %e) #4 !dbg !15372 !ctir !1827 {
entry:
  %e.addr = alloca i32, align 4
  store i32 %e, i32* %e.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %e.addr, metadata !15373, metadata !DIExpression()), !dbg !15374
  %0 = load i32, i32* %e.addr, align 4, !dbg !15375, !tbaa !2982
  %call = call i32* @__errno_location() #15, !dbg !15376
  store i32 %0, i32* %call, align 4, !dbg !15377, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15378
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.timespec* @get_root_dev_ino(%struct.timespec* %root_d_i) #4 !dbg !15379 !ctir !1832 {
entry:
  %retval = alloca %struct.timespec*, align 8
  %root_d_i.addr = alloca %struct.timespec*, align 8
  %statbuf = alloca %struct.stat, align 8, !ctir !15381
  store %struct.timespec* %root_d_i, %struct.timespec** %root_d_i.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.timespec** %root_d_i.addr, metadata !15402, metadata !DIExpression()), !dbg !15403
  call void @llvm.dbg.declare(metadata %struct.stat* %statbuf, metadata !15404, metadata !DIExpression()), !dbg !15405
  %call = call i32 @lstat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.335, i64 0, i64 0), %struct.stat* %statbuf) #10, !dbg !15406
  %tobool = icmp ne i32 %call, 0, !dbg !15406
  br i1 %tobool, label %if.then, label %if.end, !dbg !15408

if.then:                                          ; preds = %entry
  store %struct.timespec* null, %struct.timespec** %retval, align 8, !dbg !15409
  br label %return, !dbg !15409

if.end:                                           ; preds = %entry
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 1, !dbg !15410, !ctir !15381
  %0 = load i64, i64* %st_ino, align 8, !dbg !15410, !tbaa !3870, !ctir !228
  %1 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !15411, !tbaa !2995
  %st_ino1 = getelementptr inbounds %struct.timespec, %struct.timespec* %1, i32 0, i32 0, !dbg !15412, !ctir !1835
  store i64 %0, i64* %st_ino1, align 8, !dbg !15413, !tbaa !3871, !ctir !227
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 0, !dbg !15414, !ctir !15381
  %2 = load i64, i64* %st_dev, align 8, !dbg !15414, !tbaa !3873, !ctir !231
  %3 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !15415, !tbaa !2995
  %st_dev2 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i32 0, i32 1, !dbg !15416, !ctir !1835
  store i64 %2, i64* %st_dev2, align 8, !dbg !15417, !tbaa !3874, !ctir !230
  %4 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !15418, !tbaa !2995
  store %struct.timespec* %4, %struct.timespec** %retval, align 8, !dbg !15419
  br label %return, !dbg !15419

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct.timespec*, %struct.timespec** %retval, align 8, !dbg !15420
  ret %struct.timespec* %5, !dbg !15420
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !15421 !ctir !1794 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i64, align 8, !ctir !606
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15423, metadata !DIExpression()), !dbg !15424
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15425, metadata !DIExpression()), !dbg !15426
  store i64 %count, i64* %count.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15427, metadata !DIExpression()), !dbg !15428
  br label %for.cond, !dbg !15429

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !15430, metadata !DIExpression()), !dbg !15434
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15435, !tbaa !2982
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !15436, !tbaa !2995
  %2 = load i64, i64* %count.addr, align 8, !dbg !15437, !tbaa !3848
  %call = call i64 @write(i32 %0, i8* %1, i64 %2), !dbg !15438
  store i64 %call, i64* %result, align 8, !dbg !15434, !tbaa !3848
  %3 = load i64, i64* %result, align 8, !dbg !15439, !tbaa !3848
  %cmp = icmp sle i64 0, %3, !dbg !15441
  br i1 %cmp, label %if.then, label %if.else, !dbg !15442

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !15443, !tbaa !3848
  store i64 %4, i64* %retval, align 8, !dbg !15444
  br label %return, !dbg !15444

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #15, !dbg !15445
  %5 = load i32, i32* %call1, align 4, !dbg !15445, !tbaa !2982, !ctir !7
  %cmp2 = icmp eq i32 %5, 4, !dbg !15445
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !15447

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !15448, !llvm.loop !15449

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #15, !dbg !15452
  %6 = load i32, i32* %call5, align 4, !dbg !15452, !tbaa !2982, !ctir !7
  %cmp6 = icmp eq i32 %6, 22, !dbg !15454
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !15455

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !15456, !tbaa !3848
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !15457
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !15458

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !15459, !tbaa !3848
  br label %if.end, !dbg !15460

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !15461, !tbaa !3848
  store i64 %8, i64* %retval, align 8, !dbg !15462
  br label %return, !dbg !15462

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !15463, !llvm.loop !15449

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !15464
  ret i64 %9, !dbg !15464
}

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_name(i8* %source, i8* %dest) #4 !dbg !15465 !ctir !1845 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  store i8* %source, i8** %source.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15467, metadata !DIExpression()), !dbg !15468
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15469, metadata !DIExpression()), !dbg !15470
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15471, !tbaa !2995
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15472, !tbaa !2995
  %call = call zeroext i1 @same_nameat(i32 -100, i8* %0, i32 -100, i8* %1), !dbg !15473
  ret i1 %call, !dbg !15474
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) #4 !dbg !15475 !ctir !1847 {
entry:
  %source_dfd.addr = alloca i32, align 4
  %source.addr = alloca i8*, align 8
  %dest_dfd.addr = alloca i32, align 4
  %dest.addr = alloca i8*, align 8
  %source_basename = alloca i8*, align 8, !ctir !115
  %dest_basename = alloca i8*, align 8, !ctir !115
  %source_baselen = alloca i64, align 8, !ctir !55
  %dest_baselen = alloca i64, align 8, !ctir !55
  %identical_basenames = alloca i8, align 1, !ctir !120
  %compare_dirs = alloca i8, align 1, !ctir !120
  %same = alloca i8, align 1, !ctir !120
  %source_dir_stats = alloca %struct.stat, align 8, !ctir !15476
  %dest_dir_stats = alloca %struct.stat, align 8, !ctir !15476
  %source_dirname = alloca i8*, align 8, !ctir !9
  %flags = alloca i32, align 4, !ctir !7
  %dest_dirname = alloca i8*, align 8, !ctir !9
  store i32 %source_dfd, i32* %source_dfd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %source_dfd.addr, metadata !15497, metadata !DIExpression()), !dbg !15498
  store i8* %source, i8** %source.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15499, metadata !DIExpression()), !dbg !15500
  store i32 %dest_dfd, i32* %dest_dfd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dest_dfd.addr, metadata !15501, metadata !DIExpression()), !dbg !15502
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15503, metadata !DIExpression()), !dbg !15504
  call void @llvm.dbg.declare(metadata i8** %source_basename, metadata !15505, metadata !DIExpression()), !dbg !15506
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15507, !tbaa !2995
  %call = call i8* @last_component(i8* %0) #14, !dbg !15508
  store i8* %call, i8** %source_basename, align 8, !dbg !15506, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dest_basename, metadata !15509, metadata !DIExpression()), !dbg !15510
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15511, !tbaa !2995
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !15512
  store i8* %call1, i8** %dest_basename, align 8, !dbg !15510, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %source_baselen, metadata !15513, metadata !DIExpression()), !dbg !15514
  %2 = load i8*, i8** %source_basename, align 8, !dbg !15515, !tbaa !2995
  %call2 = call i64 @base_len(i8* %2) #14, !dbg !15516
  store i64 %call2, i64* %source_baselen, align 8, !dbg !15514, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %dest_baselen, metadata !15517, metadata !DIExpression()), !dbg !15518
  %3 = load i8*, i8** %dest_basename, align 8, !dbg !15519, !tbaa !2995
  %call3 = call i64 @base_len(i8* %3) #14, !dbg !15520
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !15518, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8* %identical_basenames, metadata !15521, metadata !DIExpression()), !dbg !15522
  %4 = load i64, i64* %source_baselen, align 8, !dbg !15523, !tbaa !3848
  %5 = load i64, i64* %dest_baselen, align 8, !dbg !15524, !tbaa !3848
  %cmp = icmp eq i64 %4, %5, !dbg !15525
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !15526

land.rhs:                                         ; preds = %entry
  %6 = load i8*, i8** %source_basename, align 8, !dbg !15527, !tbaa !2995
  %7 = load i8*, i8** %dest_basename, align 8, !dbg !15528, !tbaa !2995
  %8 = load i64, i64* %dest_baselen, align 8, !dbg !15529, !tbaa !3848
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #14, !dbg !15530
  %cmp5 = icmp eq i32 %call4, 0, !dbg !15531
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !15532
  %frombool = zext i1 %9 to i8, !dbg !15522
  store i8 %frombool, i8* %identical_basenames, align 1, !dbg !15522, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %compare_dirs, metadata !15533, metadata !DIExpression()), !dbg !15534
  %10 = load i8, i8* %identical_basenames, align 1, !dbg !15535, !tbaa !3106
  %tobool = trunc i8 %10 to i1, !dbg !15535
  %frombool6 = zext i1 %tobool to i8, !dbg !15534
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !15534, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %same, metadata !15536, metadata !DIExpression()), !dbg !15537
  store i8 0, i8* %same, align 1, !dbg !15537, !tbaa !3106
  %11 = load i8, i8* %compare_dirs, align 1, !dbg !15538, !tbaa !3106
  %tobool7 = trunc i8 %11 to i1, !dbg !15538
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !15540

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.stat* %source_dir_stats, metadata !15541, metadata !DIExpression()), !dbg !15543
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_dir_stats, metadata !15544, metadata !DIExpression()), !dbg !15545
  call void @llvm.dbg.declare(metadata i8** %source_dirname, metadata !15546, metadata !DIExpression()), !dbg !15547
  %12 = load i8*, i8** %source.addr, align 8, !dbg !15548, !tbaa !2995
  %call8 = call i8* @dir_name(i8* %12), !dbg !15549
  store i8* %call8, i8** %source_dirname, align 8, !dbg !15547, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15550, metadata !DIExpression()), !dbg !15551
  store i32 256, i32* %flags, align 4, !dbg !15551, !tbaa !2982
  %13 = load i32, i32* %source_dfd.addr, align 4, !dbg !15552, !tbaa !2982
  %14 = load i8*, i8** %source_dirname, align 8, !dbg !15554, !tbaa !2995
  %15 = load i32, i32* %flags, align 4, !dbg !15555, !tbaa !2982
  %call9 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %source_dir_stats, i32 %15) #10, !dbg !15556
  %cmp10 = icmp ne i32 %call9, 0, !dbg !15557
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !15558

if.then11:                                        ; preds = %if.then
  %call12 = call i32* @__errno_location() #15, !dbg !15559
  %16 = load i32, i32* %call12, align 4, !dbg !15559, !tbaa !2982, !ctir !7
  %17 = load i8*, i8** %source_dirname, align 8, !dbg !15561, !tbaa !2995
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.340, i64 0, i64 0), i8* %17), !dbg !15562
  br label %if.end, !dbg !15563

if.end:                                           ; preds = %if.then11, %if.then
  %18 = load i8*, i8** %source_dirname, align 8, !dbg !15564, !tbaa !2995
  call void @free(i8* %18) #10, !dbg !15565
  call void @llvm.dbg.declare(metadata i8** %dest_dirname, metadata !15566, metadata !DIExpression()), !dbg !15567
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !15568, !tbaa !2995
  %call13 = call i8* @dir_name(i8* %19), !dbg !15569
  store i8* %call13, i8** %dest_dirname, align 8, !dbg !15567, !tbaa !2995
  %20 = load i32, i32* %dest_dfd.addr, align 4, !dbg !15570, !tbaa !2982
  %21 = load i8*, i8** %dest_dirname, align 8, !dbg !15572, !tbaa !2995
  %22 = load i32, i32* %flags, align 4, !dbg !15573, !tbaa !2982
  %call14 = call i32 @fstatat(i32 %20, i8* %21, %struct.stat* %dest_dir_stats, i32 %22) #10, !dbg !15574
  %cmp15 = icmp ne i32 %call14, 0, !dbg !15575
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !15576

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #15, !dbg !15577
  %23 = load i32, i32* %call17, align 4, !dbg !15577, !tbaa !2982, !ctir !7
  %24 = load i8*, i8** %dest_dirname, align 8, !dbg !15579, !tbaa !2995
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.340, i64 0, i64 0), i8* %24), !dbg !15580
  br label %if.end18, !dbg !15581

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !15582, !ctir !15476
  %25 = load i64, i64* %st_ino, align 8, !dbg !15582, !tbaa !3870, !ctir !228
  %st_ino19 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !15582, !ctir !15476
  %26 = load i64, i64* %st_ino19, align 8, !dbg !15582, !tbaa !3870, !ctir !228
  %cmp20 = icmp eq i64 %25, %26, !dbg !15582
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !15582

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !15582, !ctir !15476
  %27 = load i64, i64* %st_dev, align 8, !dbg !15582, !tbaa !3873, !ctir !231
  %st_dev22 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !15582, !ctir !15476
  %28 = load i64, i64* %st_dev22, align 8, !dbg !15582, !tbaa !3873, !ctir !231
  %cmp23 = icmp eq i64 %27, %28, !dbg !15582
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %29 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ], !dbg !15583
  %frombool25 = zext i1 %29 to i8, !dbg !15584
  store i8 %frombool25, i8* %same, align 1, !dbg !15584, !tbaa !3106
  %30 = load i8*, i8** %dest_dirname, align 8, !dbg !15585, !tbaa !2995
  call void @free(i8* %30) #10, !dbg !15586
  br label %if.end26, !dbg !15587

if.end26:                                         ; preds = %land.end24, %land.end
  %31 = load i8, i8* %same, align 1, !dbg !15588, !tbaa !3106
  %tobool27 = trunc i8 %31 to i1, !dbg !15588
  ret i1 %tobool27, !dbg !15589
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @streamsavedir(%struct.__dirstream* %dirp, i32 %option) #4 !dbg !15590 !ctir !1076 {
entry:
  %retval = alloca i8*, align 8
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %option.addr = alloca i32, align 4
  %name_space = alloca i8*, align 8, !ctir !9
  %allocated = alloca i64, align 8, !ctir !55
  %entries = alloca %struct.direntry_t*, align 8, !ctir !1078
  %entries_allocated = alloca i64, align 8, !ctir !55
  %entries_used = alloca i64, align 8, !ctir !55
  %used = alloca i64, align 8, !ctir !55
  %readdir_errno = alloca i32, align 4, !ctir !7
  %cmp = alloca i32 (i8*, i8*)*, align 8, !ctir !1086
  %dp = alloca %struct.dirent*, align 8, !ctir !1092
  %entry2 = alloca i8*, align 8, !ctir !115
  %entry_size = alloca i64, align 8, !ctir !55
  %n = alloca i64, align 8, !ctir !55
  %n36 = alloca i64, align 8, !ctir !55
  %i = alloca i64, align 8, !ctir !55
  %dest = alloca i8*, align 8, !ctir !9
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !15591, metadata !DIExpression()), !dbg !15592
  store i32 %option, i32* %option.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !15593, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !15595, metadata !DIExpression()), !dbg !15596
  store i8* null, i8** %name_space, align 8, !dbg !15596, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %allocated, metadata !15597, metadata !DIExpression()), !dbg !15598
  store i64 0, i64* %allocated, align 8, !dbg !15598, !tbaa !3848
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %entries, metadata !15599, metadata !DIExpression()), !dbg !15600
  store %struct.direntry_t* null, %struct.direntry_t** %entries, align 8, !dbg !15600, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %entries_allocated, metadata !15601, metadata !DIExpression()), !dbg !15602
  store i64 0, i64* %entries_allocated, align 8, !dbg !15602, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %entries_used, metadata !15603, metadata !DIExpression()), !dbg !15604
  store i64 0, i64* %entries_used, align 8, !dbg !15604, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %used, metadata !15605, metadata !DIExpression()), !dbg !15606
  store i64 0, i64* %used, align 8, !dbg !15606, !tbaa !3848
  call void @llvm.dbg.declare(metadata i32* %readdir_errno, metadata !15607, metadata !DIExpression()), !dbg !15608
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp, metadata !15609, metadata !DIExpression()), !dbg !15610
  %0 = load i32, i32* %option.addr, align 4, !dbg !15611, !tbaa !3657
  %idxprom = zext i32 %0 to i64, !dbg !15612
  %arrayidx = getelementptr inbounds [3 x i32 (i8*, i8*)*], [3 x i32 (i8*, i8*)*]* @comparison_function_table, i64 0, i64 %idxprom, !dbg !15612, !ctir !1090
  %1 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %arrayidx, align 8, !dbg !15612, !tbaa !2995
  store i32 (i8*, i8*)* %1, i32 (i8*, i8*)** %cmp, align 8, !dbg !15610, !tbaa !2995
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !15613, !tbaa !2995
  %cmp1 = icmp eq %struct.__dirstream* %2, null, !dbg !15615
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15616

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15617
  br label %return, !dbg !15617

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !15618

for.cond:                                         ; preds = %if.end46, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !15619, metadata !DIExpression()), !dbg !15623
  call void @llvm.dbg.declare(metadata i8** %entry2, metadata !15624, metadata !DIExpression()), !dbg !15625
  %call = call i32* @__errno_location() #15, !dbg !15626
  store i32 0, i32* %call, align 4, !dbg !15627, !tbaa !2982, !ctir !7
  %3 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !15628, !tbaa !2995
  %call3 = call %struct.dirent* @readdir(%struct.__dirstream* %3), !dbg !15629
  store %struct.dirent* %call3, %struct.dirent** %dp, align 8, !dbg !15630, !tbaa !2995
  %4 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15631, !tbaa !2995
  %tobool = icmp ne %struct.dirent* %4, null, !dbg !15631
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !15633

if.then4:                                         ; preds = %for.cond
  br label %for.end, !dbg !15634

if.end5:                                          ; preds = %for.cond
  %5 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15635, !tbaa !2995
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %5, i32 0, i32 4, !dbg !15636, !ctir !1093
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !15635
  store i8* %arraydecay, i8** %entry2, align 8, !dbg !15637, !tbaa !2995
  %6 = load i8*, i8** %entry2, align 8, !dbg !15638, !tbaa !2995
  %7 = load i8*, i8** %entry2, align 8, !dbg !15640, !tbaa !2995
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !15640, !ctir !115
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !15640, !tbaa !3657
  %conv = sext i8 %8 to i32, !dbg !15640
  %cmp7 = icmp ne i32 %conv, 46, !dbg !15641
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !15640

cond.true:                                        ; preds = %if.end5
  br label %cond.end, !dbg !15640

cond.false:                                       ; preds = %if.end5
  %9 = load i8*, i8** %entry2, align 8, !dbg !15642, !tbaa !2995
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !15642, !ctir !115
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !15642, !tbaa !3657
  %conv10 = sext i8 %10 to i32, !dbg !15642
  %cmp11 = icmp ne i32 %conv10, 46, !dbg !15643
  %11 = zext i1 %cmp11 to i64, !dbg !15642
  %cond = select i1 %cmp11, i32 1, i32 2, !dbg !15642
  br label %cond.end, !dbg !15640

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond13 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !15640
  %idxprom14 = sext i32 %cond13 to i64, !dbg !15638
  %arrayidx15 = getelementptr inbounds i8, i8* %6, i64 %idxprom14, !dbg !15638, !ctir !115
  %12 = load i8, i8* %arrayidx15, align 1, !dbg !15638, !tbaa !3657
  %conv16 = sext i8 %12 to i32, !dbg !15638
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !15644
  br i1 %cmp17, label %if.then19, label %if.end46, !dbg !15645

if.then19:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %entry_size, metadata !15646, metadata !DIExpression()), !dbg !15648
  %13 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15649, !tbaa !2995
  %d_name20 = getelementptr inbounds %struct.dirent, %struct.dirent* %13, i32 0, i32 4, !dbg !15649, !ctir !1093
  %arraydecay21 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name20, i64 0, i64 0, !dbg !15649
  %call22 = call i64 @strlen(i8* %arraydecay21) #14, !dbg !15649
  %add = add i64 %call22, 1, !dbg !15650
  store i64 %add, i64* %entry_size, align 8, !dbg !15648, !tbaa !3848
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15651, !tbaa !2995
  %tobool23 = icmp ne i32 (i8*, i8*)* %14, null, !dbg !15651
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !15653

if.then24:                                        ; preds = %if.then19
  %15 = load i64, i64* %entries_allocated, align 8, !dbg !15654, !tbaa !3848
  %16 = load i64, i64* %entries_used, align 8, !dbg !15657, !tbaa !3848
  %cmp25 = icmp eq i64 %15, %16, !dbg !15658
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !15659

if.then27:                                        ; preds = %if.then24
  call void @llvm.dbg.declare(metadata i64* %n, metadata !15660, metadata !DIExpression()), !dbg !15662
  %17 = load i64, i64* %entries_allocated, align 8, !dbg !15663, !tbaa !3848
  store i64 %17, i64* %n, align 8, !dbg !15662, !tbaa !3848
  %18 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15664, !tbaa !2995
  %19 = bitcast %struct.direntry_t* %18 to i8*, !dbg !15664
  %call28 = call i8* @x2nrealloc(i8* %19, i64* %n, i64 16), !dbg !15665
  %20 = bitcast i8* %call28 to %struct.direntry_t*, !dbg !15665
  store %struct.direntry_t* %20, %struct.direntry_t** %entries, align 8, !dbg !15666, !tbaa !2995
  %21 = load i64, i64* %n, align 8, !dbg !15667, !tbaa !3848
  store i64 %21, i64* %entries_allocated, align 8, !dbg !15668, !tbaa !3848
  br label %if.end29, !dbg !15669

if.end29:                                         ; preds = %if.then27, %if.then24
  %22 = load i8*, i8** %entry2, align 8, !dbg !15670, !tbaa !2995
  %call30 = call noalias i8* @xstrdup(i8* %22), !dbg !15671
  %23 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15672, !tbaa !2995
  %24 = load i64, i64* %entries_used, align 8, !dbg !15673, !tbaa !3848
  %arrayidx31 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %23, i64 %24, !dbg !15672, !ctir !1078
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx31, i32 0, i32 0, !dbg !15674, !ctir !1079
  store i8* %call30, i8** %name, align 8, !dbg !15675, !tbaa !15676, !ctir !9
  %25 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15678, !tbaa !2995
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %25, i32 0, i32 0, !dbg !15679, !ctir !1093
  %26 = load i64, i64* %d_ino, align 8, !dbg !15679, !tbaa !15680, !ctir !228
  %27 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15682, !tbaa !2995
  %28 = load i64, i64* %entries_used, align 8, !dbg !15683, !tbaa !3848
  %arrayidx32 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %27, i64 %28, !dbg !15682, !ctir !1078
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx32, i32 0, i32 1, !dbg !15684, !ctir !1079
  store i64 %26, i64* %ino, align 8, !dbg !15685, !tbaa !15686, !ctir !1085
  %29 = load i64, i64* %entries_used, align 8, !dbg !15687, !tbaa !3848
  %inc = add i64 %29, 1, !dbg !15687
  store i64 %inc, i64* %entries_used, align 8, !dbg !15687, !tbaa !3848
  br label %if.end44, !dbg !15688

if.else:                                          ; preds = %if.then19
  %30 = load i64, i64* %allocated, align 8, !dbg !15689, !tbaa !3848
  %31 = load i64, i64* %used, align 8, !dbg !15692, !tbaa !3848
  %sub = sub i64 %30, %31, !dbg !15693
  %32 = load i64, i64* %entry_size, align 8, !dbg !15694, !tbaa !3848
  %cmp33 = icmp ule i64 %sub, %32, !dbg !15695
  br i1 %cmp33, label %if.then35, label %if.end43, !dbg !15696

if.then35:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %n36, metadata !15697, metadata !DIExpression()), !dbg !15699
  %33 = load i64, i64* %used, align 8, !dbg !15700, !tbaa !3848
  %34 = load i64, i64* %entry_size, align 8, !dbg !15701, !tbaa !3848
  %add37 = add i64 %33, %34, !dbg !15702
  store i64 %add37, i64* %n36, align 8, !dbg !15699, !tbaa !3848
  %35 = load i64, i64* %n36, align 8, !dbg !15703, !tbaa !3848
  %36 = load i64, i64* %used, align 8, !dbg !15705, !tbaa !3848
  %cmp38 = icmp ult i64 %35, %36, !dbg !15706
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !15707

if.then40:                                        ; preds = %if.then35
  call void @xalloc_die() #16, !dbg !15708
  unreachable, !dbg !15708

if.end41:                                         ; preds = %if.then35
  %37 = load i8*, i8** %name_space, align 8, !dbg !15709, !tbaa !2995
  %call42 = call i8* @x2nrealloc(i8* %37, i64* %n36, i64 1), !dbg !15710
  store i8* %call42, i8** %name_space, align 8, !dbg !15711, !tbaa !2995
  %38 = load i64, i64* %n36, align 8, !dbg !15712, !tbaa !3848
  store i64 %38, i64* %allocated, align 8, !dbg !15713, !tbaa !3848
  br label %if.end43, !dbg !15714

if.end43:                                         ; preds = %if.end41, %if.else
  %39 = load i8*, i8** %name_space, align 8, !dbg !15715, !tbaa !2995
  %40 = load i64, i64* %used, align 8, !dbg !15716, !tbaa !3848
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !15717
  %41 = load i8*, i8** %entry2, align 8, !dbg !15718, !tbaa !2995
  %42 = load i64, i64* %entry_size, align 8, !dbg !15719, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %41, i64 %42, i1 false), !dbg !15720
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end29
  %43 = load i64, i64* %entry_size, align 8, !dbg !15721, !tbaa !3848
  %44 = load i64, i64* %used, align 8, !dbg !15722, !tbaa !3848
  %add45 = add i64 %44, %43, !dbg !15722
  store i64 %add45, i64* %used, align 8, !dbg !15722, !tbaa !3848
  br label %if.end46, !dbg !15723

if.end46:                                         ; preds = %if.end44, %cond.end
  br label %for.cond, !dbg !15724, !llvm.loop !15725

for.end:                                          ; preds = %if.then4
  %call47 = call i32* @__errno_location() #15, !dbg !15728
  %45 = load i32, i32* %call47, align 4, !dbg !15728, !tbaa !2982, !ctir !7
  store i32 %45, i32* %readdir_errno, align 4, !dbg !15729, !tbaa !2982
  %46 = load i32, i32* %readdir_errno, align 4, !dbg !15730, !tbaa !2982
  %cmp48 = icmp ne i32 %46, 0, !dbg !15732
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !15733

if.then50:                                        ; preds = %for.end
  %47 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15734, !tbaa !2995
  %48 = bitcast %struct.direntry_t* %47 to i8*, !dbg !15734
  call void @free(i8* %48) #10, !dbg !15736
  %49 = load i8*, i8** %name_space, align 8, !dbg !15737, !tbaa !2995
  call void @free(i8* %49) #10, !dbg !15738
  %50 = load i32, i32* %readdir_errno, align 4, !dbg !15739, !tbaa !2982
  %call51 = call i32* @__errno_location() #15, !dbg !15740
  store i32 %50, i32* %call51, align 4, !dbg !15741, !tbaa !2982, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !15742
  br label %return, !dbg !15742

if.end52:                                         ; preds = %for.end
  %51 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15743, !tbaa !2995
  %tobool53 = icmp ne i32 (i8*, i8*)* %51, null, !dbg !15743
  br i1 %tobool53, label %if.then54, label %if.else73, !dbg !15745

if.then54:                                        ; preds = %if.end52
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15746, metadata !DIExpression()), !dbg !15748
  %52 = load i64, i64* %entries_used, align 8, !dbg !15749, !tbaa !3848
  %tobool55 = icmp ne i64 %52, 0, !dbg !15749
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !15751

if.then56:                                        ; preds = %if.then54
  %53 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15752, !tbaa !2995
  %54 = bitcast %struct.direntry_t* %53 to i8*, !dbg !15752
  %55 = load i64, i64* %entries_used, align 8, !dbg !15753, !tbaa !3848
  %56 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15754, !tbaa !2995
  call void @qsort(i8* %54, i64 %55, i64 16, i32 (i8*, i8*)* %56), !dbg !15755
  br label %if.end57, !dbg !15755

if.end57:                                         ; preds = %if.then56, %if.then54
  %57 = load i64, i64* %used, align 8, !dbg !15756, !tbaa !3848
  %add58 = add i64 %57, 1, !dbg !15757
  %call59 = call noalias i8* @xmalloc(i64 %add58), !dbg !15758
  store i8* %call59, i8** %name_space, align 8, !dbg !15759, !tbaa !2995
  store i64 0, i64* %used, align 8, !dbg !15760, !tbaa !3848
  store i64 0, i64* %i, align 8, !dbg !15761, !tbaa !3848
  br label %for.cond60, !dbg !15763

for.cond60:                                       ; preds = %for.inc, %if.end57
  %58 = load i64, i64* %i, align 8, !dbg !15764, !tbaa !3848
  %59 = load i64, i64* %entries_used, align 8, !dbg !15766, !tbaa !3848
  %cmp61 = icmp ult i64 %58, %59, !dbg !15767
  br i1 %cmp61, label %for.body, label %for.end72, !dbg !15768

for.body:                                         ; preds = %for.cond60
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !15769, metadata !DIExpression()), !dbg !15771
  %60 = load i8*, i8** %name_space, align 8, !dbg !15772, !tbaa !2995
  %61 = load i64, i64* %used, align 8, !dbg !15773, !tbaa !3848
  %add.ptr63 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !15774
  store i8* %add.ptr63, i8** %dest, align 8, !dbg !15771, !tbaa !2995
  %62 = load i8*, i8** %dest, align 8, !dbg !15775, !tbaa !2995
  %63 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15776, !tbaa !2995
  %64 = load i64, i64* %i, align 8, !dbg !15777, !tbaa !3848
  %arrayidx64 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %63, i64 %64, !dbg !15776, !ctir !1078
  %name65 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx64, i32 0, i32 0, !dbg !15778, !ctir !1079
  %65 = load i8*, i8** %name65, align 8, !dbg !15778, !tbaa !15676, !ctir !9
  %call66 = call i8* @stpcpy(i8* %62, i8* %65) #10, !dbg !15779
  %66 = load i8*, i8** %dest, align 8, !dbg !15780, !tbaa !2995
  %sub.ptr.lhs.cast = ptrtoint i8* %call66 to i64, !dbg !15781
  %sub.ptr.rhs.cast = ptrtoint i8* %66 to i64, !dbg !15781
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15781
  %add67 = add nsw i64 %sub.ptr.sub, 1, !dbg !15782
  %67 = load i64, i64* %used, align 8, !dbg !15783, !tbaa !3848
  %add68 = add i64 %67, %add67, !dbg !15783
  store i64 %add68, i64* %used, align 8, !dbg !15783, !tbaa !3848
  %68 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15784, !tbaa !2995
  %69 = load i64, i64* %i, align 8, !dbg !15785, !tbaa !3848
  %arrayidx69 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %68, i64 %69, !dbg !15784, !ctir !1078
  %name70 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx69, i32 0, i32 0, !dbg !15786, !ctir !1079
  %70 = load i8*, i8** %name70, align 8, !dbg !15786, !tbaa !15676, !ctir !9
  call void @free(i8* %70) #10, !dbg !15787
  br label %for.inc, !dbg !15788

for.inc:                                          ; preds = %for.body
  %71 = load i64, i64* %i, align 8, !dbg !15789, !tbaa !3848
  %inc71 = add i64 %71, 1, !dbg !15789
  store i64 %inc71, i64* %i, align 8, !dbg !15789, !tbaa !3848
  br label %for.cond60, !dbg !15790, !llvm.loop !15791

for.end72:                                        ; preds = %for.cond60
  %72 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15793, !tbaa !2995
  %73 = bitcast %struct.direntry_t* %72 to i8*, !dbg !15793
  call void @free(i8* %73) #10, !dbg !15794
  br label %if.end80, !dbg !15795

if.else73:                                        ; preds = %if.end52
  %74 = load i64, i64* %used, align 8, !dbg !15796, !tbaa !3848
  %75 = load i64, i64* %allocated, align 8, !dbg !15798, !tbaa !3848
  %cmp74 = icmp eq i64 %74, %75, !dbg !15799
  br i1 %cmp74, label %if.then76, label %if.end79, !dbg !15800

if.then76:                                        ; preds = %if.else73
  %76 = load i8*, i8** %name_space, align 8, !dbg !15801, !tbaa !2995
  %77 = load i64, i64* %used, align 8, !dbg !15802, !tbaa !3848
  %add77 = add i64 %77, 1, !dbg !15803
  %call78 = call i8* @xrealloc(i8* %76, i64 %add77), !dbg !15804
  store i8* %call78, i8** %name_space, align 8, !dbg !15805, !tbaa !2995
  br label %if.end79, !dbg !15806

if.end79:                                         ; preds = %if.then76, %if.else73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %for.end72
  %78 = load i8*, i8** %name_space, align 8, !dbg !15807, !tbaa !2995
  %79 = load i64, i64* %used, align 8, !dbg !15808, !tbaa !3848
  %arrayidx81 = getelementptr inbounds i8, i8* %78, i64 %79, !dbg !15807, !ctir !9
  store i8 0, i8* %arrayidx81, align 1, !dbg !15809, !tbaa !3657
  %80 = load i8*, i8** %name_space, align 8, !dbg !15810, !tbaa !2995
  store i8* %80, i8** %retval, align 8, !dbg !15811
  br label %return, !dbg !15811

return:                                           ; preds = %if.end80, %if.then50, %if.then
  %81 = load i8*, i8** %retval, align 8, !dbg !15812
  ret i8* %81, !dbg !15812
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_name(i8* %a, i8* %b) #4 !dbg !15813 !ctir !1088 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1103
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1103
  store i8* %a, i8** %a.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !15814, metadata !DIExpression()), !dbg !15815
  store i8* %b, i8** %b.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !15816, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !15818, metadata !DIExpression()), !dbg !15819
  %0 = load i8*, i8** %a.addr, align 8, !dbg !15820, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !15820
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !15819, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !15821, metadata !DIExpression()), !dbg !15822
  %2 = load i8*, i8** %b.addr, align 8, !dbg !15823, !tbaa !2995
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !15823
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !15822, !tbaa !2995
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15824, !tbaa !2995
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 0, !dbg !15825, !ctir !1104
  %5 = load i8*, i8** %name, align 8, !dbg !15825, !tbaa !15676, !ctir !9
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15826, !tbaa !2995
  %name1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 0, !dbg !15827, !ctir !1104
  %7 = load i8*, i8** %name1, align 8, !dbg !15827, !tbaa !15676, !ctir !9
  %call = call i32 @strcmp(i8* %5, i8* %7) #14, !dbg !15828
  ret i32 %call, !dbg !15829
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_inode(i8* %a, i8* %b) #4 !dbg !15830 !ctir !1088 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1103
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1103
  store i8* %a, i8** %a.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !15831, metadata !DIExpression()), !dbg !15832
  store i8* %b, i8** %b.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !15833, metadata !DIExpression()), !dbg !15834
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !15835, metadata !DIExpression()), !dbg !15836
  %0 = load i8*, i8** %a.addr, align 8, !dbg !15837, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !15837
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !15836, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !15838, metadata !DIExpression()), !dbg !15839
  %2 = load i8*, i8** %b.addr, align 8, !dbg !15840, !tbaa !2995
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !15840
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !15839, !tbaa !2995
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15841, !tbaa !2995
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 1, !dbg !15842, !ctir !1104
  %5 = load i64, i64* %ino, align 8, !dbg !15842, !tbaa !15686, !ctir !1085
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15843, !tbaa !2995
  %ino1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 1, !dbg !15844, !ctir !1104
  %7 = load i64, i64* %ino1, align 8, !dbg !15844, !tbaa !15686, !ctir !1085
  %cmp = icmp ult i64 %5, %7, !dbg !15845
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15841

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !15841

cond.false:                                       ; preds = %entry
  %8 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15846, !tbaa !2995
  %ino2 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %8, i32 0, i32 1, !dbg !15847, !ctir !1104
  %9 = load i64, i64* %ino2, align 8, !dbg !15847, !tbaa !15686, !ctir !1085
  %10 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15848, !tbaa !2995
  %ino3 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %10, i32 0, i32 1, !dbg !15849, !ctir !1104
  %11 = load i64, i64* %ino3, align 8, !dbg !15849, !tbaa !15686, !ctir !1085
  %cmp4 = icmp ugt i64 %9, %11, !dbg !15850
  %conv = zext i1 %cmp4 to i32, !dbg !15850
  br label %cond.end, !dbg !15841

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !15841
  ret i32 %cond, !dbg !15851
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @savedir(i8* %dir, i32 %option) #4 !dbg !15852 !ctir !1101 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %option.addr = alloca i32, align 4
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !607
  %name_space = alloca i8*, align 8, !ctir !9
  %closedir_errno = alloca i32, align 4, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !15853, metadata !DIExpression()), !dbg !15854
  store i32 %option, i32* %option.addr, align 4, !tbaa !3657
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !15855, metadata !DIExpression()), !dbg !15856
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !15857, metadata !DIExpression()), !dbg !15858
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !15859, !tbaa !2995
  %call = call %struct.__dirstream* @opendir_safer(i8* %0), !dbg !15860
  store %struct.__dirstream* %call, %struct.__dirstream** %dirp, align 8, !dbg !15858, !tbaa !2995
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15861, !tbaa !2995
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !15861
  br i1 %tobool, label %if.else, label %if.then, !dbg !15863

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15864
  br label %return, !dbg !15864

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !15865, metadata !DIExpression()), !dbg !15867
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15868, !tbaa !2995
  %3 = load i32, i32* %option.addr, align 4, !dbg !15869, !tbaa !3657
  %call1 = call i8* @streamsavedir(%struct.__dirstream* %2, i32 %3), !dbg !15870
  store i8* %call1, i8** %name_space, align 8, !dbg !15867, !tbaa !2995
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15871, !tbaa !2995
  %call2 = call i32 @closedir(%struct.__dirstream* %4), !dbg !15873
  %cmp = icmp ne i32 %call2, 0, !dbg !15874
  br i1 %cmp, label %if.then3, label %if.end, !dbg !15875

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %closedir_errno, metadata !15876, metadata !DIExpression()), !dbg !15878
  %call4 = call i32* @__errno_location() #15, !dbg !15879
  %5 = load i32, i32* %call4, align 4, !dbg !15879, !tbaa !2982, !ctir !7
  store i32 %5, i32* %closedir_errno, align 4, !dbg !15878, !tbaa !2982
  %6 = load i8*, i8** %name_space, align 8, !dbg !15880, !tbaa !2995
  call void @free(i8* %6) #10, !dbg !15881
  %7 = load i32, i32* %closedir_errno, align 4, !dbg !15882, !tbaa !2982
  %call5 = call i32* @__errno_location() #15, !dbg !15883
  store i32 %7, i32* %call5, align 4, !dbg !15884, !tbaa !2982, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !15885
  br label %return, !dbg !15885

if.end:                                           ; preds = %if.else
  %8 = load i8*, i8** %name_space, align 8, !dbg !15886, !tbaa !2995
  store i8* %8, i8** %retval, align 8, !dbg !15887
  br label %return, !dbg !15887

return:                                           ; preds = %if.end, %if.then3, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !15888
  ret i8* %9, !dbg !15888
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getcon(i8** %con) #4 !dbg !15889 !ctir !1852 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15890, metadata !DIExpression()), !dbg !15891
  %call = call i32* @__errno_location() #15, !dbg !15892
  store i32 95, i32* %call, align 4, !dbg !15893, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15894
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @freecon(i8* %con) #4 !dbg !15895 !ctir !1857 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15896, metadata !DIExpression()), !dbg !15897
  ret void, !dbg !15898
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfscreatecon(i8** %con) #4 !dbg !15899 !ctir !1852 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15900, metadata !DIExpression()), !dbg !15901
  %call = call i32* @__errno_location() #15, !dbg !15902
  store i32 95, i32* %call, align 4, !dbg !15903, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15904
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfscreatecon(i8* %con) #4 !dbg !15905 !ctir !1859 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15906, metadata !DIExpression()), !dbg !15907
  %call = call i32* @__errno_location() #15, !dbg !15908
  store i32 95, i32* %call, align 4, !dbg !15909, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15910
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon(i8* %file, i32 %m, i8** %con) #4 !dbg !15911 !ctir !1861 {
entry:
  %file.addr = alloca i8*, align 8
  %m.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15912, metadata !DIExpression()), !dbg !15913
  store i32 %m, i32* %m.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !15914, metadata !DIExpression()), !dbg !15915
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15916, metadata !DIExpression()), !dbg !15917
  %call = call i32* @__errno_location() #15, !dbg !15918
  store i32 95, i32* %call, align 4, !dbg !15919, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15920
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfilecon(i8* %file, i8** %con) #4 !dbg !15921 !ctir !1863 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15922, metadata !DIExpression()), !dbg !15923
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15924, metadata !DIExpression()), !dbg !15925
  %call = call i32* @__errno_location() #15, !dbg !15926
  store i32 95, i32* %call, align 4, !dbg !15927, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15928
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lgetfilecon(i8* %file, i8** %con) #4 !dbg !15929 !ctir !1863 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15930, metadata !DIExpression()), !dbg !15931
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15932, metadata !DIExpression()), !dbg !15933
  %call = call i32* @__errno_location() #15, !dbg !15934
  store i32 95, i32* %call, align 4, !dbg !15935, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15936
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fgetfilecon(i32 %fd, i8** %con) #4 !dbg !15937 !ctir !1865 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15938, metadata !DIExpression()), !dbg !15939
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15940, metadata !DIExpression()), !dbg !15941
  %call = call i32* @__errno_location() #15, !dbg !15942
  store i32 95, i32* %call, align 4, !dbg !15943, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15944
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfilecon(i8* %file, i8* %con) #4 !dbg !15945 !ctir !1867 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15946, metadata !DIExpression()), !dbg !15947
  store i8* %con, i8** %con.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15948, metadata !DIExpression()), !dbg !15949
  %call = call i32* @__errno_location() #15, !dbg !15950
  store i32 95, i32* %call, align 4, !dbg !15951, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15952
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsetfilecon(i8* %file, i8* %con) #4 !dbg !15953 !ctir !1867 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15954, metadata !DIExpression()), !dbg !15955
  store i8* %con, i8** %con.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15956, metadata !DIExpression()), !dbg !15957
  %call = call i32* @__errno_location() #15, !dbg !15958
  store i32 95, i32* %call, align 4, !dbg !15959, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15960
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fsetfilecon(i32 %fd, i8* %con) #4 !dbg !15961 !ctir !1869 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15962, metadata !DIExpression()), !dbg !15963
  store i8* %con, i8** %con.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15964, metadata !DIExpression()), !dbg !15965
  %call = call i32* @__errno_location() #15, !dbg !15966
  store i32 95, i32* %call, align 4, !dbg !15967, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15968
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context(i8* %con) #4 !dbg !15969 !ctir !1859 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15970, metadata !DIExpression()), !dbg !15971
  %call = call i32* @__errno_location() #15, !dbg !15972
  store i32 95, i32* %call, align 4, !dbg !15973, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15974
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context_raw(i8* %con) #4 !dbg !15975 !ctir !1859 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15976, metadata !DIExpression()), !dbg !15977
  %call = call i32* @__errno_location() #15, !dbg !15978
  store i32 95, i32* %call, align 4, !dbg !15979, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15980
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setexeccon(i8* %con) #4 !dbg !15981 !ctir !1859 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15982, metadata !DIExpression()), !dbg !15983
  %call = call i32* @__errno_location() #15, !dbg !15984
  store i32 95, i32* %call, align 4, !dbg !15985, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15986
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) #4 !dbg !15987 !ctir !1871 {
entry:
  %scon.addr = alloca i8*, align 8
  %tcon.addr = alloca i8*, align 8
  %tclass.addr = alloca i16, align 2
  %newcon.addr = alloca i8**, align 8
  store i8* %scon, i8** %scon.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %scon.addr, metadata !15988, metadata !DIExpression()), !dbg !15989
  store i8* %tcon, i8** %tcon.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %tcon.addr, metadata !15990, metadata !DIExpression()), !dbg !15991
  store i16 %tclass, i16* %tclass.addr, align 2, !tbaa !3810
  call void @llvm.dbg.declare(metadata i16* %tclass.addr, metadata !15992, metadata !DIExpression()), !dbg !15993
  store i8** %newcon, i8*** %newcon.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %newcon.addr, metadata !15994, metadata !DIExpression()), !dbg !15995
  %call = call i32* @__errno_location() #15, !dbg !15996
  store i32 95, i32* %call, align 4, !dbg !15997, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !15998
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @string_to_security_class(i8* %name) #4 !dbg !15999 !ctir !1874 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16000, metadata !DIExpression()), !dbg !16001
  %call = call i32* @__errno_location() #15, !dbg !16002
  store i32 95, i32* %call, align 4, !dbg !16003, !tbaa !2982, !ctir !7
  ret i16 0, !dbg !16004
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) #4 !dbg !16005 !ctir !1876 {
entry:
  %path.addr = alloca i8*, align 8
  %prefix.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !16006, metadata !DIExpression()), !dbg !16007
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !16008, metadata !DIExpression()), !dbg !16009
  %call = call i32* @__errno_location() #15, !dbg !16010
  store i32 95, i32* %call, align 4, !dbg !16011, !tbaa !2982, !ctir !7
  ret i32 -1, !dbg !16012
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_atime_ns(%struct.stat* %st) #9 !dbg !16013 !ctir !1881 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16015, metadata !DIExpression()), !dbg !16016
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16017, !tbaa !2995
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !16017, !ctir !1884
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 1, !dbg !16018, !ctir !1899
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16018, !tbaa !16019, !ctir !343
  ret i64 %1, !dbg !16020
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_ctime_ns(%struct.stat* %st) #9 !dbg !16021 !ctir !1881 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16022, metadata !DIExpression()), !dbg !16023
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16024, !tbaa !2995
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !16024, !ctir !1884
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 1, !dbg !16025, !ctir !1899
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16025, !tbaa !16026, !ctir !343
  ret i64 %1, !dbg !16027
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_mtime_ns(%struct.stat* %st) #9 !dbg !16028 !ctir !1881 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16029, metadata !DIExpression()), !dbg !16030
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16031, !tbaa !2995
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16031, !ctir !1884
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 1, !dbg !16032, !ctir !1899
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16032, !tbaa !16033, !ctir !343
  ret i64 %1, !dbg !16034
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_birthtime_ns(%struct.stat* %st) #9 !dbg !16035 !ctir !1881 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16036, metadata !DIExpression()), !dbg !16037
  ret i64 0, !dbg !16038
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_atime(%struct.stat* %st) #9 !dbg !16039 !ctir !1906 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16040, metadata !DIExpression()), !dbg !16041
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16042, !tbaa !2995
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !16042, !ctir !1884
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16042
  %2 = bitcast %struct.timespec* %st_atim to i8*, !dbg !16042
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16042, !tbaa.struct !6321
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16043
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16043
  ret { i64, i64 } %4, !dbg !16043
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_ctime(%struct.stat* %st) #9 !dbg !16044 !ctir !1906 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16045, metadata !DIExpression()), !dbg !16046
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16047, !tbaa !2995
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !16047, !ctir !1884
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16047
  %2 = bitcast %struct.timespec* %st_ctim to i8*, !dbg !16047
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16047, !tbaa.struct !6321
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16048
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16048
  ret { i64, i64 } %4, !dbg !16048
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_mtime(%struct.stat* %st) #9 !dbg !16049 !ctir !1906 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16050, metadata !DIExpression()), !dbg !16051
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16052, !tbaa !2995
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16052, !ctir !1884
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16052
  %2 = bitcast %struct.timespec* %st_mtim to i8*, !dbg !16052
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16052, !tbaa.struct !6321
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16053
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16053
  ret { i64, i64 } %4, !dbg !16053
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #9 !dbg !16054 !ctir !1906 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16055, metadata !DIExpression()), !dbg !16056
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !16057, metadata !DIExpression()), !dbg !16058
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 0, !dbg !16059, !ctir !1899
  store i64 -1, i64* %tv_sec, align 8, !dbg !16060, !tbaa !16061, !ctir !341
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 1, !dbg !16062, !ctir !1899
  store i64 -1, i64* %tv_nsec, align 8, !dbg !16063, !tbaa !16064, !ctir !343
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16065
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !16065
  ret { i64, i64 } %1, !dbg !16065
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stat_time_normalize(i32 %result, %struct.stat* %st) #4 !dbg !16066 !ctir !1908 {
entry:
  %result.addr = alloca i32, align 4
  %st.addr = alloca %struct.stat*, align 8
  store i32 %result, i32* %result.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !16067, metadata !DIExpression()), !dbg !16068
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16069, metadata !DIExpression()), !dbg !16070
  %0 = load i32, i32* %result.addr, align 4, !dbg !16071, !tbaa !2982
  ret i32 %0, !dbg !16072
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @statat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !16073 !ctir !1914 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16075, metadata !DIExpression()), !dbg !16076
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16077, metadata !DIExpression()), !dbg !16078
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16079, metadata !DIExpression()), !dbg !16080
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16081, !tbaa !2982
  %1 = load i8*, i8** %name.addr, align 8, !dbg !16082, !tbaa !2995
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16083, !tbaa !2995
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 0) #10, !dbg !16084
  ret i32 %call, !dbg !16085
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lstatat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !16086 !ctir !1914 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16087, metadata !DIExpression()), !dbg !16088
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16089, metadata !DIExpression()), !dbg !16090
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16091, metadata !DIExpression()), !dbg !16092
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16093, !tbaa !2982
  %1 = load i8*, i8** %name.addr, align 8, !dbg !16094, !tbaa !2995
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16095, !tbaa !2995
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256) #10, !dbg !16096
  ret i32 %call, !dbg !16097
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname_len(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc, i64 %x_suffix_len) #4 !dbg !16098 !ctir !1111 {
entry:
  %retval = alloca i32, align 4
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  %x_suffix_len.addr = alloca i64, align 8
  %len = alloca i64, align 8, !ctir !55
  %XXXXXX = alloca i8*, align 8, !ctir !9
  %count = alloca i32, align 4, !ctir !70
  %fd = alloca i32, align 4, !ctir !7
  %save_errno = alloca i32, align 4, !ctir !7
  %rand_src = alloca %struct.randint_source*, align 8, !ctir !1114
  %attempts = alloca i32, align 4, !ctir !70
  %i = alloca i64, align 8, !ctir !55
  %saved_errno = alloca i32, align 4, !ctir !7
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16099, metadata !DIExpression()), !dbg !16100
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16101, metadata !DIExpression()), !dbg !16102
  store i8* %args, i8** %args.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !16103, metadata !DIExpression()), !dbg !16104
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !16105, metadata !DIExpression()), !dbg !16106
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !16107, metadata !DIExpression()), !dbg !16108
  call void @llvm.dbg.declare(metadata i64* %len, metadata !16109, metadata !DIExpression()), !dbg !16110
  call void @llvm.dbg.declare(metadata i8** %XXXXXX, metadata !16111, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.declare(metadata i32* %count, metadata !16113, metadata !DIExpression()), !dbg !16114
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16115, metadata !DIExpression()), !dbg !16116
  store i32 -1, i32* %fd, align 4, !dbg !16116, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %save_errno, metadata !16117, metadata !DIExpression()), !dbg !16118
  %call = call i32* @__errno_location() #15, !dbg !16119
  %0 = load i32, i32* %call, align 4, !dbg !16119, !tbaa !2982, !ctir !7
  store i32 %0, i32* %save_errno, align 4, !dbg !16118, !tbaa !2982
  call void @llvm.dbg.declare(metadata %struct.randint_source** %rand_src, metadata !16120, metadata !DIExpression()), !dbg !16121
  call void @llvm.dbg.declare(metadata i32* %attempts, metadata !16122, metadata !DIExpression()), !dbg !16123
  store i32 238328, i32* %attempts, align 4, !dbg !16123, !tbaa !2982
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !16124, !tbaa !2995
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !16125
  store i64 %call1, i64* %len, align 8, !dbg !16126, !tbaa !3848
  %2 = load i64, i64* %len, align 8, !dbg !16127, !tbaa !3848
  %3 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16129, !tbaa !3848
  %4 = load i32, i32* %suffixlen.addr, align 4, !dbg !16130, !tbaa !2982
  %conv = sext i32 %4 to i64, !dbg !16130
  %add = add i64 %3, %conv, !dbg !16131
  %cmp = icmp ult i64 %2, %add, !dbg !16132
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16133

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8*, i8** %tmpl.addr, align 8, !dbg !16134, !tbaa !2995
  %6 = load i64, i64* %len, align 8, !dbg !16135, !tbaa !3848
  %7 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16136, !tbaa !3848
  %sub = sub i64 %6, %7, !dbg !16137
  %8 = load i32, i32* %suffixlen.addr, align 4, !dbg !16138, !tbaa !2982
  %conv3 = sext i32 %8 to i64, !dbg !16138
  %sub4 = sub i64 %sub, %conv3, !dbg !16139
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !16134, !ctir !9
  %9 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16140, !tbaa !3848
  %call5 = call zeroext i1 @check_x_suffix(i8* %arrayidx, i64 %9) #14, !dbg !16141
  br i1 %call5, label %if.end, label %if.then, !dbg !16142

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call6 = call i32* @__errno_location() #15, !dbg !16143
  store i32 22, i32* %call6, align 4, !dbg !16143, !tbaa !2982, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !16145
  br label %return, !dbg !16145

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i8*, i8** %tmpl.addr, align 8, !dbg !16146, !tbaa !2995
  %11 = load i64, i64* %len, align 8, !dbg !16147, !tbaa !3848
  %12 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16148, !tbaa !3848
  %sub7 = sub i64 %11, %12, !dbg !16149
  %13 = load i32, i32* %suffixlen.addr, align 4, !dbg !16150, !tbaa !2982
  %conv8 = sext i32 %13 to i64, !dbg !16150
  %sub9 = sub i64 %sub7, %conv8, !dbg !16151
  %arrayidx10 = getelementptr inbounds i8, i8* %10, i64 %sub9, !dbg !16146, !ctir !9
  store i8* %arrayidx10, i8** %XXXXXX, align 8, !dbg !16152, !tbaa !2995
  %14 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16153, !tbaa !3848
  %call11 = call %struct.randint_source* @randint_all_new(i8* null, i64 %14), !dbg !16154
  store %struct.randint_source* %call11, %struct.randint_source** %rand_src, align 8, !dbg !16155, !tbaa !2995
  %15 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16156, !tbaa !2995
  %tobool = icmp ne %struct.randint_source* %15, null, !dbg !16156
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !16158

if.then12:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16159
  br label %return, !dbg !16159

if.end13:                                         ; preds = %if.end
  store i32 0, i32* %count, align 4, !dbg !16160, !tbaa !2982
  br label %for.cond, !dbg !16162

for.cond:                                         ; preds = %for.inc34, %if.end13
  %16 = load i32, i32* %count, align 4, !dbg !16163, !tbaa !2982
  %17 = load i32, i32* %attempts, align 4, !dbg !16165, !tbaa !2982
  %cmp14 = icmp ult i32 %16, %17, !dbg !16166
  br i1 %cmp14, label %for.body, label %for.end36, !dbg !16167

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16168, metadata !DIExpression()), !dbg !16170
  store i64 0, i64* %i, align 8, !dbg !16171, !tbaa !3848
  br label %for.cond16, !dbg !16173

for.cond16:                                       ; preds = %for.inc, %for.body
  %18 = load i64, i64* %i, align 8, !dbg !16174, !tbaa !3848
  %19 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16176, !tbaa !3848
  %cmp17 = icmp ult i64 %18, %19, !dbg !16177
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !16178

for.body19:                                       ; preds = %for.cond16
  %20 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16179, !tbaa !2995
  %call20 = call i64 @randint_genmax(%struct.randint_source* %20, i64 61), !dbg !16180
  %arrayidx21 = getelementptr inbounds [63 x i8], [63 x i8]* @letters, i64 0, i64 %call20, !dbg !16181, !ctir !1117
  %21 = load i8, i8* %arrayidx21, align 1, !dbg !16181, !tbaa !3657
  %22 = load i8*, i8** %XXXXXX, align 8, !dbg !16182, !tbaa !2995
  %23 = load i64, i64* %i, align 8, !dbg !16183, !tbaa !3848
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !16182, !ctir !9
  store i8 %21, i8* %arrayidx22, align 1, !dbg !16184, !tbaa !3657
  br label %for.inc, !dbg !16182

for.inc:                                          ; preds = %for.body19
  %24 = load i64, i64* %i, align 8, !dbg !16185, !tbaa !3848
  %inc = add i64 %24, 1, !dbg !16185
  store i64 %inc, i64* %i, align 8, !dbg !16185, !tbaa !3848
  br label %for.cond16, !dbg !16186, !llvm.loop !16187

for.end:                                          ; preds = %for.cond16
  %25 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !16189, !tbaa !2995
  %26 = load i8*, i8** %tmpl.addr, align 8, !dbg !16190, !tbaa !2995
  %27 = load i8*, i8** %args.addr, align 8, !dbg !16191, !tbaa !2995
  %call23 = call i32 %25(i8* %26, i8* %27), !dbg !16189
  store i32 %call23, i32* %fd, align 4, !dbg !16192, !tbaa !2982
  %28 = load i32, i32* %fd, align 4, !dbg !16193, !tbaa !2982
  %cmp24 = icmp sge i32 %28, 0, !dbg !16195
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !16196

if.then26:                                        ; preds = %for.end
  %29 = load i32, i32* %save_errno, align 4, !dbg !16197, !tbaa !2982
  %call27 = call i32* @__errno_location() #15, !dbg !16197
  store i32 %29, i32* %call27, align 4, !dbg !16197, !tbaa !2982, !ctir !7
  br label %done, !dbg !16199

if.else:                                          ; preds = %for.end
  %call28 = call i32* @__errno_location() #15, !dbg !16200
  %30 = load i32, i32* %call28, align 4, !dbg !16200, !tbaa !2982, !ctir !7
  %cmp29 = icmp ne i32 %30, 17, !dbg !16202
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !16203

if.then31:                                        ; preds = %if.else
  store i32 -1, i32* %fd, align 4, !dbg !16204, !tbaa !2982
  br label %done, !dbg !16206

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %for.inc34, !dbg !16207

for.inc34:                                        ; preds = %if.end33
  %31 = load i32, i32* %count, align 4, !dbg !16208, !tbaa !2982
  %inc35 = add i32 %31, 1, !dbg !16208
  store i32 %inc35, i32* %count, align 4, !dbg !16208, !tbaa !2982
  br label %for.cond, !dbg !16209, !llvm.loop !16210

for.end36:                                        ; preds = %for.cond
  %32 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16212, !tbaa !2995
  %call37 = call i32 @randint_all_free(%struct.randint_source* %32), !dbg !16213
  %call38 = call i32* @__errno_location() #15, !dbg !16214
  store i32 17, i32* %call38, align 4, !dbg !16214, !tbaa !2982, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !16215
  br label %return, !dbg !16215

done:                                             ; preds = %if.then31, %if.then26
  call void @llvm.dbg.label(metadata !16216), !dbg !16217
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !16218, metadata !DIExpression()), !dbg !16220
  %call39 = call i32* @__errno_location() #15, !dbg !16221
  %33 = load i32, i32* %call39, align 4, !dbg !16221, !tbaa !2982, !ctir !7
  store i32 %33, i32* %saved_errno, align 4, !dbg !16220, !tbaa !2982
  %34 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16222, !tbaa !2995
  %call40 = call i32 @randint_all_free(%struct.randint_source* %34), !dbg !16223
  %35 = load i32, i32* %saved_errno, align 4, !dbg !16224, !tbaa !2982
  %call41 = call i32* @__errno_location() #15, !dbg !16224
  store i32 %35, i32* %call41, align 4, !dbg !16224, !tbaa !2982, !ctir !7
  %36 = load i32, i32* %fd, align 4, !dbg !16225, !tbaa !2982
  store i32 %36, i32* %retval, align 4, !dbg !16226
  br label %return, !dbg !16226

return:                                           ; preds = %done, %for.end36, %if.then12, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !16227
  ret i32 %37, !dbg !16227
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @check_x_suffix(i8* %s, i64 %len) #9 !dbg !16228 !ctir !1126 {
entry:
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !16229, metadata !DIExpression()), !dbg !16230
  store i64 %len, i64* %len.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16231, metadata !DIExpression()), !dbg !16232
  %0 = load i64, i64* %len.addr, align 8, !dbg !16233, !tbaa !3848
  %1 = load i8*, i8** %s.addr, align 8, !dbg !16234, !tbaa !2995
  %call = call i64 @strspn(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.357, i64 0, i64 0)) #14, !dbg !16235
  %cmp = icmp ule i64 %0, %call, !dbg !16236
  ret i1 %cmp, !dbg !16237
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname_len(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind, i64 %x_suffix_len) #4 !dbg !16238 !ctir !1120 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  %x_suffix_len.addr = alloca i64, align 8
  %tryfunc = alloca i32 (i8*, i8*)*, align 8, !ctir !1113
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16239, metadata !DIExpression()), !dbg !16240
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16241, metadata !DIExpression()), !dbg !16242
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16243, metadata !DIExpression()), !dbg !16244
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !16245, metadata !DIExpression()), !dbg !16246
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !16247, metadata !DIExpression()), !dbg !16248
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc, metadata !16249, metadata !DIExpression()), !dbg !16250
  %0 = load i32, i32* %kind.addr, align 4, !dbg !16251, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ], !dbg !16252

sw.bb:                                            ; preds = %entry
  store i32 (i8*, i8*)* @try_file, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16253, !tbaa !2995
  br label %sw.epilog, !dbg !16255

sw.bb1:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_dir, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16256, !tbaa !2995
  br label %sw.epilog, !dbg !16257

sw.bb2:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_nocreate, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16258, !tbaa !2995
  br label %sw.epilog, !dbg !16259

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.358, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.359, i64 0, i64 0), i32 327, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.gen_tempname_len, i64 0, i64 0)) #13, !dbg !16260
  unreachable, !dbg !16260

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !16263, !tbaa !2995
  %2 = load i32, i32* %suffixlen.addr, align 4, !dbg !16264, !tbaa !2982
  %3 = bitcast i32* %flags.addr to i8*, !dbg !16265
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16266, !tbaa !2995
  %5 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16267, !tbaa !3848
  %call = call i32 @try_tempname_len(i8* %1, i32 %2, i8* %3, i32 (i8*, i8*)* %4, i64 %5), !dbg !16268
  ret i32 %call, !dbg !16269
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_file(i8* %tmpl, i8* %flags) #4 !dbg !16270 !ctir !570 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %openflags = alloca i32*, align 8, !ctir !129
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16271, metadata !DIExpression()), !dbg !16272
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16273, metadata !DIExpression()), !dbg !16274
  call void @llvm.dbg.declare(metadata i32** %openflags, metadata !16275, metadata !DIExpression()), !dbg !16276
  %0 = load i8*, i8** %flags.addr, align 8, !dbg !16277, !tbaa !2995
  %1 = bitcast i8* %0 to i32*, !dbg !16277
  store i32* %1, i32** %openflags, align 8, !dbg !16276, !tbaa !2995
  %2 = load i8*, i8** %tmpl.addr, align 8, !dbg !16278, !tbaa !2995
  %3 = load i32*, i32** %openflags, align 8, !dbg !16279, !tbaa !2995
  %4 = load i32, i32* %3, align 4, !dbg !16280, !tbaa !2982, !ctir !7
  %and = and i32 %4, -4, !dbg !16281
  %or = or i32 %and, 2, !dbg !16282
  %or1 = or i32 %or, 64, !dbg !16283
  %or2 = or i32 %or1, 128, !dbg !16284
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or2, i32 384), !dbg !16285
  ret i32 %call, !dbg !16286
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_dir(i8* %tmpl, i8* %flags) #4 !dbg !16287 !ctir !570 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16288, metadata !DIExpression()), !dbg !16289
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16290, metadata !DIExpression()), !dbg !16291
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16292, !tbaa !2995
  %call = call i32 @mkdir(i8* %0, i32 448) #10, !dbg !16293
  ret i32 %call, !dbg !16294
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_nocreate(i8* %tmpl, i8* %flags) #4 !dbg !16295 !ctir !570 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !16296
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16317, metadata !DIExpression()), !dbg !16318
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16319, metadata !DIExpression()), !dbg !16320
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !16321, metadata !DIExpression()), !dbg !16322
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16323, !tbaa !2995
  %call = call i32 @lstat(i8* %0, %struct.stat* %st) #10, !dbg !16323
  %cmp = icmp eq i32 %call, 0, !dbg !16325
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16326

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !16327
  %1 = load i32, i32* %call1, align 4, !dbg !16327, !tbaa !2982, !ctir !7
  %cmp2 = icmp eq i32 %1, 75, !dbg !16328
  br i1 %cmp2, label %if.then, label %if.end, !dbg !16329

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call3 = call i32* @__errno_location() #15, !dbg !16330
  store i32 17, i32* %call3, align 4, !dbg !16330, !tbaa !2982, !ctir !7
  br label %if.end, !dbg !16330

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %call4 = call i32* @__errno_location() #15, !dbg !16331
  %2 = load i32, i32* %call4, align 4, !dbg !16331, !tbaa !2982, !ctir !7
  %cmp5 = icmp eq i32 %2, 2, !dbg !16332
  %3 = zext i1 %cmp5 to i64, !dbg !16331
  %cond = select i1 %cmp5, i32 0, i32 -1, !dbg !16331
  ret i32 %cond, !dbg !16333
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind) #4 !dbg !16334 !ctir !1122 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16335, metadata !DIExpression()), !dbg !16336
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16337, metadata !DIExpression()), !dbg !16338
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16339, metadata !DIExpression()), !dbg !16340
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !16341, metadata !DIExpression()), !dbg !16342
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16343, !tbaa !2995
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !16344, !tbaa !2982
  %2 = load i32, i32* %flags.addr, align 4, !dbg !16345, !tbaa !2982
  %3 = load i32, i32* %kind.addr, align 4, !dbg !16346, !tbaa !2982
  %call = call i32 @gen_tempname_len(i8* %0, i32 %1, i32 %2, i32 %3, i64 6), !dbg !16347
  ret i32 %call, !dbg !16348
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc) #4 !dbg !16349 !ctir !1124 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16350, metadata !DIExpression()), !dbg !16351
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16352, metadata !DIExpression()), !dbg !16353
  store i8* %args, i8** %args.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !16354, metadata !DIExpression()), !dbg !16355
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !16356, metadata !DIExpression()), !dbg !16357
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16358, !tbaa !2995
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !16359, !tbaa !2982
  %2 = load i8*, i8** %args.addr, align 8, !dbg !16360, !tbaa !2995
  %3 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !16361, !tbaa !2995
  %call = call i32 @try_tempname_len(i8* %0, i32 %1, i8* %2, i32 (i8*, i8*)* %3, i64 6), !dbg !16362
  ret i32 %call, !dbg !16363
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fd_safer(i32 %fd) #4 !dbg !16364 !ctir !1827 {
entry:
  %fd.addr = alloca i32, align 4
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16366, metadata !DIExpression()), !dbg !16367
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16368, !tbaa !2982
  %cmp = icmp sle i32 0, %0, !dbg !16370
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16371

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !16372, !tbaa !2982
  %cmp1 = icmp sle i32 %1, 2, !dbg !16373
  br i1 %cmp1, label %if.then, label %if.end, !dbg !16374

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !16375, metadata !DIExpression()), !dbg !16377
  %2 = load i32, i32* %fd.addr, align 4, !dbg !16378, !tbaa !2982
  %call = call i32 @dup_safer(i32 %2), !dbg !16379
  store i32 %call, i32* %f, align 4, !dbg !16377, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %e, metadata !16380, metadata !DIExpression()), !dbg !16381
  %call2 = call i32* @__errno_location() #15, !dbg !16382
  %3 = load i32, i32* %call2, align 4, !dbg !16382, !tbaa !2982, !ctir !7
  store i32 %3, i32* %e, align 4, !dbg !16381, !tbaa !2982
  %4 = load i32, i32* %fd.addr, align 4, !dbg !16383, !tbaa !2982
  %call3 = call i32 @close(i32 %4), !dbg !16384
  %5 = load i32, i32* %e, align 4, !dbg !16385, !tbaa !2982
  %call4 = call i32* @__errno_location() #15, !dbg !16386
  store i32 %5, i32* %call4, align 4, !dbg !16387, !tbaa !2982, !ctir !7
  %6 = load i32, i32* %f, align 4, !dbg !16388, !tbaa !2982
  store i32 %6, i32* %fd.addr, align 4, !dbg !16389, !tbaa !2982
  br label %if.end, !dbg !16390

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !16391, !tbaa !2982
  ret i32 %7, !dbg !16392
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmp(i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !16393 !ctir !1162 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !16394, metadata !DIExpression()), !dbg !16395
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !16396, metadata !DIExpression()), !dbg !16397
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !16398, metadata !DIExpression()), !dbg !16399
  store i32 %options, i32* %options.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !16400, metadata !DIExpression()), !dbg !16401
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !16402, !tbaa !2995
  %1 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16403, !tbaa !2995
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !16404, !tbaa !2995
  %3 = load i32, i32* %options.addr, align 4, !dbg !16405, !tbaa !2982
  %call = call i32 @utimecmpat(i32 -100, i8* %0, %struct.stat* %1, %struct.stat* %2, i32 %3), !dbg !16406
  ret i32 %call, !dbg !16407
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmpat(i32 %dfd, i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !1132 !ctir !1134 {
entry:
  %retval = alloca i32, align 4
  %dfd.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  %dst_s = alloca i64, align 8, !ctir !1164
  %src_s = alloca i64, align 8, !ctir !1164
  %dst_ns = alloca i32, align 4, !ctir !7
  %src_ns = alloca i32, align 4, !ctir !7
  %dst_res = alloca %struct.fs_res*, align 8, !ctir !1166
  %tmp_dst_res = alloca %struct.fs_res, align 8, !ctir !1167
  %res = alloca i32, align 4, !ctir !7
  %dst_a_s = alloca i64, align 8, !ctir !1164
  %dst_c_s = alloca i64, align 8, !ctir !1164
  %dst_m_s = alloca i64, align 8, !ctir !1164
  %dst_a_ns = alloca i32, align 4, !ctir !7
  %dst_c_ns = alloca i32, align 4, !ctir !7
  %dst_m_ns = alloca i32, align 4, !ctir !7
  %odd_second = alloca i8, align 1, !ctir !120
  %a = alloca i32, align 4, !ctir !7
  %c = alloca i32, align 4, !ctir !7
  %m = alloca i32, align 4, !ctir !7
  %SR10 = alloca i32, align 4, !ctir !7
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !1172
  %dst_status = alloca %struct.stat, align 8, !ctir !1138
  %s = alloca i64, align 8, !ctir !1164
  %stat_result = alloca i32, align 4, !ctir !7
  %old_res = alloca i32, align 4, !ctir !7
  %a168 = alloca i32, align 4, !ctir !7
  store i32 %dfd, i32* %dfd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dfd.addr, metadata !16408, metadata !DIExpression()), !dbg !16409
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !16410, metadata !DIExpression()), !dbg !16411
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !16412, metadata !DIExpression()), !dbg !16413
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !16414, metadata !DIExpression()), !dbg !16415
  store i32 %options, i32* %options.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !16416, metadata !DIExpression()), !dbg !16417
  call void @llvm.dbg.declare(metadata i64* %dst_s, metadata !16418, metadata !DIExpression()), !dbg !16419
  %0 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16420, !tbaa !2995
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16421, !ctir !1137
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !16421, !ctir !1152
  %1 = load i64, i64* %tv_sec, align 8, !dbg !16421, !tbaa !16422, !ctir !341
  store i64 %1, i64* %dst_s, align 8, !dbg !16419, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %src_s, metadata !16423, metadata !DIExpression()), !dbg !16424
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !16425, !tbaa !2995
  %st_mtim1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 12, !dbg !16426, !ctir !1137
  %tv_sec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim1, i32 0, i32 0, !dbg !16426, !ctir !1152
  %3 = load i64, i64* %tv_sec2, align 8, !dbg !16426, !tbaa !16422, !ctir !341
  store i64 %3, i64* %src_s, align 8, !dbg !16424, !tbaa !3848
  call void @llvm.dbg.declare(metadata i32* %dst_ns, metadata !16427, metadata !DIExpression()), !dbg !16428
  %4 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16429, !tbaa !2995
  %call = call i64 @get_stat_mtime_ns(%struct.stat* %4) #14, !dbg !16430
  %conv = trunc i64 %call to i32, !dbg !16430
  store i32 %conv, i32* %dst_ns, align 4, !dbg !16428, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %src_ns, metadata !16431, metadata !DIExpression()), !dbg !16432
  %5 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !16433, !tbaa !2995
  %call3 = call i64 @get_stat_mtime_ns(%struct.stat* %5) #14, !dbg !16434
  %conv4 = trunc i64 %call3 to i32, !dbg !16434
  store i32 %conv4, i32* %src_ns, align 4, !dbg !16432, !tbaa !2982
  %6 = load i32, i32* %options.addr, align 4, !dbg !16435, !tbaa !2982
  %and = and i32 %6, 1, !dbg !16437
  %tobool = icmp ne i32 %and, 0, !dbg !16437
  br i1 %tobool, label %if.then, label %if.end207, !dbg !16438

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.fs_res** %dst_res, metadata !16439, metadata !DIExpression()), !dbg !16441
  store %struct.fs_res* null, %struct.fs_res** %dst_res, align 8, !dbg !16441, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.fs_res* %tmp_dst_res, metadata !16442, metadata !DIExpression()), !dbg !16443
  call void @llvm.dbg.declare(metadata i32* %res, metadata !16444, metadata !DIExpression()), !dbg !16445
  %7 = load i64, i64* %dst_s, align 8, !dbg !16446, !tbaa !3848
  %8 = load i64, i64* %src_s, align 8, !dbg !16448, !tbaa !3848
  %cmp = icmp eq i64 %7, %8, !dbg !16449
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16450

land.lhs.true:                                    ; preds = %if.then
  %9 = load i32, i32* %dst_ns, align 4, !dbg !16451, !tbaa !2982
  %10 = load i32, i32* %src_ns, align 4, !dbg !16452, !tbaa !2982
  %cmp6 = icmp eq i32 %9, %10, !dbg !16453
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !16454

if.then8:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !16455
  br label %return, !dbg !16455

if.end:                                           ; preds = %land.lhs.true, %if.then
  %11 = load i64, i64* %dst_s, align 8, !dbg !16456, !tbaa !3848
  %12 = load i64, i64* %src_s, align 8, !dbg !16458, !tbaa !3848
  %sub = sub nsw i64 %12, 2, !dbg !16459
  %cmp9 = icmp sle i64 %11, %sub, !dbg !16460
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !16461

if.then11:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16462
  br label %return, !dbg !16462

if.end12:                                         ; preds = %if.end
  %13 = load i64, i64* %src_s, align 8, !dbg !16463, !tbaa !3848
  %14 = load i64, i64* %dst_s, align 8, !dbg !16465, !tbaa !3848
  %sub13 = sub nsw i64 %14, 2, !dbg !16466
  %cmp14 = icmp sle i64 %13, %sub13, !dbg !16467
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !16468

if.then16:                                        ; preds = %if.end12
  store i32 1, i32* %retval, align 4, !dbg !16469
  br label %return, !dbg !16469

if.end17:                                         ; preds = %if.end12
  %15 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16470, !tbaa !2995
  %tobool18 = icmp ne %struct.hash_table* %15, null, !dbg !16470
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !16472

if.then19:                                        ; preds = %if.end17
  %call20 = call %struct.hash_table* @hash_initialize(i64 16, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_info_hash, i1 (i8*, i8*)* @dev_info_compare, void (i8*)* @free), !dbg !16473
  store %struct.hash_table* %call20, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16474, !tbaa !2995
  br label %if.end21, !dbg !16475

if.end21:                                         ; preds = %if.then19, %if.end17
  %16 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16476, !tbaa !2995
  %tobool22 = icmp ne %struct.hash_table* %16, null, !dbg !16476
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !16478

if.then23:                                        ; preds = %if.end21
  %17 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16479, !tbaa !2995
  %tobool24 = icmp ne %struct.fs_res* %17, null, !dbg !16479
  br i1 %tobool24, label %if.end30, label %if.then25, !dbg !16482

if.then25:                                        ; preds = %if.then23
  %call26 = call noalias i8* @malloc(i64 16) #10, !dbg !16483
  %18 = bitcast i8* %call26 to %struct.fs_res*, !dbg !16483
  store %struct.fs_res* %18, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16485, !tbaa !2995
  %19 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16486, !tbaa !2995
  %tobool27 = icmp ne %struct.fs_res* %19, null, !dbg !16486
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !16488

if.then28:                                        ; preds = %if.then25
  br label %low_memory, !dbg !16489

if.end29:                                         ; preds = %if.then25
  %20 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16490, !tbaa !2995
  %resolution = getelementptr inbounds %struct.fs_res, %struct.fs_res* %20, i32 0, i32 1, !dbg !16491, !ctir !1167
  store i32 2000000000, i32* %resolution, align 8, !dbg !16492, !tbaa !16493, !ctir !7
  %21 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16495, !tbaa !2995
  %exact = getelementptr inbounds %struct.fs_res, %struct.fs_res* %21, i32 0, i32 2, !dbg !16496, !ctir !1167
  store i8 0, i8* %exact, align 4, !dbg !16497, !tbaa !16498, !ctir !120
  br label %if.end30, !dbg !16499

if.end30:                                         ; preds = %if.end29, %if.then23
  %22 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16500, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0, !dbg !16501, !ctir !1137
  %23 = load i64, i64* %st_dev, align 8, !dbg !16501, !tbaa !3873, !ctir !231
  %24 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16502, !tbaa !2995
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %24, i32 0, i32 0, !dbg !16503, !ctir !1167
  store i64 %23, i64* %dev, align 8, !dbg !16504, !tbaa !16505, !ctir !230
  %25 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16506, !tbaa !2995
  %26 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16507, !tbaa !2995
  %27 = bitcast %struct.fs_res* %26 to i8*, !dbg !16507
  %call31 = call i8* @hash_insert(%struct.hash_table* %25, i8* %27), !dbg !16508
  %28 = bitcast i8* %call31 to %struct.fs_res*, !dbg !16508
  store %struct.fs_res* %28, %struct.fs_res** %dst_res, align 8, !dbg !16509, !tbaa !2995
  %29 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16510, !tbaa !2995
  %tobool32 = icmp ne %struct.fs_res* %29, null, !dbg !16510
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !16512

if.then33:                                        ; preds = %if.end30
  br label %low_memory, !dbg !16513

if.end34:                                         ; preds = %if.end30
  %30 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16514, !tbaa !2995
  %31 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16516, !tbaa !2995
  %cmp35 = icmp eq %struct.fs_res* %30, %31, !dbg !16517
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !16518

if.then37:                                        ; preds = %if.end34
  store %struct.fs_res* null, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16519, !tbaa !2995
  br label %if.end38, !dbg !16521

if.end38:                                         ; preds = %if.then37, %if.end34
  br label %if.end50, !dbg !16522

if.else:                                          ; preds = %if.end21
  br label %low_memory, !dbg !16523

low_memory:                                       ; preds = %if.else, %if.then33, %if.then28
  call void @llvm.dbg.label(metadata !16524), !dbg !16526
  %32 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16527, !tbaa !2995
  %tobool39 = icmp ne %struct.hash_table* %32, null, !dbg !16527
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !16529

if.then40:                                        ; preds = %low_memory
  %33 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16530, !tbaa !2995
  %st_dev41 = getelementptr inbounds %struct.stat, %struct.stat* %33, i32 0, i32 0, !dbg !16532, !ctir !1137
  %34 = load i64, i64* %st_dev41, align 8, !dbg !16532, !tbaa !3873, !ctir !231
  %dev42 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %tmp_dst_res, i32 0, i32 0, !dbg !16533, !ctir !1167
  store i64 %34, i64* %dev42, align 8, !dbg !16534, !tbaa !16505, !ctir !230
  %35 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16535, !tbaa !2995
  %36 = bitcast %struct.fs_res* %tmp_dst_res to i8*, !dbg !16536
  %call43 = call i8* @hash_lookup(%struct.hash_table* %35, i8* %36), !dbg !16537
  %37 = bitcast i8* %call43 to %struct.fs_res*, !dbg !16537
  store %struct.fs_res* %37, %struct.fs_res** %dst_res, align 8, !dbg !16538, !tbaa !2995
  br label %if.end44, !dbg !16539

if.end44:                                         ; preds = %if.then40, %low_memory
  %38 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16540, !tbaa !2995
  %tobool45 = icmp ne %struct.fs_res* %38, null, !dbg !16540
  br i1 %tobool45, label %if.end49, label %if.then46, !dbg !16542

if.then46:                                        ; preds = %if.end44
  store %struct.fs_res* %tmp_dst_res, %struct.fs_res** %dst_res, align 8, !dbg !16543, !tbaa !2995
  %39 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16545, !tbaa !2995
  %resolution47 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %39, i32 0, i32 1, !dbg !16546, !ctir !1167
  store i32 2000000000, i32* %resolution47, align 8, !dbg !16547, !tbaa !16493, !ctir !7
  %40 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16548, !tbaa !2995
  %exact48 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %40, i32 0, i32 2, !dbg !16549, !ctir !1167
  store i8 0, i8* %exact48, align 4, !dbg !16550, !tbaa !16498, !ctir !120
  br label %if.end49, !dbg !16551

if.end49:                                         ; preds = %if.then46, %if.end44
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end38
  %41 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16552, !tbaa !2995
  %resolution51 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %41, i32 0, i32 1, !dbg !16553, !ctir !1167
  %42 = load i32, i32* %resolution51, align 8, !dbg !16553, !tbaa !16493, !ctir !7
  store i32 %42, i32* %res, align 4, !dbg !16554, !tbaa !2982
  %43 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16555, !tbaa !2995
  %exact52 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %43, i32 0, i32 2, !dbg !16557, !ctir !1167
  %44 = load i8, i8* %exact52, align 4, !dbg !16557, !tbaa !16498
  %tobool53 = trunc i8 %44 to i1, !dbg !16557, !ctir !120
  br i1 %tobool53, label %if.end198, label %if.then54, !dbg !16558

if.then54:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i64* %dst_a_s, metadata !16559, metadata !DIExpression()), !dbg !16561
  %45 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16562, !tbaa !2995
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 11, !dbg !16563, !ctir !1137
  %tv_sec55 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !16563, !ctir !1152
  %46 = load i64, i64* %tv_sec55, align 8, !dbg !16563, !tbaa !16564, !ctir !341
  store i64 %46, i64* %dst_a_s, align 8, !dbg !16561, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %dst_c_s, metadata !16565, metadata !DIExpression()), !dbg !16566
  %47 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16567, !tbaa !2995
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 13, !dbg !16568, !ctir !1137
  %tv_sec56 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 0, !dbg !16568, !ctir !1152
  %48 = load i64, i64* %tv_sec56, align 8, !dbg !16568, !tbaa !16569, !ctir !341
  store i64 %48, i64* %dst_c_s, align 8, !dbg !16566, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %dst_m_s, metadata !16570, metadata !DIExpression()), !dbg !16571
  %49 = load i64, i64* %dst_s, align 8, !dbg !16572, !tbaa !3848
  store i64 %49, i64* %dst_m_s, align 8, !dbg !16571, !tbaa !3848
  call void @llvm.dbg.declare(metadata i32* %dst_a_ns, metadata !16573, metadata !DIExpression()), !dbg !16574
  %50 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16575, !tbaa !2995
  %call57 = call i64 @get_stat_atime_ns(%struct.stat* %50) #14, !dbg !16576
  %conv58 = trunc i64 %call57 to i32, !dbg !16576
  store i32 %conv58, i32* %dst_a_ns, align 4, !dbg !16574, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dst_c_ns, metadata !16577, metadata !DIExpression()), !dbg !16578
  %51 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16579, !tbaa !2995
  %call59 = call i64 @get_stat_ctime_ns(%struct.stat* %51) #14, !dbg !16580
  %conv60 = trunc i64 %call59 to i32, !dbg !16580
  store i32 %conv60, i32* %dst_c_ns, align 4, !dbg !16578, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dst_m_ns, metadata !16581, metadata !DIExpression()), !dbg !16582
  %52 = load i32, i32* %dst_ns, align 4, !dbg !16583, !tbaa !2982
  store i32 %52, i32* %dst_m_ns, align 4, !dbg !16582, !tbaa !2982
  call void @llvm.dbg.declare(metadata i8* %odd_second, metadata !16584, metadata !DIExpression()), !dbg !16586
  %53 = load i64, i64* %dst_a_s, align 8, !dbg !16587, !tbaa !3848
  %54 = load i64, i64* %dst_c_s, align 8, !dbg !16588, !tbaa !3848
  %or = or i64 %53, %54, !dbg !16589
  %55 = load i64, i64* %dst_m_s, align 8, !dbg !16590, !tbaa !3848
  %or61 = or i64 %or, %55, !dbg !16591
  %and62 = and i64 %or61, 1, !dbg !16592
  %tobool63 = icmp ne i64 %and62, 0, !dbg !16593
  %frombool = zext i1 %tobool63 to i8, !dbg !16586
  store i8 %frombool, i8* %odd_second, align 1, !dbg !16586, !tbaa !3106
  call void @llvm.dbg.declare(metadata i32* %a, metadata !16594, metadata !DIExpression()), !dbg !16597
  %56 = load i32, i32* %dst_a_ns, align 4, !dbg !16598, !tbaa !2982
  store i32 %56, i32* %a, align 4, !dbg !16597, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c, metadata !16599, metadata !DIExpression()), !dbg !16600
  %57 = load i32, i32* %dst_c_ns, align 4, !dbg !16601, !tbaa !2982
  store i32 %57, i32* %c, align 4, !dbg !16600, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %m, metadata !16602, metadata !DIExpression()), !dbg !16603
  %58 = load i32, i32* %dst_m_ns, align 4, !dbg !16604, !tbaa !2982
  store i32 %58, i32* %m, align 4, !dbg !16603, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %SR10, metadata !16605, metadata !DIExpression()), !dbg !16606
  store i32 1, i32* %SR10, align 4, !dbg !16606, !tbaa !2982
  %59 = load i32, i32* %SR10, align 4, !dbg !16607, !tbaa !2982
  %mul = mul nsw i32 %59, 10, !dbg !16607
  store i32 %mul, i32* %SR10, align 4, !dbg !16607, !tbaa !2982
  %60 = load i32, i32* %a, align 4, !dbg !16608, !tbaa !2982
  %61 = load i32, i32* %SR10, align 4, !dbg !16610, !tbaa !2982
  %rem = srem i32 %60, %61, !dbg !16611
  %62 = load i32, i32* %c, align 4, !dbg !16612, !tbaa !2982
  %63 = load i32, i32* %SR10, align 4, !dbg !16613, !tbaa !2982
  %rem64 = srem i32 %62, %63, !dbg !16614
  %or65 = or i32 %rem, %rem64, !dbg !16615
  %64 = load i32, i32* %m, align 4, !dbg !16616, !tbaa !2982
  %65 = load i32, i32* %SR10, align 4, !dbg !16617, !tbaa !2982
  %rem66 = srem i32 %64, %65, !dbg !16618
  %or67 = or i32 %or65, %rem66, !dbg !16619
  %cmp68 = icmp ne i32 %or67, 0, !dbg !16620
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !16621

if.then70:                                        ; preds = %if.then54
  store i32 1, i32* %res, align 4, !dbg !16622, !tbaa !2982
  br label %if.end96, !dbg !16623

if.else71:                                        ; preds = %if.then54
  %66 = load i32, i32* %SR10, align 4, !dbg !16624, !tbaa !2982
  store i32 %66, i32* %res, align 4, !dbg !16626, !tbaa !2982
  %67 = load i32, i32* %SR10, align 4, !dbg !16627, !tbaa !2982
  %68 = load i32, i32* %a, align 4, !dbg !16628, !tbaa !2982
  %div = sdiv i32 %68, %67, !dbg !16628
  store i32 %div, i32* %a, align 4, !dbg !16628, !tbaa !2982
  %69 = load i32, i32* %SR10, align 4, !dbg !16629, !tbaa !2982
  %70 = load i32, i32* %c, align 4, !dbg !16630, !tbaa !2982
  %div72 = sdiv i32 %70, %69, !dbg !16630
  store i32 %div72, i32* %c, align 4, !dbg !16630, !tbaa !2982
  %71 = load i32, i32* %SR10, align 4, !dbg !16631, !tbaa !2982
  %72 = load i32, i32* %m, align 4, !dbg !16632, !tbaa !2982
  %div73 = sdiv i32 %72, %71, !dbg !16632
  store i32 %div73, i32* %m, align 4, !dbg !16632, !tbaa !2982
  br label %for.cond, !dbg !16633

for.cond:                                         ; preds = %for.inc, %if.else71
  %73 = load i32, i32* %res, align 4, !dbg !16634, !tbaa !2982
  %74 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16636, !tbaa !2995
  %resolution74 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %74, i32 0, i32 1, !dbg !16637, !ctir !1167
  %75 = load i32, i32* %resolution74, align 8, !dbg !16637, !tbaa !16493, !ctir !7
  %cmp75 = icmp slt i32 %73, %75, !dbg !16638
  br i1 %cmp75, label %land.rhs, label %land.end, !dbg !16639

land.rhs:                                         ; preds = %for.cond
  %76 = load i32, i32* %a, align 4, !dbg !16640, !tbaa !2982
  %rem77 = srem i32 %76, 10, !dbg !16641
  %77 = load i32, i32* %c, align 4, !dbg !16642, !tbaa !2982
  %rem78 = srem i32 %77, 10, !dbg !16643
  %or79 = or i32 %rem77, %rem78, !dbg !16644
  %78 = load i32, i32* %m, align 4, !dbg !16645, !tbaa !2982
  %rem80 = srem i32 %78, 10, !dbg !16646
  %or81 = or i32 %or79, %rem80, !dbg !16647
  %cmp82 = icmp eq i32 %or81, 0, !dbg !16648
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %79 = phi i1 [ false, %for.cond ], [ %cmp82, %land.rhs ], !dbg !16649
  br i1 %79, label %for.body, label %for.end, !dbg !16650

for.body:                                         ; preds = %land.end
  %80 = load i32, i32* %res, align 4, !dbg !16651, !tbaa !2982
  %cmp84 = icmp eq i32 %80, 1000000000, !dbg !16653
  br i1 %cmp84, label %if.then86, label %if.end91, !dbg !16654

if.then86:                                        ; preds = %for.body
  %81 = load i8, i8* %odd_second, align 1, !dbg !16655, !tbaa !3106
  %tobool87 = trunc i8 %81 to i1, !dbg !16655
  br i1 %tobool87, label %if.end90, label %if.then88, !dbg !16658

if.then88:                                        ; preds = %if.then86
  %82 = load i32, i32* %res, align 4, !dbg !16659, !tbaa !2982
  %mul89 = mul nsw i32 %82, 2, !dbg !16659
  store i32 %mul89, i32* %res, align 4, !dbg !16659, !tbaa !2982
  br label %if.end90, !dbg !16660

if.end90:                                         ; preds = %if.then88, %if.then86
  br label %for.end, !dbg !16661

if.end91:                                         ; preds = %for.body
  br label %for.inc, !dbg !16662

for.inc:                                          ; preds = %if.end91
  %83 = load i32, i32* %res, align 4, !dbg !16663, !tbaa !2982
  %mul92 = mul nsw i32 %83, 10, !dbg !16663
  store i32 %mul92, i32* %res, align 4, !dbg !16663, !tbaa !2982
  %84 = load i32, i32* %a, align 4, !dbg !16664, !tbaa !2982
  %div93 = sdiv i32 %84, 10, !dbg !16664
  store i32 %div93, i32* %a, align 4, !dbg !16664, !tbaa !2982
  %85 = load i32, i32* %c, align 4, !dbg !16665, !tbaa !2982
  %div94 = sdiv i32 %85, 10, !dbg !16665
  store i32 %div94, i32* %c, align 4, !dbg !16665, !tbaa !2982
  %86 = load i32, i32* %m, align 4, !dbg !16666, !tbaa !2982
  %div95 = sdiv i32 %86, 10, !dbg !16666
  store i32 %div95, i32* %m, align 4, !dbg !16666, !tbaa !2982
  br label %for.cond, !dbg !16667, !llvm.loop !16668

for.end:                                          ; preds = %if.end90, %land.end
  br label %if.end96

if.end96:                                         ; preds = %for.end, %if.then70
  %87 = load i32, i32* %res, align 4, !dbg !16670, !tbaa !2982
  %88 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16671, !tbaa !2995
  %resolution97 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %88, i32 0, i32 1, !dbg !16672, !ctir !1167
  store i32 %87, i32* %resolution97, align 8, !dbg !16673, !tbaa !16493, !ctir !7
  %89 = load i32, i32* %res, align 4, !dbg !16674, !tbaa !2982
  %cmp98 = icmp slt i32 1, %89, !dbg !16676
  br i1 %cmp98, label %if.then100, label %if.end195, !dbg !16677

if.then100:                                       ; preds = %if.end96
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !16678, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_status, metadata !16681, metadata !DIExpression()), !dbg !16682
  %90 = load i32, i32* %src_ns, align 4, !dbg !16683, !tbaa !2982
  %rem101 = srem i32 %90, 1, !dbg !16684
  %91 = load i32, i32* %src_ns, align 4, !dbg !16685, !tbaa !2982
  %sub102 = sub nsw i32 %91, %rem101, !dbg !16685
  store i32 %sub102, i32* %src_ns, align 4, !dbg !16685, !tbaa !2982
  call void @llvm.dbg.declare(metadata i64* %s, metadata !16686, metadata !DIExpression()), !dbg !16688
  %92 = load i64, i64* %src_s, align 8, !dbg !16689, !tbaa !3848
  %93 = load i32, i32* %res, align 4, !dbg !16690, !tbaa !2982
  %cmp103 = icmp eq i32 %93, 2000000000, !dbg !16691
  %94 = zext i1 %cmp103 to i64, !dbg !16690
  %cond = select i1 %cmp103, i32 1, i32 0, !dbg !16690
  %neg = xor i32 %cond, -1, !dbg !16692
  %conv105 = sext i32 %neg to i64, !dbg !16692
  %and106 = and i64 %92, %conv105, !dbg !16693
  store i64 %and106, i64* %s, align 8, !dbg !16688, !tbaa !3848
  %95 = load i64, i64* %src_s, align 8, !dbg !16694, !tbaa !3848
  %96 = load i64, i64* %dst_s, align 8, !dbg !16696, !tbaa !3848
  %cmp107 = icmp slt i64 %95, %96, !dbg !16697
  br i1 %cmp107, label %if.then114, label %lor.lhs.false, !dbg !16698

lor.lhs.false:                                    ; preds = %if.then100
  %97 = load i64, i64* %src_s, align 8, !dbg !16699, !tbaa !3848
  %98 = load i64, i64* %dst_s, align 8, !dbg !16700, !tbaa !3848
  %cmp109 = icmp eq i64 %97, %98, !dbg !16701
  br i1 %cmp109, label %land.lhs.true111, label %if.end115, !dbg !16702

land.lhs.true111:                                 ; preds = %lor.lhs.false
  %99 = load i32, i32* %src_ns, align 4, !dbg !16703, !tbaa !2982
  %100 = load i32, i32* %dst_ns, align 4, !dbg !16704, !tbaa !2982
  %cmp112 = icmp sle i32 %99, %100, !dbg !16705
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !16706

if.then114:                                       ; preds = %land.lhs.true111, %if.then100
  store i32 1, i32* %retval, align 4, !dbg !16707
  br label %return, !dbg !16707

if.end115:                                        ; preds = %land.lhs.true111, %lor.lhs.false
  %101 = load i64, i64* %dst_s, align 8, !dbg !16708, !tbaa !3848
  %102 = load i64, i64* %s, align 8, !dbg !16710, !tbaa !3848
  %cmp116 = icmp slt i64 %101, %102, !dbg !16711
  br i1 %cmp116, label %if.then126, label %lor.lhs.false118, !dbg !16712

lor.lhs.false118:                                 ; preds = %if.end115
  %103 = load i64, i64* %dst_s, align 8, !dbg !16713, !tbaa !3848
  %104 = load i64, i64* %s, align 8, !dbg !16714, !tbaa !3848
  %cmp119 = icmp eq i64 %103, %104, !dbg !16715
  br i1 %cmp119, label %land.lhs.true121, label %if.end127, !dbg !16716

land.lhs.true121:                                 ; preds = %lor.lhs.false118
  %105 = load i32, i32* %dst_ns, align 4, !dbg !16717, !tbaa !2982
  %106 = load i32, i32* %src_ns, align 4, !dbg !16718, !tbaa !2982
  %107 = load i32, i32* %src_ns, align 4, !dbg !16719, !tbaa !2982
  %108 = load i32, i32* %res, align 4, !dbg !16720, !tbaa !2982
  %rem122 = srem i32 %107, %108, !dbg !16721
  %sub123 = sub nsw i32 %106, %rem122, !dbg !16722
  %cmp124 = icmp slt i32 %105, %sub123, !dbg !16723
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !16724

if.then126:                                       ; preds = %land.lhs.true121, %if.end115
  store i32 -1, i32* %retval, align 4, !dbg !16725
  br label %return, !dbg !16725

if.end127:                                        ; preds = %land.lhs.true121, %lor.lhs.false118
  %109 = load i64, i64* %dst_a_s, align 8, !dbg !16726, !tbaa !3848
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16727, !ctir !1172
  %tv_sec128 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 0, !dbg !16728, !ctir !1152
  store i64 %109, i64* %tv_sec128, align 16, !dbg !16729, !tbaa !16061, !ctir !341
  %110 = load i32, i32* %dst_a_ns, align 4, !dbg !16730, !tbaa !2982
  %conv129 = sext i32 %110 to i64, !dbg !16730
  %arrayidx130 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16731, !ctir !1172
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx130, i32 0, i32 1, !dbg !16732, !ctir !1152
  store i64 %conv129, i64* %tv_nsec, align 8, !dbg !16733, !tbaa !16064, !ctir !343
  %111 = load i64, i64* %dst_m_s, align 8, !dbg !16734, !tbaa !3848
  %112 = load i32, i32* %res, align 4, !dbg !16735, !tbaa !2982
  %cmp131 = icmp eq i32 %112, 2000000000, !dbg !16736
  %conv132 = zext i1 %cmp131 to i32, !dbg !16736
  %conv133 = sext i32 %conv132 to i64, !dbg !16737
  %or134 = or i64 %111, %conv133, !dbg !16738
  %arrayidx135 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16739, !ctir !1172
  %tv_sec136 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx135, i32 0, i32 0, !dbg !16740, !ctir !1152
  store i64 %or134, i64* %tv_sec136, align 16, !dbg !16741, !tbaa !16061, !ctir !341
  %113 = load i32, i32* %dst_m_ns, align 4, !dbg !16742, !tbaa !2982
  %114 = load i32, i32* %res, align 4, !dbg !16743, !tbaa !2982
  %div137 = sdiv i32 %114, 9, !dbg !16744
  %add = add nsw i32 %113, %div137, !dbg !16745
  %conv138 = sext i32 %add to i64, !dbg !16742
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16746, !ctir !1172
  %tv_nsec140 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx139, i32 0, i32 1, !dbg !16747, !ctir !1152
  store i64 %conv138, i64* %tv_nsec140, align 8, !dbg !16748, !tbaa !16064, !ctir !343
  %115 = load i32, i32* %dfd.addr, align 4, !dbg !16749, !tbaa !2982
  %116 = load i8*, i8** %dst_name.addr, align 8, !dbg !16751, !tbaa !2995
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16752
  %call141 = call i32 @utimensat(i32 %115, i8* %116, %struct.timespec* %arraydecay, i32 256) #10, !dbg !16753
  %tobool142 = icmp ne i32 %call141, 0, !dbg !16753
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !16754

if.then143:                                       ; preds = %if.end127
  store i32 -2, i32* %retval, align 4, !dbg !16755
  br label %return, !dbg !16755

if.end144:                                        ; preds = %if.end127
  call void @llvm.dbg.declare(metadata i32* %stat_result, metadata !16756, metadata !DIExpression()), !dbg !16758
  %117 = load i32, i32* %dfd.addr, align 4, !dbg !16759, !tbaa !2982
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !16760, !tbaa !2995
  %call145 = call i32 @fstatat(i32 %117, i8* %118, %struct.stat* %dst_status, i32 256) #10, !dbg !16761
  store i32 %call145, i32* %stat_result, align 4, !dbg !16758, !tbaa !2982
  %119 = load i32, i32* %stat_result, align 4, !dbg !16762, !tbaa !2982
  %conv146 = sext i32 %119 to i64, !dbg !16762
  %st_mtim147 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !16764, !ctir !1138
  %tv_sec148 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim147, i32 0, i32 0, !dbg !16764, !ctir !1152
  %120 = load i64, i64* %tv_sec148, align 8, !dbg !16764, !tbaa !16422, !ctir !341
  %121 = load i64, i64* %dst_m_s, align 8, !dbg !16765, !tbaa !3848
  %xor = xor i64 %120, %121, !dbg !16766
  %or149 = or i64 %conv146, %xor, !dbg !16767
  %call150 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !16768
  %122 = load i32, i32* %dst_m_ns, align 4, !dbg !16769, !tbaa !2982
  %conv151 = sext i32 %122 to i64, !dbg !16769
  %xor152 = xor i64 %call150, %conv151, !dbg !16770
  %or153 = or i64 %or149, %xor152, !dbg !16771
  %tobool154 = icmp ne i64 %or153, 0, !dbg !16771
  br i1 %tobool154, label %if.then155, label %if.end163, !dbg !16772

if.then155:                                       ; preds = %if.end144
  %123 = load i64, i64* %dst_m_s, align 8, !dbg !16773, !tbaa !3848
  %arrayidx156 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16775, !ctir !1172
  %tv_sec157 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx156, i32 0, i32 0, !dbg !16776, !ctir !1152
  store i64 %123, i64* %tv_sec157, align 16, !dbg !16777, !tbaa !16061, !ctir !341
  %124 = load i32, i32* %dst_m_ns, align 4, !dbg !16778, !tbaa !2982
  %conv158 = sext i32 %124 to i64, !dbg !16778
  %arrayidx159 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16779, !ctir !1172
  %tv_nsec160 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx159, i32 0, i32 1, !dbg !16780, !ctir !1152
  store i64 %conv158, i64* %tv_nsec160, align 8, !dbg !16781, !tbaa !16064, !ctir !343
  %125 = load i32, i32* %dfd.addr, align 4, !dbg !16782, !tbaa !2982
  %126 = load i8*, i8** %dst_name.addr, align 8, !dbg !16783, !tbaa !2995
  %arraydecay161 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16784
  %call162 = call i32 @utimensat(i32 %125, i8* %126, %struct.timespec* %arraydecay161, i32 256) #10, !dbg !16785
  br label %if.end163, !dbg !16786

if.end163:                                        ; preds = %if.then155, %if.end144
  %127 = load i32, i32* %stat_result, align 4, !dbg !16787, !tbaa !2982
  %cmp164 = icmp ne i32 %127, 0, !dbg !16789
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !16790

if.then166:                                       ; preds = %if.end163
  store i32 -2, i32* %retval, align 4, !dbg !16791
  br label %return, !dbg !16791

if.end167:                                        ; preds = %if.end163
  call void @llvm.dbg.declare(metadata i32* %old_res, metadata !16792, metadata !DIExpression()), !dbg !16794
  %128 = load i32, i32* %res, align 4, !dbg !16795, !tbaa !2982
  store i32 %128, i32* %old_res, align 4, !dbg !16794, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %a168, metadata !16796, metadata !DIExpression()), !dbg !16797
  %st_mtim169 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !16798, !ctir !1138
  %tv_sec170 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim169, i32 0, i32 0, !dbg !16798, !ctir !1152
  %129 = load i64, i64* %tv_sec170, align 8, !dbg !16798, !tbaa !16422, !ctir !341
  %and171 = and i64 %129, 1, !dbg !16799
  %mul172 = mul nsw i64 1000000000, %and171, !dbg !16800
  %call173 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !16801
  %add174 = add nsw i64 %mul172, %call173, !dbg !16802
  %conv175 = trunc i64 %add174 to i32, !dbg !16803
  store i32 %conv175, i32* %a168, align 4, !dbg !16797, !tbaa !2982
  store i32 1, i32* %res, align 4, !dbg !16804, !tbaa !2982
  %130 = load i32, i32* %res, align 4, !dbg !16805, !tbaa !2982
  %131 = load i32, i32* %a168, align 4, !dbg !16807, !tbaa !2982
  %div176 = sdiv i32 %131, %130, !dbg !16807
  store i32 %div176, i32* %a168, align 4, !dbg !16807, !tbaa !2982
  br label %for.cond177, !dbg !16808

for.cond177:                                      ; preds = %for.inc192, %if.end167
  %132 = load i32, i32* %a168, align 4, !dbg !16809, !tbaa !2982
  %rem178 = srem i32 %132, 10, !dbg !16811
  %cmp179 = icmp eq i32 %rem178, 0, !dbg !16812
  br i1 %cmp179, label %for.body181, label %for.end194, !dbg !16813

for.body181:                                      ; preds = %for.cond177
  %133 = load i32, i32* %res, align 4, !dbg !16814, !tbaa !2982
  %cmp182 = icmp eq i32 %133, 1000000000, !dbg !16817
  br i1 %cmp182, label %if.then184, label %if.end186, !dbg !16818

if.then184:                                       ; preds = %for.body181
  %134 = load i32, i32* %res, align 4, !dbg !16819, !tbaa !2982
  %mul185 = mul nsw i32 %134, 2, !dbg !16819
  store i32 %mul185, i32* %res, align 4, !dbg !16819, !tbaa !2982
  br label %for.end194, !dbg !16821

if.end186:                                        ; preds = %for.body181
  %135 = load i32, i32* %res, align 4, !dbg !16822, !tbaa !2982
  %mul187 = mul nsw i32 %135, 10, !dbg !16822
  store i32 %mul187, i32* %res, align 4, !dbg !16822, !tbaa !2982
  %136 = load i32, i32* %res, align 4, !dbg !16823, !tbaa !2982
  %137 = load i32, i32* %old_res, align 4, !dbg !16825, !tbaa !2982
  %cmp188 = icmp eq i32 %136, %137, !dbg !16826
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !16827

if.then190:                                       ; preds = %if.end186
  br label %for.end194, !dbg !16828

if.end191:                                        ; preds = %if.end186
  br label %for.inc192, !dbg !16829

for.inc192:                                       ; preds = %if.end191
  %138 = load i32, i32* %a168, align 4, !dbg !16830, !tbaa !2982
  %div193 = sdiv i32 %138, 10, !dbg !16830
  store i32 %div193, i32* %a168, align 4, !dbg !16830, !tbaa !2982
  br label %for.cond177, !dbg !16831, !llvm.loop !16832

for.end194:                                       ; preds = %if.then190, %if.then184, %for.cond177
  br label %if.end195, !dbg !16834

if.end195:                                        ; preds = %for.end194, %if.end96
  %139 = load i32, i32* %res, align 4, !dbg !16835, !tbaa !2982
  %140 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16836, !tbaa !2995
  %resolution196 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %140, i32 0, i32 1, !dbg !16837, !ctir !1167
  store i32 %139, i32* %resolution196, align 8, !dbg !16838, !tbaa !16493, !ctir !7
  %141 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16839, !tbaa !2995
  %exact197 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %141, i32 0, i32 2, !dbg !16840, !ctir !1167
  store i8 1, i8* %exact197, align 4, !dbg !16841, !tbaa !16498, !ctir !120
  br label %if.end198, !dbg !16842

if.end198:                                        ; preds = %if.end195, %if.end50
  %142 = load i32, i32* %res, align 4, !dbg !16843, !tbaa !2982
  %cmp199 = icmp eq i32 %142, 2000000000, !dbg !16844
  %143 = zext i1 %cmp199 to i64, !dbg !16843
  %cond201 = select i1 %cmp199, i32 1, i32 0, !dbg !16843
  %neg202 = xor i32 %cond201, -1, !dbg !16845
  %conv203 = sext i32 %neg202 to i64, !dbg !16845
  %144 = load i64, i64* %src_s, align 8, !dbg !16846, !tbaa !3848
  %and204 = and i64 %144, %conv203, !dbg !16846
  store i64 %and204, i64* %src_s, align 8, !dbg !16846, !tbaa !3848
  %145 = load i32, i32* %src_ns, align 4, !dbg !16847, !tbaa !2982
  %146 = load i32, i32* %res, align 4, !dbg !16848, !tbaa !2982
  %rem205 = srem i32 %145, %146, !dbg !16849
  %147 = load i32, i32* %src_ns, align 4, !dbg !16850, !tbaa !2982
  %sub206 = sub nsw i32 %147, %rem205, !dbg !16850
  store i32 %sub206, i32* %src_ns, align 4, !dbg !16850, !tbaa !2982
  br label %if.end207, !dbg !16851

if.end207:                                        ; preds = %if.end198, %entry
  %148 = load i64, i64* %dst_s, align 8, !dbg !16852, !tbaa !3848
  %149 = load i64, i64* %src_s, align 8, !dbg !16853, !tbaa !3848
  %cmp208 = icmp slt i64 %148, %149, !dbg !16854
  br i1 %cmp208, label %cond.true, label %cond.false, !dbg !16852

cond.true:                                        ; preds = %if.end207
  br label %cond.end223, !dbg !16852

cond.false:                                       ; preds = %if.end207
  %150 = load i64, i64* %dst_s, align 8, !dbg !16855, !tbaa !3848
  %151 = load i64, i64* %src_s, align 8, !dbg !16856, !tbaa !3848
  %cmp210 = icmp sgt i64 %150, %151, !dbg !16857
  br i1 %cmp210, label %cond.true212, label %cond.false213, !dbg !16855

cond.true212:                                     ; preds = %cond.false
  br label %cond.end221, !dbg !16855

cond.false213:                                    ; preds = %cond.false
  %152 = load i32, i32* %dst_ns, align 4, !dbg !16858, !tbaa !2982
  %153 = load i32, i32* %src_ns, align 4, !dbg !16859, !tbaa !2982
  %cmp214 = icmp slt i32 %152, %153, !dbg !16860
  br i1 %cmp214, label %cond.true216, label %cond.false217, !dbg !16858

cond.true216:                                     ; preds = %cond.false213
  br label %cond.end, !dbg !16858

cond.false217:                                    ; preds = %cond.false213
  %154 = load i32, i32* %dst_ns, align 4, !dbg !16861, !tbaa !2982
  %155 = load i32, i32* %src_ns, align 4, !dbg !16862, !tbaa !2982
  %cmp218 = icmp sgt i32 %154, %155, !dbg !16863
  %conv219 = zext i1 %cmp218 to i32, !dbg !16863
  br label %cond.end, !dbg !16858

cond.end:                                         ; preds = %cond.false217, %cond.true216
  %cond220 = phi i32 [ -1, %cond.true216 ], [ %conv219, %cond.false217 ], !dbg !16858
  br label %cond.end221, !dbg !16855

cond.end221:                                      ; preds = %cond.end, %cond.true212
  %cond222 = phi i32 [ 1, %cond.true212 ], [ %cond220, %cond.end ], !dbg !16855
  br label %cond.end223, !dbg !16852

cond.end223:                                      ; preds = %cond.end221, %cond.true
  %cond224 = phi i32 [ -1, %cond.true ], [ %cond222, %cond.end221 ], !dbg !16852
  store i32 %cond224, i32* %retval, align 4, !dbg !16864
  br label %return, !dbg !16864

return:                                           ; preds = %cond.end223, %if.then166, %if.then143, %if.then126, %if.then114, %if.then16, %if.then11, %if.then8
  %156 = load i32, i32* %retval, align 4, !dbg !16865
  ret i32 %156, !dbg !16865
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_info_hash(i8* %x, i64 %table_size) #4 !dbg !16866 !ctir !547 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.fs_res*, align 8, !ctir !1173
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !16867, metadata !DIExpression()), !dbg !16868
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !16869, metadata !DIExpression()), !dbg !16870
  call void @llvm.dbg.declare(metadata %struct.fs_res** %p, metadata !16871, metadata !DIExpression()), !dbg !16872
  %0 = load i8*, i8** %x.addr, align 8, !dbg !16873, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !16873
  store %struct.fs_res* %1, %struct.fs_res** %p, align 8, !dbg !16872, !tbaa !2995
  %2 = load %struct.fs_res*, %struct.fs_res** %p, align 8, !dbg !16874, !tbaa !2995
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %2, i32 0, i32 0, !dbg !16875, !ctir !1174
  %3 = load i64, i64* %dev, align 8, !dbg !16875, !tbaa !16505, !ctir !230
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !16876, !tbaa !3848
  %rem = urem i64 %3, %4, !dbg !16877
  ret i64 %rem, !dbg !16878
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_info_compare(i8* %x, i8* %y) #4 !dbg !16879 !ctir !549 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.fs_res*, align 8, !ctir !1173
  %b = alloca %struct.fs_res*, align 8, !ctir !1173
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !16880, metadata !DIExpression()), !dbg !16881
  store i8* %y, i8** %y.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !16882, metadata !DIExpression()), !dbg !16883
  call void @llvm.dbg.declare(metadata %struct.fs_res** %a, metadata !16884, metadata !DIExpression()), !dbg !16885
  %0 = load i8*, i8** %x.addr, align 8, !dbg !16886, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !16886
  store %struct.fs_res* %1, %struct.fs_res** %a, align 8, !dbg !16885, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.fs_res** %b, metadata !16887, metadata !DIExpression()), !dbg !16888
  %2 = load i8*, i8** %y.addr, align 8, !dbg !16889, !tbaa !2995
  %3 = bitcast i8* %2 to %struct.fs_res*, !dbg !16889
  store %struct.fs_res* %3, %struct.fs_res** %b, align 8, !dbg !16888, !tbaa !2995
  %4 = load %struct.fs_res*, %struct.fs_res** %a, align 8, !dbg !16890, !tbaa !2995
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %4, i32 0, i32 0, !dbg !16891, !ctir !1174
  %5 = load i64, i64* %dev, align 8, !dbg !16891, !tbaa !16505, !ctir !230
  %6 = load %struct.fs_res*, %struct.fs_res** %b, align 8, !dbg !16892, !tbaa !2995
  %dev1 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %6, i32 0, i32 0, !dbg !16893, !ctir !1174
  %7 = load i64, i64* %dev1, align 8, !dbg !16893, !tbaa !16505, !ctir !230
  %cmp = icmp eq i64 %5, %7, !dbg !16894
  ret i1 %cmp, !dbg !16895
}

; Function Attrs: nounwind
declare dso_local i32 @utimensat(i32, i8*, %struct.timespec*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimensat(i32 %dir, i8* %file, %struct.timespec* %times) #4 !dbg !16896 !ctir !1183 {
entry:
  %dir.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %times.addr = alloca %struct.timespec*, align 8
  store i32 %dir, i32* %dir.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !16898, metadata !DIExpression()), !dbg !16899
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16900, metadata !DIExpression()), !dbg !16901
  store %struct.timespec* %times, %struct.timespec** %times.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.timespec** %times.addr, metadata !16902, metadata !DIExpression()), !dbg !16903
  %0 = load i32, i32* %dir.addr, align 4, !dbg !16904, !tbaa !2982
  %1 = load i8*, i8** %file.addr, align 8, !dbg !16905, !tbaa !2995
  %2 = load %struct.timespec*, %struct.timespec** %times.addr, align 8, !dbg !16906, !tbaa !2995
  %call = call i32 @utimensat(i32 %0, i8* %1, %struct.timespec* %2, i32 256) #10, !dbg !16907
  ret i32 %call, !dbg !16908
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fdutimens(i32 %fd, i8* %file, %struct.timespec* %timespec) #4 !dbg !16909 !ctir !1183 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1191
  %ts = alloca %struct.timespec*, align 8, !ctir !1192
  %adjustment_needed = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !1209
  %result = alloca i32, align 4, !ctir !7
  %tmp = alloca %struct.timespec, align 8
  %tmp35 = alloca %struct.timespec, align 8
  %timeval = alloca [2 x %struct.timespec], align 16, !ctir !1193
  %t = alloca %struct.timespec*, align 8, !ctir !1200
  %abig = alloca i8, align 1, !ctir !120
  %mbig = alloca i8, align 1, !ctir !120
  %adiff = alloca i64, align 8, !ctir !1164
  %mdiff = alloca i64, align 8, !ctir !1164
  %tt = alloca %struct.timespec*, align 8, !ctir !1200
  %truncated_timeval = alloca [2 x %struct.timespec], align 16, !ctir !1193
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16910, metadata !DIExpression()), !dbg !16911
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16912, metadata !DIExpression()), !dbg !16913
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !16914, metadata !DIExpression()), !dbg !16915
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !16916, metadata !DIExpression()), !dbg !16917
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !16918, metadata !DIExpression()), !dbg !16919
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16920, !tbaa !2995
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !16920
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16920

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !16921
  br label %cond.end, !dbg !16920

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16920

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !16920
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !16919, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !16922, metadata !DIExpression()), !dbg !16923
  store i32 0, i32* %adjustment_needed, align 4, !dbg !16923, !tbaa !2982
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !16924, metadata !DIExpression()), !dbg !16925
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16926, !tbaa !2995
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !16926
  br i1 %tobool1, label %if.then, label %if.end, !dbg !16928

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !16929, !ctir !1191
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16931, !tbaa !2995
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !16931, !ctir !1185
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !16931
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !16931
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !16931, !tbaa.struct !6321
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !16932, !ctir !1191
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16933, !tbaa !2995
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !16933, !ctir !1185
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !16933
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !16933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !16933, !tbaa.struct !6321
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16934, !tbaa !2995
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !16935
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !16936, !tbaa !2982
  br label %if.end, !dbg !16937

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !16938, !tbaa !2982
  %cmp = icmp slt i32 %9, 0, !dbg !16940
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !16941

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16942
  br label %return, !dbg !16942

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* %fd.addr, align 4, !dbg !16943, !tbaa !2982
  %cmp7 = icmp slt i32 %10, 0, !dbg !16945
  br i1 %cmp7, label %land.lhs.true, label %if.end11, !dbg !16946

land.lhs.true:                                    ; preds = %if.end6
  %11 = load i8*, i8** %file.addr, align 8, !dbg !16947, !tbaa !2995
  %tobool8 = icmp ne i8* %11, null, !dbg !16947
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !16948

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #15, !dbg !16949
  store i32 9, i32* %call10, align 4, !dbg !16951, !tbaa !2982, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !16952
  br label %return, !dbg !16952

if.end11:                                         ; preds = %land.lhs.true, %if.end6
  %12 = load i32, i32* @utimensat_works_really, align 4, !dbg !16953, !tbaa !2982
  %cmp12 = icmp sle i32 0, %12, !dbg !16955
  br i1 %cmp12, label %if.then13, label %if.end67, !dbg !16956

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %result, metadata !16957, metadata !DIExpression()), !dbg !16959
  %13 = load i32, i32* %adjustment_needed, align 4, !dbg !16960, !tbaa !2982
  %cmp14 = icmp eq i32 %13, 2, !dbg !16962
  br i1 %cmp14, label %if.then15, label %if.end39, !dbg !16963

if.then15:                                        ; preds = %if.then13
  %14 = load i32, i32* %fd.addr, align 4, !dbg !16964, !tbaa !2982
  %cmp16 = icmp slt i32 %14, 0, !dbg !16967
  br i1 %cmp16, label %cond.true17, label %cond.false20, !dbg !16968

cond.true17:                                      ; preds = %if.then15
  %15 = load i8*, i8** %file.addr, align 8, !dbg !16969, !tbaa !2995
  %call18 = call i32 @stat(i8* %15, %struct.stat* %st) #10, !dbg !16970
  %tobool19 = icmp ne i32 %call18, 0, !dbg !16970
  br i1 %tobool19, label %if.then23, label %if.end24, !dbg !16964

cond.false20:                                     ; preds = %if.then15
  %16 = load i32, i32* %fd.addr, align 4, !dbg !16971, !tbaa !2982
  %call21 = call i32 @fstat(i32 %16, %struct.stat* %st) #10, !dbg !16972
  %tobool22 = icmp ne i32 %call21, 0, !dbg !16972
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !16968

if.then23:                                        ; preds = %cond.false20, %cond.true17
  store i32 -1, i32* %retval, align 4, !dbg !16973
  br label %return, !dbg !16973

if.end24:                                         ; preds = %cond.false20, %cond.true17
  %17 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16974, !tbaa !2995
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i64 0, !dbg !16974, !ctir !1192
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !16976, !ctir !1187
  %18 = load i64, i64* %tv_nsec, align 8, !dbg !16976, !tbaa !16064, !ctir !343
  %cmp26 = icmp eq i64 %18, 1073741822, !dbg !16977
  br i1 %cmp26, label %if.then27, label %if.else, !dbg !16978

if.then27:                                        ; preds = %if.end24
  %19 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16979, !tbaa !2995
  %arrayidx28 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i64 0, !dbg !16979, !ctir !1192
  %call29 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !16980
  %20 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !16980
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !16980
  %22 = extractvalue { i64, i64 } %call29, 0, !dbg !16980
  store i64 %22, i64* %21, align 8, !dbg !16980
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !16980
  %24 = extractvalue { i64, i64 } %call29, 1, !dbg !16980
  store i64 %24, i64* %23, align 8, !dbg !16980
  %25 = bitcast %struct.timespec* %arrayidx28 to i8*, !dbg !16980
  %26 = bitcast %struct.timespec* %tmp to i8*, !dbg !16980
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false), !dbg !16980, !tbaa.struct !6321
  br label %if.end38, !dbg !16979

if.else:                                          ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16981, !tbaa !2995
  %arrayidx30 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !16981, !ctir !1192
  %tv_nsec31 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx30, i32 0, i32 1, !dbg !16983, !ctir !1187
  %28 = load i64, i64* %tv_nsec31, align 8, !dbg !16983, !tbaa !16064, !ctir !343
  %cmp32 = icmp eq i64 %28, 1073741822, !dbg !16984
  br i1 %cmp32, label %if.then33, label %if.end37, !dbg !16985

if.then33:                                        ; preds = %if.else
  %29 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16986, !tbaa !2995
  %arrayidx34 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !16986, !ctir !1192
  %call36 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !16987
  %30 = bitcast %struct.timespec* %tmp35 to { i64, i64 }*, !dbg !16987
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0, !dbg !16987
  %32 = extractvalue { i64, i64 } %call36, 0, !dbg !16987
  store i64 %32, i64* %31, align 8, !dbg !16987
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1, !dbg !16987
  %34 = extractvalue { i64, i64 } %call36, 1, !dbg !16987
  store i64 %34, i64* %33, align 8, !dbg !16987
  %35 = bitcast %struct.timespec* %arrayidx34 to i8*, !dbg !16987
  %36 = bitcast %struct.timespec* %tmp35 to i8*, !dbg !16987
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false), !dbg !16987, !tbaa.struct !6321
  br label %if.end37, !dbg !16986

if.end37:                                         ; preds = %if.then33, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then27
  %37 = load i32, i32* %adjustment_needed, align 4, !dbg !16988, !tbaa !2982
  %inc = add nsw i32 %37, 1, !dbg !16988
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !16988, !tbaa !2982
  br label %if.end39, !dbg !16989

if.end39:                                         ; preds = %if.end38, %if.then13
  %38 = load i32, i32* %fd.addr, align 4, !dbg !16990, !tbaa !2982
  %cmp40 = icmp slt i32 %38, 0, !dbg !16992
  br i1 %cmp40, label %if.then41, label %if.end52, !dbg !16993

if.then41:                                        ; preds = %if.end39
  %39 = load i8*, i8** %file.addr, align 8, !dbg !16994, !tbaa !2995
  %40 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16996, !tbaa !2995
  %call42 = call i32 @utimensat(i32 -100, i8* %39, %struct.timespec* %40, i32 0) #10, !dbg !16997
  store i32 %call42, i32* %result, align 4, !dbg !16998, !tbaa !2982
  %41 = load i32, i32* %result, align 4, !dbg !16999, !tbaa !2982
  %cmp43 = icmp slt i32 0, %41, !dbg !17001
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !17002

if.then44:                                        ; preds = %if.then41
  %call45 = call i32* @__errno_location() #15, !dbg !17003
  store i32 38, i32* %call45, align 4, !dbg !17004, !tbaa !2982, !ctir !7
  br label %if.end46, !dbg !17003

if.end46:                                         ; preds = %if.then44, %if.then41
  %42 = load i32, i32* %result, align 4, !dbg !17005, !tbaa !2982
  %cmp47 = icmp eq i32 %42, 0, !dbg !17007
  br i1 %cmp47, label %if.then50, label %lor.lhs.false, !dbg !17008

lor.lhs.false:                                    ; preds = %if.end46
  %call48 = call i32* @__errno_location() #15, !dbg !17009
  %43 = load i32, i32* %call48, align 4, !dbg !17009, !tbaa !2982, !ctir !7
  %cmp49 = icmp ne i32 %43, 38, !dbg !17010
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !17011

if.then50:                                        ; preds = %lor.lhs.false, %if.end46
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17012, !tbaa !2982
  %44 = load i32, i32* %result, align 4, !dbg !17014, !tbaa !2982
  store i32 %44, i32* %retval, align 4, !dbg !17015
  br label %return, !dbg !17015

if.end51:                                         ; preds = %lor.lhs.false
  br label %if.end52, !dbg !17016

if.end52:                                         ; preds = %if.end51, %if.end39
  %45 = load i32, i32* %fd.addr, align 4, !dbg !17017, !tbaa !2982
  %cmp53 = icmp sle i32 0, %45, !dbg !17019
  br i1 %cmp53, label %if.then54, label %if.end66, !dbg !17020

if.then54:                                        ; preds = %if.end52
  %46 = load i32, i32* %fd.addr, align 4, !dbg !17021, !tbaa !2982
  %47 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17023, !tbaa !2995
  %call55 = call i32 @futimens(i32 %46, %struct.timespec* %47) #10, !dbg !17024
  store i32 %call55, i32* %result, align 4, !dbg !17025, !tbaa !2982
  %48 = load i32, i32* %result, align 4, !dbg !17026, !tbaa !2982
  %cmp56 = icmp slt i32 0, %48, !dbg !17028
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !17029

if.then57:                                        ; preds = %if.then54
  %call58 = call i32* @__errno_location() #15, !dbg !17030
  store i32 38, i32* %call58, align 4, !dbg !17031, !tbaa !2982, !ctir !7
  br label %if.end59, !dbg !17030

if.end59:                                         ; preds = %if.then57, %if.then54
  %49 = load i32, i32* %result, align 4, !dbg !17032, !tbaa !2982
  %cmp60 = icmp eq i32 %49, 0, !dbg !17034
  br i1 %cmp60, label %if.then64, label %lor.lhs.false61, !dbg !17035

lor.lhs.false61:                                  ; preds = %if.end59
  %call62 = call i32* @__errno_location() #15, !dbg !17036
  %50 = load i32, i32* %call62, align 4, !dbg !17036, !tbaa !2982, !ctir !7
  %cmp63 = icmp ne i32 %50, 38, !dbg !17037
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !17038

if.then64:                                        ; preds = %lor.lhs.false61, %if.end59
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17039, !tbaa !2982
  %51 = load i32, i32* %result, align 4, !dbg !17041, !tbaa !2982
  store i32 %51, i32* %retval, align 4, !dbg !17042
  br label %return, !dbg !17042

if.end65:                                         ; preds = %lor.lhs.false61
  br label %if.end66, !dbg !17043

if.end66:                                         ; preds = %if.end65, %if.end52
  br label %if.end67, !dbg !17044

if.end67:                                         ; preds = %if.end66, %if.end11
  store i32 -1, i32* @utimensat_works_really, align 4, !dbg !17045, !tbaa !2982
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !17046, !tbaa !2982
  %52 = load i32, i32* %adjustment_needed, align 4, !dbg !17047, !tbaa !2982
  %tobool68 = icmp ne i32 %52, 0, !dbg !17047
  br i1 %tobool68, label %if.then69, label %if.end86, !dbg !17049

if.then69:                                        ; preds = %if.end67
  %53 = load i32, i32* %adjustment_needed, align 4, !dbg !17050, !tbaa !2982
  %cmp70 = icmp ne i32 %53, 3, !dbg !17053
  br i1 %cmp70, label %land.lhs.true71, label %if.end80, !dbg !17054

land.lhs.true71:                                  ; preds = %if.then69
  %54 = load i32, i32* %fd.addr, align 4, !dbg !17055, !tbaa !2982
  %cmp72 = icmp slt i32 %54, 0, !dbg !17056
  br i1 %cmp72, label %cond.true73, label %cond.false76, !dbg !17057

cond.true73:                                      ; preds = %land.lhs.true71
  %55 = load i8*, i8** %file.addr, align 8, !dbg !17058, !tbaa !2995
  %call74 = call i32 @stat(i8* %55, %struct.stat* %st) #10, !dbg !17059
  %tobool75 = icmp ne i32 %call74, 0, !dbg !17059
  br i1 %tobool75, label %if.then79, label %if.end80, !dbg !17055

cond.false76:                                     ; preds = %land.lhs.true71
  %56 = load i32, i32* %fd.addr, align 4, !dbg !17060, !tbaa !2982
  %call77 = call i32 @fstat(i32 %56, %struct.stat* %st) #10, !dbg !17061
  %tobool78 = icmp ne i32 %call77, 0, !dbg !17061
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !17057

if.then79:                                        ; preds = %cond.false76, %cond.true73
  store i32 -1, i32* %retval, align 4, !dbg !17062
  br label %return, !dbg !17062

if.end80:                                         ; preds = %cond.false76, %cond.true73, %if.then69
  %57 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17063, !tbaa !2995
  %tobool81 = icmp ne %struct.timespec* %57, null, !dbg !17063
  br i1 %tobool81, label %land.lhs.true82, label %if.end85, !dbg !17065

land.lhs.true82:                                  ; preds = %if.end80
  %call83 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !17066
  br i1 %call83, label %if.then84, label %if.end85, !dbg !17067

if.then84:                                        ; preds = %land.lhs.true82
  store i32 0, i32* %retval, align 4, !dbg !17068
  br label %return, !dbg !17068

if.end85:                                         ; preds = %land.lhs.true82, %if.end80
  br label %if.end86, !dbg !17069

if.end86:                                         ; preds = %if.end85, %if.end67
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timeval, metadata !17070, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.declare(metadata %struct.timespec** %t, metadata !17073, metadata !DIExpression()), !dbg !17074
  %58 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17075, !tbaa !2995
  %tobool87 = icmp ne %struct.timespec* %58, null, !dbg !17075
  br i1 %tobool87, label %if.then88, label %if.else105, !dbg !17077

if.then88:                                        ; preds = %if.end86
  %59 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17078, !tbaa !2995
  %arrayidx89 = getelementptr inbounds %struct.timespec, %struct.timespec* %59, i64 0, !dbg !17078, !ctir !1192
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx89, i32 0, i32 0, !dbg !17080, !ctir !1187
  %60 = load i64, i64* %tv_sec, align 8, !dbg !17080, !tbaa !16061, !ctir !341
  %arrayidx90 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17081, !ctir !1193
  %tv_sec91 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx90, i32 0, i32 0, !dbg !17082, !ctir !1194
  store i64 %60, i64* %tv_sec91, align 16, !dbg !17083, !tbaa !17084, !ctir !341
  %61 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17086, !tbaa !2995
  %arrayidx92 = getelementptr inbounds %struct.timespec, %struct.timespec* %61, i64 0, !dbg !17086, !ctir !1192
  %tv_nsec93 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx92, i32 0, i32 1, !dbg !17087, !ctir !1187
  %62 = load i64, i64* %tv_nsec93, align 8, !dbg !17087, !tbaa !16064, !ctir !343
  %div = sdiv i64 %62, 1000, !dbg !17088
  %arrayidx94 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17089, !ctir !1193
  %tv_usec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx94, i32 0, i32 1, !dbg !17090, !ctir !1194
  store i64 %div, i64* %tv_usec, align 8, !dbg !17091, !tbaa !17092, !ctir !1199
  %63 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17093, !tbaa !2995
  %arrayidx95 = getelementptr inbounds %struct.timespec, %struct.timespec* %63, i64 1, !dbg !17093, !ctir !1192
  %tv_sec96 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx95, i32 0, i32 0, !dbg !17094, !ctir !1187
  %64 = load i64, i64* %tv_sec96, align 8, !dbg !17094, !tbaa !16061, !ctir !341
  %arrayidx97 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !17095, !ctir !1193
  %tv_sec98 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx97, i32 0, i32 0, !dbg !17096, !ctir !1194
  store i64 %64, i64* %tv_sec98, align 16, !dbg !17097, !tbaa !17084, !ctir !341
  %65 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17098, !tbaa !2995
  %arrayidx99 = getelementptr inbounds %struct.timespec, %struct.timespec* %65, i64 1, !dbg !17098, !ctir !1192
  %tv_nsec100 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx99, i32 0, i32 1, !dbg !17099, !ctir !1187
  %66 = load i64, i64* %tv_nsec100, align 8, !dbg !17099, !tbaa !16064, !ctir !343
  %div101 = sdiv i64 %66, 1000, !dbg !17100
  %arrayidx102 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !17101, !ctir !1193
  %tv_usec103 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx102, i32 0, i32 1, !dbg !17102, !ctir !1194
  store i64 %div101, i64* %tv_usec103, align 8, !dbg !17103, !tbaa !17092, !ctir !1199
  %arraydecay104 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17104
  store %struct.timespec* %arraydecay104, %struct.timespec** %t, align 8, !dbg !17105, !tbaa !2995
  br label %if.end106, !dbg !17106

if.else105:                                       ; preds = %if.end86
  store %struct.timespec* null, %struct.timespec** %t, align 8, !dbg !17107, !tbaa !2995
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then88
  %67 = load i32, i32* %fd.addr, align 4, !dbg !17108, !tbaa !2982
  %cmp107 = icmp slt i32 %67, 0, !dbg !17110
  br i1 %cmp107, label %if.then108, label %if.else110, !dbg !17111

if.then108:                                       ; preds = %if.end106
  %68 = load i8*, i8** %file.addr, align 8, !dbg !17112, !tbaa !2995
  %69 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17114, !tbaa !2995
  %call109 = call i32 @futimesat(i32 -100, i8* %68, %struct.timespec* %69) #10, !dbg !17115
  store i32 %call109, i32* %retval, align 4, !dbg !17116
  br label %return, !dbg !17116

if.else110:                                       ; preds = %if.end106
  %70 = load i32, i32* %fd.addr, align 4, !dbg !17117, !tbaa !2982
  %71 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17117, !tbaa !2995
  %call111 = call i32 @futimesat(i32 %70, i8* null, %struct.timespec* %71) #10, !dbg !17117
  %cmp112 = icmp eq i32 %call111, 0, !dbg !17120
  br i1 %cmp112, label %if.then113, label %if.end177, !dbg !17121

if.then113:                                       ; preds = %if.else110
  %72 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17122, !tbaa !2995
  %tobool114 = icmp ne %struct.timespec* %72, null, !dbg !17122
  br i1 %tobool114, label %if.then115, label %if.end176, !dbg !17125

if.then115:                                       ; preds = %if.then113
  call void @llvm.dbg.declare(metadata i8* %abig, metadata !17126, metadata !DIExpression()), !dbg !17128
  %73 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17129, !tbaa !2995
  %arrayidx116 = getelementptr inbounds %struct.timespec, %struct.timespec* %73, i64 0, !dbg !17129, !ctir !1200
  %tv_usec117 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx116, i32 0, i32 1, !dbg !17130, !ctir !1194
  %74 = load i64, i64* %tv_usec117, align 8, !dbg !17130, !tbaa !17092, !ctir !1199
  %cmp118 = icmp sle i64 500000, %74, !dbg !17131
  %frombool = zext i1 %cmp118 to i8, !dbg !17128
  store i8 %frombool, i8* %abig, align 1, !dbg !17128, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %mbig, metadata !17132, metadata !DIExpression()), !dbg !17133
  %75 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17134, !tbaa !2995
  %arrayidx119 = getelementptr inbounds %struct.timespec, %struct.timespec* %75, i64 1, !dbg !17134, !ctir !1200
  %tv_usec120 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx119, i32 0, i32 1, !dbg !17135, !ctir !1194
  %76 = load i64, i64* %tv_usec120, align 8, !dbg !17135, !tbaa !17092, !ctir !1199
  %cmp121 = icmp sle i64 500000, %76, !dbg !17136
  %frombool122 = zext i1 %cmp121 to i8, !dbg !17133
  store i8 %frombool122, i8* %mbig, align 1, !dbg !17133, !tbaa !3106
  %77 = load i8, i8* %abig, align 1, !dbg !17137, !tbaa !3106
  %tobool123 = trunc i8 %77 to i1, !dbg !17137
  %conv = zext i1 %tobool123 to i32, !dbg !17137
  %78 = load i8, i8* %mbig, align 1, !dbg !17139, !tbaa !3106
  %tobool124 = trunc i8 %78 to i1, !dbg !17139
  %conv125 = zext i1 %tobool124 to i32, !dbg !17139
  %or = or i32 %conv, %conv125, !dbg !17140
  %tobool126 = icmp ne i32 %or, 0, !dbg !17140
  br i1 %tobool126, label %land.lhs.true127, label %if.end175, !dbg !17141

land.lhs.true127:                                 ; preds = %if.then115
  %79 = load i32, i32* %fd.addr, align 4, !dbg !17142, !tbaa !2982
  %call128 = call i32 @fstat(i32 %79, %struct.stat* %st) #10, !dbg !17143
  %cmp129 = icmp eq i32 %call128, 0, !dbg !17144
  br i1 %cmp129, label %if.then131, label %if.end175, !dbg !17145

if.then131:                                       ; preds = %land.lhs.true127
  call void @llvm.dbg.declare(metadata i64* %adiff, metadata !17146, metadata !DIExpression()), !dbg !17148
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 11, !dbg !17149, !ctir !1209
  %tv_sec132 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !17149, !ctir !1187
  %80 = load i64, i64* %tv_sec132, align 8, !dbg !17149, !tbaa !16564, !ctir !341
  %81 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17150, !tbaa !2995
  %arrayidx133 = getelementptr inbounds %struct.timespec, %struct.timespec* %81, i64 0, !dbg !17150, !ctir !1200
  %tv_sec134 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx133, i32 0, i32 0, !dbg !17151, !ctir !1194
  %82 = load i64, i64* %tv_sec134, align 8, !dbg !17151, !tbaa !17084, !ctir !341
  %sub = sub nsw i64 %80, %82, !dbg !17152
  store i64 %sub, i64* %adiff, align 8, !dbg !17148, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %mdiff, metadata !17153, metadata !DIExpression()), !dbg !17154
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !17155, !ctir !1209
  %tv_sec135 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !17155, !ctir !1187
  %83 = load i64, i64* %tv_sec135, align 8, !dbg !17155, !tbaa !16422, !ctir !341
  %84 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17156, !tbaa !2995
  %arrayidx136 = getelementptr inbounds %struct.timespec, %struct.timespec* %84, i64 1, !dbg !17156, !ctir !1200
  %tv_sec137 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx136, i32 0, i32 0, !dbg !17157, !ctir !1194
  %85 = load i64, i64* %tv_sec137, align 8, !dbg !17157, !tbaa !17084, !ctir !341
  %sub138 = sub nsw i64 %83, %85, !dbg !17158
  store i64 %sub138, i64* %mdiff, align 8, !dbg !17154, !tbaa !3848
  call void @llvm.dbg.declare(metadata %struct.timespec** %tt, metadata !17159, metadata !DIExpression()), !dbg !17160
  store %struct.timespec* null, %struct.timespec** %tt, align 8, !dbg !17160, !tbaa !2995
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %truncated_timeval, metadata !17161, metadata !DIExpression()), !dbg !17162
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17163, !ctir !1193
  %86 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17164, !tbaa !2995
  %arrayidx140 = getelementptr inbounds %struct.timespec, %struct.timespec* %86, i64 0, !dbg !17164, !ctir !1200
  %87 = bitcast %struct.timespec* %arrayidx139 to i8*, !dbg !17164
  %88 = bitcast %struct.timespec* %arrayidx140 to i8*, !dbg !17164
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %87, i8* align 8 %88, i64 16, i1 false), !dbg !17164, !tbaa.struct !6321
  %arrayidx141 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 1, !dbg !17165, !ctir !1193
  %89 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17166, !tbaa !2995
  %arrayidx142 = getelementptr inbounds %struct.timespec, %struct.timespec* %89, i64 1, !dbg !17166, !ctir !1200
  %90 = bitcast %struct.timespec* %arrayidx141 to i8*, !dbg !17166
  %91 = bitcast %struct.timespec* %arrayidx142 to i8*, !dbg !17166
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %90, i8* align 8 %91, i64 16, i1 false), !dbg !17166, !tbaa.struct !6321
  %92 = load i8, i8* %abig, align 1, !dbg !17167, !tbaa !3106
  %tobool143 = trunc i8 %92 to i1, !dbg !17167
  br i1 %tobool143, label %land.lhs.true145, label %if.end156, !dbg !17169

land.lhs.true145:                                 ; preds = %if.then131
  %93 = load i64, i64* %adiff, align 8, !dbg !17170, !tbaa !3848
  %cmp146 = icmp eq i64 %93, 1, !dbg !17171
  br i1 %cmp146, label %land.lhs.true148, label %if.end156, !dbg !17172

land.lhs.true148:                                 ; preds = %land.lhs.true145
  %call149 = call i64 @get_stat_atime_ns(%struct.stat* %st) #14, !dbg !17173
  %cmp150 = icmp eq i64 %call149, 0, !dbg !17174
  br i1 %cmp150, label %if.then152, label %if.end156, !dbg !17175

if.then152:                                       ; preds = %land.lhs.true148
  %arraydecay153 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17176
  store %struct.timespec* %arraydecay153, %struct.timespec** %tt, align 8, !dbg !17178, !tbaa !2995
  %94 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17179, !tbaa !2995
  %arrayidx154 = getelementptr inbounds %struct.timespec, %struct.timespec* %94, i64 0, !dbg !17179, !ctir !1200
  %tv_usec155 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx154, i32 0, i32 1, !dbg !17180, !ctir !1194
  store i64 0, i64* %tv_usec155, align 8, !dbg !17181, !tbaa !17092, !ctir !1199
  br label %if.end156, !dbg !17182

if.end156:                                        ; preds = %if.then152, %land.lhs.true148, %land.lhs.true145, %if.then131
  %95 = load i8, i8* %mbig, align 1, !dbg !17183, !tbaa !3106
  %tobool157 = trunc i8 %95 to i1, !dbg !17183
  br i1 %tobool157, label %land.lhs.true159, label %if.end170, !dbg !17185

land.lhs.true159:                                 ; preds = %if.end156
  %96 = load i64, i64* %mdiff, align 8, !dbg !17186, !tbaa !3848
  %cmp160 = icmp eq i64 %96, 1, !dbg !17187
  br i1 %cmp160, label %land.lhs.true162, label %if.end170, !dbg !17188

land.lhs.true162:                                 ; preds = %land.lhs.true159
  %call163 = call i64 @get_stat_mtime_ns(%struct.stat* %st) #14, !dbg !17189
  %cmp164 = icmp eq i64 %call163, 0, !dbg !17190
  br i1 %cmp164, label %if.then166, label %if.end170, !dbg !17191

if.then166:                                       ; preds = %land.lhs.true162
  %arraydecay167 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17192
  store %struct.timespec* %arraydecay167, %struct.timespec** %tt, align 8, !dbg !17194, !tbaa !2995
  %97 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17195, !tbaa !2995
  %arrayidx168 = getelementptr inbounds %struct.timespec, %struct.timespec* %97, i64 1, !dbg !17195, !ctir !1200
  %tv_usec169 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx168, i32 0, i32 1, !dbg !17196, !ctir !1194
  store i64 0, i64* %tv_usec169, align 8, !dbg !17197, !tbaa !17092, !ctir !1199
  br label %if.end170, !dbg !17198

if.end170:                                        ; preds = %if.then166, %land.lhs.true162, %land.lhs.true159, %if.end156
  %98 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17199, !tbaa !2995
  %tobool171 = icmp ne %struct.timespec* %98, null, !dbg !17199
  br i1 %tobool171, label %if.then172, label %if.end174, !dbg !17201

if.then172:                                       ; preds = %if.end170
  %99 = load i32, i32* %fd.addr, align 4, !dbg !17202, !tbaa !2982
  %100 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17202, !tbaa !2995
  %call173 = call i32 @futimesat(i32 %99, i8* null, %struct.timespec* %100) #10, !dbg !17202
  br label %if.end174, !dbg !17202

if.end174:                                        ; preds = %if.then172, %if.end170
  br label %if.end175, !dbg !17203

if.end175:                                        ; preds = %if.end174, %land.lhs.true127, %if.then115
  br label %if.end176, !dbg !17204

if.end176:                                        ; preds = %if.end175, %if.then113
  store i32 0, i32* %retval, align 4, !dbg !17205
  br label %return, !dbg !17205

if.end177:                                        ; preds = %if.else110
  br label %if.end178

if.end178:                                        ; preds = %if.end177
  %101 = load i8*, i8** %file.addr, align 8, !dbg !17206, !tbaa !2995
  %tobool179 = icmp ne i8* %101, null, !dbg !17206
  br i1 %tobool179, label %if.end181, label %if.then180, !dbg !17208

if.then180:                                       ; preds = %if.end178
  store i32 -1, i32* %retval, align 4, !dbg !17209
  br label %return, !dbg !17209

if.end181:                                        ; preds = %if.end178
  %102 = load i8*, i8** %file.addr, align 8, !dbg !17211, !tbaa !2995
  %103 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17212, !tbaa !2995
  %call182 = call i32 @utimes(i8* %102, %struct.timespec* %103) #10, !dbg !17213
  store i32 %call182, i32* %retval, align 4, !dbg !17214
  br label %return, !dbg !17214

return:                                           ; preds = %if.end181, %if.then180, %if.end176, %if.then108, %if.then84, %if.then79, %if.then64, %if.then50, %if.then23, %if.then9, %if.then5
  %104 = load i32, i32* %retval, align 4, !dbg !17215
  ret i32 %104, !dbg !17215
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @validate_timespec(%struct.timespec* %timespec) #4 !dbg !17216 !ctir !1203 {
entry:
  %retval = alloca i32, align 4
  %timespec.addr = alloca %struct.timespec*, align 8
  %result = alloca i32, align 4, !ctir !7
  %utime_omit_count = alloca i32, align 4, !ctir !7
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17217, metadata !DIExpression()), !dbg !17218
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17219, metadata !DIExpression()), !dbg !17220
  store i32 0, i32* %result, align 4, !dbg !17220, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %utime_omit_count, metadata !17221, metadata !DIExpression()), !dbg !17222
  store i32 0, i32* %utime_omit_count, align 4, !dbg !17222, !tbaa !2982
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17223, !tbaa !2995
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %0, i64 0, !dbg !17223, !ctir !1192
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !17225, !ctir !1187
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !17225, !tbaa !16064, !ctir !343
  %cmp = icmp ne i64 %1, 1073741823, !dbg !17226
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !17227

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17228, !tbaa !2995
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17228, !ctir !1192
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !17229, !ctir !1187
  %3 = load i64, i64* %tv_nsec2, align 8, !dbg !17229, !tbaa !16064, !ctir !343
  %cmp3 = icmp ne i64 %3, 1073741822, !dbg !17230
  br i1 %cmp3, label %land.lhs.true4, label %lor.lhs.false, !dbg !17231

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17232, !tbaa !2995
  %arrayidx5 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, !dbg !17232, !ctir !1192
  %tv_nsec6 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx5, i32 0, i32 1, !dbg !17233, !ctir !1187
  %5 = load i64, i64* %tv_nsec6, align 8, !dbg !17233, !tbaa !16064, !ctir !343
  %cmp7 = icmp sle i64 0, %5, !dbg !17234
  br i1 %cmp7, label %land.lhs.true8, label %if.then, !dbg !17235

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %6 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17236, !tbaa !2995
  %arrayidx9 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !17236, !ctir !1192
  %tv_nsec10 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx9, i32 0, i32 1, !dbg !17237, !ctir !1187
  %7 = load i64, i64* %tv_nsec10, align 8, !dbg !17237, !tbaa !16064, !ctir !343
  %cmp11 = icmp slt i64 %7, 1000000000, !dbg !17238
  br i1 %cmp11, label %lor.lhs.false, label %if.then, !dbg !17239

lor.lhs.false:                                    ; preds = %land.lhs.true8, %land.lhs.true, %entry
  %8 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17240, !tbaa !2995
  %arrayidx12 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !17240, !ctir !1192
  %tv_nsec13 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx12, i32 0, i32 1, !dbg !17241, !ctir !1187
  %9 = load i64, i64* %tv_nsec13, align 8, !dbg !17241, !tbaa !16064, !ctir !343
  %cmp14 = icmp ne i64 %9, 1073741823, !dbg !17242
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !17243

land.lhs.true15:                                  ; preds = %lor.lhs.false
  %10 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17244, !tbaa !2995
  %arrayidx16 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i64 1, !dbg !17244, !ctir !1192
  %tv_nsec17 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx16, i32 0, i32 1, !dbg !17245, !ctir !1187
  %11 = load i64, i64* %tv_nsec17, align 8, !dbg !17245, !tbaa !16064, !ctir !343
  %cmp18 = icmp ne i64 %11, 1073741822, !dbg !17246
  br i1 %cmp18, label %land.lhs.true19, label %if.end, !dbg !17247

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %12 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17248, !tbaa !2995
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i64 1, !dbg !17248, !ctir !1192
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !17249, !ctir !1187
  %13 = load i64, i64* %tv_nsec21, align 8, !dbg !17249, !tbaa !16064, !ctir !343
  %cmp22 = icmp sle i64 0, %13, !dbg !17250
  br i1 %cmp22, label %land.lhs.true23, label %if.then, !dbg !17251

land.lhs.true23:                                  ; preds = %land.lhs.true19
  %14 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17252, !tbaa !2995
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i64 1, !dbg !17252, !ctir !1192
  %tv_nsec25 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx24, i32 0, i32 1, !dbg !17253, !ctir !1187
  %15 = load i64, i64* %tv_nsec25, align 8, !dbg !17253, !tbaa !16064, !ctir !343
  %cmp26 = icmp slt i64 %15, 1000000000, !dbg !17254
  br i1 %cmp26, label %if.end, label %if.then, !dbg !17255

if.then:                                          ; preds = %land.lhs.true23, %land.lhs.true19, %land.lhs.true8, %land.lhs.true4
  %call = call i32* @__errno_location() #15, !dbg !17256
  store i32 22, i32* %call, align 4, !dbg !17258, !tbaa !2982, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !17259
  br label %return, !dbg !17259

if.end:                                           ; preds = %land.lhs.true23, %land.lhs.true15, %lor.lhs.false
  %16 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17260, !tbaa !2995
  %arrayidx27 = getelementptr inbounds %struct.timespec, %struct.timespec* %16, i64 0, !dbg !17260, !ctir !1192
  %tv_nsec28 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx27, i32 0, i32 1, !dbg !17262, !ctir !1187
  %17 = load i64, i64* %tv_nsec28, align 8, !dbg !17262, !tbaa !16064, !ctir !343
  %cmp29 = icmp eq i64 %17, 1073741823, !dbg !17263
  br i1 %cmp29, label %if.then34, label %lor.lhs.false30, !dbg !17264

lor.lhs.false30:                                  ; preds = %if.end
  %18 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17265, !tbaa !2995
  %arrayidx31 = getelementptr inbounds %struct.timespec, %struct.timespec* %18, i64 0, !dbg !17265, !ctir !1192
  %tv_nsec32 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx31, i32 0, i32 1, !dbg !17266, !ctir !1187
  %19 = load i64, i64* %tv_nsec32, align 8, !dbg !17266, !tbaa !16064, !ctir !343
  %cmp33 = icmp eq i64 %19, 1073741822, !dbg !17267
  br i1 %cmp33, label %if.then34, label %if.end41, !dbg !17268

if.then34:                                        ; preds = %lor.lhs.false30, %if.end
  %20 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17269, !tbaa !2995
  %arrayidx35 = getelementptr inbounds %struct.timespec, %struct.timespec* %20, i64 0, !dbg !17269, !ctir !1192
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx35, i32 0, i32 0, !dbg !17271, !ctir !1187
  store i64 0, i64* %tv_sec, align 8, !dbg !17272, !tbaa !16061, !ctir !341
  store i32 1, i32* %result, align 4, !dbg !17273, !tbaa !2982
  %21 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17274, !tbaa !2995
  %arrayidx36 = getelementptr inbounds %struct.timespec, %struct.timespec* %21, i64 0, !dbg !17274, !ctir !1192
  %tv_nsec37 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx36, i32 0, i32 1, !dbg !17276, !ctir !1187
  %22 = load i64, i64* %tv_nsec37, align 8, !dbg !17276, !tbaa !16064, !ctir !343
  %cmp38 = icmp eq i64 %22, 1073741822, !dbg !17277
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !17278

if.then39:                                        ; preds = %if.then34
  %23 = load i32, i32* %utime_omit_count, align 4, !dbg !17279, !tbaa !2982
  %inc = add nsw i32 %23, 1, !dbg !17279
  store i32 %inc, i32* %utime_omit_count, align 4, !dbg !17279, !tbaa !2982
  br label %if.end40, !dbg !17280

if.end40:                                         ; preds = %if.then39, %if.then34
  br label %if.end41, !dbg !17281

if.end41:                                         ; preds = %if.end40, %lor.lhs.false30
  %24 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17282, !tbaa !2995
  %arrayidx42 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 1, !dbg !17282, !ctir !1192
  %tv_nsec43 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx42, i32 0, i32 1, !dbg !17284, !ctir !1187
  %25 = load i64, i64* %tv_nsec43, align 8, !dbg !17284, !tbaa !16064, !ctir !343
  %cmp44 = icmp eq i64 %25, 1073741823, !dbg !17285
  br i1 %cmp44, label %if.then49, label %lor.lhs.false45, !dbg !17286

lor.lhs.false45:                                  ; preds = %if.end41
  %26 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17287, !tbaa !2995
  %arrayidx46 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i64 1, !dbg !17287, !ctir !1192
  %tv_nsec47 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx46, i32 0, i32 1, !dbg !17288, !ctir !1187
  %27 = load i64, i64* %tv_nsec47, align 8, !dbg !17288, !tbaa !16064, !ctir !343
  %cmp48 = icmp eq i64 %27, 1073741822, !dbg !17289
  br i1 %cmp48, label %if.then49, label %if.end58, !dbg !17290

if.then49:                                        ; preds = %lor.lhs.false45, %if.end41
  %28 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17291, !tbaa !2995
  %arrayidx50 = getelementptr inbounds %struct.timespec, %struct.timespec* %28, i64 1, !dbg !17291, !ctir !1192
  %tv_sec51 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx50, i32 0, i32 0, !dbg !17293, !ctir !1187
  store i64 0, i64* %tv_sec51, align 8, !dbg !17294, !tbaa !16061, !ctir !341
  store i32 1, i32* %result, align 4, !dbg !17295, !tbaa !2982
  %29 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17296, !tbaa !2995
  %arrayidx52 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !17296, !ctir !1192
  %tv_nsec53 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx52, i32 0, i32 1, !dbg !17298, !ctir !1187
  %30 = load i64, i64* %tv_nsec53, align 8, !dbg !17298, !tbaa !16064, !ctir !343
  %cmp54 = icmp eq i64 %30, 1073741822, !dbg !17299
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !17300

if.then55:                                        ; preds = %if.then49
  %31 = load i32, i32* %utime_omit_count, align 4, !dbg !17301, !tbaa !2982
  %inc56 = add nsw i32 %31, 1, !dbg !17301
  store i32 %inc56, i32* %utime_omit_count, align 4, !dbg !17301, !tbaa !2982
  br label %if.end57, !dbg !17302

if.end57:                                         ; preds = %if.then55, %if.then49
  br label %if.end58, !dbg !17303

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  %32 = load i32, i32* %result, align 4, !dbg !17304, !tbaa !2982
  %33 = load i32, i32* %utime_omit_count, align 4, !dbg !17305, !tbaa !2982
  %cmp59 = icmp eq i32 %33, 1, !dbg !17306
  %conv = zext i1 %cmp59 to i32, !dbg !17306
  %add = add nsw i32 %32, %conv, !dbg !17307
  store i32 %add, i32* %retval, align 4, !dbg !17308
  br label %return, !dbg !17308

return:                                           ; preds = %if.end58, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !17309
  ret i32 %34, !dbg !17309
}

; Function Attrs: nounwind
declare dso_local i32 @futimens(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @update_timespec(%struct.stat* %statbuf, %struct.timespec** %ts) #4 !dbg !17310 !ctir !1205 {
entry:
  %retval = alloca i1, align 1
  %statbuf.addr = alloca %struct.stat*, align 8
  %ts.addr = alloca %struct.timespec**, align 8
  %timespec = alloca %struct.timespec*, align 8, !ctir !1192
  %tmp = alloca %struct.timespec, align 8
  %tmp30 = alloca %struct.timespec, align 8
  store %struct.stat* %statbuf, %struct.stat** %statbuf.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %statbuf.addr, metadata !17311, metadata !DIExpression()), !dbg !17312
  store %struct.timespec** %ts, %struct.timespec*** %ts.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.timespec*** %ts.addr, metadata !17313, metadata !DIExpression()), !dbg !17314
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec, metadata !17315, metadata !DIExpression()), !dbg !17316
  %0 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !17317, !tbaa !2995
  %1 = load %struct.timespec*, %struct.timespec** %0, align 8, !dbg !17318, !tbaa !2995, !ctir !1192
  store %struct.timespec* %1, %struct.timespec** %timespec, align 8, !dbg !17316, !tbaa !2995
  %2 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17319, !tbaa !2995
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17319, !ctir !1192
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !17321, !ctir !1187
  %3 = load i64, i64* %tv_nsec, align 8, !dbg !17321, !tbaa !16064, !ctir !343
  %cmp = icmp eq i64 %3, 1073741822, !dbg !17322
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17323

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17324, !tbaa !2995
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 1, !dbg !17324, !ctir !1192
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !17325, !ctir !1187
  %5 = load i64, i64* %tv_nsec2, align 8, !dbg !17325, !tbaa !16064, !ctir !343
  %cmp3 = icmp eq i64 %5, 1073741822, !dbg !17326
  br i1 %cmp3, label %if.then, label %if.end, !dbg !17327

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !17328
  br label %return, !dbg !17328

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17329, !tbaa !2995
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !17329, !ctir !1192
  %tv_nsec5 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx4, i32 0, i32 1, !dbg !17331, !ctir !1187
  %7 = load i64, i64* %tv_nsec5, align 8, !dbg !17331, !tbaa !16064, !ctir !343
  %cmp6 = icmp eq i64 %7, 1073741823, !dbg !17332
  br i1 %cmp6, label %land.lhs.true7, label %if.end12, !dbg !17333

land.lhs.true7:                                   ; preds = %if.end
  %8 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17334, !tbaa !2995
  %arrayidx8 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !17334, !ctir !1192
  %tv_nsec9 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx8, i32 0, i32 1, !dbg !17335, !ctir !1187
  %9 = load i64, i64* %tv_nsec9, align 8, !dbg !17335, !tbaa !16064, !ctir !343
  %cmp10 = icmp eq i64 %9, 1073741823, !dbg !17336
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !17337

if.then11:                                        ; preds = %land.lhs.true7
  %10 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !17338, !tbaa !2995
  store %struct.timespec* null, %struct.timespec** %10, align 8, !dbg !17340, !tbaa !2995, !ctir !1192
  store i1 false, i1* %retval, align 1, !dbg !17341
  br label %return, !dbg !17341

if.end12:                                         ; preds = %land.lhs.true7, %if.end
  %11 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17342, !tbaa !2995
  %arrayidx13 = getelementptr inbounds %struct.timespec, %struct.timespec* %11, i64 0, !dbg !17342, !ctir !1192
  %tv_nsec14 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx13, i32 0, i32 1, !dbg !17344, !ctir !1187
  %12 = load i64, i64* %tv_nsec14, align 8, !dbg !17344, !tbaa !16064, !ctir !343
  %cmp15 = icmp eq i64 %12, 1073741822, !dbg !17345
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !17346

if.then16:                                        ; preds = %if.end12
  %13 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17347, !tbaa !2995
  %arrayidx17 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !17347, !ctir !1192
  %14 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !17348, !tbaa !2995
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %14) #14, !dbg !17349
  %15 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17349
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0, !dbg !17349
  %17 = extractvalue { i64, i64 } %call, 0, !dbg !17349
  store i64 %17, i64* %16, align 8, !dbg !17349
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1, !dbg !17349
  %19 = extractvalue { i64, i64 } %call, 1, !dbg !17349
  store i64 %19, i64* %18, align 8, !dbg !17349
  %20 = bitcast %struct.timespec* %arrayidx17 to i8*, !dbg !17349
  %21 = bitcast %struct.timespec* %tmp to i8*, !dbg !17349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false), !dbg !17349, !tbaa.struct !6321
  br label %if.end24, !dbg !17347

if.else:                                          ; preds = %if.end12
  %22 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17350, !tbaa !2995
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %22, i64 0, !dbg !17350, !ctir !1192
  %tv_nsec19 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx18, i32 0, i32 1, !dbg !17352, !ctir !1187
  %23 = load i64, i64* %tv_nsec19, align 8, !dbg !17352, !tbaa !16064, !ctir !343
  %cmp20 = icmp eq i64 %23, 1073741823, !dbg !17353
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !17354

if.then21:                                        ; preds = %if.else
  %24 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17355, !tbaa !2995
  %arrayidx22 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 0, !dbg !17355, !ctir !1192
  call void @gettime(%struct.timespec* %arrayidx22), !dbg !17356
  br label %if.end23, !dbg !17356

if.end23:                                         ; preds = %if.then21, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then16
  %25 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17357, !tbaa !2995
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !17357, !ctir !1192
  %tv_nsec26 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !17359, !ctir !1187
  %26 = load i64, i64* %tv_nsec26, align 8, !dbg !17359, !tbaa !16064, !ctir !343
  %cmp27 = icmp eq i64 %26, 1073741822, !dbg !17360
  br i1 %cmp27, label %if.then28, label %if.else32, !dbg !17361

if.then28:                                        ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17362, !tbaa !2995
  %arrayidx29 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !17362, !ctir !1192
  %28 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !17363, !tbaa !2995
  %call31 = call { i64, i64 } @get_stat_mtime(%struct.stat* %28) #14, !dbg !17364
  %29 = bitcast %struct.timespec* %tmp30 to { i64, i64 }*, !dbg !17364
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !17364
  %31 = extractvalue { i64, i64 } %call31, 0, !dbg !17364
  store i64 %31, i64* %30, align 8, !dbg !17364
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !17364
  %33 = extractvalue { i64, i64 } %call31, 1, !dbg !17364
  store i64 %33, i64* %32, align 8, !dbg !17364
  %34 = bitcast %struct.timespec* %arrayidx29 to i8*, !dbg !17364
  %35 = bitcast %struct.timespec* %tmp30 to i8*, !dbg !17364
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !17364, !tbaa.struct !6321
  br label %if.end39, !dbg !17362

if.else32:                                        ; preds = %if.end24
  %36 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17365, !tbaa !2995
  %arrayidx33 = getelementptr inbounds %struct.timespec, %struct.timespec* %36, i64 1, !dbg !17365, !ctir !1192
  %tv_nsec34 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx33, i32 0, i32 1, !dbg !17367, !ctir !1187
  %37 = load i64, i64* %tv_nsec34, align 8, !dbg !17367, !tbaa !16064, !ctir !343
  %cmp35 = icmp eq i64 %37, 1073741823, !dbg !17368
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !17369

if.then36:                                        ; preds = %if.else32
  %38 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17370, !tbaa !2995
  %arrayidx37 = getelementptr inbounds %struct.timespec, %struct.timespec* %38, i64 1, !dbg !17370, !ctir !1192
  call void @gettime(%struct.timespec* %arrayidx37), !dbg !17371
  br label %if.end38, !dbg !17371

if.end38:                                         ; preds = %if.then36, %if.else32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then28
  store i1 false, i1* %retval, align 1, !dbg !17372
  br label %return, !dbg !17372

return:                                           ; preds = %if.end39, %if.then11, %if.then
  %39 = load i1, i1* %retval, align 1, !dbg !17373
  ret i1 %39, !dbg !17373
}

; Function Attrs: nounwind
declare dso_local i32 @futimesat(i32, i8*, %struct.timespec*) #2

; Function Attrs: nounwind
declare dso_local i32 @utimes(i8*, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !17374 !ctir !1201 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17375, metadata !DIExpression()), !dbg !17376
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17377, metadata !DIExpression()), !dbg !17378
  %0 = load i8*, i8** %file.addr, align 8, !dbg !17379, !tbaa !2995
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17380, !tbaa !2995
  %call = call i32 @fdutimens(i32 -1, i8* %0, %struct.timespec* %1), !dbg !17381
  ret i32 %call, !dbg !17382
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !17383 !ctir !1201 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1191
  %ts = alloca %struct.timespec*, align 8, !ctir !1192
  %adjustment_needed = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !1209
  %result = alloca i32, align 4, !ctir !7
  %tmp = alloca %struct.timespec, align 8
  %tmp25 = alloca %struct.timespec, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17384, metadata !DIExpression()), !dbg !17385
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17386, metadata !DIExpression()), !dbg !17387
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !17388, metadata !DIExpression()), !dbg !17389
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !17390, metadata !DIExpression()), !dbg !17391
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17392, !tbaa !2995
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !17392
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17392

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17393
  br label %cond.end, !dbg !17392

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17392

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !17392
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !17391, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !17394, metadata !DIExpression()), !dbg !17395
  store i32 0, i32* %adjustment_needed, align 4, !dbg !17395, !tbaa !2982
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !17396, metadata !DIExpression()), !dbg !17397
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17398, !tbaa !2995
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !17398
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17400

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17401, !ctir !1191
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17403, !tbaa !2995
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17403, !ctir !1185
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !17403
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !17403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !17403, !tbaa.struct !6321
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !17404, !ctir !1191
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17405, !tbaa !2995
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !17405, !ctir !1185
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !17405
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !17405
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !17405, !tbaa.struct !6321
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17406, !tbaa !2995
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !17407
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !17408, !tbaa !2982
  br label %if.end, !dbg !17409

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !17410, !tbaa !2982
  %cmp = icmp slt i32 %9, 0, !dbg !17412
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !17413

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17414
  br label %return, !dbg !17414

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* @lutimensat_works_really, align 4, !dbg !17415, !tbaa !2982
  %cmp7 = icmp sle i32 0, %10, !dbg !17417
  br i1 %cmp7, label %if.then8, label %if.end40, !dbg !17418

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17419, metadata !DIExpression()), !dbg !17421
  %11 = load i32, i32* %adjustment_needed, align 4, !dbg !17422, !tbaa !2982
  %cmp9 = icmp eq i32 %11, 2, !dbg !17424
  br i1 %cmp9, label %if.then10, label %if.end29, !dbg !17425

if.then10:                                        ; preds = %if.then8
  %12 = load i8*, i8** %file.addr, align 8, !dbg !17426, !tbaa !2995
  %call11 = call i32 @lstat(i8* %12, %struct.stat* %st) #10, !dbg !17429
  %tobool12 = icmp ne i32 %call11, 0, !dbg !17429
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !17430

if.then13:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !17431
  br label %return, !dbg !17431

if.end14:                                         ; preds = %if.then10
  %13 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17432, !tbaa !2995
  %arrayidx15 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !17432, !ctir !1192
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx15, i32 0, i32 1, !dbg !17434, !ctir !1187
  %14 = load i64, i64* %tv_nsec, align 8, !dbg !17434, !tbaa !16064, !ctir !343
  %cmp16 = icmp eq i64 %14, 1073741822, !dbg !17435
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !17436

if.then17:                                        ; preds = %if.end14
  %15 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17437, !tbaa !2995
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i64 0, !dbg !17437, !ctir !1192
  %call19 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !17438
  %16 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17438
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !17438
  %18 = extractvalue { i64, i64 } %call19, 0, !dbg !17438
  store i64 %18, i64* %17, align 8, !dbg !17438
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !17438
  %20 = extractvalue { i64, i64 } %call19, 1, !dbg !17438
  store i64 %20, i64* %19, align 8, !dbg !17438
  %21 = bitcast %struct.timespec* %arrayidx18 to i8*, !dbg !17438
  %22 = bitcast %struct.timespec* %tmp to i8*, !dbg !17438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false), !dbg !17438, !tbaa.struct !6321
  br label %if.end28, !dbg !17437

if.else:                                          ; preds = %if.end14
  %23 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17439, !tbaa !2995
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %23, i64 1, !dbg !17439, !ctir !1192
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !17441, !ctir !1187
  %24 = load i64, i64* %tv_nsec21, align 8, !dbg !17441, !tbaa !16064, !ctir !343
  %cmp22 = icmp eq i64 %24, 1073741822, !dbg !17442
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !17443

if.then23:                                        ; preds = %if.else
  %25 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17444, !tbaa !2995
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !17444, !ctir !1192
  %call26 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !17445
  %26 = bitcast %struct.timespec* %tmp25 to { i64, i64 }*, !dbg !17445
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0, !dbg !17445
  %28 = extractvalue { i64, i64 } %call26, 0, !dbg !17445
  store i64 %28, i64* %27, align 8, !dbg !17445
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1, !dbg !17445
  %30 = extractvalue { i64, i64 } %call26, 1, !dbg !17445
  store i64 %30, i64* %29, align 8, !dbg !17445
  %31 = bitcast %struct.timespec* %arrayidx24 to i8*, !dbg !17445
  %32 = bitcast %struct.timespec* %tmp25 to i8*, !dbg !17445
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false), !dbg !17445, !tbaa.struct !6321
  br label %if.end27, !dbg !17444

if.end27:                                         ; preds = %if.then23, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then17
  %33 = load i32, i32* %adjustment_needed, align 4, !dbg !17446, !tbaa !2982
  %inc = add nsw i32 %33, 1, !dbg !17446
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !17446, !tbaa !2982
  br label %if.end29, !dbg !17447

if.end29:                                         ; preds = %if.end28, %if.then8
  %34 = load i8*, i8** %file.addr, align 8, !dbg !17448, !tbaa !2995
  %35 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17449, !tbaa !2995
  %call30 = call i32 @utimensat(i32 -100, i8* %34, %struct.timespec* %35, i32 256) #10, !dbg !17450
  store i32 %call30, i32* %result, align 4, !dbg !17451, !tbaa !2982
  %36 = load i32, i32* %result, align 4, !dbg !17452, !tbaa !2982
  %cmp31 = icmp slt i32 0, %36, !dbg !17454
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !17455

if.then32:                                        ; preds = %if.end29
  %call33 = call i32* @__errno_location() #15, !dbg !17456
  store i32 38, i32* %call33, align 4, !dbg !17457, !tbaa !2982, !ctir !7
  br label %if.end34, !dbg !17456

if.end34:                                         ; preds = %if.then32, %if.end29
  %37 = load i32, i32* %result, align 4, !dbg !17458, !tbaa !2982
  %cmp35 = icmp eq i32 %37, 0, !dbg !17460
  br i1 %cmp35, label %if.then38, label %lor.lhs.false, !dbg !17461

lor.lhs.false:                                    ; preds = %if.end34
  %call36 = call i32* @__errno_location() #15, !dbg !17462
  %38 = load i32, i32* %call36, align 4, !dbg !17462, !tbaa !2982, !ctir !7
  %cmp37 = icmp ne i32 %38, 38, !dbg !17463
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !17464

if.then38:                                        ; preds = %lor.lhs.false, %if.end34
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17465, !tbaa !2982
  store i32 1, i32* @lutimensat_works_really, align 4, !dbg !17467, !tbaa !2982
  %39 = load i32, i32* %result, align 4, !dbg !17468, !tbaa !2982
  store i32 %39, i32* %retval, align 4, !dbg !17469
  br label %return, !dbg !17469

if.end39:                                         ; preds = %lor.lhs.false
  br label %if.end40, !dbg !17470

if.end40:                                         ; preds = %if.end39, %if.end6
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !17471, !tbaa !2982
  %40 = load i32, i32* %adjustment_needed, align 4, !dbg !17472, !tbaa !2982
  %tobool41 = icmp ne i32 %40, 0, !dbg !17472
  br i1 %tobool41, label %if.then42, label %if.end53, !dbg !17474

if.then42:                                        ; preds = %if.end40
  %41 = load i32, i32* %adjustment_needed, align 4, !dbg !17475, !tbaa !2982
  %cmp43 = icmp ne i32 %41, 3, !dbg !17478
  br i1 %cmp43, label %land.lhs.true, label %if.end47, !dbg !17479

land.lhs.true:                                    ; preds = %if.then42
  %42 = load i8*, i8** %file.addr, align 8, !dbg !17480, !tbaa !2995
  %call44 = call i32 @lstat(i8* %42, %struct.stat* %st) #10, !dbg !17481
  %tobool45 = icmp ne i32 %call44, 0, !dbg !17481
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !17482

if.then46:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !17483
  br label %return, !dbg !17483

if.end47:                                         ; preds = %land.lhs.true, %if.then42
  %43 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17484, !tbaa !2995
  %tobool48 = icmp ne %struct.timespec* %43, null, !dbg !17484
  br i1 %tobool48, label %land.lhs.true49, label %if.end52, !dbg !17486

land.lhs.true49:                                  ; preds = %if.end47
  %call50 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !17487
  br i1 %call50, label %if.then51, label %if.end52, !dbg !17488

if.then51:                                        ; preds = %land.lhs.true49
  store i32 0, i32* %retval, align 4, !dbg !17489
  br label %return, !dbg !17489

if.end52:                                         ; preds = %land.lhs.true49, %if.end47
  br label %if.end53, !dbg !17490

if.end53:                                         ; preds = %if.end52, %if.end40
  %44 = load i32, i32* %adjustment_needed, align 4, !dbg !17491, !tbaa !2982
  %tobool54 = icmp ne i32 %44, 0, !dbg !17491
  br i1 %tobool54, label %if.end59, label %land.lhs.true55, !dbg !17493

land.lhs.true55:                                  ; preds = %if.end53
  %45 = load i8*, i8** %file.addr, align 8, !dbg !17494, !tbaa !2995
  %call56 = call i32 @lstat(i8* %45, %struct.stat* %st) #10, !dbg !17495
  %tobool57 = icmp ne i32 %call56, 0, !dbg !17495
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !17496

if.then58:                                        ; preds = %land.lhs.true55
  store i32 -1, i32* %retval, align 4, !dbg !17497
  br label %return, !dbg !17497

if.end59:                                         ; preds = %land.lhs.true55, %if.end53
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !17498, !ctir !1209
  %46 = load i32, i32* %st_mode, align 8, !dbg !17498, !tbaa !3178, !ctir !133
  %and = and i32 %46, 61440, !dbg !17498
  %cmp60 = icmp eq i32 %and, 40960, !dbg !17498
  br i1 %cmp60, label %if.end63, label %if.then61, !dbg !17500

if.then61:                                        ; preds = %if.end59
  %47 = load i8*, i8** %file.addr, align 8, !dbg !17501, !tbaa !2995
  %48 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17502, !tbaa !2995
  %call62 = call i32 @fdutimens(i32 -1, i8* %47, %struct.timespec* %48), !dbg !17503
  store i32 %call62, i32* %retval, align 4, !dbg !17504
  br label %return, !dbg !17504

if.end63:                                         ; preds = %if.end59
  %call64 = call i32* @__errno_location() #15, !dbg !17505
  store i32 38, i32* %call64, align 4, !dbg !17506, !tbaa !2982, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !17507
  br label %return, !dbg !17507

return:                                           ; preds = %if.end63, %if.then61, %if.then58, %if.then51, %if.then46, %if.then38, %if.then13, %if.then5
  %49 = load i32, i32* %retval, align 4, !dbg !17508
  ret i32 %49, !dbg !17508
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @verror(i32 %status, i32 %errnum, i8* %format, %struct.__va_list_tag* %args) #4 !dbg !17509 !ctir !1944 {
entry:
  %status.addr = alloca i32, align 4
  %errnum.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  store i32 %status, i32* %status.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !17511, metadata !DIExpression()), !dbg !17512
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !17513, metadata !DIExpression()), !dbg !17514
  store i8* %format, i8** %format.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !17515, metadata !DIExpression()), !dbg !17516
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !17517, metadata !DIExpression()), !dbg !17518
  %0 = load i32, i32* %status.addr, align 4, !dbg !17519, !tbaa !2982
  %1 = load i32, i32* %errnum.addr, align 4, !dbg !17520, !tbaa !2982
  %2 = load i8*, i8** %format.addr, align 8, !dbg !17521, !tbaa !2995
  %3 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !17522, !tbaa !2995
  call void @verror_at_line(i32 %0, i32 %1, i8* null, i32 0, i8* %2, %struct.__va_list_tag* %3), !dbg !17523
  ret void, !dbg !17524
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @verror_at_line(i32 %status, i32 %errnum, i8* %file, i32 %line_number, i8* %format, %struct.__va_list_tag* %args) #4 !dbg !17525 !ctir !1953 {
entry:
  %status.addr = alloca i32, align 4
  %errnum.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %line_number.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %message = alloca i8*, align 8, !ctir !9
  store i32 %status, i32* %status.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !17526, metadata !DIExpression()), !dbg !17527
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !17528, metadata !DIExpression()), !dbg !17529
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17530, metadata !DIExpression()), !dbg !17531
  store i32 %line_number, i32* %line_number.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %line_number.addr, metadata !17532, metadata !DIExpression()), !dbg !17533
  store i8* %format, i8** %format.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !17534, metadata !DIExpression()), !dbg !17535
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !17536, metadata !DIExpression()), !dbg !17537
  call void @llvm.dbg.declare(metadata i8** %message, metadata !17538, metadata !DIExpression()), !dbg !17539
  %0 = load i8*, i8** %format.addr, align 8, !dbg !17540, !tbaa !2995
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !17541, !tbaa !2995
  %call = call i8* @xvasprintf(i8* %0, %struct.__va_list_tag* %1), !dbg !17542
  store i8* %call, i8** %message, align 8, !dbg !17539, !tbaa !2995
  %2 = load i8*, i8** %message, align 8, !dbg !17543, !tbaa !2995
  %tobool = icmp ne i8* %2, null, !dbg !17543
  br i1 %tobool, label %if.then, label %if.else3, !dbg !17545

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %file.addr, align 8, !dbg !17546, !tbaa !2995
  %tobool1 = icmp ne i8* %3, null, !dbg !17546
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !17549

if.then2:                                         ; preds = %if.then
  %4 = load i32, i32* %status.addr, align 4, !dbg !17550, !tbaa !2982
  %5 = load i32, i32* %errnum.addr, align 4, !dbg !17551, !tbaa !2982
  %6 = load i8*, i8** %file.addr, align 8, !dbg !17552, !tbaa !2995
  %7 = load i32, i32* %line_number.addr, align 4, !dbg !17553, !tbaa !2982
  %8 = load i8*, i8** %message, align 8, !dbg !17554, !tbaa !2995
  call void (i32, i32, i8*, i32, i8*, ...) @error_at_line(i32 %4, i32 %5, i8* %6, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.372, i64 0, i64 0), i8* %8), !dbg !17555
  br label %if.end, !dbg !17555

if.else:                                          ; preds = %if.then
  %9 = load i32, i32* %status.addr, align 4, !dbg !17556, !tbaa !2982
  %10 = load i32, i32* %errnum.addr, align 4, !dbg !17557, !tbaa !2982
  %11 = load i8*, i8** %message, align 8, !dbg !17558, !tbaa !2995
  call void (i32, i32, i8*, ...) @error(i32 %9, i32 %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.372, i64 0, i64 0), i8* %11), !dbg !17559
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end6, !dbg !17560

if.else3:                                         ; preds = %entry
  %call4 = call i32* @__errno_location() #15, !dbg !17561
  %12 = load i32, i32* %call4, align 4, !dbg !17561, !tbaa !2982, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.373, i64 0, i64 0)) #10, !dbg !17563
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call5), !dbg !17564
  call void @abort() #13, !dbg !17565
  unreachable, !dbg !17565

if.end6:                                          ; preds = %if.end
  %13 = load i8*, i8** %message, align 8, !dbg !17566, !tbaa !2995
  call void @free(i8* %13) #10, !dbg !17567
  ret void, !dbg !17568
}

declare dso_local void @error_at_line(i32, i32, i8*, i32, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #4 !dbg !17569 !ctir !1958 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors.addr = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17571, metadata !DIExpression()), !dbg !17572
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17573, metadata !DIExpression()), !dbg !17574
  store i8* %package, i8** %package.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17575, metadata !DIExpression()), !dbg !17576
  store i8* %version, i8** %version.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17577, metadata !DIExpression()), !dbg !17578
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !17579, metadata !DIExpression()), !dbg !17580
  store i64 %n_authors, i64* %n_authors.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !17581, metadata !DIExpression()), !dbg !17582
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !17583, !tbaa !2995
  %tobool = icmp ne i8* %0, null, !dbg !17583
  br i1 %tobool, label %if.then, label %if.else, !dbg !17585

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17586, !tbaa !2995
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !17587, !tbaa !2995
  %3 = load i8*, i8** %package.addr, align 8, !dbg !17588, !tbaa !2995
  %4 = load i8*, i8** %version.addr, align 8, !dbg !17589, !tbaa !2995
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.374, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !17590
  br label %if.end, !dbg !17590

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17591, !tbaa !2995
  %6 = load i8*, i8** %package.addr, align 8, !dbg !17592, !tbaa !2995
  %7 = load i8*, i8** %version.addr, align 8, !dbg !17593, !tbaa !2995
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.375, i64 0, i64 0), i8* %6, i8* %7), !dbg !17594
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17595, !tbaa !2995
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.376, i64 0, i64 0)) #10, !dbg !17596
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !17597
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([204 x i8], [204 x i8]* @.str.3.377, i64 0, i64 0)) #10, !dbg !17598
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17598, !tbaa !2995
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %9), !dbg !17598
  %10 = load i64, i64* %n_authors.addr, align 8, !dbg !17599, !tbaa !3848
  switch i64 %10, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb6
    i64 2, label %sw.bb9
    i64 3, label %sw.bb14
    i64 4, label %sw.bb20
    i64 5, label %sw.bb27
    i64 6, label %sw.bb35
    i64 7, label %sw.bb44
    i64 8, label %sw.bb54
    i64 9, label %sw.bb65
  ], !dbg !17600

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !17601

sw.bb6:                                           ; preds = %if.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17603, !tbaa !2995
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.378, i64 0, i64 0)) #10, !dbg !17604
  %12 = load i8**, i8*** %authors.addr, align 8, !dbg !17605, !tbaa !2995
  %arrayidx = getelementptr inbounds i8*, i8** %12, i64 0, !dbg !17605, !ctir !1260
  %13 = load i8*, i8** %arrayidx, align 8, !dbg !17605, !tbaa !2995
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* %call7, i8* %13), !dbg !17606
  br label %sw.epilog, !dbg !17607

sw.bb9:                                           ; preds = %if.end
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17608, !tbaa !2995
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.379, i64 0, i64 0)) #10, !dbg !17609
  %15 = load i8**, i8*** %authors.addr, align 8, !dbg !17610, !tbaa !2995
  %arrayidx11 = getelementptr inbounds i8*, i8** %15, i64 0, !dbg !17610, !ctir !1260
  %16 = load i8*, i8** %arrayidx11, align 8, !dbg !17610, !tbaa !2995
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !17611, !tbaa !2995
  %arrayidx12 = getelementptr inbounds i8*, i8** %17, i64 1, !dbg !17611, !ctir !1260
  %18 = load i8*, i8** %arrayidx12, align 8, !dbg !17611, !tbaa !2995
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* %call10, i8* %16, i8* %18), !dbg !17612
  br label %sw.epilog, !dbg !17613

sw.bb14:                                          ; preds = %if.end
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17614, !tbaa !2995
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.380, i64 0, i64 0)) #10, !dbg !17615
  %20 = load i8**, i8*** %authors.addr, align 8, !dbg !17616, !tbaa !2995
  %arrayidx16 = getelementptr inbounds i8*, i8** %20, i64 0, !dbg !17616, !ctir !1260
  %21 = load i8*, i8** %arrayidx16, align 8, !dbg !17616, !tbaa !2995
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !17617, !tbaa !2995
  %arrayidx17 = getelementptr inbounds i8*, i8** %22, i64 1, !dbg !17617, !ctir !1260
  %23 = load i8*, i8** %arrayidx17, align 8, !dbg !17617, !tbaa !2995
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !17618, !tbaa !2995
  %arrayidx18 = getelementptr inbounds i8*, i8** %24, i64 2, !dbg !17618, !ctir !1260
  %25 = load i8*, i8** %arrayidx18, align 8, !dbg !17618, !tbaa !2995
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* %call15, i8* %21, i8* %23, i8* %25), !dbg !17619
  br label %sw.epilog, !dbg !17620

sw.bb20:                                          ; preds = %if.end
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17621, !tbaa !2995
  %call21 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7.381, i64 0, i64 0)) #10, !dbg !17622
  %27 = load i8**, i8*** %authors.addr, align 8, !dbg !17623, !tbaa !2995
  %arrayidx22 = getelementptr inbounds i8*, i8** %27, i64 0, !dbg !17623, !ctir !1260
  %28 = load i8*, i8** %arrayidx22, align 8, !dbg !17623, !tbaa !2995
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !17624, !tbaa !2995
  %arrayidx23 = getelementptr inbounds i8*, i8** %29, i64 1, !dbg !17624, !ctir !1260
  %30 = load i8*, i8** %arrayidx23, align 8, !dbg !17624, !tbaa !2995
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !17625, !tbaa !2995
  %arrayidx24 = getelementptr inbounds i8*, i8** %31, i64 2, !dbg !17625, !ctir !1260
  %32 = load i8*, i8** %arrayidx24, align 8, !dbg !17625, !tbaa !2995
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !17626, !tbaa !2995
  %arrayidx25 = getelementptr inbounds i8*, i8** %33, i64 3, !dbg !17626, !ctir !1260
  %34 = load i8*, i8** %arrayidx25, align 8, !dbg !17626, !tbaa !2995
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* %call21, i8* %28, i8* %30, i8* %32, i8* %34), !dbg !17627
  br label %sw.epilog, !dbg !17628

sw.bb27:                                          ; preds = %if.end
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17629, !tbaa !2995
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.382, i64 0, i64 0)) #10, !dbg !17630
  %36 = load i8**, i8*** %authors.addr, align 8, !dbg !17631, !tbaa !2995
  %arrayidx29 = getelementptr inbounds i8*, i8** %36, i64 0, !dbg !17631, !ctir !1260
  %37 = load i8*, i8** %arrayidx29, align 8, !dbg !17631, !tbaa !2995
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !17632, !tbaa !2995
  %arrayidx30 = getelementptr inbounds i8*, i8** %38, i64 1, !dbg !17632, !ctir !1260
  %39 = load i8*, i8** %arrayidx30, align 8, !dbg !17632, !tbaa !2995
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !17633, !tbaa !2995
  %arrayidx31 = getelementptr inbounds i8*, i8** %40, i64 2, !dbg !17633, !ctir !1260
  %41 = load i8*, i8** %arrayidx31, align 8, !dbg !17633, !tbaa !2995
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !17634, !tbaa !2995
  %arrayidx32 = getelementptr inbounds i8*, i8** %42, i64 3, !dbg !17634, !ctir !1260
  %43 = load i8*, i8** %arrayidx32, align 8, !dbg !17634, !tbaa !2995
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !17635, !tbaa !2995
  %arrayidx33 = getelementptr inbounds i8*, i8** %44, i64 4, !dbg !17635, !ctir !1260
  %45 = load i8*, i8** %arrayidx33, align 8, !dbg !17635, !tbaa !2995
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* %call28, i8* %37, i8* %39, i8* %41, i8* %43, i8* %45), !dbg !17636
  br label %sw.epilog, !dbg !17637

sw.bb35:                                          ; preds = %if.end
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17638, !tbaa !2995
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.383, i64 0, i64 0)) #10, !dbg !17639
  %47 = load i8**, i8*** %authors.addr, align 8, !dbg !17640, !tbaa !2995
  %arrayidx37 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !17640, !ctir !1260
  %48 = load i8*, i8** %arrayidx37, align 8, !dbg !17640, !tbaa !2995
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !17641, !tbaa !2995
  %arrayidx38 = getelementptr inbounds i8*, i8** %49, i64 1, !dbg !17641, !ctir !1260
  %50 = load i8*, i8** %arrayidx38, align 8, !dbg !17641, !tbaa !2995
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !17642, !tbaa !2995
  %arrayidx39 = getelementptr inbounds i8*, i8** %51, i64 2, !dbg !17642, !ctir !1260
  %52 = load i8*, i8** %arrayidx39, align 8, !dbg !17642, !tbaa !2995
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !17643, !tbaa !2995
  %arrayidx40 = getelementptr inbounds i8*, i8** %53, i64 3, !dbg !17643, !ctir !1260
  %54 = load i8*, i8** %arrayidx40, align 8, !dbg !17643, !tbaa !2995
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !17644, !tbaa !2995
  %arrayidx41 = getelementptr inbounds i8*, i8** %55, i64 4, !dbg !17644, !ctir !1260
  %56 = load i8*, i8** %arrayidx41, align 8, !dbg !17644, !tbaa !2995
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !17645, !tbaa !2995
  %arrayidx42 = getelementptr inbounds i8*, i8** %57, i64 5, !dbg !17645, !ctir !1260
  %58 = load i8*, i8** %arrayidx42, align 8, !dbg !17645, !tbaa !2995
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* %call36, i8* %48, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58), !dbg !17646
  br label %sw.epilog, !dbg !17647

sw.bb44:                                          ; preds = %if.end
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17648, !tbaa !2995
  %call45 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10.384, i64 0, i64 0)) #10, !dbg !17649
  %60 = load i8**, i8*** %authors.addr, align 8, !dbg !17650, !tbaa !2995
  %arrayidx46 = getelementptr inbounds i8*, i8** %60, i64 0, !dbg !17650, !ctir !1260
  %61 = load i8*, i8** %arrayidx46, align 8, !dbg !17650, !tbaa !2995
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !17651, !tbaa !2995
  %arrayidx47 = getelementptr inbounds i8*, i8** %62, i64 1, !dbg !17651, !ctir !1260
  %63 = load i8*, i8** %arrayidx47, align 8, !dbg !17651, !tbaa !2995
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !17652, !tbaa !2995
  %arrayidx48 = getelementptr inbounds i8*, i8** %64, i64 2, !dbg !17652, !ctir !1260
  %65 = load i8*, i8** %arrayidx48, align 8, !dbg !17652, !tbaa !2995
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !17653, !tbaa !2995
  %arrayidx49 = getelementptr inbounds i8*, i8** %66, i64 3, !dbg !17653, !ctir !1260
  %67 = load i8*, i8** %arrayidx49, align 8, !dbg !17653, !tbaa !2995
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !17654, !tbaa !2995
  %arrayidx50 = getelementptr inbounds i8*, i8** %68, i64 4, !dbg !17654, !ctir !1260
  %69 = load i8*, i8** %arrayidx50, align 8, !dbg !17654, !tbaa !2995
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !17655, !tbaa !2995
  %arrayidx51 = getelementptr inbounds i8*, i8** %70, i64 5, !dbg !17655, !ctir !1260
  %71 = load i8*, i8** %arrayidx51, align 8, !dbg !17655, !tbaa !2995
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !17656, !tbaa !2995
  %arrayidx52 = getelementptr inbounds i8*, i8** %72, i64 6, !dbg !17656, !ctir !1260
  %73 = load i8*, i8** %arrayidx52, align 8, !dbg !17656, !tbaa !2995
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* %call45, i8* %61, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73), !dbg !17657
  br label %sw.epilog, !dbg !17658

sw.bb54:                                          ; preds = %if.end
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17659, !tbaa !2995
  %call55 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11.385, i64 0, i64 0)) #10, !dbg !17660
  %75 = load i8**, i8*** %authors.addr, align 8, !dbg !17661, !tbaa !2995
  %arrayidx56 = getelementptr inbounds i8*, i8** %75, i64 0, !dbg !17661, !ctir !1260
  %76 = load i8*, i8** %arrayidx56, align 8, !dbg !17661, !tbaa !2995
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !17662, !tbaa !2995
  %arrayidx57 = getelementptr inbounds i8*, i8** %77, i64 1, !dbg !17662, !ctir !1260
  %78 = load i8*, i8** %arrayidx57, align 8, !dbg !17662, !tbaa !2995
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !17663, !tbaa !2995
  %arrayidx58 = getelementptr inbounds i8*, i8** %79, i64 2, !dbg !17663, !ctir !1260
  %80 = load i8*, i8** %arrayidx58, align 8, !dbg !17663, !tbaa !2995
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !17664, !tbaa !2995
  %arrayidx59 = getelementptr inbounds i8*, i8** %81, i64 3, !dbg !17664, !ctir !1260
  %82 = load i8*, i8** %arrayidx59, align 8, !dbg !17664, !tbaa !2995
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !17665, !tbaa !2995
  %arrayidx60 = getelementptr inbounds i8*, i8** %83, i64 4, !dbg !17665, !ctir !1260
  %84 = load i8*, i8** %arrayidx60, align 8, !dbg !17665, !tbaa !2995
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !17666, !tbaa !2995
  %arrayidx61 = getelementptr inbounds i8*, i8** %85, i64 5, !dbg !17666, !ctir !1260
  %86 = load i8*, i8** %arrayidx61, align 8, !dbg !17666, !tbaa !2995
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !17667, !tbaa !2995
  %arrayidx62 = getelementptr inbounds i8*, i8** %87, i64 6, !dbg !17667, !ctir !1260
  %88 = load i8*, i8** %arrayidx62, align 8, !dbg !17667, !tbaa !2995
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !17668, !tbaa !2995
  %arrayidx63 = getelementptr inbounds i8*, i8** %89, i64 7, !dbg !17668, !ctir !1260
  %90 = load i8*, i8** %arrayidx63, align 8, !dbg !17668, !tbaa !2995
  %call64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* %call55, i8* %76, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90), !dbg !17669
  br label %sw.epilog, !dbg !17670

sw.bb65:                                          ; preds = %if.end
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17671, !tbaa !2995
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.386, i64 0, i64 0)) #10, !dbg !17672
  %92 = load i8**, i8*** %authors.addr, align 8, !dbg !17673, !tbaa !2995
  %arrayidx67 = getelementptr inbounds i8*, i8** %92, i64 0, !dbg !17673, !ctir !1260
  %93 = load i8*, i8** %arrayidx67, align 8, !dbg !17673, !tbaa !2995
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !17674, !tbaa !2995
  %arrayidx68 = getelementptr inbounds i8*, i8** %94, i64 1, !dbg !17674, !ctir !1260
  %95 = load i8*, i8** %arrayidx68, align 8, !dbg !17674, !tbaa !2995
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !17675, !tbaa !2995
  %arrayidx69 = getelementptr inbounds i8*, i8** %96, i64 2, !dbg !17675, !ctir !1260
  %97 = load i8*, i8** %arrayidx69, align 8, !dbg !17675, !tbaa !2995
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !17676, !tbaa !2995
  %arrayidx70 = getelementptr inbounds i8*, i8** %98, i64 3, !dbg !17676, !ctir !1260
  %99 = load i8*, i8** %arrayidx70, align 8, !dbg !17676, !tbaa !2995
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !17677, !tbaa !2995
  %arrayidx71 = getelementptr inbounds i8*, i8** %100, i64 4, !dbg !17677, !ctir !1260
  %101 = load i8*, i8** %arrayidx71, align 8, !dbg !17677, !tbaa !2995
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !17678, !tbaa !2995
  %arrayidx72 = getelementptr inbounds i8*, i8** %102, i64 5, !dbg !17678, !ctir !1260
  %103 = load i8*, i8** %arrayidx72, align 8, !dbg !17678, !tbaa !2995
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !17679, !tbaa !2995
  %arrayidx73 = getelementptr inbounds i8*, i8** %104, i64 6, !dbg !17679, !ctir !1260
  %105 = load i8*, i8** %arrayidx73, align 8, !dbg !17679, !tbaa !2995
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !17680, !tbaa !2995
  %arrayidx74 = getelementptr inbounds i8*, i8** %106, i64 7, !dbg !17680, !ctir !1260
  %107 = load i8*, i8** %arrayidx74, align 8, !dbg !17680, !tbaa !2995
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !17681, !tbaa !2995
  %arrayidx75 = getelementptr inbounds i8*, i8** %108, i64 8, !dbg !17681, !ctir !1260
  %109 = load i8*, i8** %arrayidx75, align 8, !dbg !17681, !tbaa !2995
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* %call66, i8* %93, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109), !dbg !17682
  br label %sw.epilog, !dbg !17683

sw.default:                                       ; preds = %if.end
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17684, !tbaa !2995
  %call77 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13.387, i64 0, i64 0)) #10, !dbg !17685
  %111 = load i8**, i8*** %authors.addr, align 8, !dbg !17686, !tbaa !2995
  %arrayidx78 = getelementptr inbounds i8*, i8** %111, i64 0, !dbg !17686, !ctir !1260
  %112 = load i8*, i8** %arrayidx78, align 8, !dbg !17686, !tbaa !2995
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !17687, !tbaa !2995
  %arrayidx79 = getelementptr inbounds i8*, i8** %113, i64 1, !dbg !17687, !ctir !1260
  %114 = load i8*, i8** %arrayidx79, align 8, !dbg !17687, !tbaa !2995
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !17688, !tbaa !2995
  %arrayidx80 = getelementptr inbounds i8*, i8** %115, i64 2, !dbg !17688, !ctir !1260
  %116 = load i8*, i8** %arrayidx80, align 8, !dbg !17688, !tbaa !2995
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !17689, !tbaa !2995
  %arrayidx81 = getelementptr inbounds i8*, i8** %117, i64 3, !dbg !17689, !ctir !1260
  %118 = load i8*, i8** %arrayidx81, align 8, !dbg !17689, !tbaa !2995
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !17690, !tbaa !2995
  %arrayidx82 = getelementptr inbounds i8*, i8** %119, i64 4, !dbg !17690, !ctir !1260
  %120 = load i8*, i8** %arrayidx82, align 8, !dbg !17690, !tbaa !2995
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !17691, !tbaa !2995
  %arrayidx83 = getelementptr inbounds i8*, i8** %121, i64 5, !dbg !17691, !ctir !1260
  %122 = load i8*, i8** %arrayidx83, align 8, !dbg !17691, !tbaa !2995
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !17692, !tbaa !2995
  %arrayidx84 = getelementptr inbounds i8*, i8** %123, i64 6, !dbg !17692, !ctir !1260
  %124 = load i8*, i8** %arrayidx84, align 8, !dbg !17692, !tbaa !2995
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !17693, !tbaa !2995
  %arrayidx85 = getelementptr inbounds i8*, i8** %125, i64 7, !dbg !17693, !ctir !1260
  %126 = load i8*, i8** %arrayidx85, align 8, !dbg !17693, !tbaa !2995
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !17694, !tbaa !2995
  %arrayidx86 = getelementptr inbounds i8*, i8** %127, i64 8, !dbg !17694, !ctir !1260
  %128 = load i8*, i8** %arrayidx86, align 8, !dbg !17694, !tbaa !2995
  %call87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* %call77, i8* %112, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128), !dbg !17695
  br label %sw.epilog, !dbg !17696

sw.epilog:                                        ; preds = %sw.default, %sw.bb65, %sw.bb54, %sw.bb44, %sw.bb35, %sw.bb27, %sw.bb20, %sw.bb14, %sw.bb9, %sw.bb6, %sw.bb
  ret void, !dbg !17697
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #4 !dbg !17698 !ctir !1995 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors = alloca i64, align 8, !ctir !55
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17699, metadata !DIExpression()), !dbg !17700
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17701, metadata !DIExpression()), !dbg !17702
  store i8* %package, i8** %package.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17703, metadata !DIExpression()), !dbg !17704
  store i8* %version, i8** %version.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17705, metadata !DIExpression()), !dbg !17706
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !17707, metadata !DIExpression()), !dbg !17708
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !17709, metadata !DIExpression()), !dbg !17710
  store i64 0, i64* %n_authors, align 8, !dbg !17711, !tbaa !3848
  br label %for.cond, !dbg !17713

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !17714, !tbaa !2995
  %1 = load i64, i64* %n_authors, align 8, !dbg !17716, !tbaa !3848
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !17714, !ctir !1260
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !17714, !tbaa !2995
  %tobool = icmp ne i8* %2, null, !dbg !17717
  br i1 %tobool, label %for.body, label %for.end, !dbg !17717

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !17717

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !17718, !tbaa !3848
  %inc = add i64 %3, 1, !dbg !17718
  store i64 %inc, i64* %n_authors, align 8, !dbg !17718, !tbaa !3848
  br label %for.cond, !dbg !17719, !llvm.loop !17720

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17722, !tbaa !2995
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !17723, !tbaa !2995
  %6 = load i8*, i8** %package.addr, align 8, !dbg !17724, !tbaa !2995
  %7 = load i8*, i8** %version.addr, align 8, !dbg !17725, !tbaa !2995
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !17726, !tbaa !2995
  %9 = load i64, i64* %n_authors, align 8, !dbg !17727, !tbaa !3848
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !17728
  ret void, !dbg !17729
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #4 !dbg !17730 !ctir !1997 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8, !ctir !55
  %authtab = alloca [10 x i8*], align 16, !ctir !2006
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17731, metadata !DIExpression()), !dbg !17732
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17733, metadata !DIExpression()), !dbg !17734
  store i8* %package, i8** %package.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17735, metadata !DIExpression()), !dbg !17736
  store i8* %version, i8** %version.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17737, metadata !DIExpression()), !dbg !17738
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !17739, metadata !DIExpression()), !dbg !17740
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !17741, metadata !DIExpression()), !dbg !17742
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !17743, metadata !DIExpression()), !dbg !17744
  store i64 0, i64* %n_authors, align 8, !dbg !17745, !tbaa !3848
  br label %for.cond, !dbg !17747

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !17748, !tbaa !3848
  %cmp = icmp ult i64 %0, 10, !dbg !17750
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !17751

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !17752, !tbaa !2995
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !17752
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !17752
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !17752
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !17752

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !17752
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !17752
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !17752
  %4 = bitcast i8* %3 to i8**, !dbg !17752
  %5 = add i32 %gp_offset, 8, !dbg !17752
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !17752
  br label %vaarg.end, !dbg !17752

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !17752
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !17752
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !17752
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !17752
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !17752
  br label %vaarg.end, !dbg !17752

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !17752
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !17752
  %8 = load i64, i64* %n_authors, align 8, !dbg !17753, !tbaa !3848
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !17754, !ctir !2006
  store i8* %7, i8** %arrayidx, align 8, !dbg !17755, !tbaa !2995
  %cmp1 = icmp ne i8* %7, null, !dbg !17756
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !17757
  br i1 %9, label %for.body, label %for.end, !dbg !17758

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !17758

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !17759, !tbaa !3848
  %inc = add i64 %10, 1, !dbg !17759
  store i64 %inc, i64* %n_authors, align 8, !dbg !17759, !tbaa !3848
  br label %for.cond, !dbg !17760, !llvm.loop !17761

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17763, !tbaa !2995
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !17764, !tbaa !2995
  %13 = load i8*, i8** %package.addr, align 8, !dbg !17765, !tbaa !2995
  %14 = load i8*, i8** %version.addr, align 8, !dbg !17766, !tbaa !2995
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !17767
  %15 = load i64, i64* %n_authors, align 8, !dbg !17768, !tbaa !3848
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !17769
  ret void, !dbg !17770
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #4 !dbg !17771 !ctir !2007 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2009
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17774, metadata !DIExpression()), !dbg !17775
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17776, metadata !DIExpression()), !dbg !17777
  store i8* %package, i8** %package.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17778, metadata !DIExpression()), !dbg !17779
  store i8* %version, i8** %version.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17780, metadata !DIExpression()), !dbg !17781
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !17782, metadata !DIExpression()), !dbg !17783
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17784
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !17784
  call void @llvm.va_start(i8* %arraydecay1), !dbg !17784
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17785, !tbaa !2995
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !17786, !tbaa !2995
  %2 = load i8*, i8** %package.addr, align 8, !dbg !17787, !tbaa !2995
  %3 = load i8*, i8** %version.addr, align 8, !dbg !17788, !tbaa !2995
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17789
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !17790
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17791
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !17791
  call void @llvm.va_end(i8* %arraydecay34), !dbg !17791
  ret void, !dbg !17792
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #4 !dbg !17793 !ctir !134 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.390, i64 0, i64 0)) #10, !dbg !17794
  %call1 = call i32 (i8*, ...) @printf(i8* %call, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15.391, i64 0, i64 0)), !dbg !17795
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.392, i64 0, i64 0)) #10, !dbg !17796
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.393, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18.394, i64 0, i64 0)), !dbg !17797
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.19.395, i64 0, i64 0)) #10, !dbg !17798
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !17798, !tbaa !2995
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %0), !dbg !17798
  ret void, !dbg !17799
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @can_write_any_file() #4 !dbg !1243 !ctir !1245 {
entry:
  %can = alloca i8, align 1, !ctir !120
  %0 = load i8, i8* @can_write_any_file.initialized, align 1, !dbg !17800, !tbaa !3106
  %tobool = trunc i8 %0 to i1, !dbg !17800
  br i1 %tobool, label %if.end, label %if.then, !dbg !17802

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %can, metadata !17803, metadata !DIExpression()), !dbg !17805
  store i8 0, i8* %can, align 1, !dbg !17805, !tbaa !3106
  %call = call i32 @geteuid() #10, !dbg !17806
  %cmp = icmp eq i32 %call, 0, !dbg !17807
  %frombool = zext i1 %cmp to i8, !dbg !17808
  store i8 %frombool, i8* %can, align 1, !dbg !17808, !tbaa !3106
  %1 = load i8, i8* %can, align 1, !dbg !17809, !tbaa !3106
  %tobool1 = trunc i8 %1 to i1, !dbg !17809
  %frombool2 = zext i1 %tobool1 to i8, !dbg !17810
  store i8 %frombool2, i8* @can_write_any_file.can_write, align 1, !dbg !17810, !tbaa !3106
  store i8 1, i8* @can_write_any_file.initialized, align 1, !dbg !17811, !tbaa !3106
  br label %if.end, !dbg !17812

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* @can_write_any_file.can_write, align 1, !dbg !17813, !tbaa !3106
  %tobool3 = trunc i8 %2 to i1, !dbg !17813
  ret i1 %tobool3, !dbg !17814
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #4 !dbg !17815 !ctir !2016 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17817, metadata !DIExpression()), !dbg !17818
  store i64 %s, i64* %s.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17819, metadata !DIExpression()), !dbg !17820
  %0 = load i64, i64* %s.addr, align 8, !dbg !17821, !tbaa !3848
  %div = udiv i64 9223372036854775807, %0, !dbg !17821
  %1 = load i64, i64* %n.addr, align 8, !dbg !17821, !tbaa !3848
  %cmp = icmp ult i64 %div, %1, !dbg !17821
  br i1 %cmp, label %if.then, label %if.end, !dbg !17823

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !17824
  unreachable, !dbg !17824

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17825, !tbaa !3848
  %3 = load i64, i64* %s.addr, align 8, !dbg !17826, !tbaa !3848
  %mul = mul i64 %2, %3, !dbg !17827
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !17828
  ret i8* %call, !dbg !17829
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #4 !dbg !17830 !ctir !2024 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !53
  store i64 %n, i64* %n.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17832, metadata !DIExpression()), !dbg !17833
  call void @llvm.dbg.declare(metadata i8** %p, metadata !17834, metadata !DIExpression()), !dbg !17835
  %0 = load i64, i64* %n.addr, align 8, !dbg !17836, !tbaa !3848
  %call = call noalias i8* @malloc(i64 %0) #10, !dbg !17837
  store i8* %call, i8** %p, align 8, !dbg !17835, !tbaa !2995
  %1 = load i8*, i8** %p, align 8, !dbg !17838, !tbaa !2995
  %tobool = icmp ne i8* %1, null, !dbg !17838
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17840

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17841, !tbaa !3848
  %cmp = icmp ne i64 %2, 0, !dbg !17842
  br i1 %cmp, label %if.then, label %if.end, !dbg !17843

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #16, !dbg !17844
  unreachable, !dbg !17844

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !17845, !tbaa !2995
  ret i8* %3, !dbg !17846
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #4 !dbg !17847 !ctir !2018 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17848, metadata !DIExpression()), !dbg !17849
  store i64 %n, i64* %n.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17850, metadata !DIExpression()), !dbg !17851
  store i64 %s, i64* %s.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17852, metadata !DIExpression()), !dbg !17853
  %0 = load i64, i64* %s.addr, align 8, !dbg !17854, !tbaa !3848
  %div = udiv i64 9223372036854775807, %0, !dbg !17854
  %1 = load i64, i64* %n.addr, align 8, !dbg !17854, !tbaa !3848
  %cmp = icmp ult i64 %div, %1, !dbg !17854
  br i1 %cmp, label %if.then, label %if.end, !dbg !17856

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !17857
  unreachable, !dbg !17857

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17858, !tbaa !2995
  %3 = load i64, i64* %n.addr, align 8, !dbg !17859, !tbaa !3848
  %4 = load i64, i64* %s.addr, align 8, !dbg !17860, !tbaa !3848
  %mul = mul i64 %3, %4, !dbg !17861
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !17862
  ret i8* %call, !dbg !17863
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #4 !dbg !17864 !ctir !2026 {
entry:
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17865, metadata !DIExpression()), !dbg !17866
  store i64 %n, i64* %n.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17867, metadata !DIExpression()), !dbg !17868
  %0 = load i64, i64* %n.addr, align 8, !dbg !17869, !tbaa !3848
  %tobool = icmp ne i64 %0, 0, !dbg !17869
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17871

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !17872, !tbaa !2995
  %tobool1 = icmp ne i8* %1, null, !dbg !17872
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17873

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17874, !tbaa !2995
  call void @free(i8* %2) #10, !dbg !17876
  store i8* null, i8** %retval, align 8, !dbg !17877
  br label %return, !dbg !17877

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !17878, !tbaa !2995
  %4 = load i64, i64* %n.addr, align 8, !dbg !17879, !tbaa !3848
  %call = call i8* @realloc(i8* %3, i64 %4) #10, !dbg !17880
  store i8* %call, i8** %p.addr, align 8, !dbg !17881, !tbaa !2995
  %5 = load i8*, i8** %p.addr, align 8, !dbg !17882, !tbaa !2995
  %tobool2 = icmp ne i8* %5, null, !dbg !17882
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !17884

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !17885, !tbaa !3848
  %tobool4 = icmp ne i64 %6, 0, !dbg !17885
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !17886

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #16, !dbg !17887
  unreachable, !dbg !17887

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !17888, !tbaa !2995
  store i8* %7, i8** %retval, align 8, !dbg !17889
  br label %return, !dbg !17889

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !17890
  ret i8* %8, !dbg !17890
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #4 !dbg !17891 !ctir !2020 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !55
  store i8* %p, i8** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17892, metadata !DIExpression()), !dbg !17893
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !17894, metadata !DIExpression()), !dbg !17895
  store i64 %s, i64* %s.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17896, metadata !DIExpression()), !dbg !17897
  call void @llvm.dbg.declare(metadata i64* %n, metadata !17898, metadata !DIExpression()), !dbg !17899
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !17900, !tbaa !2995
  %1 = load i64, i64* %0, align 8, !dbg !17901, !tbaa !3848, !ctir !55
  store i64 %1, i64* %n, align 8, !dbg !17899, !tbaa !3848
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17902, !tbaa !2995
  %tobool = icmp ne i8* %2, null, !dbg !17902
  br i1 %tobool, label %if.else, label %if.then, !dbg !17904

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !17905, !tbaa !3848
  %tobool1 = icmp ne i64 %3, 0, !dbg !17905
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !17908

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !17909, !tbaa !3848
  %div = udiv i64 128, %4, !dbg !17911
  store i64 %div, i64* %n, align 8, !dbg !17912, !tbaa !3848
  %5 = load i64, i64* %n, align 8, !dbg !17913, !tbaa !3848
  %tobool3 = icmp ne i64 %5, 0, !dbg !17914
  %lnot = xor i1 %tobool3, true, !dbg !17914
  %lnot.ext = zext i1 %lnot to i32, !dbg !17914
  %conv = sext i32 %lnot.ext to i64, !dbg !17914
  %6 = load i64, i64* %n, align 8, !dbg !17915, !tbaa !3848
  %add = add i64 %6, %conv, !dbg !17915
  store i64 %add, i64* %n, align 8, !dbg !17915, !tbaa !3848
  br label %if.end, !dbg !17916

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !17917, !tbaa !3848
  %div4 = udiv i64 9223372036854775807, %7, !dbg !17917
  %8 = load i64, i64* %n, align 8, !dbg !17917, !tbaa !3848
  %cmp = icmp ult i64 %div4, %8, !dbg !17917
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !17919

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #16, !dbg !17920
  unreachable, !dbg !17920

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !17921

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !17922, !tbaa !3848
  %div8 = udiv i64 6148914691236517204, %9, !dbg !17925
  %10 = load i64, i64* %n, align 8, !dbg !17926, !tbaa !3848
  %cmp9 = icmp ule i64 %div8, %10, !dbg !17927
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !17928

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #16, !dbg !17929
  unreachable, !dbg !17929

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !17930, !tbaa !3848
  %div13 = udiv i64 %11, 2, !dbg !17931
  %add14 = add i64 %div13, 1, !dbg !17932
  %12 = load i64, i64* %n, align 8, !dbg !17933, !tbaa !3848
  %add15 = add i64 %12, %add14, !dbg !17933
  store i64 %add15, i64* %n, align 8, !dbg !17933, !tbaa !3848
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !17934, !tbaa !3848
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !17935, !tbaa !2995
  store i64 %13, i64* %14, align 8, !dbg !17936, !tbaa !3848, !ctir !55
  %15 = load i8*, i8** %p.addr, align 8, !dbg !17937, !tbaa !2995
  %16 = load i64, i64* %n, align 8, !dbg !17938, !tbaa !3848
  %17 = load i64, i64* %s.addr, align 8, !dbg !17939, !tbaa !3848
  %mul = mul i64 %16, %17, !dbg !17940
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !17941
  ret i8* %call, !dbg !17942
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #4 !dbg !17943 !ctir !2022 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17944, metadata !DIExpression()), !dbg !17945
  %0 = load i64, i64* %n.addr, align 8, !dbg !17946, !tbaa !3848
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17946
  ret i8* %call, !dbg !17947
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #4 !dbg !17948 !ctir !2028 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17949, metadata !DIExpression()), !dbg !17950
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !17951, metadata !DIExpression()), !dbg !17952
  %0 = load i8*, i8** %p.addr, align 8, !dbg !17953, !tbaa !2995
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !17954, !tbaa !2995
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !17955
  ret i8* %call, !dbg !17956
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #4 !dbg !17957 !ctir !2024 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17958, metadata !DIExpression()), !dbg !17959
  %0 = load i64, i64* %s.addr, align 8, !dbg !17960, !tbaa !3848
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17961
  %1 = load i64, i64* %s.addr, align 8, !dbg !17962, !tbaa !3848
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !17963
  ret i8* %call, !dbg !17964
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #4 !dbg !17965 !ctir !2016 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !53
  store i64 %n, i64* %n.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17966, metadata !DIExpression()), !dbg !17967
  store i64 %s, i64* %s.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17968, metadata !DIExpression()), !dbg !17969
  call void @llvm.dbg.declare(metadata i8** %p, metadata !17970, metadata !DIExpression()), !dbg !17971
  %0 = load i64, i64* %s.addr, align 8, !dbg !17972, !tbaa !3848
  %div = udiv i64 9223372036854775807, %0, !dbg !17972
  %1 = load i64, i64* %n.addr, align 8, !dbg !17972, !tbaa !3848
  %cmp = icmp ult i64 %div, %1, !dbg !17972
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17974

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17975, !tbaa !3848
  %3 = load i64, i64* %s.addr, align 8, !dbg !17976, !tbaa !3848
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #10, !dbg !17977
  store i8* %call, i8** %p, align 8, !dbg !17978, !tbaa !2995
  %tobool = icmp ne i8* %call, null, !dbg !17978
  br i1 %tobool, label %if.end, label %if.then, !dbg !17979

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #16, !dbg !17980
  unreachable, !dbg !17980

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !17981, !tbaa !2995
  ret i8* %4, !dbg !17982
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #4 !dbg !17983 !ctir !423 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17984, metadata !DIExpression()), !dbg !17985
  store i64 %s, i64* %s.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17986, metadata !DIExpression()), !dbg !17987
  %0 = load i64, i64* %s.addr, align 8, !dbg !17988, !tbaa !3848
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17989
  %1 = load i8*, i8** %p.addr, align 8, !dbg !17990, !tbaa !2995
  %2 = load i64, i64* %s.addr, align 8, !dbg !17991, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !17992
  ret i8* %call, !dbg !17993
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #4 !dbg !17994 !ctir !988 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !17995, metadata !DIExpression()), !dbg !17996
  %0 = load i8*, i8** %string.addr, align 8, !dbg !17997, !tbaa !2995
  %1 = load i8*, i8** %string.addr, align 8, !dbg !17998, !tbaa !2995
  %call = call i64 @strlen(i8* %1) #14, !dbg !17999
  %add = add i64 %call, 1, !dbg !18000
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !18001
  ret i8* %call1, !dbg !18002
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #0 !dbg !18003 !ctir !134 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !18005, !tbaa !2982
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.416, i64 0, i64 0)) #10, !dbg !18006
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.417, i64 0, i64 0), i8* %call), !dbg !18007
  call void @abort() #13, !dbg !18008
  unreachable, !dbg !18008
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.FTS* @xfts_open(i8** %argv, i32 %options, i32 (%struct._ftsent**, %struct._ftsent**)* %compar) #4 !dbg !18009 !ctir !2036 {
entry:
  %argv.addr = alloca i8**, align 8
  %options.addr = alloca i32, align 4
  %compar.addr = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8
  %fts = alloca %struct.FTS*, align 8, !ctir !2038
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !18011, metadata !DIExpression()), !dbg !18012
  store i32 %options, i32* %options.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !18013, metadata !DIExpression()), !dbg !18014
  store i32 (%struct._ftsent**, %struct._ftsent**)* %compar, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, metadata !18015, metadata !DIExpression()), !dbg !18016
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts, metadata !18017, metadata !DIExpression()), !dbg !18018
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !18019, !tbaa !2995
  %1 = load i32, i32* %options.addr, align 4, !dbg !18020, !tbaa !2982
  %or = or i32 %1, 512, !dbg !18021
  %2 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18022, !tbaa !2995
  %call = call %struct.FTS* @rpl_fts_open(i8** %0, i32 %or, i32 (%struct._ftsent**, %struct._ftsent**)* %2), !dbg !18023
  store %struct.FTS* %call, %struct.FTS** %fts, align 8, !dbg !18018, !tbaa !2995
  %3 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !18024, !tbaa !2995
  %cmp = icmp eq %struct.FTS* %3, null, !dbg !18026
  br i1 %cmp, label %if.then, label %if.end4, !dbg !18027

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !18028
  %4 = load i32, i32* %call1, align 4, !dbg !18028, !tbaa !2982, !ctir !7
  %cmp2 = icmp ne i32 %4, 22, !dbg !18028
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !18032

if.then3:                                         ; preds = %if.then
  br label %if.end, !dbg !18032

if.else:                                          ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.420, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.421, i64 0, i64 0), i32 41, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__.xfts_open, i64 0, i64 0)) #13, !dbg !18028
  unreachable, !dbg !18028

if.end:                                           ; preds = %if.then3
  call void @xalloc_die() #16, !dbg !18033
  unreachable, !dbg !18033

if.end4:                                          ; preds = %entry
  %5 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !18034, !tbaa !2995
  ret %struct.FTS* %5, !dbg !18035
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @cycle_warning_required(%struct.FTS* %fts, %struct._ftsent* %ent) #9 !dbg !18036 !ctir !2127 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !18037, metadata !DIExpression()), !dbg !18038
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !18039, metadata !DIExpression()), !dbg !18040
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18041, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !18041, !ctir !2130
  %1 = load i32, i32* %fts_options, align 8, !dbg !18041, !tbaa !18042, !ctir !7
  %and = and i32 %1, 16, !dbg !18041
  %tobool = icmp ne i32 %and, 0, !dbg !18041
  br i1 %tobool, label %land.lhs.true, label %lor.rhs, !dbg !18043

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18044, !tbaa !2995
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !18044, !ctir !2130
  %3 = load i32, i32* %fts_options1, align 8, !dbg !18044, !tbaa !18042, !ctir !7
  %and2 = and i32 %3, 1, !dbg !18044
  %tobool3 = icmp ne i32 %and2, 0, !dbg !18044
  br i1 %tobool3, label %lor.rhs, label %lor.end, !dbg !18045

lor.rhs:                                          ; preds = %land.lhs.true, %entry
  %4 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18046, !tbaa !2995
  %fts_options4 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !18046, !ctir !2130
  %5 = load i32, i32* %fts_options4, align 8, !dbg !18046, !tbaa !18042, !ctir !7
  %and5 = and i32 %5, 16, !dbg !18046
  %tobool6 = icmp ne i32 %and5, 0, !dbg !18046
  br i1 %tobool6, label %land.lhs.true7, label %land.end, !dbg !18047

land.lhs.true7:                                   ; preds = %lor.rhs
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18048, !tbaa !2995
  %fts_options8 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 10, !dbg !18048, !ctir !2130
  %7 = load i32, i32* %fts_options8, align 8, !dbg !18048, !tbaa !18042, !ctir !7
  %and9 = and i32 %7, 1, !dbg !18048
  %tobool10 = icmp ne i32 %and9, 0, !dbg !18048
  br i1 %tobool10, label %land.rhs, label %land.end, !dbg !18049

land.rhs:                                         ; preds = %land.lhs.true7
  %8 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !18050, !tbaa !2995
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 12, !dbg !18051, !ctir !2125
  %9 = load i64, i64* %fts_level, align 8, !dbg !18051, !tbaa !3848, !ctir !566
  %cmp = icmp ne i64 %9, 0, !dbg !18052
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true7, %lor.rhs
  %10 = phi i1 [ false, %land.lhs.true7 ], [ false, %lor.rhs ], [ %cmp, %land.rhs ], !dbg !18053
  br label %lor.end, !dbg !18045

lor.end:                                          ; preds = %land.end, %land.lhs.true
  %11 = phi i1 [ true, %land.lhs.true ], [ %10, %land.end ]
  ret i1 %11, !dbg !18054
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xvasprintf(i8* %format, %struct.__va_list_tag* %args) #4 !dbg !18055 !ctir !2134 {
entry:
  %retval = alloca i8*, align 8
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %result = alloca i8*, align 8, !ctir !9
  %argcount = alloca i64, align 8, !ctir !55
  %f = alloca i8*, align 8, !ctir !115
  store i8* %format, i8** %format.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !18057, metadata !DIExpression()), !dbg !18058
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !18059, metadata !DIExpression()), !dbg !18060
  call void @llvm.dbg.declare(metadata i8** %result, metadata !18061, metadata !DIExpression()), !dbg !18062
  call void @llvm.dbg.declare(metadata i64* %argcount, metadata !18063, metadata !DIExpression()), !dbg !18065
  store i64 0, i64* %argcount, align 8, !dbg !18065, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8** %f, metadata !18066, metadata !DIExpression()), !dbg !18067
  %0 = load i8*, i8** %format.addr, align 8, !dbg !18068, !tbaa !2995
  store i8* %0, i8** %f, align 8, !dbg !18070, !tbaa !2995
  br label %for.cond, !dbg !18071

for.cond:                                         ; preds = %if.end11, %entry
  %1 = load i8*, i8** %f, align 8, !dbg !18072, !tbaa !2995
  %2 = load i8, i8* %1, align 1, !dbg !18076, !tbaa !3657, !ctir !116
  %conv = sext i8 %2 to i32, !dbg !18076
  %cmp = icmp eq i32 %conv, 0, !dbg !18077
  br i1 %cmp, label %if.then, label %if.end, !dbg !18078

if.then:                                          ; preds = %for.cond
  %3 = load i64, i64* %argcount, align 8, !dbg !18079, !tbaa !3848
  %4 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !18080, !tbaa !2995
  %call = call i8* @xstrcat(i64 %3, %struct.__va_list_tag* %4), !dbg !18081
  store i8* %call, i8** %retval, align 8, !dbg !18082
  br label %return, !dbg !18082

if.end:                                           ; preds = %for.cond
  %5 = load i8*, i8** %f, align 8, !dbg !18083, !tbaa !2995
  %6 = load i8, i8* %5, align 1, !dbg !18085, !tbaa !3657, !ctir !116
  %conv2 = sext i8 %6 to i32, !dbg !18085
  %cmp3 = icmp ne i32 %conv2, 37, !dbg !18086
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !18087

if.then5:                                         ; preds = %if.end
  br label %for.end, !dbg !18088

if.end6:                                          ; preds = %if.end
  %7 = load i8*, i8** %f, align 8, !dbg !18089, !tbaa !2995
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !18089
  store i8* %incdec.ptr, i8** %f, align 8, !dbg !18089, !tbaa !2995
  %8 = load i8*, i8** %f, align 8, !dbg !18090, !tbaa !2995
  %9 = load i8, i8* %8, align 1, !dbg !18092, !tbaa !3657, !ctir !116
  %conv7 = sext i8 %9 to i32, !dbg !18092
  %cmp8 = icmp ne i32 %conv7, 115, !dbg !18093
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !18094

if.then10:                                        ; preds = %if.end6
  br label %for.end, !dbg !18095

if.end11:                                         ; preds = %if.end6
  %10 = load i8*, i8** %f, align 8, !dbg !18096, !tbaa !2995
  %incdec.ptr12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !18096
  store i8* %incdec.ptr12, i8** %f, align 8, !dbg !18096, !tbaa !2995
  %11 = load i64, i64* %argcount, align 8, !dbg !18097, !tbaa !3848
  %inc = add i64 %11, 1, !dbg !18097
  store i64 %inc, i64* %argcount, align 8, !dbg !18097, !tbaa !3848
  br label %for.cond, !dbg !18098, !llvm.loop !18099

for.end:                                          ; preds = %if.then10, %if.then5
  %12 = load i8*, i8** %format.addr, align 8, !dbg !18102, !tbaa !2995
  %13 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !18104, !tbaa !2995
  %call13 = call i32 @vasprintf(i8** %result, i8* %12, %struct.__va_list_tag* %13) #10, !dbg !18105
  %cmp14 = icmp slt i32 %call13, 0, !dbg !18106
  br i1 %cmp14, label %if.then16, label %if.end22, !dbg !18107

if.then16:                                        ; preds = %for.end
  %call17 = call i32* @__errno_location() #15, !dbg !18108
  %14 = load i32, i32* %call17, align 4, !dbg !18108, !tbaa !2982, !ctir !7
  %cmp18 = icmp eq i32 %14, 12, !dbg !18111
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !18112

if.then20:                                        ; preds = %if.then16
  call void @xalloc_die() #16, !dbg !18113
  unreachable, !dbg !18113

if.end21:                                         ; preds = %if.then16
  store i8* null, i8** %retval, align 8, !dbg !18114
  br label %return, !dbg !18114

if.end22:                                         ; preds = %for.end
  %15 = load i8*, i8** %result, align 8, !dbg !18115, !tbaa !2995
  store i8* %15, i8** %retval, align 8, !dbg !18116
  br label %return, !dbg !18116

return:                                           ; preds = %if.end22, %if.end21, %if.then
  %16 = load i8*, i8** %retval, align 8, !dbg !18117
  ret i8* %16, !dbg !18117
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xstrcat(i64 %argcount, %struct.__va_list_tag* %args) #4 !dbg !18118 !ctir !2143 {
entry:
  %retval = alloca i8*, align 8
  %argcount.addr = alloca i64, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %result = alloca i8*, align 8, !ctir !9
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2145
  %totalsize = alloca i64, align 8, !ctir !55
  %i = alloca i64, align 8, !ctir !55
  %p = alloca i8*, align 8, !ctir !9
  %next = alloca i8*, align 8, !ctir !115
  %next12 = alloca i8*, align 8, !ctir !115
  %len = alloca i64, align 8, !ctir !55
  store i64 %argcount, i64* %argcount.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %argcount.addr, metadata !18119, metadata !DIExpression()), !dbg !18120
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !18121, metadata !DIExpression()), !dbg !18122
  call void @llvm.dbg.declare(metadata i8** %result, metadata !18123, metadata !DIExpression()), !dbg !18124
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !18125, metadata !DIExpression()), !dbg !18126
  call void @llvm.dbg.declare(metadata i64* %totalsize, metadata !18127, metadata !DIExpression()), !dbg !18128
  call void @llvm.dbg.declare(metadata i64* %i, metadata !18129, metadata !DIExpression()), !dbg !18130
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18131, metadata !DIExpression()), !dbg !18132
  store i64 0, i64* %totalsize, align 8, !dbg !18133, !tbaa !3848
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !18134
  %0 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !18134, !tbaa !2995
  %1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !18134
  %2 = bitcast %struct.__va_list_tag* %0 to i8*, !dbg !18134
  call void @llvm.va_copy(i8* %1, i8* %2), !dbg !18134
  %3 = load i64, i64* %argcount.addr, align 8, !dbg !18135, !tbaa !3848
  store i64 %3, i64* %i, align 8, !dbg !18137, !tbaa !3848
  br label %for.cond, !dbg !18138

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i64, i64* %i, align 8, !dbg !18139, !tbaa !3848
  %cmp = icmp ugt i64 %4, 0, !dbg !18141
  br i1 %cmp, label %for.body, label %for.end, !dbg !18142

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %next, metadata !18143, metadata !DIExpression()), !dbg !18145
  %arraydecay1 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !18146
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 0, !dbg !18146
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !18146
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !18146
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !18146

vaarg.in_reg:                                     ; preds = %for.body
  %5 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 3, !dbg !18146
  %reg_save_area = load i8*, i8** %5, align 16, !dbg !18146
  %6 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !18146
  %7 = bitcast i8* %6 to i8**, !dbg !18146
  %8 = add i32 %gp_offset, 8, !dbg !18146
  store i32 %8, i32* %gp_offset_p, align 16, !dbg !18146
  br label %vaarg.end, !dbg !18146

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 2, !dbg !18146
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !18146
  %9 = bitcast i8* %overflow_arg_area to i8**, !dbg !18146
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !18146
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !18146
  br label %vaarg.end, !dbg !18146

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %7, %vaarg.in_reg ], [ %9, %vaarg.in_mem ], !dbg !18146
  %10 = load i8*, i8** %vaarg.addr, align 8, !dbg !18146
  store i8* %10, i8** %next, align 8, !dbg !18145, !tbaa !2995
  %11 = load i64, i64* %totalsize, align 8, !dbg !18147, !tbaa !3848
  %12 = load i8*, i8** %next, align 8, !dbg !18148, !tbaa !2995
  %call = call i64 @strlen(i8* %12) #14, !dbg !18149
  %call2 = call i64 @xsum(i64 %11, i64 %call) #14, !dbg !18150
  store i64 %call2, i64* %totalsize, align 8, !dbg !18151, !tbaa !3848
  br label %for.inc, !dbg !18152

for.inc:                                          ; preds = %vaarg.end
  %13 = load i64, i64* %i, align 8, !dbg !18153, !tbaa !3848
  %dec = add i64 %13, -1, !dbg !18153
  store i64 %dec, i64* %i, align 8, !dbg !18153, !tbaa !3848
  br label %for.cond, !dbg !18154, !llvm.loop !18155

for.end:                                          ; preds = %for.cond
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !18157
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !18157
  call void @llvm.va_end(i8* %arraydecay34), !dbg !18157
  %14 = load i64, i64* %totalsize, align 8, !dbg !18158, !tbaa !3848
  %cmp5 = icmp eq i64 %14, -1, !dbg !18160
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !18161

lor.lhs.false:                                    ; preds = %for.end
  %15 = load i64, i64* %totalsize, align 8, !dbg !18162, !tbaa !3848
  %cmp6 = icmp ugt i64 %15, 2147483647, !dbg !18163
  br i1 %cmp6, label %if.then, label %if.end, !dbg !18164

if.then:                                          ; preds = %lor.lhs.false, %for.end
  %call7 = call i32* @__errno_location() #15, !dbg !18165
  store i32 75, i32* %call7, align 4, !dbg !18167, !tbaa !2982, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !18168
  br label %return, !dbg !18168

if.end:                                           ; preds = %lor.lhs.false
  %16 = load i64, i64* %totalsize, align 8, !dbg !18169, !tbaa !3848
  %add = add i64 %16, 1, !dbg !18169
  %call8 = call noalias i8* @xmalloc(i64 %add), !dbg !18169
  store i8* %call8, i8** %result, align 8, !dbg !18170, !tbaa !2995
  %17 = load i8*, i8** %result, align 8, !dbg !18171, !tbaa !2995
  store i8* %17, i8** %p, align 8, !dbg !18172, !tbaa !2995
  %18 = load i64, i64* %argcount.addr, align 8, !dbg !18173, !tbaa !3848
  store i64 %18, i64* %i, align 8, !dbg !18175, !tbaa !3848
  br label %for.cond9, !dbg !18176

for.cond9:                                        ; preds = %for.inc25, %if.end
  %19 = load i64, i64* %i, align 8, !dbg !18177, !tbaa !3848
  %cmp10 = icmp ugt i64 %19, 0, !dbg !18179
  br i1 %cmp10, label %for.body11, label %for.end27, !dbg !18180

for.body11:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata i8** %next12, metadata !18181, metadata !DIExpression()), !dbg !18183
  %20 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !18184, !tbaa !2995
  %gp_offset_p13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 0, !dbg !18184
  %gp_offset14 = load i32, i32* %gp_offset_p13, align 8, !dbg !18184
  %fits_in_gp15 = icmp ule i32 %gp_offset14, 40, !dbg !18184
  br i1 %fits_in_gp15, label %vaarg.in_reg16, label %vaarg.in_mem18, !dbg !18184

vaarg.in_reg16:                                   ; preds = %for.body11
  %21 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 3, !dbg !18184
  %reg_save_area17 = load i8*, i8** %21, align 8, !dbg !18184
  %22 = getelementptr i8, i8* %reg_save_area17, i32 %gp_offset14, !dbg !18184
  %23 = bitcast i8* %22 to i8**, !dbg !18184
  %24 = add i32 %gp_offset14, 8, !dbg !18184
  store i32 %24, i32* %gp_offset_p13, align 8, !dbg !18184
  br label %vaarg.end22, !dbg !18184

vaarg.in_mem18:                                   ; preds = %for.body11
  %overflow_arg_area_p19 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 2, !dbg !18184
  %overflow_arg_area20 = load i8*, i8** %overflow_arg_area_p19, align 8, !dbg !18184
  %25 = bitcast i8* %overflow_arg_area20 to i8**, !dbg !18184
  %overflow_arg_area.next21 = getelementptr i8, i8* %overflow_arg_area20, i32 8, !dbg !18184
  store i8* %overflow_arg_area.next21, i8** %overflow_arg_area_p19, align 8, !dbg !18184
  br label %vaarg.end22, !dbg !18184

vaarg.end22:                                      ; preds = %vaarg.in_mem18, %vaarg.in_reg16
  %vaarg.addr23 = phi i8** [ %23, %vaarg.in_reg16 ], [ %25, %vaarg.in_mem18 ], !dbg !18184
  %26 = load i8*, i8** %vaarg.addr23, align 8, !dbg !18184
  store i8* %26, i8** %next12, align 8, !dbg !18183, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18185, metadata !DIExpression()), !dbg !18186
  %27 = load i8*, i8** %next12, align 8, !dbg !18187, !tbaa !2995
  %call24 = call i64 @strlen(i8* %27) #14, !dbg !18188
  store i64 %call24, i64* %len, align 8, !dbg !18186, !tbaa !3848
  %28 = load i8*, i8** %p, align 8, !dbg !18189, !tbaa !2995
  %29 = load i8*, i8** %next12, align 8, !dbg !18190, !tbaa !2995
  %30 = load i64, i64* %len, align 8, !dbg !18191, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %30, i1 false), !dbg !18192
  %31 = load i64, i64* %len, align 8, !dbg !18193, !tbaa !3848
  %32 = load i8*, i8** %p, align 8, !dbg !18194, !tbaa !2995
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 %31, !dbg !18194
  store i8* %add.ptr, i8** %p, align 8, !dbg !18194, !tbaa !2995
  br label %for.inc25, !dbg !18195

for.inc25:                                        ; preds = %vaarg.end22
  %33 = load i64, i64* %i, align 8, !dbg !18196, !tbaa !3848
  %dec26 = add i64 %33, -1, !dbg !18196
  store i64 %dec26, i64* %i, align 8, !dbg !18196, !tbaa !3848
  br label %for.cond9, !dbg !18197, !llvm.loop !18198

for.end27:                                        ; preds = %for.cond9
  %34 = load i8*, i8** %p, align 8, !dbg !18200, !tbaa !2995
  store i8 0, i8* %34, align 1, !dbg !18201, !tbaa !3657, !ctir !10
  %35 = load i8*, i8** %result, align 8, !dbg !18202, !tbaa !2995
  store i8* %35, i8** %retval, align 8, !dbg !18203
  br label %return, !dbg !18203

return:                                           ; preds = %for.end27, %if.then
  %36 = load i8*, i8** %retval, align 8, !dbg !18204
  ret i8* %36, !dbg !18204
}

; Function Attrs: nounwind
declare dso_local i32 @vasprintf(i8**, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare void @llvm.va_copy(i8*, i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @yesno() #4 !dbg !18205 !ctir !1245 {
entry:
  %yes = alloca i8, align 1, !ctir !120
  %response = alloca i8*, align 8, !ctir !9
  %response_size = alloca i64, align 8, !ctir !55
  %response_len = alloca i64, align 8, !ctir !606
  call void @llvm.dbg.declare(metadata i8* %yes, metadata !18207, metadata !DIExpression()), !dbg !18208
  call void @llvm.dbg.declare(metadata i8** %response, metadata !18209, metadata !DIExpression()), !dbg !18210
  store i8* null, i8** %response, align 8, !dbg !18210, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %response_size, metadata !18211, metadata !DIExpression()), !dbg !18212
  store i64 0, i64* %response_size, align 8, !dbg !18212, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %response_len, metadata !18213, metadata !DIExpression()), !dbg !18214
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !18215, !tbaa !2995
  %call = call i64 @getline(i8** %response, i64* %response_size, %struct._IO_FILE* %0), !dbg !18216
  store i64 %call, i64* %response_len, align 8, !dbg !18214, !tbaa !3848
  %1 = load i64, i64* %response_len, align 8, !dbg !18217, !tbaa !3848
  %cmp = icmp sle i64 %1, 0, !dbg !18219
  br i1 %cmp, label %if.then, label %if.else, !dbg !18220

if.then:                                          ; preds = %entry
  store i8 0, i8* %yes, align 1, !dbg !18221, !tbaa !3106
  br label %if.end9, !dbg !18222

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %response, align 8, !dbg !18223, !tbaa !2995
  %3 = load i64, i64* %response_len, align 8, !dbg !18226, !tbaa !3848
  %sub = sub nsw i64 %3, 1, !dbg !18227
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !18223, !ctir !9
  %4 = load i8, i8* %arrayidx, align 1, !dbg !18223, !tbaa !3657
  %conv = sext i8 %4 to i32, !dbg !18223
  %cmp1 = icmp eq i32 %conv, 10, !dbg !18228
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !18229

if.then3:                                         ; preds = %if.else
  %5 = load i8*, i8** %response, align 8, !dbg !18230, !tbaa !2995
  %6 = load i64, i64* %response_len, align 8, !dbg !18231, !tbaa !3848
  %sub4 = sub nsw i64 %6, 1, !dbg !18232
  %arrayidx5 = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !18230, !ctir !9
  store i8 0, i8* %arrayidx5, align 1, !dbg !18233, !tbaa !3657
  br label %if.end, !dbg !18230

if.end:                                           ; preds = %if.then3, %if.else
  %7 = load i8*, i8** %response, align 8, !dbg !18234, !tbaa !2995
  %call6 = call i32 @rpmatch(i8* %7) #10, !dbg !18235
  %cmp7 = icmp slt i32 0, %call6, !dbg !18236
  %frombool = zext i1 %cmp7 to i8, !dbg !18237
  store i8 %frombool, i8* %yes, align 1, !dbg !18237, !tbaa !3106
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %response, align 8, !dbg !18238, !tbaa !2995
  call void @free(i8* %8) #10, !dbg !18239
  %9 = load i8, i8* %yes, align 1, !dbg !18240, !tbaa !3106
  %tobool = trunc i8 %9 to i1, !dbg !18240
  ret i1 %tobool, !dbg !18241
}

declare dso_local i64 @getline(i8**, i64*, %struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @rpmatch(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #4 !dbg !18242 !ctir !2189 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18244, metadata !DIExpression()), !dbg !18245
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18246, !tbaa !2995
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !18248
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18249

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18250, !tbaa !2995
  %call = call i32 @__freading(%struct._IO_FILE* %1) #10, !dbg !18250
  %cmp1 = icmp ne i32 %call, 0, !dbg !18250
  br i1 %cmp1, label %if.end, label %if.then, !dbg !18251

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18252, !tbaa !2995
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !18253
  store i32 %call2, i32* %retval, align 4, !dbg !18254
  br label %return, !dbg !18254

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18255, !tbaa !2995
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !18256
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18257, !tbaa !2995
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !18258
  store i32 %call3, i32* %retval, align 4, !dbg !18259
  br label %return, !dbg !18259

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !18260
  ret i32 %5, !dbg !18260
}

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #4 !dbg !18261 !ctir !2225 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18262, metadata !DIExpression()), !dbg !18263
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18264, !tbaa !2995
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !18266, !ctir !2192
  %1 = load i32, i32* %_flags, align 8, !dbg !18266, !tbaa !18267, !ctir !7
  %and = and i32 %1, 256, !dbg !18269
  %tobool = icmp ne i32 %and, 0, !dbg !18269
  br i1 %tobool, label %if.then, label %if.end, !dbg !18270

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18271, !tbaa !2995
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !18272
  br label %if.end, !dbg !18272

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !18273
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @freadahead(%struct._IO_FILE* %fp) #9 !dbg !18274 !ctir !2230 {
entry:
  %retval = alloca i64, align 8
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18276, metadata !DIExpression()), !dbg !18277
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18278, !tbaa !2995
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 5, !dbg !18280, !ctir !2233
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !18280, !tbaa !18281, !ctir !9
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18282, !tbaa !2995
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 4, !dbg !18283, !ctir !2233
  %3 = load i8*, i8** %_IO_write_base, align 8, !dbg !18283, !tbaa !18284, !ctir !9
  %cmp = icmp ugt i8* %1, %3, !dbg !18285
  br i1 %cmp, label %if.then, label %if.end, !dbg !18286

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !18287
  br label %return, !dbg !18287

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18288, !tbaa !2995
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 2, !dbg !18289, !ctir !2233
  %5 = load i8*, i8** %_IO_read_end, align 8, !dbg !18289, !tbaa !18290, !ctir !9
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18291, !tbaa !2995
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 1, !dbg !18292, !ctir !2233
  %7 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !18292, !tbaa !18293, !ctir !9
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !18294
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !18294
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !18294
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18295, !tbaa !2995
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 0, !dbg !18296, !ctir !2233
  %9 = load i32, i32* %_flags, align 8, !dbg !18296, !tbaa !18267, !ctir !7
  %and = and i32 %9, 256, !dbg !18297
  %tobool = icmp ne i32 %and, 0, !dbg !18297
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18295

cond.true:                                        ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18298, !tbaa !2995
  %_IO_save_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %10, i32 0, i32 11, !dbg !18299, !ctir !2233
  %11 = load i8*, i8** %_IO_save_end, align 8, !dbg !18299, !tbaa !18300, !ctir !9
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18301, !tbaa !2995
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 9, !dbg !18302, !ctir !2233
  %13 = load i8*, i8** %_IO_save_base, align 8, !dbg !18302, !tbaa !18303, !ctir !9
  %sub.ptr.lhs.cast1 = ptrtoint i8* %11 to i64, !dbg !18304
  %sub.ptr.rhs.cast2 = ptrtoint i8* %13 to i64, !dbg !18304
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !18304
  br label %cond.end, !dbg !18295

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !18295

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub.ptr.sub3, %cond.true ], [ 0, %cond.false ], !dbg !18295
  %add = add nsw i64 %sub.ptr.sub, %cond, !dbg !18305
  store i64 %add, i64* %retval, align 8, !dbg !18306
  br label %return, !dbg !18306

return:                                           ; preds = %cond.end, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !18307
  ret i64 %14, !dbg !18307
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #4 !dbg !18308 !ctir !2269 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %pos = alloca i64, align 8, !ctir !248
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18310, metadata !DIExpression()), !dbg !18311
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !18312, metadata !DIExpression()), !dbg !18313
  store i32 %whence, i32* %whence.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !18314, metadata !DIExpression()), !dbg !18315
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18316, !tbaa !2995
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !18318, !ctir !2272
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !18318, !tbaa !18290, !ctir !9
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18319, !tbaa !2995
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !18320, !ctir !2272
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !18320, !tbaa !18293, !ctir !9
  %cmp = icmp eq i8* %1, %3, !dbg !18321
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !18322

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18323, !tbaa !2995
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !18324, !ctir !2272
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !18324, !tbaa !18281, !ctir !9
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18325, !tbaa !2995
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !18326, !ctir !2272
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !18326, !tbaa !18284, !ctir !9
  %cmp1 = icmp eq i8* %5, %7, !dbg !18327
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !18328

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18329, !tbaa !2995
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !18330, !ctir !2272
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !18330, !tbaa !18303, !ctir !9
  %cmp3 = icmp eq i8* %9, null, !dbg !18331
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !18332

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !18333, metadata !DIExpression()), !dbg !18335
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18336, !tbaa !2995
  %call = call i32 @fileno(%struct._IO_FILE* %10) #10, !dbg !18337
  %11 = load i64, i64* %offset.addr, align 8, !dbg !18338, !tbaa !3848
  %12 = load i32, i32* %whence.addr, align 4, !dbg !18339, !tbaa !2982
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #10, !dbg !18340
  store i64 %call4, i64* %pos, align 8, !dbg !18335, !tbaa !3848
  %13 = load i64, i64* %pos, align 8, !dbg !18341, !tbaa !3848
  %cmp5 = icmp eq i64 %13, -1, !dbg !18343
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !18344

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !18345
  br label %return, !dbg !18345

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18347, !tbaa !2995
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !18348, !ctir !2272
  %15 = load i32, i32* %_flags, align 8, !dbg !18349, !tbaa !18267, !ctir !7
  %and = and i32 %15, -17, !dbg !18349
  store i32 %and, i32* %_flags, align 8, !dbg !18349, !tbaa !18267, !ctir !7
  %16 = load i64, i64* %pos, align 8, !dbg !18350, !tbaa !3848
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18351, !tbaa !2995
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !18352, !ctir !2272
  store i64 %16, i64* %_offset, align 8, !dbg !18353, !tbaa !18354, !ctir !44
  store i32 0, i32* %retval, align 4, !dbg !18355
  br label %return, !dbg !18355

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18356, !tbaa !2995
  %19 = load i64, i64* %offset.addr, align 8, !dbg !18357, !tbaa !3848
  %20 = load i32, i32* %whence.addr, align 4, !dbg !18358, !tbaa !2982
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !18359
  store i32 %call8, i32* %retval, align 4, !dbg !18360
  br label %return, !dbg !18360

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !18361
  ret i32 %21, !dbg !18361
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.FTS* @rpl_fts_open(i8** %argv, i32 %options, i32 (%struct._ftsent**, %struct._ftsent**)* %compar) #4 !dbg !18362 !ctir !2412 {
entry:
  %retval = alloca %struct.FTS*, align 8
  %argv.addr = alloca i8**, align 8
  %options.addr = alloca i32, align 4
  %compar.addr = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8
  %sp = alloca %struct.FTS*, align 8, !ctir !2334
  %p = alloca %struct._ftsent*, align 8, !ctir !2417
  %root = alloca %struct._ftsent*, align 8, !ctir !2417
  %nitems = alloca i64, align 8, !ctir !55
  %parent = alloca %struct._ftsent*, align 8, !ctir !2417
  %tmp = alloca %struct._ftsent*, align 8, !ctir !2417
  %defer_stat = alloca i8, align 1, !ctir !120
  %fd = alloca i32, align 4, !ctir !7
  %maxarglen = alloca i64, align 8, !ctir !55
  %len = alloca i64, align 8, !ctir !55
  %v = alloca i8*, align 8, !ctir !115
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !18363, metadata !DIExpression()), !dbg !18364
  store i32 %options, i32* %options.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !18365, metadata !DIExpression()), !dbg !18366
  store i32 (%struct._ftsent**, %struct._ftsent**)* %compar, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, metadata !18367, metadata !DIExpression()), !dbg !18368
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp, metadata !18369, metadata !DIExpression()), !dbg !18370
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18371, metadata !DIExpression()), !dbg !18372
  call void @llvm.dbg.declare(metadata %struct._ftsent** %root, metadata !18373, metadata !DIExpression()), !dbg !18374
  call void @llvm.dbg.declare(metadata i64* %nitems, metadata !18375, metadata !DIExpression()), !dbg !18376
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !18377, metadata !DIExpression()), !dbg !18378
  store %struct._ftsent* null, %struct._ftsent** %parent, align 8, !dbg !18378, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tmp, metadata !18379, metadata !DIExpression()), !dbg !18380
  store %struct._ftsent* null, %struct._ftsent** %tmp, align 8, !dbg !18380, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8* %defer_stat, metadata !18381, metadata !DIExpression()), !dbg !18382
  %0 = load i32, i32* %options.addr, align 4, !dbg !18383, !tbaa !2982
  %and = and i32 %0, -4096, !dbg !18385
  %tobool = icmp ne i32 %and, 0, !dbg !18385
  br i1 %tobool, label %if.then, label %if.end, !dbg !18386

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #15, !dbg !18387
  store i32 22, i32* %call, align 4, !dbg !18387, !tbaa !2982, !ctir !7
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18389
  br label %return, !dbg !18389

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %options.addr, align 4, !dbg !18390, !tbaa !2982
  %and1 = and i32 %1, 4, !dbg !18392
  %tobool2 = icmp ne i32 %and1, 0, !dbg !18392
  br i1 %tobool2, label %land.lhs.true, label %if.end7, !dbg !18393

land.lhs.true:                                    ; preds = %if.end
  %2 = load i32, i32* %options.addr, align 4, !dbg !18394, !tbaa !2982
  %and3 = and i32 %2, 512, !dbg !18395
  %tobool4 = icmp ne i32 %and3, 0, !dbg !18395
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !18396

if.then5:                                         ; preds = %land.lhs.true
  %call6 = call i32* @__errno_location() #15, !dbg !18397
  store i32 22, i32* %call6, align 4, !dbg !18397, !tbaa !2982, !ctir !7
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18399
  br label %return, !dbg !18399

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %3 = load i32, i32* %options.addr, align 4, !dbg !18400, !tbaa !2982
  %and8 = and i32 %3, 18, !dbg !18402
  %tobool9 = icmp ne i32 %and8, 0, !dbg !18402
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !18403

if.then10:                                        ; preds = %if.end7
  %call11 = call i32* @__errno_location() #15, !dbg !18404
  store i32 22, i32* %call11, align 4, !dbg !18404, !tbaa !2982, !ctir !7
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18406
  br label %return, !dbg !18406

if.end12:                                         ; preds = %if.end7
  %call13 = call noalias i8* @malloc(i64 128) #10, !dbg !18407
  %4 = bitcast i8* %call13 to %struct.FTS*, !dbg !18407
  store %struct.FTS* %4, %struct.FTS** %sp, align 8, !dbg !18409, !tbaa !2995
  %cmp = icmp eq %struct.FTS* %4, null, !dbg !18410
  br i1 %cmp, label %if.then14, label %if.end15, !dbg !18411

if.then14:                                        ; preds = %if.end12
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18412
  br label %return, !dbg !18412

if.end15:                                         ; preds = %if.end12
  %5 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18413, !tbaa !2995
  %6 = bitcast %struct.FTS* %5 to i8*, !dbg !18414
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 128, i1 false), !dbg !18414
  %7 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18415, !tbaa !2995
  %8 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18416, !tbaa !2995
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %8, i32 0, i32 9, !dbg !18417, !ctir !2335
  store i32 (%struct._ftsent**, %struct._ftsent**)* %7, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !18418, !tbaa !18419, !ctir !2349
  %9 = load i32, i32* %options.addr, align 4, !dbg !18420, !tbaa !2982
  %10 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18421, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 10, !dbg !18422, !ctir !2335
  store i32 %9, i32* %fts_options, align 8, !dbg !18423, !tbaa !18042, !ctir !7
  %11 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18424, !tbaa !2995
  %fts_options16 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 10, !dbg !18424, !ctir !2335
  %12 = load i32, i32* %fts_options16, align 8, !dbg !18424, !tbaa !18042, !ctir !7
  %and17 = and i32 %12, 2, !dbg !18424
  %tobool18 = icmp ne i32 %and17, 0, !dbg !18424
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !18426

if.then19:                                        ; preds = %if.end15
  %13 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18427, !tbaa !2995
  %fts_options20 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 10, !dbg !18427, !ctir !2335
  %14 = load i32, i32* %fts_options20, align 8, !dbg !18427, !tbaa !18042, !ctir !7
  %or = or i32 %14, 4, !dbg !18427
  store i32 %or, i32* %fts_options20, align 8, !dbg !18427, !tbaa !18042, !ctir !7
  %15 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18429, !tbaa !2995
  %fts_options21 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 10, !dbg !18429, !ctir !2335
  %16 = load i32, i32* %fts_options21, align 8, !dbg !18429, !tbaa !18042, !ctir !7
  %and22 = and i32 %16, -513, !dbg !18429
  store i32 %and22, i32* %fts_options21, align 8, !dbg !18429, !tbaa !18042, !ctir !7
  br label %if.end23, !dbg !18430

if.end23:                                         ; preds = %if.then19, %if.end15
  %17 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18431, !tbaa !2995
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 6, !dbg !18432, !ctir !2335
  store i32 -100, i32* %fts_cwd_fd, align 4, !dbg !18433, !tbaa !3823, !ctir !7
  %18 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18434, !tbaa !2995
  %fts_options24 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 10, !dbg !18434, !ctir !2335
  %19 = load i32, i32* %fts_options24, align 8, !dbg !18434, !tbaa !18042, !ctir !7
  %and25 = and i32 %19, 512, !dbg !18434
  %tobool26 = icmp ne i32 %and25, 0, !dbg !18434
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !18436

land.lhs.true27:                                  ; preds = %if.end23
  br i1 true, label %if.end34, label %if.then28, !dbg !18437

if.then28:                                        ; preds = %land.lhs.true27
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !18438, metadata !DIExpression()), !dbg !18440
  %call29 = call i32 (i8*, i32, ...) @open_safer(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.434, i64 0, i64 0), i32 0), !dbg !18441
  store i32 %call29, i32* %fd, align 4, !dbg !18440, !tbaa !2982
  %20 = load i32, i32* %fd, align 4, !dbg !18442, !tbaa !2982
  %cmp30 = icmp slt i32 %20, 0, !dbg !18444
  br i1 %cmp30, label %if.then31, label %if.else, !dbg !18445

if.then31:                                        ; preds = %if.then28
  br label %if.end33, !dbg !18446

if.else:                                          ; preds = %if.then28
  %21 = load i32, i32* %fd, align 4, !dbg !18448, !tbaa !2982
  %call32 = call i32 @close(i32 %21), !dbg !18450
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then31
  br label %if.end34, !dbg !18451

if.end34:                                         ; preds = %if.end33, %land.lhs.true27, %if.end23
  call void @llvm.dbg.declare(metadata i64* %maxarglen, metadata !18452, metadata !DIExpression()), !dbg !18454
  %22 = load i8**, i8*** %argv.addr, align 8, !dbg !18455, !tbaa !2995
  %call35 = call i64 @fts_maxarglen(i8** %22), !dbg !18456
  store i64 %call35, i64* %maxarglen, align 8, !dbg !18454, !tbaa !3848
  %23 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18457, !tbaa !2995
  %24 = load i64, i64* %maxarglen, align 8, !dbg !18459, !tbaa !3848
  %cmp36 = icmp ugt i64 %24, 4096, !dbg !18459
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !18459

cond.true:                                        ; preds = %if.end34
  %25 = load i64, i64* %maxarglen, align 8, !dbg !18459, !tbaa !3848
  br label %cond.end, !dbg !18459

cond.false:                                       ; preds = %if.end34
  br label %cond.end, !dbg !18459

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %25, %cond.true ], [ 4096, %cond.false ], !dbg !18459
  %call37 = call zeroext i1 @fts_palloc(%struct.FTS* %23, i64 %cond), !dbg !18460
  br i1 %call37, label %if.end39, label %if.then38, !dbg !18461

if.then38:                                        ; preds = %cond.end
  br label %mem1, !dbg !18462

if.end39:                                         ; preds = %cond.end
  %26 = load i8**, i8*** %argv.addr, align 8, !dbg !18463, !tbaa !2995
  %27 = load i8*, i8** %26, align 8, !dbg !18465, !tbaa !2995, !ctir !1338
  %cmp40 = icmp ne i8* %27, null, !dbg !18466
  br i1 %cmp40, label %if.then41, label %if.end46, !dbg !18467

if.then41:                                        ; preds = %if.end39
  %28 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18468, !tbaa !2995
  %call42 = call %struct._ftsent* @fts_alloc(%struct.FTS* %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.435, i64 0, i64 0), i64 0), !dbg !18471
  store %struct._ftsent* %call42, %struct._ftsent** %parent, align 8, !dbg !18472, !tbaa !2995
  %cmp43 = icmp eq %struct._ftsent* %call42, null, !dbg !18473
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !18474

if.then44:                                        ; preds = %if.then41
  br label %mem2, !dbg !18475

if.end45:                                         ; preds = %if.then41
  %29 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18476, !tbaa !2995
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 12, !dbg !18477, !ctir !2318
  store i64 -1, i64* %fts_level, align 8, !dbg !18478, !tbaa !3848, !ctir !566
  %30 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18479, !tbaa !2995
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 14, !dbg !18480, !ctir !2318
  store i64 -1, i64* %fts_n_dirs_remaining, align 8, !dbg !18481, !tbaa !3848, !ctir !1382
  br label %if.end46, !dbg !18482

if.end46:                                         ; preds = %if.end45, %if.end39
  %31 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18483, !tbaa !2995
  %cmp47 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %31, null, !dbg !18484
  br i1 %cmp47, label %lor.end, label %lor.rhs, !dbg !18485

lor.rhs:                                          ; preds = %if.end46
  %32 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18486, !tbaa !2995
  %fts_options48 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 10, !dbg !18486, !ctir !2335
  %33 = load i32, i32* %fts_options48, align 8, !dbg !18486, !tbaa !18042, !ctir !7
  %and49 = and i32 %33, 1024, !dbg !18486
  %tobool50 = icmp ne i32 %and49, 0, !dbg !18485
  br label %lor.end, !dbg !18485

lor.end:                                          ; preds = %lor.rhs, %if.end46
  %34 = phi i1 [ true, %if.end46 ], [ %tobool50, %lor.rhs ]
  %frombool = zext i1 %34 to i8, !dbg !18487
  store i8 %frombool, i8* %defer_stat, align 1, !dbg !18487, !tbaa !3106
  store %struct._ftsent* null, %struct._ftsent** %root, align 8, !dbg !18488, !tbaa !2995
  store i64 0, i64* %nitems, align 8, !dbg !18490, !tbaa !3848
  br label %for.cond, !dbg !18491

for.cond:                                         ; preds = %for.inc, %lor.end
  %35 = load i8**, i8*** %argv.addr, align 8, !dbg !18492, !tbaa !2995
  %36 = load i8*, i8** %35, align 8, !dbg !18494, !tbaa !2995, !ctir !1338
  %cmp51 = icmp ne i8* %36, null, !dbg !18495
  br i1 %cmp51, label %for.body, label %for.end, !dbg !18496

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18497, metadata !DIExpression()), !dbg !18499
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !18500, !tbaa !2995
  %38 = load i8*, i8** %37, align 8, !dbg !18501, !tbaa !2995, !ctir !1338
  %call52 = call i64 @strlen(i8* %38) #14, !dbg !18502
  store i64 %call52, i64* %len, align 8, !dbg !18499, !tbaa !3848
  %39 = load i32, i32* %options.addr, align 4, !dbg !18503, !tbaa !2982
  %and53 = and i32 %39, 2048, !dbg !18505
  %tobool54 = icmp ne i32 %and53, 0, !dbg !18505
  br i1 %tobool54, label %if.end69, label %if.then55, !dbg !18506

if.then55:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %v, metadata !18507, metadata !DIExpression()), !dbg !18509
  %40 = load i8**, i8*** %argv.addr, align 8, !dbg !18510, !tbaa !2995
  %41 = load i8*, i8** %40, align 8, !dbg !18511, !tbaa !2995, !ctir !1338
  store i8* %41, i8** %v, align 8, !dbg !18509, !tbaa !2995
  %42 = load i64, i64* %len, align 8, !dbg !18512, !tbaa !3848
  %cmp56 = icmp ult i64 2, %42, !dbg !18514
  br i1 %cmp56, label %land.lhs.true57, label %if.end68, !dbg !18515

land.lhs.true57:                                  ; preds = %if.then55
  %43 = load i8*, i8** %v, align 8, !dbg !18516, !tbaa !2995
  %44 = load i64, i64* %len, align 8, !dbg !18517, !tbaa !3848
  %sub = sub i64 %44, 1, !dbg !18518
  %arrayidx = getelementptr inbounds i8, i8* %43, i64 %sub, !dbg !18516, !ctir !115
  %45 = load i8, i8* %arrayidx, align 1, !dbg !18516, !tbaa !3657
  %conv = sext i8 %45 to i32, !dbg !18516
  %cmp58 = icmp eq i32 %conv, 47, !dbg !18519
  br i1 %cmp58, label %if.then60, label %if.end68, !dbg !18520

if.then60:                                        ; preds = %land.lhs.true57
  br label %while.cond, !dbg !18521

while.cond:                                       ; preds = %while.body, %if.then60
  %46 = load i64, i64* %len, align 8, !dbg !18522, !tbaa !3848
  %cmp61 = icmp ult i64 1, %46, !dbg !18523
  br i1 %cmp61, label %land.rhs, label %land.end, !dbg !18524

land.rhs:                                         ; preds = %while.cond
  %47 = load i8*, i8** %v, align 8, !dbg !18525, !tbaa !2995
  %48 = load i64, i64* %len, align 8, !dbg !18526, !tbaa !3848
  %sub63 = sub i64 %48, 2, !dbg !18527
  %arrayidx64 = getelementptr inbounds i8, i8* %47, i64 %sub63, !dbg !18525, !ctir !115
  %49 = load i8, i8* %arrayidx64, align 1, !dbg !18525, !tbaa !3657
  %conv65 = sext i8 %49 to i32, !dbg !18525
  %cmp66 = icmp eq i32 %conv65, 47, !dbg !18528
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %50 = phi i1 [ false, %while.cond ], [ %cmp66, %land.rhs ], !dbg !18529
  br i1 %50, label %while.body, label %while.end, !dbg !18521

while.body:                                       ; preds = %land.end
  %51 = load i64, i64* %len, align 8, !dbg !18530, !tbaa !3848
  %dec = add i64 %51, -1, !dbg !18530
  store i64 %dec, i64* %len, align 8, !dbg !18530, !tbaa !3848
  br label %while.cond, !dbg !18521, !llvm.loop !18531

while.end:                                        ; preds = %land.end
  br label %if.end68, !dbg !18521

if.end68:                                         ; preds = %while.end, %land.lhs.true57, %if.then55
  br label %if.end69, !dbg !18533

if.end69:                                         ; preds = %if.end68, %for.body
  %52 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18534, !tbaa !2995
  %53 = load i8**, i8*** %argv.addr, align 8, !dbg !18536, !tbaa !2995
  %54 = load i8*, i8** %53, align 8, !dbg !18537, !tbaa !2995, !ctir !1338
  %55 = load i64, i64* %len, align 8, !dbg !18538, !tbaa !3848
  %call70 = call %struct._ftsent* @fts_alloc(%struct.FTS* %52, i8* %54, i64 %55), !dbg !18539
  store %struct._ftsent* %call70, %struct._ftsent** %p, align 8, !dbg !18540, !tbaa !2995
  %cmp71 = icmp eq %struct._ftsent* %call70, null, !dbg !18541
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !18542

if.then73:                                        ; preds = %if.end69
  br label %mem3, !dbg !18543

if.end74:                                         ; preds = %if.end69
  %56 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18544, !tbaa !2995
  %fts_level75 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %56, i32 0, i32 12, !dbg !18545, !ctir !2318
  store i64 0, i64* %fts_level75, align 8, !dbg !18546, !tbaa !3848, !ctir !566
  %57 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18547, !tbaa !2995
  %58 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18548, !tbaa !2995
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %58, i32 0, i32 1, !dbg !18549, !ctir !2318
  store %struct._ftsent* %57, %struct._ftsent** %fts_parent, align 8, !dbg !18550, !tbaa !2995, !ctir !2322
  %59 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18551, !tbaa !2995
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %59, i32 0, i32 19, !dbg !18552, !ctir !2318
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !18551
  %60 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18553, !tbaa !2995
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %60, i32 0, i32 6, !dbg !18554, !ctir !2318
  store i8* %arraydecay, i8** %fts_accpath, align 8, !dbg !18555, !tbaa !2995, !ctir !9
  %61 = load i8, i8* %defer_stat, align 1, !dbg !18556, !tbaa !3106
  %tobool76 = trunc i8 %61 to i1, !dbg !18556
  br i1 %tobool76, label %land.lhs.true78, label %if.else82, !dbg !18558

land.lhs.true78:                                  ; preds = %if.end74
  %62 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18559, !tbaa !2995
  %cmp79 = icmp ne %struct._ftsent* %62, null, !dbg !18560
  br i1 %cmp79, label %if.then81, label %if.else82, !dbg !18561

if.then81:                                        ; preds = %land.lhs.true78
  %63 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18562, !tbaa !2995
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %63, i32 0, i32 15, !dbg !18564, !ctir !2318
  store i16 11, i16* %fts_info, align 8, !dbg !18565, !tbaa !3810, !ctir !33
  %64 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18566, !tbaa !2995
  call void @fts_set_stat_required(%struct._ftsent* %64, i1 zeroext true), !dbg !18567
  br label %if.end85, !dbg !18568

if.else82:                                        ; preds = %land.lhs.true78, %if.end74
  %65 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18569, !tbaa !2995
  %66 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18571, !tbaa !2995
  %call83 = call zeroext i16 @fts_stat(%struct.FTS* %65, %struct._ftsent* %66, i1 zeroext false), !dbg !18572
  %67 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18573, !tbaa !2995
  %fts_info84 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %67, i32 0, i32 15, !dbg !18574, !ctir !2318
  store i16 %call83, i16* %fts_info84, align 8, !dbg !18575, !tbaa !3810, !ctir !33
  br label %if.end85

if.end85:                                         ; preds = %if.else82, %if.then81
  %68 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18576, !tbaa !2995
  %tobool86 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %68, null, !dbg !18576
  br i1 %tobool86, label %if.then87, label %if.else88, !dbg !18578

if.then87:                                        ; preds = %if.end85
  %69 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18579, !tbaa !2995
  %70 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18581, !tbaa !2995
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %70, i32 0, i32 2, !dbg !18582, !ctir !2318
  store %struct._ftsent* %69, %struct._ftsent** %fts_link, align 8, !dbg !18583, !tbaa !2995, !ctir !2322
  %71 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18584, !tbaa !2995
  store %struct._ftsent* %71, %struct._ftsent** %root, align 8, !dbg !18585, !tbaa !2995
  br label %if.end96, !dbg !18586

if.else88:                                        ; preds = %if.end85
  %72 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18587, !tbaa !2995
  %fts_link89 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %72, i32 0, i32 2, !dbg !18589, !ctir !2318
  store %struct._ftsent* null, %struct._ftsent** %fts_link89, align 8, !dbg !18590, !tbaa !2995, !ctir !2322
  %73 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18591, !tbaa !2995
  %cmp90 = icmp eq %struct._ftsent* %73, null, !dbg !18593
  br i1 %cmp90, label %if.then92, label %if.else93, !dbg !18594

if.then92:                                        ; preds = %if.else88
  %74 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18595, !tbaa !2995
  store %struct._ftsent* %74, %struct._ftsent** %root, align 8, !dbg !18596, !tbaa !2995
  store %struct._ftsent* %74, %struct._ftsent** %tmp, align 8, !dbg !18597, !tbaa !2995
  br label %if.end95, !dbg !18598

if.else93:                                        ; preds = %if.else88
  %75 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18599, !tbaa !2995
  %76 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !18601, !tbaa !2995
  %fts_link94 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %76, i32 0, i32 2, !dbg !18602, !ctir !2318
  store %struct._ftsent* %75, %struct._ftsent** %fts_link94, align 8, !dbg !18603, !tbaa !2995, !ctir !2322
  %77 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18604, !tbaa !2995
  store %struct._ftsent* %77, %struct._ftsent** %tmp, align 8, !dbg !18605, !tbaa !2995
  br label %if.end95

if.end95:                                         ; preds = %if.else93, %if.then92
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then87
  br label %for.inc, !dbg !18606

for.inc:                                          ; preds = %if.end96
  %78 = load i8**, i8*** %argv.addr, align 8, !dbg !18607, !tbaa !2995
  %incdec.ptr = getelementptr inbounds i8*, i8** %78, i32 1, !dbg !18607
  store i8** %incdec.ptr, i8*** %argv.addr, align 8, !dbg !18607, !tbaa !2995
  %79 = load i64, i64* %nitems, align 8, !dbg !18608, !tbaa !3848
  %inc = add i64 %79, 1, !dbg !18608
  store i64 %inc, i64* %nitems, align 8, !dbg !18608, !tbaa !3848
  br label %for.cond, !dbg !18609, !llvm.loop !18610

for.end:                                          ; preds = %for.cond
  %80 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18612, !tbaa !2995
  %tobool97 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %80, null, !dbg !18612
  br i1 %tobool97, label %land.lhs.true98, label %if.end103, !dbg !18614

land.lhs.true98:                                  ; preds = %for.end
  %81 = load i64, i64* %nitems, align 8, !dbg !18615, !tbaa !3848
  %cmp99 = icmp ugt i64 %81, 1, !dbg !18616
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !18617

if.then101:                                       ; preds = %land.lhs.true98
  %82 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18618, !tbaa !2995
  %83 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18619, !tbaa !2995
  %84 = load i64, i64* %nitems, align 8, !dbg !18620, !tbaa !3848
  %call102 = call %struct._ftsent* @fts_sort(%struct.FTS* %82, %struct._ftsent* %83, i64 %84), !dbg !18621
  store %struct._ftsent* %call102, %struct._ftsent** %root, align 8, !dbg !18622, !tbaa !2995
  br label %if.end103, !dbg !18623

if.end103:                                        ; preds = %if.then101, %land.lhs.true98, %for.end
  %85 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18624, !tbaa !2995
  %call104 = call %struct._ftsent* @fts_alloc(%struct.FTS* %85, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.435, i64 0, i64 0), i64 0), !dbg !18626
  %86 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18627, !tbaa !2995
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %86, i32 0, i32 0, !dbg !18628, !ctir !2335
  store %struct._ftsent* %call104, %struct._ftsent** %fts_cur, align 8, !dbg !18629, !tbaa !18630, !ctir !2322
  %cmp105 = icmp eq %struct._ftsent* %call104, null, !dbg !18631
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !18632

if.then107:                                       ; preds = %if.end103
  br label %mem3, !dbg !18633

if.end108:                                        ; preds = %if.end103
  %87 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18634, !tbaa !2995
  %88 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18635, !tbaa !2995
  %fts_cur109 = getelementptr inbounds %struct.FTS, %struct.FTS* %88, i32 0, i32 0, !dbg !18636, !ctir !2335
  %89 = load %struct._ftsent*, %struct._ftsent** %fts_cur109, align 8, !dbg !18636, !tbaa !18630, !ctir !2322
  %fts_link110 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %89, i32 0, i32 2, !dbg !18637, !ctir !2319
  store %struct._ftsent* %87, %struct._ftsent** %fts_link110, align 8, !dbg !18638, !tbaa !2995, !ctir !2322
  %90 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18639, !tbaa !2995
  %fts_cur111 = getelementptr inbounds %struct.FTS, %struct.FTS* %90, i32 0, i32 0, !dbg !18640, !ctir !2335
  %91 = load %struct._ftsent*, %struct._ftsent** %fts_cur111, align 8, !dbg !18640, !tbaa !18630, !ctir !2322
  %fts_info112 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 15, !dbg !18641, !ctir !2319
  store i16 9, i16* %fts_info112, align 8, !dbg !18642, !tbaa !3810, !ctir !33
  %92 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18643, !tbaa !2995
  %fts_cur113 = getelementptr inbounds %struct.FTS, %struct.FTS* %92, i32 0, i32 0, !dbg !18644, !ctir !2335
  %93 = load %struct._ftsent*, %struct._ftsent** %fts_cur113, align 8, !dbg !18644, !tbaa !18630, !ctir !2322
  %fts_level114 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %93, i32 0, i32 12, !dbg !18645, !ctir !2319
  store i64 1, i64* %fts_level114, align 8, !dbg !18646, !tbaa !3848, !ctir !566
  %94 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18647, !tbaa !2995
  %call115 = call zeroext i1 @setup_dir(%struct.FTS* %94), !dbg !18649
  br i1 %call115, label %if.end117, label %if.then116, !dbg !18650

if.then116:                                       ; preds = %if.end108
  br label %mem3, !dbg !18651

if.end117:                                        ; preds = %if.end108
  %95 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18652, !tbaa !2995
  %fts_options118 = getelementptr inbounds %struct.FTS, %struct.FTS* %95, i32 0, i32 10, !dbg !18652, !ctir !2335
  %96 = load i32, i32* %fts_options118, align 8, !dbg !18652, !tbaa !18042, !ctir !7
  %and119 = and i32 %96, 4, !dbg !18652
  %tobool120 = icmp ne i32 %and119, 0, !dbg !18652
  br i1 %tobool120, label %if.end132, label %land.lhs.true121, !dbg !18654

land.lhs.true121:                                 ; preds = %if.end117
  %97 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18655, !tbaa !2995
  %fts_options122 = getelementptr inbounds %struct.FTS, %struct.FTS* %97, i32 0, i32 10, !dbg !18655, !ctir !2335
  %98 = load i32, i32* %fts_options122, align 8, !dbg !18655, !tbaa !18042, !ctir !7
  %and123 = and i32 %98, 512, !dbg !18655
  %tobool124 = icmp ne i32 %and123, 0, !dbg !18655
  br i1 %tobool124, label %if.end132, label %land.lhs.true125, !dbg !18656

land.lhs.true125:                                 ; preds = %land.lhs.true121
  %99 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18657, !tbaa !2995
  %call126 = call i32 @diropen(%struct.FTS* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.434, i64 0, i64 0)), !dbg !18658
  %100 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18659, !tbaa !2995
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %100, i32 0, i32 5, !dbg !18660, !ctir !2335
  store i32 %call126, i32* %fts_rfd, align 8, !dbg !18661, !tbaa !18662, !ctir !7
  %cmp127 = icmp slt i32 %call126, 0, !dbg !18663
  br i1 %cmp127, label %if.then129, label %if.end132, !dbg !18664

if.then129:                                       ; preds = %land.lhs.true125
  %101 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18665, !tbaa !2995
  %fts_options130 = getelementptr inbounds %struct.FTS, %struct.FTS* %101, i32 0, i32 10, !dbg !18665, !ctir !2335
  %102 = load i32, i32* %fts_options130, align 8, !dbg !18665, !tbaa !18042, !ctir !7
  %or131 = or i32 %102, 4, !dbg !18665
  store i32 %or131, i32* %fts_options130, align 8, !dbg !18665, !tbaa !18042, !ctir !7
  br label %if.end132, !dbg !18665

if.end132:                                        ; preds = %if.then129, %land.lhs.true125, %land.lhs.true121, %if.end117
  %103 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18666, !tbaa !2995
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %103, i32 0, i32 13, !dbg !18667, !ctir !2335
  call void @i_ring_init(%struct.I_ring* %fts_fd_ring, i32 -1), !dbg !18668
  %104 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18669, !tbaa !2995
  store %struct.FTS* %104, %struct.FTS** %retval, align 8, !dbg !18670
  br label %return, !dbg !18670

mem3:                                             ; preds = %if.then116, %if.then107, %if.then73
  call void @llvm.dbg.label(metadata !18671), !dbg !18672
  %105 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18673, !tbaa !2995
  call void @fts_lfree(%struct._ftsent* %105), !dbg !18674
  %106 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18675, !tbaa !2995
  %107 = bitcast %struct._ftsent* %106 to i8*, !dbg !18675
  call void @free(i8* %107) #10, !dbg !18676
  br label %mem2, !dbg !18676

mem2:                                             ; preds = %mem3, %if.then44
  call void @llvm.dbg.label(metadata !18677), !dbg !18678
  %108 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18679, !tbaa !2995
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %108, i32 0, i32 4, !dbg !18680, !ctir !2335
  %109 = load i8*, i8** %fts_path, align 8, !dbg !18680, !tbaa !18681, !ctir !9
  call void @free(i8* %109) #10, !dbg !18682
  br label %mem1, !dbg !18682

mem1:                                             ; preds = %mem2, %if.then38
  call void @llvm.dbg.label(metadata !18683), !dbg !18684
  %110 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18685, !tbaa !2995
  %111 = bitcast %struct.FTS* %110 to i8*, !dbg !18685
  call void @free(i8* %111) #10, !dbg !18686
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18687
  br label %return, !dbg !18687

return:                                           ; preds = %mem1, %if.end132, %if.then14, %if.then10, %if.then5, %if.then
  %112 = load %struct.FTS*, %struct.FTS** %retval, align 8, !dbg !18688
  ret %struct.FTS* %112, !dbg !18688
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @fts_maxarglen(i8** %argv) #4 !dbg !18689 !ctir !2495 {
entry:
  %argv.addr = alloca i8**, align 8
  %len = alloca i64, align 8, !ctir !55
  %max = alloca i64, align 8, !ctir !55
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !18690, metadata !DIExpression()), !dbg !18691
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18692, metadata !DIExpression()), !dbg !18693
  call void @llvm.dbg.declare(metadata i64* %max, metadata !18694, metadata !DIExpression()), !dbg !18695
  store i64 0, i64* %max, align 8, !dbg !18696, !tbaa !3848
  br label %for.cond, !dbg !18698

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !18699, !tbaa !2995
  %1 = load i8*, i8** %0, align 8, !dbg !18701, !tbaa !2995, !ctir !1338
  %tobool = icmp ne i8* %1, null, !dbg !18702
  br i1 %tobool, label %for.body, label %for.end, !dbg !18702

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !18703, !tbaa !2995
  %3 = load i8*, i8** %2, align 8, !dbg !18705, !tbaa !2995, !ctir !1338
  %call = call i64 @strlen(i8* %3) #14, !dbg !18706
  store i64 %call, i64* %len, align 8, !dbg !18707, !tbaa !3848
  %4 = load i64, i64* %max, align 8, !dbg !18708, !tbaa !3848
  %cmp = icmp ugt i64 %call, %4, !dbg !18709
  br i1 %cmp, label %if.then, label %if.end, !dbg !18710

if.then:                                          ; preds = %for.body
  %5 = load i64, i64* %len, align 8, !dbg !18711, !tbaa !3848
  store i64 %5, i64* %max, align 8, !dbg !18712, !tbaa !3848
  br label %if.end, !dbg !18713

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !18708

for.inc:                                          ; preds = %if.end
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !18714, !tbaa !2995
  %incdec.ptr = getelementptr inbounds i8*, i8** %6, i32 1, !dbg !18714
  store i8** %incdec.ptr, i8*** %argv.addr, align 8, !dbg !18714, !tbaa !2995
  br label %for.cond, !dbg !18715, !llvm.loop !18716

for.end:                                          ; preds = %for.cond
  %7 = load i64, i64* %max, align 8, !dbg !18718, !tbaa !3848
  %add = add i64 %7, 1, !dbg !18719
  ret i64 %add, !dbg !18720
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @fts_palloc(%struct.FTS* %sp, i64 %more) #4 !dbg !18721 !ctir !2493 {
entry:
  %retval = alloca i1, align 1
  %sp.addr = alloca %struct.FTS*, align 8
  %more.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !9
  %new_len = alloca i64, align 8, !ctir !55
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18722, metadata !DIExpression()), !dbg !18723
  store i64 %more, i64* %more.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %more.addr, metadata !18724, metadata !DIExpression()), !dbg !18725
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18726, metadata !DIExpression()), !dbg !18727
  call void @llvm.dbg.declare(metadata i64* %new_len, metadata !18728, metadata !DIExpression()), !dbg !18729
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18730, !tbaa !2995
  %fts_pathlen = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 7, !dbg !18731, !ctir !2335
  %1 = load i64, i64* %fts_pathlen, align 8, !dbg !18731, !tbaa !18732, !ctir !55
  %2 = load i64, i64* %more.addr, align 8, !dbg !18733, !tbaa !3848
  %add = add i64 %1, %2, !dbg !18734
  %add1 = add i64 %add, 256, !dbg !18735
  store i64 %add1, i64* %new_len, align 8, !dbg !18729, !tbaa !3848
  %3 = load i64, i64* %new_len, align 8, !dbg !18736, !tbaa !3848
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18738, !tbaa !2995
  %fts_pathlen2 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 7, !dbg !18739, !ctir !2335
  %5 = load i64, i64* %fts_pathlen2, align 8, !dbg !18739, !tbaa !18732, !ctir !55
  %cmp = icmp ult i64 %3, %5, !dbg !18740
  br i1 %cmp, label %if.then, label %if.end, !dbg !18741

if.then:                                          ; preds = %entry
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18742, !tbaa !2995
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 4, !dbg !18744, !ctir !2335
  %7 = load i8*, i8** %fts_path, align 8, !dbg !18744, !tbaa !18681, !ctir !9
  call void @free(i8* %7) #10, !dbg !18745
  %8 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18746, !tbaa !2995
  %fts_path3 = getelementptr inbounds %struct.FTS, %struct.FTS* %8, i32 0, i32 4, !dbg !18747, !ctir !2335
  store i8* null, i8** %fts_path3, align 8, !dbg !18748, !tbaa !18681, !ctir !9
  %call = call i32* @__errno_location() #15, !dbg !18749
  store i32 36, i32* %call, align 4, !dbg !18749, !tbaa !2982, !ctir !7
  store i1 false, i1* %retval, align 1, !dbg !18750
  br label %return, !dbg !18750

if.end:                                           ; preds = %entry
  %9 = load i64, i64* %new_len, align 8, !dbg !18751, !tbaa !3848
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18752, !tbaa !2995
  %fts_pathlen4 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 7, !dbg !18753, !ctir !2335
  store i64 %9, i64* %fts_pathlen4, align 8, !dbg !18754, !tbaa !18732, !ctir !55
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18755, !tbaa !2995
  %fts_path5 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 4, !dbg !18756, !ctir !2335
  %12 = load i8*, i8** %fts_path5, align 8, !dbg !18756, !tbaa !18681, !ctir !9
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18757, !tbaa !2995
  %fts_pathlen6 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 7, !dbg !18758, !ctir !2335
  %14 = load i64, i64* %fts_pathlen6, align 8, !dbg !18758, !tbaa !18732, !ctir !55
  %call7 = call i8* @realloc(i8* %12, i64 %14) #10, !dbg !18759
  store i8* %call7, i8** %p, align 8, !dbg !18760, !tbaa !2995
  %15 = load i8*, i8** %p, align 8, !dbg !18761, !tbaa !2995
  %cmp8 = icmp eq i8* %15, null, !dbg !18763
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !18764

if.then9:                                         ; preds = %if.end
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18765, !tbaa !2995
  %fts_path10 = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 4, !dbg !18767, !ctir !2335
  %17 = load i8*, i8** %fts_path10, align 8, !dbg !18767, !tbaa !18681, !ctir !9
  call void @free(i8* %17) #10, !dbg !18768
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18769, !tbaa !2995
  %fts_path11 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 4, !dbg !18770, !ctir !2335
  store i8* null, i8** %fts_path11, align 8, !dbg !18771, !tbaa !18681, !ctir !9
  store i1 false, i1* %retval, align 1, !dbg !18772
  br label %return, !dbg !18772

if.end12:                                         ; preds = %if.end
  %19 = load i8*, i8** %p, align 8, !dbg !18773, !tbaa !2995
  %20 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18774, !tbaa !2995
  %fts_path13 = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 4, !dbg !18775, !ctir !2335
  store i8* %19, i8** %fts_path13, align 8, !dbg !18776, !tbaa !18681, !ctir !9
  store i1 true, i1* %retval, align 1, !dbg !18777
  br label %return, !dbg !18777

return:                                           ; preds = %if.end12, %if.then9, %if.then
  %21 = load i1, i1* %retval, align 1, !dbg !18778
  ret i1 %21, !dbg !18778
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_alloc(%struct.FTS* %sp, i8* %name, i64 %namelen) #4 !dbg !18779 !ctir !2489 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %name.addr = alloca i8*, align 8
  %namelen.addr = alloca i64, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !2417
  %len = alloca i64, align 8, !ctir !55
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18780, metadata !DIExpression()), !dbg !18781
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !18782, metadata !DIExpression()), !dbg !18783
  store i64 %namelen, i64* %namelen.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %namelen.addr, metadata !18784, metadata !DIExpression()), !dbg !18785
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18786, metadata !DIExpression()), !dbg !18787
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18788, metadata !DIExpression()), !dbg !18789
  %0 = load i64, i64* %namelen.addr, align 8, !dbg !18790, !tbaa !3848
  %add = add i64 %0, 1, !dbg !18790
  %add1 = add i64 271, %add, !dbg !18790
  %and = and i64 %add1, -8, !dbg !18790
  store i64 %and, i64* %len, align 8, !dbg !18791, !tbaa !3848
  %1 = load i64, i64* %len, align 8, !dbg !18792, !tbaa !3848
  %call = call noalias i8* @malloc(i64 %1) #10, !dbg !18794
  %2 = bitcast i8* %call to %struct._ftsent*, !dbg !18794
  store %struct._ftsent* %2, %struct._ftsent** %p, align 8, !dbg !18795, !tbaa !2995
  %cmp = icmp eq %struct._ftsent* %2, null, !dbg !18796
  br i1 %cmp, label %if.then, label %if.end, !dbg !18797

if.then:                                          ; preds = %entry
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !18798
  br label %return, !dbg !18798

if.end:                                           ; preds = %entry
  %3 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18799, !tbaa !2995
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %3, i32 0, i32 19, !dbg !18800, !ctir !2318
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !18801
  %4 = load i8*, i8** %name.addr, align 8, !dbg !18802, !tbaa !2995
  %5 = load i64, i64* %namelen.addr, align 8, !dbg !18803, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %4, i64 %5, i1 false), !dbg !18801
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18804, !tbaa !2995
  %fts_name2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 19, !dbg !18805, !ctir !2318
  %7 = load i64, i64* %namelen.addr, align 8, !dbg !18806, !tbaa !3848
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name2, i64 0, i64 %7, !dbg !18804, !ctir !1410
  store i8 0, i8* %arrayidx, align 1, !dbg !18807, !tbaa !3657
  %8 = load i64, i64* %namelen.addr, align 8, !dbg !18808, !tbaa !3848
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18809, !tbaa !2995
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 13, !dbg !18810, !ctir !2318
  store i64 %8, i64* %fts_namelen, align 8, !dbg !18811, !tbaa !3848, !ctir !55
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18812, !tbaa !2995
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18813, !tbaa !2995
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 11, !dbg !18814, !ctir !2318
  store %struct.FTS* %10, %struct.FTS** %fts_fts, align 8, !dbg !18815, !tbaa !2995, !ctir !2334
  %12 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18816, !tbaa !2995
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 4, !dbg !18817, !ctir !2335
  %13 = load i8*, i8** %fts_path, align 8, !dbg !18817, !tbaa !18681, !ctir !9
  %14 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18818, !tbaa !2995
  %fts_path3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 7, !dbg !18819, !ctir !2318
  store i8* %13, i8** %fts_path3, align 8, !dbg !18820, !tbaa !2995, !ctir !9
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18821, !tbaa !2995
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 8, !dbg !18822, !ctir !2318
  store i32 0, i32* %fts_errno, align 8, !dbg !18823, !tbaa !2982, !ctir !7
  %16 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18824, !tbaa !2995
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 3, !dbg !18825, !ctir !2318
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp, align 8, !dbg !18826, !tbaa !2995, !ctir !607
  %17 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18827, !tbaa !2995
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 16, !dbg !18828, !ctir !2318
  store i16 0, i16* %fts_flags, align 2, !dbg !18829, !tbaa !3810, !ctir !33
  %18 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18830, !tbaa !2995
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %18, i32 0, i32 17, !dbg !18831, !ctir !2318
  store i16 3, i16* %fts_instr, align 4, !dbg !18832, !tbaa !3810, !ctir !33
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18833, !tbaa !2995
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 4, !dbg !18834, !ctir !2318
  store i64 0, i64* %fts_number, align 8, !dbg !18835, !tbaa !3848, !ctir !31
  %20 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18836, !tbaa !2995
  %fts_pointer = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 5, !dbg !18837, !ctir !2318
  store i8* null, i8** %fts_pointer, align 8, !dbg !18838, !tbaa !2995, !ctir !53
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18839, !tbaa !2995
  store %struct._ftsent* %21, %struct._ftsent** %retval, align 8, !dbg !18840
  br label %return, !dbg !18840

return:                                           ; preds = %if.end, %if.then
  %22 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !18841
  ret %struct._ftsent* %22, !dbg !18841
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_set_stat_required(%struct._ftsent* %p, i1 zeroext %required) #4 !dbg !18842 !ctir !2426 {
entry:
  %p.addr = alloca %struct._ftsent*, align 8
  %required.addr = alloca i8, align 1
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !18843, metadata !DIExpression()), !dbg !18844
  %frombool = zext i1 %required to i8
  store i8 %frombool, i8* %required.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %required.addr, metadata !18845, metadata !DIExpression()), !dbg !18846
  br label %do.body, !dbg !18847

do.body:                                          ; preds = %entry
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18848, !tbaa !2995
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 15, !dbg !18848, !ctir !2318
  %1 = load i16, i16* %fts_info, align 8, !dbg !18848, !tbaa !3810, !ctir !33
  %conv = zext i16 %1 to i32, !dbg !18848
  %cmp = icmp eq i32 %conv, 11, !dbg !18848
  br i1 %cmp, label %if.end, label %if.then, !dbg !18851

if.then:                                          ; preds = %do.body
  call void @abort() #13, !dbg !18848
  unreachable, !dbg !18848

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !18851

do.end:                                           ; preds = %if.end
  %2 = load i8, i8* %required.addr, align 1, !dbg !18852, !tbaa !3106
  %tobool = trunc i8 %2 to i1, !dbg !18852
  %3 = zext i1 %tobool to i64, !dbg !18852
  %cond = select i1 %tobool, i32 2, i32 1, !dbg !18852
  %conv3 = sext i32 %cond to i64, !dbg !18853
  %4 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18854, !tbaa !2995
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 18, !dbg !18855, !ctir !2318
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !18856
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 8, !dbg !18856, !ctir !2390
  store i64 %conv3, i64* %st_size, align 8, !dbg !18857, !tbaa !4516, !ctir !29
  ret void, !dbg !18858
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i16 @fts_stat(%struct.FTS* %sp, %struct._ftsent* %p, i1 zeroext %follow) #4 !dbg !18859 !ctir !2484 {
entry:
  %retval = alloca i16, align 2
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %follow.addr = alloca i8, align 1
  %sbp = alloca %struct.stat*, align 8, !ctir !2481
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18860, metadata !DIExpression()), !dbg !18861
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !18862, metadata !DIExpression()), !dbg !18863
  %frombool = zext i1 %follow to i8
  store i8 %frombool, i8* %follow.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %follow.addr, metadata !18864, metadata !DIExpression()), !dbg !18865
  call void @llvm.dbg.declare(metadata %struct.stat** %sbp, metadata !18866, metadata !DIExpression()), !dbg !18867
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18868, !tbaa !2995
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 18, !dbg !18869, !ctir !2318
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !18868
  store %struct.stat* %arraydecay, %struct.stat** %sbp, align 8, !dbg !18867, !tbaa !2995
  %1 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18870, !tbaa !2995
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 12, !dbg !18872, !ctir !2318
  %2 = load i64, i64* %fts_level, align 8, !dbg !18872, !tbaa !3848, !ctir !566
  %cmp = icmp eq i64 %2, 0, !dbg !18873
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !18874

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18875, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !18875, !ctir !2335
  %4 = load i32, i32* %fts_options, align 8, !dbg !18875, !tbaa !18042, !ctir !7
  %and = and i32 %4, 1, !dbg !18875
  %tobool = icmp ne i32 %and, 0, !dbg !18875
  br i1 %tobool, label %if.then, label %if.end, !dbg !18876

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %follow.addr, align 1, !dbg !18877, !tbaa !3106
  br label %if.end, !dbg !18878

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18879, !tbaa !2995
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !18879, !ctir !2335
  %6 = load i32, i32* %fts_options1, align 8, !dbg !18879, !tbaa !18042, !ctir !7
  %and2 = and i32 %6, 2, !dbg !18879
  %tobool3 = icmp ne i32 %and2, 0, !dbg !18879
  br i1 %tobool3, label %if.then5, label %lor.lhs.false, !dbg !18881

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i8, i8* %follow.addr, align 1, !dbg !18882, !tbaa !3106
  %tobool4 = trunc i8 %7 to i1, !dbg !18882
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !18883

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18884, !tbaa !2995
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 6, !dbg !18887, !ctir !2318
  %9 = load i8*, i8** %fts_accpath, align 8, !dbg !18887, !tbaa !2995, !ctir !9
  %10 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18888, !tbaa !2995
  %call = call i32 @stat(i8* %9, %struct.stat* %10) #10, !dbg !18889
  %tobool6 = icmp ne i32 %call, 0, !dbg !18889
  br i1 %tobool6, label %if.then7, label %if.end18, !dbg !18890

if.then7:                                         ; preds = %if.then5
  %call8 = call i32* @__errno_location() #15, !dbg !18891
  %11 = load i32, i32* %call8, align 4, !dbg !18891, !tbaa !2982, !ctir !7
  %cmp9 = icmp eq i32 %11, 2, !dbg !18894
  br i1 %cmp9, label %land.lhs.true10, label %if.end16, !dbg !18895

land.lhs.true10:                                  ; preds = %if.then7
  %12 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18896, !tbaa !2995
  %fts_accpath11 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 6, !dbg !18897, !ctir !2318
  %13 = load i8*, i8** %fts_accpath11, align 8, !dbg !18897, !tbaa !2995, !ctir !9
  %14 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18898, !tbaa !2995
  %call12 = call i32 @lstat(i8* %13, %struct.stat* %14) #10, !dbg !18899
  %cmp13 = icmp eq i32 %call12, 0, !dbg !18900
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !18901

if.then14:                                        ; preds = %land.lhs.true10
  %call15 = call i32* @__errno_location() #15, !dbg !18902
  store i32 0, i32* %call15, align 4, !dbg !18902, !tbaa !2982, !ctir !7
  store i16 13, i16* %retval, align 2, !dbg !18904
  br label %return, !dbg !18904

if.end16:                                         ; preds = %land.lhs.true10, %if.then7
  %call17 = call i32* @__errno_location() #15, !dbg !18905
  %15 = load i32, i32* %call17, align 4, !dbg !18905, !tbaa !2982, !ctir !7
  %16 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18906, !tbaa !2995
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 8, !dbg !18907, !ctir !2318
  store i32 %15, i32* %fts_errno, align 8, !dbg !18908, !tbaa !2982, !ctir !7
  br label %err, !dbg !18909

if.end18:                                         ; preds = %if.then5
  br label %if.end26, !dbg !18910

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18911, !tbaa !2995
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 6, !dbg !18913, !ctir !2335
  %18 = load i32, i32* %fts_cwd_fd, align 4, !dbg !18913, !tbaa !3823, !ctir !7
  %19 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18914, !tbaa !2995
  %fts_accpath19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 6, !dbg !18915, !ctir !2318
  %20 = load i8*, i8** %fts_accpath19, align 8, !dbg !18915, !tbaa !2995, !ctir !9
  %21 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18916, !tbaa !2995
  %call20 = call i32 @fstatat(i32 %18, i8* %20, %struct.stat* %21, i32 256) #10, !dbg !18917
  %tobool21 = icmp ne i32 %call20, 0, !dbg !18917
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !18918

if.then22:                                        ; preds = %if.else
  %call23 = call i32* @__errno_location() #15, !dbg !18919
  %22 = load i32, i32* %call23, align 4, !dbg !18919, !tbaa !2982, !ctir !7
  %23 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18921, !tbaa !2995
  %fts_errno24 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 8, !dbg !18922, !ctir !2318
  store i32 %22, i32* %fts_errno24, align 8, !dbg !18923, !tbaa !2982, !ctir !7
  br label %err, !dbg !18921

err:                                              ; preds = %if.then22, %if.end16
  call void @llvm.dbg.label(metadata !18924), !dbg !18925
  %24 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18926, !tbaa !2995
  %25 = bitcast %struct.stat* %24 to i8*, !dbg !18927
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 144, i1 false), !dbg !18927
  store i16 10, i16* %retval, align 2, !dbg !18928
  br label %return, !dbg !18928

if.end25:                                         ; preds = %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end18
  %26 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18929, !tbaa !2995
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 3, !dbg !18929, !ctir !2390
  %27 = load i32, i32* %st_mode, align 8, !dbg !18929, !tbaa !3178, !ctir !133
  %and27 = and i32 %27, 61440, !dbg !18929
  %cmp28 = icmp eq i32 %and27, 16384, !dbg !18929
  br i1 %cmp28, label %if.then29, label %if.end63, !dbg !18931

if.then29:                                        ; preds = %if.end26
  %28 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18932, !tbaa !2995
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %28, i32 0, i32 2, !dbg !18934, !ctir !2390
  %29 = load i64, i64* %st_nlink, align 8, !dbg !18934, !tbaa !5420, !ctir !323
  %cmp30 = icmp ult i64 %29, 2, !dbg !18935
  br i1 %cmp30, label %cond.true, label %lor.lhs.false31, !dbg !18936

lor.lhs.false31:                                  ; preds = %if.then29
  %30 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18937, !tbaa !2995
  %fts_level32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 12, !dbg !18938, !ctir !2318
  %31 = load i64, i64* %fts_level32, align 8, !dbg !18938, !tbaa !3848, !ctir !566
  %cmp33 = icmp sle i64 %31, 0, !dbg !18939
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !18940

cond.true:                                        ; preds = %lor.lhs.false31, %if.then29
  br label %cond.end, !dbg !18940

cond.false:                                       ; preds = %lor.lhs.false31
  %32 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18941, !tbaa !2995
  %st_nlink34 = getelementptr inbounds %struct.stat, %struct.stat* %32, i32 0, i32 2, !dbg !18942, !ctir !2390
  %33 = load i64, i64* %st_nlink34, align 8, !dbg !18942, !tbaa !5420, !ctir !323
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18943, !tbaa !2995
  %fts_options35 = getelementptr inbounds %struct.FTS, %struct.FTS* %34, i32 0, i32 10, !dbg !18943, !ctir !2335
  %35 = load i32, i32* %fts_options35, align 8, !dbg !18943, !tbaa !18042, !ctir !7
  %and36 = and i32 %35, 32, !dbg !18943
  %tobool37 = icmp ne i32 %and36, 0, !dbg !18943
  %36 = zext i1 %tobool37 to i64, !dbg !18943
  %cond = select i1 %tobool37, i32 0, i32 2, !dbg !18943
  %conv = sext i32 %cond to i64, !dbg !18944
  %sub = sub i64 %33, %conv, !dbg !18945
  br label %cond.end, !dbg !18940

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond38 = phi i64 [ -1, %cond.true ], [ %sub, %cond.false ], !dbg !18940
  %37 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18946, !tbaa !2995
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 14, !dbg !18947, !ctir !2318
  store i64 %cond38, i64* %fts_n_dirs_remaining, align 8, !dbg !18948, !tbaa !3848, !ctir !1382
  %38 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18949, !tbaa !2995
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 19, !dbg !18949, !ctir !2318
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !18949, !ctir !1410
  %39 = load i8, i8* %arrayidx, align 8, !dbg !18949, !tbaa !3657
  %conv39 = sext i8 %39 to i32, !dbg !18949
  %cmp40 = icmp eq i32 %conv39, 46, !dbg !18949
  br i1 %cmp40, label %land.lhs.true42, label %if.end62, !dbg !18949

land.lhs.true42:                                  ; preds = %cond.end
  %40 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18949, !tbaa !2995
  %fts_name43 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %40, i32 0, i32 19, !dbg !18949, !ctir !2318
  %arrayidx44 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name43, i64 0, i64 1, !dbg !18949, !ctir !1410
  %41 = load i8, i8* %arrayidx44, align 1, !dbg !18949, !tbaa !3657
  %tobool45 = icmp ne i8 %41, 0, !dbg !18949
  br i1 %tobool45, label %lor.lhs.false46, label %if.then56, !dbg !18949

lor.lhs.false46:                                  ; preds = %land.lhs.true42
  %42 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18949, !tbaa !2995
  %fts_name47 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 19, !dbg !18949, !ctir !2318
  %arrayidx48 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name47, i64 0, i64 1, !dbg !18949, !ctir !1410
  %43 = load i8, i8* %arrayidx48, align 1, !dbg !18949, !tbaa !3657
  %conv49 = sext i8 %43 to i32, !dbg !18949
  %cmp50 = icmp eq i32 %conv49, 46, !dbg !18949
  br i1 %cmp50, label %land.lhs.true52, label %if.end62, !dbg !18949

land.lhs.true52:                                  ; preds = %lor.lhs.false46
  %44 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18949, !tbaa !2995
  %fts_name53 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 19, !dbg !18949, !ctir !2318
  %arrayidx54 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name53, i64 0, i64 2, !dbg !18949, !ctir !1410
  %45 = load i8, i8* %arrayidx54, align 2, !dbg !18949, !tbaa !3657
  %tobool55 = icmp ne i8 %45, 0, !dbg !18949
  br i1 %tobool55, label %if.end62, label %if.then56, !dbg !18951

if.then56:                                        ; preds = %land.lhs.true52, %land.lhs.true42
  %46 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18952, !tbaa !2995
  %fts_level57 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %46, i32 0, i32 12, !dbg !18954, !ctir !2318
  %47 = load i64, i64* %fts_level57, align 8, !dbg !18954, !tbaa !3848, !ctir !566
  %cmp58 = icmp eq i64 %47, 0, !dbg !18955
  %48 = zext i1 %cmp58 to i64, !dbg !18952
  %cond60 = select i1 %cmp58, i32 1, i32 5, !dbg !18952
  %conv61 = trunc i32 %cond60 to i16, !dbg !18956
  store i16 %conv61, i16* %retval, align 2, !dbg !18957
  br label %return, !dbg !18957

if.end62:                                         ; preds = %land.lhs.true52, %lor.lhs.false46, %cond.end
  store i16 1, i16* %retval, align 2, !dbg !18958
  br label %return, !dbg !18958

if.end63:                                         ; preds = %if.end26
  %49 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18959, !tbaa !2995
  %st_mode64 = getelementptr inbounds %struct.stat, %struct.stat* %49, i32 0, i32 3, !dbg !18959, !ctir !2390
  %50 = load i32, i32* %st_mode64, align 8, !dbg !18959, !tbaa !3178, !ctir !133
  %and65 = and i32 %50, 61440, !dbg !18959
  %cmp66 = icmp eq i32 %and65, 40960, !dbg !18959
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !18961

if.then68:                                        ; preds = %if.end63
  store i16 12, i16* %retval, align 2, !dbg !18962
  br label %return, !dbg !18962

if.end69:                                         ; preds = %if.end63
  %51 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18963, !tbaa !2995
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %51, i32 0, i32 3, !dbg !18963, !ctir !2390
  %52 = load i32, i32* %st_mode70, align 8, !dbg !18963, !tbaa !3178, !ctir !133
  %and71 = and i32 %52, 61440, !dbg !18963
  %cmp72 = icmp eq i32 %and71, 32768, !dbg !18963
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !18965

if.then74:                                        ; preds = %if.end69
  store i16 8, i16* %retval, align 2, !dbg !18966
  br label %return, !dbg !18966

if.end75:                                         ; preds = %if.end69
  store i16 3, i16* %retval, align 2, !dbg !18967
  br label %return, !dbg !18967

return:                                           ; preds = %if.end75, %if.then74, %if.then68, %if.end62, %if.then56, %err, %if.then14
  %53 = load i16, i16* %retval, align 2, !dbg !18968
  ret i16 %53, !dbg !18968
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_sort(%struct.FTS* %sp, %struct._ftsent* %head, i64 %nitems) #4 !dbg !18969 !ctir !2486 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %head.addr = alloca %struct._ftsent*, align 8
  %nitems.addr = alloca i64, align 8
  %ap = alloca %struct._ftsent**, align 8, !ctir !2488
  %p = alloca %struct._ftsent*, align 8, !ctir !2417
  %dummy = alloca %struct._ftsent*, align 8, !ctir !2417
  %compare = alloca i32 (i8*, i8*)*, align 8, !ctir !1087
  %a = alloca %struct._ftsent**, align 8, !ctir !2488
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18970, metadata !DIExpression()), !dbg !18971
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !18972, metadata !DIExpression()), !dbg !18973
  store i64 %nitems, i64* %nitems.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %nitems.addr, metadata !18974, metadata !DIExpression()), !dbg !18975
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %ap, metadata !18976, metadata !DIExpression()), !dbg !18977
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18978, metadata !DIExpression()), !dbg !18979
  call void @llvm.dbg.declare(metadata %struct._ftsent** %dummy, metadata !18980, metadata !DIExpression()), !dbg !18981
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %compare, metadata !18982, metadata !DIExpression()), !dbg !18983
  %0 = ptrtoint %struct._ftsent** %dummy to i64, !dbg !18984
  %1 = bitcast %struct._ftsent** %dummy to i8*, !dbg !18985
  %2 = ptrtoint i8* %1 to i64, !dbg !18986
  %cmp = icmp eq i64 %0, %2, !dbg !18987
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !18988

cond.true:                                        ; preds = %entry
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18989, !tbaa !2995
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 9, !dbg !18990, !ctir !2335
  %4 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !18990, !tbaa !18419, !ctir !2349
  %5 = bitcast i32 (%struct._ftsent**, %struct._ftsent**)* %4 to i32 (i8*, i8*)*, !dbg !18991
  br label %cond.end, !dbg !18988

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18988

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 (i8*, i8*)* [ %5, %cond.true ], [ @fts_compar, %cond.false ], !dbg !18988
  store i32 (i8*, i8*)* %cond, i32 (i8*, i8*)** %compare, align 8, !dbg !18983, !tbaa !2995
  %6 = load i64, i64* %nitems.addr, align 8, !dbg !18992, !tbaa !3848
  %7 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18994, !tbaa !2995
  %fts_nitems = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 8, !dbg !18995, !ctir !2335
  %8 = load i64, i64* %fts_nitems, align 8, !dbg !18995, !tbaa !18996, !ctir !55
  %cmp1 = icmp ugt i64 %6, %8, !dbg !18997
  br i1 %cmp1, label %if.then, label %if.end11, !dbg !18998

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %a, metadata !18999, metadata !DIExpression()), !dbg !19001
  %9 = load i64, i64* %nitems.addr, align 8, !dbg !19002, !tbaa !3848
  %add = add i64 %9, 40, !dbg !19003
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19004, !tbaa !2995
  %fts_nitems2 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 8, !dbg !19005, !ctir !2335
  store i64 %add, i64* %fts_nitems2, align 8, !dbg !19006, !tbaa !18996, !ctir !55
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19007, !tbaa !2995
  %fts_nitems3 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 8, !dbg !19009, !ctir !2335
  %12 = load i64, i64* %fts_nitems3, align 8, !dbg !19009, !tbaa !18996, !ctir !55
  %cmp4 = icmp ult i64 2305843009213693951, %12, !dbg !19010
  br i1 %cmp4, label %if.then6, label %lor.lhs.false, !dbg !19011

lor.lhs.false:                                    ; preds = %if.then
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19012, !tbaa !2995
  %fts_array = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 2, !dbg !19013, !ctir !2335
  %14 = load %struct._ftsent**, %struct._ftsent*** %fts_array, align 8, !dbg !19013, !tbaa !19014, !ctir !2341
  %15 = bitcast %struct._ftsent** %14 to i8*, !dbg !19012
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19015, !tbaa !2995
  %fts_nitems5 = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 8, !dbg !19016, !ctir !2335
  %17 = load i64, i64* %fts_nitems5, align 8, !dbg !19016, !tbaa !18996, !ctir !55
  %mul = mul i64 %17, 8, !dbg !19017
  %call = call i8* @realloc(i8* %15, i64 %mul) #10, !dbg !19018
  %18 = bitcast i8* %call to %struct._ftsent**, !dbg !19018
  store %struct._ftsent** %18, %struct._ftsent*** %a, align 8, !dbg !19019, !tbaa !2995
  %tobool = icmp ne %struct._ftsent** %18, null, !dbg !19019
  br i1 %tobool, label %if.end, label %if.then6, !dbg !19020

if.then6:                                         ; preds = %lor.lhs.false, %if.then
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19021, !tbaa !2995
  %fts_array7 = getelementptr inbounds %struct.FTS, %struct.FTS* %19, i32 0, i32 2, !dbg !19023, !ctir !2335
  %20 = load %struct._ftsent**, %struct._ftsent*** %fts_array7, align 8, !dbg !19023, !tbaa !19014, !ctir !2341
  %21 = bitcast %struct._ftsent** %20 to i8*, !dbg !19021
  call void @free(i8* %21) #10, !dbg !19024
  %22 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19025, !tbaa !2995
  %fts_array8 = getelementptr inbounds %struct.FTS, %struct.FTS* %22, i32 0, i32 2, !dbg !19026, !ctir !2335
  store %struct._ftsent** null, %struct._ftsent*** %fts_array8, align 8, !dbg !19027, !tbaa !19014, !ctir !2341
  %23 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19028, !tbaa !2995
  %fts_nitems9 = getelementptr inbounds %struct.FTS, %struct.FTS* %23, i32 0, i32 8, !dbg !19029, !ctir !2335
  store i64 0, i64* %fts_nitems9, align 8, !dbg !19030, !tbaa !18996, !ctir !55
  %24 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !19031, !tbaa !2995
  store %struct._ftsent* %24, %struct._ftsent** %retval, align 8, !dbg !19032
  br label %return, !dbg !19032

if.end:                                           ; preds = %lor.lhs.false
  %25 = load %struct._ftsent**, %struct._ftsent*** %a, align 8, !dbg !19033, !tbaa !2995
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19034, !tbaa !2995
  %fts_array10 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 2, !dbg !19035, !ctir !2335
  store %struct._ftsent** %25, %struct._ftsent*** %fts_array10, align 8, !dbg !19036, !tbaa !19014, !ctir !2341
  br label %if.end11, !dbg !19037

if.end11:                                         ; preds = %if.end, %cond.end
  %27 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19038, !tbaa !2995
  %fts_array12 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 2, !dbg !19040, !ctir !2335
  %28 = load %struct._ftsent**, %struct._ftsent*** %fts_array12, align 8, !dbg !19040, !tbaa !19014, !ctir !2341
  store %struct._ftsent** %28, %struct._ftsent*** %ap, align 8, !dbg !19041, !tbaa !2995
  %29 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !19042, !tbaa !2995
  store %struct._ftsent* %29, %struct._ftsent** %p, align 8, !dbg !19043, !tbaa !2995
  br label %for.cond, !dbg !19044

for.cond:                                         ; preds = %for.inc, %if.end11
  %30 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19045, !tbaa !2995
  %tobool13 = icmp ne %struct._ftsent* %30, null, !dbg !19047
  br i1 %tobool13, label %for.body, label %for.end, !dbg !19047

for.body:                                         ; preds = %for.cond
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19048, !tbaa !2995
  %32 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !19049, !tbaa !2995
  %incdec.ptr = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %32, i32 1, !dbg !19049
  store %struct._ftsent** %incdec.ptr, %struct._ftsent*** %ap, align 8, !dbg !19049, !tbaa !2995
  store %struct._ftsent* %31, %struct._ftsent** %32, align 8, !dbg !19050, !tbaa !2995, !ctir !2417
  br label %for.inc, !dbg !19051

for.inc:                                          ; preds = %for.body
  %33 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19052, !tbaa !2995
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 2, !dbg !19053, !ctir !2318
  %34 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !19053, !tbaa !2995, !ctir !2322
  store %struct._ftsent* %34, %struct._ftsent** %p, align 8, !dbg !19054, !tbaa !2995
  br label %for.cond, !dbg !19055, !llvm.loop !19056

for.end:                                          ; preds = %for.cond
  %35 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19058, !tbaa !2995
  %fts_array14 = getelementptr inbounds %struct.FTS, %struct.FTS* %35, i32 0, i32 2, !dbg !19059, !ctir !2335
  %36 = load %struct._ftsent**, %struct._ftsent*** %fts_array14, align 8, !dbg !19059, !tbaa !19014, !ctir !2341
  %37 = bitcast %struct._ftsent** %36 to i8*, !dbg !19060
  %38 = load i64, i64* %nitems.addr, align 8, !dbg !19061, !tbaa !3848
  %39 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare, align 8, !dbg !19062, !tbaa !2995
  call void @qsort(i8* %37, i64 %38, i64 8, i32 (i8*, i8*)* %39), !dbg !19063
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19064, !tbaa !2995
  %fts_array15 = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 2, !dbg !19066, !ctir !2335
  %41 = load %struct._ftsent**, %struct._ftsent*** %fts_array15, align 8, !dbg !19066, !tbaa !19014, !ctir !2341
  store %struct._ftsent** %41, %struct._ftsent*** %ap, align 8, !dbg !19067, !tbaa !2995
  %42 = load %struct._ftsent*, %struct._ftsent** %41, align 8, !dbg !19068, !tbaa !2995, !ctir !2417
  store %struct._ftsent* %42, %struct._ftsent** %head.addr, align 8, !dbg !19069, !tbaa !2995
  br label %for.cond16, !dbg !19070

for.cond16:                                       ; preds = %for.inc21, %for.end
  %43 = load i64, i64* %nitems.addr, align 8, !dbg !19071, !tbaa !3848
  %dec = add i64 %43, -1, !dbg !19071
  store i64 %dec, i64* %nitems.addr, align 8, !dbg !19071, !tbaa !3848
  %tobool17 = icmp ne i64 %dec, 0, !dbg !19073
  br i1 %tobool17, label %for.body18, label %for.end23, !dbg !19073

for.body18:                                       ; preds = %for.cond16
  %44 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !19074, !tbaa !2995
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %44, i64 1, !dbg !19074, !ctir !2488
  %45 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !19074, !tbaa !2995
  %46 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !19075, !tbaa !2995
  %arrayidx19 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %46, i64 0, !dbg !19075, !ctir !2488
  %47 = load %struct._ftsent*, %struct._ftsent** %arrayidx19, align 8, !dbg !19075, !tbaa !2995
  %fts_link20 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %47, i32 0, i32 2, !dbg !19076, !ctir !2318
  store %struct._ftsent* %45, %struct._ftsent** %fts_link20, align 8, !dbg !19077, !tbaa !2995, !ctir !2322
  br label %for.inc21, !dbg !19075

for.inc21:                                        ; preds = %for.body18
  %48 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !19078, !tbaa !2995
  %incdec.ptr22 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %48, i32 1, !dbg !19078
  store %struct._ftsent** %incdec.ptr22, %struct._ftsent*** %ap, align 8, !dbg !19078, !tbaa !2995
  br label %for.cond16, !dbg !19079, !llvm.loop !19080

for.end23:                                        ; preds = %for.cond16
  %49 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !19082, !tbaa !2995
  %arrayidx24 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %49, i64 0, !dbg !19082, !ctir !2488
  %50 = load %struct._ftsent*, %struct._ftsent** %arrayidx24, align 8, !dbg !19082, !tbaa !2995
  %fts_link25 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %50, i32 0, i32 2, !dbg !19083, !ctir !2318
  store %struct._ftsent* null, %struct._ftsent** %fts_link25, align 8, !dbg !19084, !tbaa !2995, !ctir !2322
  %51 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !19085, !tbaa !2995
  store %struct._ftsent* %51, %struct._ftsent** %retval, align 8, !dbg !19086
  br label %return, !dbg !19086

return:                                           ; preds = %for.end23, %if.then6
  %52 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !19087
  ret %struct._ftsent* %52, !dbg !19087
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @setup_dir(%struct.FTS* %fts) #4 !dbg !19088 !ctir !2428 {
entry:
  %retval = alloca i1, align 1
  %fts.addr = alloca %struct.FTS*, align 8
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !19089, metadata !DIExpression()), !dbg !19090
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19091, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !19093, !ctir !2335
  %1 = load i32, i32* %fts_options, align 8, !dbg !19093, !tbaa !18042, !ctir !7
  %and = and i32 %1, 258, !dbg !19094
  %tobool = icmp ne i32 %and, 0, !dbg !19094
  br i1 %tobool, label %if.then, label %if.else, !dbg !19095

if.then:                                          ; preds = %entry
  %call = call %struct.hash_table* @hash_initialize(i64 31, %struct.hash_tuning* null, i64 (i8*, i64)* @AD_hash, i1 (i8*, i8*)* @AD_compare, void (i8*)* @free), !dbg !19096
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19098, !tbaa !2995
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 12, !dbg !19099, !ctir !2335
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !19100
  store %struct.hash_table* %call, %struct.hash_table** %ht, align 8, !dbg !19101, !tbaa !3657, !ctir !2358
  %3 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19102, !tbaa !2995
  %fts_cycle1 = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 12, !dbg !19104, !ctir !2335
  %ht2 = bitcast %union.anon* %fts_cycle1 to %struct.hash_table**, !dbg !19105
  %4 = load %struct.hash_table*, %struct.hash_table** %ht2, align 8, !dbg !19105, !tbaa !3657, !ctir !2358
  %tobool3 = icmp ne %struct.hash_table* %4, null, !dbg !19102
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !19106

if.then4:                                         ; preds = %if.then
  store i1 false, i1* %retval, align 1, !dbg !19107
  br label %return, !dbg !19107

if.end:                                           ; preds = %if.then
  br label %if.end14, !dbg !19108

if.else:                                          ; preds = %entry
  %call5 = call noalias i8* @malloc(i64 32) #10, !dbg !19109
  %5 = bitcast i8* %call5 to %struct.cycle_check_state*, !dbg !19109
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19111, !tbaa !2995
  %fts_cycle6 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 12, !dbg !19112, !ctir !2335
  %state = bitcast %union.anon* %fts_cycle6 to %struct.cycle_check_state**, !dbg !19113
  store %struct.cycle_check_state* %5, %struct.cycle_check_state** %state, align 8, !dbg !19114, !tbaa !3657, !ctir !2358
  %7 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19115, !tbaa !2995
  %fts_cycle7 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 12, !dbg !19117, !ctir !2335
  %state8 = bitcast %union.anon* %fts_cycle7 to %struct.cycle_check_state**, !dbg !19118
  %8 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state8, align 8, !dbg !19118, !tbaa !3657, !ctir !2358
  %tobool9 = icmp ne %struct.cycle_check_state* %8, null, !dbg !19115
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !19119

if.then10:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !19120
  br label %return, !dbg !19120

if.end11:                                         ; preds = %if.else
  %9 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19121, !tbaa !2995
  %fts_cycle12 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 12, !dbg !19122, !ctir !2335
  %state13 = bitcast %union.anon* %fts_cycle12 to %struct.cycle_check_state**, !dbg !19123
  %10 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state13, align 8, !dbg !19123, !tbaa !3657, !ctir !2358
  call void @cycle_check_init(%struct.cycle_check_state* %10), !dbg !19124
  br label %if.end14

if.end14:                                         ; preds = %if.end11, %if.end
  store i1 true, i1* %retval, align 1, !dbg !19125
  br label %return, !dbg !19125

return:                                           ; preds = %if.end14, %if.then10, %if.then4
  %11 = load i1, i1* %retval, align 1, !dbg !19126
  ret i1 %11, !dbg !19126
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @diropen(%struct.FTS* %sp, i8* %dir) #4 !dbg !19127 !ctir !2438 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %dir.addr = alloca i8*, align 8
  %open_flags = alloca i32, align 4, !ctir !7
  %fd = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19128, metadata !DIExpression()), !dbg !19129
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !19130, metadata !DIExpression()), !dbg !19131
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !19132, metadata !DIExpression()), !dbg !19133
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19134, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !19134, !ctir !2441
  %1 = load i32, i32* %fts_options, align 8, !dbg !19134, !tbaa !18042, !ctir !7
  %and = and i32 %1, 16, !dbg !19134
  %tobool = icmp ne i32 %and, 0, !dbg !19134
  %2 = zext i1 %tobool to i64, !dbg !19134
  %cond = select i1 %tobool, i32 131072, i32 0, !dbg !19134
  %or = or i32 592128, %cond, !dbg !19135
  store i32 %or, i32* %open_flags, align 4, !dbg !19133, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !19136, metadata !DIExpression()), !dbg !19137
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19138, !tbaa !2995
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !19138, !ctir !2441
  %4 = load i32, i32* %fts_options1, align 8, !dbg !19138, !tbaa !18042, !ctir !7
  %and2 = and i32 %4, 512, !dbg !19138
  %tobool3 = icmp ne i32 %and2, 0, !dbg !19138
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !19138

cond.true:                                        ; preds = %entry
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19139, !tbaa !2995
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 6, !dbg !19140, !ctir !2441
  %6 = load i32, i32* %fts_cwd_fd, align 4, !dbg !19140, !tbaa !3823, !ctir !7
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !19141, !tbaa !2995
  %8 = load i32, i32* %open_flags, align 4, !dbg !19142, !tbaa !2982
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %6, i8* %7, i32 %8), !dbg !19143
  br label %cond.end, !dbg !19138

cond.false:                                       ; preds = %entry
  %9 = load i8*, i8** %dir.addr, align 8, !dbg !19144, !tbaa !2995
  %10 = load i32, i32* %open_flags, align 4, !dbg !19145, !tbaa !2982
  %call4 = call i32 (i8*, i32, ...) @open_safer(i8* %9, i32 %10), !dbg !19146
  br label %cond.end, !dbg !19138

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond5 = phi i32 [ %call, %cond.true ], [ %call4, %cond.false ], !dbg !19138
  store i32 %cond5, i32* %fd, align 4, !dbg !19137, !tbaa !2982
  %11 = load i32, i32* %fd, align 4, !dbg !19147, !tbaa !2982
  ret i32 %11, !dbg !19148
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_lfree(%struct._ftsent* %head) #4 !dbg !19149 !ctir !2491 {
entry:
  %head.addr = alloca %struct._ftsent*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !2417
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !19150, metadata !DIExpression()), !dbg !19151
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !19152, metadata !DIExpression()), !dbg !19153
  br label %while.cond, !dbg !19154

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !19155, !tbaa !2995
  store %struct._ftsent* %0, %struct._ftsent** %p, align 8, !dbg !19156, !tbaa !2995
  %tobool = icmp ne %struct._ftsent* %0, null, !dbg !19154
  br i1 %tobool, label %while.body, label %while.end, !dbg !19154

while.body:                                       ; preds = %while.cond
  %1 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !19157, !tbaa !2995
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 2, !dbg !19159, !ctir !2318
  %2 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !19159, !tbaa !2995, !ctir !2322
  store %struct._ftsent* %2, %struct._ftsent** %head.addr, align 8, !dbg !19160, !tbaa !2995
  %3 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19161, !tbaa !2995
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %3, i32 0, i32 3, !dbg !19163, !ctir !2318
  %4 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !19163, !tbaa !2995, !ctir !607
  %tobool1 = icmp ne %struct.__dirstream* %4, null, !dbg !19161
  br i1 %tobool1, label %if.then, label %if.end, !dbg !19164

if.then:                                          ; preds = %while.body
  %5 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19165, !tbaa !2995
  %fts_dirp2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 3, !dbg !19166, !ctir !2318
  %6 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp2, align 8, !dbg !19166, !tbaa !2995, !ctir !607
  %call = call i32 @closedir(%struct.__dirstream* %6), !dbg !19167
  br label %if.end, !dbg !19167

if.end:                                           ; preds = %if.then, %while.body
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19168, !tbaa !2995
  %8 = bitcast %struct._ftsent* %7 to i8*, !dbg !19168
  call void @free(i8* %8) #10, !dbg !19169
  br label %while.cond, !dbg !19154, !llvm.loop !19170

while.end:                                        ; preds = %while.cond
  ret void, !dbg !19172
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @AD_hash(i8* %x, i64 %table_size) #4 !dbg !19173 !ctir !547 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %ax = alloca %struct.Active_dir*, align 8, !ctir !2430
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !19174, metadata !DIExpression()), !dbg !19175
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !19176, metadata !DIExpression()), !dbg !19177
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ax, metadata !19178, metadata !DIExpression()), !dbg !19179
  %0 = load i8*, i8** %x.addr, align 8, !dbg !19180, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.Active_dir*, !dbg !19180
  store %struct.Active_dir* %1, %struct.Active_dir** %ax, align 8, !dbg !19179, !tbaa !2995
  %2 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !19181, !tbaa !2995
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %2, i32 0, i32 1, !dbg !19182, !ctir !2431
  %3 = load i64, i64* %ino, align 8, !dbg !19182, !tbaa !19183, !ctir !227
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !19185, !tbaa !3848
  %rem = urem i64 %3, %4, !dbg !19186
  ret i64 %rem, !dbg !19187
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @AD_compare(i8* %x, i8* %y) #4 !dbg !19188 !ctir !549 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %ax = alloca %struct.Active_dir*, align 8, !ctir !2430
  %ay = alloca %struct.Active_dir*, align 8, !ctir !2430
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !19189, metadata !DIExpression()), !dbg !19190
  store i8* %y, i8** %y.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !19191, metadata !DIExpression()), !dbg !19192
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ax, metadata !19193, metadata !DIExpression()), !dbg !19194
  %0 = load i8*, i8** %x.addr, align 8, !dbg !19195, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.Active_dir*, !dbg !19195
  store %struct.Active_dir* %1, %struct.Active_dir** %ax, align 8, !dbg !19194, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ay, metadata !19196, metadata !DIExpression()), !dbg !19197
  %2 = load i8*, i8** %y.addr, align 8, !dbg !19198, !tbaa !2995
  %3 = bitcast i8* %2 to %struct.Active_dir*, !dbg !19198
  store %struct.Active_dir* %3, %struct.Active_dir** %ay, align 8, !dbg !19197, !tbaa !2995
  %4 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !19199, !tbaa !2995
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %4, i32 0, i32 1, !dbg !19200, !ctir !2431
  %5 = load i64, i64* %ino, align 8, !dbg !19200, !tbaa !19183, !ctir !227
  %6 = load %struct.Active_dir*, %struct.Active_dir** %ay, align 8, !dbg !19201, !tbaa !2995
  %ino1 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %6, i32 0, i32 1, !dbg !19202, !ctir !2431
  %7 = load i64, i64* %ino1, align 8, !dbg !19202, !tbaa !19183, !ctir !227
  %cmp = icmp eq i64 %5, %7, !dbg !19203
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !19204

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !19205, !tbaa !2995
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %8, i32 0, i32 0, !dbg !19206, !ctir !2431
  %9 = load i64, i64* %dev, align 8, !dbg !19206, !tbaa !19207, !ctir !230
  %10 = load %struct.Active_dir*, %struct.Active_dir** %ay, align 8, !dbg !19208, !tbaa !2995
  %dev2 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %10, i32 0, i32 0, !dbg !19209, !ctir !2431
  %11 = load i64, i64* %dev2, align 8, !dbg !19209, !tbaa !19207, !ctir !230
  %cmp3 = icmp eq i64 %9, %11, !dbg !19210
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !19211
  ret i1 %12, !dbg !19212
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_compar(i8* %a, i8* %b) #4 !dbg !19213 !ctir !1088 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %pa = alloca %struct._ftsent**, align 8, !ctir !2315
  %pb = alloca %struct._ftsent**, align 8, !ctir !2315
  store i8* %a, i8** %a.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !19214, metadata !DIExpression()), !dbg !19215
  store i8* %b, i8** %b.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !19216, metadata !DIExpression()), !dbg !19217
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %pa, metadata !19218, metadata !DIExpression()), !dbg !19219
  %0 = load i8*, i8** %a.addr, align 8, !dbg !19220, !tbaa !2995
  %1 = bitcast i8* %0 to %struct._ftsent**, !dbg !19221
  store %struct._ftsent** %1, %struct._ftsent*** %pa, align 8, !dbg !19219, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %pb, metadata !19222, metadata !DIExpression()), !dbg !19223
  %2 = load i8*, i8** %b.addr, align 8, !dbg !19224, !tbaa !2995
  %3 = bitcast i8* %2 to %struct._ftsent**, !dbg !19225
  store %struct._ftsent** %3, %struct._ftsent*** %pb, align 8, !dbg !19223, !tbaa !2995
  %4 = load %struct._ftsent**, %struct._ftsent*** %pa, align 8, !dbg !19226, !tbaa !2995
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %4, i64 0, !dbg !19226, !ctir !2315
  %5 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !19226, !tbaa !2995
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 11, !dbg !19227, !ctir !2317
  %6 = load %struct.FTS*, %struct.FTS** %fts_fts, align 8, !dbg !19227, !tbaa !2995, !ctir !2334
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 9, !dbg !19228, !ctir !2335
  %7 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !19228, !tbaa !18419, !ctir !2349
  %8 = load %struct._ftsent**, %struct._ftsent*** %pa, align 8, !dbg !19229, !tbaa !2995
  %9 = load %struct._ftsent**, %struct._ftsent*** %pb, align 8, !dbg !19230, !tbaa !2995
  %call = call i32 %7(%struct._ftsent** %8, %struct._ftsent** %9), !dbg !19226
  ret i32 %call, !dbg !19231
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fts_close(%struct.FTS* %sp) #4 !dbg !19232 !ctir !2418 {
entry:
  %retval = alloca i32, align 4
  %sp.addr = alloca %struct.FTS*, align 8
  %freep = alloca %struct._ftsent*, align 8, !ctir !2417
  %p = alloca %struct._ftsent*, align 8, !ctir !2417
  %saved_errno = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19233, metadata !DIExpression()), !dbg !19234
  call void @llvm.dbg.declare(metadata %struct._ftsent** %freep, metadata !19235, metadata !DIExpression()), !dbg !19236
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !19237, metadata !DIExpression()), !dbg !19238
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !19239, metadata !DIExpression()), !dbg !19240
  store i32 0, i32* %saved_errno, align 4, !dbg !19240, !tbaa !2982
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19241, !tbaa !2995
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !19243, !ctir !2335
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !19243, !tbaa !18630, !ctir !2322
  %tobool = icmp ne %struct._ftsent* %1, null, !dbg !19241
  br i1 %tobool, label %if.then, label %if.end, !dbg !19244

if.then:                                          ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19245, !tbaa !2995
  %fts_cur1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 0, !dbg !19248, !ctir !2335
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_cur1, align 8, !dbg !19248, !tbaa !18630, !ctir !2322
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !19249, !tbaa !2995
  br label %for.cond, !dbg !19250

for.cond:                                         ; preds = %cond.end, %if.then
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19251, !tbaa !2995
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 12, !dbg !19253, !ctir !2318
  %5 = load i64, i64* %fts_level, align 8, !dbg !19253, !tbaa !3848, !ctir !566
  %cmp = icmp sge i64 %5, 0, !dbg !19254
  br i1 %cmp, label %for.body, label %for.end, !dbg !19255

for.body:                                         ; preds = %for.cond
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19256, !tbaa !2995
  store %struct._ftsent* %6, %struct._ftsent** %freep, align 8, !dbg !19258, !tbaa !2995
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19259, !tbaa !2995
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 2, !dbg !19260, !ctir !2318
  %8 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !19260, !tbaa !2995, !ctir !2322
  %cmp2 = icmp ne %struct._ftsent* %8, null, !dbg !19261
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !19259

cond.true:                                        ; preds = %for.body
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19262, !tbaa !2995
  %fts_link3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 2, !dbg !19263, !ctir !2318
  %10 = load %struct._ftsent*, %struct._ftsent** %fts_link3, align 8, !dbg !19263, !tbaa !2995, !ctir !2322
  br label %cond.end, !dbg !19259

cond.false:                                       ; preds = %for.body
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19264, !tbaa !2995
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 1, !dbg !19265, !ctir !2318
  %12 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !19265, !tbaa !2995, !ctir !2322
  br label %cond.end, !dbg !19259

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._ftsent* [ %10, %cond.true ], [ %12, %cond.false ], !dbg !19259
  store %struct._ftsent* %cond, %struct._ftsent** %p, align 8, !dbg !19266, !tbaa !2995
  %13 = load %struct._ftsent*, %struct._ftsent** %freep, align 8, !dbg !19267, !tbaa !2995
  %14 = bitcast %struct._ftsent* %13 to i8*, !dbg !19267
  call void @free(i8* %14) #10, !dbg !19268
  br label %for.cond, !dbg !19269, !llvm.loop !19270

for.end:                                          ; preds = %for.cond
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19272, !tbaa !2995
  %16 = bitcast %struct._ftsent* %15 to i8*, !dbg !19272
  call void @free(i8* %16) #10, !dbg !19273
  br label %if.end, !dbg !19274

if.end:                                           ; preds = %for.end, %entry
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19275, !tbaa !2995
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 1, !dbg !19277, !ctir !2335
  %18 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !19277, !tbaa !19278, !ctir !2322
  %tobool4 = icmp ne %struct._ftsent* %18, null, !dbg !19275
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !19279

if.then5:                                         ; preds = %if.end
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19280, !tbaa !2995
  %fts_child6 = getelementptr inbounds %struct.FTS, %struct.FTS* %19, i32 0, i32 1, !dbg !19281, !ctir !2335
  %20 = load %struct._ftsent*, %struct._ftsent** %fts_child6, align 8, !dbg !19281, !tbaa !19278, !ctir !2322
  call void @fts_lfree(%struct._ftsent* %20), !dbg !19282
  br label %if.end7, !dbg !19282

if.end7:                                          ; preds = %if.then5, %if.end
  %21 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19283, !tbaa !2995
  %fts_array = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 2, !dbg !19284, !ctir !2335
  %22 = load %struct._ftsent**, %struct._ftsent*** %fts_array, align 8, !dbg !19284, !tbaa !19014, !ctir !2341
  %23 = bitcast %struct._ftsent** %22 to i8*, !dbg !19283
  call void @free(i8* %23) #10, !dbg !19285
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19286, !tbaa !2995
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 4, !dbg !19287, !ctir !2335
  %25 = load i8*, i8** %fts_path, align 8, !dbg !19287, !tbaa !18681, !ctir !9
  call void @free(i8* %25) #10, !dbg !19288
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19289, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 10, !dbg !19289, !ctir !2335
  %27 = load i32, i32* %fts_options, align 8, !dbg !19289, !tbaa !18042, !ctir !7
  %and = and i32 %27, 512, !dbg !19289
  %tobool8 = icmp ne i32 %and, 0, !dbg !19289
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !19291

if.then9:                                         ; preds = %if.end7
  %28 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19292, !tbaa !2995
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %28, i32 0, i32 6, !dbg !19295, !ctir !2335
  %29 = load i32, i32* %fts_cwd_fd, align 4, !dbg !19295, !tbaa !3823, !ctir !7
  %cmp10 = icmp sle i32 0, %29, !dbg !19296
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !19297

if.then11:                                        ; preds = %if.then9
  %30 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19298, !tbaa !2995
  %fts_cwd_fd12 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 6, !dbg !19300, !ctir !2335
  %31 = load i32, i32* %fts_cwd_fd12, align 4, !dbg !19300, !tbaa !3823, !ctir !7
  %call = call i32 @close(i32 %31), !dbg !19301
  %tobool13 = icmp ne i32 %call, 0, !dbg !19301
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !19302

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #15, !dbg !19303
  %32 = load i32, i32* %call15, align 4, !dbg !19303, !tbaa !2982, !ctir !7
  store i32 %32, i32* %saved_errno, align 4, !dbg !19304, !tbaa !2982
  br label %if.end16, !dbg !19305

if.end16:                                         ; preds = %if.then14, %if.then11
  br label %if.end17, !dbg !19306

if.end17:                                         ; preds = %if.end16, %if.then9
  br label %if.end37, !dbg !19307

if.else:                                          ; preds = %if.end7
  %33 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19308, !tbaa !2995
  %fts_options18 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 10, !dbg !19308, !ctir !2335
  %34 = load i32, i32* %fts_options18, align 8, !dbg !19308, !tbaa !18042, !ctir !7
  %and19 = and i32 %34, 4, !dbg !19308
  %tobool20 = icmp ne i32 %and19, 0, !dbg !19308
  br i1 %tobool20, label %if.end36, label %if.then21, !dbg !19310

if.then21:                                        ; preds = %if.else
  %35 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19311, !tbaa !2995
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %35, i32 0, i32 5, !dbg !19314, !ctir !2335
  %36 = load i32, i32* %fts_rfd, align 8, !dbg !19314, !tbaa !18662, !ctir !7
  %call22 = call i32 @fchdir(i32 %36) #10, !dbg !19315
  %tobool23 = icmp ne i32 %call22, 0, !dbg !19315
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !19316

if.then24:                                        ; preds = %if.then21
  %call25 = call i32* @__errno_location() #15, !dbg !19317
  %37 = load i32, i32* %call25, align 4, !dbg !19317, !tbaa !2982, !ctir !7
  store i32 %37, i32* %saved_errno, align 4, !dbg !19318, !tbaa !2982
  br label %if.end26, !dbg !19319

if.end26:                                         ; preds = %if.then24, %if.then21
  %38 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19320, !tbaa !2995
  %fts_rfd27 = getelementptr inbounds %struct.FTS, %struct.FTS* %38, i32 0, i32 5, !dbg !19322, !ctir !2335
  %39 = load i32, i32* %fts_rfd27, align 8, !dbg !19322, !tbaa !18662, !ctir !7
  %call28 = call i32 @close(i32 %39), !dbg !19323
  %tobool29 = icmp ne i32 %call28, 0, !dbg !19323
  br i1 %tobool29, label %if.then30, label %if.end35, !dbg !19324

if.then30:                                        ; preds = %if.end26
  %40 = load i32, i32* %saved_errno, align 4, !dbg !19325, !tbaa !2982
  %cmp31 = icmp eq i32 %40, 0, !dbg !19327
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !19328

if.then32:                                        ; preds = %if.then30
  %call33 = call i32* @__errno_location() #15, !dbg !19329
  %41 = load i32, i32* %call33, align 4, !dbg !19329, !tbaa !2982, !ctir !7
  store i32 %41, i32* %saved_errno, align 4, !dbg !19330, !tbaa !2982
  br label %if.end34, !dbg !19331

if.end34:                                         ; preds = %if.then32, %if.then30
  br label %if.end35, !dbg !19332

if.end35:                                         ; preds = %if.end34, %if.end26
  br label %if.end36, !dbg !19333

if.end36:                                         ; preds = %if.end35, %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end17
  %42 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19334, !tbaa !2995
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %42, i32 0, i32 13, !dbg !19335, !ctir !2335
  call void @fd_ring_clear(%struct.I_ring* %fts_fd_ring), !dbg !19336
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19337, !tbaa !2995
  %fts_leaf_optimization_works_ht = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 11, !dbg !19339, !ctir !2335
  %44 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht, align 8, !dbg !19339, !tbaa !19340, !ctir !1431
  %tobool38 = icmp ne %struct.hash_table* %44, null, !dbg !19337
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !19341

if.then39:                                        ; preds = %if.end37
  %45 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19342, !tbaa !2995
  %fts_leaf_optimization_works_ht40 = getelementptr inbounds %struct.FTS, %struct.FTS* %45, i32 0, i32 11, !dbg !19343, !ctir !2335
  %46 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht40, align 8, !dbg !19343, !tbaa !19340, !ctir !1431
  call void @hash_free(%struct.hash_table* %46), !dbg !19344
  br label %if.end41, !dbg !19344

if.end41:                                         ; preds = %if.then39, %if.end37
  %47 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19345, !tbaa !2995
  call void @free_dir(%struct.FTS* %47), !dbg !19346
  %48 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19347, !tbaa !2995
  %49 = bitcast %struct.FTS* %48 to i8*, !dbg !19347
  call void @free(i8* %49) #10, !dbg !19348
  %50 = load i32, i32* %saved_errno, align 4, !dbg !19349, !tbaa !2982
  %tobool42 = icmp ne i32 %50, 0, !dbg !19349
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !19351

if.then43:                                        ; preds = %if.end41
  %51 = load i32, i32* %saved_errno, align 4, !dbg !19352, !tbaa !2982
  %call44 = call i32* @__errno_location() #15, !dbg !19352
  store i32 %51, i32* %call44, align 4, !dbg !19352, !tbaa !2982, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !19354
  br label %return, !dbg !19354

if.end45:                                         ; preds = %if.end41
  store i32 0, i32* %retval, align 4, !dbg !19355
  br label %return, !dbg !19355

return:                                           ; preds = %if.end45, %if.then43
  %52 = load i32, i32* %retval, align 4, !dbg !19356
  ret i32 %52, !dbg !19356
}

; Function Attrs: nounwind
declare dso_local i32 @fchdir(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fd_ring_clear(%struct.I_ring* %fd_ring) #4 !dbg !19357 !ctir !2442 {
entry:
  %fd_ring.addr = alloca %struct.I_ring*, align 8
  %fd = alloca i32, align 4, !ctir !7
  store %struct.I_ring* %fd_ring, %struct.I_ring** %fd_ring.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.I_ring** %fd_ring.addr, metadata !19358, metadata !DIExpression()), !dbg !19359
  br label %while.cond, !dbg !19360

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.I_ring*, %struct.I_ring** %fd_ring.addr, align 8, !dbg !19361, !tbaa !2995
  %call = call zeroext i1 @i_ring_empty(%struct.I_ring* %0) #14, !dbg !19362
  %lnot = xor i1 %call, true, !dbg !19363
  br i1 %lnot, label %while.body, label %while.end, !dbg !19360

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !19364, metadata !DIExpression()), !dbg !19366
  %1 = load %struct.I_ring*, %struct.I_ring** %fd_ring.addr, align 8, !dbg !19367, !tbaa !2995
  %call1 = call i32 @i_ring_pop(%struct.I_ring* %1), !dbg !19368
  store i32 %call1, i32* %fd, align 4, !dbg !19366, !tbaa !2982
  %2 = load i32, i32* %fd, align 4, !dbg !19369, !tbaa !2982
  %cmp = icmp sle i32 0, %2, !dbg !19371
  br i1 %cmp, label %if.then, label %if.end, !dbg !19372

if.then:                                          ; preds = %while.body
  %3 = load i32, i32* %fd, align 4, !dbg !19373, !tbaa !2982
  %call2 = call i32 @close(i32 %3), !dbg !19374
  br label %if.end, !dbg !19374

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !19360, !llvm.loop !19375

while.end:                                        ; preds = %while.cond
  ret void, !dbg !19377
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_dir(%struct.FTS* %sp) #4 !dbg !19378 !ctir !2445 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19379, metadata !DIExpression()), !dbg !19380
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19381, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !19383, !ctir !2335
  %1 = load i32, i32* %fts_options, align 8, !dbg !19383, !tbaa !18042, !ctir !7
  %and = and i32 %1, 258, !dbg !19384
  %tobool = icmp ne i32 %and, 0, !dbg !19384
  br i1 %tobool, label %if.then, label %if.else, !dbg !19385

if.then:                                          ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19386, !tbaa !2995
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 12, !dbg !19389, !ctir !2335
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !19390
  %3 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !19390, !tbaa !3657, !ctir !2358
  %tobool1 = icmp ne %struct.hash_table* %3, null, !dbg !19386
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !19391

if.then2:                                         ; preds = %if.then
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19392, !tbaa !2995
  %fts_cycle3 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 12, !dbg !19393, !ctir !2335
  %ht4 = bitcast %union.anon* %fts_cycle3 to %struct.hash_table**, !dbg !19394
  %5 = load %struct.hash_table*, %struct.hash_table** %ht4, align 8, !dbg !19394, !tbaa !3657, !ctir !2358
  call void @hash_free(%struct.hash_table* %5), !dbg !19395
  br label %if.end, !dbg !19395

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end6, !dbg !19396

if.else:                                          ; preds = %entry
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19397, !tbaa !2995
  %fts_cycle5 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 12, !dbg !19398, !ctir !2335
  %state = bitcast %union.anon* %fts_cycle5 to %struct.cycle_check_state**, !dbg !19399
  %7 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !19399, !tbaa !3657, !ctir !2358
  %8 = bitcast %struct.cycle_check_state* %7 to i8*, !dbg !19397
  call void @free(i8* %8) #10, !dbg !19400
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end
  ret void, !dbg !19401
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._ftsent* @rpl_fts_read(%struct.FTS* %sp) #4 !dbg !19402 !ctir !2420 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !2417
  %tmp = alloca %struct._ftsent*, align 8, !ctir !2417
  %instr = alloca i16, align 2, !ctir !33
  %t = alloca i8*, align 8, !ctir !9
  %parent = alloca %struct._ftsent*, align 8, !ctir !2417
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19403, metadata !DIExpression()), !dbg !19404
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !19405, metadata !DIExpression()), !dbg !19406
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tmp, metadata !19407, metadata !DIExpression()), !dbg !19408
  call void @llvm.dbg.declare(metadata i16* %instr, metadata !19409, metadata !DIExpression()), !dbg !19410
  call void @llvm.dbg.declare(metadata i8** %t, metadata !19411, metadata !DIExpression()), !dbg !19412
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19413, !tbaa !2995
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !19415, !ctir !2335
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !19415, !tbaa !18630, !ctir !2322
  %cmp = icmp eq %struct._ftsent* %1, null, !dbg !19416
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19417

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19418, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !19418, !ctir !2335
  %3 = load i32, i32* %fts_options, align 8, !dbg !19418, !tbaa !18042, !ctir !7
  %and = and i32 %3, 8192, !dbg !19418
  %tobool = icmp ne i32 %and, 0, !dbg !19418
  br i1 %tobool, label %if.then, label %if.end, !dbg !19419

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19420
  br label %return, !dbg !19420

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19421, !tbaa !2995
  %fts_cur1 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 0, !dbg !19422, !ctir !2335
  %5 = load %struct._ftsent*, %struct._ftsent** %fts_cur1, align 8, !dbg !19422, !tbaa !18630, !ctir !2322
  store %struct._ftsent* %5, %struct._ftsent** %p, align 8, !dbg !19423, !tbaa !2995
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19424, !tbaa !2995
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 17, !dbg !19425, !ctir !2318
  %7 = load i16, i16* %fts_instr, align 4, !dbg !19425, !tbaa !3810, !ctir !33
  store i16 %7, i16* %instr, align 2, !dbg !19426, !tbaa !3810
  %8 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19427, !tbaa !2995
  %fts_instr2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 17, !dbg !19428, !ctir !2318
  store i16 3, i16* %fts_instr2, align 4, !dbg !19429, !tbaa !3810, !ctir !33
  %9 = load i16, i16* %instr, align 2, !dbg !19430, !tbaa !3810
  %conv = zext i16 %9 to i32, !dbg !19430
  %cmp3 = icmp eq i32 %conv, 1, !dbg !19432
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !19433

if.then5:                                         ; preds = %if.end
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19434, !tbaa !2995
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19436, !tbaa !2995
  %call = call zeroext i16 @fts_stat(%struct.FTS* %10, %struct._ftsent* %11, i1 zeroext false), !dbg !19437
  %12 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19438, !tbaa !2995
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 15, !dbg !19439, !ctir !2318
  store i16 %call, i16* %fts_info, align 8, !dbg !19440, !tbaa !3810, !ctir !33
  %13 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19441, !tbaa !2995
  store %struct._ftsent* %13, %struct._ftsent** %retval, align 8, !dbg !19442
  br label %return, !dbg !19442

if.end6:                                          ; preds = %if.end
  %14 = load i16, i16* %instr, align 2, !dbg !19443, !tbaa !3810
  %conv7 = zext i16 %14 to i32, !dbg !19443
  %cmp8 = icmp eq i32 %conv7, 2, !dbg !19445
  br i1 %cmp8, label %land.lhs.true, label %if.end41, !dbg !19446

land.lhs.true:                                    ; preds = %if.end6
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19447, !tbaa !2995
  %fts_info10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 15, !dbg !19448, !ctir !2318
  %16 = load i16, i16* %fts_info10, align 8, !dbg !19448, !tbaa !3810, !ctir !33
  %conv11 = zext i16 %16 to i32, !dbg !19447
  %cmp12 = icmp eq i32 %conv11, 12, !dbg !19449
  br i1 %cmp12, label %if.then19, label %lor.lhs.false14, !dbg !19450

lor.lhs.false14:                                  ; preds = %land.lhs.true
  %17 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19451, !tbaa !2995
  %fts_info15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 15, !dbg !19452, !ctir !2318
  %18 = load i16, i16* %fts_info15, align 8, !dbg !19452, !tbaa !3810, !ctir !33
  %conv16 = zext i16 %18 to i32, !dbg !19451
  %cmp17 = icmp eq i32 %conv16, 13, !dbg !19453
  br i1 %cmp17, label %if.then19, label %if.end41, !dbg !19454

if.then19:                                        ; preds = %lor.lhs.false14, %land.lhs.true
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19455, !tbaa !2995
  %20 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19457, !tbaa !2995
  %call20 = call zeroext i16 @fts_stat(%struct.FTS* %19, %struct._ftsent* %20, i1 zeroext true), !dbg !19458
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19459, !tbaa !2995
  %fts_info21 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 15, !dbg !19460, !ctir !2318
  store i16 %call20, i16* %fts_info21, align 8, !dbg !19461, !tbaa !3810, !ctir !33
  %22 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19462, !tbaa !2995
  %fts_info22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 15, !dbg !19464, !ctir !2318
  %23 = load i16, i16* %fts_info22, align 8, !dbg !19464, !tbaa !3810, !ctir !33
  %conv23 = zext i16 %23 to i32, !dbg !19462
  %cmp24 = icmp eq i32 %conv23, 1, !dbg !19465
  br i1 %cmp24, label %land.lhs.true26, label %if.end40, !dbg !19466

land.lhs.true26:                                  ; preds = %if.then19
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19467, !tbaa !2995
  %fts_options27 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !19467, !ctir !2335
  %25 = load i32, i32* %fts_options27, align 8, !dbg !19467, !tbaa !18042, !ctir !7
  %and28 = and i32 %25, 4, !dbg !19467
  %tobool29 = icmp ne i32 %and28, 0, !dbg !19467
  br i1 %tobool29, label %if.end40, label %if.then30, !dbg !19468

if.then30:                                        ; preds = %land.lhs.true26
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19469, !tbaa !2995
  %call31 = call i32 @diropen(%struct.FTS* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.434, i64 0, i64 0)), !dbg !19472
  %27 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19473, !tbaa !2995
  %fts_symfd = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 9, !dbg !19474, !ctir !2318
  store i32 %call31, i32* %fts_symfd, align 4, !dbg !19475, !tbaa !2982, !ctir !7
  %cmp32 = icmp slt i32 %call31, 0, !dbg !19476
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !19477

if.then34:                                        ; preds = %if.then30
  %call35 = call i32* @__errno_location() #15, !dbg !19478
  %28 = load i32, i32* %call35, align 4, !dbg !19478, !tbaa !2982, !ctir !7
  %29 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19480, !tbaa !2995
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 8, !dbg !19481, !ctir !2318
  store i32 %28, i32* %fts_errno, align 8, !dbg !19482, !tbaa !2982, !ctir !7
  %30 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19483, !tbaa !2995
  %fts_info36 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 15, !dbg !19484, !ctir !2318
  store i16 7, i16* %fts_info36, align 8, !dbg !19485, !tbaa !3810, !ctir !33
  br label %if.end39, !dbg !19486

if.else:                                          ; preds = %if.then30
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19487, !tbaa !2995
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 16, !dbg !19488, !ctir !2318
  %32 = load i16, i16* %fts_flags, align 2, !dbg !19489, !tbaa !3810, !ctir !33
  %conv37 = zext i16 %32 to i32, !dbg !19489
  %or = or i32 %conv37, 2, !dbg !19489
  %conv38 = trunc i32 %or to i16, !dbg !19489
  store i16 %conv38, i16* %fts_flags, align 2, !dbg !19489, !tbaa !3810, !ctir !33
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then34
  br label %if.end40, !dbg !19490

if.end40:                                         ; preds = %if.end39, %land.lhs.true26, %if.then19
  br label %check_for_dir, !dbg !19491

if.end41:                                         ; preds = %lor.lhs.false14, %if.end6
  %33 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19492, !tbaa !2995
  %fts_info42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 15, !dbg !19494, !ctir !2318
  %34 = load i16, i16* %fts_info42, align 8, !dbg !19494, !tbaa !3810, !ctir !33
  %conv43 = zext i16 %34 to i32, !dbg !19492
  %cmp44 = icmp eq i32 %conv43, 1, !dbg !19495
  br i1 %cmp44, label %if.then46, label %if.end132, !dbg !19496

if.then46:                                        ; preds = %if.end41
  %35 = load i16, i16* %instr, align 2, !dbg !19497, !tbaa !3810
  %conv47 = zext i16 %35 to i32, !dbg !19497
  %cmp48 = icmp eq i32 %conv47, 4, !dbg !19500
  br i1 %cmp48, label %if.then57, label %lor.lhs.false50, !dbg !19501

lor.lhs.false50:                                  ; preds = %if.then46
  %36 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19502, !tbaa !2995
  %fts_options51 = getelementptr inbounds %struct.FTS, %struct.FTS* %36, i32 0, i32 10, !dbg !19502, !ctir !2335
  %37 = load i32, i32* %fts_options51, align 8, !dbg !19502, !tbaa !18042, !ctir !7
  %and52 = and i32 %37, 64, !dbg !19502
  %tobool53 = icmp ne i32 %and52, 0, !dbg !19502
  br i1 %tobool53, label %land.lhs.true54, label %if.end72, !dbg !19503

land.lhs.true54:                                  ; preds = %lor.lhs.false50
  %38 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19504, !tbaa !2995
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 18, !dbg !19505, !ctir !2318
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !19506
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !19506, !ctir !2390
  %39 = load i64, i64* %st_dev, align 8, !dbg !19506, !tbaa !3873, !ctir !231
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19507, !tbaa !2995
  %fts_dev = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 3, !dbg !19508, !ctir !2335
  %41 = load i64, i64* %fts_dev, align 8, !dbg !19508, !tbaa !3920, !ctir !230
  %cmp55 = icmp ne i64 %39, %41, !dbg !19509
  br i1 %cmp55, label %if.then57, label %if.end72, !dbg !19510

if.then57:                                        ; preds = %land.lhs.true54, %if.then46
  %42 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19511, !tbaa !2995
  %fts_flags58 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 16, !dbg !19514, !ctir !2318
  %43 = load i16, i16* %fts_flags58, align 2, !dbg !19514, !tbaa !3810, !ctir !33
  %conv59 = zext i16 %43 to i32, !dbg !19511
  %and60 = and i32 %conv59, 2, !dbg !19515
  %tobool61 = icmp ne i32 %and60, 0, !dbg !19515
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !19516

if.then62:                                        ; preds = %if.then57
  %44 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19517, !tbaa !2995
  %fts_symfd63 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 9, !dbg !19518, !ctir !2318
  %45 = load i32, i32* %fts_symfd63, align 4, !dbg !19518, !tbaa !2982, !ctir !7
  %call64 = call i32 @close(i32 %45), !dbg !19519
  br label %if.end65, !dbg !19520

if.end65:                                         ; preds = %if.then62, %if.then57
  %46 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19521, !tbaa !2995
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %46, i32 0, i32 1, !dbg !19523, !ctir !2335
  %47 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !19523, !tbaa !19278, !ctir !2322
  %tobool66 = icmp ne %struct._ftsent* %47, null, !dbg !19521
  br i1 %tobool66, label %if.then67, label %if.end70, !dbg !19524

if.then67:                                        ; preds = %if.end65
  %48 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19525, !tbaa !2995
  %fts_child68 = getelementptr inbounds %struct.FTS, %struct.FTS* %48, i32 0, i32 1, !dbg !19527, !ctir !2335
  %49 = load %struct._ftsent*, %struct._ftsent** %fts_child68, align 8, !dbg !19527, !tbaa !19278, !ctir !2322
  call void @fts_lfree(%struct._ftsent* %49), !dbg !19528
  %50 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19529, !tbaa !2995
  %fts_child69 = getelementptr inbounds %struct.FTS, %struct.FTS* %50, i32 0, i32 1, !dbg !19530, !ctir !2335
  store %struct._ftsent* null, %struct._ftsent** %fts_child69, align 8, !dbg !19531, !tbaa !19278, !ctir !2322
  br label %if.end70, !dbg !19532

if.end70:                                         ; preds = %if.then67, %if.end65
  %51 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19533, !tbaa !2995
  %fts_info71 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %51, i32 0, i32 15, !dbg !19534, !ctir !2318
  store i16 6, i16* %fts_info71, align 8, !dbg !19535, !tbaa !3810, !ctir !33
  br label %do.body, !dbg !19536

do.body:                                          ; preds = %if.end70
  %52 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19537, !tbaa !2995
  %53 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19537, !tbaa !2995
  call void @leave_dir(%struct.FTS* %52, %struct._ftsent* %53), !dbg !19537
  br label %do.end, !dbg !19537

do.end:                                           ; preds = %do.body
  %54 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19539, !tbaa !2995
  store %struct._ftsent* %54, %struct._ftsent** %retval, align 8, !dbg !19540
  br label %return, !dbg !19540

if.end72:                                         ; preds = %land.lhs.true54, %lor.lhs.false50
  %55 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19541, !tbaa !2995
  %fts_child73 = getelementptr inbounds %struct.FTS, %struct.FTS* %55, i32 0, i32 1, !dbg !19543, !ctir !2335
  %56 = load %struct._ftsent*, %struct._ftsent** %fts_child73, align 8, !dbg !19543, !tbaa !19278, !ctir !2322
  %cmp74 = icmp ne %struct._ftsent* %56, null, !dbg !19544
  br i1 %cmp74, label %land.lhs.true76, label %if.end85, !dbg !19545

land.lhs.true76:                                  ; preds = %if.end72
  %57 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19546, !tbaa !2995
  %fts_options77 = getelementptr inbounds %struct.FTS, %struct.FTS* %57, i32 0, i32 10, !dbg !19546, !ctir !2335
  %58 = load i32, i32* %fts_options77, align 8, !dbg !19546, !tbaa !18042, !ctir !7
  %and78 = and i32 %58, 4096, !dbg !19546
  %tobool79 = icmp ne i32 %and78, 0, !dbg !19546
  br i1 %tobool79, label %if.then80, label %if.end85, !dbg !19547

if.then80:                                        ; preds = %land.lhs.true76
  %59 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19548, !tbaa !2995
  %fts_options81 = getelementptr inbounds %struct.FTS, %struct.FTS* %59, i32 0, i32 10, !dbg !19548, !ctir !2335
  %60 = load i32, i32* %fts_options81, align 8, !dbg !19548, !tbaa !18042, !ctir !7
  %and82 = and i32 %60, -4097, !dbg !19548
  store i32 %and82, i32* %fts_options81, align 8, !dbg !19548, !tbaa !18042, !ctir !7
  %61 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19550, !tbaa !2995
  %fts_child83 = getelementptr inbounds %struct.FTS, %struct.FTS* %61, i32 0, i32 1, !dbg !19551, !ctir !2335
  %62 = load %struct._ftsent*, %struct._ftsent** %fts_child83, align 8, !dbg !19551, !tbaa !19278, !ctir !2322
  call void @fts_lfree(%struct._ftsent* %62), !dbg !19552
  %63 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19553, !tbaa !2995
  %fts_child84 = getelementptr inbounds %struct.FTS, %struct.FTS* %63, i32 0, i32 1, !dbg !19554, !ctir !2335
  store %struct._ftsent* null, %struct._ftsent** %fts_child84, align 8, !dbg !19555, !tbaa !19278, !ctir !2322
  br label %if.end85, !dbg !19556

if.end85:                                         ; preds = %if.then80, %land.lhs.true76, %if.end72
  %64 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19557, !tbaa !2995
  %fts_child86 = getelementptr inbounds %struct.FTS, %struct.FTS* %64, i32 0, i32 1, !dbg !19559, !ctir !2335
  %65 = load %struct._ftsent*, %struct._ftsent** %fts_child86, align 8, !dbg !19559, !tbaa !19278, !ctir !2322
  %cmp87 = icmp ne %struct._ftsent* %65, null, !dbg !19560
  br i1 %cmp87, label %if.then89, label %if.else105, !dbg !19561

if.then89:                                        ; preds = %if.end85
  %66 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19562, !tbaa !2995
  %67 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19565, !tbaa !2995
  %68 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19566, !tbaa !2995
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %68, i32 0, i32 6, !dbg !19567, !ctir !2318
  %69 = load i8*, i8** %fts_accpath, align 8, !dbg !19567, !tbaa !2995, !ctir !9
  %call90 = call i32 @fts_safe_changedir(%struct.FTS* %66, %struct._ftsent* %67, i32 -1, i8* %69), !dbg !19568
  %tobool91 = icmp ne i32 %call90, 0, !dbg !19568
  br i1 %tobool91, label %if.then92, label %if.end104, !dbg !19569

if.then92:                                        ; preds = %if.then89
  %call93 = call i32* @__errno_location() #15, !dbg !19570
  %70 = load i32, i32* %call93, align 4, !dbg !19570, !tbaa !2982, !ctir !7
  %71 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19572, !tbaa !2995
  %fts_errno94 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %71, i32 0, i32 8, !dbg !19573, !ctir !2318
  store i32 %70, i32* %fts_errno94, align 8, !dbg !19574, !tbaa !2982, !ctir !7
  %72 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19575, !tbaa !2995
  %fts_flags95 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %72, i32 0, i32 16, !dbg !19576, !ctir !2318
  %73 = load i16, i16* %fts_flags95, align 2, !dbg !19577, !tbaa !3810, !ctir !33
  %conv96 = zext i16 %73 to i32, !dbg !19577
  %or97 = or i32 %conv96, 1, !dbg !19577
  %conv98 = trunc i32 %or97 to i16, !dbg !19577
  store i16 %conv98, i16* %fts_flags95, align 2, !dbg !19577, !tbaa !3810, !ctir !33
  %74 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19578, !tbaa !2995
  %fts_child99 = getelementptr inbounds %struct.FTS, %struct.FTS* %74, i32 0, i32 1, !dbg !19580, !ctir !2335
  %75 = load %struct._ftsent*, %struct._ftsent** %fts_child99, align 8, !dbg !19580, !tbaa !19278, !ctir !2322
  store %struct._ftsent* %75, %struct._ftsent** %p, align 8, !dbg !19581, !tbaa !2995
  br label %for.cond, !dbg !19582

for.cond:                                         ; preds = %for.inc, %if.then92
  %76 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19583, !tbaa !2995
  %cmp100 = icmp ne %struct._ftsent* %76, null, !dbg !19585
  br i1 %cmp100, label %for.body, label %for.end, !dbg !19586

for.body:                                         ; preds = %for.cond
  %77 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19587, !tbaa !2995
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %77, i32 0, i32 1, !dbg !19588, !ctir !2318
  %78 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !19588, !tbaa !2995, !ctir !2322
  %fts_accpath102 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %78, i32 0, i32 6, !dbg !19589, !ctir !2319
  %79 = load i8*, i8** %fts_accpath102, align 8, !dbg !19589, !tbaa !2995, !ctir !9
  %80 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19590, !tbaa !2995
  %fts_accpath103 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %80, i32 0, i32 6, !dbg !19591, !ctir !2318
  store i8* %79, i8** %fts_accpath103, align 8, !dbg !19592, !tbaa !2995, !ctir !9
  br label %for.inc, !dbg !19590

for.inc:                                          ; preds = %for.body
  %81 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19593, !tbaa !2995
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 2, !dbg !19594, !ctir !2318
  %82 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !19594, !tbaa !2995, !ctir !2322
  store %struct._ftsent* %82, %struct._ftsent** %p, align 8, !dbg !19595, !tbaa !2995
  br label %for.cond, !dbg !19596, !llvm.loop !19597

for.end:                                          ; preds = %for.cond
  br label %if.end104, !dbg !19599

if.end104:                                        ; preds = %for.end, %if.then89
  br label %if.end129, !dbg !19600

if.else105:                                       ; preds = %if.end85
  %83 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19601, !tbaa !2995
  %call106 = call %struct._ftsent* @fts_build(%struct.FTS* %83, i32 3), !dbg !19603
  %84 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19604, !tbaa !2995
  %fts_child107 = getelementptr inbounds %struct.FTS, %struct.FTS* %84, i32 0, i32 1, !dbg !19605, !ctir !2335
  store %struct._ftsent* %call106, %struct._ftsent** %fts_child107, align 8, !dbg !19606, !tbaa !19278, !ctir !2322
  %cmp108 = icmp eq %struct._ftsent* %call106, null, !dbg !19607
  br i1 %cmp108, label %if.then110, label %if.end128, !dbg !19608

if.then110:                                       ; preds = %if.else105
  %85 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19609, !tbaa !2995
  %fts_options111 = getelementptr inbounds %struct.FTS, %struct.FTS* %85, i32 0, i32 10, !dbg !19609, !ctir !2335
  %86 = load i32, i32* %fts_options111, align 8, !dbg !19609, !tbaa !18042, !ctir !7
  %and112 = and i32 %86, 8192, !dbg !19609
  %tobool113 = icmp ne i32 %and112, 0, !dbg !19609
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !19612

if.then114:                                       ; preds = %if.then110
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19613
  br label %return, !dbg !19613

if.end115:                                        ; preds = %if.then110
  %87 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19614, !tbaa !2995
  %fts_errno116 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %87, i32 0, i32 8, !dbg !19616, !ctir !2318
  %88 = load i32, i32* %fts_errno116, align 8, !dbg !19616, !tbaa !2982, !ctir !7
  %tobool117 = icmp ne i32 %88, 0, !dbg !19614
  br i1 %tobool117, label %land.lhs.true118, label %if.end125, !dbg !19617

land.lhs.true118:                                 ; preds = %if.end115
  %89 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19618, !tbaa !2995
  %fts_info119 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %89, i32 0, i32 15, !dbg !19619, !ctir !2318
  %90 = load i16, i16* %fts_info119, align 8, !dbg !19619, !tbaa !3810, !ctir !33
  %conv120 = zext i16 %90 to i32, !dbg !19618
  %cmp121 = icmp ne i32 %conv120, 4, !dbg !19620
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !19621

if.then123:                                       ; preds = %land.lhs.true118
  %91 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19622, !tbaa !2995
  %fts_info124 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 15, !dbg !19623, !ctir !2318
  store i16 7, i16* %fts_info124, align 8, !dbg !19624, !tbaa !3810, !ctir !33
  br label %if.end125, !dbg !19622

if.end125:                                        ; preds = %if.then123, %land.lhs.true118, %if.end115
  br label %do.body126, !dbg !19625

do.body126:                                       ; preds = %if.end125
  %92 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19626, !tbaa !2995
  %93 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19626, !tbaa !2995
  call void @leave_dir(%struct.FTS* %92, %struct._ftsent* %93), !dbg !19626
  br label %do.end127, !dbg !19626

do.end127:                                        ; preds = %do.body126
  %94 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19628, !tbaa !2995
  store %struct._ftsent* %94, %struct._ftsent** %retval, align 8, !dbg !19629
  br label %return, !dbg !19629

if.end128:                                        ; preds = %if.else105
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end104
  %95 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19630, !tbaa !2995
  %fts_child130 = getelementptr inbounds %struct.FTS, %struct.FTS* %95, i32 0, i32 1, !dbg !19631, !ctir !2335
  %96 = load %struct._ftsent*, %struct._ftsent** %fts_child130, align 8, !dbg !19631, !tbaa !19278, !ctir !2322
  store %struct._ftsent* %96, %struct._ftsent** %p, align 8, !dbg !19632, !tbaa !2995
  %97 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19633, !tbaa !2995
  %fts_child131 = getelementptr inbounds %struct.FTS, %struct.FTS* %97, i32 0, i32 1, !dbg !19634, !ctir !2335
  store %struct._ftsent* null, %struct._ftsent** %fts_child131, align 8, !dbg !19635, !tbaa !19278, !ctir !2322
  br label %name, !dbg !19636

if.end132:                                        ; preds = %if.end41
  br label %next, !dbg !19637

next:                                             ; preds = %if.then173, %if.end132
  call void @llvm.dbg.label(metadata !19638), !dbg !19639
  %98 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19640, !tbaa !2995
  store %struct._ftsent* %98, %struct._ftsent** %tmp, align 8, !dbg !19641, !tbaa !2995
  %99 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19642, !tbaa !2995
  %fts_link133 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %99, i32 0, i32 2, !dbg !19644, !ctir !2318
  %100 = load %struct._ftsent*, %struct._ftsent** %fts_link133, align 8, !dbg !19644, !tbaa !2995, !ctir !2322
  %cmp134 = icmp eq %struct._ftsent* %100, null, !dbg !19645
  br i1 %cmp134, label %land.lhs.true136, label %if.end152, !dbg !19646

land.lhs.true136:                                 ; preds = %next
  %101 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19647, !tbaa !2995
  %fts_parent137 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %101, i32 0, i32 1, !dbg !19648, !ctir !2318
  %102 = load %struct._ftsent*, %struct._ftsent** %fts_parent137, align 8, !dbg !19648, !tbaa !2995, !ctir !2322
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %102, i32 0, i32 3, !dbg !19649, !ctir !2319
  %103 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !19649, !tbaa !2995, !ctir !607
  %tobool138 = icmp ne %struct.__dirstream* %103, null, !dbg !19647
  br i1 %tobool138, label %if.then139, label %if.end152, !dbg !19650

if.then139:                                       ; preds = %land.lhs.true136
  %104 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19651, !tbaa !2995
  %fts_parent140 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %104, i32 0, i32 1, !dbg !19653, !ctir !2318
  %105 = load %struct._ftsent*, %struct._ftsent** %fts_parent140, align 8, !dbg !19653, !tbaa !2995, !ctir !2322
  store %struct._ftsent* %105, %struct._ftsent** %p, align 8, !dbg !19654, !tbaa !2995
  %106 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19655, !tbaa !2995
  %107 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19656, !tbaa !2995
  %fts_cur141 = getelementptr inbounds %struct.FTS, %struct.FTS* %107, i32 0, i32 0, !dbg !19657, !ctir !2335
  store %struct._ftsent* %106, %struct._ftsent** %fts_cur141, align 8, !dbg !19658, !tbaa !18630, !ctir !2322
  %108 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19659, !tbaa !2995
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %108, i32 0, i32 4, !dbg !19660, !ctir !2335
  %109 = load i8*, i8** %fts_path, align 8, !dbg !19660, !tbaa !18681, !ctir !9
  %110 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19661, !tbaa !2995
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 10, !dbg !19662, !ctir !2318
  %111 = load i64, i64* %fts_pathlen, align 8, !dbg !19662, !tbaa !3848, !ctir !55
  %arrayidx = getelementptr inbounds i8, i8* %109, i64 %111, !dbg !19659, !ctir !9
  store i8 0, i8* %arrayidx, align 1, !dbg !19663, !tbaa !3657
  %112 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19664, !tbaa !2995
  %call142 = call %struct._ftsent* @fts_build(%struct.FTS* %112, i32 3), !dbg !19666
  store %struct._ftsent* %call142, %struct._ftsent** %p, align 8, !dbg !19667, !tbaa !2995
  %cmp143 = icmp eq %struct._ftsent* %call142, null, !dbg !19668
  br i1 %cmp143, label %if.then145, label %if.end151, !dbg !19669

if.then145:                                       ; preds = %if.then139
  %113 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19670, !tbaa !2995
  %fts_options146 = getelementptr inbounds %struct.FTS, %struct.FTS* %113, i32 0, i32 10, !dbg !19670, !ctir !2335
  %114 = load i32, i32* %fts_options146, align 8, !dbg !19670, !tbaa !18042, !ctir !7
  %and147 = and i32 %114, 8192, !dbg !19670
  %tobool148 = icmp ne i32 %and147, 0, !dbg !19670
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !19673

if.then149:                                       ; preds = %if.then145
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19674
  br label %return, !dbg !19674

if.end150:                                        ; preds = %if.then145
  br label %cd_dot_dot, !dbg !19675

if.end151:                                        ; preds = %if.then139
  %115 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19676, !tbaa !2995
  %116 = bitcast %struct._ftsent* %115 to i8*, !dbg !19676
  call void @free(i8* %116) #10, !dbg !19677
  br label %name, !dbg !19678

if.end152:                                        ; preds = %land.lhs.true136, %next
  %117 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19679, !tbaa !2995
  %fts_link153 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %117, i32 0, i32 2, !dbg !19681, !ctir !2318
  %118 = load %struct._ftsent*, %struct._ftsent** %fts_link153, align 8, !dbg !19681, !tbaa !2995, !ctir !2322
  store %struct._ftsent* %118, %struct._ftsent** %p, align 8, !dbg !19682, !tbaa !2995
  %cmp154 = icmp ne %struct._ftsent* %118, null, !dbg !19683
  br i1 %cmp154, label %if.then156, label %if.end305, !dbg !19684

if.then156:                                       ; preds = %if.end152
  %119 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19685, !tbaa !2995
  %120 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19687, !tbaa !2995
  %fts_cur157 = getelementptr inbounds %struct.FTS, %struct.FTS* %120, i32 0, i32 0, !dbg !19688, !ctir !2335
  store %struct._ftsent* %119, %struct._ftsent** %fts_cur157, align 8, !dbg !19689, !tbaa !18630, !ctir !2322
  %121 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19690, !tbaa !2995
  %122 = bitcast %struct._ftsent* %121 to i8*, !dbg !19690
  call void @free(i8* %122) #10, !dbg !19691
  %123 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19692, !tbaa !2995
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %123, i32 0, i32 12, !dbg !19694, !ctir !2318
  %124 = load i64, i64* %fts_level, align 8, !dbg !19694, !tbaa !3848, !ctir !566
  %cmp158 = icmp eq i64 %124, 0, !dbg !19695
  br i1 %cmp158, label %if.then160, label %if.end168, !dbg !19696

if.then160:                                       ; preds = %if.then156
  %125 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19697, !tbaa !2995
  %call161 = call i32 @restore_initial_cwd(%struct.FTS* %125), !dbg !19700
  %tobool162 = icmp ne i32 %call161, 0, !dbg !19700
  br i1 %tobool162, label %if.then163, label %if.end166, !dbg !19701

if.then163:                                       ; preds = %if.then160
  %126 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19702, !tbaa !2995
  %fts_options164 = getelementptr inbounds %struct.FTS, %struct.FTS* %126, i32 0, i32 10, !dbg !19702, !ctir !2335
  %127 = load i32, i32* %fts_options164, align 8, !dbg !19702, !tbaa !18042, !ctir !7
  %or165 = or i32 %127, 8192, !dbg !19702
  store i32 %or165, i32* %fts_options164, align 8, !dbg !19702, !tbaa !18042, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19704
  br label %return, !dbg !19704

if.end166:                                        ; preds = %if.then160
  %128 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19705, !tbaa !2995
  call void @free_dir(%struct.FTS* %128), !dbg !19706
  %129 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19707, !tbaa !2995
  %130 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19708, !tbaa !2995
  call void @fts_load(%struct.FTS* %129, %struct._ftsent* %130), !dbg !19709
  %131 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19710, !tbaa !2995
  %call167 = call zeroext i1 @setup_dir(%struct.FTS* %131), !dbg !19711
  br label %check_for_dir, !dbg !19712

if.end168:                                        ; preds = %if.then156
  %132 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19713, !tbaa !2995
  %fts_instr169 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %132, i32 0, i32 17, !dbg !19715, !ctir !2318
  %133 = load i16, i16* %fts_instr169, align 4, !dbg !19715, !tbaa !3810, !ctir !33
  %conv170 = zext i16 %133 to i32, !dbg !19713
  %cmp171 = icmp eq i32 %conv170, 4, !dbg !19716
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !19717

if.then173:                                       ; preds = %if.end168
  br label %next, !dbg !19718

if.end174:                                        ; preds = %if.end168
  %134 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19719, !tbaa !2995
  %fts_instr175 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %134, i32 0, i32 17, !dbg !19721, !ctir !2318
  %135 = load i16, i16* %fts_instr175, align 4, !dbg !19721, !tbaa !3810, !ctir !33
  %conv176 = zext i16 %135 to i32, !dbg !19719
  %cmp177 = icmp eq i32 %conv176, 2, !dbg !19722
  br i1 %cmp177, label %if.then179, label %if.end207, !dbg !19723

if.then179:                                       ; preds = %if.end174
  %136 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19724, !tbaa !2995
  %137 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19726, !tbaa !2995
  %call180 = call zeroext i16 @fts_stat(%struct.FTS* %136, %struct._ftsent* %137, i1 zeroext true), !dbg !19727
  %138 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19728, !tbaa !2995
  %fts_info181 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %138, i32 0, i32 15, !dbg !19729, !ctir !2318
  store i16 %call180, i16* %fts_info181, align 8, !dbg !19730, !tbaa !3810, !ctir !33
  %139 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19731, !tbaa !2995
  %fts_info182 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %139, i32 0, i32 15, !dbg !19733, !ctir !2318
  %140 = load i16, i16* %fts_info182, align 8, !dbg !19733, !tbaa !3810, !ctir !33
  %conv183 = zext i16 %140 to i32, !dbg !19731
  %cmp184 = icmp eq i32 %conv183, 1, !dbg !19734
  br i1 %cmp184, label %land.lhs.true186, label %if.end205, !dbg !19735

land.lhs.true186:                                 ; preds = %if.then179
  %141 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19736, !tbaa !2995
  %fts_options187 = getelementptr inbounds %struct.FTS, %struct.FTS* %141, i32 0, i32 10, !dbg !19736, !ctir !2335
  %142 = load i32, i32* %fts_options187, align 8, !dbg !19736, !tbaa !18042, !ctir !7
  %and188 = and i32 %142, 4, !dbg !19736
  %tobool189 = icmp ne i32 %and188, 0, !dbg !19736
  br i1 %tobool189, label %if.end205, label %if.then190, !dbg !19737

if.then190:                                       ; preds = %land.lhs.true186
  %143 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19738, !tbaa !2995
  %call191 = call i32 @diropen(%struct.FTS* %143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.434, i64 0, i64 0)), !dbg !19741
  %144 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19742, !tbaa !2995
  %fts_symfd192 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %144, i32 0, i32 9, !dbg !19743, !ctir !2318
  store i32 %call191, i32* %fts_symfd192, align 4, !dbg !19744, !tbaa !2982, !ctir !7
  %cmp193 = icmp slt i32 %call191, 0, !dbg !19745
  br i1 %cmp193, label %if.then195, label %if.else199, !dbg !19746

if.then195:                                       ; preds = %if.then190
  %call196 = call i32* @__errno_location() #15, !dbg !19747
  %145 = load i32, i32* %call196, align 4, !dbg !19747, !tbaa !2982, !ctir !7
  %146 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19749, !tbaa !2995
  %fts_errno197 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %146, i32 0, i32 8, !dbg !19750, !ctir !2318
  store i32 %145, i32* %fts_errno197, align 8, !dbg !19751, !tbaa !2982, !ctir !7
  %147 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19752, !tbaa !2995
  %fts_info198 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %147, i32 0, i32 15, !dbg !19753, !ctir !2318
  store i16 7, i16* %fts_info198, align 8, !dbg !19754, !tbaa !3810, !ctir !33
  br label %if.end204, !dbg !19755

if.else199:                                       ; preds = %if.then190
  %148 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19756, !tbaa !2995
  %fts_flags200 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %148, i32 0, i32 16, !dbg !19757, !ctir !2318
  %149 = load i16, i16* %fts_flags200, align 2, !dbg !19758, !tbaa !3810, !ctir !33
  %conv201 = zext i16 %149 to i32, !dbg !19758
  %or202 = or i32 %conv201, 2, !dbg !19758
  %conv203 = trunc i32 %or202 to i16, !dbg !19758
  store i16 %conv203, i16* %fts_flags200, align 2, !dbg !19758, !tbaa !3810, !ctir !33
  br label %if.end204

if.end204:                                        ; preds = %if.else199, %if.then195
  br label %if.end205, !dbg !19759

if.end205:                                        ; preds = %if.end204, %land.lhs.true186, %if.then179
  %150 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19760, !tbaa !2995
  %fts_instr206 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %150, i32 0, i32 17, !dbg !19761, !ctir !2318
  store i16 3, i16* %fts_instr206, align 4, !dbg !19762, !tbaa !3810, !ctir !33
  br label %if.end207, !dbg !19763

if.end207:                                        ; preds = %if.end205, %if.end174
  br label %name, !dbg !19764

name:                                             ; preds = %if.end207, %if.end151, %if.end129
  call void @llvm.dbg.label(metadata !19765), !dbg !19766
  %151 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19767, !tbaa !2995
  %fts_path208 = getelementptr inbounds %struct.FTS, %struct.FTS* %151, i32 0, i32 4, !dbg !19768, !ctir !2335
  %152 = load i8*, i8** %fts_path208, align 8, !dbg !19768, !tbaa !18681, !ctir !9
  %153 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19769, !tbaa !2995
  %fts_parent209 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %153, i32 0, i32 1, !dbg !19769, !ctir !2318
  %154 = load %struct._ftsent*, %struct._ftsent** %fts_parent209, align 8, !dbg !19769, !tbaa !2995, !ctir !2322
  %fts_path210 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %154, i32 0, i32 7, !dbg !19769, !ctir !2319
  %155 = load i8*, i8** %fts_path210, align 8, !dbg !19769, !tbaa !2995, !ctir !9
  %156 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19769, !tbaa !2995
  %fts_parent211 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %156, i32 0, i32 1, !dbg !19769, !ctir !2318
  %157 = load %struct._ftsent*, %struct._ftsent** %fts_parent211, align 8, !dbg !19769, !tbaa !2995, !ctir !2322
  %fts_pathlen212 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %157, i32 0, i32 10, !dbg !19769, !ctir !2319
  %158 = load i64, i64* %fts_pathlen212, align 8, !dbg !19769, !tbaa !3848, !ctir !55
  %sub = sub i64 %158, 1, !dbg !19769
  %arrayidx213 = getelementptr inbounds i8, i8* %155, i64 %sub, !dbg !19769, !ctir !9
  %159 = load i8, i8* %arrayidx213, align 1, !dbg !19769, !tbaa !3657
  %conv214 = sext i8 %159 to i32, !dbg !19769
  %cmp215 = icmp eq i32 %conv214, 47, !dbg !19769
  br i1 %cmp215, label %cond.true, label %cond.false, !dbg !19769

cond.true:                                        ; preds = %name
  %160 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19769, !tbaa !2995
  %fts_parent217 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %160, i32 0, i32 1, !dbg !19769, !ctir !2318
  %161 = load %struct._ftsent*, %struct._ftsent** %fts_parent217, align 8, !dbg !19769, !tbaa !2995, !ctir !2322
  %fts_pathlen218 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %161, i32 0, i32 10, !dbg !19769, !ctir !2319
  %162 = load i64, i64* %fts_pathlen218, align 8, !dbg !19769, !tbaa !3848, !ctir !55
  %sub219 = sub i64 %162, 1, !dbg !19769
  br label %cond.end, !dbg !19769

cond.false:                                       ; preds = %name
  %163 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19769, !tbaa !2995
  %fts_parent220 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %163, i32 0, i32 1, !dbg !19769, !ctir !2318
  %164 = load %struct._ftsent*, %struct._ftsent** %fts_parent220, align 8, !dbg !19769, !tbaa !2995, !ctir !2322
  %fts_pathlen221 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %164, i32 0, i32 10, !dbg !19769, !ctir !2319
  %165 = load i64, i64* %fts_pathlen221, align 8, !dbg !19769, !tbaa !3848, !ctir !55
  br label %cond.end, !dbg !19769

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub219, %cond.true ], [ %165, %cond.false ], !dbg !19769
  %add.ptr = getelementptr inbounds i8, i8* %152, i64 %cond, !dbg !19770
  store i8* %add.ptr, i8** %t, align 8, !dbg !19771, !tbaa !2995
  %166 = load i8*, i8** %t, align 8, !dbg !19772, !tbaa !2995
  %incdec.ptr = getelementptr inbounds i8, i8* %166, i32 1, !dbg !19772
  store i8* %incdec.ptr, i8** %t, align 8, !dbg !19772, !tbaa !2995
  store i8 47, i8* %166, align 1, !dbg !19773, !tbaa !3657, !ctir !10
  %167 = load i8*, i8** %t, align 8, !dbg !19774, !tbaa !2995
  %168 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19775, !tbaa !2995
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %168, i32 0, i32 19, !dbg !19776, !ctir !2318
  %arraydecay222 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !19777
  %169 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19778, !tbaa !2995
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %169, i32 0, i32 13, !dbg !19779, !ctir !2318
  %170 = load i64, i64* %fts_namelen, align 8, !dbg !19779, !tbaa !3848, !ctir !55
  %add = add i64 %170, 1, !dbg !19780
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %167, i8* align 8 %arraydecay222, i64 %add, i1 false), !dbg !19777
  br label %check_for_dir, !dbg !19777

check_for_dir:                                    ; preds = %cond.end, %if.end166, %if.end40
  call void @llvm.dbg.label(metadata !19781), !dbg !19782
  %171 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19783, !tbaa !2995
  %172 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19784, !tbaa !2995
  %fts_cur223 = getelementptr inbounds %struct.FTS, %struct.FTS* %172, i32 0, i32 0, !dbg !19785, !ctir !2335
  store %struct._ftsent* %171, %struct._ftsent** %fts_cur223, align 8, !dbg !19786, !tbaa !18630, !ctir !2322
  %173 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19787, !tbaa !2995
  %fts_info224 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %173, i32 0, i32 15, !dbg !19789, !ctir !2318
  %174 = load i16, i16* %fts_info224, align 8, !dbg !19789, !tbaa !3810, !ctir !33
  %conv225 = zext i16 %174 to i32, !dbg !19787
  %cmp226 = icmp eq i32 %conv225, 11, !dbg !19790
  br i1 %cmp226, label %if.then228, label %if.end285, !dbg !19791

if.then228:                                       ; preds = %check_for_dir
  %175 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19792, !tbaa !2995
  %fts_statp229 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %175, i32 0, i32 18, !dbg !19795, !ctir !2318
  %arraydecay230 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp229, i64 0, i64 0, !dbg !19796
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay230, i32 0, i32 8, !dbg !19796, !ctir !2390
  %176 = load i64, i64* %st_size, align 8, !dbg !19796, !tbaa !4516, !ctir !29
  %cmp231 = icmp eq i64 %176, 2, !dbg !19797
  br i1 %cmp231, label %if.then233, label %if.else274, !dbg !19798

if.then233:                                       ; preds = %if.then228
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !19799, metadata !DIExpression()), !dbg !19801
  %177 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19802, !tbaa !2995
  %fts_parent234 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %177, i32 0, i32 1, !dbg !19803, !ctir !2318
  %178 = load %struct._ftsent*, %struct._ftsent** %fts_parent234, align 8, !dbg !19803, !tbaa !2995, !ctir !2322
  store %struct._ftsent* %178, %struct._ftsent** %parent, align 8, !dbg !19801, !tbaa !2995
  %179 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19804, !tbaa !2995
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %179, i32 0, i32 14, !dbg !19806, !ctir !2318
  %180 = load i64, i64* %fts_n_dirs_remaining, align 8, !dbg !19806, !tbaa !3848, !ctir !1382
  %cmp235 = icmp eq i64 %180, 0, !dbg !19807
  br i1 %cmp235, label %land.lhs.true237, label %if.else250, !dbg !19808

land.lhs.true237:                                 ; preds = %if.then233
  %181 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19809, !tbaa !2995
  %fts_options238 = getelementptr inbounds %struct.FTS, %struct.FTS* %181, i32 0, i32 10, !dbg !19809, !ctir !2335
  %182 = load i32, i32* %fts_options238, align 8, !dbg !19809, !tbaa !18042, !ctir !7
  %and239 = and i32 %182, 8, !dbg !19809
  %tobool240 = icmp ne i32 %and239, 0, !dbg !19809
  br i1 %tobool240, label %land.lhs.true241, label %if.else250, !dbg !19810

land.lhs.true241:                                 ; preds = %land.lhs.true237
  %183 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19811, !tbaa !2995
  %fts_options242 = getelementptr inbounds %struct.FTS, %struct.FTS* %183, i32 0, i32 10, !dbg !19811, !ctir !2335
  %184 = load i32, i32* %fts_options242, align 8, !dbg !19811, !tbaa !18042, !ctir !7
  %and243 = and i32 %184, 16, !dbg !19811
  %tobool244 = icmp ne i32 %and243, 0, !dbg !19811
  br i1 %tobool244, label %land.lhs.true245, label %if.else250, !dbg !19812

land.lhs.true245:                                 ; preds = %land.lhs.true241
  %185 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19813, !tbaa !2995
  %186 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19814, !tbaa !2995
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %186, i32 0, i32 6, !dbg !19815, !ctir !2335
  %187 = load i32, i32* %fts_cwd_fd, align 4, !dbg !19815, !tbaa !3823, !ctir !7
  %call246 = call i32 @leaf_optimization(%struct._ftsent* %185, i32 %187), !dbg !19816
  %cmp247 = icmp eq i32 %call246, 2, !dbg !19817
  br i1 %cmp247, label %if.then249, label %if.else250, !dbg !19818

if.then249:                                       ; preds = %land.lhs.true245
  br label %if.end273, !dbg !19819

if.else250:                                       ; preds = %land.lhs.true245, %land.lhs.true241, %land.lhs.true237, %if.then233
  %188 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19821, !tbaa !2995
  %189 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19823, !tbaa !2995
  %call251 = call zeroext i16 @fts_stat(%struct.FTS* %188, %struct._ftsent* %189, i1 zeroext false), !dbg !19824
  %190 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19825, !tbaa !2995
  %fts_info252 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %190, i32 0, i32 15, !dbg !19826, !ctir !2318
  store i16 %call251, i16* %fts_info252, align 8, !dbg !19827, !tbaa !3810, !ctir !33
  %191 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19828, !tbaa !2995
  %fts_statp253 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %191, i32 0, i32 18, !dbg !19828, !ctir !2318
  %arraydecay254 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp253, i64 0, i64 0, !dbg !19828
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay254, i32 0, i32 3, !dbg !19828, !ctir !2390
  %192 = load i32, i32* %st_mode, align 8, !dbg !19828, !tbaa !3178, !ctir !133
  %and255 = and i32 %192, 61440, !dbg !19828
  %cmp256 = icmp eq i32 %and255, 16384, !dbg !19828
  br i1 %cmp256, label %land.lhs.true258, label %if.end272, !dbg !19830

land.lhs.true258:                                 ; preds = %if.else250
  %193 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19831, !tbaa !2995
  %fts_level259 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %193, i32 0, i32 12, !dbg !19832, !ctir !2318
  %194 = load i64, i64* %fts_level259, align 8, !dbg !19832, !tbaa !3848, !ctir !566
  %cmp260 = icmp ne i64 %194, 0, !dbg !19833
  br i1 %cmp260, label %land.lhs.true262, label %if.end272, !dbg !19834

land.lhs.true262:                                 ; preds = %land.lhs.true258
  %195 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19835, !tbaa !2995
  %fts_n_dirs_remaining263 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %195, i32 0, i32 14, !dbg !19836, !ctir !2318
  %196 = load i64, i64* %fts_n_dirs_remaining263, align 8, !dbg !19836, !tbaa !3848, !ctir !1382
  %cmp264 = icmp ult i64 0, %196, !dbg !19837
  br i1 %cmp264, label %land.lhs.true266, label %if.end272, !dbg !19838

land.lhs.true266:                                 ; preds = %land.lhs.true262
  %197 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19839, !tbaa !2995
  %fts_n_dirs_remaining267 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %197, i32 0, i32 14, !dbg !19840, !ctir !2318
  %198 = load i64, i64* %fts_n_dirs_remaining267, align 8, !dbg !19840, !tbaa !3848, !ctir !1382
  %cmp268 = icmp ne i64 %198, -1, !dbg !19841
  br i1 %cmp268, label %if.then270, label %if.end272, !dbg !19842

if.then270:                                       ; preds = %land.lhs.true266
  %199 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19843, !tbaa !2995
  %fts_n_dirs_remaining271 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %199, i32 0, i32 14, !dbg !19844, !ctir !2318
  %200 = load i64, i64* %fts_n_dirs_remaining271, align 8, !dbg !19845, !tbaa !3848, !ctir !1382
  %dec = add i64 %200, -1, !dbg !19845
  store i64 %dec, i64* %fts_n_dirs_remaining271, align 8, !dbg !19845, !tbaa !3848, !ctir !1382
  br label %if.end272, !dbg !19843

if.end272:                                        ; preds = %if.then270, %land.lhs.true266, %land.lhs.true262, %land.lhs.true258, %if.else250
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.then249
  br label %if.end284, !dbg !19846

if.else274:                                       ; preds = %if.then228
  br label %do.body275, !dbg !19847

do.body275:                                       ; preds = %if.else274
  %201 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19848, !tbaa !2995
  %fts_statp276 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %201, i32 0, i32 18, !dbg !19848, !ctir !2318
  %arraydecay277 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp276, i64 0, i64 0, !dbg !19848
  %st_size278 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay277, i32 0, i32 8, !dbg !19848, !ctir !2390
  %202 = load i64, i64* %st_size278, align 8, !dbg !19848, !tbaa !4516, !ctir !29
  %cmp279 = icmp eq i64 %202, 1, !dbg !19848
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !19851

if.then281:                                       ; preds = %do.body275
  call void @abort() #13, !dbg !19848
  unreachable, !dbg !19848

if.end282:                                        ; preds = %do.body275
  br label %do.end283, !dbg !19851

do.end283:                                        ; preds = %if.end282
  br label %if.end284

if.end284:                                        ; preds = %do.end283, %if.end273
  br label %if.end285, !dbg !19852

if.end285:                                        ; preds = %if.end284, %check_for_dir
  %203 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19853, !tbaa !2995
  %fts_info286 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %203, i32 0, i32 15, !dbg !19855, !ctir !2318
  %204 = load i16, i16* %fts_info286, align 8, !dbg !19855, !tbaa !3810, !ctir !33
  %conv287 = zext i16 %204 to i32, !dbg !19853
  %cmp288 = icmp eq i32 %conv287, 1, !dbg !19856
  br i1 %cmp288, label %if.then290, label %if.end304, !dbg !19857

if.then290:                                       ; preds = %if.end285
  %205 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19858, !tbaa !2995
  %fts_level291 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %205, i32 0, i32 12, !dbg !19861, !ctir !2318
  %206 = load i64, i64* %fts_level291, align 8, !dbg !19861, !tbaa !3848, !ctir !566
  %cmp292 = icmp eq i64 %206, 0, !dbg !19862
  br i1 %cmp292, label %if.then294, label %if.end299, !dbg !19863

if.then294:                                       ; preds = %if.then290
  %207 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19864, !tbaa !2995
  %fts_statp295 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %207, i32 0, i32 18, !dbg !19865, !ctir !2318
  %arraydecay296 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp295, i64 0, i64 0, !dbg !19866
  %st_dev297 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay296, i32 0, i32 0, !dbg !19866, !ctir !2390
  %208 = load i64, i64* %st_dev297, align 8, !dbg !19866, !tbaa !3873, !ctir !231
  %209 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19867, !tbaa !2995
  %fts_dev298 = getelementptr inbounds %struct.FTS, %struct.FTS* %209, i32 0, i32 3, !dbg !19868, !ctir !2335
  store i64 %208, i64* %fts_dev298, align 8, !dbg !19869, !tbaa !3920, !ctir !230
  br label %if.end299, !dbg !19867

if.end299:                                        ; preds = %if.then294, %if.then290
  %210 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19870, !tbaa !2995
  %211 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19872, !tbaa !2995
  %call300 = call zeroext i1 @enter_dir(%struct.FTS* %210, %struct._ftsent* %211), !dbg !19873
  br i1 %call300, label %if.end303, label %if.then301, !dbg !19874

if.then301:                                       ; preds = %if.end299
  %call302 = call i32* @__errno_location() #15, !dbg !19875
  store i32 12, i32* %call302, align 4, !dbg !19875, !tbaa !2982, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19877
  br label %return, !dbg !19877

if.end303:                                        ; preds = %if.end299
  br label %if.end304, !dbg !19878

if.end304:                                        ; preds = %if.end303, %if.end285
  %212 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19879, !tbaa !2995
  store %struct._ftsent* %212, %struct._ftsent** %retval, align 8, !dbg !19880
  br label %return, !dbg !19880

if.end305:                                        ; preds = %if.end152
  br label %cd_dot_dot, !dbg !19881

cd_dot_dot:                                       ; preds = %if.end305, %if.end150
  call void @llvm.dbg.label(metadata !19882), !dbg !19883
  %213 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19884, !tbaa !2995
  %fts_parent306 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %213, i32 0, i32 1, !dbg !19885, !ctir !2318
  %214 = load %struct._ftsent*, %struct._ftsent** %fts_parent306, align 8, !dbg !19885, !tbaa !2995, !ctir !2322
  store %struct._ftsent* %214, %struct._ftsent** %p, align 8, !dbg !19886, !tbaa !2995
  %215 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19887, !tbaa !2995
  %216 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19888, !tbaa !2995
  %fts_cur307 = getelementptr inbounds %struct.FTS, %struct.FTS* %216, i32 0, i32 0, !dbg !19889, !ctir !2335
  store %struct._ftsent* %215, %struct._ftsent** %fts_cur307, align 8, !dbg !19890, !tbaa !18630, !ctir !2322
  %217 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19891, !tbaa !2995
  %218 = bitcast %struct._ftsent* %217 to i8*, !dbg !19891
  call void @free(i8* %218) #10, !dbg !19892
  %219 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19893, !tbaa !2995
  %fts_level308 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %219, i32 0, i32 12, !dbg !19895, !ctir !2318
  %220 = load i64, i64* %fts_level308, align 8, !dbg !19895, !tbaa !3848, !ctir !566
  %cmp309 = icmp eq i64 %220, -1, !dbg !19896
  br i1 %cmp309, label %if.then311, label %if.end314, !dbg !19897

if.then311:                                       ; preds = %cd_dot_dot
  %221 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19898, !tbaa !2995
  %222 = bitcast %struct._ftsent* %221 to i8*, !dbg !19898
  call void @free(i8* %222) #10, !dbg !19900
  %call312 = call i32* @__errno_location() #15, !dbg !19901
  store i32 0, i32* %call312, align 4, !dbg !19901, !tbaa !2982, !ctir !7
  %223 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19902, !tbaa !2995
  %fts_cur313 = getelementptr inbounds %struct.FTS, %struct.FTS* %223, i32 0, i32 0, !dbg !19903, !ctir !2335
  store %struct._ftsent* null, %struct._ftsent** %fts_cur313, align 8, !dbg !19904, !tbaa !18630, !ctir !2322
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19905
  br label %return, !dbg !19905

if.end314:                                        ; preds = %cd_dot_dot
  br label %do.body315, !dbg !19906

do.body315:                                       ; preds = %if.end314
  %224 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19907, !tbaa !2995
  %fts_info316 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %224, i32 0, i32 15, !dbg !19907, !ctir !2318
  %225 = load i16, i16* %fts_info316, align 8, !dbg !19907, !tbaa !3810, !ctir !33
  %conv317 = zext i16 %225 to i32, !dbg !19907
  %cmp318 = icmp ne i32 %conv317, 11, !dbg !19907
  br i1 %cmp318, label %if.end321, label %if.then320, !dbg !19910

if.then320:                                       ; preds = %do.body315
  call void @abort() #13, !dbg !19907
  unreachable, !dbg !19907

if.end321:                                        ; preds = %do.body315
  br label %do.end322, !dbg !19910

do.end322:                                        ; preds = %if.end321
  %226 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19911, !tbaa !2995
  %fts_path323 = getelementptr inbounds %struct.FTS, %struct.FTS* %226, i32 0, i32 4, !dbg !19912, !ctir !2335
  %227 = load i8*, i8** %fts_path323, align 8, !dbg !19912, !tbaa !18681, !ctir !9
  %228 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19913, !tbaa !2995
  %fts_pathlen324 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %228, i32 0, i32 10, !dbg !19914, !ctir !2318
  %229 = load i64, i64* %fts_pathlen324, align 8, !dbg !19914, !tbaa !3848, !ctir !55
  %arrayidx325 = getelementptr inbounds i8, i8* %227, i64 %229, !dbg !19911, !ctir !9
  store i8 0, i8* %arrayidx325, align 1, !dbg !19915, !tbaa !3657
  %230 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19916, !tbaa !2995
  %fts_level326 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %230, i32 0, i32 12, !dbg !19918, !ctir !2318
  %231 = load i64, i64* %fts_level326, align 8, !dbg !19918, !tbaa !3848, !ctir !566
  %cmp327 = icmp eq i64 %231, 0, !dbg !19919
  br i1 %cmp327, label %if.then329, label %if.else338, !dbg !19920

if.then329:                                       ; preds = %do.end322
  %232 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19921, !tbaa !2995
  %call330 = call i32 @restore_initial_cwd(%struct.FTS* %232), !dbg !19924
  %tobool331 = icmp ne i32 %call330, 0, !dbg !19924
  br i1 %tobool331, label %if.then332, label %if.end337, !dbg !19925

if.then332:                                       ; preds = %if.then329
  %call333 = call i32* @__errno_location() #15, !dbg !19926
  %233 = load i32, i32* %call333, align 4, !dbg !19926, !tbaa !2982, !ctir !7
  %234 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19928, !tbaa !2995
  %fts_errno334 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %234, i32 0, i32 8, !dbg !19929, !ctir !2318
  store i32 %233, i32* %fts_errno334, align 8, !dbg !19930, !tbaa !2982, !ctir !7
  %235 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19931, !tbaa !2995
  %fts_options335 = getelementptr inbounds %struct.FTS, %struct.FTS* %235, i32 0, i32 10, !dbg !19931, !ctir !2335
  %236 = load i32, i32* %fts_options335, align 8, !dbg !19931, !tbaa !18042, !ctir !7
  %or336 = or i32 %236, 8192, !dbg !19931
  store i32 %or336, i32* %fts_options335, align 8, !dbg !19931, !tbaa !18042, !ctir !7
  br label %if.end337, !dbg !19932

if.end337:                                        ; preds = %if.then332, %if.then329
  br label %if.end381, !dbg !19933

if.else338:                                       ; preds = %do.end322
  %237 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19934, !tbaa !2995
  %fts_flags339 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %237, i32 0, i32 16, !dbg !19936, !ctir !2318
  %238 = load i16, i16* %fts_flags339, align 2, !dbg !19936, !tbaa !3810, !ctir !33
  %conv340 = zext i16 %238 to i32, !dbg !19934
  %and341 = and i32 %conv340, 2, !dbg !19937
  %tobool342 = icmp ne i32 %and341, 0, !dbg !19937
  br i1 %tobool342, label %if.then343, label %if.else365, !dbg !19938

if.then343:                                       ; preds = %if.else338
  %239 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19939, !tbaa !2995
  %fts_options344 = getelementptr inbounds %struct.FTS, %struct.FTS* %239, i32 0, i32 10, !dbg !19939, !ctir !2335
  %240 = load i32, i32* %fts_options344, align 8, !dbg !19939, !tbaa !18042, !ctir !7
  %and345 = and i32 %240, 4, !dbg !19939
  %tobool346 = icmp ne i32 %and345, 0, !dbg !19939
  br i1 %tobool346, label %if.end362, label %land.lhs.true347, !dbg !19939

land.lhs.true347:                                 ; preds = %if.then343
  %241 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19939, !tbaa !2995
  %fts_options348 = getelementptr inbounds %struct.FTS, %struct.FTS* %241, i32 0, i32 10, !dbg !19939, !ctir !2335
  %242 = load i32, i32* %fts_options348, align 8, !dbg !19939, !tbaa !18042, !ctir !7
  %and349 = and i32 %242, 512, !dbg !19939
  %tobool350 = icmp ne i32 %and349, 0, !dbg !19939
  br i1 %tobool350, label %cond.true351, label %cond.false353, !dbg !19942

cond.true351:                                     ; preds = %land.lhs.true347
  %243 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19939, !tbaa !2995
  %244 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19939, !tbaa !2995
  %fts_symfd352 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %244, i32 0, i32 9, !dbg !19939, !ctir !2318
  %245 = load i32, i32* %fts_symfd352, align 4, !dbg !19939, !tbaa !2982, !ctir !7
  call void @cwd_advance_fd(%struct.FTS* %243, i32 %245, i1 zeroext true), !dbg !19939
  br i1 false, label %if.then357, label %if.end362, !dbg !19939

cond.false353:                                    ; preds = %land.lhs.true347
  %246 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19939, !tbaa !2995
  %fts_symfd354 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %246, i32 0, i32 9, !dbg !19939, !ctir !2318
  %247 = load i32, i32* %fts_symfd354, align 4, !dbg !19939, !tbaa !2982, !ctir !7
  %call355 = call i32 @fchdir(i32 %247) #10, !dbg !19939
  %tobool356 = icmp ne i32 %call355, 0, !dbg !19939
  br i1 %tobool356, label %if.then357, label %if.end362, !dbg !19942

if.then357:                                       ; preds = %cond.false353, %cond.true351
  %call358 = call i32* @__errno_location() #15, !dbg !19943
  %248 = load i32, i32* %call358, align 4, !dbg !19943, !tbaa !2982, !ctir !7
  %249 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19945, !tbaa !2995
  %fts_errno359 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %249, i32 0, i32 8, !dbg !19946, !ctir !2318
  store i32 %248, i32* %fts_errno359, align 8, !dbg !19947, !tbaa !2982, !ctir !7
  %250 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19948, !tbaa !2995
  %fts_options360 = getelementptr inbounds %struct.FTS, %struct.FTS* %250, i32 0, i32 10, !dbg !19948, !ctir !2335
  %251 = load i32, i32* %fts_options360, align 8, !dbg !19948, !tbaa !18042, !ctir !7
  %or361 = or i32 %251, 8192, !dbg !19948
  store i32 %or361, i32* %fts_options360, align 8, !dbg !19948, !tbaa !18042, !ctir !7
  br label %if.end362, !dbg !19949

if.end362:                                        ; preds = %if.then357, %cond.false353, %cond.true351, %if.then343
  %252 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19950, !tbaa !2995
  %fts_symfd363 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %252, i32 0, i32 9, !dbg !19951, !ctir !2318
  %253 = load i32, i32* %fts_symfd363, align 4, !dbg !19951, !tbaa !2982, !ctir !7
  %call364 = call i32 @close(i32 %253), !dbg !19952
  br label %if.end380, !dbg !19953

if.else365:                                       ; preds = %if.else338
  %254 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19954, !tbaa !2995
  %fts_flags366 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %254, i32 0, i32 16, !dbg !19956, !ctir !2318
  %255 = load i16, i16* %fts_flags366, align 2, !dbg !19956, !tbaa !3810, !ctir !33
  %conv367 = zext i16 %255 to i32, !dbg !19954
  %and368 = and i32 %conv367, 1, !dbg !19957
  %tobool369 = icmp ne i32 %and368, 0, !dbg !19957
  br i1 %tobool369, label %if.end379, label %land.lhs.true370, !dbg !19958

land.lhs.true370:                                 ; preds = %if.else365
  %256 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19959, !tbaa !2995
  %257 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19960, !tbaa !2995
  %fts_parent371 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %257, i32 0, i32 1, !dbg !19961, !ctir !2318
  %258 = load %struct._ftsent*, %struct._ftsent** %fts_parent371, align 8, !dbg !19961, !tbaa !2995, !ctir !2322
  %call372 = call i32 @fts_safe_changedir(%struct.FTS* %256, %struct._ftsent* %258, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.440, i64 0, i64 0)), !dbg !19962
  %tobool373 = icmp ne i32 %call372, 0, !dbg !19962
  br i1 %tobool373, label %if.then374, label %if.end379, !dbg !19963

if.then374:                                       ; preds = %land.lhs.true370
  %call375 = call i32* @__errno_location() #15, !dbg !19964
  %259 = load i32, i32* %call375, align 4, !dbg !19964, !tbaa !2982, !ctir !7
  %260 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19966, !tbaa !2995
  %fts_errno376 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %260, i32 0, i32 8, !dbg !19967, !ctir !2318
  store i32 %259, i32* %fts_errno376, align 8, !dbg !19968, !tbaa !2982, !ctir !7
  %261 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19969, !tbaa !2995
  %fts_options377 = getelementptr inbounds %struct.FTS, %struct.FTS* %261, i32 0, i32 10, !dbg !19969, !ctir !2335
  %262 = load i32, i32* %fts_options377, align 8, !dbg !19969, !tbaa !18042, !ctir !7
  %or378 = or i32 %262, 8192, !dbg !19969
  store i32 %or378, i32* %fts_options377, align 8, !dbg !19969, !tbaa !18042, !ctir !7
  br label %if.end379, !dbg !19970

if.end379:                                        ; preds = %if.then374, %land.lhs.true370, %if.else365
  br label %if.end380

if.end380:                                        ; preds = %if.end379, %if.end362
  br label %if.end381

if.end381:                                        ; preds = %if.end380, %if.end337
  %263 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19971, !tbaa !2995
  %fts_info382 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %263, i32 0, i32 15, !dbg !19973, !ctir !2318
  %264 = load i16, i16* %fts_info382, align 8, !dbg !19973, !tbaa !3810, !ctir !33
  %conv383 = zext i16 %264 to i32, !dbg !19971
  %cmp384 = icmp ne i32 %conv383, 2, !dbg !19974
  br i1 %cmp384, label %if.then386, label %if.end399, !dbg !19975

if.then386:                                       ; preds = %if.end381
  %265 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19976, !tbaa !2995
  %fts_errno387 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %265, i32 0, i32 8, !dbg !19978, !ctir !2318
  %266 = load i32, i32* %fts_errno387, align 8, !dbg !19978, !tbaa !2982, !ctir !7
  %tobool388 = icmp ne i32 %266, 0, !dbg !19976
  %267 = zext i1 %tobool388 to i64, !dbg !19976
  %cond389 = select i1 %tobool388, i32 7, i32 6, !dbg !19976
  %conv390 = trunc i32 %cond389 to i16, !dbg !19976
  %268 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19979, !tbaa !2995
  %fts_info391 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %268, i32 0, i32 15, !dbg !19980, !ctir !2318
  store i16 %conv390, i16* %fts_info391, align 8, !dbg !19981, !tbaa !3810, !ctir !33
  %269 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19982, !tbaa !2995
  %fts_errno392 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %269, i32 0, i32 8, !dbg !19984, !ctir !2318
  %270 = load i32, i32* %fts_errno392, align 8, !dbg !19984, !tbaa !2982, !ctir !7
  %cmp393 = icmp eq i32 %270, 0, !dbg !19985
  br i1 %cmp393, label %if.then395, label %if.end398, !dbg !19986

if.then395:                                       ; preds = %if.then386
  br label %do.body396, !dbg !19987

do.body396:                                       ; preds = %if.then395
  %271 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19988, !tbaa !2995
  %272 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19988, !tbaa !2995
  call void @leave_dir(%struct.FTS* %271, %struct._ftsent* %272), !dbg !19988
  br label %do.end397, !dbg !19988

do.end397:                                        ; preds = %do.body396
  br label %if.end398, !dbg !19988

if.end398:                                        ; preds = %do.end397, %if.then386
  br label %if.end399, !dbg !19990

if.end399:                                        ; preds = %if.end398, %if.end381
  %273 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19991, !tbaa !2995
  %fts_options400 = getelementptr inbounds %struct.FTS, %struct.FTS* %273, i32 0, i32 10, !dbg !19991, !ctir !2335
  %274 = load i32, i32* %fts_options400, align 8, !dbg !19991, !tbaa !18042, !ctir !7
  %and401 = and i32 %274, 8192, !dbg !19991
  %tobool402 = icmp ne i32 %and401, 0, !dbg !19991
  br i1 %tobool402, label %cond.true403, label %cond.false404, !dbg !19991

cond.true403:                                     ; preds = %if.end399
  br label %cond.end405, !dbg !19991

cond.false404:                                    ; preds = %if.end399
  %275 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19992, !tbaa !2995
  br label %cond.end405, !dbg !19991

cond.end405:                                      ; preds = %cond.false404, %cond.true403
  %cond406 = phi %struct._ftsent* [ null, %cond.true403 ], [ %275, %cond.false404 ], !dbg !19991
  store %struct._ftsent* %cond406, %struct._ftsent** %retval, align 8, !dbg !19993
  br label %return, !dbg !19993

return:                                           ; preds = %cond.end405, %if.then311, %if.end304, %if.then301, %if.then163, %if.then149, %do.end127, %if.then114, %do.end, %if.then5, %if.then
  %276 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !19994
  ret %struct._ftsent* %276, !dbg !19994
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @leave_dir(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !19995 !ctir !2447 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %st = alloca %struct.stat*, align 8, !ctir !2449
  %obj = alloca %struct.Active_dir, align 8, !ctir !2432
  %found = alloca i8*, align 8, !ctir !53
  %parent = alloca %struct._ftsent*, align 8, !ctir !2417
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !19996, metadata !DIExpression()), !dbg !19997
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !19998, metadata !DIExpression()), !dbg !19999
  call void @llvm.dbg.declare(metadata %struct.stat** %st, metadata !20000, metadata !DIExpression()), !dbg !20001
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20002, !tbaa !2995
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 18, !dbg !20003, !ctir !2318
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20002
  store %struct.stat* %arraydecay, %struct.stat** %st, align 8, !dbg !20001, !tbaa !2995
  %1 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20004, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %1, i32 0, i32 10, !dbg !20006, !ctir !2335
  %2 = load i32, i32* %fts_options, align 8, !dbg !20006, !tbaa !18042, !ctir !7
  %and = and i32 %2, 258, !dbg !20007
  %tobool = icmp ne i32 %and, 0, !dbg !20007
  br i1 %tobool, label %if.then, label %if.else, !dbg !20008

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Active_dir* %obj, metadata !20009, metadata !DIExpression()), !dbg !20011
  call void @llvm.dbg.declare(metadata i8** %found, metadata !20012, metadata !DIExpression()), !dbg !20013
  %3 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20014, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 0, !dbg !20015, !ctir !2450
  %4 = load i64, i64* %st_dev, align 8, !dbg !20015, !tbaa !3873, !ctir !231
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %obj, i32 0, i32 0, !dbg !20016, !ctir !2432
  store i64 %4, i64* %dev, align 8, !dbg !20017, !tbaa !19207, !ctir !230
  %5 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20018, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 1, !dbg !20019, !ctir !2450
  %6 = load i64, i64* %st_ino, align 8, !dbg !20019, !tbaa !3870, !ctir !228
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %obj, i32 0, i32 1, !dbg !20020, !ctir !2432
  store i64 %6, i64* %ino, align 8, !dbg !20021, !tbaa !19183, !ctir !227
  %7 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20022, !tbaa !2995
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 12, !dbg !20023, !ctir !2335
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !20024
  %8 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !20024, !tbaa !3657, !ctir !2358
  %9 = bitcast %struct.Active_dir* %obj to i8*, !dbg !20025
  %call = call i8* @hash_delete(%struct.hash_table* %8, i8* %9), !dbg !20026
  store i8* %call, i8** %found, align 8, !dbg !20027, !tbaa !2995
  %10 = load i8*, i8** %found, align 8, !dbg !20028, !tbaa !2995
  %tobool1 = icmp ne i8* %10, null, !dbg !20028
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !20030

if.then2:                                         ; preds = %if.then
  call void @abort() #13, !dbg !20031
  unreachable, !dbg !20031

if.end:                                           ; preds = %if.then
  %11 = load i8*, i8** %found, align 8, !dbg !20032, !tbaa !2995
  call void @free(i8* %11) #10, !dbg !20033
  br label %if.end38, !dbg !20034

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !20035, metadata !DIExpression()), !dbg !20037
  %12 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20038, !tbaa !2995
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 1, !dbg !20039, !ctir !2318
  %13 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !20039, !tbaa !2995, !ctir !2322
  store %struct._ftsent* %13, %struct._ftsent** %parent, align 8, !dbg !20037, !tbaa !2995
  %14 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !20040, !tbaa !2995
  %cmp = icmp ne %struct._ftsent* %14, null, !dbg !20042
  br i1 %cmp, label %land.lhs.true, label %if.end37, !dbg !20043

land.lhs.true:                                    ; preds = %if.else
  %15 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !20044, !tbaa !2995
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 12, !dbg !20045, !ctir !2318
  %16 = load i64, i64* %fts_level, align 8, !dbg !20045, !tbaa !3848, !ctir !566
  %cmp3 = icmp sle i64 0, %16, !dbg !20046
  br i1 %cmp3, label %if.then4, label %if.end37, !dbg !20047

if.then4:                                         ; preds = %land.lhs.true
  br label %do.body, !dbg !20048

do.body:                                          ; preds = %if.then4
  %17 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20049, !tbaa !2995
  %fts_cycle5 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 12, !dbg !20049, !ctir !2335
  %state = bitcast %union.anon* %fts_cycle5 to %struct.cycle_check_state**, !dbg !20049
  %18 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !20049, !tbaa !3657, !ctir !2358
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %18, i32 0, i32 1, !dbg !20049, !ctir !2363
  %19 = load i64, i64* %chdir_counter, align 8, !dbg !20049, !tbaa !20052, !ctir !456
  %cmp6 = icmp eq i64 %19, 0, !dbg !20049
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !20054

if.then7:                                         ; preds = %do.body
  call void @abort() #13, !dbg !20049
  unreachable, !dbg !20049

if.end8:                                          ; preds = %do.body
  %20 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20055, !tbaa !2995
  %fts_cycle9 = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 12, !dbg !20055, !ctir !2335
  %state10 = bitcast %union.anon* %fts_cycle9 to %struct.cycle_check_state**, !dbg !20055
  %21 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state10, align 8, !dbg !20055, !tbaa !3657, !ctir !2358
  %dev_ino = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %21, i32 0, i32 0, !dbg !20055, !ctir !2363
  %st_ino11 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino, i32 0, i32 0, !dbg !20055, !ctir !2367
  %22 = load i64, i64* %st_ino11, align 8, !dbg !20055, !tbaa !20057, !ctir !227
  %23 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20055, !tbaa !2995
  %st_ino12 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !20055, !ctir !2450
  %24 = load i64, i64* %st_ino12, align 8, !dbg !20055, !tbaa !3870, !ctir !228
  %cmp13 = icmp eq i64 %22, %24, !dbg !20055
  br i1 %cmp13, label %land.lhs.true14, label %if.end36, !dbg !20055

land.lhs.true14:                                  ; preds = %if.end8
  %25 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20055, !tbaa !2995
  %fts_cycle15 = getelementptr inbounds %struct.FTS, %struct.FTS* %25, i32 0, i32 12, !dbg !20055, !ctir !2335
  %state16 = bitcast %union.anon* %fts_cycle15 to %struct.cycle_check_state**, !dbg !20055
  %26 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state16, align 8, !dbg !20055, !tbaa !3657, !ctir !2358
  %dev_ino17 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %26, i32 0, i32 0, !dbg !20055, !ctir !2363
  %st_dev18 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino17, i32 0, i32 1, !dbg !20055, !ctir !2367
  %27 = load i64, i64* %st_dev18, align 8, !dbg !20055, !tbaa !20058, !ctir !230
  %28 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20055, !tbaa !2995
  %st_dev19 = getelementptr inbounds %struct.stat, %struct.stat* %28, i32 0, i32 0, !dbg !20055, !ctir !2450
  %29 = load i64, i64* %st_dev19, align 8, !dbg !20055, !tbaa !3873, !ctir !231
  %cmp20 = icmp eq i64 %27, %29, !dbg !20055
  br i1 %cmp20, label %if.then21, label %if.end36, !dbg !20054

if.then21:                                        ; preds = %land.lhs.true14
  %30 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !20059, !tbaa !2995
  %fts_statp22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 18, !dbg !20059, !ctir !2318
  %arraydecay23 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp22, i64 0, i64 0, !dbg !20059
  %st_dev24 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay23, i32 0, i32 0, !dbg !20059, !ctir !2390
  %31 = load i64, i64* %st_dev24, align 8, !dbg !20059, !tbaa !3873, !ctir !231
  %32 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20059, !tbaa !2995
  %fts_cycle25 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 12, !dbg !20059, !ctir !2335
  %state26 = bitcast %union.anon* %fts_cycle25 to %struct.cycle_check_state**, !dbg !20059
  %33 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state26, align 8, !dbg !20059, !tbaa !3657, !ctir !2358
  %dev_ino27 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %33, i32 0, i32 0, !dbg !20059, !ctir !2363
  %st_dev28 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino27, i32 0, i32 1, !dbg !20059, !ctir !2367
  store i64 %31, i64* %st_dev28, align 8, !dbg !20059, !tbaa !20058, !ctir !230
  %34 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !20059, !tbaa !2995
  %fts_statp29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 18, !dbg !20059, !ctir !2318
  %arraydecay30 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp29, i64 0, i64 0, !dbg !20059
  %st_ino31 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay30, i32 0, i32 1, !dbg !20059, !ctir !2390
  %35 = load i64, i64* %st_ino31, align 8, !dbg !20059, !tbaa !3870, !ctir !228
  %36 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20059, !tbaa !2995
  %fts_cycle32 = getelementptr inbounds %struct.FTS, %struct.FTS* %36, i32 0, i32 12, !dbg !20059, !ctir !2335
  %state33 = bitcast %union.anon* %fts_cycle32 to %struct.cycle_check_state**, !dbg !20059
  %37 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state33, align 8, !dbg !20059, !tbaa !3657, !ctir !2358
  %dev_ino34 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %37, i32 0, i32 0, !dbg !20059, !ctir !2363
  %st_ino35 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino34, i32 0, i32 0, !dbg !20059, !ctir !2367
  store i64 %35, i64* %st_ino35, align 8, !dbg !20059, !tbaa !20057, !ctir !227
  br label %if.end36, !dbg !20059

if.end36:                                         ; preds = %if.then21, %land.lhs.true14, %if.end8
  br label %do.end, !dbg !20054

do.end:                                           ; preds = %if.end36
  br label %if.end37, !dbg !20054

if.end37:                                         ; preds = %do.end, %land.lhs.true, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end
  ret void, !dbg !20061
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_safe_changedir(%struct.FTS* %sp, %struct._ftsent* %p, i32 %fd, i8* %dir) #4 !dbg !20062 !ctir !2497 {
entry:
  %retval = alloca i32, align 4
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %ret = alloca i32, align 4, !ctir !7
  %is_dotdot = alloca i8, align 1, !ctir !120
  %newfd = alloca i32, align 4, !ctir !7
  %parent_fd = alloca i32, align 4, !ctir !7
  %sb = alloca %struct.stat, align 8, !ctir !2390
  %oerrno = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20063, metadata !DIExpression()), !dbg !20064
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20065, metadata !DIExpression()), !dbg !20066
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20067, metadata !DIExpression()), !dbg !20068
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !20069, metadata !DIExpression()), !dbg !20070
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !20071, metadata !DIExpression()), !dbg !20072
  call void @llvm.dbg.declare(metadata i8* %is_dotdot, metadata !20073, metadata !DIExpression()), !dbg !20074
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !20075, !tbaa !2995
  %tobool = icmp ne i8* %0, null, !dbg !20075
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !20076

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !20077, !tbaa !2995
  %call = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.440, i64 0, i64 0)) #14, !dbg !20077
  %cmp = icmp eq i32 %call, 0, !dbg !20077
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !20078
  %frombool = zext i1 %2 to i8, !dbg !20074
  store i8 %frombool, i8* %is_dotdot, align 1, !dbg !20074, !tbaa !3106
  call void @llvm.dbg.declare(metadata i32* %newfd, metadata !20079, metadata !DIExpression()), !dbg !20080
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20081, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !20081, !ctir !2335
  %4 = load i32, i32* %fts_options, align 8, !dbg !20081, !tbaa !18042, !ctir !7
  %and = and i32 %4, 4, !dbg !20081
  %tobool1 = icmp ne i32 %and, 0, !dbg !20081
  br i1 %tobool1, label %if.then, label %if.end8, !dbg !20083

if.then:                                          ; preds = %land.end
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20084, !tbaa !2995
  %fts_options2 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !20084, !ctir !2335
  %6 = load i32, i32* %fts_options2, align 8, !dbg !20084, !tbaa !18042, !ctir !7
  %and3 = and i32 %6, 512, !dbg !20084
  %tobool4 = icmp ne i32 %and3, 0, !dbg !20084
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !20087

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %fd.addr, align 4, !dbg !20088, !tbaa !2982
  %cmp5 = icmp sle i32 0, %7, !dbg !20089
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !20090

if.then6:                                         ; preds = %land.lhs.true
  %8 = load i32, i32* %fd.addr, align 4, !dbg !20091, !tbaa !2982
  %call7 = call i32 @close(i32 %8), !dbg !20092
  br label %if.end, !dbg !20092

if.end:                                           ; preds = %if.then6, %land.lhs.true, %if.then
  store i32 0, i32* %retval, align 4, !dbg !20093
  br label %return, !dbg !20093

if.end8:                                          ; preds = %land.end
  %9 = load i32, i32* %fd.addr, align 4, !dbg !20094, !tbaa !2982
  %cmp9 = icmp slt i32 %9, 0, !dbg !20096
  br i1 %cmp9, label %land.lhs.true10, label %if.end25, !dbg !20097

land.lhs.true10:                                  ; preds = %if.end8
  %10 = load i8, i8* %is_dotdot, align 1, !dbg !20098, !tbaa !3106
  %tobool11 = trunc i8 %10 to i1, !dbg !20098
  br i1 %tobool11, label %land.lhs.true12, label %if.end25, !dbg !20099

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20100, !tbaa !2995
  %fts_options13 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 10, !dbg !20100, !ctir !2335
  %12 = load i32, i32* %fts_options13, align 8, !dbg !20100, !tbaa !18042, !ctir !7
  %and14 = and i32 %12, 512, !dbg !20100
  %tobool15 = icmp ne i32 %and14, 0, !dbg !20100
  br i1 %tobool15, label %if.then16, label %if.end25, !dbg !20101

if.then16:                                        ; preds = %land.lhs.true12
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20102, !tbaa !2995
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 13, !dbg !20105, !ctir !2335
  %call17 = call zeroext i1 @i_ring_empty(%struct.I_ring* %fts_fd_ring) #14, !dbg !20106
  br i1 %call17, label %if.end24, label %if.then18, !dbg !20107

if.then18:                                        ; preds = %if.then16
  call void @llvm.dbg.declare(metadata i32* %parent_fd, metadata !20108, metadata !DIExpression()), !dbg !20110
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20111, !tbaa !2995
  %fts_fd_ring19 = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 13, !dbg !20112, !ctir !2335
  %call20 = call i32 @i_ring_pop(%struct.I_ring* %fts_fd_ring19), !dbg !20113
  store i32 %call20, i32* %parent_fd, align 4, !dbg !20114, !tbaa !2982
  store i8 1, i8* %is_dotdot, align 1, !dbg !20115, !tbaa !3106
  %15 = load i32, i32* %parent_fd, align 4, !dbg !20116, !tbaa !2982
  %cmp21 = icmp sle i32 0, %15, !dbg !20118
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !20119

if.then22:                                        ; preds = %if.then18
  %16 = load i32, i32* %parent_fd, align 4, !dbg !20120, !tbaa !2982
  store i32 %16, i32* %fd.addr, align 4, !dbg !20122, !tbaa !2982
  store i8* null, i8** %dir.addr, align 8, !dbg !20123, !tbaa !2995
  br label %if.end23, !dbg !20124

if.end23:                                         ; preds = %if.then22, %if.then18
  br label %if.end24, !dbg !20125

if.end24:                                         ; preds = %if.end23, %if.then16
  br label %if.end25, !dbg !20126

if.end25:                                         ; preds = %if.end24, %land.lhs.true12, %land.lhs.true10, %if.end8
  %17 = load i32, i32* %fd.addr, align 4, !dbg !20127, !tbaa !2982
  store i32 %17, i32* %newfd, align 4, !dbg !20128, !tbaa !2982
  %18 = load i32, i32* %fd.addr, align 4, !dbg !20129, !tbaa !2982
  %cmp26 = icmp slt i32 %18, 0, !dbg !20131
  br i1 %cmp26, label %land.lhs.true27, label %if.end31, !dbg !20132

land.lhs.true27:                                  ; preds = %if.end25
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20133, !tbaa !2995
  %20 = load i8*, i8** %dir.addr, align 8, !dbg !20134, !tbaa !2995
  %call28 = call i32 @diropen(%struct.FTS* %19, i8* %20), !dbg !20135
  store i32 %call28, i32* %newfd, align 4, !dbg !20136, !tbaa !2982
  %cmp29 = icmp slt i32 %call28, 0, !dbg !20137
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !20138

if.then30:                                        ; preds = %land.lhs.true27
  store i32 -1, i32* %retval, align 4, !dbg !20139
  br label %return, !dbg !20139

if.end31:                                         ; preds = %land.lhs.true27, %if.end25
  %21 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20140, !tbaa !2995
  %fts_options32 = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 10, !dbg !20140, !ctir !2335
  %22 = load i32, i32* %fts_options32, align 8, !dbg !20140, !tbaa !18042, !ctir !7
  %and33 = and i32 %22, 2, !dbg !20140
  %tobool34 = icmp ne i32 %and33, 0, !dbg !20140
  br i1 %tobool34, label %if.then39, label %lor.lhs.false, !dbg !20142

lor.lhs.false:                                    ; preds = %if.end31
  %23 = load i8*, i8** %dir.addr, align 8, !dbg !20143, !tbaa !2995
  %tobool35 = icmp ne i8* %23, null, !dbg !20143
  br i1 %tobool35, label %land.lhs.true36, label %if.end54, !dbg !20144

land.lhs.true36:                                  ; preds = %lor.lhs.false
  %24 = load i8*, i8** %dir.addr, align 8, !dbg !20145, !tbaa !2995
  %call37 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.440, i64 0, i64 0)) #14, !dbg !20145
  %cmp38 = icmp eq i32 %call37, 0, !dbg !20145
  br i1 %cmp38, label %if.then39, label %if.end54, !dbg !20146

if.then39:                                        ; preds = %land.lhs.true36, %if.end31
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !20147, metadata !DIExpression()), !dbg !20149
  %25 = load i32, i32* %newfd, align 4, !dbg !20150, !tbaa !2982
  %call40 = call i32 @fstat(i32 %25, %struct.stat* %sb) #10, !dbg !20152
  %tobool41 = icmp ne i32 %call40, 0, !dbg !20152
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !20153

if.then42:                                        ; preds = %if.then39
  store i32 -1, i32* %ret, align 4, !dbg !20154, !tbaa !2982
  br label %bail, !dbg !20156

if.end43:                                         ; preds = %if.then39
  %26 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20157, !tbaa !2995
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 18, !dbg !20159, !ctir !2318
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20160
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !20160, !ctir !2390
  %27 = load i64, i64* %st_dev, align 8, !dbg !20160, !tbaa !3873, !ctir !231
  %st_dev44 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 0, !dbg !20161, !ctir !2390
  %28 = load i64, i64* %st_dev44, align 8, !dbg !20161, !tbaa !3873, !ctir !231
  %cmp45 = icmp ne i64 %27, %28, !dbg !20162
  br i1 %cmp45, label %if.then51, label %lor.lhs.false46, !dbg !20163

lor.lhs.false46:                                  ; preds = %if.end43
  %29 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20164, !tbaa !2995
  %fts_statp47 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !20165, !ctir !2318
  %arraydecay48 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp47, i64 0, i64 0, !dbg !20166
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay48, i32 0, i32 1, !dbg !20166, !ctir !2390
  %30 = load i64, i64* %st_ino, align 8, !dbg !20166, !tbaa !3870, !ctir !228
  %st_ino49 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 1, !dbg !20167, !ctir !2390
  %31 = load i64, i64* %st_ino49, align 8, !dbg !20167, !tbaa !3870, !ctir !228
  %cmp50 = icmp ne i64 %30, %31, !dbg !20168
  br i1 %cmp50, label %if.then51, label %if.end53, !dbg !20169

if.then51:                                        ; preds = %lor.lhs.false46, %if.end43
  %call52 = call i32* @__errno_location() #15, !dbg !20170
  store i32 2, i32* %call52, align 4, !dbg !20170, !tbaa !2982, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !20172, !tbaa !2982
  br label %bail, !dbg !20173

if.end53:                                         ; preds = %lor.lhs.false46
  br label %if.end54, !dbg !20174

if.end54:                                         ; preds = %if.end53, %land.lhs.true36, %lor.lhs.false
  %32 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20175, !tbaa !2995
  %fts_options55 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 10, !dbg !20175, !ctir !2335
  %33 = load i32, i32* %fts_options55, align 8, !dbg !20175, !tbaa !18042, !ctir !7
  %and56 = and i32 %33, 512, !dbg !20175
  %tobool57 = icmp ne i32 %and56, 0, !dbg !20175
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !20177

if.then58:                                        ; preds = %if.end54
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20178, !tbaa !2995
  %35 = load i32, i32* %newfd, align 4, !dbg !20180, !tbaa !2982
  %36 = load i8, i8* %is_dotdot, align 1, !dbg !20181, !tbaa !3106
  %tobool59 = trunc i8 %36 to i1, !dbg !20181
  %lnot = xor i1 %tobool59, true, !dbg !20182
  call void @cwd_advance_fd(%struct.FTS* %34, i32 %35, i1 zeroext %lnot), !dbg !20183
  store i32 0, i32* %retval, align 4, !dbg !20184
  br label %return, !dbg !20184

if.end60:                                         ; preds = %if.end54
  %37 = load i32, i32* %newfd, align 4, !dbg !20185, !tbaa !2982
  %call61 = call i32 @fchdir(i32 %37) #10, !dbg !20186
  store i32 %call61, i32* %ret, align 4, !dbg !20187, !tbaa !2982
  br label %bail, !dbg !20188

bail:                                             ; preds = %if.end60, %if.then51, %if.then42
  call void @llvm.dbg.label(metadata !20189), !dbg !20190
  %38 = load i32, i32* %fd.addr, align 4, !dbg !20191, !tbaa !2982
  %cmp62 = icmp slt i32 %38, 0, !dbg !20193
  br i1 %cmp62, label %if.then63, label %if.end67, !dbg !20194

if.then63:                                        ; preds = %bail
  call void @llvm.dbg.declare(metadata i32* %oerrno, metadata !20195, metadata !DIExpression()), !dbg !20197
  %call64 = call i32* @__errno_location() #15, !dbg !20198
  %39 = load i32, i32* %call64, align 4, !dbg !20198, !tbaa !2982, !ctir !7
  store i32 %39, i32* %oerrno, align 4, !dbg !20197, !tbaa !2982
  %40 = load i32, i32* %newfd, align 4, !dbg !20199, !tbaa !2982
  %call65 = call i32 @close(i32 %40), !dbg !20200
  %41 = load i32, i32* %oerrno, align 4, !dbg !20201, !tbaa !2982
  %call66 = call i32* @__errno_location() #15, !dbg !20201
  store i32 %41, i32* %call66, align 4, !dbg !20201, !tbaa !2982, !ctir !7
  br label %if.end67, !dbg !20202

if.end67:                                         ; preds = %if.then63, %bail
  %42 = load i32, i32* %ret, align 4, !dbg !20203, !tbaa !2982
  store i32 %42, i32* %retval, align 4, !dbg !20204
  br label %return, !dbg !20204

return:                                           ; preds = %if.end67, %if.then58, %if.then30, %if.end
  %43 = load i32, i32* %retval, align 4, !dbg !20205
  ret i32 %43, !dbg !20205
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_build(%struct.FTS* %sp, i32 %type) #4 !dbg !20206 !ctir !2424 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %type.addr = alloca i32, align 4
  %p = alloca %struct._ftsent*, align 8, !ctir !2417
  %head = alloca %struct._ftsent*, align 8, !ctir !2417
  %nitems = alloca i64, align 8, !ctir !55
  %tail = alloca %struct._ftsent*, align 8, !ctir !2417
  %oldaddr = alloca i8*, align 8, !ctir !53
  %saved_errno = alloca i32, align 4, !ctir !7
  %descend = alloca i8, align 1, !ctir !120
  %doadjust = alloca i8, align 1, !ctir !120
  %level = alloca i64, align 8, !ctir !566
  %len = alloca i64, align 8, !ctir !55
  %maxlen = alloca i64, align 8, !ctir !55
  %new_len = alloca i64, align 8, !ctir !55
  %cp = alloca i8*, align 8, !ctir !9
  %dir_fd = alloca i32, align 4, !ctir !7
  %cur = alloca %struct._ftsent*, align 8, !ctir !2417
  %continue_readdir = alloca i8, align 1, !ctir !120
  %sort_by_inode = alloca i8, align 1, !ctir !120
  %max_entries = alloca i64, align 8, !ctir !55
  %dp = alloca %struct.__dirstream*, align 8, !ctir !607
  %d_namelen = alloca i64, align 8, !ctir !55
  %dp159 = alloca %struct.dirent*, align 8, !ctir !2471
  %skip_stat = alloca i8, align 1, !ctir !120
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20207, metadata !DIExpression()), !dbg !20208
  store i32 %type, i32* %type.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !20209, metadata !DIExpression()), !dbg !20210
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !20211, metadata !DIExpression()), !dbg !20212
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head, metadata !20213, metadata !DIExpression()), !dbg !20214
  call void @llvm.dbg.declare(metadata i64* %nitems, metadata !20215, metadata !DIExpression()), !dbg !20216
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tail, metadata !20217, metadata !DIExpression()), !dbg !20218
  call void @llvm.dbg.declare(metadata i8** %oldaddr, metadata !20219, metadata !DIExpression()), !dbg !20220
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !20221, metadata !DIExpression()), !dbg !20222
  call void @llvm.dbg.declare(metadata i8* %descend, metadata !20223, metadata !DIExpression()), !dbg !20224
  call void @llvm.dbg.declare(metadata i8* %doadjust, metadata !20225, metadata !DIExpression()), !dbg !20226
  call void @llvm.dbg.declare(metadata i64* %level, metadata !20227, metadata !DIExpression()), !dbg !20228
  call void @llvm.dbg.declare(metadata i64* %len, metadata !20229, metadata !DIExpression()), !dbg !20230
  call void @llvm.dbg.declare(metadata i64* %maxlen, metadata !20231, metadata !DIExpression()), !dbg !20232
  call void @llvm.dbg.declare(metadata i64* %new_len, metadata !20233, metadata !DIExpression()), !dbg !20234
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !20235, metadata !DIExpression()), !dbg !20236
  call void @llvm.dbg.declare(metadata i32* %dir_fd, metadata !20237, metadata !DIExpression()), !dbg !20238
  call void @llvm.dbg.declare(metadata %struct._ftsent** %cur, metadata !20239, metadata !DIExpression()), !dbg !20240
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20241, !tbaa !2995
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !20242, !ctir !2335
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !20242, !tbaa !18630, !ctir !2322
  store %struct._ftsent* %1, %struct._ftsent** %cur, align 8, !dbg !20240, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8* %continue_readdir, metadata !20243, metadata !DIExpression()), !dbg !20244
  %2 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20245, !tbaa !2995
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 3, !dbg !20246, !ctir !2318
  %3 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !20246, !tbaa !2995, !ctir !607
  %tobool = icmp ne %struct.__dirstream* %3, null, !dbg !20247
  %lnot = xor i1 %tobool, true, !dbg !20247
  %lnot1 = xor i1 %lnot, true, !dbg !20248
  %frombool = zext i1 %lnot1 to i8, !dbg !20244
  store i8 %frombool, i8* %continue_readdir, align 1, !dbg !20244, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %sort_by_inode, metadata !20249, metadata !DIExpression()), !dbg !20250
  store i8 0, i8* %sort_by_inode, align 1, !dbg !20250, !tbaa !3106
  call void @llvm.dbg.declare(metadata i64* %max_entries, metadata !20251, metadata !DIExpression()), !dbg !20252
  %4 = load i8, i8* %continue_readdir, align 1, !dbg !20253, !tbaa !3106
  %tobool2 = trunc i8 %4 to i1, !dbg !20253
  br i1 %tobool2, label %if.then, label %if.else, !dbg !20255

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !20256, metadata !DIExpression()), !dbg !20258
  %5 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20259, !tbaa !2995
  %fts_dirp3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 3, !dbg !20260, !ctir !2318
  %6 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp3, align 8, !dbg !20260, !tbaa !2995, !ctir !607
  store %struct.__dirstream* %6, %struct.__dirstream** %dp, align 8, !dbg !20258, !tbaa !2995
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !20261, !tbaa !2995
  %call = call i32 @dirfd(%struct.__dirstream* %7) #10, !dbg !20262
  store i32 %call, i32* %dir_fd, align 4, !dbg !20263, !tbaa !2982
  %8 = load i32, i32* %dir_fd, align 4, !dbg !20264, !tbaa !2982
  %cmp = icmp slt i32 %8, 0, !dbg !20266
  br i1 %cmp, label %if.then4, label %if.end11, !dbg !20267

if.then4:                                         ; preds = %if.then
  br label %do.body, !dbg !20268

do.body:                                          ; preds = %if.then4
  %9 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20270, !tbaa !2995
  %fts_dirp5 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 3, !dbg !20270, !ctir !2318
  %10 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp5, align 8, !dbg !20270, !tbaa !2995, !ctir !607
  %call6 = call i32 @closedir(%struct.__dirstream* %10), !dbg !20270
  %11 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20270, !tbaa !2995
  %fts_dirp7 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 3, !dbg !20270, !ctir !2318
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp7, align 8, !dbg !20270, !tbaa !2995, !ctir !607
  br label %do.end, !dbg !20270

do.end:                                           ; preds = %do.body
  %12 = load i32, i32* %type.addr, align 4, !dbg !20272, !tbaa !2982
  %cmp8 = icmp eq i32 %12, 3, !dbg !20274
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !20275

if.then9:                                         ; preds = %do.end
  %13 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20276, !tbaa !2995
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 15, !dbg !20278, !ctir !2318
  store i16 4, i16* %fts_info, align 8, !dbg !20279, !tbaa !3810, !ctir !33
  %call10 = call i32* @__errno_location() #15, !dbg !20280
  %14 = load i32, i32* %call10, align 4, !dbg !20280, !tbaa !2982, !ctir !7
  %15 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20281, !tbaa !2995
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 8, !dbg !20282, !ctir !2318
  store i32 %14, i32* %fts_errno, align 8, !dbg !20283, !tbaa !2982, !ctir !7
  br label %if.end, !dbg !20284

if.end:                                           ; preds = %if.then9, %do.end
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20285
  br label %return, !dbg !20285

if.end11:                                         ; preds = %if.then
  br label %if.end58, !dbg !20286

if.else:                                          ; preds = %entry
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20287, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 10, !dbg !20287, !ctir !2335
  %17 = load i32, i32* %fts_options, align 8, !dbg !20287, !tbaa !18042, !ctir !7
  %and = and i32 %17, 4, !dbg !20287
  %tobool12 = icmp ne i32 %and, 0, !dbg !20287
  br i1 %tobool12, label %cond.false, label %land.lhs.true, !dbg !20287

land.lhs.true:                                    ; preds = %if.else
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20287, !tbaa !2995
  %fts_options13 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 10, !dbg !20287, !ctir !2335
  %19 = load i32, i32* %fts_options13, align 8, !dbg !20287, !tbaa !18042, !ctir !7
  %and14 = and i32 %19, 512, !dbg !20287
  %tobool15 = icmp ne i32 %and14, 0, !dbg !20287
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !20287

cond.true:                                        ; preds = %land.lhs.true
  %20 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20287, !tbaa !2995
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 6, !dbg !20287, !ctir !2335
  %21 = load i32, i32* %fts_cwd_fd, align 4, !dbg !20287, !tbaa !3823, !ctir !7
  br label %cond.end, !dbg !20287

cond.false:                                       ; preds = %land.lhs.true, %if.else
  br label %cond.end, !dbg !20287

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ -100, %cond.false ], !dbg !20287
  %22 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20287, !tbaa !2995
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 6, !dbg !20287, !ctir !2318
  %23 = load i8*, i8** %fts_accpath, align 8, !dbg !20287, !tbaa !2995, !ctir !9
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20287, !tbaa !2995
  %fts_options16 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !20287, !ctir !2335
  %25 = load i32, i32* %fts_options16, align 8, !dbg !20287, !tbaa !18042, !ctir !7
  %and17 = and i32 %25, 16, !dbg !20287
  %tobool18 = icmp ne i32 %and17, 0, !dbg !20287
  br i1 %tobool18, label %land.rhs, label %land.end25, !dbg !20287

land.rhs:                                         ; preds = %cond.end
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20287, !tbaa !2995
  %fts_options19 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 10, !dbg !20287, !ctir !2335
  %27 = load i32, i32* %fts_options19, align 8, !dbg !20287, !tbaa !18042, !ctir !7
  %and20 = and i32 %27, 1, !dbg !20287
  %tobool21 = icmp ne i32 %and20, 0, !dbg !20287
  br i1 %tobool21, label %land.rhs22, label %land.end, !dbg !20287

land.rhs22:                                       ; preds = %land.rhs
  %28 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20287, !tbaa !2995
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 12, !dbg !20287, !ctir !2318
  %29 = load i64, i64* %fts_level, align 8, !dbg !20287, !tbaa !3848, !ctir !566
  %cmp23 = icmp eq i64 %29, 0, !dbg !20287
  br label %land.end

land.end:                                         ; preds = %land.rhs22, %land.rhs
  %30 = phi i1 [ false, %land.rhs ], [ %cmp23, %land.rhs22 ], !dbg !20290
  %lnot24 = xor i1 %30, true, !dbg !20287
  br label %land.end25

land.end25:                                       ; preds = %land.end, %cond.end
  %31 = phi i1 [ false, %cond.end ], [ %lnot24, %land.end ], !dbg !20290
  %32 = zext i1 %31 to i64, !dbg !20287
  %cond26 = select i1 %31, i32 131072, i32 0, !dbg !20287
  %call27 = call %struct.__dirstream* @opendirat(i32 %cond, i8* %23, i32 %cond26, i32* %dir_fd), !dbg !20287
  %33 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20291, !tbaa !2995
  %fts_dirp28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 3, !dbg !20292, !ctir !2318
  store %struct.__dirstream* %call27, %struct.__dirstream** %fts_dirp28, align 8, !dbg !20293, !tbaa !2995, !ctir !607
  %cmp29 = icmp eq %struct.__dirstream* %call27, null, !dbg !20294
  br i1 %cmp29, label %if.then30, label %if.end37, !dbg !20295

if.then30:                                        ; preds = %land.end25
  %34 = load i32, i32* %type.addr, align 4, !dbg !20296, !tbaa !2982
  %cmp31 = icmp eq i32 %34, 3, !dbg !20299
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !20300

if.then32:                                        ; preds = %if.then30
  %35 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20301, !tbaa !2995
  %fts_info33 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %35, i32 0, i32 15, !dbg !20303, !ctir !2318
  store i16 4, i16* %fts_info33, align 8, !dbg !20304, !tbaa !3810, !ctir !33
  %call34 = call i32* @__errno_location() #15, !dbg !20305
  %36 = load i32, i32* %call34, align 4, !dbg !20305, !tbaa !2982, !ctir !7
  %37 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20306, !tbaa !2995
  %fts_errno35 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 8, !dbg !20307, !ctir !2318
  store i32 %36, i32* %fts_errno35, align 8, !dbg !20308, !tbaa !2982, !ctir !7
  br label %if.end36, !dbg !20309

if.end36:                                         ; preds = %if.then32, %if.then30
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20310
  br label %return, !dbg !20310

if.end37:                                         ; preds = %land.end25
  %38 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20311, !tbaa !2995
  %fts_info38 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 15, !dbg !20313, !ctir !2318
  %39 = load i16, i16* %fts_info38, align 8, !dbg !20313, !tbaa !3810, !ctir !33
  %conv = zext i16 %39 to i32, !dbg !20311
  %cmp39 = icmp eq i32 %conv, 11, !dbg !20314
  br i1 %cmp39, label %if.then41, label %if.else44, !dbg !20315

if.then41:                                        ; preds = %if.end37
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20316, !tbaa !2995
  %41 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20317, !tbaa !2995
  %call42 = call zeroext i16 @fts_stat(%struct.FTS* %40, %struct._ftsent* %41, i1 zeroext false), !dbg !20318
  %42 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20319, !tbaa !2995
  %fts_info43 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 15, !dbg !20320, !ctir !2318
  store i16 %call42, i16* %fts_info43, align 8, !dbg !20321, !tbaa !3810, !ctir !33
  br label %if.end57, !dbg !20319

if.else44:                                        ; preds = %if.end37
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20322, !tbaa !2995
  %fts_options45 = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 10, !dbg !20324, !ctir !2335
  %44 = load i32, i32* %fts_options45, align 8, !dbg !20324, !tbaa !18042, !ctir !7
  %and46 = and i32 %44, 256, !dbg !20325
  %tobool47 = icmp ne i32 %and46, 0, !dbg !20325
  br i1 %tobool47, label %if.then48, label %if.end56, !dbg !20326

if.then48:                                        ; preds = %if.else44
  br label %do.body49, !dbg !20327

do.body49:                                        ; preds = %if.then48
  %45 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20329, !tbaa !2995
  %46 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20329, !tbaa !2995
  call void @leave_dir(%struct.FTS* %45, %struct._ftsent* %46), !dbg !20329
  br label %do.end50, !dbg !20329

do.end50:                                         ; preds = %do.body49
  %47 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20331, !tbaa !2995
  %48 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20332, !tbaa !2995
  %call51 = call zeroext i16 @fts_stat(%struct.FTS* %47, %struct._ftsent* %48, i1 zeroext false), !dbg !20333
  %49 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20334, !tbaa !2995
  %50 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20336, !tbaa !2995
  %call52 = call zeroext i1 @enter_dir(%struct.FTS* %49, %struct._ftsent* %50), !dbg !20337
  br i1 %call52, label %if.end55, label %if.then53, !dbg !20338

if.then53:                                        ; preds = %do.end50
  %call54 = call i32* @__errno_location() #15, !dbg !20339
  store i32 12, i32* %call54, align 4, !dbg !20339, !tbaa !2982, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20341
  br label %return, !dbg !20341

if.end55:                                         ; preds = %do.end50
  br label %if.end56, !dbg !20342

if.end56:                                         ; preds = %if.end55, %if.else44
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then41
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end11
  %51 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20343, !tbaa !2995
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 9, !dbg !20344, !ctir !2335
  %52 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !20344, !tbaa !18419, !ctir !2349
  %tobool59 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %52, null, !dbg !20343
  %53 = zext i1 %tobool59 to i64, !dbg !20343
  %cond60 = select i1 %tobool59, i64 -1, i64 100000, !dbg !20343
  store i64 %cond60, i64* %max_entries, align 8, !dbg !20345, !tbaa !3848
  %54 = load i8, i8* %continue_readdir, align 1, !dbg !20346, !tbaa !3106
  %tobool61 = trunc i8 %54 to i1, !dbg !20346
  br i1 %tobool61, label %if.then62, label %if.else63, !dbg !20348

if.then62:                                        ; preds = %if.end58
  store i8 1, i8* %descend, align 1, !dbg !20349, !tbaa !3106
  br label %if.end135, !dbg !20351

if.else63:                                        ; preds = %if.end58
  %55 = load i32, i32* %type.addr, align 4, !dbg !20352, !tbaa !2982
  %cmp64 = icmp ne i32 %55, 2, !dbg !20354
  br i1 %cmp64, label %land.rhs66, label %land.end87, !dbg !20355

land.rhs66:                                       ; preds = %if.else63
  %56 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20356, !tbaa !2995
  %fts_options67 = getelementptr inbounds %struct.FTS, %struct.FTS* %56, i32 0, i32 10, !dbg !20356, !ctir !2335
  %57 = load i32, i32* %fts_options67, align 8, !dbg !20356, !tbaa !18042, !ctir !7
  %and68 = and i32 %57, 8, !dbg !20356
  %tobool69 = icmp ne i32 %and68, 0, !dbg !20356
  br i1 %tobool69, label %land.lhs.true70, label %land.end85, !dbg !20357

land.lhs.true70:                                  ; preds = %land.rhs66
  %58 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20358, !tbaa !2995
  %fts_options71 = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 10, !dbg !20358, !ctir !2335
  %59 = load i32, i32* %fts_options71, align 8, !dbg !20358, !tbaa !18042, !ctir !7
  %and72 = and i32 %59, 16, !dbg !20358
  %tobool73 = icmp ne i32 %and72, 0, !dbg !20358
  br i1 %tobool73, label %land.lhs.true74, label %land.end85, !dbg !20359

land.lhs.true74:                                  ; preds = %land.lhs.true70
  %60 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20360, !tbaa !2995
  %fts_options75 = getelementptr inbounds %struct.FTS, %struct.FTS* %60, i32 0, i32 10, !dbg !20360, !ctir !2335
  %61 = load i32, i32* %fts_options75, align 8, !dbg !20360, !tbaa !18042, !ctir !7
  %and76 = and i32 %61, 32, !dbg !20360
  %tobool77 = icmp ne i32 %and76, 0, !dbg !20360
  br i1 %tobool77, label %land.end85, label %land.lhs.true78, !dbg !20361

land.lhs.true78:                                  ; preds = %land.lhs.true74
  %62 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20362, !tbaa !2995
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %62, i32 0, i32 18, !dbg !20363, !ctir !2318
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20364
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 2, !dbg !20364, !ctir !2390
  %63 = load i64, i64* %st_nlink, align 8, !dbg !20364, !tbaa !5420, !ctir !323
  %cmp79 = icmp eq i64 %63, 2, !dbg !20365
  br i1 %cmp79, label %land.rhs81, label %land.end85, !dbg !20366

land.rhs81:                                       ; preds = %land.lhs.true78
  %64 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20367, !tbaa !2995
  %65 = load i32, i32* %dir_fd, align 4, !dbg !20368, !tbaa !2982
  %call82 = call i32 @leaf_optimization(%struct._ftsent* %64, i32 %65), !dbg !20369
  %cmp83 = icmp ne i32 %call82, 0, !dbg !20370
  br label %land.end85

land.end85:                                       ; preds = %land.rhs81, %land.lhs.true78, %land.lhs.true74, %land.lhs.true70, %land.rhs66
  %66 = phi i1 [ false, %land.lhs.true78 ], [ false, %land.lhs.true74 ], [ false, %land.lhs.true70 ], [ false, %land.rhs66 ], [ %cmp83, %land.rhs81 ], !dbg !20371
  %lnot86 = xor i1 %66, true, !dbg !20372
  br label %land.end87

land.end87:                                       ; preds = %land.end85, %if.else63
  %67 = phi i1 [ false, %if.else63 ], [ %lnot86, %land.end85 ], !dbg !20371
  %frombool88 = zext i1 %67 to i8, !dbg !20373
  store i8 %frombool88, i8* %descend, align 1, !dbg !20373, !tbaa !3106
  %68 = load i8, i8* %descend, align 1, !dbg !20374, !tbaa !3106
  %tobool89 = trunc i8 %68 to i1, !dbg !20374
  br i1 %tobool89, label %if.then93, label %lor.lhs.false, !dbg !20376

lor.lhs.false:                                    ; preds = %land.end87
  %69 = load i32, i32* %type.addr, align 4, !dbg !20377, !tbaa !2982
  %cmp91 = icmp eq i32 %69, 3, !dbg !20378
  br i1 %cmp91, label %if.then93, label %if.end134, !dbg !20379

if.then93:                                        ; preds = %lor.lhs.false, %land.end87
  %70 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20380, !tbaa !2995
  %fts_options94 = getelementptr inbounds %struct.FTS, %struct.FTS* %70, i32 0, i32 10, !dbg !20380, !ctir !2335
  %71 = load i32, i32* %fts_options94, align 8, !dbg !20380, !tbaa !18042, !ctir !7
  %and95 = and i32 %71, 512, !dbg !20380
  %tobool96 = icmp ne i32 %and95, 0, !dbg !20380
  br i1 %tobool96, label %if.then97, label %if.end99, !dbg !20383

if.then97:                                        ; preds = %if.then93
  %72 = load i32, i32* %dir_fd, align 4, !dbg !20384, !tbaa !2982
  %call98 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %72, i32 1030, i32 3), !dbg !20385
  store i32 %call98, i32* %dir_fd, align 4, !dbg !20386, !tbaa !2982
  br label %if.end99, !dbg !20387

if.end99:                                         ; preds = %if.then97, %if.then93
  %73 = load i32, i32* %dir_fd, align 4, !dbg !20388, !tbaa !2982
  %cmp100 = icmp slt i32 %73, 0, !dbg !20390
  br i1 %cmp100, label %if.then105, label %lor.lhs.false102, !dbg !20391

lor.lhs.false102:                                 ; preds = %if.end99
  %74 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20392, !tbaa !2995
  %75 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20393, !tbaa !2995
  %76 = load i32, i32* %dir_fd, align 4, !dbg !20394, !tbaa !2982
  %call103 = call i32 @fts_safe_changedir(%struct.FTS* %74, %struct._ftsent* %75, i32 %76, i8* null), !dbg !20395
  %tobool104 = icmp ne i32 %call103, 0, !dbg !20395
  br i1 %tobool104, label %if.then105, label %if.else132, !dbg !20396

if.then105:                                       ; preds = %lor.lhs.false102, %if.end99
  %77 = load i8, i8* %descend, align 1, !dbg !20397, !tbaa !3106
  %tobool106 = trunc i8 %77 to i1, !dbg !20397
  br i1 %tobool106, label %land.lhs.true108, label %if.end114, !dbg !20400

land.lhs.true108:                                 ; preds = %if.then105
  %78 = load i32, i32* %type.addr, align 4, !dbg !20401, !tbaa !2982
  %cmp109 = icmp eq i32 %78, 3, !dbg !20402
  br i1 %cmp109, label %if.then111, label %if.end114, !dbg !20403

if.then111:                                       ; preds = %land.lhs.true108
  %call112 = call i32* @__errno_location() #15, !dbg !20404
  %79 = load i32, i32* %call112, align 4, !dbg !20404, !tbaa !2982, !ctir !7
  %80 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20405, !tbaa !2995
  %fts_errno113 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %80, i32 0, i32 8, !dbg !20406, !ctir !2318
  store i32 %79, i32* %fts_errno113, align 8, !dbg !20407, !tbaa !2982, !ctir !7
  br label %if.end114, !dbg !20405

if.end114:                                        ; preds = %if.then111, %land.lhs.true108, %if.then105
  %81 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20408, !tbaa !2995
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 16, !dbg !20409, !ctir !2318
  %82 = load i16, i16* %fts_flags, align 2, !dbg !20410, !tbaa !3810, !ctir !33
  %conv115 = zext i16 %82 to i32, !dbg !20410
  %or = or i32 %conv115, 1, !dbg !20410
  %conv116 = trunc i32 %or to i16, !dbg !20410
  store i16 %conv116, i16* %fts_flags, align 2, !dbg !20410, !tbaa !3810, !ctir !33
  store i8 0, i8* %descend, align 1, !dbg !20411, !tbaa !3106
  br label %do.body117, !dbg !20412

do.body117:                                       ; preds = %if.end114
  %83 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20413, !tbaa !2995
  %fts_dirp118 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %83, i32 0, i32 3, !dbg !20413, !ctir !2318
  %84 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp118, align 8, !dbg !20413, !tbaa !2995, !ctir !607
  %call119 = call i32 @closedir(%struct.__dirstream* %84), !dbg !20413
  %85 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20413, !tbaa !2995
  %fts_dirp120 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %85, i32 0, i32 3, !dbg !20413, !ctir !2318
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp120, align 8, !dbg !20413, !tbaa !2995, !ctir !607
  br label %do.end121, !dbg !20413

do.end121:                                        ; preds = %do.body117
  %86 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20415, !tbaa !2995
  %fts_options122 = getelementptr inbounds %struct.FTS, %struct.FTS* %86, i32 0, i32 10, !dbg !20415, !ctir !2335
  %87 = load i32, i32* %fts_options122, align 8, !dbg !20415, !tbaa !18042, !ctir !7
  %and123 = and i32 %87, 512, !dbg !20415
  %tobool124 = icmp ne i32 %and123, 0, !dbg !20415
  br i1 %tobool124, label %land.lhs.true125, label %if.end130, !dbg !20417

land.lhs.true125:                                 ; preds = %do.end121
  %88 = load i32, i32* %dir_fd, align 4, !dbg !20418, !tbaa !2982
  %cmp126 = icmp sle i32 0, %88, !dbg !20419
  br i1 %cmp126, label %if.then128, label %if.end130, !dbg !20420

if.then128:                                       ; preds = %land.lhs.true125
  %89 = load i32, i32* %dir_fd, align 4, !dbg !20421, !tbaa !2982
  %call129 = call i32 @close(i32 %89), !dbg !20422
  br label %if.end130, !dbg !20422

if.end130:                                        ; preds = %if.then128, %land.lhs.true125, %do.end121
  %90 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20423, !tbaa !2995
  %fts_dirp131 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %90, i32 0, i32 3, !dbg !20424, !ctir !2318
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp131, align 8, !dbg !20425, !tbaa !2995, !ctir !607
  br label %if.end133, !dbg !20426

if.else132:                                       ; preds = %lor.lhs.false102
  store i8 1, i8* %descend, align 1, !dbg !20427, !tbaa !3106
  br label %if.end133

if.end133:                                        ; preds = %if.else132, %if.end130
  br label %if.end134, !dbg !20428

if.end134:                                        ; preds = %if.end133, %lor.lhs.false
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then62
  %91 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20429, !tbaa !2995
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 7, !dbg !20429, !ctir !2318
  %92 = load i8*, i8** %fts_path, align 8, !dbg !20429, !tbaa !2995, !ctir !9
  %93 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20429, !tbaa !2995
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %93, i32 0, i32 10, !dbg !20429, !ctir !2318
  %94 = load i64, i64* %fts_pathlen, align 8, !dbg !20429, !tbaa !3848, !ctir !55
  %sub = sub i64 %94, 1, !dbg !20429
  %arrayidx = getelementptr inbounds i8, i8* %92, i64 %sub, !dbg !20429, !ctir !9
  %95 = load i8, i8* %arrayidx, align 1, !dbg !20429, !tbaa !3657
  %conv136 = sext i8 %95 to i32, !dbg !20429
  %cmp137 = icmp eq i32 %conv136, 47, !dbg !20429
  br i1 %cmp137, label %cond.true139, label %cond.false142, !dbg !20429

cond.true139:                                     ; preds = %if.end135
  %96 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20429, !tbaa !2995
  %fts_pathlen140 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %96, i32 0, i32 10, !dbg !20429, !ctir !2318
  %97 = load i64, i64* %fts_pathlen140, align 8, !dbg !20429, !tbaa !3848, !ctir !55
  %sub141 = sub i64 %97, 1, !dbg !20429
  br label %cond.end144, !dbg !20429

cond.false142:                                    ; preds = %if.end135
  %98 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20429, !tbaa !2995
  %fts_pathlen143 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %98, i32 0, i32 10, !dbg !20429, !ctir !2318
  %99 = load i64, i64* %fts_pathlen143, align 8, !dbg !20429, !tbaa !3848, !ctir !55
  br label %cond.end144, !dbg !20429

cond.end144:                                      ; preds = %cond.false142, %cond.true139
  %cond145 = phi i64 [ %sub141, %cond.true139 ], [ %99, %cond.false142 ], !dbg !20429
  store i64 %cond145, i64* %len, align 8, !dbg !20430, !tbaa !3848
  %100 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20431, !tbaa !2995
  %fts_options146 = getelementptr inbounds %struct.FTS, %struct.FTS* %100, i32 0, i32 10, !dbg !20431, !ctir !2335
  %101 = load i32, i32* %fts_options146, align 8, !dbg !20431, !tbaa !18042, !ctir !7
  %and147 = and i32 %101, 4, !dbg !20431
  %tobool148 = icmp ne i32 %and147, 0, !dbg !20431
  br i1 %tobool148, label %if.then149, label %if.else151, !dbg !20433

if.then149:                                       ; preds = %cond.end144
  %102 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20434, !tbaa !2995
  %fts_path150 = getelementptr inbounds %struct.FTS, %struct.FTS* %102, i32 0, i32 4, !dbg !20436, !ctir !2335
  %103 = load i8*, i8** %fts_path150, align 8, !dbg !20436, !tbaa !18681, !ctir !9
  %104 = load i64, i64* %len, align 8, !dbg !20437, !tbaa !3848
  %add.ptr = getelementptr inbounds i8, i8* %103, i64 %104, !dbg !20438
  store i8* %add.ptr, i8** %cp, align 8, !dbg !20439, !tbaa !2995
  %105 = load i8*, i8** %cp, align 8, !dbg !20440, !tbaa !2995
  %incdec.ptr = getelementptr inbounds i8, i8* %105, i32 1, !dbg !20440
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !20440, !tbaa !2995
  store i8 47, i8* %105, align 1, !dbg !20441, !tbaa !3657, !ctir !10
  br label %if.end152, !dbg !20442

if.else151:                                       ; preds = %cond.end144
  store i8* null, i8** %cp, align 8, !dbg !20443, !tbaa !2995
  br label %if.end152

if.end152:                                        ; preds = %if.else151, %if.then149
  %106 = load i64, i64* %len, align 8, !dbg !20445, !tbaa !3848
  %inc = add i64 %106, 1, !dbg !20445
  store i64 %inc, i64* %len, align 8, !dbg !20445, !tbaa !3848
  %107 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20446, !tbaa !2995
  %fts_pathlen153 = getelementptr inbounds %struct.FTS, %struct.FTS* %107, i32 0, i32 7, !dbg !20447, !ctir !2335
  %108 = load i64, i64* %fts_pathlen153, align 8, !dbg !20447, !tbaa !18732, !ctir !55
  %109 = load i64, i64* %len, align 8, !dbg !20448, !tbaa !3848
  %sub154 = sub i64 %108, %109, !dbg !20449
  store i64 %sub154, i64* %maxlen, align 8, !dbg !20450, !tbaa !3848
  %110 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20451, !tbaa !2995
  %fts_level155 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 12, !dbg !20452, !ctir !2318
  %111 = load i64, i64* %fts_level155, align 8, !dbg !20452, !tbaa !3848, !ctir !566
  %add = add nsw i64 %111, 1, !dbg !20453
  store i64 %add, i64* %level, align 8, !dbg !20454, !tbaa !3848
  store i8 0, i8* %doadjust, align 1, !dbg !20455, !tbaa !3106
  store %struct._ftsent* null, %struct._ftsent** %head, align 8, !dbg !20456, !tbaa !2995
  store %struct._ftsent* null, %struct._ftsent** %tail, align 8, !dbg !20457, !tbaa !2995
  store i64 0, i64* %nitems, align 8, !dbg !20458, !tbaa !3848
  br label %while.cond, !dbg !20459

while.cond:                                       ; preds = %if.end334, %if.then200, %if.end152
  %112 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20460, !tbaa !2995
  %fts_dirp156 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %112, i32 0, i32 3, !dbg !20461, !ctir !2318
  %113 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp156, align 8, !dbg !20461, !tbaa !2995, !ctir !607
  %tobool157 = icmp ne %struct.__dirstream* %113, null, !dbg !20459
  br i1 %tobool157, label %while.body, label %while.end, !dbg !20459

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %d_namelen, metadata !20462, metadata !DIExpression()), !dbg !20464
  %call158 = call i32* @__errno_location() #15, !dbg !20465
  store i32 0, i32* %call158, align 4, !dbg !20465, !tbaa !2982, !ctir !7
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp159, metadata !20466, metadata !DIExpression()), !dbg !20467
  %114 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20468, !tbaa !2995
  %fts_dirp160 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %114, i32 0, i32 3, !dbg !20469, !ctir !2318
  %115 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp160, align 8, !dbg !20469, !tbaa !2995, !ctir !607
  %call161 = call %struct.dirent* @readdir(%struct.__dirstream* %115), !dbg !20470
  store %struct.dirent* %call161, %struct.dirent** %dp159, align 8, !dbg !20467, !tbaa !2995
  %116 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20471, !tbaa !2995
  %cmp162 = icmp eq %struct.dirent* %116, null, !dbg !20473
  br i1 %cmp162, label %if.then164, label %if.end177, !dbg !20474

if.then164:                                       ; preds = %while.body
  %call165 = call i32* @__errno_location() #15, !dbg !20475
  %117 = load i32, i32* %call165, align 4, !dbg !20475, !tbaa !2982, !ctir !7
  %tobool166 = icmp ne i32 %117, 0, !dbg !20475
  br i1 %tobool166, label %if.then167, label %if.end176, !dbg !20478

if.then167:                                       ; preds = %if.then164
  %call168 = call i32* @__errno_location() #15, !dbg !20479
  %118 = load i32, i32* %call168, align 4, !dbg !20479, !tbaa !2982, !ctir !7
  %119 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20481, !tbaa !2995
  %fts_errno169 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %119, i32 0, i32 8, !dbg !20482, !ctir !2318
  store i32 %118, i32* %fts_errno169, align 8, !dbg !20483, !tbaa !2982, !ctir !7
  %120 = load i8, i8* %continue_readdir, align 1, !dbg !20484, !tbaa !3106
  %tobool170 = trunc i8 %120 to i1, !dbg !20484
  br i1 %tobool170, label %lor.end, label %lor.rhs, !dbg !20485

lor.rhs:                                          ; preds = %if.then167
  %121 = load i64, i64* %nitems, align 8, !dbg !20486, !tbaa !3848
  %tobool172 = icmp ne i64 %121, 0, !dbg !20485
  br label %lor.end, !dbg !20485

lor.end:                                          ; preds = %lor.rhs, %if.then167
  %122 = phi i1 [ true, %if.then167 ], [ %tobool172, %lor.rhs ]
  %123 = zext i1 %122 to i64, !dbg !20487
  %cond173 = select i1 %122, i32 7, i32 4, !dbg !20487
  %conv174 = trunc i32 %cond173 to i16, !dbg !20487
  %124 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20488, !tbaa !2995
  %fts_info175 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %124, i32 0, i32 15, !dbg !20489, !ctir !2318
  store i16 %conv174, i16* %fts_info175, align 8, !dbg !20490, !tbaa !3810, !ctir !33
  br label %if.end176, !dbg !20491

if.end176:                                        ; preds = %lor.end, %if.then164
  br label %while.end, !dbg !20492

if.end177:                                        ; preds = %while.body
  %125 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20493, !tbaa !2995
  %fts_options178 = getelementptr inbounds %struct.FTS, %struct.FTS* %125, i32 0, i32 10, !dbg !20493, !ctir !2335
  %126 = load i32, i32* %fts_options178, align 8, !dbg !20493, !tbaa !18042, !ctir !7
  %and179 = and i32 %126, 32, !dbg !20493
  %tobool180 = icmp ne i32 %and179, 0, !dbg !20493
  br i1 %tobool180, label %if.end201, label %land.lhs.true181, !dbg !20495

land.lhs.true181:                                 ; preds = %if.end177
  %127 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20496, !tbaa !2995
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %127, i32 0, i32 4, !dbg !20496, !ctir !2472
  %arrayidx182 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !20496, !ctir !559
  %128 = load i8, i8* %arrayidx182, align 1, !dbg !20496, !tbaa !3657
  %conv183 = sext i8 %128 to i32, !dbg !20496
  %cmp184 = icmp eq i32 %conv183, 46, !dbg !20496
  br i1 %cmp184, label %land.lhs.true186, label %if.end201, !dbg !20496

land.lhs.true186:                                 ; preds = %land.lhs.true181
  %129 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20496, !tbaa !2995
  %d_name187 = getelementptr inbounds %struct.dirent, %struct.dirent* %129, i32 0, i32 4, !dbg !20496, !ctir !2472
  %arrayidx188 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name187, i64 0, i64 1, !dbg !20496, !ctir !559
  %130 = load i8, i8* %arrayidx188, align 1, !dbg !20496, !tbaa !3657
  %tobool189 = icmp ne i8 %130, 0, !dbg !20496
  br i1 %tobool189, label %lor.lhs.false190, label %if.then200, !dbg !20496

lor.lhs.false190:                                 ; preds = %land.lhs.true186
  %131 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20496, !tbaa !2995
  %d_name191 = getelementptr inbounds %struct.dirent, %struct.dirent* %131, i32 0, i32 4, !dbg !20496, !ctir !2472
  %arrayidx192 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name191, i64 0, i64 1, !dbg !20496, !ctir !559
  %132 = load i8, i8* %arrayidx192, align 1, !dbg !20496, !tbaa !3657
  %conv193 = sext i8 %132 to i32, !dbg !20496
  %cmp194 = icmp eq i32 %conv193, 46, !dbg !20496
  br i1 %cmp194, label %land.lhs.true196, label %if.end201, !dbg !20496

land.lhs.true196:                                 ; preds = %lor.lhs.false190
  %133 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20496, !tbaa !2995
  %d_name197 = getelementptr inbounds %struct.dirent, %struct.dirent* %133, i32 0, i32 4, !dbg !20496, !ctir !2472
  %arrayidx198 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name197, i64 0, i64 2, !dbg !20496, !ctir !559
  %134 = load i8, i8* %arrayidx198, align 1, !dbg !20496, !tbaa !3657
  %tobool199 = icmp ne i8 %134, 0, !dbg !20496
  br i1 %tobool199, label %if.end201, label %if.then200, !dbg !20497

if.then200:                                       ; preds = %land.lhs.true196, %land.lhs.true186
  br label %while.cond, !dbg !20498, !llvm.loop !20499

if.end201:                                        ; preds = %land.lhs.true196, %lor.lhs.false190, %land.lhs.true181, %if.end177
  %135 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20501, !tbaa !2995
  %d_name202 = getelementptr inbounds %struct.dirent, %struct.dirent* %135, i32 0, i32 4, !dbg !20501, !ctir !2472
  %arraydecay203 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name202, i64 0, i64 0, !dbg !20501
  %call204 = call i64 @strlen(i8* %arraydecay203) #14, !dbg !20501
  store i64 %call204, i64* %d_namelen, align 8, !dbg !20502, !tbaa !3848
  %136 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20503, !tbaa !2995
  %137 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20504, !tbaa !2995
  %d_name205 = getelementptr inbounds %struct.dirent, %struct.dirent* %137, i32 0, i32 4, !dbg !20505, !ctir !2472
  %arraydecay206 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name205, i64 0, i64 0, !dbg !20504
  %138 = load i64, i64* %d_namelen, align 8, !dbg !20506, !tbaa !3848
  %call207 = call %struct._ftsent* @fts_alloc(%struct.FTS* %136, i8* %arraydecay206, i64 %138), !dbg !20507
  store %struct._ftsent* %call207, %struct._ftsent** %p, align 8, !dbg !20508, !tbaa !2995
  %139 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20509, !tbaa !2995
  %tobool208 = icmp ne %struct._ftsent* %139, null, !dbg !20509
  br i1 %tobool208, label %if.end210, label %if.then209, !dbg !20511

if.then209:                                       ; preds = %if.end201
  br label %mem1, !dbg !20512

if.end210:                                        ; preds = %if.end201
  %140 = load i64, i64* %d_namelen, align 8, !dbg !20513, !tbaa !3848
  %141 = load i64, i64* %maxlen, align 8, !dbg !20515, !tbaa !3848
  %cmp211 = icmp uge i64 %140, %141, !dbg !20516
  br i1 %cmp211, label %if.then213, label %if.end244, !dbg !20517

if.then213:                                       ; preds = %if.end210
  %142 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20518, !tbaa !2995
  %fts_path214 = getelementptr inbounds %struct.FTS, %struct.FTS* %142, i32 0, i32 4, !dbg !20520, !ctir !2335
  %143 = load i8*, i8** %fts_path214, align 8, !dbg !20520, !tbaa !18681, !ctir !9
  store i8* %143, i8** %oldaddr, align 8, !dbg !20521, !tbaa !2995
  %144 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20522, !tbaa !2995
  %145 = load i64, i64* %d_namelen, align 8, !dbg !20524, !tbaa !3848
  %146 = load i64, i64* %len, align 8, !dbg !20525, !tbaa !3848
  %add215 = add i64 %145, %146, !dbg !20526
  %add216 = add i64 %add215, 1, !dbg !20527
  %call217 = call zeroext i1 @fts_palloc(%struct.FTS* %144, i64 %add216), !dbg !20528
  br i1 %call217, label %if.end229, label %if.then218, !dbg !20529

if.then218:                                       ; preds = %if.then213
  br label %mem1, !dbg !20530

mem1:                                             ; preds = %if.then218, %if.then209
  call void @llvm.dbg.label(metadata !20531), !dbg !20533
  %call219 = call i32* @__errno_location() #15, !dbg !20534
  %147 = load i32, i32* %call219, align 4, !dbg !20534, !tbaa !2982, !ctir !7
  store i32 %147, i32* %saved_errno, align 4, !dbg !20535, !tbaa !2982
  %148 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20536, !tbaa !2995
  %149 = bitcast %struct._ftsent* %148 to i8*, !dbg !20536
  call void @free(i8* %149) #10, !dbg !20537
  %150 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20538, !tbaa !2995
  call void @fts_lfree(%struct._ftsent* %150), !dbg !20539
  br label %do.body220, !dbg !20540

do.body220:                                       ; preds = %mem1
  %151 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20541, !tbaa !2995
  %fts_dirp221 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %151, i32 0, i32 3, !dbg !20541, !ctir !2318
  %152 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp221, align 8, !dbg !20541, !tbaa !2995, !ctir !607
  %call222 = call i32 @closedir(%struct.__dirstream* %152), !dbg !20541
  %153 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20541, !tbaa !2995
  %fts_dirp223 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %153, i32 0, i32 3, !dbg !20541, !ctir !2318
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp223, align 8, !dbg !20541, !tbaa !2995, !ctir !607
  br label %do.end224, !dbg !20541

do.end224:                                        ; preds = %do.body220
  %154 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20543, !tbaa !2995
  %fts_info225 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %154, i32 0, i32 15, !dbg !20544, !ctir !2318
  store i16 7, i16* %fts_info225, align 8, !dbg !20545, !tbaa !3810, !ctir !33
  %155 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20546, !tbaa !2995
  %fts_options226 = getelementptr inbounds %struct.FTS, %struct.FTS* %155, i32 0, i32 10, !dbg !20546, !ctir !2335
  %156 = load i32, i32* %fts_options226, align 8, !dbg !20546, !tbaa !18042, !ctir !7
  %or227 = or i32 %156, 8192, !dbg !20546
  store i32 %or227, i32* %fts_options226, align 8, !dbg !20546, !tbaa !18042, !ctir !7
  %157 = load i32, i32* %saved_errno, align 4, !dbg !20547, !tbaa !2982
  %call228 = call i32* @__errno_location() #15, !dbg !20547
  store i32 %157, i32* %call228, align 4, !dbg !20547, !tbaa !2982, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20548
  br label %return, !dbg !20548

if.end229:                                        ; preds = %if.then213
  %158 = load i8*, i8** %oldaddr, align 8, !dbg !20549, !tbaa !2995
  %159 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20551, !tbaa !2995
  %fts_path230 = getelementptr inbounds %struct.FTS, %struct.FTS* %159, i32 0, i32 4, !dbg !20552, !ctir !2335
  %160 = load i8*, i8** %fts_path230, align 8, !dbg !20552, !tbaa !18681, !ctir !9
  %cmp231 = icmp ne i8* %158, %160, !dbg !20553
  br i1 %cmp231, label %if.then233, label %if.end241, !dbg !20554

if.then233:                                       ; preds = %if.end229
  store i8 1, i8* %doadjust, align 1, !dbg !20555, !tbaa !3106
  %161 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20557, !tbaa !2995
  %fts_options234 = getelementptr inbounds %struct.FTS, %struct.FTS* %161, i32 0, i32 10, !dbg !20557, !ctir !2335
  %162 = load i32, i32* %fts_options234, align 8, !dbg !20557, !tbaa !18042, !ctir !7
  %and235 = and i32 %162, 4, !dbg !20557
  %tobool236 = icmp ne i32 %and235, 0, !dbg !20557
  br i1 %tobool236, label %if.then237, label %if.end240, !dbg !20559

if.then237:                                       ; preds = %if.then233
  %163 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20560, !tbaa !2995
  %fts_path238 = getelementptr inbounds %struct.FTS, %struct.FTS* %163, i32 0, i32 4, !dbg !20561, !ctir !2335
  %164 = load i8*, i8** %fts_path238, align 8, !dbg !20561, !tbaa !18681, !ctir !9
  %165 = load i64, i64* %len, align 8, !dbg !20562, !tbaa !3848
  %add.ptr239 = getelementptr inbounds i8, i8* %164, i64 %165, !dbg !20563
  store i8* %add.ptr239, i8** %cp, align 8, !dbg !20564, !tbaa !2995
  br label %if.end240, !dbg !20565

if.end240:                                        ; preds = %if.then237, %if.then233
  br label %if.end241, !dbg !20566

if.end241:                                        ; preds = %if.end240, %if.end229
  %166 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20567, !tbaa !2995
  %fts_pathlen242 = getelementptr inbounds %struct.FTS, %struct.FTS* %166, i32 0, i32 7, !dbg !20568, !ctir !2335
  %167 = load i64, i64* %fts_pathlen242, align 8, !dbg !20568, !tbaa !18732, !ctir !55
  %168 = load i64, i64* %len, align 8, !dbg !20569, !tbaa !3848
  %sub243 = sub i64 %167, %168, !dbg !20570
  store i64 %sub243, i64* %maxlen, align 8, !dbg !20571, !tbaa !3848
  br label %if.end244, !dbg !20572

if.end244:                                        ; preds = %if.end241, %if.end210
  %169 = load i64, i64* %len, align 8, !dbg !20573, !tbaa !3848
  %170 = load i64, i64* %d_namelen, align 8, !dbg !20574, !tbaa !3848
  %add245 = add i64 %169, %170, !dbg !20575
  store i64 %add245, i64* %new_len, align 8, !dbg !20576, !tbaa !3848
  %171 = load i64, i64* %new_len, align 8, !dbg !20577, !tbaa !3848
  %172 = load i64, i64* %len, align 8, !dbg !20579, !tbaa !3848
  %cmp246 = icmp ult i64 %171, %172, !dbg !20580
  br i1 %cmp246, label %if.then248, label %if.end258, !dbg !20581

if.then248:                                       ; preds = %if.end244
  %173 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20582, !tbaa !2995
  %174 = bitcast %struct._ftsent* %173 to i8*, !dbg !20582
  call void @free(i8* %174) #10, !dbg !20584
  %175 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20585, !tbaa !2995
  call void @fts_lfree(%struct._ftsent* %175), !dbg !20586
  br label %do.body249, !dbg !20587

do.body249:                                       ; preds = %if.then248
  %176 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20588, !tbaa !2995
  %fts_dirp250 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %176, i32 0, i32 3, !dbg !20588, !ctir !2318
  %177 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp250, align 8, !dbg !20588, !tbaa !2995, !ctir !607
  %call251 = call i32 @closedir(%struct.__dirstream* %177), !dbg !20588
  %178 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20588, !tbaa !2995
  %fts_dirp252 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %178, i32 0, i32 3, !dbg !20588, !ctir !2318
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp252, align 8, !dbg !20588, !tbaa !2995, !ctir !607
  br label %do.end253, !dbg !20588

do.end253:                                        ; preds = %do.body249
  %179 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20590, !tbaa !2995
  %fts_info254 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %179, i32 0, i32 15, !dbg !20591, !ctir !2318
  store i16 7, i16* %fts_info254, align 8, !dbg !20592, !tbaa !3810, !ctir !33
  %180 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20593, !tbaa !2995
  %fts_options255 = getelementptr inbounds %struct.FTS, %struct.FTS* %180, i32 0, i32 10, !dbg !20593, !ctir !2335
  %181 = load i32, i32* %fts_options255, align 8, !dbg !20593, !tbaa !18042, !ctir !7
  %or256 = or i32 %181, 8192, !dbg !20593
  store i32 %or256, i32* %fts_options255, align 8, !dbg !20593, !tbaa !18042, !ctir !7
  %call257 = call i32* @__errno_location() #15, !dbg !20594
  store i32 36, i32* %call257, align 4, !dbg !20594, !tbaa !2982, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20595
  br label %return, !dbg !20595

if.end258:                                        ; preds = %if.end244
  %182 = load i64, i64* %level, align 8, !dbg !20596, !tbaa !3848
  %183 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20597, !tbaa !2995
  %fts_level259 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %183, i32 0, i32 12, !dbg !20598, !ctir !2318
  store i64 %182, i64* %fts_level259, align 8, !dbg !20599, !tbaa !3848, !ctir !566
  %184 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20600, !tbaa !2995
  %fts_cur260 = getelementptr inbounds %struct.FTS, %struct.FTS* %184, i32 0, i32 0, !dbg !20601, !ctir !2335
  %185 = load %struct._ftsent*, %struct._ftsent** %fts_cur260, align 8, !dbg !20601, !tbaa !18630, !ctir !2322
  %186 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20602, !tbaa !2995
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %186, i32 0, i32 1, !dbg !20603, !ctir !2318
  store %struct._ftsent* %185, %struct._ftsent** %fts_parent, align 8, !dbg !20604, !tbaa !2995, !ctir !2322
  %187 = load i64, i64* %new_len, align 8, !dbg !20605, !tbaa !3848
  %188 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20606, !tbaa !2995
  %fts_pathlen261 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %188, i32 0, i32 10, !dbg !20607, !ctir !2318
  store i64 %187, i64* %fts_pathlen261, align 8, !dbg !20608, !tbaa !3848, !ctir !55
  %189 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20609, !tbaa !2995
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %189, i32 0, i32 0, !dbg !20609, !ctir !2472
  %190 = load i64, i64* %d_ino, align 8, !dbg !20609, !tbaa !15680, !ctir !228
  %191 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20610, !tbaa !2995
  %fts_statp262 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %191, i32 0, i32 18, !dbg !20611, !ctir !2318
  %arraydecay263 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp262, i64 0, i64 0, !dbg !20612
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay263, i32 0, i32 1, !dbg !20612, !ctir !2390
  store i64 %190, i64* %st_ino, align 8, !dbg !20613, !tbaa !3870, !ctir !228
  %192 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20614, !tbaa !2995
  %fts_options264 = getelementptr inbounds %struct.FTS, %struct.FTS* %192, i32 0, i32 10, !dbg !20614, !ctir !2335
  %193 = load i32, i32* %fts_options264, align 8, !dbg !20614, !tbaa !18042, !ctir !7
  %and265 = and i32 %193, 4, !dbg !20614
  %tobool266 = icmp ne i32 %and265, 0, !dbg !20614
  br i1 %tobool266, label %if.then267, label %if.else272, !dbg !20616

if.then267:                                       ; preds = %if.end258
  %194 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20617, !tbaa !2995
  %fts_path268 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %194, i32 0, i32 7, !dbg !20619, !ctir !2318
  %195 = load i8*, i8** %fts_path268, align 8, !dbg !20619, !tbaa !2995, !ctir !9
  %196 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20620, !tbaa !2995
  %fts_accpath269 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %196, i32 0, i32 6, !dbg !20621, !ctir !2318
  store i8* %195, i8** %fts_accpath269, align 8, !dbg !20622, !tbaa !2995, !ctir !9
  %197 = load i8*, i8** %cp, align 8, !dbg !20623, !tbaa !2995
  %198 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20624, !tbaa !2995
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %198, i32 0, i32 19, !dbg !20625, !ctir !2318
  %arraydecay270 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !20626
  %199 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20627, !tbaa !2995
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %199, i32 0, i32 13, !dbg !20628, !ctir !2318
  %200 = load i64, i64* %fts_namelen, align 8, !dbg !20628, !tbaa !3848, !ctir !55
  %add271 = add i64 %200, 1, !dbg !20629
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 8 %arraydecay270, i64 %add271, i1 false), !dbg !20626
  br label %if.end276, !dbg !20630

if.else272:                                       ; preds = %if.end258
  %201 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20631, !tbaa !2995
  %fts_name273 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %201, i32 0, i32 19, !dbg !20632, !ctir !2318
  %arraydecay274 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name273, i64 0, i64 0, !dbg !20631
  %202 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20633, !tbaa !2995
  %fts_accpath275 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %202, i32 0, i32 6, !dbg !20634, !ctir !2318
  store i8* %arraydecay274, i8** %fts_accpath275, align 8, !dbg !20635, !tbaa !2995, !ctir !9
  br label %if.end276

if.end276:                                        ; preds = %if.else272, %if.then267
  %203 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20636, !tbaa !2995
  %fts_compar277 = getelementptr inbounds %struct.FTS, %struct.FTS* %203, i32 0, i32 9, !dbg !20638, !ctir !2335
  %204 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar277, align 8, !dbg !20638, !tbaa !18419, !ctir !2349
  %cmp278 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %204, null, !dbg !20639
  br i1 %cmp278, label %if.then284, label %lor.lhs.false280, !dbg !20640

lor.lhs.false280:                                 ; preds = %if.end276
  %205 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20641, !tbaa !2995
  %fts_options281 = getelementptr inbounds %struct.FTS, %struct.FTS* %205, i32 0, i32 10, !dbg !20641, !ctir !2335
  %206 = load i32, i32* %fts_options281, align 8, !dbg !20641, !tbaa !18042, !ctir !7
  %and282 = and i32 %206, 1024, !dbg !20641
  %tobool283 = icmp ne i32 %and282, 0, !dbg !20641
  br i1 %tobool283, label %if.then284, label %if.else311, !dbg !20642

if.then284:                                       ; preds = %lor.lhs.false280, %if.end276
  call void @llvm.dbg.declare(metadata i8* %skip_stat, metadata !20643, metadata !DIExpression()), !dbg !20645
  %207 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20646, !tbaa !2995
  %fts_options285 = getelementptr inbounds %struct.FTS, %struct.FTS* %207, i32 0, i32 10, !dbg !20646, !ctir !2335
  %208 = load i32, i32* %fts_options285, align 8, !dbg !20646, !tbaa !18042, !ctir !7
  %and286 = and i32 %208, 16, !dbg !20646
  %tobool287 = icmp ne i32 %and286, 0, !dbg !20646
  br i1 %tobool287, label %land.lhs.true288, label %land.end302, !dbg !20647

land.lhs.true288:                                 ; preds = %if.then284
  %209 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20648, !tbaa !2995
  %fts_options289 = getelementptr inbounds %struct.FTS, %struct.FTS* %209, i32 0, i32 10, !dbg !20648, !ctir !2335
  %210 = load i32, i32* %fts_options289, align 8, !dbg !20648, !tbaa !18042, !ctir !7
  %and290 = and i32 %210, 8, !dbg !20648
  %tobool291 = icmp ne i32 %and290, 0, !dbg !20648
  br i1 %tobool291, label %land.lhs.true292, label %land.end302, !dbg !20649

land.lhs.true292:                                 ; preds = %land.lhs.true288
  %211 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20650, !tbaa !2995
  %d_type = getelementptr inbounds %struct.dirent, %struct.dirent* %211, i32 0, i32 3, !dbg !20650, !ctir !2472
  %212 = load i8, i8* %d_type, align 2, !dbg !20650, !tbaa !20651, !ctir !466
  %conv293 = zext i8 %212 to i32, !dbg !20650
  %cmp294 = icmp ne i32 %conv293, 0, !dbg !20650
  br i1 %cmp294, label %land.rhs296, label %land.end302, !dbg !20652

land.rhs296:                                      ; preds = %land.lhs.true292
  %213 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20653, !tbaa !2995
  %d_type297 = getelementptr inbounds %struct.dirent, %struct.dirent* %213, i32 0, i32 3, !dbg !20653, !ctir !2472
  %214 = load i8, i8* %d_type297, align 2, !dbg !20653, !tbaa !20651, !ctir !466
  %conv298 = zext i8 %214 to i32, !dbg !20653
  %cmp299 = icmp eq i32 %conv298, 4, !dbg !20653
  %lnot301 = xor i1 %cmp299, true, !dbg !20654
  br label %land.end302

land.end302:                                      ; preds = %land.rhs296, %land.lhs.true292, %land.lhs.true288, %if.then284
  %215 = phi i1 [ false, %land.lhs.true292 ], [ false, %land.lhs.true288 ], [ false, %if.then284 ], [ %lnot301, %land.rhs296 ], !dbg !20655
  %frombool303 = zext i1 %215 to i8, !dbg !20645
  store i8 %frombool303, i8* %skip_stat, align 1, !dbg !20645, !tbaa !3106
  %216 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20656, !tbaa !2995
  %fts_info304 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %216, i32 0, i32 15, !dbg !20657, !ctir !2318
  store i16 11, i16* %fts_info304, align 8, !dbg !20658, !tbaa !3810, !ctir !33
  %217 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20659, !tbaa !2995
  %fts_statp305 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %217, i32 0, i32 18, !dbg !20660, !ctir !2318
  %arraydecay306 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp305, i64 0, i64 0, !dbg !20659
  %218 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20661, !tbaa !2995
  %d_type307 = getelementptr inbounds %struct.dirent, %struct.dirent* %218, i32 0, i32 3, !dbg !20661, !ctir !2472
  %219 = load i8, i8* %d_type307, align 2, !dbg !20661, !tbaa !20651, !ctir !466
  %conv308 = zext i8 %219 to i32, !dbg !20661
  call void @set_stat_type(%struct.stat* %arraydecay306, i32 %conv308), !dbg !20662
  %220 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20663, !tbaa !2995
  %221 = load i8, i8* %skip_stat, align 1, !dbg !20664, !tbaa !3106
  %tobool309 = trunc i8 %221 to i1, !dbg !20664
  %lnot310 = xor i1 %tobool309, true, !dbg !20665
  call void @fts_set_stat_required(%struct._ftsent* %220, i1 zeroext %lnot310), !dbg !20666
  br label %if.end314, !dbg !20667

if.else311:                                       ; preds = %lor.lhs.false280
  %222 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20668, !tbaa !2995
  %223 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20670, !tbaa !2995
  %call312 = call zeroext i16 @fts_stat(%struct.FTS* %222, %struct._ftsent* %223, i1 zeroext false), !dbg !20671
  %224 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20672, !tbaa !2995
  %fts_info313 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %224, i32 0, i32 15, !dbg !20673, !ctir !2318
  store i16 %call312, i16* %fts_info313, align 8, !dbg !20674, !tbaa !3810, !ctir !33
  br label %if.end314

if.end314:                                        ; preds = %if.else311, %land.end302
  %225 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20675, !tbaa !2995
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %225, i32 0, i32 2, !dbg !20676, !ctir !2318
  store %struct._ftsent* null, %struct._ftsent** %fts_link, align 8, !dbg !20677, !tbaa !2995, !ctir !2322
  %226 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20678, !tbaa !2995
  %cmp315 = icmp eq %struct._ftsent* %226, null, !dbg !20680
  br i1 %cmp315, label %if.then317, label %if.else318, !dbg !20681

if.then317:                                       ; preds = %if.end314
  %227 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20682, !tbaa !2995
  store %struct._ftsent* %227, %struct._ftsent** %tail, align 8, !dbg !20683, !tbaa !2995
  store %struct._ftsent* %227, %struct._ftsent** %head, align 8, !dbg !20684, !tbaa !2995
  br label %if.end320, !dbg !20685

if.else318:                                       ; preds = %if.end314
  %228 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20686, !tbaa !2995
  %229 = load %struct._ftsent*, %struct._ftsent** %tail, align 8, !dbg !20688, !tbaa !2995
  %fts_link319 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %229, i32 0, i32 2, !dbg !20689, !ctir !2318
  store %struct._ftsent* %228, %struct._ftsent** %fts_link319, align 8, !dbg !20690, !tbaa !2995, !ctir !2322
  %230 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20691, !tbaa !2995
  store %struct._ftsent* %230, %struct._ftsent** %tail, align 8, !dbg !20692, !tbaa !2995
  br label %if.end320

if.end320:                                        ; preds = %if.else318, %if.then317
  %231 = load i64, i64* %nitems, align 8, !dbg !20693, !tbaa !3848
  %cmp321 = icmp eq i64 %231, 10000, !dbg !20695
  br i1 %cmp321, label %land.lhs.true323, label %if.end329, !dbg !20696

land.lhs.true323:                                 ; preds = %if.end320
  %232 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20697, !tbaa !2995
  %fts_compar324 = getelementptr inbounds %struct.FTS, %struct.FTS* %232, i32 0, i32 9, !dbg !20698, !ctir !2335
  %233 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar324, align 8, !dbg !20698, !tbaa !18419, !ctir !2349
  %tobool325 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %233, null, !dbg !20697
  br i1 %tobool325, label %if.end329, label %if.then326, !dbg !20699

if.then326:                                       ; preds = %land.lhs.true323
  %234 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20700, !tbaa !2995
  %235 = load i32, i32* %dir_fd, align 4, !dbg !20701, !tbaa !2982
  %call327 = call zeroext i1 @dirent_inode_sort_may_be_useful(%struct._ftsent* %234, i32 %235), !dbg !20702
  %frombool328 = zext i1 %call327 to i8, !dbg !20703
  store i8 %frombool328, i8* %sort_by_inode, align 1, !dbg !20703, !tbaa !3106
  br label %if.end329, !dbg !20704

if.end329:                                        ; preds = %if.then326, %land.lhs.true323, %if.end320
  %236 = load i64, i64* %nitems, align 8, !dbg !20705, !tbaa !3848
  %inc330 = add i64 %236, 1, !dbg !20705
  store i64 %inc330, i64* %nitems, align 8, !dbg !20705, !tbaa !3848
  %237 = load i64, i64* %max_entries, align 8, !dbg !20706, !tbaa !3848
  %238 = load i64, i64* %nitems, align 8, !dbg !20708, !tbaa !3848
  %cmp331 = icmp ule i64 %237, %238, !dbg !20709
  br i1 %cmp331, label %if.then333, label %if.end334, !dbg !20710

if.then333:                                       ; preds = %if.end329
  br label %break_without_closedir, !dbg !20711

if.end334:                                        ; preds = %if.end329
  br label %while.cond, !dbg !20459, !llvm.loop !20499

while.end:                                        ; preds = %if.end176, %while.cond
  %239 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20713, !tbaa !2995
  %fts_dirp335 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %239, i32 0, i32 3, !dbg !20715, !ctir !2318
  %240 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp335, align 8, !dbg !20715, !tbaa !2995, !ctir !607
  %tobool336 = icmp ne %struct.__dirstream* %240, null, !dbg !20713
  br i1 %tobool336, label %if.then337, label %if.end343, !dbg !20716

if.then337:                                       ; preds = %while.end
  br label %do.body338, !dbg !20717

do.body338:                                       ; preds = %if.then337
  %241 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20718, !tbaa !2995
  %fts_dirp339 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %241, i32 0, i32 3, !dbg !20718, !ctir !2318
  %242 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp339, align 8, !dbg !20718, !tbaa !2995, !ctir !607
  %call340 = call i32 @closedir(%struct.__dirstream* %242), !dbg !20718
  %243 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20718, !tbaa !2995
  %fts_dirp341 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %243, i32 0, i32 3, !dbg !20718, !ctir !2318
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp341, align 8, !dbg !20718, !tbaa !2995, !ctir !607
  br label %do.end342, !dbg !20718

do.end342:                                        ; preds = %do.body338
  br label %if.end343, !dbg !20718

if.end343:                                        ; preds = %do.end342, %while.end
  br label %break_without_closedir, !dbg !20715

break_without_closedir:                           ; preds = %if.end343, %if.then333
  call void @llvm.dbg.label(metadata !20720), !dbg !20721
  %244 = load i8, i8* %doadjust, align 1, !dbg !20722, !tbaa !3106
  %tobool344 = trunc i8 %244 to i1, !dbg !20722
  br i1 %tobool344, label %if.then345, label %if.end346, !dbg !20724

if.then345:                                       ; preds = %break_without_closedir
  %245 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20725, !tbaa !2995
  %246 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20726, !tbaa !2995
  call void @fts_padjust(%struct.FTS* %245, %struct._ftsent* %246), !dbg !20727
  br label %if.end346, !dbg !20727

if.end346:                                        ; preds = %if.then345, %break_without_closedir
  %247 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20728, !tbaa !2995
  %fts_options347 = getelementptr inbounds %struct.FTS, %struct.FTS* %247, i32 0, i32 10, !dbg !20728, !ctir !2335
  %248 = load i32, i32* %fts_options347, align 8, !dbg !20728, !tbaa !18042, !ctir !7
  %and348 = and i32 %248, 4, !dbg !20728
  %tobool349 = icmp ne i32 %and348, 0, !dbg !20728
  br i1 %tobool349, label %if.then350, label %if.end360, !dbg !20730

if.then350:                                       ; preds = %if.end346
  %249 = load i64, i64* %len, align 8, !dbg !20731, !tbaa !3848
  %250 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20734, !tbaa !2995
  %fts_pathlen351 = getelementptr inbounds %struct.FTS, %struct.FTS* %250, i32 0, i32 7, !dbg !20735, !ctir !2335
  %251 = load i64, i64* %fts_pathlen351, align 8, !dbg !20735, !tbaa !18732, !ctir !55
  %cmp352 = icmp eq i64 %249, %251, !dbg !20736
  br i1 %cmp352, label %if.then357, label %lor.lhs.false354, !dbg !20737

lor.lhs.false354:                                 ; preds = %if.then350
  %252 = load i64, i64* %nitems, align 8, !dbg !20738, !tbaa !3848
  %cmp355 = icmp eq i64 %252, 0, !dbg !20739
  br i1 %cmp355, label %if.then357, label %if.end359, !dbg !20740

if.then357:                                       ; preds = %lor.lhs.false354, %if.then350
  %253 = load i8*, i8** %cp, align 8, !dbg !20741, !tbaa !2995
  %incdec.ptr358 = getelementptr inbounds i8, i8* %253, i32 -1, !dbg !20741
  store i8* %incdec.ptr358, i8** %cp, align 8, !dbg !20741, !tbaa !2995
  br label %if.end359, !dbg !20741

if.end359:                                        ; preds = %if.then357, %lor.lhs.false354
  %254 = load i8*, i8** %cp, align 8, !dbg !20742, !tbaa !2995
  store i8 0, i8* %254, align 1, !dbg !20743, !tbaa !3657, !ctir !10
  br label %if.end360, !dbg !20744

if.end360:                                        ; preds = %if.end359, %if.end346
  %255 = load i8, i8* %continue_readdir, align 1, !dbg !20745, !tbaa !3106
  %tobool361 = trunc i8 %255 to i1, !dbg !20745
  br i1 %tobool361, label %if.end385, label %land.lhs.true362, !dbg !20747

land.lhs.true362:                                 ; preds = %if.end360
  %256 = load i8, i8* %descend, align 1, !dbg !20748, !tbaa !3106
  %tobool363 = trunc i8 %256 to i1, !dbg !20748
  br i1 %tobool363, label %land.lhs.true365, label %if.end385, !dbg !20749

land.lhs.true365:                                 ; preds = %land.lhs.true362
  %257 = load i32, i32* %type.addr, align 4, !dbg !20750, !tbaa !2982
  %cmp366 = icmp eq i32 %257, 1, !dbg !20751
  br i1 %cmp366, label %land.lhs.true370, label %lor.lhs.false368, !dbg !20752

lor.lhs.false368:                                 ; preds = %land.lhs.true365
  %258 = load i64, i64* %nitems, align 8, !dbg !20753, !tbaa !3848
  %tobool369 = icmp ne i64 %258, 0, !dbg !20753
  br i1 %tobool369, label %if.end385, label %land.lhs.true370, !dbg !20754

land.lhs.true370:                                 ; preds = %lor.lhs.false368, %land.lhs.true365
  %259 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20755, !tbaa !2995
  %fts_level371 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %259, i32 0, i32 12, !dbg !20756, !ctir !2318
  %260 = load i64, i64* %fts_level371, align 8, !dbg !20756, !tbaa !3848, !ctir !566
  %cmp372 = icmp eq i64 %260, 0, !dbg !20757
  br i1 %cmp372, label %cond.true374, label %cond.false377, !dbg !20758

cond.true374:                                     ; preds = %land.lhs.true370
  %261 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20759, !tbaa !2995
  %call375 = call i32 @restore_initial_cwd(%struct.FTS* %261), !dbg !20760
  %tobool376 = icmp ne i32 %call375, 0, !dbg !20760
  br i1 %tobool376, label %if.then381, label %if.end385, !dbg !20755

cond.false377:                                    ; preds = %land.lhs.true370
  %262 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20761, !tbaa !2995
  %263 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20762, !tbaa !2995
  %fts_parent378 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %263, i32 0, i32 1, !dbg !20763, !ctir !2318
  %264 = load %struct._ftsent*, %struct._ftsent** %fts_parent378, align 8, !dbg !20763, !tbaa !2995, !ctir !2322
  %call379 = call i32 @fts_safe_changedir(%struct.FTS* %262, %struct._ftsent* %264, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.440, i64 0, i64 0)), !dbg !20764
  %tobool380 = icmp ne i32 %call379, 0, !dbg !20764
  br i1 %tobool380, label %if.then381, label %if.end385, !dbg !20758

if.then381:                                       ; preds = %cond.false377, %cond.true374
  %265 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20765, !tbaa !2995
  %fts_info382 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %265, i32 0, i32 15, !dbg !20767, !ctir !2318
  store i16 7, i16* %fts_info382, align 8, !dbg !20768, !tbaa !3810, !ctir !33
  %266 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20769, !tbaa !2995
  %fts_options383 = getelementptr inbounds %struct.FTS, %struct.FTS* %266, i32 0, i32 10, !dbg !20769, !ctir !2335
  %267 = load i32, i32* %fts_options383, align 8, !dbg !20769, !tbaa !18042, !ctir !7
  %or384 = or i32 %267, 8192, !dbg !20769
  store i32 %or384, i32* %fts_options383, align 8, !dbg !20769, !tbaa !18042, !ctir !7
  %268 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20770, !tbaa !2995
  call void @fts_lfree(%struct._ftsent* %268), !dbg !20771
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20772
  br label %return, !dbg !20772

if.end385:                                        ; preds = %cond.false377, %cond.true374, %lor.lhs.false368, %land.lhs.true362, %if.end360
  %269 = load i64, i64* %nitems, align 8, !dbg !20773, !tbaa !3848
  %tobool386 = icmp ne i64 %269, 0, !dbg !20773
  br i1 %tobool386, label %if.end403, label %if.then387, !dbg !20775

if.then387:                                       ; preds = %if.end385
  %270 = load i32, i32* %type.addr, align 4, !dbg !20776, !tbaa !2982
  %cmp388 = icmp eq i32 %270, 3, !dbg !20779
  br i1 %cmp388, label %land.lhs.true390, label %if.end402, !dbg !20780

land.lhs.true390:                                 ; preds = %if.then387
  %271 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20781, !tbaa !2995
  %fts_info391 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %271, i32 0, i32 15, !dbg !20782, !ctir !2318
  %272 = load i16, i16* %fts_info391, align 8, !dbg !20782, !tbaa !3810, !ctir !33
  %conv392 = zext i16 %272 to i32, !dbg !20781
  %cmp393 = icmp ne i32 %conv392, 4, !dbg !20783
  br i1 %cmp393, label %land.lhs.true395, label %if.end402, !dbg !20784

land.lhs.true395:                                 ; preds = %land.lhs.true390
  %273 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20785, !tbaa !2995
  %fts_info396 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %273, i32 0, i32 15, !dbg !20786, !ctir !2318
  %274 = load i16, i16* %fts_info396, align 8, !dbg !20786, !tbaa !3810, !ctir !33
  %conv397 = zext i16 %274 to i32, !dbg !20785
  %cmp398 = icmp ne i32 %conv397, 7, !dbg !20787
  br i1 %cmp398, label %if.then400, label %if.end402, !dbg !20788

if.then400:                                       ; preds = %land.lhs.true395
  %275 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20789, !tbaa !2995
  %fts_info401 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %275, i32 0, i32 15, !dbg !20790, !ctir !2318
  store i16 6, i16* %fts_info401, align 8, !dbg !20791, !tbaa !3810, !ctir !33
  br label %if.end402, !dbg !20789

if.end402:                                        ; preds = %if.then400, %land.lhs.true395, %land.lhs.true390, %if.then387
  %276 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20792, !tbaa !2995
  call void @fts_lfree(%struct._ftsent* %276), !dbg !20793
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20794
  br label %return, !dbg !20794

if.end403:                                        ; preds = %if.end385
  %277 = load i8, i8* %sort_by_inode, align 1, !dbg !20795, !tbaa !3106
  %tobool404 = trunc i8 %277 to i1, !dbg !20795
  br i1 %tobool404, label %if.then405, label %if.end409, !dbg !20797

if.then405:                                       ; preds = %if.end403
  %278 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20798, !tbaa !2995
  %fts_compar406 = getelementptr inbounds %struct.FTS, %struct.FTS* %278, i32 0, i32 9, !dbg !20800, !ctir !2335
  store i32 (%struct._ftsent**, %struct._ftsent**)* @fts_compare_ino, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar406, align 8, !dbg !20801, !tbaa !18419, !ctir !2349
  %279 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20802, !tbaa !2995
  %280 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20803, !tbaa !2995
  %281 = load i64, i64* %nitems, align 8, !dbg !20804, !tbaa !3848
  %call407 = call %struct._ftsent* @fts_sort(%struct.FTS* %279, %struct._ftsent* %280, i64 %281), !dbg !20805
  store %struct._ftsent* %call407, %struct._ftsent** %head, align 8, !dbg !20806, !tbaa !2995
  %282 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20807, !tbaa !2995
  %fts_compar408 = getelementptr inbounds %struct.FTS, %struct.FTS* %282, i32 0, i32 9, !dbg !20808, !ctir !2335
  store i32 (%struct._ftsent**, %struct._ftsent**)* null, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar408, align 8, !dbg !20809, !tbaa !18419, !ctir !2349
  br label %if.end409, !dbg !20810

if.end409:                                        ; preds = %if.then405, %if.end403
  %283 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20811, !tbaa !2995
  %fts_compar410 = getelementptr inbounds %struct.FTS, %struct.FTS* %283, i32 0, i32 9, !dbg !20813, !ctir !2335
  %284 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar410, align 8, !dbg !20813, !tbaa !18419, !ctir !2349
  %tobool411 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %284, null, !dbg !20811
  br i1 %tobool411, label %land.lhs.true412, label %if.end417, !dbg !20814

land.lhs.true412:                                 ; preds = %if.end409
  %285 = load i64, i64* %nitems, align 8, !dbg !20815, !tbaa !3848
  %cmp413 = icmp ugt i64 %285, 1, !dbg !20816
  br i1 %cmp413, label %if.then415, label %if.end417, !dbg !20817

if.then415:                                       ; preds = %land.lhs.true412
  %286 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20818, !tbaa !2995
  %287 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20819, !tbaa !2995
  %288 = load i64, i64* %nitems, align 8, !dbg !20820, !tbaa !3848
  %call416 = call %struct._ftsent* @fts_sort(%struct.FTS* %286, %struct._ftsent* %287, i64 %288), !dbg !20821
  store %struct._ftsent* %call416, %struct._ftsent** %head, align 8, !dbg !20822, !tbaa !2995
  br label %if.end417, !dbg !20823

if.end417:                                        ; preds = %if.then415, %land.lhs.true412, %if.end409
  %289 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20824, !tbaa !2995
  store %struct._ftsent* %289, %struct._ftsent** %retval, align 8, !dbg !20825
  br label %return, !dbg !20825

return:                                           ; preds = %if.end417, %if.end402, %if.then381, %do.end253, %do.end224, %if.then53, %if.end36, %if.end
  %290 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !20826
  ret %struct._ftsent* %290, !dbg !20826
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @restore_initial_cwd(%struct.FTS* %sp) #4 !dbg !20827 !ctir !2418 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %fail = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20828, metadata !DIExpression()), !dbg !20829
  call void @llvm.dbg.declare(metadata i32* %fail, metadata !20830, metadata !DIExpression()), !dbg !20831
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20832, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !20832, !ctir !2335
  %1 = load i32, i32* %fts_options, align 8, !dbg !20832, !tbaa !18042, !ctir !7
  %and = and i32 %1, 4, !dbg !20832
  %tobool = icmp ne i32 %and, 0, !dbg !20832
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !20832

land.rhs:                                         ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20832, !tbaa !2995
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !20832, !ctir !2335
  %3 = load i32, i32* %fts_options1, align 8, !dbg !20832, !tbaa !18042, !ctir !7
  %and2 = and i32 %3, 512, !dbg !20832
  %tobool3 = icmp ne i32 %and2, 0, !dbg !20832
  br i1 %tobool3, label %cond.true, label %cond.false8, !dbg !20832

cond.true:                                        ; preds = %land.rhs
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20832, !tbaa !2995
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20832, !tbaa !2995
  %fts_options4 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !20832, !ctir !2335
  %6 = load i32, i32* %fts_options4, align 8, !dbg !20832, !tbaa !18042, !ctir !7
  %and5 = and i32 %6, 512, !dbg !20832
  %tobool6 = icmp ne i32 %and5, 0, !dbg !20832
  br i1 %tobool6, label %cond.true7, label %cond.false, !dbg !20832

cond.true7:                                       ; preds = %cond.true
  br label %cond.end, !dbg !20832

cond.false:                                       ; preds = %cond.true
  %7 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20832, !tbaa !2995
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 5, !dbg !20832, !ctir !2335
  %8 = load i32, i32* %fts_rfd, align 8, !dbg !20832, !tbaa !18662, !ctir !7
  br label %cond.end, !dbg !20832

cond.end:                                         ; preds = %cond.false, %cond.true7
  %cond = phi i32 [ -100, %cond.true7 ], [ %8, %cond.false ], !dbg !20832
  call void @cwd_advance_fd(%struct.FTS* %4, i32 %cond, i1 zeroext true), !dbg !20832
  br label %cond.end17, !dbg !20832

cond.false8:                                      ; preds = %land.rhs
  %9 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20832, !tbaa !2995
  %fts_options9 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 10, !dbg !20832, !ctir !2335
  %10 = load i32, i32* %fts_options9, align 8, !dbg !20832, !tbaa !18042, !ctir !7
  %and10 = and i32 %10, 512, !dbg !20832
  %tobool11 = icmp ne i32 %and10, 0, !dbg !20832
  br i1 %tobool11, label %cond.true12, label %cond.false13, !dbg !20832

cond.true12:                                      ; preds = %cond.false8
  br label %cond.end15, !dbg !20832

cond.false13:                                     ; preds = %cond.false8
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20832, !tbaa !2995
  %fts_rfd14 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 5, !dbg !20832, !ctir !2335
  %12 = load i32, i32* %fts_rfd14, align 8, !dbg !20832, !tbaa !18662, !ctir !7
  br label %cond.end15, !dbg !20832

cond.end15:                                       ; preds = %cond.false13, %cond.true12
  %cond16 = phi i32 [ -100, %cond.true12 ], [ %12, %cond.false13 ], !dbg !20832
  %call = call i32 @fchdir(i32 %cond16) #10, !dbg !20832
  br label %cond.end17, !dbg !20832

cond.end17:                                       ; preds = %cond.end15, %cond.end
  %cond18 = phi i32 [ 0, %cond.end ], [ %call, %cond.end15 ], !dbg !20832
  %tobool19 = icmp ne i32 %cond18, 0, !dbg !20832
  br label %land.end

land.end:                                         ; preds = %cond.end17, %entry
  %13 = phi i1 [ false, %entry ], [ %tobool19, %cond.end17 ], !dbg !20833
  %land.ext = zext i1 %13 to i32, !dbg !20832
  store i32 %land.ext, i32* %fail, align 4, !dbg !20831, !tbaa !2982
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20834, !tbaa !2995
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 13, !dbg !20835, !ctir !2335
  call void @fd_ring_clear(%struct.I_ring* %fts_fd_ring), !dbg !20836
  %15 = load i32, i32* %fail, align 4, !dbg !20837, !tbaa !2982
  ret i32 %15, !dbg !20838
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_load(%struct.FTS* %sp, %struct._ftsent* %p) #4 !dbg !20839 !ctir !2447 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %len = alloca i64, align 8, !ctir !55
  %cp = alloca i8*, align 8, !ctir !9
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20840, metadata !DIExpression()), !dbg !20841
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20842, metadata !DIExpression()), !dbg !20843
  call void @llvm.dbg.declare(metadata i64* %len, metadata !20844, metadata !DIExpression()), !dbg !20845
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !20846, metadata !DIExpression()), !dbg !20847
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20848, !tbaa !2995
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 13, !dbg !20849, !ctir !2318
  %1 = load i64, i64* %fts_namelen, align 8, !dbg !20849, !tbaa !3848, !ctir !55
  %2 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20850, !tbaa !2995
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 10, !dbg !20851, !ctir !2318
  store i64 %1, i64* %fts_pathlen, align 8, !dbg !20852, !tbaa !3848, !ctir !55
  store i64 %1, i64* %len, align 8, !dbg !20853, !tbaa !3848
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20854, !tbaa !2995
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 4, !dbg !20855, !ctir !2335
  %4 = load i8*, i8** %fts_path, align 8, !dbg !20855, !tbaa !18681, !ctir !9
  %5 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20856, !tbaa !2995
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 19, !dbg !20857, !ctir !2318
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !20858
  %6 = load i64, i64* %len, align 8, !dbg !20859, !tbaa !3848
  %add = add i64 %6, 1, !dbg !20860
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %4, i8* align 8 %arraydecay, i64 %add, i1 false), !dbg !20858
  %7 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20861, !tbaa !2995
  %fts_name1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 19, !dbg !20863, !ctir !2318
  %arraydecay2 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name1, i64 0, i64 0, !dbg !20861
  %call = call i8* @strrchr(i8* %arraydecay2, i32 47) #14, !dbg !20864
  store i8* %call, i8** %cp, align 8, !dbg !20865, !tbaa !2995
  %tobool = icmp ne i8* %call, null, !dbg !20865
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !20866

land.lhs.true:                                    ; preds = %entry
  %8 = load i8*, i8** %cp, align 8, !dbg !20867, !tbaa !2995
  %9 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20868, !tbaa !2995
  %fts_name3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 19, !dbg !20869, !ctir !2318
  %arraydecay4 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name3, i64 0, i64 0, !dbg !20868
  %cmp = icmp ne i8* %8, %arraydecay4, !dbg !20870
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !20871

lor.lhs.false:                                    ; preds = %land.lhs.true
  %10 = load i8*, i8** %cp, align 8, !dbg !20872, !tbaa !2995
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 1, !dbg !20872, !ctir !9
  %11 = load i8, i8* %arrayidx, align 1, !dbg !20872, !tbaa !3657
  %conv = sext i8 %11 to i32, !dbg !20872
  %tobool5 = icmp ne i32 %conv, 0, !dbg !20872
  br i1 %tobool5, label %if.then, label %if.end, !dbg !20873

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %12 = load i8*, i8** %cp, align 8, !dbg !20874, !tbaa !2995
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !20874
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !20874, !tbaa !2995
  %call6 = call i64 @strlen(i8* %incdec.ptr) #14, !dbg !20876
  store i64 %call6, i64* %len, align 8, !dbg !20877, !tbaa !3848
  %13 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20878, !tbaa !2995
  %fts_name7 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 19, !dbg !20879, !ctir !2318
  %arraydecay8 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name7, i64 0, i64 0, !dbg !20880
  %14 = load i8*, i8** %cp, align 8, !dbg !20881, !tbaa !2995
  %15 = load i64, i64* %len, align 8, !dbg !20882, !tbaa !3848
  %add9 = add i64 %15, 1, !dbg !20883
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %arraydecay8, i8* align 1 %14, i64 %add9, i1 false), !dbg !20880
  %16 = load i64, i64* %len, align 8, !dbg !20884, !tbaa !3848
  %17 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20885, !tbaa !2995
  %fts_namelen10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 13, !dbg !20886, !ctir !2318
  store i64 %16, i64* %fts_namelen10, align 8, !dbg !20887, !tbaa !3848, !ctir !55
  br label %if.end, !dbg !20888

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20889, !tbaa !2995
  %fts_path11 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 4, !dbg !20890, !ctir !2335
  %19 = load i8*, i8** %fts_path11, align 8, !dbg !20890, !tbaa !18681, !ctir !9
  %20 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20891, !tbaa !2995
  %fts_path12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 7, !dbg !20892, !ctir !2318
  store i8* %19, i8** %fts_path12, align 8, !dbg !20893, !tbaa !2995, !ctir !9
  %21 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20894, !tbaa !2995
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !20895, !ctir !2318
  store i8* %19, i8** %fts_accpath, align 8, !dbg !20896, !tbaa !2995, !ctir !9
  ret void, !dbg !20897
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @leaf_optimization(%struct._ftsent* %p, i32 %dir_fd) #4 !dbg !20898 !ctir !2451 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct._ftsent*, align 8
  %dir_fd.addr = alloca i32, align 4
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20899, metadata !DIExpression()), !dbg !20900
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !20901, metadata !DIExpression()), !dbg !20902
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20903, !tbaa !2995
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !20904, !tbaa !2982
  %call = call i64 @filesystem_type(%struct._ftsent* %0, i32 %1), !dbg !20905
  switch i64 %call, label %sw.default [
    i64 1382369651, label %sw.bb
    i64 1481003842, label %sw.bb
    i64 0, label %sw.bb1
    i64 1397113167, label %sw.bb2
    i64 4283649346, label %sw.bb3
    i64 26985, label %sw.bb4
    i64 40864, label %sw.bb5
  ], !dbg !20906

sw.bb:                                            ; preds = %entry, %entry
  store i32 2, i32* %retval, align 4, !dbg !20907
  br label %return, !dbg !20907

sw.bb1:                                           ; preds = %entry
  br label %sw.bb2, !dbg !20909

sw.bb2:                                           ; preds = %entry, %sw.bb1
  br label %sw.bb3, !dbg !20910

sw.bb3:                                           ; preds = %entry, %sw.bb2
  br label %sw.bb4, !dbg !20911

sw.bb4:                                           ; preds = %entry, %sw.bb3
  br label %sw.bb5, !dbg !20912

sw.bb5:                                           ; preds = %entry, %sw.bb4
  store i32 0, i32* %retval, align 4, !dbg !20913
  br label %return, !dbg !20913

sw.default:                                       ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !20914
  br label %return, !dbg !20914

return:                                           ; preds = %sw.default, %sw.bb5, %sw.bb
  %2 = load i32, i32* %retval, align 4, !dbg !20915
  ret i32 %2, !dbg !20915
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @enter_dir(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !20916 !ctir !2466 {
entry:
  %retval = alloca i1, align 1
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %st = alloca %struct.stat*, align 8, !ctir !2449
  %ad = alloca %struct.Active_dir*, align 8, !ctir !2468
  %ad_from_table = alloca %struct.Active_dir*, align 8, !ctir !2468
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !20917, metadata !DIExpression()), !dbg !20918
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !20919, metadata !DIExpression()), !dbg !20920
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20921, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !20923, !ctir !2335
  %1 = load i32, i32* %fts_options, align 8, !dbg !20923, !tbaa !18042, !ctir !7
  %and = and i32 %1, 258, !dbg !20924
  %tobool = icmp ne i32 %and, 0, !dbg !20924
  br i1 %tobool, label %if.then, label %if.else, !dbg !20925

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.stat** %st, metadata !20926, metadata !DIExpression()), !dbg !20928
  %2 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20929, !tbaa !2995
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 18, !dbg !20930, !ctir !2318
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20929
  store %struct.stat* %arraydecay, %struct.stat** %st, align 8, !dbg !20928, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ad, metadata !20931, metadata !DIExpression()), !dbg !20932
  %call = call noalias i8* @malloc(i64 24) #10, !dbg !20933
  %3 = bitcast i8* %call to %struct.Active_dir*, !dbg !20933
  store %struct.Active_dir* %3, %struct.Active_dir** %ad, align 8, !dbg !20932, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ad_from_table, metadata !20934, metadata !DIExpression()), !dbg !20935
  %4 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20936, !tbaa !2995
  %tobool1 = icmp ne %struct.Active_dir* %4, null, !dbg !20936
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !20938

if.then2:                                         ; preds = %if.then
  store i1 false, i1* %retval, align 1, !dbg !20939
  br label %return, !dbg !20939

if.end:                                           ; preds = %if.then
  %5 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20940, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 0, !dbg !20941, !ctir !2450
  %6 = load i64, i64* %st_dev, align 8, !dbg !20941, !tbaa !3873, !ctir !231
  %7 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20942, !tbaa !2995
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %7, i32 0, i32 0, !dbg !20943, !ctir !2432
  store i64 %6, i64* %dev, align 8, !dbg !20944, !tbaa !19207, !ctir !230
  %8 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20945, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 1, !dbg !20946, !ctir !2450
  %9 = load i64, i64* %st_ino, align 8, !dbg !20946, !tbaa !3870, !ctir !228
  %10 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20947, !tbaa !2995
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %10, i32 0, i32 1, !dbg !20948, !ctir !2432
  store i64 %9, i64* %ino, align 8, !dbg !20949, !tbaa !19183, !ctir !227
  %11 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20950, !tbaa !2995
  %12 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20951, !tbaa !2995
  %fts_ent = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %12, i32 0, i32 2, !dbg !20952, !ctir !2432
  store %struct._ftsent* %11, %struct._ftsent** %fts_ent, align 8, !dbg !20953, !tbaa !20954, !ctir !2417
  %13 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20955, !tbaa !2995
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 12, !dbg !20956, !ctir !2335
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !20957
  %14 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !20957, !tbaa !3657, !ctir !2358
  %15 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20958, !tbaa !2995
  %16 = bitcast %struct.Active_dir* %15 to i8*, !dbg !20958
  %call3 = call i8* @hash_insert(%struct.hash_table* %14, i8* %16), !dbg !20959
  %17 = bitcast i8* %call3 to %struct.Active_dir*, !dbg !20959
  store %struct.Active_dir* %17, %struct.Active_dir** %ad_from_table, align 8, !dbg !20960, !tbaa !2995
  %18 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !20961, !tbaa !2995
  %19 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20963, !tbaa !2995
  %cmp = icmp ne %struct.Active_dir* %18, %19, !dbg !20964
  br i1 %cmp, label %if.then4, label %if.end10, !dbg !20965

if.then4:                                         ; preds = %if.end
  %20 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20966, !tbaa !2995
  %21 = bitcast %struct.Active_dir* %20 to i8*, !dbg !20966
  call void @free(i8* %21) #10, !dbg !20968
  %22 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !20969, !tbaa !2995
  %tobool5 = icmp ne %struct.Active_dir* %22, null, !dbg !20969
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !20971

if.then6:                                         ; preds = %if.then4
  store i1 false, i1* %retval, align 1, !dbg !20972
  br label %return, !dbg !20972

if.end7:                                          ; preds = %if.then4
  %23 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !20973, !tbaa !2995
  %fts_ent8 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %23, i32 0, i32 2, !dbg !20974, !ctir !2432
  %24 = load %struct._ftsent*, %struct._ftsent** %fts_ent8, align 8, !dbg !20974, !tbaa !20954, !ctir !2417
  %25 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20975, !tbaa !2995
  %fts_cycle9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %25, i32 0, i32 0, !dbg !20976, !ctir !2318
  store %struct._ftsent* %24, %struct._ftsent** %fts_cycle9, align 8, !dbg !20977, !tbaa !2995, !ctir !2322
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20978, !tbaa !2995
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 15, !dbg !20979, !ctir !2318
  store i16 2, i16* %fts_info, align 8, !dbg !20980, !tbaa !3810, !ctir !33
  br label %if.end10, !dbg !20981

if.end10:                                         ; preds = %if.end7, %if.end
  br label %if.end19, !dbg !20982

if.else:                                          ; preds = %entry
  %27 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20983, !tbaa !2995
  %fts_cycle11 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 12, !dbg !20986, !ctir !2335
  %state = bitcast %union.anon* %fts_cycle11 to %struct.cycle_check_state**, !dbg !20987
  %28 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !20987, !tbaa !3657, !ctir !2358
  %29 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20988, !tbaa !2995
  %fts_statp12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !20989, !ctir !2318
  %arraydecay13 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp12, i64 0, i64 0, !dbg !20988
  %call14 = call zeroext i1 @cycle_check(%struct.cycle_check_state* %28, %struct.stat* %arraydecay13), !dbg !20990
  br i1 %call14, label %if.then15, label %if.end18, !dbg !20991

if.then15:                                        ; preds = %if.else
  %30 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20992, !tbaa !2995
  %31 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20994, !tbaa !2995
  %fts_cycle16 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 0, !dbg !20995, !ctir !2318
  store %struct._ftsent* %30, %struct._ftsent** %fts_cycle16, align 8, !dbg !20996, !tbaa !2995, !ctir !2322
  %32 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20997, !tbaa !2995
  %fts_info17 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %32, i32 0, i32 15, !dbg !20998, !ctir !2318
  store i16 2, i16* %fts_info17, align 8, !dbg !20999, !tbaa !3810, !ctir !33
  br label %if.end18, !dbg !21000

if.end18:                                         ; preds = %if.then15, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end10
  store i1 true, i1* %retval, align 1, !dbg !21001
  br label %return, !dbg !21001

return:                                           ; preds = %if.end19, %if.then6, %if.then2
  %33 = load i1, i1* %retval, align 1, !dbg !21002
  ret i1 %33, !dbg !21002
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cwd_advance_fd(%struct.FTS* %sp, i32 %fd, i1 zeroext %chdir_down_one) #4 !dbg !21003 !ctir !2469 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %fd.addr = alloca i32, align 4
  %chdir_down_one.addr = alloca i8, align 1
  %old = alloca i32, align 4, !ctir !7
  %prev_fd_in_slot = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !21004, metadata !DIExpression()), !dbg !21005
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21006, metadata !DIExpression()), !dbg !21007
  %frombool = zext i1 %chdir_down_one to i8
  store i8 %frombool, i8* %chdir_down_one.addr, align 1, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %chdir_down_one.addr, metadata !21008, metadata !DIExpression()), !dbg !21009
  call void @llvm.dbg.declare(metadata i32* %old, metadata !21010, metadata !DIExpression()), !dbg !21011
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21012, !tbaa !2995
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 6, !dbg !21013, !ctir !2335
  %1 = load i32, i32* %fts_cwd_fd, align 4, !dbg !21013, !tbaa !3823, !ctir !7
  store i32 %1, i32* %old, align 4, !dbg !21011, !tbaa !2982
  br label %do.body, !dbg !21014

do.body:                                          ; preds = %entry
  %2 = load i32, i32* %old, align 4, !dbg !21015, !tbaa !2982
  %3 = load i32, i32* %fd.addr, align 4, !dbg !21015, !tbaa !2982
  %cmp = icmp ne i32 %2, %3, !dbg !21015
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !21015

lor.lhs.false:                                    ; preds = %do.body
  %4 = load i32, i32* %old, align 4, !dbg !21015, !tbaa !2982
  %cmp1 = icmp eq i32 %4, -100, !dbg !21015
  br i1 %cmp1, label %if.end, label %if.then, !dbg !21018

if.then:                                          ; preds = %lor.lhs.false
  call void @abort() #13, !dbg !21015
  unreachable, !dbg !21015

if.end:                                           ; preds = %lor.lhs.false, %do.body
  br label %do.end, !dbg !21018

do.end:                                           ; preds = %if.end
  %5 = load i8, i8* %chdir_down_one.addr, align 1, !dbg !21019, !tbaa !3106
  %tobool = trunc i8 %5 to i1, !dbg !21019
  br i1 %tobool, label %if.then2, label %if.else, !dbg !21021

if.then2:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %prev_fd_in_slot, metadata !21022, metadata !DIExpression()), !dbg !21024
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21025, !tbaa !2995
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 13, !dbg !21026, !ctir !2335
  %7 = load i32, i32* %old, align 4, !dbg !21027, !tbaa !2982
  %call = call i32 @i_ring_push(%struct.I_ring* %fts_fd_ring, i32 %7), !dbg !21028
  store i32 %call, i32* %prev_fd_in_slot, align 4, !dbg !21024, !tbaa !2982
  %8 = load i32, i32* %prev_fd_in_slot, align 4, !dbg !21029, !tbaa !2982
  %cmp3 = icmp sle i32 0, %8, !dbg !21031
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !21032

if.then4:                                         ; preds = %if.then2
  %9 = load i32, i32* %prev_fd_in_slot, align 4, !dbg !21033, !tbaa !2982
  %call5 = call i32 @close(i32 %9), !dbg !21034
  br label %if.end6, !dbg !21034

if.end6:                                          ; preds = %if.then4, %if.then2
  br label %if.end14, !dbg !21035

if.else:                                          ; preds = %do.end
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21036, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 10, !dbg !21036, !ctir !2335
  %11 = load i32, i32* %fts_options, align 8, !dbg !21036, !tbaa !18042, !ctir !7
  %and = and i32 %11, 4, !dbg !21036
  %tobool7 = icmp ne i32 %and, 0, !dbg !21036
  br i1 %tobool7, label %if.end13, label %if.then8, !dbg !21038

if.then8:                                         ; preds = %if.else
  %12 = load i32, i32* %old, align 4, !dbg !21039, !tbaa !2982
  %cmp9 = icmp sle i32 0, %12, !dbg !21042
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !21043

if.then10:                                        ; preds = %if.then8
  %13 = load i32, i32* %old, align 4, !dbg !21044, !tbaa !2982
  %call11 = call i32 @close(i32 %13), !dbg !21045
  br label %if.end12, !dbg !21045

if.end12:                                         ; preds = %if.then10, %if.then8
  br label %if.end13, !dbg !21046

if.end13:                                         ; preds = %if.end12, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end6
  %14 = load i32, i32* %fd.addr, align 4, !dbg !21047, !tbaa !2982
  %15 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21048, !tbaa !2995
  %fts_cwd_fd15 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 6, !dbg !21049, !ctir !2335
  store i32 %14, i32* %fts_cwd_fd15, align 4, !dbg !21050, !tbaa !3823, !ctir !7
  ret void, !dbg !21051
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @filesystem_type(%struct._ftsent* %p, i32 %fd) #4 !dbg !21052 !ctir !2453 {
entry:
  %retval = alloca i64, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %fd.addr = alloca i32, align 4
  %sp = alloca %struct.FTS*, align 8, !ctir !2334
  %h = alloca %struct.hash_table*, align 8, !ctir !2457
  %ent = alloca %struct.timespec*, align 8, !ctir !2459
  %fs_buf = alloca %struct.statfs, align 8, !ctir !21053
  %tmp = alloca %struct.timespec, align 8, !ctir !2460
  %t2 = alloca %struct.timespec*, align 8, !ctir !2459
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !21076, metadata !DIExpression()), !dbg !21077
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21078, metadata !DIExpression()), !dbg !21079
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp, metadata !21080, metadata !DIExpression()), !dbg !21081
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !21082, !tbaa !2995
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 11, !dbg !21083, !ctir !2317
  %1 = load %struct.FTS*, %struct.FTS** %fts_fts, align 8, !dbg !21083, !tbaa !2995, !ctir !2334
  store %struct.FTS* %1, %struct.FTS** %sp, align 8, !dbg !21081, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.hash_table** %h, metadata !21084, metadata !DIExpression()), !dbg !21085
  %2 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !21086, !tbaa !2995
  %fts_leaf_optimization_works_ht = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 11, !dbg !21087, !ctir !2335
  %3 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht, align 8, !dbg !21087, !tbaa !19340, !ctir !1431
  store %struct.hash_table* %3, %struct.hash_table** %h, align 8, !dbg !21085, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.timespec** %ent, metadata !21088, metadata !DIExpression()), !dbg !21089
  call void @llvm.dbg.declare(metadata %struct.statfs* %fs_buf, metadata !21090, metadata !DIExpression()), !dbg !21091
  %4 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !21092, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !21092, !ctir !2335
  %5 = load i32, i32* %fts_options, align 8, !dbg !21092, !tbaa !18042, !ctir !7
  %and = and i32 %5, 512, !dbg !21092
  %tobool = icmp ne i32 %and, 0, !dbg !21092
  br i1 %tobool, label %if.end, label %if.then, !dbg !21094

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !21095
  br label %return, !dbg !21095

if.end:                                           ; preds = %entry
  %6 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !21096, !tbaa !2995
  %tobool1 = icmp ne %struct.hash_table* %6, null, !dbg !21096
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !21098

if.then2:                                         ; preds = %if.end
  %call = call %struct.hash_table* @hash_initialize(i64 13, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_type_hash, i1 (i8*, i8*)* @dev_type_compare, void (i8*)* @free), !dbg !21099
  %7 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !21100, !tbaa !2995
  %fts_leaf_optimization_works_ht3 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 11, !dbg !21101, !ctir !2335
  store %struct.hash_table* %call, %struct.hash_table** %fts_leaf_optimization_works_ht3, align 8, !dbg !21102, !tbaa !19340, !ctir !1431
  store %struct.hash_table* %call, %struct.hash_table** %h, align 8, !dbg !21103, !tbaa !2995
  br label %if.end4, !dbg !21104

if.end4:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !21105, !tbaa !2995
  %tobool5 = icmp ne %struct.hash_table* %8, null, !dbg !21105
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !21107

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.timespec* %tmp, metadata !21108, metadata !DIExpression()), !dbg !21110
  %9 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !21111, !tbaa !2995
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 18, !dbg !21112, !ctir !2317
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !21113
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !21113, !ctir !2450
  %10 = load i64, i64* %st_dev, align 8, !dbg !21113, !tbaa !3873, !ctir !231
  %st_dev7 = getelementptr inbounds %struct.timespec, %struct.timespec* %tmp, i32 0, i32 0, !dbg !21114, !ctir !2460
  store i64 %10, i64* %st_dev7, align 8, !dbg !21115, !tbaa !21116, !ctir !230
  %11 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !21118, !tbaa !2995
  %12 = bitcast %struct.timespec* %tmp to i8*, !dbg !21119
  %call8 = call i8* @hash_lookup(%struct.hash_table* %11, i8* %12), !dbg !21120
  %13 = bitcast i8* %call8 to %struct.timespec*, !dbg !21120
  store %struct.timespec* %13, %struct.timespec** %ent, align 8, !dbg !21121, !tbaa !2995
  %14 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !21122, !tbaa !2995
  %tobool9 = icmp ne %struct.timespec* %14, null, !dbg !21122
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !21124

if.then10:                                        ; preds = %if.then6
  %15 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !21125, !tbaa !2995
  %f_type = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i32 0, i32 1, !dbg !21126, !ctir !2460
  %16 = load i64, i64* %f_type, align 8, !dbg !21126, !tbaa !21127, !ctir !2455
  store i64 %16, i64* %retval, align 8, !dbg !21128
  br label %return, !dbg !21128

if.end11:                                         ; preds = %if.then6
  br label %if.end12, !dbg !21129

if.end12:                                         ; preds = %if.end11, %if.end4
  %17 = load i32, i32* %fd.addr, align 4, !dbg !21130, !tbaa !2982
  %cmp = icmp slt i32 %17, 0, !dbg !21132
  br i1 %cmp, label %if.then15, label %lor.lhs.false, !dbg !21133

lor.lhs.false:                                    ; preds = %if.end12
  %18 = load i32, i32* %fd.addr, align 4, !dbg !21134, !tbaa !2982
  %call13 = call i32 @fstatfs(i32 %18, %struct.statfs* %fs_buf) #10, !dbg !21135
  %cmp14 = icmp ne i32 %call13, 0, !dbg !21136
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !21137

if.then15:                                        ; preds = %lor.lhs.false, %if.end12
  store i64 0, i64* %retval, align 8, !dbg !21138
  br label %return, !dbg !21138

if.end16:                                         ; preds = %lor.lhs.false
  %19 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !21139, !tbaa !2995
  %tobool17 = icmp ne %struct.hash_table* %19, null, !dbg !21139
  br i1 %tobool17, label %if.then18, label %if.end36, !dbg !21141

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata %struct.timespec** %t2, metadata !21142, metadata !DIExpression()), !dbg !21144
  %call19 = call noalias i8* @malloc(i64 16) #10, !dbg !21145
  %20 = bitcast i8* %call19 to %struct.timespec*, !dbg !21145
  store %struct.timespec* %20, %struct.timespec** %t2, align 8, !dbg !21144, !tbaa !2995
  %21 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !21146, !tbaa !2995
  %tobool20 = icmp ne %struct.timespec* %21, null, !dbg !21146
  br i1 %tobool20, label %if.then21, label %if.end35, !dbg !21148

if.then21:                                        ; preds = %if.then18
  %22 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !21149, !tbaa !2995
  %fts_statp22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 18, !dbg !21151, !ctir !2317
  %arraydecay23 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp22, i64 0, i64 0, !dbg !21152
  %st_dev24 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay23, i32 0, i32 0, !dbg !21152, !ctir !2450
  %23 = load i64, i64* %st_dev24, align 8, !dbg !21152, !tbaa !3873, !ctir !231
  %24 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !21153, !tbaa !2995
  %st_dev25 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i32 0, i32 0, !dbg !21154, !ctir !2460
  store i64 %23, i64* %st_dev25, align 8, !dbg !21155, !tbaa !21116, !ctir !230
  %f_type26 = getelementptr inbounds %struct.statfs, %struct.statfs* %fs_buf, i32 0, i32 0, !dbg !21156, !ctir !21053
  %25 = load i64, i64* %f_type26, align 8, !dbg !21156, !tbaa !21157, !ctir !2456
  %26 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !21160, !tbaa !2995
  %f_type27 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i32 0, i32 1, !dbg !21161, !ctir !2460
  store i64 %25, i64* %f_type27, align 8, !dbg !21162, !tbaa !21127, !ctir !2455
  %27 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !21163, !tbaa !2995
  %28 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !21164, !tbaa !2995
  %29 = bitcast %struct.timespec* %28 to i8*, !dbg !21164
  %call28 = call i8* @hash_insert(%struct.hash_table* %27, i8* %29), !dbg !21165
  %30 = bitcast i8* %call28 to %struct.timespec*, !dbg !21165
  store %struct.timespec* %30, %struct.timespec** %ent, align 8, !dbg !21166, !tbaa !2995
  %31 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !21167, !tbaa !2995
  %tobool29 = icmp ne %struct.timespec* %31, null, !dbg !21167
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !21169

if.then30:                                        ; preds = %if.then21
  br label %do.body, !dbg !21170

do.body:                                          ; preds = %if.then30
  %32 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !21171, !tbaa !2995
  %33 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !21171, !tbaa !2995
  %cmp31 = icmp eq %struct.timespec* %32, %33, !dbg !21171
  br i1 %cmp31, label %if.end33, label %if.then32, !dbg !21174

if.then32:                                        ; preds = %do.body
  call void @abort() #13, !dbg !21171
  unreachable, !dbg !21171

if.end33:                                         ; preds = %do.body
  br label %do.end, !dbg !21174

do.end:                                           ; preds = %if.end33
  br label %if.end34, !dbg !21174

if.else:                                          ; preds = %if.then21
  %34 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !21175, !tbaa !2995
  %35 = bitcast %struct.timespec* %34 to i8*, !dbg !21175
  call void @free(i8* %35) #10, !dbg !21176
  br label %if.end34

if.end34:                                         ; preds = %if.else, %do.end
  br label %if.end35, !dbg !21177

if.end35:                                         ; preds = %if.end34, %if.then18
  br label %if.end36, !dbg !21178

if.end36:                                         ; preds = %if.end35, %if.end16
  %f_type37 = getelementptr inbounds %struct.statfs, %struct.statfs* %fs_buf, i32 0, i32 0, !dbg !21179, !ctir !21053
  %36 = load i64, i64* %f_type37, align 8, !dbg !21179, !tbaa !21157, !ctir !2456
  store i64 %36, i64* %retval, align 8, !dbg !21180
  br label %return, !dbg !21180

return:                                           ; preds = %if.end36, %if.then15, %if.then10, %if.then
  %37 = load i64, i64* %retval, align 8, !dbg !21181
  ret i64 %37, !dbg !21181
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_type_hash(i8* %x, i64 %table_size) #4 !dbg !21182 !ctir !547 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %ax = alloca %struct.timespec*, align 8, !ctir !2464
  %dev = alloca i64, align 8, !ctir !456
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !21183, metadata !DIExpression()), !dbg !21184
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !21185, metadata !DIExpression()), !dbg !21186
  call void @llvm.dbg.declare(metadata %struct.timespec** %ax, metadata !21187, metadata !DIExpression()), !dbg !21188
  %0 = load i8*, i8** %x.addr, align 8, !dbg !21189, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.timespec*, !dbg !21189
  store %struct.timespec* %1, %struct.timespec** %ax, align 8, !dbg !21188, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %dev, metadata !21190, metadata !DIExpression()), !dbg !21191
  %2 = load %struct.timespec*, %struct.timespec** %ax, align 8, !dbg !21192, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 0, !dbg !21193, !ctir !2465
  %3 = load i64, i64* %st_dev, align 8, !dbg !21193, !tbaa !21116, !ctir !230
  store i64 %3, i64* %dev, align 8, !dbg !21191, !tbaa !3848
  %4 = load i64, i64* %dev, align 8, !dbg !21194, !tbaa !3848
  %5 = load i64, i64* %table_size.addr, align 8, !dbg !21195, !tbaa !3848
  %rem = urem i64 %4, %5, !dbg !21196
  ret i64 %rem, !dbg !21197
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_type_compare(i8* %x, i8* %y) #4 !dbg !21198 !ctir !549 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %ax = alloca %struct.timespec*, align 8, !ctir !2464
  %ay = alloca %struct.timespec*, align 8, !ctir !2464
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !21199, metadata !DIExpression()), !dbg !21200
  store i8* %y, i8** %y.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !21201, metadata !DIExpression()), !dbg !21202
  call void @llvm.dbg.declare(metadata %struct.timespec** %ax, metadata !21203, metadata !DIExpression()), !dbg !21204
  %0 = load i8*, i8** %x.addr, align 8, !dbg !21205, !tbaa !2995
  %1 = bitcast i8* %0 to %struct.timespec*, !dbg !21205
  store %struct.timespec* %1, %struct.timespec** %ax, align 8, !dbg !21204, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.timespec** %ay, metadata !21206, metadata !DIExpression()), !dbg !21207
  %2 = load i8*, i8** %y.addr, align 8, !dbg !21208, !tbaa !2995
  %3 = bitcast i8* %2 to %struct.timespec*, !dbg !21208
  store %struct.timespec* %3, %struct.timespec** %ay, align 8, !dbg !21207, !tbaa !2995
  %4 = load %struct.timespec*, %struct.timespec** %ax, align 8, !dbg !21209, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i32 0, i32 0, !dbg !21210, !ctir !2465
  %5 = load i64, i64* %st_dev, align 8, !dbg !21210, !tbaa !21116, !ctir !230
  %6 = load %struct.timespec*, %struct.timespec** %ay, align 8, !dbg !21211, !tbaa !2995
  %st_dev1 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i32 0, i32 0, !dbg !21212, !ctir !2465
  %7 = load i64, i64* %st_dev1, align 8, !dbg !21212, !tbaa !21116, !ctir !230
  %cmp = icmp eq i64 %5, %7, !dbg !21213
  ret i1 %cmp, !dbg !21214
}

; Function Attrs: nounwind
declare dso_local i32 @fstatfs(i32, %struct.statfs*) #2

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_stat_type(%struct.stat* %st, i32 %dtype) #4 !dbg !21215 !ctir !2479 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  %dtype.addr = alloca i32, align 4
  %type = alloca i32, align 4, !ctir !160
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !21216, metadata !DIExpression()), !dbg !21217
  store i32 %dtype, i32* %dtype.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dtype.addr, metadata !21218, metadata !DIExpression()), !dbg !21219
  call void @llvm.dbg.declare(metadata i32* %type, metadata !21220, metadata !DIExpression()), !dbg !21221
  %0 = load i32, i32* %dtype.addr, align 4, !dbg !21222, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 6, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 1, label %sw.bb3
    i32 10, label %sw.bb4
    i32 8, label %sw.bb5
    i32 12, label %sw.bb6
  ], !dbg !21223

sw.bb:                                            ; preds = %entry
  store i32 24576, i32* %type, align 4, !dbg !21224, !tbaa !2982
  br label %sw.epilog, !dbg !21226

sw.bb1:                                           ; preds = %entry
  store i32 8192, i32* %type, align 4, !dbg !21227, !tbaa !2982
  br label %sw.epilog, !dbg !21228

sw.bb2:                                           ; preds = %entry
  store i32 16384, i32* %type, align 4, !dbg !21229, !tbaa !2982
  br label %sw.epilog, !dbg !21230

sw.bb3:                                           ; preds = %entry
  store i32 4096, i32* %type, align 4, !dbg !21231, !tbaa !2982
  br label %sw.epilog, !dbg !21232

sw.bb4:                                           ; preds = %entry
  store i32 40960, i32* %type, align 4, !dbg !21233, !tbaa !2982
  br label %sw.epilog, !dbg !21234

sw.bb5:                                           ; preds = %entry
  store i32 32768, i32* %type, align 4, !dbg !21235, !tbaa !2982
  br label %sw.epilog, !dbg !21236

sw.bb6:                                           ; preds = %entry
  store i32 49152, i32* %type, align 4, !dbg !21237, !tbaa !2982
  br label %sw.epilog, !dbg !21238

sw.default:                                       ; preds = %entry
  store i32 0, i32* %type, align 4, !dbg !21239, !tbaa !2982
  br label %sw.epilog, !dbg !21240

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %type, align 4, !dbg !21241, !tbaa !2982
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !21242, !tbaa !2995
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 3, !dbg !21243, !ctir !2390
  store i32 %1, i32* %st_mode, align 8, !dbg !21244, !tbaa !3178, !ctir !133
  ret void, !dbg !21245
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dirent_inode_sort_may_be_useful(%struct._ftsent* %p, i32 %dir_fd) #4 !dbg !21246 !ctir !2482 {
entry:
  %retval = alloca i1, align 1
  %p.addr = alloca %struct._ftsent*, align 8
  %dir_fd.addr = alloca i32, align 4
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !21247, metadata !DIExpression()), !dbg !21248
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !21249, metadata !DIExpression()), !dbg !21250
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !21251, !tbaa !2995
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !21252, !tbaa !2982
  %call = call i64 @filesystem_type(%struct._ftsent* %0, i32 %1), !dbg !21253
  switch i64 %call, label %sw.default [
    i64 4283649346, label %sw.bb
    i64 26985, label %sw.bb
    i64 16914836, label %sw.bb
  ], !dbg !21254

sw.bb:                                            ; preds = %entry, %entry, %entry
  store i1 false, i1* %retval, align 1, !dbg !21255
  br label %return, !dbg !21255

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !21257
  br label %return, !dbg !21257

return:                                           ; preds = %sw.default, %sw.bb
  %2 = load i1, i1* %retval, align 1, !dbg !21258
  ret i1 %2, !dbg !21258
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_padjust(%struct.FTS* %sp, %struct._ftsent* %head) #4 !dbg !21259 !ctir !2447 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %head.addr = alloca %struct._ftsent*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !2417
  %addr = alloca i8*, align 8, !ctir !9
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !21260, metadata !DIExpression()), !dbg !21261
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !21262, metadata !DIExpression()), !dbg !21263
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !21264, metadata !DIExpression()), !dbg !21265
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !21266, metadata !DIExpression()), !dbg !21267
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21268, !tbaa !2995
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 4, !dbg !21269, !ctir !2335
  %1 = load i8*, i8** %fts_path, align 8, !dbg !21269, !tbaa !18681, !ctir !9
  store i8* %1, i8** %addr, align 8, !dbg !21267, !tbaa !2995
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21270, !tbaa !2995
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 1, !dbg !21272, !ctir !2335
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !21272, !tbaa !19278, !ctir !2322
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !21273, !tbaa !2995
  br label %for.cond, !dbg !21274

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21275, !tbaa !2995
  %tobool = icmp ne %struct._ftsent* %4, null, !dbg !21277
  br i1 %tobool, label %for.body, label %for.end, !dbg !21277

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !21278

do.body:                                          ; preds = %for.body
  %5 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21279, !tbaa !2995
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 6, !dbg !21279, !ctir !2318
  %6 = load i8*, i8** %fts_accpath, align 8, !dbg !21279, !tbaa !2995, !ctir !9
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21279, !tbaa !2995
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 19, !dbg !21279, !ctir !2318
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !21279
  %cmp = icmp ne i8* %6, %arraydecay, !dbg !21279
  br i1 %cmp, label %if.then, label %if.end, !dbg !21282

if.then:                                          ; preds = %do.body
  %8 = load i8*, i8** %addr, align 8, !dbg !21283, !tbaa !2995
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21283, !tbaa !2995
  %fts_accpath1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 6, !dbg !21283, !ctir !2318
  %10 = load i8*, i8** %fts_accpath1, align 8, !dbg !21283, !tbaa !2995, !ctir !9
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21283, !tbaa !2995
  %fts_path2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 7, !dbg !21283, !ctir !2318
  %12 = load i8*, i8** %fts_path2, align 8, !dbg !21283, !tbaa !2995, !ctir !9
  %sub.ptr.lhs.cast = ptrtoint i8* %10 to i64, !dbg !21283
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !21283
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !21283
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %sub.ptr.sub, !dbg !21283
  %13 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21283, !tbaa !2995
  %fts_accpath3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 6, !dbg !21283, !ctir !2318
  store i8* %add.ptr, i8** %fts_accpath3, align 8, !dbg !21283, !tbaa !2995, !ctir !9
  br label %if.end, !dbg !21283

if.end:                                           ; preds = %if.then, %do.body
  %14 = load i8*, i8** %addr, align 8, !dbg !21282, !tbaa !2995
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21282, !tbaa !2995
  %fts_path4 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 7, !dbg !21282, !ctir !2318
  store i8* %14, i8** %fts_path4, align 8, !dbg !21282, !tbaa !2995, !ctir !9
  br label %do.end, !dbg !21282

do.end:                                           ; preds = %if.end
  br label %for.inc, !dbg !21282

for.inc:                                          ; preds = %do.end
  %16 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21285, !tbaa !2995
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 2, !dbg !21286, !ctir !2318
  %17 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !21286, !tbaa !2995, !ctir !2322
  store %struct._ftsent* %17, %struct._ftsent** %p, align 8, !dbg !21287, !tbaa !2995
  br label %for.cond, !dbg !21288, !llvm.loop !21289

for.end:                                          ; preds = %for.cond
  %18 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !21291, !tbaa !2995
  store %struct._ftsent* %18, %struct._ftsent** %p, align 8, !dbg !21293, !tbaa !2995
  br label %for.cond5, !dbg !21294

for.cond5:                                        ; preds = %cond.end, %for.end
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21295, !tbaa !2995
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !21297, !ctir !2318
  %20 = load i64, i64* %fts_level, align 8, !dbg !21297, !tbaa !3848, !ctir !566
  %cmp6 = icmp sge i64 %20, 0, !dbg !21298
  br i1 %cmp6, label %for.body7, label %for.end27, !dbg !21299

for.body7:                                        ; preds = %for.cond5
  br label %do.body8, !dbg !21300

do.body8:                                         ; preds = %for.body7
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21302, !tbaa !2995
  %fts_accpath9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !21302, !ctir !2318
  %22 = load i8*, i8** %fts_accpath9, align 8, !dbg !21302, !tbaa !2995, !ctir !9
  %23 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21302, !tbaa !2995
  %fts_name10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 19, !dbg !21302, !ctir !2318
  %arraydecay11 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name10, i64 0, i64 0, !dbg !21302
  %cmp12 = icmp ne i8* %22, %arraydecay11, !dbg !21302
  br i1 %cmp12, label %if.then13, label %if.end21, !dbg !21305

if.then13:                                        ; preds = %do.body8
  %24 = load i8*, i8** %addr, align 8, !dbg !21306, !tbaa !2995
  %25 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21306, !tbaa !2995
  %fts_accpath14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %25, i32 0, i32 6, !dbg !21306, !ctir !2318
  %26 = load i8*, i8** %fts_accpath14, align 8, !dbg !21306, !tbaa !2995, !ctir !9
  %27 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21306, !tbaa !2995
  %fts_path15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 7, !dbg !21306, !ctir !2318
  %28 = load i8*, i8** %fts_path15, align 8, !dbg !21306, !tbaa !2995, !ctir !9
  %sub.ptr.lhs.cast16 = ptrtoint i8* %26 to i64, !dbg !21306
  %sub.ptr.rhs.cast17 = ptrtoint i8* %28 to i64, !dbg !21306
  %sub.ptr.sub18 = sub i64 %sub.ptr.lhs.cast16, %sub.ptr.rhs.cast17, !dbg !21306
  %add.ptr19 = getelementptr inbounds i8, i8* %24, i64 %sub.ptr.sub18, !dbg !21306
  %29 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21306, !tbaa !2995
  %fts_accpath20 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 6, !dbg !21306, !ctir !2318
  store i8* %add.ptr19, i8** %fts_accpath20, align 8, !dbg !21306, !tbaa !2995, !ctir !9
  br label %if.end21, !dbg !21306

if.end21:                                         ; preds = %if.then13, %do.body8
  %30 = load i8*, i8** %addr, align 8, !dbg !21305, !tbaa !2995
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21305, !tbaa !2995
  %fts_path22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 7, !dbg !21305, !ctir !2318
  store i8* %30, i8** %fts_path22, align 8, !dbg !21305, !tbaa !2995, !ctir !9
  br label %do.end23, !dbg !21305

do.end23:                                         ; preds = %if.end21
  %32 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21308, !tbaa !2995
  %fts_link24 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %32, i32 0, i32 2, !dbg !21309, !ctir !2318
  %33 = load %struct._ftsent*, %struct._ftsent** %fts_link24, align 8, !dbg !21309, !tbaa !2995, !ctir !2322
  %tobool25 = icmp ne %struct._ftsent* %33, null, !dbg !21308
  br i1 %tobool25, label %cond.true, label %cond.false, !dbg !21308

cond.true:                                        ; preds = %do.end23
  %34 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21310, !tbaa !2995
  %fts_link26 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 2, !dbg !21311, !ctir !2318
  %35 = load %struct._ftsent*, %struct._ftsent** %fts_link26, align 8, !dbg !21311, !tbaa !2995, !ctir !2322
  br label %cond.end, !dbg !21308

cond.false:                                       ; preds = %do.end23
  %36 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21312, !tbaa !2995
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %36, i32 0, i32 1, !dbg !21313, !ctir !2318
  %37 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !21313, !tbaa !2995, !ctir !2322
  br label %cond.end, !dbg !21308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._ftsent* [ %35, %cond.true ], [ %37, %cond.false ], !dbg !21308
  store %struct._ftsent* %cond, %struct._ftsent** %p, align 8, !dbg !21314, !tbaa !2995
  br label %for.cond5, !dbg !21315, !llvm.loop !21316

for.end27:                                        ; preds = %for.cond5
  ret void, !dbg !21318
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_compare_ino(%struct._ftsent** %a, %struct._ftsent** %b) #4 !dbg !21319 !ctir !2350 {
entry:
  %a.addr = alloca %struct._ftsent**, align 8
  %b.addr = alloca %struct._ftsent**, align 8
  store %struct._ftsent** %a, %struct._ftsent*** %a.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %a.addr, metadata !21320, metadata !DIExpression()), !dbg !21321
  store %struct._ftsent** %b, %struct._ftsent*** %b.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %b.addr, metadata !21322, metadata !DIExpression()), !dbg !21323
  %0 = load %struct._ftsent**, %struct._ftsent*** %a.addr, align 8, !dbg !21324, !tbaa !2995
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %0, i64 0, !dbg !21324, !ctir !2352
  %1 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !21324, !tbaa !2995
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 18, !dbg !21325, !ctir !2354
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !21326
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 1, !dbg !21326, !ctir !2450
  %2 = load i64, i64* %st_ino, align 8, !dbg !21326, !tbaa !3870, !ctir !228
  %3 = load %struct._ftsent**, %struct._ftsent*** %b.addr, align 8, !dbg !21327, !tbaa !2995
  %arrayidx1 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %3, i64 0, !dbg !21327, !ctir !2352
  %4 = load %struct._ftsent*, %struct._ftsent** %arrayidx1, align 8, !dbg !21327, !tbaa !2995
  %fts_statp2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 18, !dbg !21328, !ctir !2354
  %arraydecay3 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp2, i64 0, i64 0, !dbg !21329
  %st_ino4 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay3, i32 0, i32 1, !dbg !21329, !ctir !2450
  %5 = load i64, i64* %st_ino4, align 8, !dbg !21329, !tbaa !3870, !ctir !228
  %cmp = icmp ult i64 %2, %5, !dbg !21330
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21324

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !21324

cond.false:                                       ; preds = %entry
  %6 = load %struct._ftsent**, %struct._ftsent*** %b.addr, align 8, !dbg !21331, !tbaa !2995
  %arrayidx5 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %6, i64 0, !dbg !21331, !ctir !2352
  %7 = load %struct._ftsent*, %struct._ftsent** %arrayidx5, align 8, !dbg !21331, !tbaa !2995
  %fts_statp6 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 18, !dbg !21332, !ctir !2354
  %arraydecay7 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp6, i64 0, i64 0, !dbg !21333
  %st_ino8 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay7, i32 0, i32 1, !dbg !21333, !ctir !2450
  %8 = load i64, i64* %st_ino8, align 8, !dbg !21333, !tbaa !3870, !ctir !228
  %9 = load %struct._ftsent**, %struct._ftsent*** %a.addr, align 8, !dbg !21334, !tbaa !2995
  %arrayidx9 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %9, i64 0, !dbg !21334, !ctir !2352
  %10 = load %struct._ftsent*, %struct._ftsent** %arrayidx9, align 8, !dbg !21334, !tbaa !2995
  %fts_statp10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 18, !dbg !21335, !ctir !2354
  %arraydecay11 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp10, i64 0, i64 0, !dbg !21336
  %st_ino12 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay11, i32 0, i32 1, !dbg !21336, !ctir !2450
  %11 = load i64, i64* %st_ino12, align 8, !dbg !21336, !tbaa !3870, !ctir !228
  %cmp13 = icmp ult i64 %8, %11, !dbg !21337
  %12 = zext i1 %cmp13 to i64, !dbg !21331
  %cond = select i1 %cmp13, i32 1, i32 0, !dbg !21331
  br label %cond.end, !dbg !21324

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond14 = phi i32 [ -1, %cond.true ], [ %cond, %cond.false ], !dbg !21324
  ret i32 %cond14, !dbg !21338
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fts_set(%struct.FTS* %sp, %struct._ftsent* %p, i32 %instr) #4 !dbg !21339 !ctir !2422 {
entry:
  %retval = alloca i32, align 4
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %instr.addr = alloca i32, align 4
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !21340, metadata !DIExpression()), !dbg !21341
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !21342, metadata !DIExpression()), !dbg !21343
  store i32 %instr, i32* %instr.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %instr.addr, metadata !21344, metadata !DIExpression()), !dbg !21345
  %0 = load i32, i32* %instr.addr, align 4, !dbg !21346, !tbaa !2982
  %cmp = icmp ne i32 %0, 0, !dbg !21348
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !21349

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %instr.addr, align 4, !dbg !21350, !tbaa !2982
  %cmp1 = icmp ne i32 %1, 1, !dbg !21351
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !21352

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i32, i32* %instr.addr, align 4, !dbg !21353, !tbaa !2982
  %cmp3 = icmp ne i32 %2, 2, !dbg !21354
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !21355

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %3 = load i32, i32* %instr.addr, align 4, !dbg !21356, !tbaa !2982
  %cmp5 = icmp ne i32 %3, 3, !dbg !21357
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !21358

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %4 = load i32, i32* %instr.addr, align 4, !dbg !21359, !tbaa !2982
  %cmp7 = icmp ne i32 %4, 4, !dbg !21360
  br i1 %cmp7, label %if.then, label %if.end, !dbg !21361

if.then:                                          ; preds = %land.lhs.true6
  %call = call i32* @__errno_location() #15, !dbg !21362
  store i32 22, i32* %call, align 4, !dbg !21362, !tbaa !2982, !ctir !7
  store i32 1, i32* %retval, align 4, !dbg !21364
  br label %return, !dbg !21364

if.end:                                           ; preds = %land.lhs.true6, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  %5 = load i32, i32* %instr.addr, align 4, !dbg !21365, !tbaa !2982
  %conv = trunc i32 %5 to i16, !dbg !21365
  %6 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !21366, !tbaa !2995
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 17, !dbg !21367, !ctir !2318
  store i16 %conv, i16* %fts_instr, align 4, !dbg !21368, !tbaa !3810, !ctir !33
  store i32 0, i32* %retval, align 4, !dbg !21369
  br label %return, !dbg !21369

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !21370
  ret i32 %7, !dbg !21370
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._ftsent* @rpl_fts_children(%struct.FTS* %sp, i32 %instr) #4 !dbg !21371 !ctir !2424 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %instr.addr = alloca i32, align 4
  %p = alloca %struct._ftsent*, align 8, !ctir !2417
  %fd = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !21372, metadata !DIExpression()), !dbg !21373
  store i32 %instr, i32* %instr.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %instr.addr, metadata !21374, metadata !DIExpression()), !dbg !21375
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !21376, metadata !DIExpression()), !dbg !21377
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21378, metadata !DIExpression()), !dbg !21379
  %0 = load i32, i32* %instr.addr, align 4, !dbg !21380, !tbaa !2982
  %cmp = icmp ne i32 %0, 0, !dbg !21382
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !21383

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %instr.addr, align 4, !dbg !21384, !tbaa !2982
  %cmp1 = icmp ne i32 %1, 4096, !dbg !21385
  br i1 %cmp1, label %if.then, label %if.end, !dbg !21386

if.then:                                          ; preds = %land.lhs.true
  %call = call i32* @__errno_location() #15, !dbg !21387
  store i32 22, i32* %call, align 4, !dbg !21387, !tbaa !2982, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21389
  br label %return, !dbg !21389

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21390, !tbaa !2995
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 0, !dbg !21391, !ctir !2335
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !21391, !tbaa !18630, !ctir !2322
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !21392, !tbaa !2995
  %call2 = call i32* @__errno_location() #15, !dbg !21393
  store i32 0, i32* %call2, align 4, !dbg !21393, !tbaa !2982, !ctir !7
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21394, !tbaa !2995
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !21394, !ctir !2335
  %5 = load i32, i32* %fts_options, align 8, !dbg !21394, !tbaa !18042, !ctir !7
  %and = and i32 %5, 8192, !dbg !21394
  %tobool = icmp ne i32 %and, 0, !dbg !21394
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !21396

if.then3:                                         ; preds = %if.end
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21397
  br label %return, !dbg !21397

if.end4:                                          ; preds = %if.end
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21398, !tbaa !2995
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 15, !dbg !21400, !ctir !2318
  %7 = load i16, i16* %fts_info, align 8, !dbg !21400, !tbaa !3810, !ctir !33
  %conv = zext i16 %7 to i32, !dbg !21398
  %cmp5 = icmp eq i32 %conv, 9, !dbg !21401
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !21402

if.then7:                                         ; preds = %if.end4
  %8 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21403, !tbaa !2995
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 2, !dbg !21404, !ctir !2318
  %9 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !21404, !tbaa !2995, !ctir !2322
  store %struct._ftsent* %9, %struct._ftsent** %retval, align 8, !dbg !21405
  br label %return, !dbg !21405

if.end8:                                          ; preds = %if.end4
  %10 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21406, !tbaa !2995
  %fts_info9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 15, !dbg !21408, !ctir !2318
  %11 = load i16, i16* %fts_info9, align 8, !dbg !21408, !tbaa !3810, !ctir !33
  %conv10 = zext i16 %11 to i32, !dbg !21406
  %cmp11 = icmp ne i32 %conv10, 1, !dbg !21409
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !21410

if.then13:                                        ; preds = %if.end8
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21411
  br label %return, !dbg !21411

if.end14:                                         ; preds = %if.end8
  %12 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21412, !tbaa !2995
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 1, !dbg !21414, !ctir !2335
  %13 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !21414, !tbaa !19278, !ctir !2322
  %cmp15 = icmp ne %struct._ftsent* %13, null, !dbg !21415
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !21416

if.then17:                                        ; preds = %if.end14
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21417, !tbaa !2995
  %fts_child18 = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 1, !dbg !21418, !ctir !2335
  %15 = load %struct._ftsent*, %struct._ftsent** %fts_child18, align 8, !dbg !21418, !tbaa !19278, !ctir !2322
  call void @fts_lfree(%struct._ftsent* %15), !dbg !21419
  br label %if.end19, !dbg !21419

if.end19:                                         ; preds = %if.then17, %if.end14
  %16 = load i32, i32* %instr.addr, align 4, !dbg !21420, !tbaa !2982
  %cmp20 = icmp eq i32 %16, 4096, !dbg !21422
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !21423

if.then22:                                        ; preds = %if.end19
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21424, !tbaa !2995
  %fts_options23 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 10, !dbg !21424, !ctir !2335
  %18 = load i32, i32* %fts_options23, align 8, !dbg !21424, !tbaa !18042, !ctir !7
  %or = or i32 %18, 4096, !dbg !21424
  store i32 %or, i32* %fts_options23, align 8, !dbg !21424, !tbaa !18042, !ctir !7
  store i32 2, i32* %instr.addr, align 4, !dbg !21426, !tbaa !2982
  br label %if.end24, !dbg !21427

if.else:                                          ; preds = %if.end19
  store i32 1, i32* %instr.addr, align 4, !dbg !21428, !tbaa !2982
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then22
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21429, !tbaa !2995
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !21431, !ctir !2318
  %20 = load i64, i64* %fts_level, align 8, !dbg !21431, !tbaa !3848, !ctir !566
  %cmp25 = icmp ne i64 %20, 0, !dbg !21432
  br i1 %cmp25, label %if.then34, label %lor.lhs.false, !dbg !21433

lor.lhs.false:                                    ; preds = %if.end24
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21434, !tbaa !2995
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !21435, !ctir !2318
  %22 = load i8*, i8** %fts_accpath, align 8, !dbg !21435, !tbaa !2995, !ctir !9
  %arrayidx = getelementptr inbounds i8, i8* %22, i64 0, !dbg !21434, !ctir !9
  %23 = load i8, i8* %arrayidx, align 1, !dbg !21434, !tbaa !3657
  %conv27 = sext i8 %23 to i32, !dbg !21434
  %cmp28 = icmp eq i32 %conv27, 47, !dbg !21436
  br i1 %cmp28, label %if.then34, label %lor.lhs.false30, !dbg !21437

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21438, !tbaa !2995
  %fts_options31 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !21438, !ctir !2335
  %25 = load i32, i32* %fts_options31, align 8, !dbg !21438, !tbaa !18042, !ctir !7
  %and32 = and i32 %25, 4, !dbg !21438
  %tobool33 = icmp ne i32 %and32, 0, !dbg !21438
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !21439

if.then34:                                        ; preds = %lor.lhs.false30, %lor.lhs.false, %if.end24
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21440, !tbaa !2995
  %27 = load i32, i32* %instr.addr, align 4, !dbg !21441, !tbaa !2982
  %call35 = call %struct._ftsent* @fts_build(%struct.FTS* %26, i32 %27), !dbg !21442
  %28 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21443, !tbaa !2995
  %fts_child36 = getelementptr inbounds %struct.FTS, %struct.FTS* %28, i32 0, i32 1, !dbg !21444, !ctir !2335
  store %struct._ftsent* %call35, %struct._ftsent** %fts_child36, align 8, !dbg !21445, !tbaa !19278, !ctir !2322
  store %struct._ftsent* %call35, %struct._ftsent** %retval, align 8, !dbg !21446
  br label %return, !dbg !21446

if.end37:                                         ; preds = %lor.lhs.false30
  %29 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21447, !tbaa !2995
  %call38 = call i32 @diropen(%struct.FTS* %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.434, i64 0, i64 0)), !dbg !21449
  store i32 %call38, i32* %fd, align 4, !dbg !21450, !tbaa !2982
  %cmp39 = icmp slt i32 %call38, 0, !dbg !21451
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !21452

if.then41:                                        ; preds = %if.end37
  %30 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21453, !tbaa !2995
  %fts_child42 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 1, !dbg !21454, !ctir !2335
  store %struct._ftsent* null, %struct._ftsent** %fts_child42, align 8, !dbg !21455, !tbaa !19278, !ctir !2322
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21456
  br label %return, !dbg !21456

if.end43:                                         ; preds = %if.end37
  %31 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21457, !tbaa !2995
  %32 = load i32, i32* %instr.addr, align 4, !dbg !21458, !tbaa !2982
  %call44 = call %struct._ftsent* @fts_build(%struct.FTS* %31, i32 %32), !dbg !21459
  %33 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21460, !tbaa !2995
  %fts_child45 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 1, !dbg !21461, !ctir !2335
  store %struct._ftsent* %call44, %struct._ftsent** %fts_child45, align 8, !dbg !21462, !tbaa !19278, !ctir !2322
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21463, !tbaa !2995
  %fts_options46 = getelementptr inbounds %struct.FTS, %struct.FTS* %34, i32 0, i32 10, !dbg !21463, !ctir !2335
  %35 = load i32, i32* %fts_options46, align 8, !dbg !21463, !tbaa !18042, !ctir !7
  %and47 = and i32 %35, 512, !dbg !21463
  %tobool48 = icmp ne i32 %and47, 0, !dbg !21463
  br i1 %tobool48, label %if.then49, label %if.else50, !dbg !21465

if.then49:                                        ; preds = %if.end43
  %36 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21466, !tbaa !2995
  %37 = load i32, i32* %fd, align 4, !dbg !21468, !tbaa !2982
  call void @cwd_advance_fd(%struct.FTS* %36, i32 %37, i1 zeroext true), !dbg !21469
  br label %if.end59, !dbg !21470

if.else50:                                        ; preds = %if.end43
  %38 = load i32, i32* %fd, align 4, !dbg !21471, !tbaa !2982
  %call51 = call i32 @fchdir(i32 %38) #10, !dbg !21474
  %tobool52 = icmp ne i32 %call51, 0, !dbg !21474
  br i1 %tobool52, label %if.then53, label %if.end57, !dbg !21475

if.then53:                                        ; preds = %if.else50
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21476, metadata !DIExpression()), !dbg !21478
  %call54 = call i32* @__errno_location() #15, !dbg !21479
  %39 = load i32, i32* %call54, align 4, !dbg !21479, !tbaa !2982, !ctir !7
  store i32 %39, i32* %saved_errno, align 4, !dbg !21478, !tbaa !2982
  %40 = load i32, i32* %fd, align 4, !dbg !21480, !tbaa !2982
  %call55 = call i32 @close(i32 %40), !dbg !21481
  %41 = load i32, i32* %saved_errno, align 4, !dbg !21482, !tbaa !2982
  %call56 = call i32* @__errno_location() #15, !dbg !21482
  store i32 %41, i32* %call56, align 4, !dbg !21482, !tbaa !2982, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21483
  br label %return, !dbg !21483

if.end57:                                         ; preds = %if.else50
  %42 = load i32, i32* %fd, align 4, !dbg !21484, !tbaa !2982
  %call58 = call i32 @close(i32 %42), !dbg !21485
  br label %if.end59

if.end59:                                         ; preds = %if.end57, %if.then49
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21486, !tbaa !2995
  %fts_child60 = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 1, !dbg !21487, !ctir !2335
  %44 = load %struct._ftsent*, %struct._ftsent** %fts_child60, align 8, !dbg !21487, !tbaa !19278, !ctir !2322
  store %struct._ftsent* %44, %struct._ftsent** %retval, align 8, !dbg !21488
  br label %return, !dbg !21488

return:                                           ; preds = %if.end59, %if.then53, %if.then41, %if.then34, %if.then13, %if.then7, %if.then3, %if.then
  %45 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !21489
  ret %struct._ftsent* %45, !dbg !21489
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.__mbstate_t* %ps) #4 !dbg !21490 !ctir !2502 {
entry:
  %retval = alloca i64, align 8
  %pwc.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %ps.addr = alloca %struct.__mbstate_t*, align 8
  %ret = alloca i64, align 8, !ctir !55
  %wc = alloca i32, align 4, !ctir !1041
  %uc = alloca i8, align 1, !ctir !466
  store i32* %pwc, i32** %pwc.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !21492, metadata !DIExpression()), !dbg !21493
  store i8* %s, i8** %s.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !21494, metadata !DIExpression()), !dbg !21495
  store i64 %n, i64* %n.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !21496, metadata !DIExpression()), !dbg !21497
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %ps.addr, metadata !21498, metadata !DIExpression()), !dbg !21499
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !21500, metadata !DIExpression()), !dbg !21501
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !21502, metadata !DIExpression()), !dbg !21503
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !21504, !tbaa !2995
  %tobool = icmp ne i32* %0, null, !dbg !21504
  br i1 %tobool, label %if.end, label %if.then, !dbg !21506

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !21507, !tbaa !2995
  br label %if.end, !dbg !21508

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !21509, !tbaa !2995
  %2 = load i8*, i8** %s.addr, align 8, !dbg !21510, !tbaa !2995
  %3 = load i64, i64* %n.addr, align 8, !dbg !21511, !tbaa !3848
  %4 = load %struct.__mbstate_t*, %struct.__mbstate_t** %ps.addr, align 8, !dbg !21512, !tbaa !2995
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.__mbstate_t* %4) #10, !dbg !21513
  store i64 %call, i64* %ret, align 8, !dbg !21514, !tbaa !3848
  %5 = load i64, i64* %ret, align 8, !dbg !21515, !tbaa !3848
  %cmp = icmp ule i64 -2, %5, !dbg !21517
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !21518

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !21519, !tbaa !3848
  %cmp1 = icmp ne i64 %6, 0, !dbg !21520
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !21521

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !21522
  br i1 %call3, label %if.end5, label %if.then4, !dbg !21523

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !21524, metadata !DIExpression()), !dbg !21526
  %7 = load i8*, i8** %s.addr, align 8, !dbg !21527, !tbaa !2995
  %8 = load i8, i8* %7, align 1, !dbg !21528, !tbaa !3657, !ctir !116
  store i8 %8, i8* %uc, align 1, !dbg !21526, !tbaa !3657
  %9 = load i8, i8* %uc, align 1, !dbg !21529, !tbaa !3657
  %conv = zext i8 %9 to i32, !dbg !21529
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !21530, !tbaa !2995
  store i32 %conv, i32* %10, align 4, !dbg !21531, !tbaa !2982, !ctir !1041
  store i64 1, i64* %retval, align 8, !dbg !21532
  br label %return, !dbg !21532

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !21533, !tbaa !3848
  store i64 %11, i64* %retval, align 8, !dbg !21534
  br label %return, !dbg !21534

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !21535
  ret i64 %12, !dbg !21535
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @acl_access_nontrivial(%struct.__acl_ext* %acl) #4 !dbg !21536 !ctir !2519 {
entry:
  %retval = alloca i32, align 4
  %acl.addr = alloca %struct.__acl_ext*, align 8
  %ace = alloca %struct.__acl_entry_ext*, align 8, !ctir !2525
  %got_one = alloca i32, align 4, !ctir !7
  %tag = alloca i32, align 4, !ctir !2528
  store %struct.__acl_ext* %acl, %struct.__acl_ext** %acl.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.__acl_ext** %acl.addr, metadata !21538, metadata !DIExpression()), !dbg !21539
  call void @llvm.dbg.declare(metadata %struct.__acl_entry_ext** %ace, metadata !21540, metadata !DIExpression()), !dbg !21541
  call void @llvm.dbg.declare(metadata i32* %got_one, metadata !21542, metadata !DIExpression()), !dbg !21543
  %0 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !21544, !tbaa !2995
  %call = call i32 @acl_get_entry(%struct.__acl_ext* %0, i32 0, %struct.__acl_entry_ext** %ace), !dbg !21546
  store i32 %call, i32* %got_one, align 4, !dbg !21547, !tbaa !2982
  br label %for.cond, !dbg !21548

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %got_one, align 4, !dbg !21549, !tbaa !2982
  %cmp = icmp sgt i32 %1, 0, !dbg !21551
  br i1 %cmp, label %for.body, label %for.end, !dbg !21552

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !21553, metadata !DIExpression()), !dbg !21555
  %2 = load %struct.__acl_entry_ext*, %struct.__acl_entry_ext** %ace, align 8, !dbg !21556, !tbaa !2995
  %call1 = call i32 @acl_get_tag_type(%struct.__acl_entry_ext* %2, i32* %tag), !dbg !21558
  %cmp2 = icmp slt i32 %call1, 0, !dbg !21559
  br i1 %cmp2, label %if.then, label %if.end, !dbg !21560

if.then:                                          ; preds = %for.body
  store i32 -1, i32* %retval, align 4, !dbg !21561
  br label %return, !dbg !21561

if.end:                                           ; preds = %for.body
  %3 = load i32, i32* %tag, align 4, !dbg !21562, !tbaa !2982
  %cmp3 = icmp eq i32 %3, 1, !dbg !21564
  br i1 %cmp3, label %if.end8, label %lor.lhs.false, !dbg !21565

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i32, i32* %tag, align 4, !dbg !21566, !tbaa !2982
  %cmp4 = icmp eq i32 %4, 4, !dbg !21567
  br i1 %cmp4, label %if.end8, label %lor.lhs.false5, !dbg !21568

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %5 = load i32, i32* %tag, align 4, !dbg !21569, !tbaa !2982
  %cmp6 = icmp eq i32 %5, 32, !dbg !21570
  br i1 %cmp6, label %if.end8, label %if.then7, !dbg !21571

if.then7:                                         ; preds = %lor.lhs.false5
  store i32 1, i32* %retval, align 4, !dbg !21572
  br label %return, !dbg !21572

if.end8:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %if.end
  br label %for.inc, !dbg !21573

for.inc:                                          ; preds = %if.end8
  %6 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !21574, !tbaa !2995
  %call9 = call i32 @acl_get_entry(%struct.__acl_ext* %6, i32 1, %struct.__acl_entry_ext** %ace), !dbg !21575
  store i32 %call9, i32* %got_one, align 4, !dbg !21576, !tbaa !2982
  br label %for.cond, !dbg !21577, !llvm.loop !21578

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %got_one, align 4, !dbg !21580, !tbaa !2982
  store i32 %7, i32* %retval, align 4, !dbg !21581
  br label %return, !dbg !21581

return:                                           ; preds = %for.end, %if.then7, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !21582
  ret i32 %8, !dbg !21582
}

declare dso_local i32 @acl_get_entry(%struct.__acl_ext*, i32, %struct.__acl_entry_ext**) #3

declare dso_local i32 @acl_get_tag_type(%struct.__acl_entry_ext*, i32*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @acl_default_nontrivial(%struct.__acl_ext* %acl) #4 !dbg !21583 !ctir !2519 {
entry:
  %acl.addr = alloca %struct.__acl_ext*, align 8
  store %struct.__acl_ext* %acl, %struct.__acl_ext** %acl.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.__acl_ext** %acl.addr, metadata !21584, metadata !DIExpression()), !dbg !21585
  %0 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !21586, !tbaa !2995
  %call = call i32 @acl_entries(%struct.__acl_ext* %0), !dbg !21587
  %cmp = icmp sgt i32 %call, 0, !dbg !21588
  %conv = zext i1 %cmp to i32, !dbg !21588
  ret i32 %conv, !dbg !21589
}

declare dso_local i32 @acl_entries(%struct.__acl_ext*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @free_permission_context(%struct.permission_context* %ctx) #4 !dbg !21590 !ctir !2529 {
entry:
  %ctx.addr = alloca %struct.permission_context*, align 8
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21591, metadata !DIExpression()), !dbg !21592
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21593, !tbaa !2995
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 1, !dbg !21595, !ctir !2532
  %1 = load %struct.__acl_ext*, %struct.__acl_ext** %acl, align 8, !dbg !21595, !tbaa !21596, !ctir !2521
  %tobool = icmp ne %struct.__acl_ext* %1, null, !dbg !21593
  br i1 %tobool, label %if.then, label %if.end, !dbg !21597

if.then:                                          ; preds = %entry
  %2 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21598, !tbaa !2995
  %acl1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %2, i32 0, i32 1, !dbg !21599, !ctir !2532
  %3 = load %struct.__acl_ext*, %struct.__acl_ext** %acl1, align 8, !dbg !21599, !tbaa !21596, !ctir !2521
  %4 = bitcast %struct.__acl_ext* %3 to i8*, !dbg !21598
  %call = call i32 @acl_free(i8* %4), !dbg !21600
  br label %if.end, !dbg !21600

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21601, !tbaa !2995
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %5, i32 0, i32 2, !dbg !21603, !ctir !2532
  %6 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl, align 8, !dbg !21603, !tbaa !21604, !ctir !2521
  %tobool2 = icmp ne %struct.__acl_ext* %6, null, !dbg !21601
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !21605

if.then3:                                         ; preds = %if.end
  %7 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21606, !tbaa !2995
  %default_acl4 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %7, i32 0, i32 2, !dbg !21607, !ctir !2532
  %8 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl4, align 8, !dbg !21607, !tbaa !21604, !ctir !2521
  %9 = bitcast %struct.__acl_ext* %8 to i8*, !dbg !21606
  %call5 = call i32 @acl_free(i8* %9), !dbg !21608
  br label %if.end6, !dbg !21608

if.end6:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !21609
}

declare dso_local i32 @acl_free(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_permissions(i8* %name, i32 %desc, i32 %mode, %struct.permission_context* %ctx) #4 !dbg !21610 !ctir !2542 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.permission_context*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21612, metadata !DIExpression()), !dbg !21613
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21614, metadata !DIExpression()), !dbg !21615
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !21616, metadata !DIExpression()), !dbg !21617
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21618, metadata !DIExpression()), !dbg !21619
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21620, !tbaa !2995
  %1 = bitcast %struct.permission_context* %0 to i8*, !dbg !21621
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 32, i1 false), !dbg !21621
  %2 = load i32, i32* %mode.addr, align 4, !dbg !21622, !tbaa !2982
  %3 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21623, !tbaa !2995
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %3, i32 0, i32 0, !dbg !21624, !ctir !2545
  store i32 %2, i32* %mode1, align 8, !dbg !21625, !tbaa !13534, !ctir !160
  %4 = load i32, i32* %desc.addr, align 4, !dbg !21626, !tbaa !2982
  %cmp = icmp ne i32 %4, -1, !dbg !21628
  br i1 %cmp, label %if.then, label %if.else, !dbg !21629

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %desc.addr, align 4, !dbg !21630, !tbaa !2982
  %call = call %struct.__acl_ext* @acl_get_fd(i32 %5), !dbg !21631
  %6 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21632, !tbaa !2995
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %6, i32 0, i32 1, !dbg !21633, !ctir !2545
  store %struct.__acl_ext* %call, %struct.__acl_ext** %acl, align 8, !dbg !21634, !tbaa !21596, !ctir !2521
  br label %if.end, !dbg !21632

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %name.addr, align 8, !dbg !21635, !tbaa !2995
  %call2 = call %struct.__acl_ext* @acl_get_file(i8* %7, i32 32768), !dbg !21636
  %8 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21637, !tbaa !2995
  %acl3 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %8, i32 0, i32 1, !dbg !21638, !ctir !2545
  store %struct.__acl_ext* %call2, %struct.__acl_ext** %acl3, align 8, !dbg !21639, !tbaa !21596, !ctir !2521
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21640, !tbaa !2995
  %acl4 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %9, i32 0, i32 1, !dbg !21642, !ctir !2545
  %10 = load %struct.__acl_ext*, %struct.__acl_ext** %acl4, align 8, !dbg !21642, !tbaa !21596, !ctir !2521
  %cmp5 = icmp eq %struct.__acl_ext* %10, null, !dbg !21643
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !21644

if.then6:                                         ; preds = %if.end
  %call7 = call i32* @__errno_location() #15, !dbg !21645
  %11 = load i32, i32* %call7, align 4, !dbg !21645, !tbaa !2982, !ctir !7
  %call8 = call zeroext i1 @acl_errno_valid(i32 %11) #15, !dbg !21646
  %12 = zext i1 %call8 to i64, !dbg !21646
  %cond = select i1 %call8, i32 -1, i32 0, !dbg !21646
  store i32 %cond, i32* %retval, align 4, !dbg !21647
  br label %return, !dbg !21647

if.end9:                                          ; preds = %if.end
  %13 = load i32, i32* %mode.addr, align 4, !dbg !21648, !tbaa !2982
  %and = and i32 %13, 61440, !dbg !21648
  %cmp10 = icmp eq i32 %and, 16384, !dbg !21648
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !21650

if.then11:                                        ; preds = %if.end9
  %14 = load i8*, i8** %name.addr, align 8, !dbg !21651, !tbaa !2995
  %call12 = call %struct.__acl_ext* @acl_get_file(i8* %14, i32 16384), !dbg !21653
  %15 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21654, !tbaa !2995
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %15, i32 0, i32 2, !dbg !21655, !ctir !2545
  store %struct.__acl_ext* %call12, %struct.__acl_ext** %default_acl, align 8, !dbg !21656, !tbaa !21604, !ctir !2521
  %16 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21657, !tbaa !2995
  %default_acl13 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %16, i32 0, i32 2, !dbg !21659, !ctir !2545
  %17 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl13, align 8, !dbg !21659, !tbaa !21604, !ctir !2521
  %cmp14 = icmp eq %struct.__acl_ext* %17, null, !dbg !21660
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !21661

if.then15:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !21662
  br label %return, !dbg !21662

if.end16:                                         ; preds = %if.then11
  br label %if.end17, !dbg !21663

if.end17:                                         ; preds = %if.end16, %if.end9
  store i32 0, i32* %retval, align 4, !dbg !21664
  br label %return, !dbg !21664

return:                                           ; preds = %if.end17, %if.then15, %if.then6
  %18 = load i32, i32* %retval, align 4, !dbg !21665
  ret i32 %18, !dbg !21665
}

declare dso_local %struct.__acl_ext* @acl_get_fd(i32) #3

declare dso_local %struct.__acl_ext* @acl_get_file(i8*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @chmod_or_fchmod(i8* %name, i32 %desc, i32 %mode) #4 !dbg !21666 !ctir !1589 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21668, metadata !DIExpression()), !dbg !21669
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21670, metadata !DIExpression()), !dbg !21671
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !21672, metadata !DIExpression()), !dbg !21673
  %0 = load i32, i32* %desc.addr, align 4, !dbg !21674, !tbaa !2982
  %cmp = icmp ne i32 %0, -1, !dbg !21676
  br i1 %cmp, label %if.then, label %if.else, !dbg !21677

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !21678, !tbaa !2982
  %2 = load i32, i32* %mode.addr, align 4, !dbg !21679, !tbaa !2982
  %call = call i32 @fchmod(i32 %1, i32 %2) #10, !dbg !21680
  store i32 %call, i32* %retval, align 4, !dbg !21681
  br label %return, !dbg !21681

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !21682, !tbaa !2995
  %4 = load i32, i32* %mode.addr, align 4, !dbg !21683, !tbaa !2982
  %call1 = call i32 @chmod(i8* %3, i32 %4) #10, !dbg !21684
  store i32 %call1, i32* %retval, align 4, !dbg !21685
  br label %return, !dbg !21685

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !21686
  ret i32 %5, !dbg !21686
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_permissions(%struct.permission_context* %ctx, i8* %name, i32 %desc) #4 !dbg !21687 !ctir !2554 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.permission_context*, align 8
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %acls_set = alloca i8, align 1, !ctir !120
  %early_chmod = alloca i8, align 1, !ctir !120
  %must_chmod = alloca i8, align 1, !ctir !120
  %ret = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  %saved_errno22 = alloca i32, align 4, !ctir !7
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21688, metadata !DIExpression()), !dbg !21689
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21690, metadata !DIExpression()), !dbg !21691
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21692, metadata !DIExpression()), !dbg !21693
  call void @llvm.dbg.declare(metadata i8* %acls_set, metadata !21694, metadata !DIExpression()), !dbg !21695
  store i8 0, i8* %acls_set, align 1, !dbg !21695, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %early_chmod, metadata !21696, metadata !DIExpression()), !dbg !21697
  call void @llvm.dbg.declare(metadata i8* %must_chmod, metadata !21698, metadata !DIExpression()), !dbg !21699
  store i8 0, i8* %must_chmod, align 1, !dbg !21699, !tbaa !3106
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !21700, metadata !DIExpression()), !dbg !21701
  store i32 0, i32* %ret, align 4, !dbg !21701, !tbaa !2982
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21702, !tbaa !2995
  %mode = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 0, !dbg !21703, !ctir !2557
  %1 = load i32, i32* %mode, align 8, !dbg !21703, !tbaa !13534, !ctir !160
  %and = and i32 %1, 3584, !dbg !21704
  %tobool = icmp ne i32 %and, 0, !dbg !21705
  %frombool = zext i1 %tobool to i8, !dbg !21706
  store i8 %frombool, i8* %early_chmod, align 1, !dbg !21706, !tbaa !3106
  %2 = load i8, i8* %early_chmod, align 1, !dbg !21707, !tbaa !3106
  %tobool1 = trunc i8 %2 to i1, !dbg !21707
  br i1 %tobool1, label %if.then, label %if.end4, !dbg !21709

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !21710, !tbaa !2995
  %4 = load i32, i32* %desc.addr, align 4, !dbg !21712, !tbaa !2982
  %5 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21713, !tbaa !2995
  %mode2 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %5, i32 0, i32 0, !dbg !21714, !ctir !2557
  %6 = load i32, i32* %mode2, align 8, !dbg !21714, !tbaa !13534, !ctir !160
  %call = call i32 @chmod_or_fchmod(i8* %3, i32 %4, i32 %6), !dbg !21715
  store i32 %call, i32* %ret, align 4, !dbg !21716, !tbaa !2982
  %7 = load i32, i32* %ret, align 4, !dbg !21717, !tbaa !2982
  %cmp = icmp ne i32 %7, 0, !dbg !21719
  br i1 %cmp, label %if.then3, label %if.end, !dbg !21720

if.then3:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21721
  br label %return, !dbg !21721

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !21722

if.end4:                                          ; preds = %if.end, %entry
  %8 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21723, !tbaa !2995
  %9 = load i8*, i8** %name.addr, align 8, !dbg !21724, !tbaa !2995
  %10 = load i32, i32* %desc.addr, align 4, !dbg !21725, !tbaa !2982
  %call5 = call i32 @set_acls(%struct.permission_context* %8, i8* %9, i32 %10, i32 0, i8* %must_chmod, i8* %acls_set), !dbg !21726
  store i32 %call5, i32* %ret, align 4, !dbg !21727, !tbaa !2982
  %11 = load i8, i8* %acls_set, align 1, !dbg !21728, !tbaa !3106
  %tobool6 = trunc i8 %11 to i1, !dbg !21728
  br i1 %tobool6, label %if.end18, label %if.then7, !dbg !21730

if.then7:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21731, metadata !DIExpression()), !dbg !21733
  %12 = load i32, i32* %ret, align 4, !dbg !21734, !tbaa !2982
  %tobool8 = icmp ne i32 %12, 0, !dbg !21734
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !21734

cond.true:                                        ; preds = %if.then7
  %call9 = call i32* @__errno_location() #15, !dbg !21735
  %13 = load i32, i32* %call9, align 4, !dbg !21735, !tbaa !2982, !ctir !7
  br label %cond.end, !dbg !21734

cond.false:                                       ; preds = %if.then7
  br label %cond.end, !dbg !21734

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ 0, %cond.false ], !dbg !21734
  store i32 %cond, i32* %saved_errno, align 4, !dbg !21733, !tbaa !2982
  %14 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21736, !tbaa !2995
  %15 = load i8*, i8** %name.addr, align 8, !dbg !21737, !tbaa !2995
  %16 = load i32, i32* %desc.addr, align 4, !dbg !21738, !tbaa !2982
  %call10 = call i32 @set_acls(%struct.permission_context* %14, i8* %15, i32 %16, i32 1, i8* %must_chmod, i8* %acls_set), !dbg !21739
  store i32 %call10, i32* %ret, align 4, !dbg !21740, !tbaa !2982
  %17 = load i8, i8* %acls_set, align 1, !dbg !21741, !tbaa !3106
  %tobool11 = trunc i8 %17 to i1, !dbg !21741
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !21743

if.then12:                                        ; preds = %cond.end
  store i8 1, i8* %must_chmod, align 1, !dbg !21744, !tbaa !3106
  br label %if.end13, !dbg !21745

if.end13:                                         ; preds = %if.then12, %cond.end
  %18 = load i32, i32* %saved_errno, align 4, !dbg !21746, !tbaa !2982
  %tobool14 = icmp ne i32 %18, 0, !dbg !21746
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !21748

if.then15:                                        ; preds = %if.end13
  %19 = load i32, i32* %saved_errno, align 4, !dbg !21749, !tbaa !2982
  %call16 = call i32* @__errno_location() #15, !dbg !21751
  store i32 %19, i32* %call16, align 4, !dbg !21752, !tbaa !2982, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !21753, !tbaa !2982
  br label %if.end17, !dbg !21754

if.end17:                                         ; preds = %if.then15, %if.end13
  br label %if.end18, !dbg !21755

if.end18:                                         ; preds = %if.end17, %if.end4
  %20 = load i8, i8* %must_chmod, align 1, !dbg !21756, !tbaa !3106
  %tobool19 = trunc i8 %20 to i1, !dbg !21756
  br i1 %tobool19, label %land.lhs.true, label %if.end35, !dbg !21758

land.lhs.true:                                    ; preds = %if.end18
  %21 = load i8, i8* %early_chmod, align 1, !dbg !21759, !tbaa !3106
  %tobool20 = trunc i8 %21 to i1, !dbg !21759
  br i1 %tobool20, label %if.end35, label %if.then21, !dbg !21760

if.then21:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno22, metadata !21761, metadata !DIExpression()), !dbg !21763
  %22 = load i32, i32* %ret, align 4, !dbg !21764, !tbaa !2982
  %tobool23 = icmp ne i32 %22, 0, !dbg !21764
  br i1 %tobool23, label %cond.true24, label %cond.false26, !dbg !21764

cond.true24:                                      ; preds = %if.then21
  %call25 = call i32* @__errno_location() #15, !dbg !21765
  %23 = load i32, i32* %call25, align 4, !dbg !21765, !tbaa !2982, !ctir !7
  br label %cond.end27, !dbg !21764

cond.false26:                                     ; preds = %if.then21
  br label %cond.end27, !dbg !21764

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi i32 [ %23, %cond.true24 ], [ 0, %cond.false26 ], !dbg !21764
  store i32 %cond28, i32* %saved_errno22, align 4, !dbg !21763, !tbaa !2982
  %24 = load i8*, i8** %name.addr, align 8, !dbg !21766, !tbaa !2995
  %25 = load i32, i32* %desc.addr, align 4, !dbg !21767, !tbaa !2982
  %26 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21768, !tbaa !2995
  %mode29 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %26, i32 0, i32 0, !dbg !21769, !ctir !2557
  %27 = load i32, i32* %mode29, align 8, !dbg !21769, !tbaa !13534, !ctir !160
  %call30 = call i32 @chmod_or_fchmod(i8* %24, i32 %25, i32 %27), !dbg !21770
  store i32 %call30, i32* %ret, align 4, !dbg !21771, !tbaa !2982
  %28 = load i32, i32* %saved_errno22, align 4, !dbg !21772, !tbaa !2982
  %tobool31 = icmp ne i32 %28, 0, !dbg !21772
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !21774

if.then32:                                        ; preds = %cond.end27
  %29 = load i32, i32* %saved_errno22, align 4, !dbg !21775, !tbaa !2982
  %call33 = call i32* @__errno_location() #15, !dbg !21777
  store i32 %29, i32* %call33, align 4, !dbg !21778, !tbaa !2982, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !21779, !tbaa !2982
  br label %if.end34, !dbg !21780

if.end34:                                         ; preds = %if.then32, %cond.end27
  br label %if.end35, !dbg !21781

if.end35:                                         ; preds = %if.end34, %land.lhs.true, %if.end18
  %30 = load i32, i32* %ret, align 4, !dbg !21782, !tbaa !2982
  store i32 %30, i32* %retval, align 4, !dbg !21783
  br label %return, !dbg !21783

return:                                           ; preds = %if.end35, %if.then3
  %31 = load i32, i32* %retval, align 4, !dbg !21784
  ret i32 %31, !dbg !21784
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_acls(%struct.permission_context* %ctx, i8* %name, i32 %desc, i32 %from_mode, i8* %must_chmod, i8* %acls_set) #4 !dbg !21785 !ctir !2563 {
entry:
  %ctx.addr = alloca %struct.permission_context*, align 8
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %from_mode.addr = alloca i32, align 4
  %must_chmod.addr = alloca i8*, align 8
  %acls_set.addr = alloca i8*, align 8
  %ret = alloca i32, align 4, !ctir !7
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21786, metadata !DIExpression()), !dbg !21787
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21788, metadata !DIExpression()), !dbg !21789
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21790, metadata !DIExpression()), !dbg !21791
  store i32 %from_mode, i32* %from_mode.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %from_mode.addr, metadata !21792, metadata !DIExpression()), !dbg !21793
  store i8* %must_chmod, i8** %must_chmod.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %must_chmod.addr, metadata !21794, metadata !DIExpression()), !dbg !21795
  store i8* %acls_set, i8** %acls_set.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %acls_set.addr, metadata !21796, metadata !DIExpression()), !dbg !21797
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !21798, metadata !DIExpression()), !dbg !21799
  store i32 0, i32* %ret, align 4, !dbg !21799, !tbaa !2982
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21800, !tbaa !2995
  %acls_not_supported = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 3, !dbg !21802, !ctir !2557
  %1 = load i8, i8* %acls_not_supported, align 8, !dbg !21802, !tbaa !21803
  %tobool = trunc i8 %1 to i1, !dbg !21802, !ctir !120
  br i1 %tobool, label %if.end58, label %if.then, !dbg !21804

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !21805, !tbaa !2982
  %cmp = icmp eq i32 %2, 0, !dbg !21808
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !21809

land.lhs.true:                                    ; preds = %if.then
  %3 = load i32, i32* %from_mode.addr, align 4, !dbg !21810, !tbaa !2982
  %tobool1 = icmp ne i32 %3, 0, !dbg !21810
  br i1 %tobool1, label %if.then2, label %if.end12, !dbg !21811

if.then2:                                         ; preds = %land.lhs.true
  %4 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21812, !tbaa !2995
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %4, i32 0, i32 1, !dbg !21815, !ctir !2557
  %5 = load %struct.__acl_ext*, %struct.__acl_ext** %acl, align 8, !dbg !21815, !tbaa !21596, !ctir !2521
  %tobool3 = icmp ne %struct.__acl_ext* %5, null, !dbg !21812
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !21816

if.then4:                                         ; preds = %if.then2
  %6 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21817, !tbaa !2995
  %acl5 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %6, i32 0, i32 1, !dbg !21818, !ctir !2557
  %7 = load %struct.__acl_ext*, %struct.__acl_ext** %acl5, align 8, !dbg !21818, !tbaa !21596, !ctir !2521
  %8 = bitcast %struct.__acl_ext* %7 to i8*, !dbg !21817
  %call = call i32 @acl_free(i8* %8), !dbg !21819
  br label %if.end, !dbg !21819

if.end:                                           ; preds = %if.then4, %if.then2
  %9 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21820, !tbaa !2995
  %mode = getelementptr inbounds %struct.permission_context, %struct.permission_context* %9, i32 0, i32 0, !dbg !21821, !ctir !2557
  %10 = load i32, i32* %mode, align 8, !dbg !21821, !tbaa !13534, !ctir !160
  %call6 = call %struct.__acl_ext* @acl_from_mode(i32 %10), !dbg !21822
  %11 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21823, !tbaa !2995
  %acl7 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %11, i32 0, i32 1, !dbg !21824, !ctir !2557
  store %struct.__acl_ext* %call6, %struct.__acl_ext** %acl7, align 8, !dbg !21825, !tbaa !21596, !ctir !2521
  %12 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21826, !tbaa !2995
  %acl8 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %12, i32 0, i32 1, !dbg !21828, !ctir !2557
  %13 = load %struct.__acl_ext*, %struct.__acl_ext** %acl8, align 8, !dbg !21828, !tbaa !21596, !ctir !2521
  %cmp9 = icmp eq %struct.__acl_ext* %13, null, !dbg !21829
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !21830

if.then10:                                        ; preds = %if.end
  store i32 -1, i32* %ret, align 4, !dbg !21831, !tbaa !2982
  br label %if.end11, !dbg !21832

if.end11:                                         ; preds = %if.then10, %if.end
  br label %if.end12, !dbg !21833

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %if.then
  %14 = load i32, i32* %ret, align 4, !dbg !21834, !tbaa !2982
  %cmp13 = icmp eq i32 %14, 0, !dbg !21836
  br i1 %cmp13, label %land.lhs.true14, label %if.end57, !dbg !21837

land.lhs.true14:                                  ; preds = %if.end12
  %15 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21838, !tbaa !2995
  %acl15 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %15, i32 0, i32 1, !dbg !21839, !ctir !2557
  %16 = load %struct.__acl_ext*, %struct.__acl_ext** %acl15, align 8, !dbg !21839, !tbaa !21596, !ctir !2521
  %tobool16 = icmp ne %struct.__acl_ext* %16, null, !dbg !21838
  br i1 %tobool16, label %if.then17, label %if.end57, !dbg !21840

if.then17:                                        ; preds = %land.lhs.true14
  %17 = load i32, i32* %desc.addr, align 4, !dbg !21841, !tbaa !2982
  %cmp18 = icmp ne i32 %17, -1, !dbg !21844
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !21845

if.then19:                                        ; preds = %if.then17
  %18 = load i32, i32* %desc.addr, align 4, !dbg !21846, !tbaa !2982
  %19 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21847, !tbaa !2995
  %acl20 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %19, i32 0, i32 1, !dbg !21848, !ctir !2557
  %20 = load %struct.__acl_ext*, %struct.__acl_ext** %acl20, align 8, !dbg !21848, !tbaa !21596, !ctir !2521
  %call21 = call i32 @acl_set_fd(i32 %18, %struct.__acl_ext* %20), !dbg !21849
  store i32 %call21, i32* %ret, align 4, !dbg !21850, !tbaa !2982
  br label %if.end24, !dbg !21851

if.else:                                          ; preds = %if.then17
  %21 = load i8*, i8** %name.addr, align 8, !dbg !21852, !tbaa !2995
  %22 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21853, !tbaa !2995
  %acl22 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %22, i32 0, i32 1, !dbg !21854, !ctir !2557
  %23 = load %struct.__acl_ext*, %struct.__acl_ext** %acl22, align 8, !dbg !21854, !tbaa !21596, !ctir !2521
  %call23 = call i32 @acl_set_file(i8* %21, i32 32768, %struct.__acl_ext* %23), !dbg !21855
  store i32 %call23, i32* %ret, align 4, !dbg !21856, !tbaa !2982
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then19
  %24 = load i32, i32* %ret, align 4, !dbg !21857, !tbaa !2982
  %cmp25 = icmp ne i32 %24, 0, !dbg !21859
  br i1 %cmp25, label %if.then26, label %if.else38, !dbg !21860

if.then26:                                        ; preds = %if.end24
  %call27 = call i32* @__errno_location() #15, !dbg !21861
  %25 = load i32, i32* %call27, align 4, !dbg !21861, !tbaa !2982, !ctir !7
  %call28 = call zeroext i1 @acl_errno_valid(i32 %25) #15, !dbg !21864
  br i1 %call28, label %if.end37, label %if.then29, !dbg !21865

if.then29:                                        ; preds = %if.then26
  %26 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21866, !tbaa !2995
  %acls_not_supported30 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %26, i32 0, i32 3, !dbg !21868, !ctir !2557
  store i8 1, i8* %acls_not_supported30, align 8, !dbg !21869, !tbaa !21803, !ctir !120
  %27 = load i32, i32* %from_mode.addr, align 4, !dbg !21870, !tbaa !2982
  %tobool31 = icmp ne i32 %27, 0, !dbg !21870
  br i1 %tobool31, label %if.then35, label %lor.lhs.false, !dbg !21872

lor.lhs.false:                                    ; preds = %if.then29
  %28 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21873, !tbaa !2995
  %acl32 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %28, i32 0, i32 1, !dbg !21874, !ctir !2557
  %29 = load %struct.__acl_ext*, %struct.__acl_ext** %acl32, align 8, !dbg !21874, !tbaa !21596, !ctir !2521
  %call33 = call i32 @acl_access_nontrivial(%struct.__acl_ext* %29), !dbg !21875
  %cmp34 = icmp eq i32 %call33, 0, !dbg !21876
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !21877

if.then35:                                        ; preds = %lor.lhs.false, %if.then29
  store i32 0, i32* %ret, align 4, !dbg !21878, !tbaa !2982
  br label %if.end36, !dbg !21879

if.end36:                                         ; preds = %if.then35, %lor.lhs.false
  br label %if.end37, !dbg !21880

if.end37:                                         ; preds = %if.end36, %if.then26
  br label %if.end56, !dbg !21881

if.else38:                                        ; preds = %if.end24
  %30 = load i8*, i8** %acls_set.addr, align 8, !dbg !21882, !tbaa !2995
  store i8 1, i8* %30, align 1, !dbg !21884, !tbaa !3106, !ctir !120
  %31 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21885, !tbaa !2995
  %mode39 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %31, i32 0, i32 0, !dbg !21885, !ctir !2557
  %32 = load i32, i32* %mode39, align 8, !dbg !21885, !tbaa !13534, !ctir !160
  %and = and i32 %32, 61440, !dbg !21885
  %cmp40 = icmp eq i32 %and, 16384, !dbg !21885
  br i1 %cmp40, label %if.then41, label %if.end55, !dbg !21887

if.then41:                                        ; preds = %if.else38
  %33 = load i32, i32* %from_mode.addr, align 4, !dbg !21888, !tbaa !2982
  %tobool42 = icmp ne i32 %33, 0, !dbg !21888
  br i1 %tobool42, label %if.else52, label %land.lhs.true43, !dbg !21891

land.lhs.true43:                                  ; preds = %if.then41
  %34 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21892, !tbaa !2995
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %34, i32 0, i32 2, !dbg !21893, !ctir !2557
  %35 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl, align 8, !dbg !21893, !tbaa !21604, !ctir !2521
  %tobool44 = icmp ne %struct.__acl_ext* %35, null, !dbg !21892
  br i1 %tobool44, label %land.lhs.true45, label %if.else52, !dbg !21894

land.lhs.true45:                                  ; preds = %land.lhs.true43
  %36 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21895, !tbaa !2995
  %default_acl46 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %36, i32 0, i32 2, !dbg !21896, !ctir !2557
  %37 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl46, align 8, !dbg !21896, !tbaa !21604, !ctir !2521
  %call47 = call i32 @acl_default_nontrivial(%struct.__acl_ext* %37), !dbg !21897
  %tobool48 = icmp ne i32 %call47, 0, !dbg !21897
  br i1 %tobool48, label %if.then49, label %if.else52, !dbg !21898

if.then49:                                        ; preds = %land.lhs.true45
  %38 = load i8*, i8** %name.addr, align 8, !dbg !21899, !tbaa !2995
  %39 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21900, !tbaa !2995
  %default_acl50 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %39, i32 0, i32 2, !dbg !21901, !ctir !2557
  %40 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl50, align 8, !dbg !21901, !tbaa !21604, !ctir !2521
  %call51 = call i32 @acl_set_file(i8* %38, i32 16384, %struct.__acl_ext* %40), !dbg !21902
  store i32 %call51, i32* %ret, align 4, !dbg !21903, !tbaa !2982
  br label %if.end54, !dbg !21904

if.else52:                                        ; preds = %land.lhs.true45, %land.lhs.true43, %if.then41
  %41 = load i8*, i8** %name.addr, align 8, !dbg !21905, !tbaa !2995
  %call53 = call i32 @acl_delete_def_file(i8* %41), !dbg !21906
  store i32 %call53, i32* %ret, align 4, !dbg !21907, !tbaa !2982
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then49
  br label %if.end55, !dbg !21908

if.end55:                                         ; preds = %if.end54, %if.else38
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end37
  br label %if.end57, !dbg !21909

if.end57:                                         ; preds = %if.end56, %land.lhs.true14, %if.end12
  br label %if.end58, !dbg !21910

if.end58:                                         ; preds = %if.end57, %entry
  %42 = load i32, i32* %ret, align 4, !dbg !21911, !tbaa !2982
  ret i32 %42, !dbg !21912
}

declare dso_local %struct.__acl_ext* @acl_from_mode(i32) #3

declare dso_local i32 @acl_set_fd(i32, %struct.__acl_ext*) #3

declare dso_local i32 @acl_set_file(i8*, i32, %struct.__acl_ext*) #3

declare dso_local i32 @acl_delete_def_file(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #4 !dbg !21913 !ctir !134 {
entry:
  call void @usage(i32 1), !dbg !21914
  ret void, !dbg !21915
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !21916 !ctir !1258 {
entry:
  %retval = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  %arglen = alloca i64, align 8, !ctir !55
  %matchind = alloca i64, align 8, !ctir !566
  %ambiguous = alloca i8, align 1, !ctir !120
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !21917, metadata !DIExpression()), !dbg !21918
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !21919, metadata !DIExpression()), !dbg !21920
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !21921, metadata !DIExpression()), !dbg !21922
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !21923, metadata !DIExpression()), !dbg !21924
  call void @llvm.dbg.declare(metadata i64* %i, metadata !21925, metadata !DIExpression()), !dbg !21926
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !21927, metadata !DIExpression()), !dbg !21928
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !21929, metadata !DIExpression()), !dbg !21930
  store i64 -1, i64* %matchind, align 8, !dbg !21930, !tbaa !3848
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !21931, metadata !DIExpression()), !dbg !21932
  store i8 0, i8* %ambiguous, align 1, !dbg !21932, !tbaa !3106
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !21933, !tbaa !2995
  %call = call i64 @strlen(i8* %0) #14, !dbg !21934
  store i64 %call, i64* %arglen, align 8, !dbg !21935, !tbaa !3848
  store i64 0, i64* %i, align 8, !dbg !21936, !tbaa !3848
  br label %for.cond, !dbg !21938

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !21939, !tbaa !2995
  %2 = load i64, i64* %i, align 8, !dbg !21941, !tbaa !3848
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !21939, !ctir !1260
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !21939, !tbaa !2995
  %tobool = icmp ne i8* %3, null, !dbg !21942
  br i1 %tobool, label %for.body, label %for.end, !dbg !21942

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !21943, !tbaa !2995
  %5 = load i64, i64* %i, align 8, !dbg !21946, !tbaa !3848
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !21943, !ctir !1260
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !21943, !tbaa !2995
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !21947, !tbaa !2995
  %8 = load i64, i64* %arglen, align 8, !dbg !21948, !tbaa !3848
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #14, !dbg !21949
  %tobool3 = icmp ne i32 %call2, 0, !dbg !21949
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !21950

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !21951, !tbaa !2995
  %10 = load i64, i64* %i, align 8, !dbg !21954, !tbaa !3848
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !21951, !ctir !1260
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !21951, !tbaa !2995
  %call5 = call i64 @strlen(i8* %11) #14, !dbg !21955
  %12 = load i64, i64* %arglen, align 8, !dbg !21956, !tbaa !3848
  %cmp = icmp eq i64 %call5, %12, !dbg !21957
  br i1 %cmp, label %if.then6, label %if.else, !dbg !21958

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !21959, !tbaa !3848
  store i64 %13, i64* %retval, align 8, !dbg !21960
  br label %return, !dbg !21960

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !21961, !tbaa !3848
  %cmp7 = icmp eq i64 %14, -1, !dbg !21963
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !21964

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !21965, !tbaa !3848
  store i64 %15, i64* %matchind, align 8, !dbg !21966, !tbaa !3848
  br label %if.end16, !dbg !21967

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !21968, !tbaa !2995
  %cmp10 = icmp eq i8* %16, null, !dbg !21971
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !21972

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !21973, !tbaa !2995
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !21974, !tbaa !3848
  %19 = load i64, i64* %matchind, align 8, !dbg !21975, !tbaa !3848
  %mul = mul i64 %18, %19, !dbg !21976
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !21977
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !21978, !tbaa !2995
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !21979, !tbaa !3848
  %22 = load i64, i64* %i, align 8, !dbg !21980, !tbaa !3848
  %mul11 = mul i64 %21, %22, !dbg !21981
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !21982
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !21983, !tbaa !3848
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #14, !dbg !21984
  %tobool14 = icmp ne i32 %call13, 0, !dbg !21984
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !21985

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !21986, !tbaa !3106
  br label %if.end, !dbg !21988

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !21989

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !21990

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !21991, !tbaa !3848
  %inc = add i64 %24, 1, !dbg !21991
  store i64 %inc, i64* %i, align 8, !dbg !21991, !tbaa !3848
  br label %for.cond, !dbg !21992, !llvm.loop !21993

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !21995, !tbaa !3106
  %tobool19 = trunc i8 %25 to i1, !dbg !21995
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !21997

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !21998
  br label %return, !dbg !21998

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !21999, !tbaa !3848
  store i64 %26, i64* %retval, align 8, !dbg !22000
  br label %return, !dbg !22000

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !22001
  ret i64 %27, !dbg !22001
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #4 !dbg !22002 !ctir !1261 {
entry:
  %context.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %problem.addr = alloca i64, align 8
  %format = alloca i8*, align 8, !ctir !115
  store i8* %context, i8** %context.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !22003, metadata !DIExpression()), !dbg !22004
  store i8* %value, i8** %value.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !22005, metadata !DIExpression()), !dbg !22006
  store i64 %problem, i64* %problem.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !22007, metadata !DIExpression()), !dbg !22008
  call void @llvm.dbg.declare(metadata i8** %format, metadata !22009, metadata !DIExpression()), !dbg !22010
  %0 = load i64, i64* %problem.addr, align 8, !dbg !22011, !tbaa !3848
  %cmp = icmp eq i64 %0, -1, !dbg !22012
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !22011

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.453, i64 0, i64 0)) #10, !dbg !22013
  br label %cond.end, !dbg !22011

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.454, i64 0, i64 0)) #10, !dbg !22014
  br label %cond.end, !dbg !22011

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !22011
  store i8* %cond, i8** %format, align 8, !dbg !22010, !tbaa !2995
  %1 = load i8*, i8** %format, align 8, !dbg !22015, !tbaa !2995
  %2 = load i8*, i8** %value.addr, align 8, !dbg !22016, !tbaa !2995
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !22017
  %3 = load i8*, i8** %context.addr, align 8, !dbg !22018, !tbaa !2995
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !22019
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !22020
  ret void, !dbg !22021
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #4 !dbg !22022 !ctir !1263 {
entry:
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  %last_val = alloca i8*, align 8, !ctir !115
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !22023, metadata !DIExpression()), !dbg !22024
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !22025, metadata !DIExpression()), !dbg !22026
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !22027, metadata !DIExpression()), !dbg !22028
  call void @llvm.dbg.declare(metadata i64* %i, metadata !22029, metadata !DIExpression()), !dbg !22030
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !22031, metadata !DIExpression()), !dbg !22032
  store i8* null, i8** %last_val, align 8, !dbg !22032, !tbaa !2995
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.455, i64 0, i64 0)) #10, !dbg !22033
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !22033, !tbaa !2995
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !22033
  store i64 0, i64* %i, align 8, !dbg !22034, !tbaa !3848
  br label %for.cond, !dbg !22036

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !22037, !tbaa !2995
  %2 = load i64, i64* %i, align 8, !dbg !22039, !tbaa !3848
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !22037, !ctir !1260
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !22037, !tbaa !2995
  %tobool = icmp ne i8* %3, null, !dbg !22040
  br i1 %tobool, label %for.body, label %for.end, !dbg !22040

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !22041, !tbaa !3848
  %cmp = icmp eq i64 %4, 0, !dbg !22043
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !22044

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !22045, !tbaa !2995
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !22046, !tbaa !2995
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !22047, !tbaa !3848
  %8 = load i64, i64* %i, align 8, !dbg !22048, !tbaa !3848
  %mul = mul i64 %7, %8, !dbg !22049
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !22050
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !22051, !tbaa !3848
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #14, !dbg !22052
  %tobool3 = icmp ne i32 %call2, 0, !dbg !22052
  br i1 %tobool3, label %if.then, label %if.else, !dbg !22053

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !22054, !tbaa !2995
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !22056, !tbaa !2995
  %12 = load i64, i64* %i, align 8, !dbg !22057, !tbaa !3848
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !22056, !ctir !1260
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !22056, !tbaa !2995
  %call5 = call i8* @quote(i8* %13), !dbg !22058
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.456, i64 0, i64 0), i8* %call5), !dbg !22059
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !22060, !tbaa !2995
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !22061, !tbaa !3848
  %16 = load i64, i64* %i, align 8, !dbg !22062, !tbaa !3848
  %mul7 = mul i64 %15, %16, !dbg !22063
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !22064
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !22065, !tbaa !2995
  br label %if.end, !dbg !22066

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !22067, !tbaa !2995
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !22069, !tbaa !2995
  %19 = load i64, i64* %i, align 8, !dbg !22070, !tbaa !3848
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !22069, !ctir !1260
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !22069, !tbaa !2995
  %call10 = call i8* @quote(i8* %20), !dbg !22071
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.457, i64 0, i64 0), i8* %call10), !dbg !22072
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !22073

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !22074, !tbaa !3848
  %inc = add i64 %21, 1, !dbg !22074
  store i64 %inc, i64* %i, align 8, !dbg !22074, !tbaa !3848
  br label %for.cond, !dbg !22075, !llvm.loop !22076

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !22078, !tbaa !2995
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !22078
  ret void, !dbg !22079
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #4 !dbg !22080 !ctir !1299 {
entry:
  %retval = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %exit_fn.addr = alloca void ()*, align 8
  %res = alloca i64, align 8, !ctir !566
  store i8* %context, i8** %context.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !22081, metadata !DIExpression()), !dbg !22082
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !22083, metadata !DIExpression()), !dbg !22084
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !22085, metadata !DIExpression()), !dbg !22086
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !22087, metadata !DIExpression()), !dbg !22088
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !22089, metadata !DIExpression()), !dbg !22090
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !22091, metadata !DIExpression()), !dbg !22092
  call void @llvm.dbg.declare(metadata i64* %res, metadata !22093, metadata !DIExpression()), !dbg !22094
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !22095, !tbaa !2995
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !22096, !tbaa !2995
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !22097, !tbaa !2995
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !22098, !tbaa !3848
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #14, !dbg !22099
  store i64 %call, i64* %res, align 8, !dbg !22094, !tbaa !3848
  %4 = load i64, i64* %res, align 8, !dbg !22100, !tbaa !3848
  %cmp = icmp sge i64 %4, 0, !dbg !22102
  br i1 %cmp, label %if.then, label %if.end, !dbg !22103

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !22104, !tbaa !3848
  store i64 %5, i64* %retval, align 8, !dbg !22105
  br label %return, !dbg !22105

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !22106, !tbaa !2995
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !22107, !tbaa !2995
  %8 = load i64, i64* %res, align 8, !dbg !22108, !tbaa !3848
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !22109
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !22110, !tbaa !2995
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !22111, !tbaa !2995
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !22112, !tbaa !3848
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !22113
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !22114, !tbaa !2995
  call void %12(), !dbg !22115
  store i64 -1, i64* %retval, align 8, !dbg !22116
  br label %return, !dbg !22116

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !22117
  ret i64 %13, !dbg !22117
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !22118 !ctir !1301 {
entry:
  %retval = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  store i8* %value, i8** %value.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !22119, metadata !DIExpression()), !dbg !22120
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !22121, metadata !DIExpression()), !dbg !22122
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !22123, metadata !DIExpression()), !dbg !22124
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !22125, metadata !DIExpression()), !dbg !22126
  call void @llvm.dbg.declare(metadata i64* %i, metadata !22127, metadata !DIExpression()), !dbg !22128
  store i64 0, i64* %i, align 8, !dbg !22129, !tbaa !3848
  br label %for.cond, !dbg !22131

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !22132, !tbaa !2995
  %1 = load i64, i64* %i, align 8, !dbg !22134, !tbaa !3848
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !22132, !ctir !1260
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !22132, !tbaa !2995
  %tobool = icmp ne i8* %2, null, !dbg !22135
  br i1 %tobool, label %for.body, label %for.end, !dbg !22135

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !22136, !tbaa !2995
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !22138, !tbaa !2995
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !22139, !tbaa !3848
  %6 = load i64, i64* %i, align 8, !dbg !22140, !tbaa !3848
  %mul = mul i64 %5, %6, !dbg !22141
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !22142
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !22143, !tbaa !3848
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #14, !dbg !22144
  %tobool1 = icmp ne i32 %call, 0, !dbg !22144
  br i1 %tobool1, label %if.end, label %if.then, !dbg !22145

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !22146, !tbaa !2995
  %9 = load i64, i64* %i, align 8, !dbg !22147, !tbaa !3848
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !22146, !ctir !1260
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !22146, !tbaa !2995
  store i8* %10, i8** %retval, align 8, !dbg !22148
  br label %return, !dbg !22148

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !22149

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !22150, !tbaa !3848
  %inc = add i64 %11, 1, !dbg !22150
  store i64 %inc, i64* %i, align 8, !dbg !22150, !tbaa !3848
  br label %for.cond, !dbg !22151, !llvm.loop !22152

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !22154
  br label %return, !dbg !22154

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !22155
  ret i8* %12, !dbg !22155
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #4 !dbg !22156 !ctir !2568 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !22158, metadata !DIExpression()), !dbg !22159
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22160, metadata !DIExpression()), !dbg !22161
  %0 = load i64, i64* %x.addr, align 8, !dbg !22162, !tbaa !3848
  %1 = load i32, i32* %n.addr, align 4, !dbg !22163, !tbaa !2982
  %sh_prom = zext i32 %1 to i64, !dbg !22164
  %shl = shl i64 %0, %sh_prom, !dbg !22164
  %2 = load i64, i64* %x.addr, align 8, !dbg !22165, !tbaa !3848
  %3 = load i32, i32* %n.addr, align 4, !dbg !22166, !tbaa !2982
  %sub = sub nsw i32 64, %3, !dbg !22167
  %sh_prom1 = zext i32 %sub to i64, !dbg !22168
  %shr = lshr i64 %2, %sh_prom1, !dbg !22168
  %or = or i64 %shl, %shr, !dbg !22169
  ret i64 %or, !dbg !22170
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #4 !dbg !22171 !ctir !2568 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !22172, metadata !DIExpression()), !dbg !22173
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22174, metadata !DIExpression()), !dbg !22175
  %0 = load i64, i64* %x.addr, align 8, !dbg !22176, !tbaa !3848
  %1 = load i32, i32* %n.addr, align 4, !dbg !22177, !tbaa !2982
  %sh_prom = zext i32 %1 to i64, !dbg !22178
  %shr = lshr i64 %0, %sh_prom, !dbg !22178
  %2 = load i64, i64* %x.addr, align 8, !dbg !22179, !tbaa !3848
  %3 = load i32, i32* %n.addr, align 4, !dbg !22180, !tbaa !2982
  %sub = sub nsw i32 64, %3, !dbg !22181
  %sh_prom1 = zext i32 %sub to i64, !dbg !22182
  %shl = shl i64 %2, %sh_prom1, !dbg !22182
  %or = or i64 %shr, %shl, !dbg !22183
  ret i64 %or, !dbg !22184
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #4 !dbg !22185 !ctir !2570 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !22186, metadata !DIExpression()), !dbg !22187
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22188, metadata !DIExpression()), !dbg !22189
  %0 = load i32, i32* %x.addr, align 4, !dbg !22190, !tbaa !2982
  %1 = load i32, i32* %n.addr, align 4, !dbg !22191, !tbaa !2982
  %shl = shl i32 %0, %1, !dbg !22192
  %2 = load i32, i32* %x.addr, align 4, !dbg !22193, !tbaa !2982
  %3 = load i32, i32* %n.addr, align 4, !dbg !22194, !tbaa !2982
  %sub = sub nsw i32 32, %3, !dbg !22195
  %shr = lshr i32 %2, %sub, !dbg !22196
  %or = or i32 %shl, %shr, !dbg !22197
  ret i32 %or, !dbg !22198
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #4 !dbg !22199 !ctir !2570 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !22200, metadata !DIExpression()), !dbg !22201
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22202, metadata !DIExpression()), !dbg !22203
  %0 = load i32, i32* %x.addr, align 4, !dbg !22204, !tbaa !2982
  %1 = load i32, i32* %n.addr, align 4, !dbg !22205, !tbaa !2982
  %shr = lshr i32 %0, %1, !dbg !22206
  %2 = load i32, i32* %x.addr, align 4, !dbg !22207, !tbaa !2982
  %3 = load i32, i32* %n.addr, align 4, !dbg !22208, !tbaa !2982
  %sub = sub nsw i32 32, %3, !dbg !22209
  %shl = shl i32 %2, %sub, !dbg !22210
  %or = or i32 %shr, %shl, !dbg !22211
  ret i32 %or, !dbg !22212
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #4 !dbg !22213 !ctir !2572 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !22214, metadata !DIExpression()), !dbg !22215
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22216, metadata !DIExpression()), !dbg !22217
  %0 = load i64, i64* %x.addr, align 8, !dbg !22218, !tbaa !3848
  %1 = load i32, i32* %n.addr, align 4, !dbg !22219, !tbaa !2982
  %sh_prom = zext i32 %1 to i64, !dbg !22220
  %shl = shl i64 %0, %sh_prom, !dbg !22220
  %2 = load i64, i64* %x.addr, align 8, !dbg !22221, !tbaa !3848
  %3 = load i32, i32* %n.addr, align 4, !dbg !22222, !tbaa !2982
  %conv = sext i32 %3 to i64, !dbg !22222
  %sub = sub i64 64, %conv, !dbg !22223
  %shr = lshr i64 %2, %sub, !dbg !22224
  %or = or i64 %shl, %shr, !dbg !22225
  ret i64 %or, !dbg !22226
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #4 !dbg !22227 !ctir !2572 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !22228, metadata !DIExpression()), !dbg !22229
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22230, metadata !DIExpression()), !dbg !22231
  %0 = load i64, i64* %x.addr, align 8, !dbg !22232, !tbaa !3848
  %1 = load i32, i32* %n.addr, align 4, !dbg !22233, !tbaa !2982
  %sh_prom = zext i32 %1 to i64, !dbg !22234
  %shr = lshr i64 %0, %sh_prom, !dbg !22234
  %2 = load i64, i64* %x.addr, align 8, !dbg !22235, !tbaa !3848
  %3 = load i32, i32* %n.addr, align 4, !dbg !22236, !tbaa !2982
  %conv = sext i32 %3 to i64, !dbg !22236
  %sub = sub i64 64, %conv, !dbg !22237
  %shl = shl i64 %2, %sub, !dbg !22238
  %or = or i64 %shr, %shl, !dbg !22239
  ret i64 %or, !dbg !22240
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #4 !dbg !22241 !ctir !2574 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2, !tbaa !3810
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !22242, metadata !DIExpression()), !dbg !22243
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22244, metadata !DIExpression()), !dbg !22245
  %0 = load i16, i16* %x.addr, align 2, !dbg !22246, !tbaa !3810
  %conv = zext i16 %0 to i32, !dbg !22246
  %1 = load i32, i32* %n.addr, align 4, !dbg !22247, !tbaa !2982
  %shl = shl i32 %conv, %1, !dbg !22248
  %2 = load i16, i16* %x.addr, align 2, !dbg !22249, !tbaa !3810
  %conv1 = zext i16 %2 to i32, !dbg !22249
  %3 = load i32, i32* %n.addr, align 4, !dbg !22250, !tbaa !2982
  %sub = sub nsw i32 16, %3, !dbg !22251
  %shr = ashr i32 %conv1, %sub, !dbg !22252
  %or = or i32 %shl, %shr, !dbg !22253
  %and = and i32 %or, 65535, !dbg !22254
  %conv2 = trunc i32 %and to i16, !dbg !22255
  ret i16 %conv2, !dbg !22256
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #4 !dbg !22257 !ctir !2574 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2, !tbaa !3810
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !22258, metadata !DIExpression()), !dbg !22259
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22260, metadata !DIExpression()), !dbg !22261
  %0 = load i16, i16* %x.addr, align 2, !dbg !22262, !tbaa !3810
  %conv = zext i16 %0 to i32, !dbg !22262
  %1 = load i32, i32* %n.addr, align 4, !dbg !22263, !tbaa !2982
  %shr = ashr i32 %conv, %1, !dbg !22264
  %2 = load i16, i16* %x.addr, align 2, !dbg !22265, !tbaa !3810
  %conv1 = zext i16 %2 to i32, !dbg !22265
  %3 = load i32, i32* %n.addr, align 4, !dbg !22266, !tbaa !2982
  %sub = sub nsw i32 16, %3, !dbg !22267
  %shl = shl i32 %conv1, %sub, !dbg !22268
  %or = or i32 %shr, %shl, !dbg !22269
  %and = and i32 %or, 65535, !dbg !22270
  %conv2 = trunc i32 %and to i16, !dbg !22271
  ret i16 %conv2, !dbg !22272
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #4 !dbg !22273 !ctir !2578 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1, !tbaa !3657
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !22274, metadata !DIExpression()), !dbg !22275
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22276, metadata !DIExpression()), !dbg !22277
  %0 = load i8, i8* %x.addr, align 1, !dbg !22278, !tbaa !3657
  %conv = zext i8 %0 to i32, !dbg !22278
  %1 = load i32, i32* %n.addr, align 4, !dbg !22279, !tbaa !2982
  %shl = shl i32 %conv, %1, !dbg !22280
  %2 = load i8, i8* %x.addr, align 1, !dbg !22281, !tbaa !3657
  %conv1 = zext i8 %2 to i32, !dbg !22281
  %3 = load i32, i32* %n.addr, align 4, !dbg !22282, !tbaa !2982
  %sub = sub nsw i32 8, %3, !dbg !22283
  %shr = ashr i32 %conv1, %sub, !dbg !22284
  %or = or i32 %shl, %shr, !dbg !22285
  %and = and i32 %or, 255, !dbg !22286
  %conv2 = trunc i32 %and to i8, !dbg !22287
  ret i8 %conv2, !dbg !22288
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #4 !dbg !22289 !ctir !2578 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1, !tbaa !3657
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !22290, metadata !DIExpression()), !dbg !22291
  store i32 %n, i32* %n.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22292, metadata !DIExpression()), !dbg !22293
  %0 = load i8, i8* %x.addr, align 1, !dbg !22294, !tbaa !3657
  %conv = zext i8 %0 to i32, !dbg !22294
  %1 = load i32, i32* %n.addr, align 4, !dbg !22295, !tbaa !2982
  %shr = ashr i32 %conv, %1, !dbg !22296
  %2 = load i8, i8* %x.addr, align 1, !dbg !22297, !tbaa !3657
  %conv1 = zext i8 %2 to i32, !dbg !22297
  %3 = load i32, i32* %n.addr, align 4, !dbg !22298, !tbaa !2982
  %sub = sub nsw i32 8, %3, !dbg !22299
  %shl = shl i32 %conv1, %sub, !dbg !22300
  %or = or i32 %shr, %shl, !dbg !22301
  %and = and i32 %or, 255, !dbg !22302
  %conv2 = trunc i32 %and to i8, !dbg !22303
  ret i8 %conv2, !dbg !22304
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #9 !dbg !22305 !ctir !1876 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %p1 = alloca i8*, align 8, !ctir !464
  %p2 = alloca i8*, align 8, !ctir !464
  %c1 = alloca i8, align 1, !ctir !466
  %c2 = alloca i8, align 1, !ctir !466
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !22307, metadata !DIExpression()), !dbg !22308
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !22309, metadata !DIExpression()), !dbg !22310
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !22311, metadata !DIExpression()), !dbg !22312
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !22313, !tbaa !2995
  store i8* %0, i8** %p1, align 8, !dbg !22312, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !22314, metadata !DIExpression()), !dbg !22315
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !22316, !tbaa !2995
  store i8* %1, i8** %p2, align 8, !dbg !22315, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !22317, metadata !DIExpression()), !dbg !22318
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !22319, metadata !DIExpression()), !dbg !22320
  %2 = load i8*, i8** %p1, align 8, !dbg !22321, !tbaa !2995
  %3 = load i8*, i8** %p2, align 8, !dbg !22323, !tbaa !2995
  %cmp = icmp eq i8* %2, %3, !dbg !22324
  br i1 %cmp, label %if.then, label %if.end, !dbg !22325

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !22326
  br label %return, !dbg !22326

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !22327

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !22328, !tbaa !2995
  %5 = load i8, i8* %4, align 1, !dbg !22330, !tbaa !3657, !ctir !465
  %conv = zext i8 %5 to i32, !dbg !22330
  %call = call i32 @c_tolower(i32 %conv), !dbg !22331
  %conv1 = trunc i32 %call to i8, !dbg !22331
  store i8 %conv1, i8* %c1, align 1, !dbg !22332, !tbaa !3657
  %6 = load i8*, i8** %p2, align 8, !dbg !22333, !tbaa !2995
  %7 = load i8, i8* %6, align 1, !dbg !22334, !tbaa !3657, !ctir !465
  %conv2 = zext i8 %7 to i32, !dbg !22334
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !22335
  %conv4 = trunc i32 %call3 to i8, !dbg !22335
  store i8 %conv4, i8* %c2, align 1, !dbg !22336, !tbaa !3657
  %8 = load i8, i8* %c1, align 1, !dbg !22337, !tbaa !3657
  %conv5 = zext i8 %8 to i32, !dbg !22337
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !22339
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !22340

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !22341

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !22342, !tbaa !2995
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !22342
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !22342, !tbaa !2995
  %10 = load i8*, i8** %p2, align 8, !dbg !22343, !tbaa !2995
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !22343
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !22343, !tbaa !2995
  br label %do.cond, !dbg !22344

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !22345, !tbaa !3657
  %conv11 = zext i8 %11 to i32, !dbg !22345
  %12 = load i8, i8* %c2, align 1, !dbg !22346, !tbaa !3657
  %conv12 = zext i8 %12 to i32, !dbg !22346
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !22347
  br i1 %cmp13, label %do.body, label %do.end, !dbg !22344, !llvm.loop !22348

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !22350, !tbaa !3657
  %conv15 = zext i8 %13 to i32, !dbg !22350
  %14 = load i8, i8* %c2, align 1, !dbg !22352, !tbaa !3657
  %conv16 = zext i8 %14 to i32, !dbg !22352
  %sub = sub nsw i32 %conv15, %conv16, !dbg !22353
  store i32 %sub, i32* %retval, align 4, !dbg !22354
  br label %return, !dbg !22354

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !22355
  ret i32 %15, !dbg !22355
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #4 !dbg !22356 !ctir !2588 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1, !ctir !2624
  %prev_fail = alloca i8, align 1, !ctir !2624
  %fclose_fail = alloca i8, align 1, !ctir !2624
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !22358, metadata !DIExpression()), !dbg !22359
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !22360, metadata !DIExpression()), !dbg !22361
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !22362, !tbaa !2995
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #10, !dbg !22363
  %cmp = icmp ne i64 %call, 0, !dbg !22364
  %frombool = zext i1 %cmp to i8, !dbg !22361
  store i8 %frombool, i8* %some_pending, align 1, !dbg !22361, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !22365, metadata !DIExpression()), !dbg !22366
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !22367, !tbaa !2995
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #10, !dbg !22367
  %cmp2 = icmp ne i32 %call1, 0, !dbg !22368
  %frombool3 = zext i1 %cmp2 to i8, !dbg !22366
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !22366, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !22369, metadata !DIExpression()), !dbg !22370
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !22371, !tbaa !2995
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !22372
  %cmp5 = icmp ne i32 %call4, 0, !dbg !22373
  %frombool6 = zext i1 %cmp5 to i8, !dbg !22370
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !22370, !tbaa !3106
  %3 = load i8, i8* %prev_fail, align 1, !dbg !22374, !tbaa !3106
  %tobool = trunc i8 %3 to i1, !dbg !22374
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !22376

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !22377, !tbaa !3106
  %tobool7 = trunc i8 %4 to i1, !dbg !22377
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !22378

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !22379, !tbaa !3106
  %tobool8 = trunc i8 %5 to i1, !dbg !22379
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !22380

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #15, !dbg !22381
  %6 = load i32, i32* %call10, align 4, !dbg !22381, !tbaa !2982, !ctir !7
  %cmp11 = icmp ne i32 %6, 9, !dbg !22382
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !22383

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !22384, !tbaa !3106
  %tobool12 = trunc i8 %7 to i1, !dbg !22384
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !22387

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #15, !dbg !22388
  store i32 0, i32* %call14, align 4, !dbg !22389, !tbaa !2982, !ctir !7
  br label %if.end, !dbg !22388

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !22390
  br label %return, !dbg !22390

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !22391
  br label %return, !dbg !22391

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !22392
  ret i32 %8, !dbg !22392
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cycle_check_init(%struct.cycle_check_state* %state) #4 !dbg !22393 !ctir !2628 {
entry:
  %state.addr = alloca %struct.cycle_check_state*, align 8
  store %struct.cycle_check_state* %state, %struct.cycle_check_state** %state.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %state.addr, metadata !22395, metadata !DIExpression()), !dbg !22396
  %0 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22397, !tbaa !2995
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %0, i32 0, i32 1, !dbg !22398, !ctir !2631
  store i64 0, i64* %chdir_counter, align 8, !dbg !22399, !tbaa !20052, !ctir !456
  %1 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22400, !tbaa !2995
  %magic = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %1, i32 0, i32 2, !dbg !22401, !ctir !2631
  store i32 9827862, i32* %magic, align 8, !dbg !22402, !tbaa !22403, !ctir !7
  ret void, !dbg !22404
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @cycle_check(%struct.cycle_check_state* %state, %struct.stat* %sb) #4 !dbg !22405 !ctir !2640 {
entry:
  %retval = alloca i1, align 1
  %state.addr = alloca %struct.cycle_check_state*, align 8
  %sb.addr = alloca %struct.stat*, align 8
  store %struct.cycle_check_state* %state, %struct.cycle_check_state** %state.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %state.addr, metadata !22406, metadata !DIExpression()), !dbg !22407
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !22408, metadata !DIExpression()), !dbg !22409
  %0 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22410, !tbaa !2995
  %magic = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %0, i32 0, i32 2, !dbg !22410, !ctir !2631
  %1 = load i32, i32* %magic, align 8, !dbg !22410, !tbaa !22403, !ctir !7
  %cmp = icmp eq i32 %1, 9827862, !dbg !22410
  br i1 %cmp, label %if.then, label %if.else, !dbg !22413

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !22413

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.470, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.471, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.cycle_check, i64 0, i64 0)) #13, !dbg !22410
  unreachable, !dbg !22410

if.end:                                           ; preds = %if.then
  %2 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22414, !tbaa !2995
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %2, i32 0, i32 1, !dbg !22416, !ctir !2631
  %3 = load i64, i64* %chdir_counter, align 8, !dbg !22416, !tbaa !20052, !ctir !456
  %tobool = icmp ne i64 %3, 0, !dbg !22414
  br i1 %tobool, label %land.lhs.true, label %if.end8, !dbg !22417

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !22418, !tbaa !2995
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !22418, !ctir !2643
  %5 = load i64, i64* %st_ino, align 8, !dbg !22418, !tbaa !3870, !ctir !228
  %6 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22418, !tbaa !2995
  %dev_ino = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %6, i32 0, i32 0, !dbg !22418, !ctir !2631
  %st_ino1 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino, i32 0, i32 0, !dbg !22418, !ctir !2634
  %7 = load i64, i64* %st_ino1, align 8, !dbg !22418, !tbaa !20057, !ctir !227
  %cmp2 = icmp eq i64 %5, %7, !dbg !22418
  br i1 %cmp2, label %land.lhs.true3, label %if.end8, !dbg !22418

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !22418, !tbaa !2995
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 0, !dbg !22418, !ctir !2643
  %9 = load i64, i64* %st_dev, align 8, !dbg !22418, !tbaa !3873, !ctir !231
  %10 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22418, !tbaa !2995
  %dev_ino4 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %10, i32 0, i32 0, !dbg !22418, !ctir !2631
  %st_dev5 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino4, i32 0, i32 1, !dbg !22418, !ctir !2634
  %11 = load i64, i64* %st_dev5, align 8, !dbg !22418, !tbaa !20058, !ctir !230
  %cmp6 = icmp eq i64 %9, %11, !dbg !22418
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !22419

if.then7:                                         ; preds = %land.lhs.true3
  store i1 true, i1* %retval, align 1, !dbg !22420
  br label %return, !dbg !22420

if.end8:                                          ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  %12 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22421, !tbaa !2995
  %chdir_counter9 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %12, i32 0, i32 1, !dbg !22423, !ctir !2631
  %13 = load i64, i64* %chdir_counter9, align 8, !dbg !22424, !tbaa !20052, !ctir !456
  %inc = add i64 %13, 1, !dbg !22424
  store i64 %inc, i64* %chdir_counter9, align 8, !dbg !22424, !tbaa !20052, !ctir !456
  %call = call zeroext i1 @is_zero_or_power_of_two(i64 %inc), !dbg !22425
  br i1 %call, label %if.then10, label %if.end21, !dbg !22426

if.then10:                                        ; preds = %if.end8
  %14 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22427, !tbaa !2995
  %chdir_counter11 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %14, i32 0, i32 1, !dbg !22430, !ctir !2631
  %15 = load i64, i64* %chdir_counter11, align 8, !dbg !22430, !tbaa !20052, !ctir !456
  %cmp12 = icmp eq i64 %15, 0, !dbg !22431
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !22432

if.then13:                                        ; preds = %if.then10
  store i1 true, i1* %retval, align 1, !dbg !22433
  br label %return, !dbg !22433

if.end14:                                         ; preds = %if.then10
  %16 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !22434, !tbaa !2995
  %st_dev15 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 0, !dbg !22435, !ctir !2643
  %17 = load i64, i64* %st_dev15, align 8, !dbg !22435, !tbaa !3873, !ctir !231
  %18 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22436, !tbaa !2995
  %dev_ino16 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %18, i32 0, i32 0, !dbg !22437, !ctir !2631
  %st_dev17 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino16, i32 0, i32 1, !dbg !22438, !ctir !2634
  store i64 %17, i64* %st_dev17, align 8, !dbg !22439, !tbaa !20058, !ctir !230
  %19 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !22440, !tbaa !2995
  %st_ino18 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 1, !dbg !22441, !ctir !2643
  %20 = load i64, i64* %st_ino18, align 8, !dbg !22441, !tbaa !3870, !ctir !228
  %21 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22442, !tbaa !2995
  %dev_ino19 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %21, i32 0, i32 0, !dbg !22443, !ctir !2631
  %st_ino20 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino19, i32 0, i32 0, !dbg !22444, !ctir !2634
  store i64 %20, i64* %st_ino20, align 8, !dbg !22445, !tbaa !20057, !ctir !227
  br label %if.end21, !dbg !22446

if.end21:                                         ; preds = %if.end14, %if.end8
  store i1 false, i1* %retval, align 1, !dbg !22447
  br label %return, !dbg !22447

return:                                           ; preds = %if.end21, %if.then13, %if.then7
  %22 = load i1, i1* %retval, align 1, !dbg !22448
  ret i1 %22, !dbg !22448
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_zero_or_power_of_two(i64 %i) #4 !dbg !22449 !ctir !2665 {
entry:
  %i.addr = alloca i64, align 8
  store i64 %i, i64* %i.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !22450, metadata !DIExpression()), !dbg !22451
  %0 = load i64, i64* %i.addr, align 8, !dbg !22452, !tbaa !3848
  %1 = load i64, i64* %i.addr, align 8, !dbg !22453, !tbaa !3848
  %sub = sub i64 %1, 1, !dbg !22454
  %and = and i64 %0, %sub, !dbg !22455
  %cmp = icmp eq i64 %and, 0, !dbg !22456
  ret i1 %cmp, !dbg !22457
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendir_safer(i8* %name) #4 !dbg !22458 !ctir !2670 {
entry:
  %name.addr = alloca i8*, align 8
  %dp = alloca %struct.__dirstream*, align 8, !ctir !607
  %fd = alloca i32, align 4, !ctir !7
  %newdp = alloca %struct.__dirstream*, align 8, !ctir !607
  %e = alloca i32, align 4, !ctir !7
  %f = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !22460, metadata !DIExpression()), !dbg !22461
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !22462, metadata !DIExpression()), !dbg !22463
  %0 = load i8*, i8** %name.addr, align 8, !dbg !22464, !tbaa !2995
  %call = call %struct.__dirstream* @opendir(i8* %0), !dbg !22465
  store %struct.__dirstream* %call, %struct.__dirstream** %dp, align 8, !dbg !22463, !tbaa !2995
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !22466, !tbaa !2995
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !22466
  br i1 %tobool, label %if.then, label %if.end17, !dbg !22468

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !22469, metadata !DIExpression()), !dbg !22471
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !22472, !tbaa !2995
  %call1 = call i32 @dirfd(%struct.__dirstream* %2) #10, !dbg !22473
  store i32 %call1, i32* %fd, align 4, !dbg !22471, !tbaa !2982
  %3 = load i32, i32* %fd, align 4, !dbg !22474, !tbaa !2982
  %cmp = icmp sle i32 0, %3, !dbg !22476
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !22477

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* %fd, align 4, !dbg !22478, !tbaa !2982
  %cmp2 = icmp sle i32 %4, 2, !dbg !22479
  br i1 %cmp2, label %if.then3, label %if.end16, !dbg !22480

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %newdp, metadata !22481, metadata !DIExpression()), !dbg !22483
  call void @llvm.dbg.declare(metadata i32* %e, metadata !22484, metadata !DIExpression()), !dbg !22485
  call void @llvm.dbg.declare(metadata i32* %f, metadata !22486, metadata !DIExpression()), !dbg !22487
  %5 = load i32, i32* %fd, align 4, !dbg !22488, !tbaa !2982
  %call4 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %5, i32 1030, i32 3), !dbg !22489
  store i32 %call4, i32* %f, align 4, !dbg !22487, !tbaa !2982
  %6 = load i32, i32* %f, align 4, !dbg !22490, !tbaa !2982
  %cmp5 = icmp slt i32 %6, 0, !dbg !22492
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !22493

if.then6:                                         ; preds = %if.then3
  %call7 = call i32* @__errno_location() #15, !dbg !22494
  %7 = load i32, i32* %call7, align 4, !dbg !22494, !tbaa !2982, !ctir !7
  store i32 %7, i32* %e, align 4, !dbg !22496, !tbaa !2982
  store %struct.__dirstream* null, %struct.__dirstream** %newdp, align 8, !dbg !22497, !tbaa !2995
  br label %if.end13, !dbg !22498

if.else:                                          ; preds = %if.then3
  %8 = load i32, i32* %f, align 4, !dbg !22499, !tbaa !2982
  %call8 = call %struct.__dirstream* @fdopendir(i32 %8), !dbg !22501
  store %struct.__dirstream* %call8, %struct.__dirstream** %newdp, align 8, !dbg !22502, !tbaa !2995
  %call9 = call i32* @__errno_location() #15, !dbg !22503
  %9 = load i32, i32* %call9, align 4, !dbg !22503, !tbaa !2982, !ctir !7
  store i32 %9, i32* %e, align 4, !dbg !22504, !tbaa !2982
  %10 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !22505, !tbaa !2995
  %tobool10 = icmp ne %struct.__dirstream* %10, null, !dbg !22505
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !22507

if.then11:                                        ; preds = %if.else
  %11 = load i32, i32* %f, align 4, !dbg !22508, !tbaa !2982
  %call12 = call i32 @close(i32 %11), !dbg !22509
  br label %if.end, !dbg !22509

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then6
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !22510, !tbaa !2995
  %call14 = call i32 @closedir(%struct.__dirstream* %12), !dbg !22511
  %13 = load i32, i32* %e, align 4, !dbg !22512, !tbaa !2982
  %call15 = call i32* @__errno_location() #15, !dbg !22513
  store i32 %13, i32* %call15, align 4, !dbg !22514, !tbaa !2982, !ctir !7
  %14 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !22515, !tbaa !2995
  store %struct.__dirstream* %14, %struct.__dirstream** %dp, align 8, !dbg !22516, !tbaa !2995
  br label %if.end16, !dbg !22517

if.end16:                                         ; preds = %if.end13, %land.lhs.true, %if.then
  br label %if.end17, !dbg !22518

if.end17:                                         ; preds = %if.end16, %entry
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !22519, !tbaa !2995
  ret %struct.__dirstream* %15, !dbg !22520
}

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gettime(%struct.timespec* nonnull %ts) #4 !dbg !22521 !ctir !2675 {
entry:
  %ts.addr = alloca %struct.timespec*, align 8
  store %struct.timespec* %ts, %struct.timespec** %ts.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts.addr, metadata !22523, metadata !DIExpression()), !dbg !22524
  %0 = load %struct.timespec*, %struct.timespec** %ts.addr, align 8, !dbg !22525, !tbaa !2995
  %call = call i32 @clock_gettime(i32 0, %struct.timespec* %0) #10, !dbg !22526
  ret void, !dbg !22527
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @current_timespec() #4 !dbg !22528 !ctir !2682 {
entry:
  %retval = alloca %struct.timespec, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !22529, metadata !DIExpression()), !dbg !22530
  call void @gettime(%struct.timespec* %retval), !dbg !22531
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !22532
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !22532
  ret { i64, i64 } %1, !dbg !22532
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #4 !dbg !22533 !ctir !307 {
entry:
  %category.addr = alloca i32, align 4
  %hard = alloca i8, align 1, !ctir !120
  %p = alloca i8*, align 8, !ctir !115
  store i32 %category, i32* %category.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !22535, metadata !DIExpression()), !dbg !22536
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !22537, metadata !DIExpression()), !dbg !22538
  store i8 1, i8* %hard, align 1, !dbg !22538, !tbaa !3106
  call void @llvm.dbg.declare(metadata i8** %p, metadata !22539, metadata !DIExpression()), !dbg !22540
  %0 = load i32, i32* %category.addr, align 4, !dbg !22541, !tbaa !2982
  %call = call i8* @setlocale(i32 %0, i8* null) #10, !dbg !22542
  store i8* %call, i8** %p, align 8, !dbg !22540, !tbaa !2995
  %1 = load i8*, i8** %p, align 8, !dbg !22543, !tbaa !2995
  %tobool = icmp ne i8* %1, null, !dbg !22543
  br i1 %tobool, label %if.then, label %if.end5, !dbg !22545

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !22546, !tbaa !2995
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.478, i64 0, i64 0)) #14, !dbg !22551
  %cmp = icmp eq i32 %call1, 0, !dbg !22552
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !22553

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !22554, !tbaa !2995
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.479, i64 0, i64 0)) #14, !dbg !22555
  %cmp3 = icmp eq i32 %call2, 0, !dbg !22556
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !22557

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !22558, !tbaa !3106
  br label %if.end, !dbg !22559

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !22560

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !22561, !tbaa !3106
  %tobool6 = trunc i8 %4 to i1, !dbg !22561
  ret i1 %tobool6, !dbg !22562
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_pjw(i8* %x, i64 %tablesize) #9 !dbg !22563 !ctir !547 {
entry:
  %x.addr = alloca i8*, align 8
  %tablesize.addr = alloca i64, align 8
  %s = alloca i8*, align 8, !ctir !115
  %h = alloca i64, align 8, !ctir !55
  store i8* %x, i8** %x.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !22565, metadata !DIExpression()), !dbg !22566
  store i64 %tablesize, i64* %tablesize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %tablesize.addr, metadata !22567, metadata !DIExpression()), !dbg !22568
  call void @llvm.dbg.declare(metadata i8** %s, metadata !22569, metadata !DIExpression()), !dbg !22570
  call void @llvm.dbg.declare(metadata i64* %h, metadata !22571, metadata !DIExpression()), !dbg !22572
  store i64 0, i64* %h, align 8, !dbg !22572, !tbaa !3848
  %0 = load i8*, i8** %x.addr, align 8, !dbg !22573, !tbaa !2995
  store i8* %0, i8** %s, align 8, !dbg !22575, !tbaa !2995
  br label %for.cond, !dbg !22576

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !22577, !tbaa !2995
  %2 = load i8, i8* %1, align 1, !dbg !22579, !tbaa !3657, !ctir !116
  %tobool = icmp ne i8 %2, 0, !dbg !22580
  br i1 %tobool, label %for.body, label %for.end, !dbg !22580

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8, !dbg !22581, !tbaa !2995
  %4 = load i8, i8* %3, align 1, !dbg !22582, !tbaa !3657, !ctir !116
  %conv = sext i8 %4 to i64, !dbg !22582
  %5 = load i64, i64* %h, align 8, !dbg !22583, !tbaa !3848
  %shl = shl i64 %5, 9, !dbg !22584
  %6 = load i64, i64* %h, align 8, !dbg !22585, !tbaa !3848
  %shr = lshr i64 %6, 55, !dbg !22586
  %or = or i64 %shl, %shr, !dbg !22587
  %add = add i64 %conv, %or, !dbg !22588
  store i64 %add, i64* %h, align 8, !dbg !22589, !tbaa !3848
  br label %for.inc, !dbg !22590

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %s, align 8, !dbg !22591, !tbaa !2995
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !22591
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !22591, !tbaa !2995
  br label %for.cond, !dbg !22592, !llvm.loop !22593

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %h, align 8, !dbg !22595, !tbaa !3848
  %9 = load i64, i64* %tablesize.addr, align 8, !dbg !22596, !tbaa !3848
  %rem = urem i64 %8, %9, !dbg !22597
  ret i64 %rem, !dbg !22598
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @i_ring_init(%struct.I_ring* %ir, i32 %default_val) #4 !dbg !22599 !ctir !2693 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  %default_val.addr = alloca i32, align 4
  %i = alloca i32, align 4, !ctir !7
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22601, metadata !DIExpression()), !dbg !22602
  store i32 %default_val, i32* %default_val.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %default_val.addr, metadata !22603, metadata !DIExpression()), !dbg !22604
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22605, metadata !DIExpression()), !dbg !22606
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22607, !tbaa !2995
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 4, !dbg !22608, !ctir !2696
  store i8 1, i8* %ir_empty, align 4, !dbg !22609, !tbaa !22610, !ctir !120
  %1 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22611, !tbaa !2995
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %1, i32 0, i32 2, !dbg !22612, !ctir !2696
  store i32 0, i32* %ir_front, align 4, !dbg !22613, !tbaa !22614, !ctir !70
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22615, !tbaa !2995
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 3, !dbg !22616, !ctir !2696
  store i32 0, i32* %ir_back, align 4, !dbg !22617, !tbaa !22618, !ctir !70
  store i32 0, i32* %i, align 4, !dbg !22619, !tbaa !2982
  br label %for.cond, !dbg !22621

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !22622, !tbaa !2982
  %cmp = icmp slt i32 %3, 4, !dbg !22624
  br i1 %cmp, label %for.body, label %for.end, !dbg !22625

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %default_val.addr, align 4, !dbg !22626, !tbaa !2982
  %5 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22627, !tbaa !2995
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %5, i32 0, i32 0, !dbg !22628, !ctir !2696
  %6 = load i32, i32* %i, align 4, !dbg !22629, !tbaa !2982
  %idxprom = sext i32 %6 to i64, !dbg !22627
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !22627, !ctir !1446
  store i32 %4, i32* %arrayidx, align 4, !dbg !22630, !tbaa !2982
  br label %for.inc, !dbg !22627

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !22631, !tbaa !2982
  %inc = add nsw i32 %7, 1, !dbg !22631
  store i32 %inc, i32* %i, align 4, !dbg !22631, !tbaa !2982
  br label %for.cond, !dbg !22632, !llvm.loop !22633

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* %default_val.addr, align 4, !dbg !22635, !tbaa !2982
  %9 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22636, !tbaa !2995
  %ir_default_val = getelementptr inbounds %struct.I_ring, %struct.I_ring* %9, i32 0, i32 1, !dbg !22637, !ctir !2696
  store i32 %8, i32* %ir_default_val, align 4, !dbg !22638, !tbaa !22639, !ctir !7
  ret void, !dbg !22640
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @i_ring_empty(%struct.I_ring* %ir) #9 !dbg !22641 !ctir !2704 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22642, metadata !DIExpression()), !dbg !22643
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22644, !tbaa !2995
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 4, !dbg !22645, !ctir !2707
  %1 = load i8, i8* %ir_empty, align 4, !dbg !22645, !tbaa !22610
  %tobool = trunc i8 %1 to i1, !dbg !22645, !ctir !120
  ret i1 %tobool, !dbg !22646
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @i_ring_push(%struct.I_ring* %ir, i32 %val) #4 !dbg !22647 !ctir !2708 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  %val.addr = alloca i32, align 4
  %dest_idx = alloca i32, align 4, !ctir !70
  %old_val = alloca i32, align 4, !ctir !7
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22648, metadata !DIExpression()), !dbg !22649
  store i32 %val, i32* %val.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !22650, metadata !DIExpression()), !dbg !22651
  call void @llvm.dbg.declare(metadata i32* %dest_idx, metadata !22652, metadata !DIExpression()), !dbg !22653
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22654, !tbaa !2995
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 2, !dbg !22655, !ctir !2696
  %1 = load i32, i32* %ir_front, align 4, !dbg !22655, !tbaa !22614, !ctir !70
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22656, !tbaa !2995
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 4, !dbg !22657, !ctir !2696
  %3 = load i8, i8* %ir_empty, align 4, !dbg !22657, !tbaa !22610
  %tobool = trunc i8 %3 to i1, !dbg !22657, !ctir !120
  %lnot = xor i1 %tobool, true, !dbg !22658
  %lnot.ext = zext i1 %lnot to i32, !dbg !22658
  %add = add i32 %1, %lnot.ext, !dbg !22659
  %rem = urem i32 %add, 4, !dbg !22660
  store i32 %rem, i32* %dest_idx, align 4, !dbg !22653, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %old_val, metadata !22661, metadata !DIExpression()), !dbg !22662
  %4 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22663, !tbaa !2995
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %4, i32 0, i32 0, !dbg !22664, !ctir !2696
  %5 = load i32, i32* %dest_idx, align 4, !dbg !22665, !tbaa !2982
  %idxprom = zext i32 %5 to i64, !dbg !22663
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !22663, !ctir !1446
  %6 = load i32, i32* %arrayidx, align 4, !dbg !22663, !tbaa !2982
  store i32 %6, i32* %old_val, align 4, !dbg !22662, !tbaa !2982
  %7 = load i32, i32* %val.addr, align 4, !dbg !22666, !tbaa !2982
  %8 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22667, !tbaa !2995
  %ir_data1 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 0, !dbg !22668, !ctir !2696
  %9 = load i32, i32* %dest_idx, align 4, !dbg !22669, !tbaa !2982
  %idxprom2 = zext i32 %9 to i64, !dbg !22667
  %arrayidx3 = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data1, i64 0, i64 %idxprom2, !dbg !22667, !ctir !1446
  store i32 %7, i32* %arrayidx3, align 4, !dbg !22670, !tbaa !2982
  %10 = load i32, i32* %dest_idx, align 4, !dbg !22671, !tbaa !2982
  %11 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22672, !tbaa !2995
  %ir_front4 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %11, i32 0, i32 2, !dbg !22673, !ctir !2696
  store i32 %10, i32* %ir_front4, align 4, !dbg !22674, !tbaa !22614, !ctir !70
  %12 = load i32, i32* %dest_idx, align 4, !dbg !22675, !tbaa !2982
  %13 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22677, !tbaa !2995
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %13, i32 0, i32 3, !dbg !22678, !ctir !2696
  %14 = load i32, i32* %ir_back, align 4, !dbg !22678, !tbaa !22618, !ctir !70
  %cmp = icmp eq i32 %12, %14, !dbg !22679
  br i1 %cmp, label %if.then, label %if.end, !dbg !22680

if.then:                                          ; preds = %entry
  %15 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22681, !tbaa !2995
  %ir_back5 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %15, i32 0, i32 3, !dbg !22682, !ctir !2696
  %16 = load i32, i32* %ir_back5, align 4, !dbg !22682, !tbaa !22618, !ctir !70
  %17 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22683, !tbaa !2995
  %ir_empty6 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %17, i32 0, i32 4, !dbg !22684, !ctir !2696
  %18 = load i8, i8* %ir_empty6, align 4, !dbg !22684, !tbaa !22610
  %tobool7 = trunc i8 %18 to i1, !dbg !22684, !ctir !120
  %lnot8 = xor i1 %tobool7, true, !dbg !22685
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !22685
  %add10 = add i32 %16, %lnot.ext9, !dbg !22686
  %rem11 = urem i32 %add10, 4, !dbg !22687
  %19 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22688, !tbaa !2995
  %ir_back12 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %19, i32 0, i32 3, !dbg !22689, !ctir !2696
  store i32 %rem11, i32* %ir_back12, align 4, !dbg !22690, !tbaa !22618, !ctir !70
  br label %if.end, !dbg !22688

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22691, !tbaa !2995
  %ir_empty13 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %20, i32 0, i32 4, !dbg !22692, !ctir !2696
  store i8 0, i8* %ir_empty13, align 4, !dbg !22693, !tbaa !22610, !ctir !120
  %21 = load i32, i32* %old_val, align 4, !dbg !22694, !tbaa !2982
  ret i32 %21, !dbg !22695
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @i_ring_pop(%struct.I_ring* %ir) #4 !dbg !22696 !ctir !2710 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  %top_val = alloca i32, align 4, !ctir !7
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22697, metadata !DIExpression()), !dbg !22698
  call void @llvm.dbg.declare(metadata i32* %top_val, metadata !22699, metadata !DIExpression()), !dbg !22700
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22701, !tbaa !2995
  %call = call zeroext i1 @i_ring_empty(%struct.I_ring* %0) #14, !dbg !22703
  br i1 %call, label %if.then, label %if.end, !dbg !22704

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !22705
  unreachable, !dbg !22705

if.end:                                           ; preds = %entry
  %1 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22706, !tbaa !2995
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %1, i32 0, i32 0, !dbg !22707, !ctir !2696
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22708, !tbaa !2995
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 2, !dbg !22709, !ctir !2696
  %3 = load i32, i32* %ir_front, align 4, !dbg !22709, !tbaa !22614, !ctir !70
  %idxprom = zext i32 %3 to i64, !dbg !22706
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !22706, !ctir !1446
  %4 = load i32, i32* %arrayidx, align 4, !dbg !22706, !tbaa !2982
  store i32 %4, i32* %top_val, align 4, !dbg !22710, !tbaa !2982
  %5 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22711, !tbaa !2995
  %ir_default_val = getelementptr inbounds %struct.I_ring, %struct.I_ring* %5, i32 0, i32 1, !dbg !22712, !ctir !2696
  %6 = load i32, i32* %ir_default_val, align 4, !dbg !22712, !tbaa !22639, !ctir !7
  %7 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22713, !tbaa !2995
  %ir_data1 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %7, i32 0, i32 0, !dbg !22714, !ctir !2696
  %8 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22715, !tbaa !2995
  %ir_front2 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 2, !dbg !22716, !ctir !2696
  %9 = load i32, i32* %ir_front2, align 4, !dbg !22716, !tbaa !22614, !ctir !70
  %idxprom3 = zext i32 %9 to i64, !dbg !22713
  %arrayidx4 = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data1, i64 0, i64 %idxprom3, !dbg !22713, !ctir !1446
  store i32 %6, i32* %arrayidx4, align 4, !dbg !22717, !tbaa !2982
  %10 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22718, !tbaa !2995
  %ir_front5 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %10, i32 0, i32 2, !dbg !22720, !ctir !2696
  %11 = load i32, i32* %ir_front5, align 4, !dbg !22720, !tbaa !22614, !ctir !70
  %12 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22721, !tbaa !2995
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %12, i32 0, i32 3, !dbg !22722, !ctir !2696
  %13 = load i32, i32* %ir_back, align 4, !dbg !22722, !tbaa !22618, !ctir !70
  %cmp = icmp eq i32 %11, %13, !dbg !22723
  br i1 %cmp, label %if.then6, label %if.else, !dbg !22724

if.then6:                                         ; preds = %if.end
  %14 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22725, !tbaa !2995
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %14, i32 0, i32 4, !dbg !22726, !ctir !2696
  store i8 1, i8* %ir_empty, align 4, !dbg !22727, !tbaa !22610, !ctir !120
  br label %if.end9, !dbg !22725

if.else:                                          ; preds = %if.end
  %15 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22728, !tbaa !2995
  %ir_front7 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %15, i32 0, i32 2, !dbg !22729, !ctir !2696
  %16 = load i32, i32* %ir_front7, align 4, !dbg !22729, !tbaa !22614, !ctir !70
  %add = add i32 %16, 4, !dbg !22730
  %sub = sub i32 %add, 1, !dbg !22731
  %rem = urem i32 %sub, 4, !dbg !22732
  %17 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22733, !tbaa !2995
  %ir_front8 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %17, i32 0, i32 2, !dbg !22734, !ctir !2696
  store i32 %rem, i32* %ir_front8, align 4, !dbg !22735, !tbaa !22614, !ctir !70
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  %18 = load i32, i32* %top_val, align 4, !dbg !22736, !tbaa !2982
  ret i32 %18, !dbg !22737
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #4 !dbg !22738 !ctir !2715 {
entry:
  %codeset = alloca i8*, align 8, !ctir !115
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !22740, metadata !DIExpression()), !dbg !22741
  %call = call i8* @nl_langinfo(i32 14) #10, !dbg !22742
  store i8* %call, i8** %codeset, align 8, !dbg !22743, !tbaa !2995
  %0 = load i8*, i8** %codeset, align 8, !dbg !22744, !tbaa !2995
  %cmp = icmp eq i8* %0, null, !dbg !22746
  br i1 %cmp, label %if.then, label %if.end, !dbg !22747

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.492, i64 0, i64 0), i8** %codeset, align 8, !dbg !22748, !tbaa !2995
  br label %if.end, !dbg !22749

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !22750, !tbaa !2995
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !22750, !ctir !115
  %2 = load i8, i8* %arrayidx, align 1, !dbg !22750, !tbaa !3657
  %conv = sext i8 %2 to i32, !dbg !22750
  %cmp1 = icmp eq i32 %conv, 0, !dbg !22754
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !22755

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.493, i64 0, i64 0), i8** %codeset, align 8, !dbg !22756, !tbaa !2995
  br label %if.end4, !dbg !22757

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !22758, !tbaa !2995
  ret i8* %3, !dbg !22759
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @openat_safer(i32 %fd, i8* %file, i32 %flags, ...) #4 !dbg !22760 !ctir !2719 {
entry:
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !160
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2721
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !22764, metadata !DIExpression()), !dbg !22765
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !22766, metadata !DIExpression()), !dbg !22767
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !22768, metadata !DIExpression()), !dbg !22769
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !22770, metadata !DIExpression()), !dbg !22771
  store i32 0, i32* %mode, align 4, !dbg !22771, !tbaa !2982
  %0 = load i32, i32* %flags.addr, align 4, !dbg !22772, !tbaa !2982
  %and = and i32 %0, 64, !dbg !22774
  %tobool = icmp ne i32 %and, 0, !dbg !22774
  br i1 %tobool, label %if.then, label %if.end, !dbg !22775

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !22776, metadata !DIExpression()), !dbg !22778
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22779
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !22779
  call void @llvm.va_start(i8* %arraydecay1), !dbg !22779
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22780
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !22780
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !22780
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !22780
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !22780

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !22780
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !22780
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !22780
  %3 = bitcast i8* %2 to i32*, !dbg !22780
  %4 = add i32 %gp_offset, 8, !dbg !22780
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !22780
  br label %vaarg.end, !dbg !22780

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !22780
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !22780
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !22780
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !22780
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !22780
  br label %vaarg.end, !dbg !22780

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !22780
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !22780
  store i32 %6, i32* %mode, align 4, !dbg !22781, !tbaa !2982
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22782
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !22782
  call void @llvm.va_end(i8* %arraydecay34), !dbg !22782
  br label %if.end, !dbg !22783

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !22784, !tbaa !2982
  %8 = load i8*, i8** %file.addr, align 8, !dbg !22785, !tbaa !2995
  %9 = load i32, i32* %flags.addr, align 4, !dbg !22786, !tbaa !2982
  %10 = load i32, i32* %mode, align 4, !dbg !22787, !tbaa !2982
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %7, i8* %8, i32 %9, i32 %10), !dbg !22788
  %call5 = call i32 @fd_safer(i32 %call), !dbg !22789
  ret i32 %call5, !dbg !22790
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_new(%struct.randread_source* %source) #4 !dbg !22791 !ctir !2733 {
entry:
  %source.addr = alloca %struct.randread_source*, align 8
  %s = alloca %struct.randint_source*, align 8, !ctir !2735
  store %struct.randread_source* %source, %struct.randread_source** %source.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source.addr, metadata !22792, metadata !DIExpression()), !dbg !22793
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s, metadata !22794, metadata !DIExpression()), !dbg !22795
  %call = call noalias i8* @xmalloc(i64 24), !dbg !22796
  %0 = bitcast i8* %call to %struct.randint_source*, !dbg !22796
  store %struct.randint_source* %0, %struct.randint_source** %s, align 8, !dbg !22795, !tbaa !2995
  %1 = load %struct.randread_source*, %struct.randread_source** %source.addr, align 8, !dbg !22797, !tbaa !2995
  %2 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22798, !tbaa !2995
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 0, !dbg !22799, !ctir !2736
  store %struct.randread_source* %1, %struct.randread_source** %source1, align 8, !dbg !22800, !tbaa !22801, !ctir !2740
  %3 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22803, !tbaa !2995
  %randmax = getelementptr inbounds %struct.randint_source, %struct.randint_source* %3, i32 0, i32 2, !dbg !22804, !ctir !2736
  store i64 0, i64* %randmax, align 8, !dbg !22805, !tbaa !22806, !ctir !2744
  %4 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22807, !tbaa !2995
  %randnum = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 1, !dbg !22808, !ctir !2736
  store i64 0, i64* %randnum, align 8, !dbg !22809, !tbaa !22810, !ctir !2744
  %5 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22811, !tbaa !2995
  ret %struct.randint_source* %5, !dbg !22812
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_all_new(i8* %name, i64 %bytes_bound) #4 !dbg !22813 !ctir !2746 {
entry:
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !2740
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !22814, metadata !DIExpression()), !dbg !22815
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !22816, metadata !DIExpression()), !dbg !22817
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !22818, metadata !DIExpression()), !dbg !22819
  %0 = load i8*, i8** %name.addr, align 8, !dbg !22820, !tbaa !2995
  %1 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22821, !tbaa !3848
  %call = call %struct.randread_source* @randread_new(i8* %0, i64 %1), !dbg !22822
  store %struct.randread_source* %call, %struct.randread_source** %source, align 8, !dbg !22819, !tbaa !2995
  %2 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22823, !tbaa !2995
  %tobool = icmp ne %struct.randread_source* %2, null, !dbg !22823
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !22823

cond.true:                                        ; preds = %entry
  %3 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22824, !tbaa !2995
  %call1 = call %struct.randint_source* @randint_new(%struct.randread_source* %3), !dbg !22825
  br label %cond.end, !dbg !22823

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !22823

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.randint_source* [ %call1, %cond.true ], [ null, %cond.false ], !dbg !22823
  ret %struct.randint_source* %cond, !dbg !22826
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local %struct.randread_source* @randint_get_source(%struct.randint_source* %s) #9 !dbg !22827 !ctir !2748 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22828, metadata !DIExpression()), !dbg !22829
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22830, !tbaa !2995
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !22831, !ctir !2751
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22831, !tbaa !22801, !ctir !2740
  ret %struct.randread_source* %1, !dbg !22832
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @randint_genmax(%struct.randint_source* %s, i64 %genmax) #4 !dbg !22833 !ctir !2752 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca %struct.randint_source*, align 8
  %genmax.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !2740
  %randnum = alloca i64, align 8, !ctir !2744
  %randmax = alloca i64, align 8, !ctir !2744
  %choices = alloca i64, align 8, !ctir !2744
  %i = alloca i64, align 8, !ctir !55
  %rmax = alloca i64, align 8, !ctir !2744
  %buf = alloca [8 x i8], align 1, !ctir !2754
  %excess_choices = alloca i64, align 8, !ctir !2744
  %unusable_choices = alloca i64, align 8, !ctir !2744
  %last_usable_choice = alloca i64, align 8, !ctir !2744
  %reduced_randnum = alloca i64, align 8, !ctir !2744
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22834, metadata !DIExpression()), !dbg !22835
  store i64 %genmax, i64* %genmax.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %genmax.addr, metadata !22836, metadata !DIExpression()), !dbg !22837
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !22838, metadata !DIExpression()), !dbg !22839
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22840, !tbaa !2995
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !22841, !ctir !2736
  %1 = load %struct.randread_source*, %struct.randread_source** %source1, align 8, !dbg !22841, !tbaa !22801, !ctir !2740
  store %struct.randread_source* %1, %struct.randread_source** %source, align 8, !dbg !22839, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %randnum, metadata !22842, metadata !DIExpression()), !dbg !22843
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22844, !tbaa !2995
  %randnum2 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 1, !dbg !22845, !ctir !2736
  %3 = load i64, i64* %randnum2, align 8, !dbg !22845, !tbaa !22810, !ctir !2744
  store i64 %3, i64* %randnum, align 8, !dbg !22843, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %randmax, metadata !22846, metadata !DIExpression()), !dbg !22847
  %4 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22848, !tbaa !2995
  %randmax3 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 2, !dbg !22849, !ctir !2736
  %5 = load i64, i64* %randmax3, align 8, !dbg !22849, !tbaa !22806, !ctir !2744
  store i64 %5, i64* %randmax, align 8, !dbg !22847, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %choices, metadata !22850, metadata !DIExpression()), !dbg !22851
  %6 = load i64, i64* %genmax.addr, align 8, !dbg !22852, !tbaa !3848
  %add = add i64 %6, 1, !dbg !22853
  store i64 %add, i64* %choices, align 8, !dbg !22851, !tbaa !3848
  br label %while.body, !dbg !22854

while.body:                                       ; preds = %entry, %if.end31
  %7 = load i64, i64* %randmax, align 8, !dbg !22855, !tbaa !3848
  %8 = load i64, i64* %genmax.addr, align 8, !dbg !22858, !tbaa !3848
  %cmp = icmp ult i64 %7, %8, !dbg !22859
  br i1 %cmp, label %if.then, label %if.end, !dbg !22860

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %i, metadata !22861, metadata !DIExpression()), !dbg !22863
  store i64 0, i64* %i, align 8, !dbg !22863, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %rmax, metadata !22864, metadata !DIExpression()), !dbg !22865
  %9 = load i64, i64* %randmax, align 8, !dbg !22866, !tbaa !3848
  store i64 %9, i64* %rmax, align 8, !dbg !22865, !tbaa !3848
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !22867, metadata !DIExpression()), !dbg !22868
  br label %do.body, !dbg !22869

do.body:                                          ; preds = %do.cond, %if.then
  %10 = load i64, i64* %rmax, align 8, !dbg !22870, !tbaa !3848
  %call = call i64 @shift_left(i64 %10), !dbg !22872
  %add4 = add i64 %call, 255, !dbg !22873
  store i64 %add4, i64* %rmax, align 8, !dbg !22874, !tbaa !3848
  %11 = load i64, i64* %i, align 8, !dbg !22875, !tbaa !3848
  %inc = add i64 %11, 1, !dbg !22875
  store i64 %inc, i64* %i, align 8, !dbg !22875, !tbaa !3848
  br label %do.cond, !dbg !22876

do.cond:                                          ; preds = %do.body
  %12 = load i64, i64* %rmax, align 8, !dbg !22877, !tbaa !3848
  %13 = load i64, i64* %genmax.addr, align 8, !dbg !22878, !tbaa !3848
  %cmp5 = icmp ult i64 %12, %13, !dbg !22879
  br i1 %cmp5, label %do.body, label %do.end, !dbg !22876, !llvm.loop !22880

do.end:                                           ; preds = %do.cond
  %14 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22882, !tbaa !2995
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !22883
  %15 = load i64, i64* %i, align 8, !dbg !22884, !tbaa !3848
  call void @randread(%struct.randread_source* %14, i8* %arraydecay, i64 %15), !dbg !22885
  store i64 0, i64* %i, align 8, !dbg !22886, !tbaa !3848
  br label %do.body6, !dbg !22887

do.body6:                                         ; preds = %do.cond12, %do.end
  %16 = load i64, i64* %randnum, align 8, !dbg !22888, !tbaa !3848
  %call7 = call i64 @shift_left(i64 %16), !dbg !22890
  %17 = load i64, i64* %i, align 8, !dbg !22891, !tbaa !3848
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 %17, !dbg !22892, !ctir !2754
  %18 = load i8, i8* %arrayidx, align 1, !dbg !22892, !tbaa !3657
  %conv = zext i8 %18 to i64, !dbg !22892
  %add8 = add i64 %call7, %conv, !dbg !22893
  store i64 %add8, i64* %randnum, align 8, !dbg !22894, !tbaa !3848
  %19 = load i64, i64* %randmax, align 8, !dbg !22895, !tbaa !3848
  %call9 = call i64 @shift_left(i64 %19), !dbg !22896
  %add10 = add i64 %call9, 255, !dbg !22897
  store i64 %add10, i64* %randmax, align 8, !dbg !22898, !tbaa !3848
  %20 = load i64, i64* %i, align 8, !dbg !22899, !tbaa !3848
  %inc11 = add i64 %20, 1, !dbg !22899
  store i64 %inc11, i64* %i, align 8, !dbg !22899, !tbaa !3848
  br label %do.cond12, !dbg !22900

do.cond12:                                        ; preds = %do.body6
  %21 = load i64, i64* %randmax, align 8, !dbg !22901, !tbaa !3848
  %22 = load i64, i64* %genmax.addr, align 8, !dbg !22902, !tbaa !3848
  %cmp13 = icmp ult i64 %21, %22, !dbg !22903
  br i1 %cmp13, label %do.body6, label %do.end15, !dbg !22900, !llvm.loop !22904

do.end15:                                         ; preds = %do.cond12
  br label %if.end, !dbg !22906

if.end:                                           ; preds = %do.end15, %while.body
  %23 = load i64, i64* %randmax, align 8, !dbg !22907, !tbaa !3848
  %24 = load i64, i64* %genmax.addr, align 8, !dbg !22909, !tbaa !3848
  %cmp16 = icmp eq i64 %23, %24, !dbg !22910
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !22911

if.then18:                                        ; preds = %if.end
  %25 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22912, !tbaa !2995
  %randmax19 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %25, i32 0, i32 2, !dbg !22914, !ctir !2736
  store i64 0, i64* %randmax19, align 8, !dbg !22915, !tbaa !22806, !ctir !2744
  %26 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22916, !tbaa !2995
  %randnum20 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %26, i32 0, i32 1, !dbg !22917, !ctir !2736
  store i64 0, i64* %randnum20, align 8, !dbg !22918, !tbaa !22810, !ctir !2744
  %27 = load i64, i64* %randnum, align 8, !dbg !22919, !tbaa !3848
  store i64 %27, i64* %retval, align 8, !dbg !22920
  br label %return, !dbg !22920

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %excess_choices, metadata !22921, metadata !DIExpression()), !dbg !22923
  %28 = load i64, i64* %randmax, align 8, !dbg !22924, !tbaa !3848
  %29 = load i64, i64* %genmax.addr, align 8, !dbg !22925, !tbaa !3848
  %sub = sub i64 %28, %29, !dbg !22926
  store i64 %sub, i64* %excess_choices, align 8, !dbg !22923, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %unusable_choices, metadata !22927, metadata !DIExpression()), !dbg !22928
  %30 = load i64, i64* %excess_choices, align 8, !dbg !22929, !tbaa !3848
  %31 = load i64, i64* %choices, align 8, !dbg !22930, !tbaa !3848
  %rem = urem i64 %30, %31, !dbg !22931
  store i64 %rem, i64* %unusable_choices, align 8, !dbg !22928, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %last_usable_choice, metadata !22932, metadata !DIExpression()), !dbg !22933
  %32 = load i64, i64* %randmax, align 8, !dbg !22934, !tbaa !3848
  %33 = load i64, i64* %unusable_choices, align 8, !dbg !22935, !tbaa !3848
  %sub21 = sub i64 %32, %33, !dbg !22936
  store i64 %sub21, i64* %last_usable_choice, align 8, !dbg !22933, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %reduced_randnum, metadata !22937, metadata !DIExpression()), !dbg !22938
  %34 = load i64, i64* %randnum, align 8, !dbg !22939, !tbaa !3848
  %35 = load i64, i64* %choices, align 8, !dbg !22940, !tbaa !3848
  %rem22 = urem i64 %34, %35, !dbg !22941
  store i64 %rem22, i64* %reduced_randnum, align 8, !dbg !22938, !tbaa !3848
  %36 = load i64, i64* %randnum, align 8, !dbg !22942, !tbaa !3848
  %37 = load i64, i64* %last_usable_choice, align 8, !dbg !22944, !tbaa !3848
  %cmp23 = icmp ule i64 %36, %37, !dbg !22945
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !22946

if.then25:                                        ; preds = %if.else
  %38 = load i64, i64* %randnum, align 8, !dbg !22947, !tbaa !3848
  %39 = load i64, i64* %choices, align 8, !dbg !22949, !tbaa !3848
  %div = udiv i64 %38, %39, !dbg !22950
  %40 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22951, !tbaa !2995
  %randnum26 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %40, i32 0, i32 1, !dbg !22952, !ctir !2736
  store i64 %div, i64* %randnum26, align 8, !dbg !22953, !tbaa !22810, !ctir !2744
  %41 = load i64, i64* %excess_choices, align 8, !dbg !22954, !tbaa !3848
  %42 = load i64, i64* %choices, align 8, !dbg !22955, !tbaa !3848
  %div27 = udiv i64 %41, %42, !dbg !22956
  %43 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22957, !tbaa !2995
  %randmax28 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %43, i32 0, i32 2, !dbg !22958, !ctir !2736
  store i64 %div27, i64* %randmax28, align 8, !dbg !22959, !tbaa !22806, !ctir !2744
  %44 = load i64, i64* %reduced_randnum, align 8, !dbg !22960, !tbaa !3848
  store i64 %44, i64* %retval, align 8, !dbg !22961
  br label %return, !dbg !22961

if.end29:                                         ; preds = %if.else
  %45 = load i64, i64* %reduced_randnum, align 8, !dbg !22962, !tbaa !3848
  store i64 %45, i64* %randnum, align 8, !dbg !22963, !tbaa !3848
  %46 = load i64, i64* %unusable_choices, align 8, !dbg !22964, !tbaa !3848
  %sub30 = sub i64 %46, 1, !dbg !22965
  store i64 %sub30, i64* %randmax, align 8, !dbg !22966, !tbaa !3848
  br label %if.end31

if.end31:                                         ; preds = %if.end29
  br label %while.body, !dbg !22854, !llvm.loop !22967

return:                                           ; preds = %if.then25, %if.then18
  %47 = load i64, i64* %retval, align 8, !dbg !22969
  ret i64 %47, !dbg !22969
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @shift_left(i64 %x) #4 !dbg !22970 !ctir !2759 {
entry:
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !22971, metadata !DIExpression()), !dbg !22972
  %0 = load i64, i64* %x.addr, align 8, !dbg !22973, !tbaa !3848
  %shl = shl i64 %0, 8, !dbg !22974
  ret i64 %shl, !dbg !22975
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randint_free(%struct.randint_source* %s) #4 !dbg !22976 !ctir !2755 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22977, metadata !DIExpression()), !dbg !22978
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22979, !tbaa !2995
  %1 = bitcast %struct.randint_source* %0 to i8*, !dbg !22979
  call void @explicit_bzero(i8* %1, i64 24) #10, !dbg !22980
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22981, !tbaa !2995
  %3 = bitcast %struct.randint_source* %2 to i8*, !dbg !22981
  call void @free(i8* %3) #10, !dbg !22982
  ret void, !dbg !22983
}

; Function Attrs: nounwind
declare dso_local void @explicit_bzero(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randint_all_free(%struct.randint_source* %s) #4 !dbg !22984 !ctir !2757 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  %r = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22985, metadata !DIExpression()), !dbg !22986
  call void @llvm.dbg.declare(metadata i32* %r, metadata !22987, metadata !DIExpression()), !dbg !22988
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22989, !tbaa !2995
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !22990, !ctir !2736
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22990, !tbaa !22801, !ctir !2740
  %call = call i32 @randread_free(%struct.randread_source* %1), !dbg !22991
  store i32 %call, i32* %r, align 4, !dbg !22988, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %e, metadata !22992, metadata !DIExpression()), !dbg !22993
  %call1 = call i32* @__errno_location() #15, !dbg !22994
  %2 = load i32, i32* %call1, align 4, !dbg !22994, !tbaa !2982, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !22993, !tbaa !2982
  %3 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22995, !tbaa !2995
  call void @randint_free(%struct.randint_source* %3), !dbg !22996
  %4 = load i32, i32* %e, align 4, !dbg !22997, !tbaa !2982
  %call2 = call i32* @__errno_location() #15, !dbg !22998
  store i32 %4, i32* %call2, align 4, !dbg !22999, !tbaa !2982, !ctir !7
  %5 = load i32, i32* %r, align 4, !dbg !23000, !tbaa !2982
  ret i32 %5, !dbg !23001
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randread_source* @randread_new(i8* %name, i64 %bytes_bound) #4 !dbg !23002 !ctir !2764 {
entry:
  %retval = alloca %struct.randread_source*, align 8
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !2771
  %s = alloca %struct.randread_source*, align 8, !ctir !2766
  store i8* %name, i8** %name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !23003, metadata !DIExpression()), !dbg !23004
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !23005, metadata !DIExpression()), !dbg !23006
  %0 = load i64, i64* %bytes_bound.addr, align 8, !dbg !23007, !tbaa !3848
  %cmp = icmp eq i64 %0, 0, !dbg !23009
  br i1 %cmp, label %if.then, label %if.else, !dbg !23010

if.then:                                          ; preds = %entry
  %call = call %struct.randread_source* @simple_new(%struct._IO_FILE* null, i8* null), !dbg !23011
  store %struct.randread_source* %call, %struct.randread_source** %retval, align 8, !dbg !23012
  br label %return, !dbg !23012

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !23013, metadata !DIExpression()), !dbg !23015
  store %struct._IO_FILE* null, %struct._IO_FILE** %source, align 8, !dbg !23015, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !23016, metadata !DIExpression()), !dbg !23017
  %1 = load i8*, i8** %name.addr, align 8, !dbg !23018, !tbaa !2995
  %tobool = icmp ne i8* %1, null, !dbg !23018
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !23020

if.then1:                                         ; preds = %if.else
  %2 = load i8*, i8** %name.addr, align 8, !dbg !23021, !tbaa !2995
  %call2 = call %struct._IO_FILE* @fopen_safer(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.504, i64 0, i64 0)), !dbg !23023
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %source, align 8, !dbg !23024, !tbaa !2995
  %tobool3 = icmp ne %struct._IO_FILE* %call2, null, !dbg !23024
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !23025

if.then4:                                         ; preds = %if.then1
  store %struct.randread_source* null, %struct.randread_source** %retval, align 8, !dbg !23026
  br label %return, !dbg !23026

if.end:                                           ; preds = %if.then1
  br label %if.end5, !dbg !23027

if.end5:                                          ; preds = %if.end, %if.else
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23028, !tbaa !2995
  %4 = load i8*, i8** %name.addr, align 8, !dbg !23029, !tbaa !2995
  %call6 = call %struct.randread_source* @simple_new(%struct._IO_FILE* %3, i8* %4), !dbg !23030
  store %struct.randread_source* %call6, %struct.randread_source** %s, align 8, !dbg !23031, !tbaa !2995
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23032, !tbaa !2995
  %tobool7 = icmp ne %struct._IO_FILE* %5, null, !dbg !23032
  br i1 %tobool7, label %if.then8, label %if.else11, !dbg !23034

if.then8:                                         ; preds = %if.end5
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23035, !tbaa !2995
  %7 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23036, !tbaa !2995
  %buf = getelementptr inbounds %struct.randread_source, %struct.randread_source* %7, i32 0, i32 3, !dbg !23037, !ctir !2767
  %c = bitcast %union.anon.147* %buf to [4096 x i8]*, !dbg !23038
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %c, i64 0, i64 0, !dbg !23036
  %8 = load i64, i64* %bytes_bound.addr, align 8, !dbg !23039, !tbaa !3848
  %cmp9 = icmp ult i64 4096, %8, !dbg !23039
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !23039

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !23039

cond.false:                                       ; preds = %if.then8
  %9 = load i64, i64* %bytes_bound.addr, align 8, !dbg !23039, !tbaa !3848
  br label %cond.end, !dbg !23039

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 4096, %cond.true ], [ %9, %cond.false ], !dbg !23039
  %call10 = call i32 @setvbuf(%struct._IO_FILE* %6, i8* %arraydecay, i32 0, i64 %cond) #10, !dbg !23040
  br label %if.end19, !dbg !23040

if.else11:                                        ; preds = %if.end5
  %10 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23041, !tbaa !2995
  %buf12 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 3, !dbg !23043, !ctir !2767
  %isaac = bitcast %union.anon.147* %buf12 to %struct.isaac*, !dbg !23044
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac, i32 0, i32 0, !dbg !23045, !ctir !2818
  store i64 0, i64* %buffered, align 8, !dbg !23046, !tbaa !3657, !ctir !55
  %11 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23047, !tbaa !2995
  %buf13 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %11, i32 0, i32 3, !dbg !23048, !ctir !2767
  %isaac14 = bitcast %union.anon.147* %buf13 to %struct.isaac*, !dbg !23049
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac14, i32 0, i32 1, !dbg !23050, !ctir !2818
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %state, i32 0, i32 0, !dbg !23051, !ctir !2822
  %arraydecay15 = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 0, !dbg !23047
  %12 = bitcast i64* %arraydecay15 to i8*, !dbg !23047
  %13 = load i64, i64* %bytes_bound.addr, align 8, !dbg !23052, !tbaa !3848
  call void @get_nonce(i8* %12, i64 2048, i64 %13), !dbg !23053
  %14 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23054, !tbaa !2995
  %buf16 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %14, i32 0, i32 3, !dbg !23055, !ctir !2767
  %isaac17 = bitcast %union.anon.147* %buf16 to %struct.isaac*, !dbg !23056
  %state18 = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac17, i32 0, i32 1, !dbg !23057, !ctir !2818
  call void @isaac_seed(%struct.isaac_state* %state18), !dbg !23058
  br label %if.end19

if.end19:                                         ; preds = %if.else11, %cond.end
  %15 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23059, !tbaa !2995
  store %struct.randread_source* %15, %struct.randread_source** %retval, align 8, !dbg !23060
  br label %return, !dbg !23060

return:                                           ; preds = %if.end19, %if.then4, %if.then
  %16 = load %struct.randread_source*, %struct.randread_source** %retval, align 8, !dbg !23061
  ret %struct.randread_source* %16, !dbg !23061
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randread_source* @simple_new(%struct._IO_FILE* %source, i8* %handler_arg) #4 !dbg !23062 !ctir !2849 {
entry:
  %source.addr = alloca %struct._IO_FILE*, align 8
  %handler_arg.addr = alloca i8*, align 8
  %s = alloca %struct.randread_source*, align 8, !ctir !2766
  store %struct._IO_FILE* %source, %struct._IO_FILE** %source.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source.addr, metadata !23063, metadata !DIExpression()), !dbg !23064
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !23065, metadata !DIExpression()), !dbg !23066
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !23067, metadata !DIExpression()), !dbg !23068
  %call = call noalias i8* @xmalloc(i64 4152), !dbg !23069
  %0 = bitcast i8* %call to %struct.randread_source*, !dbg !23069
  store %struct.randread_source* %0, %struct.randread_source** %s, align 8, !dbg !23068, !tbaa !2995
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source.addr, align 8, !dbg !23070, !tbaa !2995
  %2 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23071, !tbaa !2995
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !23072, !ctir !2767
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source1, align 8, !dbg !23073, !tbaa !23074, !ctir !2771
  %3 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23076, !tbaa !2995
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %3, i32 0, i32 1, !dbg !23077, !ctir !2767
  store void (i8*)* @randread_error, void (i8*)** %handler, align 8, !dbg !23078, !tbaa !23079, !ctir !2806
  %4 = load i8*, i8** %handler_arg.addr, align 8, !dbg !23080, !tbaa !2995
  %5 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23081, !tbaa !2995
  %handler_arg2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 2, !dbg !23082, !ctir !2767
  store i8* %4, i8** %handler_arg2, align 8, !dbg !23083, !tbaa !23084, !ctir !425
  %6 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23085, !tbaa !2995
  ret %struct.randread_source* %6, !dbg !23086
}

; Function Attrs: nounwind
declare dso_local i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_nonce(i8* %buffer, i64 %bufsize, i64 %bytes_bound) #4 !dbg !23087 !ctir !2851 {
entry:
  %buffer.addr = alloca i8*, align 8
  %bufsize.addr = alloca i64, align 8
  %bytes_bound.addr = alloca i64, align 8
  %buf = alloca i8*, align 8, !ctir !9
  %seeded = alloca i64, align 8, !ctir !606
  %fd = alloca i32, align 4, !ctir !7
  %v = alloca %struct.timespec, align 8, !ctir !23088
  %nbytes = alloca i64, align 8, !ctir !55
  %v19 = alloca i32, align 4, !ctir !2853
  %nbytes20 = alloca i64, align 8, !ctir !55
  %v34 = alloca i32, align 4, !ctir !2853
  %nbytes35 = alloca i64, align 8, !ctir !55
  %v49 = alloca i32, align 4, !ctir !475
  %nbytes50 = alloca i64, align 8, !ctir !55
  %v64 = alloca i32, align 4, !ctir !475
  %nbytes65 = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !23092, metadata !DIExpression()), !dbg !23093
  store i64 %bufsize, i64* %bufsize.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !23094, metadata !DIExpression()), !dbg !23095
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !23096, metadata !DIExpression()), !dbg !23097
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !23098, metadata !DIExpression()), !dbg !23099
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !23100, !tbaa !2995
  store i8* %0, i8** %buf, align 8, !dbg !23099, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64* %seeded, metadata !23101, metadata !DIExpression()), !dbg !23102
  store i64 0, i64* %seeded, align 8, !dbg !23102, !tbaa !3848
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !23103, metadata !DIExpression()), !dbg !23104
  %call = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.505, i64 0, i64 0), i32 0), !dbg !23105
  store i32 %call, i32* %fd, align 4, !dbg !23104, !tbaa !2982
  %1 = load i32, i32* %fd, align 4, !dbg !23106, !tbaa !2982
  %cmp = icmp sle i32 0, %1, !dbg !23108
  br i1 %cmp, label %if.then, label %if.end6, !dbg !23109

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %fd, align 4, !dbg !23110, !tbaa !2982
  %3 = load i8*, i8** %buf, align 8, !dbg !23112, !tbaa !2995
  %4 = load i64, i64* %bufsize.addr, align 8, !dbg !23113, !tbaa !3848
  %5 = load i64, i64* %bytes_bound.addr, align 8, !dbg !23113, !tbaa !3848
  %cmp1 = icmp ult i64 %4, %5, !dbg !23113
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !23113

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %bufsize.addr, align 8, !dbg !23113, !tbaa !3848
  br label %cond.end, !dbg !23113

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %bytes_bound.addr, align 8, !dbg !23113, !tbaa !3848
  br label %cond.end, !dbg !23113

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !23113
  %call2 = call i64 @read(i32 %2, i8* %3, i64 %cond), !dbg !23114
  store i64 %call2, i64* %seeded, align 8, !dbg !23115, !tbaa !3848
  %8 = load i64, i64* %seeded, align 8, !dbg !23116, !tbaa !3848
  %cmp3 = icmp slt i64 %8, 0, !dbg !23118
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !23119

if.then4:                                         ; preds = %cond.end
  store i64 0, i64* %seeded, align 8, !dbg !23120, !tbaa !3848
  br label %if.end, !dbg !23121

if.end:                                           ; preds = %if.then4, %cond.end
  %9 = load i32, i32* %fd, align 4, !dbg !23122, !tbaa !2982
  %call5 = call i32 @close(i32 %9), !dbg !23123
  br label %if.end6, !dbg !23124

if.end6:                                          ; preds = %if.end, %entry
  %10 = load i64, i64* %seeded, align 8, !dbg !23125, !tbaa !3848
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !23125, !tbaa !3848
  %cmp7 = icmp ult i64 %10, %11, !dbg !23125
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !23127

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.timespec* %v, metadata !23128, metadata !DIExpression()), !dbg !23130
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !23131, metadata !DIExpression()), !dbg !23130
  %12 = load i64, i64* %bufsize.addr, align 8, !dbg !23130, !tbaa !3848
  %13 = load i64, i64* %seeded, align 8, !dbg !23130, !tbaa !3848
  %sub = sub i64 %12, %13, !dbg !23130
  %cmp9 = icmp ult i64 16, %sub, !dbg !23130
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !23130

cond.true10:                                      ; preds = %if.then8
  br label %cond.end13, !dbg !23130

cond.false11:                                     ; preds = %if.then8
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !23130, !tbaa !3848
  %15 = load i64, i64* %seeded, align 8, !dbg !23130, !tbaa !3848
  %sub12 = sub i64 %14, %15, !dbg !23130
  br label %cond.end13, !dbg !23130

cond.end13:                                       ; preds = %cond.false11, %cond.true10
  %cond14 = phi i64 [ 16, %cond.true10 ], [ %sub12, %cond.false11 ], !dbg !23130
  store i64 %cond14, i64* %nbytes, align 8, !dbg !23130, !tbaa !3848
  %call15 = call i32 @gettimeofday(%struct.timespec* %v, %struct.timezone* null) #10, !dbg !23130
  %16 = load i8*, i8** %buf, align 8, !dbg !23130, !tbaa !2995
  %17 = load i64, i64* %seeded, align 8, !dbg !23130, !tbaa !3848
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !23130
  %18 = bitcast %struct.timespec* %v to i8*, !dbg !23130
  %19 = load i64, i64* %nbytes, align 8, !dbg !23130, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 8 %18, i64 %19, i1 false), !dbg !23130
  %20 = load i64, i64* %nbytes, align 8, !dbg !23130, !tbaa !3848
  %21 = load i64, i64* %seeded, align 8, !dbg !23130, !tbaa !3848
  %add = add i64 %21, %20, !dbg !23130
  store i64 %add, i64* %seeded, align 8, !dbg !23130, !tbaa !3848
  br label %if.end16, !dbg !23130

if.end16:                                         ; preds = %cond.end13, %if.end6
  %22 = load i64, i64* %seeded, align 8, !dbg !23132, !tbaa !3848
  %23 = load i64, i64* %bufsize.addr, align 8, !dbg !23132, !tbaa !3848
  %cmp17 = icmp ult i64 %22, %23, !dbg !23132
  br i1 %cmp17, label %if.then18, label %if.end31, !dbg !23134

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %v19, metadata !23135, metadata !DIExpression()), !dbg !23137
  call void @llvm.dbg.declare(metadata i64* %nbytes20, metadata !23138, metadata !DIExpression()), !dbg !23137
  %24 = load i64, i64* %bufsize.addr, align 8, !dbg !23137, !tbaa !3848
  %25 = load i64, i64* %seeded, align 8, !dbg !23137, !tbaa !3848
  %sub21 = sub i64 %24, %25, !dbg !23137
  %cmp22 = icmp ult i64 4, %sub21, !dbg !23137
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !23137

cond.true23:                                      ; preds = %if.then18
  br label %cond.end26, !dbg !23137

cond.false24:                                     ; preds = %if.then18
  %26 = load i64, i64* %bufsize.addr, align 8, !dbg !23137, !tbaa !3848
  %27 = load i64, i64* %seeded, align 8, !dbg !23137, !tbaa !3848
  %sub25 = sub i64 %26, %27, !dbg !23137
  br label %cond.end26, !dbg !23137

cond.end26:                                       ; preds = %cond.false24, %cond.true23
  %cond27 = phi i64 [ 4, %cond.true23 ], [ %sub25, %cond.false24 ], !dbg !23137
  store i64 %cond27, i64* %nbytes20, align 8, !dbg !23137, !tbaa !3848
  %call28 = call i32 @getpid() #10, !dbg !23137
  store i32 %call28, i32* %v19, align 4, !dbg !23137, !tbaa !2982
  %28 = load i8*, i8** %buf, align 8, !dbg !23137, !tbaa !2995
  %29 = load i64, i64* %seeded, align 8, !dbg !23137, !tbaa !3848
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !23137
  %30 = bitcast i32* %v19 to i8*, !dbg !23137
  %31 = load i64, i64* %nbytes20, align 8, !dbg !23137, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr29, i8* align 4 %30, i64 %31, i1 false), !dbg !23137
  %32 = load i64, i64* %nbytes20, align 8, !dbg !23137, !tbaa !3848
  %33 = load i64, i64* %seeded, align 8, !dbg !23137, !tbaa !3848
  %add30 = add i64 %33, %32, !dbg !23137
  store i64 %add30, i64* %seeded, align 8, !dbg !23137, !tbaa !3848
  br label %if.end31, !dbg !23137

if.end31:                                         ; preds = %cond.end26, %if.end16
  %34 = load i64, i64* %seeded, align 8, !dbg !23139, !tbaa !3848
  %35 = load i64, i64* %bufsize.addr, align 8, !dbg !23139, !tbaa !3848
  %cmp32 = icmp ult i64 %34, %35, !dbg !23139
  br i1 %cmp32, label %if.then33, label %if.end46, !dbg !23141

if.then33:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %v34, metadata !23142, metadata !DIExpression()), !dbg !23144
  call void @llvm.dbg.declare(metadata i64* %nbytes35, metadata !23145, metadata !DIExpression()), !dbg !23144
  %36 = load i64, i64* %bufsize.addr, align 8, !dbg !23144, !tbaa !3848
  %37 = load i64, i64* %seeded, align 8, !dbg !23144, !tbaa !3848
  %sub36 = sub i64 %36, %37, !dbg !23144
  %cmp37 = icmp ult i64 4, %sub36, !dbg !23144
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !23144

cond.true38:                                      ; preds = %if.then33
  br label %cond.end41, !dbg !23144

cond.false39:                                     ; preds = %if.then33
  %38 = load i64, i64* %bufsize.addr, align 8, !dbg !23144, !tbaa !3848
  %39 = load i64, i64* %seeded, align 8, !dbg !23144, !tbaa !3848
  %sub40 = sub i64 %38, %39, !dbg !23144
  br label %cond.end41, !dbg !23144

cond.end41:                                       ; preds = %cond.false39, %cond.true38
  %cond42 = phi i64 [ 4, %cond.true38 ], [ %sub40, %cond.false39 ], !dbg !23144
  store i64 %cond42, i64* %nbytes35, align 8, !dbg !23144, !tbaa !3848
  %call43 = call i32 @getppid() #10, !dbg !23144
  store i32 %call43, i32* %v34, align 4, !dbg !23144, !tbaa !2982
  %40 = load i8*, i8** %buf, align 8, !dbg !23144, !tbaa !2995
  %41 = load i64, i64* %seeded, align 8, !dbg !23144, !tbaa !3848
  %add.ptr44 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !23144
  %42 = bitcast i32* %v34 to i8*, !dbg !23144
  %43 = load i64, i64* %nbytes35, align 8, !dbg !23144, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr44, i8* align 4 %42, i64 %43, i1 false), !dbg !23144
  %44 = load i64, i64* %nbytes35, align 8, !dbg !23144, !tbaa !3848
  %45 = load i64, i64* %seeded, align 8, !dbg !23144, !tbaa !3848
  %add45 = add i64 %45, %44, !dbg !23144
  store i64 %add45, i64* %seeded, align 8, !dbg !23144, !tbaa !3848
  br label %if.end46, !dbg !23144

if.end46:                                         ; preds = %cond.end41, %if.end31
  %46 = load i64, i64* %seeded, align 8, !dbg !23146, !tbaa !3848
  %47 = load i64, i64* %bufsize.addr, align 8, !dbg !23146, !tbaa !3848
  %cmp47 = icmp ult i64 %46, %47, !dbg !23146
  br i1 %cmp47, label %if.then48, label %if.end61, !dbg !23148

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %v49, metadata !23149, metadata !DIExpression()), !dbg !23151
  call void @llvm.dbg.declare(metadata i64* %nbytes50, metadata !23152, metadata !DIExpression()), !dbg !23151
  %48 = load i64, i64* %bufsize.addr, align 8, !dbg !23151, !tbaa !3848
  %49 = load i64, i64* %seeded, align 8, !dbg !23151, !tbaa !3848
  %sub51 = sub i64 %48, %49, !dbg !23151
  %cmp52 = icmp ult i64 4, %sub51, !dbg !23151
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !23151

cond.true53:                                      ; preds = %if.then48
  br label %cond.end56, !dbg !23151

cond.false54:                                     ; preds = %if.then48
  %50 = load i64, i64* %bufsize.addr, align 8, !dbg !23151, !tbaa !3848
  %51 = load i64, i64* %seeded, align 8, !dbg !23151, !tbaa !3848
  %sub55 = sub i64 %50, %51, !dbg !23151
  br label %cond.end56, !dbg !23151

cond.end56:                                       ; preds = %cond.false54, %cond.true53
  %cond57 = phi i64 [ 4, %cond.true53 ], [ %sub55, %cond.false54 ], !dbg !23151
  store i64 %cond57, i64* %nbytes50, align 8, !dbg !23151, !tbaa !3848
  %call58 = call i32 @getuid() #10, !dbg !23151
  store i32 %call58, i32* %v49, align 4, !dbg !23151, !tbaa !2982
  %52 = load i8*, i8** %buf, align 8, !dbg !23151, !tbaa !2995
  %53 = load i64, i64* %seeded, align 8, !dbg !23151, !tbaa !3848
  %add.ptr59 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !23151
  %54 = bitcast i32* %v49 to i8*, !dbg !23151
  %55 = load i64, i64* %nbytes50, align 8, !dbg !23151, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr59, i8* align 4 %54, i64 %55, i1 false), !dbg !23151
  %56 = load i64, i64* %nbytes50, align 8, !dbg !23151, !tbaa !3848
  %57 = load i64, i64* %seeded, align 8, !dbg !23151, !tbaa !3848
  %add60 = add i64 %57, %56, !dbg !23151
  store i64 %add60, i64* %seeded, align 8, !dbg !23151, !tbaa !3848
  br label %if.end61, !dbg !23151

if.end61:                                         ; preds = %cond.end56, %if.end46
  %58 = load i64, i64* %seeded, align 8, !dbg !23153, !tbaa !3848
  %59 = load i64, i64* %bufsize.addr, align 8, !dbg !23153, !tbaa !3848
  %cmp62 = icmp ult i64 %58, %59, !dbg !23153
  br i1 %cmp62, label %if.then63, label %if.end76, !dbg !23155

if.then63:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i32* %v64, metadata !23156, metadata !DIExpression()), !dbg !23158
  call void @llvm.dbg.declare(metadata i64* %nbytes65, metadata !23159, metadata !DIExpression()), !dbg !23158
  %60 = load i64, i64* %bufsize.addr, align 8, !dbg !23158, !tbaa !3848
  %61 = load i64, i64* %seeded, align 8, !dbg !23158, !tbaa !3848
  %sub66 = sub i64 %60, %61, !dbg !23158
  %cmp67 = icmp ult i64 4, %sub66, !dbg !23158
  br i1 %cmp67, label %cond.true68, label %cond.false69, !dbg !23158

cond.true68:                                      ; preds = %if.then63
  br label %cond.end71, !dbg !23158

cond.false69:                                     ; preds = %if.then63
  %62 = load i64, i64* %bufsize.addr, align 8, !dbg !23158, !tbaa !3848
  %63 = load i64, i64* %seeded, align 8, !dbg !23158, !tbaa !3848
  %sub70 = sub i64 %62, %63, !dbg !23158
  br label %cond.end71, !dbg !23158

cond.end71:                                       ; preds = %cond.false69, %cond.true68
  %cond72 = phi i64 [ 4, %cond.true68 ], [ %sub70, %cond.false69 ], !dbg !23158
  store i64 %cond72, i64* %nbytes65, align 8, !dbg !23158, !tbaa !3848
  %call73 = call i32 @getgid() #10, !dbg !23158
  store i32 %call73, i32* %v64, align 4, !dbg !23158, !tbaa !2982
  %64 = load i8*, i8** %buf, align 8, !dbg !23158, !tbaa !2995
  %65 = load i64, i64* %seeded, align 8, !dbg !23158, !tbaa !3848
  %add.ptr74 = getelementptr inbounds i8, i8* %64, i64 %65, !dbg !23158
  %66 = bitcast i32* %v64 to i8*, !dbg !23158
  %67 = load i64, i64* %nbytes65, align 8, !dbg !23158, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 4 %66, i64 %67, i1 false), !dbg !23158
  %68 = load i64, i64* %nbytes65, align 8, !dbg !23158, !tbaa !3848
  %69 = load i64, i64* %seeded, align 8, !dbg !23158, !tbaa !3848
  %add75 = add i64 %69, %68, !dbg !23158
  store i64 %add75, i64* %seeded, align 8, !dbg !23158, !tbaa !3848
  br label %if.end76, !dbg !23158

if.end76:                                         ; preds = %cond.end71, %if.end61
  ret void, !dbg !23160
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec*, %struct.timezone*) #2

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

; Function Attrs: nounwind
declare dso_local i32 @getppid() #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @randread_error(i8* %file_name) #0 !dbg !23161 !ctir !2807 {
entry:
  %file_name.addr = alloca i8*, align 8
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !23162, metadata !DIExpression()), !dbg !23163
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !23164, !tbaa !2995
  %tobool = icmp ne i8* %0, null, !dbg !23164
  br i1 %tobool, label %if.then, label %if.end, !dbg !23166

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !23167, !tbaa !2982
  %call = call i32* @__errno_location() #15, !dbg !23168
  %2 = load i32, i32* %call, align 4, !dbg !23168, !tbaa !2982, !ctir !7
  %call1 = call i32* @__errno_location() #15, !dbg !23169
  %3 = load i32, i32* %call1, align 4, !dbg !23169, !tbaa !2982, !ctir !7
  %cmp = icmp eq i32 %3, 0, !dbg !23170
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !23169

cond.true:                                        ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.506, i64 0, i64 0)) #10, !dbg !23171
  br label %cond.end, !dbg !23169

cond.false:                                       ; preds = %if.then
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.507, i64 0, i64 0)) #10, !dbg !23172
  br label %cond.end, !dbg !23169

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !23169
  %4 = load i8*, i8** %file_name.addr, align 8, !dbg !23173, !tbaa !2995
  %call4 = call i8* @quote(i8* %4), !dbg !23174
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 %2, i8* %cond, i8* %call4), !dbg !23175
  br label %if.end, !dbg !23175

if.end:                                           ; preds = %cond.end, %entry
  call void @abort() #13, !dbg !23176
  unreachable, !dbg !23176
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler(%struct.randread_source* %s, void (i8*)* %handler) #4 !dbg !23177 !ctir !2841 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler.addr = alloca void (i8*)*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23178, metadata !DIExpression()), !dbg !23179
  store void (i8*)* %handler, void (i8*)** %handler.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata void (i8*)** %handler.addr, metadata !23180, metadata !DIExpression()), !dbg !23181
  %0 = load void (i8*)*, void (i8*)** %handler.addr, align 8, !dbg !23182, !tbaa !2995
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23183, !tbaa !2995
  %handler1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 1, !dbg !23184, !ctir !2767
  store void (i8*)* %0, void (i8*)** %handler1, align 8, !dbg !23185, !tbaa !23079, !ctir !2806
  ret void, !dbg !23186
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler_arg(%struct.randread_source* %s, i8* %handler_arg) #4 !dbg !23187 !ctir !2843 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler_arg.addr = alloca i8*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23188, metadata !DIExpression()), !dbg !23189
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !23190, metadata !DIExpression()), !dbg !23191
  %0 = load i8*, i8** %handler_arg.addr, align 8, !dbg !23192, !tbaa !2995
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23193, !tbaa !2995
  %handler_arg1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 2, !dbg !23194, !ctir !2767
  store i8* %0, i8** %handler_arg1, align 8, !dbg !23195, !tbaa !23084, !ctir !425
  ret void, !dbg !23196
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread(%struct.randread_source* %s, i8* %buf, i64 %size) #4 !dbg !23197 !ctir !2845 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23198, metadata !DIExpression()), !dbg !23199
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !23200, metadata !DIExpression()), !dbg !23201
  store i64 %size, i64* %size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !23202, metadata !DIExpression()), !dbg !23203
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23204, !tbaa !2995
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !23206, !ctir !2767
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23206, !tbaa !23074, !ctir !2771
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !23204
  br i1 %tobool, label %if.then, label %if.else, !dbg !23207

if.then:                                          ; preds = %entry
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23208, !tbaa !2995
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !23209, !tbaa !2995
  %4 = load i64, i64* %size.addr, align 8, !dbg !23210, !tbaa !3848
  call void @readsource(%struct.randread_source* %2, i8* %3, i64 %4), !dbg !23211
  br label %if.end, !dbg !23211

if.else:                                          ; preds = %entry
  %5 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23212, !tbaa !2995
  %buf1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 3, !dbg !23213, !ctir !2767
  %isaac = bitcast %union.anon.147* %buf1 to %struct.isaac*, !dbg !23214
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !23215, !tbaa !2995
  %7 = load i64, i64* %size.addr, align 8, !dbg !23216, !tbaa !3848
  call void @readisaac(%struct.isaac* %isaac, i8* %6, i64 %7), !dbg !23217
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !23218
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readsource(%struct.randread_source* %s, i8* %p, i64 %size) #4 !dbg !23219 !ctir !2855 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !55
  %fread_errno = alloca i32, align 4, !ctir !7
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23220, metadata !DIExpression()), !dbg !23221
  store i8* %p, i8** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !23222, metadata !DIExpression()), !dbg !23223
  store i64 %size, i64* %size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !23224, metadata !DIExpression()), !dbg !23225
  br label %while.body, !dbg !23226

while.body:                                       ; preds = %entry, %cond.end
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !23227, metadata !DIExpression()), !dbg !23229
  %0 = load i8*, i8** %p.addr, align 8, !dbg !23230, !tbaa !2995
  %1 = load i64, i64* %size.addr, align 8, !dbg !23230, !tbaa !3848
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23230, !tbaa !2995
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !23230, !ctir !2767
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23230, !tbaa !23074, !ctir !2771
  %call = call i64 @fread_unlocked(i8* %0, i64 1, i64 %1, %struct._IO_FILE* %3), !dbg !23230
  store i64 %call, i64* %inbytes, align 8, !dbg !23229, !tbaa !3848
  call void @llvm.dbg.declare(metadata i32* %fread_errno, metadata !23231, metadata !DIExpression()), !dbg !23232
  %call1 = call i32* @__errno_location() #15, !dbg !23233
  %4 = load i32, i32* %call1, align 4, !dbg !23233, !tbaa !2982, !ctir !7
  store i32 %4, i32* %fread_errno, align 4, !dbg !23232, !tbaa !2982
  %5 = load i64, i64* %inbytes, align 8, !dbg !23234, !tbaa !3848
  %6 = load i8*, i8** %p.addr, align 8, !dbg !23235, !tbaa !2995
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5, !dbg !23235
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !23235, !tbaa !2995
  %7 = load i64, i64* %inbytes, align 8, !dbg !23236, !tbaa !3848
  %8 = load i64, i64* %size.addr, align 8, !dbg !23237, !tbaa !3848
  %sub = sub i64 %8, %7, !dbg !23237
  store i64 %sub, i64* %size.addr, align 8, !dbg !23237, !tbaa !3848
  %9 = load i64, i64* %size.addr, align 8, !dbg !23238, !tbaa !3848
  %cmp = icmp eq i64 %9, 0, !dbg !23240
  br i1 %cmp, label %if.then, label %if.end, !dbg !23241

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !23242

if.end:                                           ; preds = %while.body
  %10 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23243, !tbaa !2995
  %source2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 0, !dbg !23243, !ctir !2767
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %source2, align 8, !dbg !23243, !tbaa !23074, !ctir !2771
  %call3 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #10, !dbg !23243
  %tobool = icmp ne i32 %call3, 0, !dbg !23243
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !23243

cond.true:                                        ; preds = %if.end
  %12 = load i32, i32* %fread_errno, align 4, !dbg !23244, !tbaa !2982
  br label %cond.end, !dbg !23243

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !23243

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ 0, %cond.false ], !dbg !23243
  %call4 = call i32* @__errno_location() #15, !dbg !23245
  store i32 %cond, i32* %call4, align 4, !dbg !23246, !tbaa !2982, !ctir !7
  %13 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23247, !tbaa !2995
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %13, i32 0, i32 1, !dbg !23248, !ctir !2767
  %14 = load void (i8*)*, void (i8*)** %handler, align 8, !dbg !23248, !tbaa !23079, !ctir !2806
  %15 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23249, !tbaa !2995
  %handler_arg = getelementptr inbounds %struct.randread_source, %struct.randread_source* %15, i32 0, i32 2, !dbg !23250, !ctir !2767
  %16 = load i8*, i8** %handler_arg, align 8, !dbg !23250, !tbaa !23084, !ctir !425
  call void %14(i8* %16), !dbg !23247
  br label %while.body, !dbg !23226, !llvm.loop !23251

while.end:                                        ; preds = %if.then
  ret void, !dbg !23253
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readisaac(%struct.isaac* %isaac, i8* %p, i64 %size) #4 !dbg !23254 !ctir !2858 {
entry:
  %isaac.addr = alloca %struct.isaac*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !55
  %char_p = alloca i8*, align 8, !ctir !9
  %wp = alloca i64*, align 8, !ctir !2861
  store %struct.isaac* %isaac, %struct.isaac** %isaac.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.isaac** %isaac.addr, metadata !23255, metadata !DIExpression()), !dbg !23256
  store i8* %p, i8** %p.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !23257, metadata !DIExpression()), !dbg !23258
  store i64 %size, i64* %size.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !23259, metadata !DIExpression()), !dbg !23260
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !23261, metadata !DIExpression()), !dbg !23262
  %0 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23263, !tbaa !2995
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %0, i32 0, i32 0, !dbg !23264, !ctir !2818
  %1 = load i64, i64* %buffered, align 8, !dbg !23264, !tbaa !23265, !ctir !55
  store i64 %1, i64* %inbytes, align 8, !dbg !23262, !tbaa !3848
  br label %while.body, !dbg !23268

while.body:                                       ; preds = %entry, %if.end22
  call void @llvm.dbg.declare(metadata i8** %char_p, metadata !23269, metadata !DIExpression()), !dbg !23271
  %2 = load i8*, i8** %p.addr, align 8, !dbg !23272, !tbaa !2995
  store i8* %2, i8** %char_p, align 8, !dbg !23271, !tbaa !2995
  %3 = load i64, i64* %size.addr, align 8, !dbg !23273, !tbaa !3848
  %4 = load i64, i64* %inbytes, align 8, !dbg !23275, !tbaa !3848
  %cmp = icmp ule i64 %3, %4, !dbg !23276
  br i1 %cmp, label %if.then, label %if.end, !dbg !23277

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 8, !dbg !23278, !tbaa !2995
  %6 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23280, !tbaa !2995
  %data = getelementptr inbounds %struct.isaac, %struct.isaac* %6, i32 0, i32 2, !dbg !23281, !ctir !2818
  %b = bitcast %union.anon.0* %data to [2048 x i8]*, !dbg !23282
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %b, i64 0, i64 0, !dbg !23280
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2048, !dbg !23283
  %7 = load i64, i64* %inbytes, align 8, !dbg !23284, !tbaa !3848
  %idx.neg = sub i64 0, %7, !dbg !23285
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !23285
  %8 = load i64, i64* %size.addr, align 8, !dbg !23286, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %add.ptr1, i64 %8, i1 false), !dbg !23287
  %9 = load i64, i64* %inbytes, align 8, !dbg !23288, !tbaa !3848
  %10 = load i64, i64* %size.addr, align 8, !dbg !23289, !tbaa !3848
  %sub = sub i64 %9, %10, !dbg !23290
  %11 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23291, !tbaa !2995
  %buffered2 = getelementptr inbounds %struct.isaac, %struct.isaac* %11, i32 0, i32 0, !dbg !23292, !ctir !2818
  store i64 %sub, i64* %buffered2, align 8, !dbg !23293, !tbaa !23265, !ctir !55
  br label %return, !dbg !23294

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %p.addr, align 8, !dbg !23295, !tbaa !2995
  %13 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23296, !tbaa !2995
  %data3 = getelementptr inbounds %struct.isaac, %struct.isaac* %13, i32 0, i32 2, !dbg !23297, !ctir !2818
  %b4 = bitcast %union.anon.0* %data3 to [2048 x i8]*, !dbg !23298
  %arraydecay5 = getelementptr inbounds [2048 x i8], [2048 x i8]* %b4, i64 0, i64 0, !dbg !23296
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 2048, !dbg !23299
  %14 = load i64, i64* %inbytes, align 8, !dbg !23300, !tbaa !3848
  %idx.neg7 = sub i64 0, %14, !dbg !23301
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr6, i64 %idx.neg7, !dbg !23301
  %15 = load i64, i64* %inbytes, align 8, !dbg !23302, !tbaa !3848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %add.ptr8, i64 %15, i1 false), !dbg !23303
  %16 = load i8*, i8** %char_p, align 8, !dbg !23304, !tbaa !2995
  %17 = load i64, i64* %inbytes, align 8, !dbg !23305, !tbaa !3848
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !23306
  store i8* %add.ptr9, i8** %p.addr, align 8, !dbg !23307, !tbaa !2995
  %18 = load i64, i64* %inbytes, align 8, !dbg !23308, !tbaa !3848
  %19 = load i64, i64* %size.addr, align 8, !dbg !23309, !tbaa !3848
  %sub10 = sub i64 %19, %18, !dbg !23309
  store i64 %sub10, i64* %size.addr, align 8, !dbg !23309, !tbaa !3848
  %20 = load i8*, i8** %p.addr, align 8, !dbg !23310, !tbaa !2995
  %21 = ptrtoint i8* %20 to i64, !dbg !23310
  %rem = urem i64 %21, 8, !dbg !23310
  %cmp11 = icmp eq i64 %rem, 0, !dbg !23310
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !23312

if.then12:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64** %wp, metadata !23313, metadata !DIExpression()), !dbg !23315
  %22 = load i8*, i8** %p.addr, align 8, !dbg !23316, !tbaa !2995
  %23 = bitcast i8* %22 to i64*, !dbg !23316
  store i64* %23, i64** %wp, align 8, !dbg !23315, !tbaa !2995
  br label %while.cond13, !dbg !23317

while.cond13:                                     ; preds = %if.end21, %if.then12
  %24 = load i64, i64* %size.addr, align 8, !dbg !23318, !tbaa !3848
  %cmp14 = icmp ule i64 2048, %24, !dbg !23319
  br i1 %cmp14, label %while.body15, label %while.end, !dbg !23317

while.body15:                                     ; preds = %while.cond13
  %25 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23320, !tbaa !2995
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %25, i32 0, i32 1, !dbg !23322, !ctir !2818
  %26 = load i64*, i64** %wp, align 8, !dbg !23323, !tbaa !2995
  call void @isaac_refill(%struct.isaac_state* %state, i64* %26), !dbg !23324
  %27 = load i64*, i64** %wp, align 8, !dbg !23325, !tbaa !2995
  %add.ptr16 = getelementptr inbounds i64, i64* %27, i64 256, !dbg !23325
  store i64* %add.ptr16, i64** %wp, align 8, !dbg !23325, !tbaa !2995
  %28 = load i64, i64* %size.addr, align 8, !dbg !23326, !tbaa !3848
  %sub17 = sub i64 %28, 2048, !dbg !23326
  store i64 %sub17, i64* %size.addr, align 8, !dbg !23326, !tbaa !3848
  %29 = load i64, i64* %size.addr, align 8, !dbg !23327, !tbaa !3848
  %cmp18 = icmp eq i64 %29, 0, !dbg !23329
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !23330

if.then19:                                        ; preds = %while.body15
  %30 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23331, !tbaa !2995
  %buffered20 = getelementptr inbounds %struct.isaac, %struct.isaac* %30, i32 0, i32 0, !dbg !23333, !ctir !2818
  store i64 0, i64* %buffered20, align 8, !dbg !23334, !tbaa !23265, !ctir !55
  br label %return, !dbg !23335

if.end21:                                         ; preds = %while.body15
  br label %while.cond13, !dbg !23317, !llvm.loop !23336

while.end:                                        ; preds = %while.cond13
  %31 = load i64*, i64** %wp, align 8, !dbg !23338, !tbaa !2995
  %32 = bitcast i64* %31 to i8*, !dbg !23338
  store i8* %32, i8** %p.addr, align 8, !dbg !23339, !tbaa !2995
  br label %if.end22, !dbg !23340

if.end22:                                         ; preds = %while.end, %if.end
  %33 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23341, !tbaa !2995
  %state23 = getelementptr inbounds %struct.isaac, %struct.isaac* %33, i32 0, i32 1, !dbg !23342, !ctir !2818
  %34 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23343, !tbaa !2995
  %data24 = getelementptr inbounds %struct.isaac, %struct.isaac* %34, i32 0, i32 2, !dbg !23344, !ctir !2818
  %w = bitcast %union.anon.0* %data24 to [256 x i64]*, !dbg !23345
  %arraydecay25 = getelementptr inbounds [256 x i64], [256 x i64]* %w, i64 0, i64 0, !dbg !23343
  call void @isaac_refill(%struct.isaac_state* %state23, i64* %arraydecay25), !dbg !23346
  store i64 2048, i64* %inbytes, align 8, !dbg !23347, !tbaa !3848
  br label %while.body, !dbg !23268, !llvm.loop !23348

return:                                           ; preds = %if.then19, %if.then
  ret void, !dbg !23350
}

declare dso_local i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randread_free(%struct.randread_source* %s) #4 !dbg !23351 !ctir !2847 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !2771
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23352, metadata !DIExpression()), !dbg !23353
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !23354, metadata !DIExpression()), !dbg !23355
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23356, !tbaa !2995
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !23357, !ctir !2767
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source1, align 8, !dbg !23357, !tbaa !23074, !ctir !2771
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source, align 8, !dbg !23355, !tbaa !2995
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23358, !tbaa !2995
  %3 = bitcast %struct.randread_source* %2 to i8*, !dbg !23358
  call void @explicit_bzero(i8* %3, i64 4152) #10, !dbg !23359
  %4 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23360, !tbaa !2995
  %5 = bitcast %struct.randread_source* %4 to i8*, !dbg !23360
  call void @free(i8* %5) #10, !dbg !23361
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23362, !tbaa !2995
  %tobool = icmp ne %struct._IO_FILE* %6, null, !dbg !23362
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !23362

cond.true:                                        ; preds = %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23363, !tbaa !2995
  %call = call i32 @rpl_fclose(%struct._IO_FILE* %7), !dbg !23364
  br label %cond.end, !dbg !23362

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !23362

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !23362
  ret i32 %cond, !dbg !23365
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_refill(%struct.isaac_state* %s, i64* %result) #4 !dbg !23366 !ctir !2865 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %result.addr = alloca i64*, align 8
  %a = alloca i64, align 8, !ctir !2827
  %b = alloca i64, align 8, !ctir !2827
  %m = alloca i64*, align 8, !ctir !2861
  %r = alloca i64*, align 8, !ctir !2861
  %x = alloca i64, align 8, !ctir !2827
  %y = alloca i64, align 8, !ctir !2827
  %x18 = alloca i64, align 8, !ctir !2827
  %y19 = alloca i64, align 8, !ctir !2827
  %x40 = alloca i64, align 8, !ctir !2827
  %y41 = alloca i64, align 8, !ctir !2827
  %x61 = alloca i64, align 8, !ctir !2827
  %y62 = alloca i64, align 8, !ctir !2827
  %x88 = alloca i64, align 8, !ctir !2827
  %y89 = alloca i64, align 8, !ctir !2827
  %x110 = alloca i64, align 8, !ctir !2827
  %y111 = alloca i64, align 8, !ctir !2827
  %x132 = alloca i64, align 8, !ctir !2827
  %y133 = alloca i64, align 8, !ctir !2827
  %x153 = alloca i64, align 8, !ctir !2827
  %y154 = alloca i64, align 8, !ctir !2827
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !23368, metadata !DIExpression()), !dbg !23369
  store i64* %result, i64** %result.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64** %result.addr, metadata !23370, metadata !DIExpression()), !dbg !23371
  call void @llvm.dbg.declare(metadata i64* %a, metadata !23372, metadata !DIExpression()), !dbg !23373
  %0 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23374, !tbaa !2995
  %a1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %0, i32 0, i32 1, !dbg !23375, !ctir !2868
  %1 = load i64, i64* %a1, align 8, !dbg !23375, !tbaa !23376, !ctir !2827
  store i64 %1, i64* %a, align 8, !dbg !23373, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %b, metadata !23377, metadata !DIExpression()), !dbg !23378
  %2 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23379, !tbaa !2995
  %b2 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %2, i32 0, i32 2, !dbg !23380, !ctir !2868
  %3 = load i64, i64* %b2, align 8, !dbg !23380, !tbaa !23381, !ctir !2827
  %4 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23382, !tbaa !2995
  %c = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %4, i32 0, i32 3, !dbg !23383, !ctir !2868
  %5 = load i64, i64* %c, align 8, !dbg !23384, !tbaa !23385, !ctir !2827
  %inc = add i64 %5, 1, !dbg !23384
  store i64 %inc, i64* %c, align 8, !dbg !23384, !tbaa !23385, !ctir !2827
  %add = add i64 %3, %inc, !dbg !23386
  store i64 %add, i64* %b, align 8, !dbg !23378, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64** %m, metadata !23387, metadata !DIExpression()), !dbg !23388
  %6 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23389, !tbaa !2995
  %m3 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %6, i32 0, i32 0, !dbg !23390, !ctir !2868
  %arraydecay = getelementptr inbounds [256 x i64], [256 x i64]* %m3, i64 0, i64 0, !dbg !23389
  store i64* %arraydecay, i64** %m, align 8, !dbg !23388, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64** %r, metadata !23391, metadata !DIExpression()), !dbg !23392
  %7 = load i64*, i64** %result.addr, align 8, !dbg !23393, !tbaa !2995
  store i64* %7, i64** %r, align 8, !dbg !23392, !tbaa !2995
  br label %do.body, !dbg !23394

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i64* %x, metadata !23395, metadata !DIExpression()), !dbg !23398
  call void @llvm.dbg.declare(metadata i64* %y, metadata !23399, metadata !DIExpression()), !dbg !23398
  %8 = load i64, i64* %a, align 8, !dbg !23398, !tbaa !3848
  %9 = load i64, i64* %a, align 8, !dbg !23398, !tbaa !3848
  %shl = shl i64 %9, 21, !dbg !23398
  %xor = xor i64 %8, %shl, !dbg !23398
  %neg = xor i64 %xor, -1, !dbg !23398
  %xor4 = xor i64 0, %neg, !dbg !23398
  %10 = load i64*, i64** %m, align 8, !dbg !23398, !tbaa !2995
  %arrayidx = getelementptr inbounds i64, i64* %10, i64 128, !dbg !23398, !ctir !2861
  %11 = load i64, i64* %arrayidx, align 8, !dbg !23398, !tbaa !3848
  %add5 = add i64 %xor4, %11, !dbg !23398
  store i64 %add5, i64* %a, align 8, !dbg !23398, !tbaa !3848
  %12 = load i64*, i64** %m, align 8, !dbg !23398, !tbaa !2995
  %arrayidx6 = getelementptr inbounds i64, i64* %12, i64 0, !dbg !23398, !ctir !2861
  %13 = load i64, i64* %arrayidx6, align 8, !dbg !23398, !tbaa !3848
  store i64 %13, i64* %x, align 8, !dbg !23398, !tbaa !3848
  %14 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23398, !tbaa !2995
  %m7 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %14, i32 0, i32 0, !dbg !23398, !ctir !2868
  %arraydecay8 = getelementptr inbounds [256 x i64], [256 x i64]* %m7, i64 0, i64 0, !dbg !23398
  %15 = load i64, i64* %x, align 8, !dbg !23398, !tbaa !3848
  %call = call i64 @ind(i64* %arraydecay8, i64 %15), !dbg !23398
  %16 = load i64, i64* %a, align 8, !dbg !23398, !tbaa !3848
  %add9 = add i64 %call, %16, !dbg !23398
  %17 = load i64, i64* %b, align 8, !dbg !23398, !tbaa !3848
  %add10 = add i64 %add9, %17, !dbg !23398
  store i64 %add10, i64* %y, align 8, !dbg !23398, !tbaa !3848
  %18 = load i64*, i64** %m, align 8, !dbg !23398, !tbaa !2995
  %arrayidx11 = getelementptr inbounds i64, i64* %18, i64 0, !dbg !23398, !ctir !2861
  store i64 %add10, i64* %arrayidx11, align 8, !dbg !23398, !tbaa !3848
  %19 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23398, !tbaa !2995
  %m12 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %19, i32 0, i32 0, !dbg !23398, !ctir !2868
  %arraydecay13 = getelementptr inbounds [256 x i64], [256 x i64]* %m12, i64 0, i64 0, !dbg !23398
  %20 = load i64, i64* %y, align 8, !dbg !23398, !tbaa !3848
  %shr = lshr i64 %20, 8, !dbg !23398
  %call14 = call i64 @ind(i64* %arraydecay13, i64 %shr), !dbg !23398
  %21 = load i64, i64* %x, align 8, !dbg !23398, !tbaa !3848
  %add15 = add i64 %call14, %21, !dbg !23398
  %call16 = call i64 @just(i64 %add15), !dbg !23398
  store i64 %call16, i64* %b, align 8, !dbg !23398, !tbaa !3848
  %22 = load i64*, i64** %r, align 8, !dbg !23398, !tbaa !2995
  %arrayidx17 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !23398, !ctir !2861
  store i64 %call16, i64* %arrayidx17, align 8, !dbg !23398, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %x18, metadata !23400, metadata !DIExpression()), !dbg !23402
  call void @llvm.dbg.declare(metadata i64* %y19, metadata !23403, metadata !DIExpression()), !dbg !23402
  %23 = load i64, i64* %a, align 8, !dbg !23402, !tbaa !3848
  %24 = load i64, i64* %a, align 8, !dbg !23402, !tbaa !3848
  %call20 = call i64 @just(i64 %24), !dbg !23402
  %shr21 = lshr i64 %call20, 5, !dbg !23402
  %xor22 = xor i64 %23, %shr21, !dbg !23402
  %xor23 = xor i64 0, %xor22, !dbg !23402
  %25 = load i64*, i64** %m, align 8, !dbg !23402, !tbaa !2995
  %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 129, !dbg !23402, !ctir !2861
  %26 = load i64, i64* %arrayidx24, align 8, !dbg !23402, !tbaa !3848
  %add25 = add i64 %xor23, %26, !dbg !23402
  store i64 %add25, i64* %a, align 8, !dbg !23402, !tbaa !3848
  %27 = load i64*, i64** %m, align 8, !dbg !23402, !tbaa !2995
  %arrayidx26 = getelementptr inbounds i64, i64* %27, i64 1, !dbg !23402, !ctir !2861
  %28 = load i64, i64* %arrayidx26, align 8, !dbg !23402, !tbaa !3848
  store i64 %28, i64* %x18, align 8, !dbg !23402, !tbaa !3848
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23402, !tbaa !2995
  %m27 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !23402, !ctir !2868
  %arraydecay28 = getelementptr inbounds [256 x i64], [256 x i64]* %m27, i64 0, i64 0, !dbg !23402
  %30 = load i64, i64* %x18, align 8, !dbg !23402, !tbaa !3848
  %call29 = call i64 @ind(i64* %arraydecay28, i64 %30), !dbg !23402
  %31 = load i64, i64* %a, align 8, !dbg !23402, !tbaa !3848
  %add30 = add i64 %call29, %31, !dbg !23402
  %32 = load i64, i64* %b, align 8, !dbg !23402, !tbaa !3848
  %add31 = add i64 %add30, %32, !dbg !23402
  store i64 %add31, i64* %y19, align 8, !dbg !23402, !tbaa !3848
  %33 = load i64*, i64** %m, align 8, !dbg !23402, !tbaa !2995
  %arrayidx32 = getelementptr inbounds i64, i64* %33, i64 1, !dbg !23402, !ctir !2861
  store i64 %add31, i64* %arrayidx32, align 8, !dbg !23402, !tbaa !3848
  %34 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23402, !tbaa !2995
  %m33 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %34, i32 0, i32 0, !dbg !23402, !ctir !2868
  %arraydecay34 = getelementptr inbounds [256 x i64], [256 x i64]* %m33, i64 0, i64 0, !dbg !23402
  %35 = load i64, i64* %y19, align 8, !dbg !23402, !tbaa !3848
  %shr35 = lshr i64 %35, 8, !dbg !23402
  %call36 = call i64 @ind(i64* %arraydecay34, i64 %shr35), !dbg !23402
  %36 = load i64, i64* %x18, align 8, !dbg !23402, !tbaa !3848
  %add37 = add i64 %call36, %36, !dbg !23402
  %call38 = call i64 @just(i64 %add37), !dbg !23402
  store i64 %call38, i64* %b, align 8, !dbg !23402, !tbaa !3848
  %37 = load i64*, i64** %r, align 8, !dbg !23402, !tbaa !2995
  %arrayidx39 = getelementptr inbounds i64, i64* %37, i64 1, !dbg !23402, !ctir !2861
  store i64 %call38, i64* %arrayidx39, align 8, !dbg !23402, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %x40, metadata !23404, metadata !DIExpression()), !dbg !23406
  call void @llvm.dbg.declare(metadata i64* %y41, metadata !23407, metadata !DIExpression()), !dbg !23406
  %38 = load i64, i64* %a, align 8, !dbg !23406, !tbaa !3848
  %39 = load i64, i64* %a, align 8, !dbg !23406, !tbaa !3848
  %shl42 = shl i64 %39, 12, !dbg !23406
  %xor43 = xor i64 %38, %shl42, !dbg !23406
  %xor44 = xor i64 0, %xor43, !dbg !23406
  %40 = load i64*, i64** %m, align 8, !dbg !23406, !tbaa !2995
  %arrayidx45 = getelementptr inbounds i64, i64* %40, i64 130, !dbg !23406, !ctir !2861
  %41 = load i64, i64* %arrayidx45, align 8, !dbg !23406, !tbaa !3848
  %add46 = add i64 %xor44, %41, !dbg !23406
  store i64 %add46, i64* %a, align 8, !dbg !23406, !tbaa !3848
  %42 = load i64*, i64** %m, align 8, !dbg !23406, !tbaa !2995
  %arrayidx47 = getelementptr inbounds i64, i64* %42, i64 2, !dbg !23406, !ctir !2861
  %43 = load i64, i64* %arrayidx47, align 8, !dbg !23406, !tbaa !3848
  store i64 %43, i64* %x40, align 8, !dbg !23406, !tbaa !3848
  %44 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23406, !tbaa !2995
  %m48 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %44, i32 0, i32 0, !dbg !23406, !ctir !2868
  %arraydecay49 = getelementptr inbounds [256 x i64], [256 x i64]* %m48, i64 0, i64 0, !dbg !23406
  %45 = load i64, i64* %x40, align 8, !dbg !23406, !tbaa !3848
  %call50 = call i64 @ind(i64* %arraydecay49, i64 %45), !dbg !23406
  %46 = load i64, i64* %a, align 8, !dbg !23406, !tbaa !3848
  %add51 = add i64 %call50, %46, !dbg !23406
  %47 = load i64, i64* %b, align 8, !dbg !23406, !tbaa !3848
  %add52 = add i64 %add51, %47, !dbg !23406
  store i64 %add52, i64* %y41, align 8, !dbg !23406, !tbaa !3848
  %48 = load i64*, i64** %m, align 8, !dbg !23406, !tbaa !2995
  %arrayidx53 = getelementptr inbounds i64, i64* %48, i64 2, !dbg !23406, !ctir !2861
  store i64 %add52, i64* %arrayidx53, align 8, !dbg !23406, !tbaa !3848
  %49 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23406, !tbaa !2995
  %m54 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %49, i32 0, i32 0, !dbg !23406, !ctir !2868
  %arraydecay55 = getelementptr inbounds [256 x i64], [256 x i64]* %m54, i64 0, i64 0, !dbg !23406
  %50 = load i64, i64* %y41, align 8, !dbg !23406, !tbaa !3848
  %shr56 = lshr i64 %50, 8, !dbg !23406
  %call57 = call i64 @ind(i64* %arraydecay55, i64 %shr56), !dbg !23406
  %51 = load i64, i64* %x40, align 8, !dbg !23406, !tbaa !3848
  %add58 = add i64 %call57, %51, !dbg !23406
  %call59 = call i64 @just(i64 %add58), !dbg !23406
  store i64 %call59, i64* %b, align 8, !dbg !23406, !tbaa !3848
  %52 = load i64*, i64** %r, align 8, !dbg !23406, !tbaa !2995
  %arrayidx60 = getelementptr inbounds i64, i64* %52, i64 2, !dbg !23406, !ctir !2861
  store i64 %call59, i64* %arrayidx60, align 8, !dbg !23406, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %x61, metadata !23408, metadata !DIExpression()), !dbg !23410
  call void @llvm.dbg.declare(metadata i64* %y62, metadata !23411, metadata !DIExpression()), !dbg !23410
  %53 = load i64, i64* %a, align 8, !dbg !23410, !tbaa !3848
  %54 = load i64, i64* %a, align 8, !dbg !23410, !tbaa !3848
  %call63 = call i64 @just(i64 %54), !dbg !23410
  %shr64 = lshr i64 %call63, 33, !dbg !23410
  %xor65 = xor i64 %53, %shr64, !dbg !23410
  %xor66 = xor i64 0, %xor65, !dbg !23410
  %55 = load i64*, i64** %m, align 8, !dbg !23410, !tbaa !2995
  %arrayidx67 = getelementptr inbounds i64, i64* %55, i64 131, !dbg !23410, !ctir !2861
  %56 = load i64, i64* %arrayidx67, align 8, !dbg !23410, !tbaa !3848
  %add68 = add i64 %xor66, %56, !dbg !23410
  store i64 %add68, i64* %a, align 8, !dbg !23410, !tbaa !3848
  %57 = load i64*, i64** %m, align 8, !dbg !23410, !tbaa !2995
  %arrayidx69 = getelementptr inbounds i64, i64* %57, i64 3, !dbg !23410, !ctir !2861
  %58 = load i64, i64* %arrayidx69, align 8, !dbg !23410, !tbaa !3848
  store i64 %58, i64* %x61, align 8, !dbg !23410, !tbaa !3848
  %59 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410, !tbaa !2995
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %59, i32 0, i32 0, !dbg !23410, !ctir !2868
  %arraydecay71 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 0, !dbg !23410
  %60 = load i64, i64* %x61, align 8, !dbg !23410, !tbaa !3848
  %call72 = call i64 @ind(i64* %arraydecay71, i64 %60), !dbg !23410
  %61 = load i64, i64* %a, align 8, !dbg !23410, !tbaa !3848
  %add73 = add i64 %call72, %61, !dbg !23410
  %62 = load i64, i64* %b, align 8, !dbg !23410, !tbaa !3848
  %add74 = add i64 %add73, %62, !dbg !23410
  store i64 %add74, i64* %y62, align 8, !dbg !23410, !tbaa !3848
  %63 = load i64*, i64** %m, align 8, !dbg !23410, !tbaa !2995
  %arrayidx75 = getelementptr inbounds i64, i64* %63, i64 3, !dbg !23410, !ctir !2861
  store i64 %add74, i64* %arrayidx75, align 8, !dbg !23410, !tbaa !3848
  %64 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410, !tbaa !2995
  %m76 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %64, i32 0, i32 0, !dbg !23410, !ctir !2868
  %arraydecay77 = getelementptr inbounds [256 x i64], [256 x i64]* %m76, i64 0, i64 0, !dbg !23410
  %65 = load i64, i64* %y62, align 8, !dbg !23410, !tbaa !3848
  %shr78 = lshr i64 %65, 8, !dbg !23410
  %call79 = call i64 @ind(i64* %arraydecay77, i64 %shr78), !dbg !23410
  %66 = load i64, i64* %x61, align 8, !dbg !23410, !tbaa !3848
  %add80 = add i64 %call79, %66, !dbg !23410
  %call81 = call i64 @just(i64 %add80), !dbg !23410
  store i64 %call81, i64* %b, align 8, !dbg !23410, !tbaa !3848
  %67 = load i64*, i64** %r, align 8, !dbg !23410, !tbaa !2995
  %arrayidx82 = getelementptr inbounds i64, i64* %67, i64 3, !dbg !23410, !ctir !2861
  store i64 %call81, i64* %arrayidx82, align 8, !dbg !23410, !tbaa !3848
  %68 = load i64*, i64** %r, align 8, !dbg !23412, !tbaa !2995
  %add.ptr = getelementptr inbounds i64, i64* %68, i64 4, !dbg !23412
  store i64* %add.ptr, i64** %r, align 8, !dbg !23412, !tbaa !2995
  br label %do.cond, !dbg !23413

do.cond:                                          ; preds = %do.body
  %69 = load i64*, i64** %m, align 8, !dbg !23414, !tbaa !2995
  %add.ptr83 = getelementptr inbounds i64, i64* %69, i64 4, !dbg !23414
  store i64* %add.ptr83, i64** %m, align 8, !dbg !23414, !tbaa !2995
  %70 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23415, !tbaa !2995
  %m84 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %70, i32 0, i32 0, !dbg !23416, !ctir !2868
  %arraydecay85 = getelementptr inbounds [256 x i64], [256 x i64]* %m84, i64 0, i64 0, !dbg !23415
  %add.ptr86 = getelementptr inbounds i64, i64* %arraydecay85, i64 128, !dbg !23417
  %cmp = icmp ult i64* %add.ptr83, %add.ptr86, !dbg !23418
  br i1 %cmp, label %do.body, label %do.end, !dbg !23413, !llvm.loop !23419

do.end:                                           ; preds = %do.cond
  br label %do.body87, !dbg !23421

do.body87:                                        ; preds = %do.cond176, %do.end
  call void @llvm.dbg.declare(metadata i64* %x88, metadata !23422, metadata !DIExpression()), !dbg !23425
  call void @llvm.dbg.declare(metadata i64* %y89, metadata !23426, metadata !DIExpression()), !dbg !23425
  %71 = load i64, i64* %a, align 8, !dbg !23425, !tbaa !3848
  %72 = load i64, i64* %a, align 8, !dbg !23425, !tbaa !3848
  %shl90 = shl i64 %72, 21, !dbg !23425
  %xor91 = xor i64 %71, %shl90, !dbg !23425
  %neg92 = xor i64 %xor91, -1, !dbg !23425
  %xor93 = xor i64 0, %neg92, !dbg !23425
  %73 = load i64*, i64** %m, align 8, !dbg !23425, !tbaa !2995
  %arrayidx94 = getelementptr inbounds i64, i64* %73, i64 -128, !dbg !23425, !ctir !2861
  %74 = load i64, i64* %arrayidx94, align 8, !dbg !23425, !tbaa !3848
  %add95 = add i64 %xor93, %74, !dbg !23425
  store i64 %add95, i64* %a, align 8, !dbg !23425, !tbaa !3848
  %75 = load i64*, i64** %m, align 8, !dbg !23425, !tbaa !2995
  %arrayidx96 = getelementptr inbounds i64, i64* %75, i64 0, !dbg !23425, !ctir !2861
  %76 = load i64, i64* %arrayidx96, align 8, !dbg !23425, !tbaa !3848
  store i64 %76, i64* %x88, align 8, !dbg !23425, !tbaa !3848
  %77 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23425, !tbaa !2995
  %m97 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %77, i32 0, i32 0, !dbg !23425, !ctir !2868
  %arraydecay98 = getelementptr inbounds [256 x i64], [256 x i64]* %m97, i64 0, i64 0, !dbg !23425
  %78 = load i64, i64* %x88, align 8, !dbg !23425, !tbaa !3848
  %call99 = call i64 @ind(i64* %arraydecay98, i64 %78), !dbg !23425
  %79 = load i64, i64* %a, align 8, !dbg !23425, !tbaa !3848
  %add100 = add i64 %call99, %79, !dbg !23425
  %80 = load i64, i64* %b, align 8, !dbg !23425, !tbaa !3848
  %add101 = add i64 %add100, %80, !dbg !23425
  store i64 %add101, i64* %y89, align 8, !dbg !23425, !tbaa !3848
  %81 = load i64*, i64** %m, align 8, !dbg !23425, !tbaa !2995
  %arrayidx102 = getelementptr inbounds i64, i64* %81, i64 0, !dbg !23425, !ctir !2861
  store i64 %add101, i64* %arrayidx102, align 8, !dbg !23425, !tbaa !3848
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23425, !tbaa !2995
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !23425, !ctir !2868
  %arraydecay104 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 0, !dbg !23425
  %83 = load i64, i64* %y89, align 8, !dbg !23425, !tbaa !3848
  %shr105 = lshr i64 %83, 8, !dbg !23425
  %call106 = call i64 @ind(i64* %arraydecay104, i64 %shr105), !dbg !23425
  %84 = load i64, i64* %x88, align 8, !dbg !23425, !tbaa !3848
  %add107 = add i64 %call106, %84, !dbg !23425
  %call108 = call i64 @just(i64 %add107), !dbg !23425
  store i64 %call108, i64* %b, align 8, !dbg !23425, !tbaa !3848
  %85 = load i64*, i64** %r, align 8, !dbg !23425, !tbaa !2995
  %arrayidx109 = getelementptr inbounds i64, i64* %85, i64 0, !dbg !23425, !ctir !2861
  store i64 %call108, i64* %arrayidx109, align 8, !dbg !23425, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %x110, metadata !23427, metadata !DIExpression()), !dbg !23429
  call void @llvm.dbg.declare(metadata i64* %y111, metadata !23430, metadata !DIExpression()), !dbg !23429
  %86 = load i64, i64* %a, align 8, !dbg !23429, !tbaa !3848
  %87 = load i64, i64* %a, align 8, !dbg !23429, !tbaa !3848
  %call112 = call i64 @just(i64 %87), !dbg !23429
  %shr113 = lshr i64 %call112, 5, !dbg !23429
  %xor114 = xor i64 %86, %shr113, !dbg !23429
  %xor115 = xor i64 0, %xor114, !dbg !23429
  %88 = load i64*, i64** %m, align 8, !dbg !23429, !tbaa !2995
  %arrayidx116 = getelementptr inbounds i64, i64* %88, i64 -127, !dbg !23429, !ctir !2861
  %89 = load i64, i64* %arrayidx116, align 8, !dbg !23429, !tbaa !3848
  %add117 = add i64 %xor115, %89, !dbg !23429
  store i64 %add117, i64* %a, align 8, !dbg !23429, !tbaa !3848
  %90 = load i64*, i64** %m, align 8, !dbg !23429, !tbaa !2995
  %arrayidx118 = getelementptr inbounds i64, i64* %90, i64 1, !dbg !23429, !ctir !2861
  %91 = load i64, i64* %arrayidx118, align 8, !dbg !23429, !tbaa !3848
  store i64 %91, i64* %x110, align 8, !dbg !23429, !tbaa !3848
  %92 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23429, !tbaa !2995
  %m119 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %92, i32 0, i32 0, !dbg !23429, !ctir !2868
  %arraydecay120 = getelementptr inbounds [256 x i64], [256 x i64]* %m119, i64 0, i64 0, !dbg !23429
  %93 = load i64, i64* %x110, align 8, !dbg !23429, !tbaa !3848
  %call121 = call i64 @ind(i64* %arraydecay120, i64 %93), !dbg !23429
  %94 = load i64, i64* %a, align 8, !dbg !23429, !tbaa !3848
  %add122 = add i64 %call121, %94, !dbg !23429
  %95 = load i64, i64* %b, align 8, !dbg !23429, !tbaa !3848
  %add123 = add i64 %add122, %95, !dbg !23429
  store i64 %add123, i64* %y111, align 8, !dbg !23429, !tbaa !3848
  %96 = load i64*, i64** %m, align 8, !dbg !23429, !tbaa !2995
  %arrayidx124 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !23429, !ctir !2861
  store i64 %add123, i64* %arrayidx124, align 8, !dbg !23429, !tbaa !3848
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23429, !tbaa !2995
  %m125 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !23429, !ctir !2868
  %arraydecay126 = getelementptr inbounds [256 x i64], [256 x i64]* %m125, i64 0, i64 0, !dbg !23429
  %98 = load i64, i64* %y111, align 8, !dbg !23429, !tbaa !3848
  %shr127 = lshr i64 %98, 8, !dbg !23429
  %call128 = call i64 @ind(i64* %arraydecay126, i64 %shr127), !dbg !23429
  %99 = load i64, i64* %x110, align 8, !dbg !23429, !tbaa !3848
  %add129 = add i64 %call128, %99, !dbg !23429
  %call130 = call i64 @just(i64 %add129), !dbg !23429
  store i64 %call130, i64* %b, align 8, !dbg !23429, !tbaa !3848
  %100 = load i64*, i64** %r, align 8, !dbg !23429, !tbaa !2995
  %arrayidx131 = getelementptr inbounds i64, i64* %100, i64 1, !dbg !23429, !ctir !2861
  store i64 %call130, i64* %arrayidx131, align 8, !dbg !23429, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %x132, metadata !23431, metadata !DIExpression()), !dbg !23433
  call void @llvm.dbg.declare(metadata i64* %y133, metadata !23434, metadata !DIExpression()), !dbg !23433
  %101 = load i64, i64* %a, align 8, !dbg !23433, !tbaa !3848
  %102 = load i64, i64* %a, align 8, !dbg !23433, !tbaa !3848
  %shl134 = shl i64 %102, 12, !dbg !23433
  %xor135 = xor i64 %101, %shl134, !dbg !23433
  %xor136 = xor i64 0, %xor135, !dbg !23433
  %103 = load i64*, i64** %m, align 8, !dbg !23433, !tbaa !2995
  %arrayidx137 = getelementptr inbounds i64, i64* %103, i64 -126, !dbg !23433, !ctir !2861
  %104 = load i64, i64* %arrayidx137, align 8, !dbg !23433, !tbaa !3848
  %add138 = add i64 %xor136, %104, !dbg !23433
  store i64 %add138, i64* %a, align 8, !dbg !23433, !tbaa !3848
  %105 = load i64*, i64** %m, align 8, !dbg !23433, !tbaa !2995
  %arrayidx139 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !23433, !ctir !2861
  %106 = load i64, i64* %arrayidx139, align 8, !dbg !23433, !tbaa !3848
  store i64 %106, i64* %x132, align 8, !dbg !23433, !tbaa !3848
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23433, !tbaa !2995
  %m140 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !23433, !ctir !2868
  %arraydecay141 = getelementptr inbounds [256 x i64], [256 x i64]* %m140, i64 0, i64 0, !dbg !23433
  %108 = load i64, i64* %x132, align 8, !dbg !23433, !tbaa !3848
  %call142 = call i64 @ind(i64* %arraydecay141, i64 %108), !dbg !23433
  %109 = load i64, i64* %a, align 8, !dbg !23433, !tbaa !3848
  %add143 = add i64 %call142, %109, !dbg !23433
  %110 = load i64, i64* %b, align 8, !dbg !23433, !tbaa !3848
  %add144 = add i64 %add143, %110, !dbg !23433
  store i64 %add144, i64* %y133, align 8, !dbg !23433, !tbaa !3848
  %111 = load i64*, i64** %m, align 8, !dbg !23433, !tbaa !2995
  %arrayidx145 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !23433, !ctir !2861
  store i64 %add144, i64* %arrayidx145, align 8, !dbg !23433, !tbaa !3848
  %112 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23433, !tbaa !2995
  %m146 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %112, i32 0, i32 0, !dbg !23433, !ctir !2868
  %arraydecay147 = getelementptr inbounds [256 x i64], [256 x i64]* %m146, i64 0, i64 0, !dbg !23433
  %113 = load i64, i64* %y133, align 8, !dbg !23433, !tbaa !3848
  %shr148 = lshr i64 %113, 8, !dbg !23433
  %call149 = call i64 @ind(i64* %arraydecay147, i64 %shr148), !dbg !23433
  %114 = load i64, i64* %x132, align 8, !dbg !23433, !tbaa !3848
  %add150 = add i64 %call149, %114, !dbg !23433
  %call151 = call i64 @just(i64 %add150), !dbg !23433
  store i64 %call151, i64* %b, align 8, !dbg !23433, !tbaa !3848
  %115 = load i64*, i64** %r, align 8, !dbg !23433, !tbaa !2995
  %arrayidx152 = getelementptr inbounds i64, i64* %115, i64 2, !dbg !23433, !ctir !2861
  store i64 %call151, i64* %arrayidx152, align 8, !dbg !23433, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %x153, metadata !23435, metadata !DIExpression()), !dbg !23437
  call void @llvm.dbg.declare(metadata i64* %y154, metadata !23438, metadata !DIExpression()), !dbg !23437
  %116 = load i64, i64* %a, align 8, !dbg !23437, !tbaa !3848
  %117 = load i64, i64* %a, align 8, !dbg !23437, !tbaa !3848
  %call155 = call i64 @just(i64 %117), !dbg !23437
  %shr156 = lshr i64 %call155, 33, !dbg !23437
  %xor157 = xor i64 %116, %shr156, !dbg !23437
  %xor158 = xor i64 0, %xor157, !dbg !23437
  %118 = load i64*, i64** %m, align 8, !dbg !23437, !tbaa !2995
  %arrayidx159 = getelementptr inbounds i64, i64* %118, i64 -125, !dbg !23437, !ctir !2861
  %119 = load i64, i64* %arrayidx159, align 8, !dbg !23437, !tbaa !3848
  %add160 = add i64 %xor158, %119, !dbg !23437
  store i64 %add160, i64* %a, align 8, !dbg !23437, !tbaa !3848
  %120 = load i64*, i64** %m, align 8, !dbg !23437, !tbaa !2995
  %arrayidx161 = getelementptr inbounds i64, i64* %120, i64 3, !dbg !23437, !ctir !2861
  %121 = load i64, i64* %arrayidx161, align 8, !dbg !23437, !tbaa !3848
  store i64 %121, i64* %x153, align 8, !dbg !23437, !tbaa !3848
  %122 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23437, !tbaa !2995
  %m162 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %122, i32 0, i32 0, !dbg !23437, !ctir !2868
  %arraydecay163 = getelementptr inbounds [256 x i64], [256 x i64]* %m162, i64 0, i64 0, !dbg !23437
  %123 = load i64, i64* %x153, align 8, !dbg !23437, !tbaa !3848
  %call164 = call i64 @ind(i64* %arraydecay163, i64 %123), !dbg !23437
  %124 = load i64, i64* %a, align 8, !dbg !23437, !tbaa !3848
  %add165 = add i64 %call164, %124, !dbg !23437
  %125 = load i64, i64* %b, align 8, !dbg !23437, !tbaa !3848
  %add166 = add i64 %add165, %125, !dbg !23437
  store i64 %add166, i64* %y154, align 8, !dbg !23437, !tbaa !3848
  %126 = load i64*, i64** %m, align 8, !dbg !23437, !tbaa !2995
  %arrayidx167 = getelementptr inbounds i64, i64* %126, i64 3, !dbg !23437, !ctir !2861
  store i64 %add166, i64* %arrayidx167, align 8, !dbg !23437, !tbaa !3848
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23437, !tbaa !2995
  %m168 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !23437, !ctir !2868
  %arraydecay169 = getelementptr inbounds [256 x i64], [256 x i64]* %m168, i64 0, i64 0, !dbg !23437
  %128 = load i64, i64* %y154, align 8, !dbg !23437, !tbaa !3848
  %shr170 = lshr i64 %128, 8, !dbg !23437
  %call171 = call i64 @ind(i64* %arraydecay169, i64 %shr170), !dbg !23437
  %129 = load i64, i64* %x153, align 8, !dbg !23437, !tbaa !3848
  %add172 = add i64 %call171, %129, !dbg !23437
  %call173 = call i64 @just(i64 %add172), !dbg !23437
  store i64 %call173, i64* %b, align 8, !dbg !23437, !tbaa !3848
  %130 = load i64*, i64** %r, align 8, !dbg !23437, !tbaa !2995
  %arrayidx174 = getelementptr inbounds i64, i64* %130, i64 3, !dbg !23437, !ctir !2861
  store i64 %call173, i64* %arrayidx174, align 8, !dbg !23437, !tbaa !3848
  %131 = load i64*, i64** %r, align 8, !dbg !23439, !tbaa !2995
  %add.ptr175 = getelementptr inbounds i64, i64* %131, i64 4, !dbg !23439
  store i64* %add.ptr175, i64** %r, align 8, !dbg !23439, !tbaa !2995
  br label %do.cond176, !dbg !23440

do.cond176:                                       ; preds = %do.body87
  %132 = load i64*, i64** %m, align 8, !dbg !23441, !tbaa !2995
  %add.ptr177 = getelementptr inbounds i64, i64* %132, i64 4, !dbg !23441
  store i64* %add.ptr177, i64** %m, align 8, !dbg !23441, !tbaa !2995
  %133 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23442, !tbaa !2995
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %133, i32 0, i32 0, !dbg !23443, !ctir !2868
  %arraydecay179 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 0, !dbg !23442
  %add.ptr180 = getelementptr inbounds i64, i64* %arraydecay179, i64 256, !dbg !23444
  %cmp181 = icmp ult i64* %add.ptr177, %add.ptr180, !dbg !23445
  br i1 %cmp181, label %do.body87, label %do.end182, !dbg !23440, !llvm.loop !23446

do.end182:                                        ; preds = %do.cond176
  %134 = load i64, i64* %a, align 8, !dbg !23448, !tbaa !3848
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23449, !tbaa !2995
  %a183 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 1, !dbg !23450, !ctir !2868
  store i64 %134, i64* %a183, align 8, !dbg !23451, !tbaa !23376, !ctir !2827
  %136 = load i64, i64* %b, align 8, !dbg !23452, !tbaa !3848
  %137 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23453, !tbaa !2995
  %b184 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %137, i32 0, i32 2, !dbg !23454, !ctir !2868
  store i64 %136, i64* %b184, align 8, !dbg !23455, !tbaa !23381, !ctir !2827
  ret void, !dbg !23456
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ind(i64* %m, i64 %x) #4 !dbg !23457 !ctir !2876 {
entry:
  %m.addr = alloca i64*, align 8
  %x.addr = alloca i64, align 8
  %void_m = alloca i8*, align 8, !ctir !425
  %base_p = alloca i8*, align 8, !ctir !115
  %word_p = alloca i8*, align 8, !ctir !425
  %p = alloca i64*, align 8, !ctir !2878
  store i64* %m, i64** %m.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64** %m.addr, metadata !23458, metadata !DIExpression()), !dbg !23459
  store i64 %x, i64* %x.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !23460, metadata !DIExpression()), !dbg !23461
  call void @llvm.dbg.declare(metadata i8** %void_m, metadata !23462, metadata !DIExpression()), !dbg !23465
  %0 = load i64*, i64** %m.addr, align 8, !dbg !23466, !tbaa !2995
  %1 = bitcast i64* %0 to i8*, !dbg !23466
  store i8* %1, i8** %void_m, align 8, !dbg !23465, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %base_p, metadata !23467, metadata !DIExpression()), !dbg !23468
  %2 = load i8*, i8** %void_m, align 8, !dbg !23469, !tbaa !2995
  store i8* %2, i8** %base_p, align 8, !dbg !23468, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %word_p, metadata !23470, metadata !DIExpression()), !dbg !23471
  %3 = load i8*, i8** %base_p, align 8, !dbg !23472, !tbaa !2995
  %4 = load i64, i64* %x.addr, align 8, !dbg !23473, !tbaa !3848
  %and = and i64 %4, 2040, !dbg !23474
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %and, !dbg !23475
  store i8* %add.ptr, i8** %word_p, align 8, !dbg !23471, !tbaa !2995
  call void @llvm.dbg.declare(metadata i64** %p, metadata !23476, metadata !DIExpression()), !dbg !23477
  %5 = load i8*, i8** %word_p, align 8, !dbg !23478, !tbaa !2995
  %6 = bitcast i8* %5 to i64*, !dbg !23478
  store i64* %6, i64** %p, align 8, !dbg !23477, !tbaa !2995
  %7 = load i64*, i64** %p, align 8, !dbg !23479, !tbaa !2995
  %8 = load i64, i64* %7, align 8, !dbg !23480, !tbaa !3848, !ctir !2879
  ret i64 %8, !dbg !23481
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @just(i64 %a) #4 !dbg !23482 !ctir !2880 {
entry:
  %a.addr = alloca i64, align 8
  %desired_bits = alloca i64, align 8, !ctir !2827
  store i64 %a, i64* %a.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !23483, metadata !DIExpression()), !dbg !23484
  call void @llvm.dbg.declare(metadata i64* %desired_bits, metadata !23485, metadata !DIExpression()), !dbg !23486
  store i64 -1, i64* %desired_bits, align 8, !dbg !23486, !tbaa !3848
  %0 = load i64, i64* %a.addr, align 8, !dbg !23487, !tbaa !3848
  %1 = load i64, i64* %desired_bits, align 8, !dbg !23488, !tbaa !3848
  %and = and i64 %0, %1, !dbg !23489
  ret i64 %and, !dbg !23490
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_seed(%struct.isaac_state* %s) #4 !dbg !23491 !ctir !2874 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %a = alloca i64, align 8, !ctir !2827
  %b = alloca i64, align 8, !ctir !2827
  %c = alloca i64, align 8, !ctir !2827
  %d = alloca i64, align 8, !ctir !2827
  %e = alloca i64, align 8, !ctir !2827
  %f = alloca i64, align 8, !ctir !2827
  %g = alloca i64, align 8, !ctir !2827
  %h = alloca i64, align 8, !ctir !2827
  %i = alloca i32, align 4, !ctir !7
  %i99 = alloca i32, align 4, !ctir !7
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !23492, metadata !DIExpression()), !dbg !23493
  call void @llvm.dbg.declare(metadata i64* %a, metadata !23494, metadata !DIExpression()), !dbg !23495
  store i64 7240739780546808700, i64* %a, align 8, !dbg !23495, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %b, metadata !23496, metadata !DIExpression()), !dbg !23497
  store i64 -5046086420515862430, i64* %b, align 8, !dbg !23497, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %c, metadata !23498, metadata !DIExpression()), !dbg !23499
  store i64 -8354558816804203872, i64* %c, align 8, !dbg !23499, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %d, metadata !23500, metadata !DIExpression()), !dbg !23501
  store i64 -5576812576440232668, i64* %d, align 8, !dbg !23501, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %e, metadata !23502, metadata !DIExpression()), !dbg !23503
  store i64 -9011610652101975858, i64* %e, align 8, !dbg !23503, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %f, metadata !23504, metadata !DIExpression()), !dbg !23505
  store i64 5259722845879046933, i64* %f, align 8, !dbg !23505, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %g, metadata !23506, metadata !DIExpression()), !dbg !23507
  store i64 -5865837416287532563, i64* %g, align 8, !dbg !23507, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %h, metadata !23508, metadata !DIExpression()), !dbg !23509
  store i64 -7424904924229222229, i64* %h, align 8, !dbg !23509, !tbaa !3848
  call void @llvm.dbg.declare(metadata i32* %i, metadata !23510, metadata !DIExpression()), !dbg !23512
  store i32 0, i32* %i, align 4, !dbg !23513, !tbaa !2982
  br label %for.cond, !dbg !23513

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !23515, !tbaa !2982
  %cmp = icmp slt i32 %0, 256, !dbg !23515
  br i1 %cmp, label %for.body, label %for.end, !dbg !23513

for.body:                                         ; preds = %for.cond
  %1 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %1, i32 0, i32 0, !dbg !23517, !ctir !2868
  %2 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %idxprom = sext i32 %2 to i64, !dbg !23517
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 %idxprom, !dbg !23517, !ctir !2826
  %3 = load i64, i64* %arrayidx, align 8, !dbg !23517, !tbaa !3848
  %4 = load i64, i64* %a, align 8, !dbg !23517, !tbaa !3848
  %add = add i64 %4, %3, !dbg !23517
  store i64 %add, i64* %a, align 8, !dbg !23517, !tbaa !3848
  %5 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %5, i32 0, i32 0, !dbg !23517, !ctir !2868
  %6 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %add2 = add nsw i32 %6, 1, !dbg !23517
  %idxprom3 = sext i32 %add2 to i64, !dbg !23517
  %arrayidx4 = getelementptr inbounds [256 x i64], [256 x i64]* %m1, i64 0, i64 %idxprom3, !dbg !23517, !ctir !2826
  %7 = load i64, i64* %arrayidx4, align 8, !dbg !23517, !tbaa !3848
  %8 = load i64, i64* %b, align 8, !dbg !23517, !tbaa !3848
  %add5 = add i64 %8, %7, !dbg !23517
  store i64 %add5, i64* %b, align 8, !dbg !23517, !tbaa !3848
  %9 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m6 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %9, i32 0, i32 0, !dbg !23517, !ctir !2868
  %10 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %add7 = add nsw i32 %10, 2, !dbg !23517
  %idxprom8 = sext i32 %add7 to i64, !dbg !23517
  %arrayidx9 = getelementptr inbounds [256 x i64], [256 x i64]* %m6, i64 0, i64 %idxprom8, !dbg !23517, !ctir !2826
  %11 = load i64, i64* %arrayidx9, align 8, !dbg !23517, !tbaa !3848
  %12 = load i64, i64* %c, align 8, !dbg !23517, !tbaa !3848
  %add10 = add i64 %12, %11, !dbg !23517
  store i64 %add10, i64* %c, align 8, !dbg !23517, !tbaa !3848
  %13 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m11 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %13, i32 0, i32 0, !dbg !23517, !ctir !2868
  %14 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %add12 = add nsw i32 %14, 3, !dbg !23517
  %idxprom13 = sext i32 %add12 to i64, !dbg !23517
  %arrayidx14 = getelementptr inbounds [256 x i64], [256 x i64]* %m11, i64 0, i64 %idxprom13, !dbg !23517, !ctir !2826
  %15 = load i64, i64* %arrayidx14, align 8, !dbg !23517, !tbaa !3848
  %16 = load i64, i64* %d, align 8, !dbg !23517, !tbaa !3848
  %add15 = add i64 %16, %15, !dbg !23517
  store i64 %add15, i64* %d, align 8, !dbg !23517, !tbaa !3848
  %17 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m16 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %17, i32 0, i32 0, !dbg !23517, !ctir !2868
  %18 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %add17 = add nsw i32 %18, 4, !dbg !23517
  %idxprom18 = sext i32 %add17 to i64, !dbg !23517
  %arrayidx19 = getelementptr inbounds [256 x i64], [256 x i64]* %m16, i64 0, i64 %idxprom18, !dbg !23517, !ctir !2826
  %19 = load i64, i64* %arrayidx19, align 8, !dbg !23517, !tbaa !3848
  %20 = load i64, i64* %e, align 8, !dbg !23517, !tbaa !3848
  %add20 = add i64 %20, %19, !dbg !23517
  store i64 %add20, i64* %e, align 8, !dbg !23517, !tbaa !3848
  %21 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m21 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %21, i32 0, i32 0, !dbg !23517, !ctir !2868
  %22 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %add22 = add nsw i32 %22, 5, !dbg !23517
  %idxprom23 = sext i32 %add22 to i64, !dbg !23517
  %arrayidx24 = getelementptr inbounds [256 x i64], [256 x i64]* %m21, i64 0, i64 %idxprom23, !dbg !23517, !ctir !2826
  %23 = load i64, i64* %arrayidx24, align 8, !dbg !23517, !tbaa !3848
  %24 = load i64, i64* %f, align 8, !dbg !23517, !tbaa !3848
  %add25 = add i64 %24, %23, !dbg !23517
  store i64 %add25, i64* %f, align 8, !dbg !23517, !tbaa !3848
  %25 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m26 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %25, i32 0, i32 0, !dbg !23517, !ctir !2868
  %26 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %add27 = add nsw i32 %26, 6, !dbg !23517
  %idxprom28 = sext i32 %add27 to i64, !dbg !23517
  %arrayidx29 = getelementptr inbounds [256 x i64], [256 x i64]* %m26, i64 0, i64 %idxprom28, !dbg !23517, !ctir !2826
  %27 = load i64, i64* %arrayidx29, align 8, !dbg !23517, !tbaa !3848
  %28 = load i64, i64* %g, align 8, !dbg !23517, !tbaa !3848
  %add30 = add i64 %28, %27, !dbg !23517
  store i64 %add30, i64* %g, align 8, !dbg !23517, !tbaa !3848
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m31 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !23517, !ctir !2868
  %30 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %add32 = add nsw i32 %30, 7, !dbg !23517
  %idxprom33 = sext i32 %add32 to i64, !dbg !23517
  %arrayidx34 = getelementptr inbounds [256 x i64], [256 x i64]* %m31, i64 0, i64 %idxprom33, !dbg !23517, !ctir !2826
  %31 = load i64, i64* %arrayidx34, align 8, !dbg !23517, !tbaa !3848
  %32 = load i64, i64* %h, align 8, !dbg !23517, !tbaa !3848
  %add35 = add i64 %32, %31, !dbg !23517
  store i64 %add35, i64* %h, align 8, !dbg !23517, !tbaa !3848
  %33 = load i64, i64* %e, align 8, !dbg !23519, !tbaa !3848
  %34 = load i64, i64* %a, align 8, !dbg !23519, !tbaa !3848
  %sub = sub i64 %34, %33, !dbg !23519
  store i64 %sub, i64* %a, align 8, !dbg !23519, !tbaa !3848
  %35 = load i64, i64* %h, align 8, !dbg !23519, !tbaa !3848
  %call = call i64 @just(i64 %35), !dbg !23519
  %shr = lshr i64 %call, 9, !dbg !23519
  %36 = load i64, i64* %f, align 8, !dbg !23519, !tbaa !3848
  %xor = xor i64 %36, %shr, !dbg !23519
  store i64 %xor, i64* %f, align 8, !dbg !23519, !tbaa !3848
  %37 = load i64, i64* %a, align 8, !dbg !23519, !tbaa !3848
  %38 = load i64, i64* %h, align 8, !dbg !23519, !tbaa !3848
  %add36 = add i64 %38, %37, !dbg !23519
  store i64 %add36, i64* %h, align 8, !dbg !23519, !tbaa !3848
  %39 = load i64, i64* %f, align 8, !dbg !23519, !tbaa !3848
  %40 = load i64, i64* %b, align 8, !dbg !23519, !tbaa !3848
  %sub37 = sub i64 %40, %39, !dbg !23519
  store i64 %sub37, i64* %b, align 8, !dbg !23519, !tbaa !3848
  %41 = load i64, i64* %a, align 8, !dbg !23519, !tbaa !3848
  %shl = shl i64 %41, 9, !dbg !23519
  %42 = load i64, i64* %g, align 8, !dbg !23519, !tbaa !3848
  %xor38 = xor i64 %42, %shl, !dbg !23519
  store i64 %xor38, i64* %g, align 8, !dbg !23519, !tbaa !3848
  %43 = load i64, i64* %b, align 8, !dbg !23519, !tbaa !3848
  %44 = load i64, i64* %a, align 8, !dbg !23519, !tbaa !3848
  %add39 = add i64 %44, %43, !dbg !23519
  store i64 %add39, i64* %a, align 8, !dbg !23519, !tbaa !3848
  %45 = load i64, i64* %g, align 8, !dbg !23519, !tbaa !3848
  %46 = load i64, i64* %c, align 8, !dbg !23519, !tbaa !3848
  %sub40 = sub i64 %46, %45, !dbg !23519
  store i64 %sub40, i64* %c, align 8, !dbg !23519, !tbaa !3848
  %47 = load i64, i64* %b, align 8, !dbg !23519, !tbaa !3848
  %call41 = call i64 @just(i64 %47), !dbg !23519
  %shr42 = lshr i64 %call41, 23, !dbg !23519
  %48 = load i64, i64* %h, align 8, !dbg !23519, !tbaa !3848
  %xor43 = xor i64 %48, %shr42, !dbg !23519
  store i64 %xor43, i64* %h, align 8, !dbg !23519, !tbaa !3848
  %49 = load i64, i64* %c, align 8, !dbg !23519, !tbaa !3848
  %50 = load i64, i64* %b, align 8, !dbg !23519, !tbaa !3848
  %add44 = add i64 %50, %49, !dbg !23519
  store i64 %add44, i64* %b, align 8, !dbg !23519, !tbaa !3848
  %51 = load i64, i64* %h, align 8, !dbg !23519, !tbaa !3848
  %52 = load i64, i64* %d, align 8, !dbg !23519, !tbaa !3848
  %sub45 = sub i64 %52, %51, !dbg !23519
  store i64 %sub45, i64* %d, align 8, !dbg !23519, !tbaa !3848
  %53 = load i64, i64* %c, align 8, !dbg !23519, !tbaa !3848
  %shl46 = shl i64 %53, 15, !dbg !23519
  %54 = load i64, i64* %a, align 8, !dbg !23519, !tbaa !3848
  %xor47 = xor i64 %54, %shl46, !dbg !23519
  store i64 %xor47, i64* %a, align 8, !dbg !23519, !tbaa !3848
  %55 = load i64, i64* %d, align 8, !dbg !23519, !tbaa !3848
  %56 = load i64, i64* %c, align 8, !dbg !23519, !tbaa !3848
  %add48 = add i64 %56, %55, !dbg !23519
  store i64 %add48, i64* %c, align 8, !dbg !23519, !tbaa !3848
  %57 = load i64, i64* %a, align 8, !dbg !23519, !tbaa !3848
  %58 = load i64, i64* %e, align 8, !dbg !23519, !tbaa !3848
  %sub49 = sub i64 %58, %57, !dbg !23519
  store i64 %sub49, i64* %e, align 8, !dbg !23519, !tbaa !3848
  %59 = load i64, i64* %d, align 8, !dbg !23519, !tbaa !3848
  %call50 = call i64 @just(i64 %59), !dbg !23519
  %shr51 = lshr i64 %call50, 14, !dbg !23519
  %60 = load i64, i64* %b, align 8, !dbg !23519, !tbaa !3848
  %xor52 = xor i64 %60, %shr51, !dbg !23519
  store i64 %xor52, i64* %b, align 8, !dbg !23519, !tbaa !3848
  %61 = load i64, i64* %e, align 8, !dbg !23519, !tbaa !3848
  %62 = load i64, i64* %d, align 8, !dbg !23519, !tbaa !3848
  %add53 = add i64 %62, %61, !dbg !23519
  store i64 %add53, i64* %d, align 8, !dbg !23519, !tbaa !3848
  %63 = load i64, i64* %b, align 8, !dbg !23519, !tbaa !3848
  %64 = load i64, i64* %f, align 8, !dbg !23519, !tbaa !3848
  %sub54 = sub i64 %64, %63, !dbg !23519
  store i64 %sub54, i64* %f, align 8, !dbg !23519, !tbaa !3848
  %65 = load i64, i64* %e, align 8, !dbg !23519, !tbaa !3848
  %shl55 = shl i64 %65, 20, !dbg !23519
  %66 = load i64, i64* %c, align 8, !dbg !23519, !tbaa !3848
  %xor56 = xor i64 %66, %shl55, !dbg !23519
  store i64 %xor56, i64* %c, align 8, !dbg !23519, !tbaa !3848
  %67 = load i64, i64* %f, align 8, !dbg !23519, !tbaa !3848
  %68 = load i64, i64* %e, align 8, !dbg !23519, !tbaa !3848
  %add57 = add i64 %68, %67, !dbg !23519
  store i64 %add57, i64* %e, align 8, !dbg !23519, !tbaa !3848
  %69 = load i64, i64* %c, align 8, !dbg !23519, !tbaa !3848
  %70 = load i64, i64* %g, align 8, !dbg !23519, !tbaa !3848
  %sub58 = sub i64 %70, %69, !dbg !23519
  store i64 %sub58, i64* %g, align 8, !dbg !23519, !tbaa !3848
  %71 = load i64, i64* %f, align 8, !dbg !23519, !tbaa !3848
  %call59 = call i64 @just(i64 %71), !dbg !23519
  %shr60 = lshr i64 %call59, 17, !dbg !23519
  %72 = load i64, i64* %d, align 8, !dbg !23519, !tbaa !3848
  %xor61 = xor i64 %72, %shr60, !dbg !23519
  store i64 %xor61, i64* %d, align 8, !dbg !23519, !tbaa !3848
  %73 = load i64, i64* %g, align 8, !dbg !23519, !tbaa !3848
  %74 = load i64, i64* %f, align 8, !dbg !23519, !tbaa !3848
  %add62 = add i64 %74, %73, !dbg !23519
  store i64 %add62, i64* %f, align 8, !dbg !23519, !tbaa !3848
  %75 = load i64, i64* %d, align 8, !dbg !23519, !tbaa !3848
  %76 = load i64, i64* %h, align 8, !dbg !23519, !tbaa !3848
  %sub63 = sub i64 %76, %75, !dbg !23519
  store i64 %sub63, i64* %h, align 8, !dbg !23519, !tbaa !3848
  %77 = load i64, i64* %g, align 8, !dbg !23519, !tbaa !3848
  %shl64 = shl i64 %77, 14, !dbg !23519
  %78 = load i64, i64* %e, align 8, !dbg !23519, !tbaa !3848
  %xor65 = xor i64 %78, %shl64, !dbg !23519
  store i64 %xor65, i64* %e, align 8, !dbg !23519, !tbaa !3848
  %79 = load i64, i64* %h, align 8, !dbg !23519, !tbaa !3848
  %80 = load i64, i64* %g, align 8, !dbg !23519, !tbaa !3848
  %add66 = add i64 %80, %79, !dbg !23519
  store i64 %add66, i64* %g, align 8, !dbg !23519, !tbaa !3848
  %81 = load i64, i64* %a, align 8, !dbg !23517, !tbaa !3848
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m67 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !23517, !ctir !2868
  %83 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %idxprom68 = sext i32 %83 to i64, !dbg !23517
  %arrayidx69 = getelementptr inbounds [256 x i64], [256 x i64]* %m67, i64 0, i64 %idxprom68, !dbg !23517, !ctir !2826
  store i64 %81, i64* %arrayidx69, align 8, !dbg !23517, !tbaa !3848
  %84 = load i64, i64* %b, align 8, !dbg !23517, !tbaa !3848
  %85 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %85, i32 0, i32 0, !dbg !23517, !ctir !2868
  %86 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %add71 = add nsw i32 %86, 1, !dbg !23517
  %idxprom72 = sext i32 %add71 to i64, !dbg !23517
  %arrayidx73 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 %idxprom72, !dbg !23517, !ctir !2826
  store i64 %84, i64* %arrayidx73, align 8, !dbg !23517, !tbaa !3848
  %87 = load i64, i64* %c, align 8, !dbg !23517, !tbaa !3848
  %88 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m74 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %88, i32 0, i32 0, !dbg !23517, !ctir !2868
  %89 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %add75 = add nsw i32 %89, 2, !dbg !23517
  %idxprom76 = sext i32 %add75 to i64, !dbg !23517
  %arrayidx77 = getelementptr inbounds [256 x i64], [256 x i64]* %m74, i64 0, i64 %idxprom76, !dbg !23517, !ctir !2826
  store i64 %87, i64* %arrayidx77, align 8, !dbg !23517, !tbaa !3848
  %90 = load i64, i64* %d, align 8, !dbg !23517, !tbaa !3848
  %91 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m78 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %91, i32 0, i32 0, !dbg !23517, !ctir !2868
  %92 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %add79 = add nsw i32 %92, 3, !dbg !23517
  %idxprom80 = sext i32 %add79 to i64, !dbg !23517
  %arrayidx81 = getelementptr inbounds [256 x i64], [256 x i64]* %m78, i64 0, i64 %idxprom80, !dbg !23517, !ctir !2826
  store i64 %90, i64* %arrayidx81, align 8, !dbg !23517, !tbaa !3848
  %93 = load i64, i64* %e, align 8, !dbg !23517, !tbaa !3848
  %94 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m82 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %94, i32 0, i32 0, !dbg !23517, !ctir !2868
  %95 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %add83 = add nsw i32 %95, 4, !dbg !23517
  %idxprom84 = sext i32 %add83 to i64, !dbg !23517
  %arrayidx85 = getelementptr inbounds [256 x i64], [256 x i64]* %m82, i64 0, i64 %idxprom84, !dbg !23517, !ctir !2826
  store i64 %93, i64* %arrayidx85, align 8, !dbg !23517, !tbaa !3848
  %96 = load i64, i64* %f, align 8, !dbg !23517, !tbaa !3848
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m86 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !23517, !ctir !2868
  %98 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %add87 = add nsw i32 %98, 5, !dbg !23517
  %idxprom88 = sext i32 %add87 to i64, !dbg !23517
  %arrayidx89 = getelementptr inbounds [256 x i64], [256 x i64]* %m86, i64 0, i64 %idxprom88, !dbg !23517, !ctir !2826
  store i64 %96, i64* %arrayidx89, align 8, !dbg !23517, !tbaa !3848
  %99 = load i64, i64* %g, align 8, !dbg !23517, !tbaa !3848
  %100 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m90 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %100, i32 0, i32 0, !dbg !23517, !ctir !2868
  %101 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %add91 = add nsw i32 %101, 6, !dbg !23517
  %idxprom92 = sext i32 %add91 to i64, !dbg !23517
  %arrayidx93 = getelementptr inbounds [256 x i64], [256 x i64]* %m90, i64 0, i64 %idxprom92, !dbg !23517, !ctir !2826
  store i64 %99, i64* %arrayidx93, align 8, !dbg !23517, !tbaa !3848
  %102 = load i64, i64* %h, align 8, !dbg !23517, !tbaa !3848
  %103 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23517, !tbaa !2995
  %m94 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %103, i32 0, i32 0, !dbg !23517, !ctir !2868
  %104 = load i32, i32* %i, align 4, !dbg !23517, !tbaa !2982
  %add95 = add nsw i32 %104, 7, !dbg !23517
  %idxprom96 = sext i32 %add95 to i64, !dbg !23517
  %arrayidx97 = getelementptr inbounds [256 x i64], [256 x i64]* %m94, i64 0, i64 %idxprom96, !dbg !23517, !ctir !2826
  store i64 %102, i64* %arrayidx97, align 8, !dbg !23517, !tbaa !3848
  br label %for.inc, !dbg !23517

for.inc:                                          ; preds = %for.body
  %105 = load i32, i32* %i, align 4, !dbg !23515, !tbaa !2982
  %add98 = add nsw i32 %105, 8, !dbg !23515
  store i32 %add98, i32* %i, align 4, !dbg !23515, !tbaa !2982
  br label %for.cond, !dbg !23515, !llvm.loop !23521

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i99, metadata !23522, metadata !DIExpression()), !dbg !23524
  store i32 0, i32* %i99, align 4, !dbg !23525, !tbaa !2982
  br label %for.cond100, !dbg !23525

for.cond100:                                      ; preds = %for.inc209, %for.end
  %106 = load i32, i32* %i99, align 4, !dbg !23527, !tbaa !2982
  %cmp101 = icmp slt i32 %106, 256, !dbg !23527
  br i1 %cmp101, label %for.body102, label %for.end211, !dbg !23525

for.body102:                                      ; preds = %for.cond100
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !23529, !ctir !2868
  %108 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %idxprom104 = sext i32 %108 to i64, !dbg !23529
  %arrayidx105 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 %idxprom104, !dbg !23529, !ctir !2826
  %109 = load i64, i64* %arrayidx105, align 8, !dbg !23529, !tbaa !3848
  %110 = load i64, i64* %a, align 8, !dbg !23529, !tbaa !3848
  %add106 = add i64 %110, %109, !dbg !23529
  store i64 %add106, i64* %a, align 8, !dbg !23529, !tbaa !3848
  %111 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m107 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %111, i32 0, i32 0, !dbg !23529, !ctir !2868
  %112 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %add108 = add nsw i32 %112, 1, !dbg !23529
  %idxprom109 = sext i32 %add108 to i64, !dbg !23529
  %arrayidx110 = getelementptr inbounds [256 x i64], [256 x i64]* %m107, i64 0, i64 %idxprom109, !dbg !23529, !ctir !2826
  %113 = load i64, i64* %arrayidx110, align 8, !dbg !23529, !tbaa !3848
  %114 = load i64, i64* %b, align 8, !dbg !23529, !tbaa !3848
  %add111 = add i64 %114, %113, !dbg !23529
  store i64 %add111, i64* %b, align 8, !dbg !23529, !tbaa !3848
  %115 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m112 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %115, i32 0, i32 0, !dbg !23529, !ctir !2868
  %116 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %add113 = add nsw i32 %116, 2, !dbg !23529
  %idxprom114 = sext i32 %add113 to i64, !dbg !23529
  %arrayidx115 = getelementptr inbounds [256 x i64], [256 x i64]* %m112, i64 0, i64 %idxprom114, !dbg !23529, !ctir !2826
  %117 = load i64, i64* %arrayidx115, align 8, !dbg !23529, !tbaa !3848
  %118 = load i64, i64* %c, align 8, !dbg !23529, !tbaa !3848
  %add116 = add i64 %118, %117, !dbg !23529
  store i64 %add116, i64* %c, align 8, !dbg !23529, !tbaa !3848
  %119 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m117 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %119, i32 0, i32 0, !dbg !23529, !ctir !2868
  %120 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %add118 = add nsw i32 %120, 3, !dbg !23529
  %idxprom119 = sext i32 %add118 to i64, !dbg !23529
  %arrayidx120 = getelementptr inbounds [256 x i64], [256 x i64]* %m117, i64 0, i64 %idxprom119, !dbg !23529, !ctir !2826
  %121 = load i64, i64* %arrayidx120, align 8, !dbg !23529, !tbaa !3848
  %122 = load i64, i64* %d, align 8, !dbg !23529, !tbaa !3848
  %add121 = add i64 %122, %121, !dbg !23529
  store i64 %add121, i64* %d, align 8, !dbg !23529, !tbaa !3848
  %123 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m122 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %123, i32 0, i32 0, !dbg !23529, !ctir !2868
  %124 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %add123 = add nsw i32 %124, 4, !dbg !23529
  %idxprom124 = sext i32 %add123 to i64, !dbg !23529
  %arrayidx125 = getelementptr inbounds [256 x i64], [256 x i64]* %m122, i64 0, i64 %idxprom124, !dbg !23529, !ctir !2826
  %125 = load i64, i64* %arrayidx125, align 8, !dbg !23529, !tbaa !3848
  %126 = load i64, i64* %e, align 8, !dbg !23529, !tbaa !3848
  %add126 = add i64 %126, %125, !dbg !23529
  store i64 %add126, i64* %e, align 8, !dbg !23529, !tbaa !3848
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m127 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !23529, !ctir !2868
  %128 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %add128 = add nsw i32 %128, 5, !dbg !23529
  %idxprom129 = sext i32 %add128 to i64, !dbg !23529
  %arrayidx130 = getelementptr inbounds [256 x i64], [256 x i64]* %m127, i64 0, i64 %idxprom129, !dbg !23529, !ctir !2826
  %129 = load i64, i64* %arrayidx130, align 8, !dbg !23529, !tbaa !3848
  %130 = load i64, i64* %f, align 8, !dbg !23529, !tbaa !3848
  %add131 = add i64 %130, %129, !dbg !23529
  store i64 %add131, i64* %f, align 8, !dbg !23529, !tbaa !3848
  %131 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m132 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %131, i32 0, i32 0, !dbg !23529, !ctir !2868
  %132 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %add133 = add nsw i32 %132, 6, !dbg !23529
  %idxprom134 = sext i32 %add133 to i64, !dbg !23529
  %arrayidx135 = getelementptr inbounds [256 x i64], [256 x i64]* %m132, i64 0, i64 %idxprom134, !dbg !23529, !ctir !2826
  %133 = load i64, i64* %arrayidx135, align 8, !dbg !23529, !tbaa !3848
  %134 = load i64, i64* %g, align 8, !dbg !23529, !tbaa !3848
  %add136 = add i64 %134, %133, !dbg !23529
  store i64 %add136, i64* %g, align 8, !dbg !23529, !tbaa !3848
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m137 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 0, !dbg !23529, !ctir !2868
  %136 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %add138 = add nsw i32 %136, 7, !dbg !23529
  %idxprom139 = sext i32 %add138 to i64, !dbg !23529
  %arrayidx140 = getelementptr inbounds [256 x i64], [256 x i64]* %m137, i64 0, i64 %idxprom139, !dbg !23529, !ctir !2826
  %137 = load i64, i64* %arrayidx140, align 8, !dbg !23529, !tbaa !3848
  %138 = load i64, i64* %h, align 8, !dbg !23529, !tbaa !3848
  %add141 = add i64 %138, %137, !dbg !23529
  store i64 %add141, i64* %h, align 8, !dbg !23529, !tbaa !3848
  %139 = load i64, i64* %e, align 8, !dbg !23531, !tbaa !3848
  %140 = load i64, i64* %a, align 8, !dbg !23531, !tbaa !3848
  %sub142 = sub i64 %140, %139, !dbg !23531
  store i64 %sub142, i64* %a, align 8, !dbg !23531, !tbaa !3848
  %141 = load i64, i64* %h, align 8, !dbg !23531, !tbaa !3848
  %call143 = call i64 @just(i64 %141), !dbg !23531
  %shr144 = lshr i64 %call143, 9, !dbg !23531
  %142 = load i64, i64* %f, align 8, !dbg !23531, !tbaa !3848
  %xor145 = xor i64 %142, %shr144, !dbg !23531
  store i64 %xor145, i64* %f, align 8, !dbg !23531, !tbaa !3848
  %143 = load i64, i64* %a, align 8, !dbg !23531, !tbaa !3848
  %144 = load i64, i64* %h, align 8, !dbg !23531, !tbaa !3848
  %add146 = add i64 %144, %143, !dbg !23531
  store i64 %add146, i64* %h, align 8, !dbg !23531, !tbaa !3848
  %145 = load i64, i64* %f, align 8, !dbg !23531, !tbaa !3848
  %146 = load i64, i64* %b, align 8, !dbg !23531, !tbaa !3848
  %sub147 = sub i64 %146, %145, !dbg !23531
  store i64 %sub147, i64* %b, align 8, !dbg !23531, !tbaa !3848
  %147 = load i64, i64* %a, align 8, !dbg !23531, !tbaa !3848
  %shl148 = shl i64 %147, 9, !dbg !23531
  %148 = load i64, i64* %g, align 8, !dbg !23531, !tbaa !3848
  %xor149 = xor i64 %148, %shl148, !dbg !23531
  store i64 %xor149, i64* %g, align 8, !dbg !23531, !tbaa !3848
  %149 = load i64, i64* %b, align 8, !dbg !23531, !tbaa !3848
  %150 = load i64, i64* %a, align 8, !dbg !23531, !tbaa !3848
  %add150 = add i64 %150, %149, !dbg !23531
  store i64 %add150, i64* %a, align 8, !dbg !23531, !tbaa !3848
  %151 = load i64, i64* %g, align 8, !dbg !23531, !tbaa !3848
  %152 = load i64, i64* %c, align 8, !dbg !23531, !tbaa !3848
  %sub151 = sub i64 %152, %151, !dbg !23531
  store i64 %sub151, i64* %c, align 8, !dbg !23531, !tbaa !3848
  %153 = load i64, i64* %b, align 8, !dbg !23531, !tbaa !3848
  %call152 = call i64 @just(i64 %153), !dbg !23531
  %shr153 = lshr i64 %call152, 23, !dbg !23531
  %154 = load i64, i64* %h, align 8, !dbg !23531, !tbaa !3848
  %xor154 = xor i64 %154, %shr153, !dbg !23531
  store i64 %xor154, i64* %h, align 8, !dbg !23531, !tbaa !3848
  %155 = load i64, i64* %c, align 8, !dbg !23531, !tbaa !3848
  %156 = load i64, i64* %b, align 8, !dbg !23531, !tbaa !3848
  %add155 = add i64 %156, %155, !dbg !23531
  store i64 %add155, i64* %b, align 8, !dbg !23531, !tbaa !3848
  %157 = load i64, i64* %h, align 8, !dbg !23531, !tbaa !3848
  %158 = load i64, i64* %d, align 8, !dbg !23531, !tbaa !3848
  %sub156 = sub i64 %158, %157, !dbg !23531
  store i64 %sub156, i64* %d, align 8, !dbg !23531, !tbaa !3848
  %159 = load i64, i64* %c, align 8, !dbg !23531, !tbaa !3848
  %shl157 = shl i64 %159, 15, !dbg !23531
  %160 = load i64, i64* %a, align 8, !dbg !23531, !tbaa !3848
  %xor158 = xor i64 %160, %shl157, !dbg !23531
  store i64 %xor158, i64* %a, align 8, !dbg !23531, !tbaa !3848
  %161 = load i64, i64* %d, align 8, !dbg !23531, !tbaa !3848
  %162 = load i64, i64* %c, align 8, !dbg !23531, !tbaa !3848
  %add159 = add i64 %162, %161, !dbg !23531
  store i64 %add159, i64* %c, align 8, !dbg !23531, !tbaa !3848
  %163 = load i64, i64* %a, align 8, !dbg !23531, !tbaa !3848
  %164 = load i64, i64* %e, align 8, !dbg !23531, !tbaa !3848
  %sub160 = sub i64 %164, %163, !dbg !23531
  store i64 %sub160, i64* %e, align 8, !dbg !23531, !tbaa !3848
  %165 = load i64, i64* %d, align 8, !dbg !23531, !tbaa !3848
  %call161 = call i64 @just(i64 %165), !dbg !23531
  %shr162 = lshr i64 %call161, 14, !dbg !23531
  %166 = load i64, i64* %b, align 8, !dbg !23531, !tbaa !3848
  %xor163 = xor i64 %166, %shr162, !dbg !23531
  store i64 %xor163, i64* %b, align 8, !dbg !23531, !tbaa !3848
  %167 = load i64, i64* %e, align 8, !dbg !23531, !tbaa !3848
  %168 = load i64, i64* %d, align 8, !dbg !23531, !tbaa !3848
  %add164 = add i64 %168, %167, !dbg !23531
  store i64 %add164, i64* %d, align 8, !dbg !23531, !tbaa !3848
  %169 = load i64, i64* %b, align 8, !dbg !23531, !tbaa !3848
  %170 = load i64, i64* %f, align 8, !dbg !23531, !tbaa !3848
  %sub165 = sub i64 %170, %169, !dbg !23531
  store i64 %sub165, i64* %f, align 8, !dbg !23531, !tbaa !3848
  %171 = load i64, i64* %e, align 8, !dbg !23531, !tbaa !3848
  %shl166 = shl i64 %171, 20, !dbg !23531
  %172 = load i64, i64* %c, align 8, !dbg !23531, !tbaa !3848
  %xor167 = xor i64 %172, %shl166, !dbg !23531
  store i64 %xor167, i64* %c, align 8, !dbg !23531, !tbaa !3848
  %173 = load i64, i64* %f, align 8, !dbg !23531, !tbaa !3848
  %174 = load i64, i64* %e, align 8, !dbg !23531, !tbaa !3848
  %add168 = add i64 %174, %173, !dbg !23531
  store i64 %add168, i64* %e, align 8, !dbg !23531, !tbaa !3848
  %175 = load i64, i64* %c, align 8, !dbg !23531, !tbaa !3848
  %176 = load i64, i64* %g, align 8, !dbg !23531, !tbaa !3848
  %sub169 = sub i64 %176, %175, !dbg !23531
  store i64 %sub169, i64* %g, align 8, !dbg !23531, !tbaa !3848
  %177 = load i64, i64* %f, align 8, !dbg !23531, !tbaa !3848
  %call170 = call i64 @just(i64 %177), !dbg !23531
  %shr171 = lshr i64 %call170, 17, !dbg !23531
  %178 = load i64, i64* %d, align 8, !dbg !23531, !tbaa !3848
  %xor172 = xor i64 %178, %shr171, !dbg !23531
  store i64 %xor172, i64* %d, align 8, !dbg !23531, !tbaa !3848
  %179 = load i64, i64* %g, align 8, !dbg !23531, !tbaa !3848
  %180 = load i64, i64* %f, align 8, !dbg !23531, !tbaa !3848
  %add173 = add i64 %180, %179, !dbg !23531
  store i64 %add173, i64* %f, align 8, !dbg !23531, !tbaa !3848
  %181 = load i64, i64* %d, align 8, !dbg !23531, !tbaa !3848
  %182 = load i64, i64* %h, align 8, !dbg !23531, !tbaa !3848
  %sub174 = sub i64 %182, %181, !dbg !23531
  store i64 %sub174, i64* %h, align 8, !dbg !23531, !tbaa !3848
  %183 = load i64, i64* %g, align 8, !dbg !23531, !tbaa !3848
  %shl175 = shl i64 %183, 14, !dbg !23531
  %184 = load i64, i64* %e, align 8, !dbg !23531, !tbaa !3848
  %xor176 = xor i64 %184, %shl175, !dbg !23531
  store i64 %xor176, i64* %e, align 8, !dbg !23531, !tbaa !3848
  %185 = load i64, i64* %h, align 8, !dbg !23531, !tbaa !3848
  %186 = load i64, i64* %g, align 8, !dbg !23531, !tbaa !3848
  %add177 = add i64 %186, %185, !dbg !23531
  store i64 %add177, i64* %g, align 8, !dbg !23531, !tbaa !3848
  %187 = load i64, i64* %a, align 8, !dbg !23529, !tbaa !3848
  %188 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %188, i32 0, i32 0, !dbg !23529, !ctir !2868
  %189 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %idxprom179 = sext i32 %189 to i64, !dbg !23529
  %arrayidx180 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 %idxprom179, !dbg !23529, !ctir !2826
  store i64 %187, i64* %arrayidx180, align 8, !dbg !23529, !tbaa !3848
  %190 = load i64, i64* %b, align 8, !dbg !23529, !tbaa !3848
  %191 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m181 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %191, i32 0, i32 0, !dbg !23529, !ctir !2868
  %192 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %add182 = add nsw i32 %192, 1, !dbg !23529
  %idxprom183 = sext i32 %add182 to i64, !dbg !23529
  %arrayidx184 = getelementptr inbounds [256 x i64], [256 x i64]* %m181, i64 0, i64 %idxprom183, !dbg !23529, !ctir !2826
  store i64 %190, i64* %arrayidx184, align 8, !dbg !23529, !tbaa !3848
  %193 = load i64, i64* %c, align 8, !dbg !23529, !tbaa !3848
  %194 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m185 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %194, i32 0, i32 0, !dbg !23529, !ctir !2868
  %195 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %add186 = add nsw i32 %195, 2, !dbg !23529
  %idxprom187 = sext i32 %add186 to i64, !dbg !23529
  %arrayidx188 = getelementptr inbounds [256 x i64], [256 x i64]* %m185, i64 0, i64 %idxprom187, !dbg !23529, !ctir !2826
  store i64 %193, i64* %arrayidx188, align 8, !dbg !23529, !tbaa !3848
  %196 = load i64, i64* %d, align 8, !dbg !23529, !tbaa !3848
  %197 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m189 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %197, i32 0, i32 0, !dbg !23529, !ctir !2868
  %198 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %add190 = add nsw i32 %198, 3, !dbg !23529
  %idxprom191 = sext i32 %add190 to i64, !dbg !23529
  %arrayidx192 = getelementptr inbounds [256 x i64], [256 x i64]* %m189, i64 0, i64 %idxprom191, !dbg !23529, !ctir !2826
  store i64 %196, i64* %arrayidx192, align 8, !dbg !23529, !tbaa !3848
  %199 = load i64, i64* %e, align 8, !dbg !23529, !tbaa !3848
  %200 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m193 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %200, i32 0, i32 0, !dbg !23529, !ctir !2868
  %201 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %add194 = add nsw i32 %201, 4, !dbg !23529
  %idxprom195 = sext i32 %add194 to i64, !dbg !23529
  %arrayidx196 = getelementptr inbounds [256 x i64], [256 x i64]* %m193, i64 0, i64 %idxprom195, !dbg !23529, !ctir !2826
  store i64 %199, i64* %arrayidx196, align 8, !dbg !23529, !tbaa !3848
  %202 = load i64, i64* %f, align 8, !dbg !23529, !tbaa !3848
  %203 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m197 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %203, i32 0, i32 0, !dbg !23529, !ctir !2868
  %204 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %add198 = add nsw i32 %204, 5, !dbg !23529
  %idxprom199 = sext i32 %add198 to i64, !dbg !23529
  %arrayidx200 = getelementptr inbounds [256 x i64], [256 x i64]* %m197, i64 0, i64 %idxprom199, !dbg !23529, !ctir !2826
  store i64 %202, i64* %arrayidx200, align 8, !dbg !23529, !tbaa !3848
  %205 = load i64, i64* %g, align 8, !dbg !23529, !tbaa !3848
  %206 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m201 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %206, i32 0, i32 0, !dbg !23529, !ctir !2868
  %207 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %add202 = add nsw i32 %207, 6, !dbg !23529
  %idxprom203 = sext i32 %add202 to i64, !dbg !23529
  %arrayidx204 = getelementptr inbounds [256 x i64], [256 x i64]* %m201, i64 0, i64 %idxprom203, !dbg !23529, !ctir !2826
  store i64 %205, i64* %arrayidx204, align 8, !dbg !23529, !tbaa !3848
  %208 = load i64, i64* %h, align 8, !dbg !23529, !tbaa !3848
  %209 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2995
  %m205 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %209, i32 0, i32 0, !dbg !23529, !ctir !2868
  %210 = load i32, i32* %i99, align 4, !dbg !23529, !tbaa !2982
  %add206 = add nsw i32 %210, 7, !dbg !23529
  %idxprom207 = sext i32 %add206 to i64, !dbg !23529
  %arrayidx208 = getelementptr inbounds [256 x i64], [256 x i64]* %m205, i64 0, i64 %idxprom207, !dbg !23529, !ctir !2826
  store i64 %208, i64* %arrayidx208, align 8, !dbg !23529, !tbaa !3848
  br label %for.inc209, !dbg !23529

for.inc209:                                       ; preds = %for.body102
  %211 = load i32, i32* %i99, align 4, !dbg !23527, !tbaa !2982
  %add210 = add nsw i32 %211, 8, !dbg !23527
  store i32 %add210, i32* %i99, align 4, !dbg !23527, !tbaa !2982
  br label %for.cond100, !dbg !23527, !llvm.loop !23533

for.end211:                                       ; preds = %for.cond100
  %212 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23534, !tbaa !2995
  %c212 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %212, i32 0, i32 3, !dbg !23535, !ctir !2868
  store i64 0, i64* %c212, align 8, !dbg !23536, !tbaa !23385, !ctir !2827
  %213 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23537, !tbaa !2995
  %b213 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %213, i32 0, i32 2, !dbg !23538, !ctir !2868
  store i64 0, i64* %b213, align 8, !dbg !23539, !tbaa !23381, !ctir !2827
  %214 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23540, !tbaa !2995
  %a214 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %214, i32 0, i32 1, !dbg !23541, !ctir !2868
  store i64 0, i64* %a214, align 8, !dbg !23542, !tbaa !23376, !ctir !2827
  ret void, !dbg !23543
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dup_safer(i32 %fd) #4 !dbg !23544 !ctir !1827 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23546, metadata !DIExpression()), !dbg !23547
  %0 = load i32, i32* %fd.addr, align 4, !dbg !23548, !tbaa !2982
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 3), !dbg !23549
  ret i32 %call, !dbg !23550
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum(i64 %size1, i64 %size2) #9 !dbg !23551 !ctir !2888 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %sum = alloca i64, align 8, !ctir !55
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !23553, metadata !DIExpression()), !dbg !23554
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !23555, metadata !DIExpression()), !dbg !23556
  call void @llvm.dbg.declare(metadata i64* %sum, metadata !23557, metadata !DIExpression()), !dbg !23558
  %0 = load i64, i64* %size1.addr, align 8, !dbg !23559, !tbaa !3848
  %1 = load i64, i64* %size2.addr, align 8, !dbg !23560, !tbaa !3848
  %add = add i64 %0, %1, !dbg !23561
  store i64 %add, i64* %sum, align 8, !dbg !23558, !tbaa !3848
  %2 = load i64, i64* %sum, align 8, !dbg !23562, !tbaa !3848
  %3 = load i64, i64* %size1.addr, align 8, !dbg !23563, !tbaa !3848
  %cmp = icmp uge i64 %2, %3, !dbg !23564
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !23562

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* %sum, align 8, !dbg !23565, !tbaa !3848
  br label %cond.end, !dbg !23562

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !23562

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ -1, %cond.false ], !dbg !23562
  ret i64 %cond, !dbg !23566
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum3(i64 %size1, i64 %size2, i64 %size3) #9 !dbg !23567 !ctir !1600 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %size3.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !23568, metadata !DIExpression()), !dbg !23569
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !23570, metadata !DIExpression()), !dbg !23571
  store i64 %size3, i64* %size3.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size3.addr, metadata !23572, metadata !DIExpression()), !dbg !23573
  %0 = load i64, i64* %size1.addr, align 8, !dbg !23574, !tbaa !3848
  %1 = load i64, i64* %size2.addr, align 8, !dbg !23575, !tbaa !3848
  %call = call i64 @xsum(i64 %0, i64 %1) #14, !dbg !23576
  %2 = load i64, i64* %size3.addr, align 8, !dbg !23577, !tbaa !3848
  %call1 = call i64 @xsum(i64 %call, i64 %2) #14, !dbg !23578
  ret i64 %call1, !dbg !23579
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum4(i64 %size1, i64 %size2, i64 %size3, i64 %size4) #9 !dbg !23580 !ctir !2890 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %size3.addr = alloca i64, align 8
  %size4.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !23581, metadata !DIExpression()), !dbg !23582
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !23583, metadata !DIExpression()), !dbg !23584
  store i64 %size3, i64* %size3.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size3.addr, metadata !23585, metadata !DIExpression()), !dbg !23586
  store i64 %size4, i64* %size4.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size4.addr, metadata !23587, metadata !DIExpression()), !dbg !23588
  %0 = load i64, i64* %size1.addr, align 8, !dbg !23589, !tbaa !3848
  %1 = load i64, i64* %size2.addr, align 8, !dbg !23590, !tbaa !3848
  %call = call i64 @xsum(i64 %0, i64 %1) #14, !dbg !23591
  %2 = load i64, i64* %size3.addr, align 8, !dbg !23592, !tbaa !3848
  %call1 = call i64 @xsum(i64 %call, i64 %2) #14, !dbg !23593
  %3 = load i64, i64* %size4.addr, align 8, !dbg !23594, !tbaa !3848
  %call2 = call i64 @xsum(i64 %call1, i64 %3) #14, !dbg !23595
  ret i64 %call2, !dbg !23596
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xmax(i64 %size1, i64 %size2) #9 !dbg !23597 !ctir !2888 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !23598, metadata !DIExpression()), !dbg !23599
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3848
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !23600, metadata !DIExpression()), !dbg !23601
  %0 = load i64, i64* %size1.addr, align 8, !dbg !23602, !tbaa !3848
  %1 = load i64, i64* %size2.addr, align 8, !dbg !23603, !tbaa !3848
  %cmp = icmp uge i64 %0, %1, !dbg !23604
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !23602

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %size1.addr, align 8, !dbg !23605, !tbaa !3848
  br label %cond.end, !dbg !23602

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %size2.addr, align 8, !dbg !23606, !tbaa !3848
  br label %cond.end, !dbg !23602

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !23602
  ret i64 %cond, !dbg !23607
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #4 !dbg !23608 !ctir !2895 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %saved_errno = alloca i32, align 4, !ctir !7
  %fd = alloca i32, align 4, !ctir !7
  %result = alloca i32, align 4, !ctir !7
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !23610, metadata !DIExpression()), !dbg !23611
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !23612, metadata !DIExpression()), !dbg !23613
  store i32 0, i32* %saved_errno, align 4, !dbg !23613, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !23614, metadata !DIExpression()), !dbg !23615
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23616, metadata !DIExpression()), !dbg !23617
  store i32 0, i32* %result, align 4, !dbg !23617, !tbaa !2982
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23618, !tbaa !2995
  %call = call i32 @fileno(%struct._IO_FILE* %0) #10, !dbg !23619
  store i32 %call, i32* %fd, align 4, !dbg !23620, !tbaa !2982
  %1 = load i32, i32* %fd, align 4, !dbg !23621, !tbaa !2982
  %cmp = icmp slt i32 %1, 0, !dbg !23623
  br i1 %cmp, label %if.then, label %if.end, !dbg !23624

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23625, !tbaa !2995
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !23626
  store i32 %call1, i32* %retval, align 4, !dbg !23627
  br label %return, !dbg !23627

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23628, !tbaa !2995
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #10, !dbg !23628
  %cmp3 = icmp ne i32 %call2, 0, !dbg !23628
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !23630

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23631, !tbaa !2995
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #10, !dbg !23632
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #10, !dbg !23633
  %cmp6 = icmp ne i64 %call5, -1, !dbg !23634
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !23635

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23636, !tbaa !2995
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !23637
  %tobool = icmp ne i32 %call7, 0, !dbg !23637
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !23638

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #15, !dbg !23639
  %6 = load i32, i32* %call9, align 4, !dbg !23639, !tbaa !2982, !ctir !7
  store i32 %6, i32* %saved_errno, align 4, !dbg !23640, !tbaa !2982
  br label %if.end10, !dbg !23641

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23642, !tbaa !2995
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !23643
  store i32 %call11, i32* %result, align 4, !dbg !23644, !tbaa !2982
  %8 = load i32, i32* %saved_errno, align 4, !dbg !23645, !tbaa !2982
  %cmp12 = icmp ne i32 %8, 0, !dbg !23647
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !23648

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !23649, !tbaa !2982
  %call14 = call i32* @__errno_location() #15, !dbg !23651
  store i32 %9, i32* %call14, align 4, !dbg !23652, !tbaa !2982, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !23653, !tbaa !2982
  br label %if.end15, !dbg !23654

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !23655, !tbaa !2982
  store i32 %10, i32* %retval, align 4, !dbg !23656
  br label %return, !dbg !23656

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !23657
  ret i32 %11, !dbg !23657
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fcntl(i32 %fd, i32 %action, ...) #4 !dbg !23658 !ctir !417 {
entry:
  %fd.addr = alloca i32, align 4
  %action.addr = alloca i32, align 4
  %arg = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1312
  %result = alloca i32, align 4, !ctir !7
  %target = alloca i32, align 4, !ctir !7
  %target4 = alloca i32, align 4, !ctir !7
  %x = alloca i32, align 4, !ctir !7
  %p = alloca i8*, align 8, !ctir !53
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23661, metadata !DIExpression()), !dbg !23662
  store i32 %action, i32* %action.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !23663, metadata !DIExpression()), !dbg !23664
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %arg, metadata !23665, metadata !DIExpression()), !dbg !23666
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23667, metadata !DIExpression()), !dbg !23668
  store i32 -1, i32* %result, align 4, !dbg !23668, !tbaa !2982
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23669
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !23669
  call void @llvm.va_start(i8* %arraydecay1), !dbg !23669
  %0 = load i32, i32* %action.addr, align 4, !dbg !23670, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1030, label %sw.bb3
  ], !dbg !23671

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target, metadata !23672, metadata !DIExpression()), !dbg !23675
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23676
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !23676
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !23676
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !23676
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !23676

vaarg.in_reg:                                     ; preds = %sw.bb
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !23676
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !23676
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !23676
  %3 = bitcast i8* %2 to i32*, !dbg !23676
  %4 = add i32 %gp_offset, 8, !dbg !23676
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !23676
  br label %vaarg.end, !dbg !23676

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !23676
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !23676
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !23676
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !23676
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !23676
  br label %vaarg.end, !dbg !23676

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !23676
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !23676
  store i32 %6, i32* %target, align 4, !dbg !23675, !tbaa !2982
  %7 = load i32, i32* %fd.addr, align 4, !dbg !23677, !tbaa !2982
  %8 = load i32, i32* %target, align 4, !dbg !23678, !tbaa !2982
  %call = call i32 @rpl_fcntl_DUPFD(i32 %7, i32 %8), !dbg !23679
  store i32 %call, i32* %result, align 4, !dbg !23680, !tbaa !2982
  br label %sw.epilog48, !dbg !23681

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target4, metadata !23682, metadata !DIExpression()), !dbg !23684
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23685
  %gp_offset_p6 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 0, !dbg !23685
  %gp_offset7 = load i32, i32* %gp_offset_p6, align 16, !dbg !23685
  %fits_in_gp8 = icmp ule i32 %gp_offset7, 40, !dbg !23685
  br i1 %fits_in_gp8, label %vaarg.in_reg9, label %vaarg.in_mem11, !dbg !23685

vaarg.in_reg9:                                    ; preds = %sw.bb3
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 3, !dbg !23685
  %reg_save_area10 = load i8*, i8** %9, align 16, !dbg !23685
  %10 = getelementptr i8, i8* %reg_save_area10, i32 %gp_offset7, !dbg !23685
  %11 = bitcast i8* %10 to i32*, !dbg !23685
  %12 = add i32 %gp_offset7, 8, !dbg !23685
  store i32 %12, i32* %gp_offset_p6, align 16, !dbg !23685
  br label %vaarg.end15, !dbg !23685

vaarg.in_mem11:                                   ; preds = %sw.bb3
  %overflow_arg_area_p12 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 2, !dbg !23685
  %overflow_arg_area13 = load i8*, i8** %overflow_arg_area_p12, align 8, !dbg !23685
  %13 = bitcast i8* %overflow_arg_area13 to i32*, !dbg !23685
  %overflow_arg_area.next14 = getelementptr i8, i8* %overflow_arg_area13, i32 8, !dbg !23685
  store i8* %overflow_arg_area.next14, i8** %overflow_arg_area_p12, align 8, !dbg !23685
  br label %vaarg.end15, !dbg !23685

vaarg.end15:                                      ; preds = %vaarg.in_mem11, %vaarg.in_reg9
  %vaarg.addr16 = phi i32* [ %11, %vaarg.in_reg9 ], [ %13, %vaarg.in_mem11 ], !dbg !23685
  %14 = load i32, i32* %vaarg.addr16, align 4, !dbg !23685
  store i32 %14, i32* %target4, align 4, !dbg !23684, !tbaa !2982
  %15 = load i32, i32* %fd.addr, align 4, !dbg !23686, !tbaa !2982
  %16 = load i32, i32* %target4, align 4, !dbg !23687, !tbaa !2982
  %call17 = call i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %15, i32 %16), !dbg !23688
  store i32 %call17, i32* %result, align 4, !dbg !23689, !tbaa !2982
  br label %sw.epilog48, !dbg !23690

sw.default:                                       ; preds = %entry
  %17 = load i32, i32* %action.addr, align 4, !dbg !23691, !tbaa !2982
  switch i32 %17, label %sw.default34 [
    i32 1, label %sw.bb18
    i32 3, label %sw.bb18
    i32 1025, label %sw.bb18
    i32 9, label %sw.bb18
    i32 1032, label %sw.bb18
    i32 1034, label %sw.bb18
    i32 11, label %sw.bb18
    i32 1033, label %sw.bb20
    i32 0, label %sw.bb20
    i32 1030, label %sw.bb20
    i32 1026, label %sw.bb20
    i32 2, label %sw.bb20
    i32 4, label %sw.bb20
    i32 1024, label %sw.bb20
    i32 8, label %sw.bb20
    i32 1031, label %sw.bb20
    i32 10, label %sw.bb20
  ], !dbg !23693

sw.bb18:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  %18 = load i32, i32* %fd.addr, align 4, !dbg !23694, !tbaa !2982
  %19 = load i32, i32* %action.addr, align 4, !dbg !23696, !tbaa !2982
  %call19 = call i32 (i32, i32, ...) @fcntl(i32 %18, i32 %19), !dbg !23697
  store i32 %call19, i32* %result, align 4, !dbg !23698, !tbaa !2982
  br label %sw.epilog, !dbg !23699

sw.bb20:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  call void @llvm.dbg.declare(metadata i32* %x, metadata !23700, metadata !DIExpression()), !dbg !23702
  %arraydecay21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23703
  %gp_offset_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 0, !dbg !23703
  %gp_offset23 = load i32, i32* %gp_offset_p22, align 16, !dbg !23703
  %fits_in_gp24 = icmp ule i32 %gp_offset23, 40, !dbg !23703
  br i1 %fits_in_gp24, label %vaarg.in_reg25, label %vaarg.in_mem27, !dbg !23703

vaarg.in_reg25:                                   ; preds = %sw.bb20
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 3, !dbg !23703
  %reg_save_area26 = load i8*, i8** %20, align 16, !dbg !23703
  %21 = getelementptr i8, i8* %reg_save_area26, i32 %gp_offset23, !dbg !23703
  %22 = bitcast i8* %21 to i32*, !dbg !23703
  %23 = add i32 %gp_offset23, 8, !dbg !23703
  store i32 %23, i32* %gp_offset_p22, align 16, !dbg !23703
  br label %vaarg.end31, !dbg !23703

vaarg.in_mem27:                                   ; preds = %sw.bb20
  %overflow_arg_area_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 2, !dbg !23703
  %overflow_arg_area29 = load i8*, i8** %overflow_arg_area_p28, align 8, !dbg !23703
  %24 = bitcast i8* %overflow_arg_area29 to i32*, !dbg !23703
  %overflow_arg_area.next30 = getelementptr i8, i8* %overflow_arg_area29, i32 8, !dbg !23703
  store i8* %overflow_arg_area.next30, i8** %overflow_arg_area_p28, align 8, !dbg !23703
  br label %vaarg.end31, !dbg !23703

vaarg.end31:                                      ; preds = %vaarg.in_mem27, %vaarg.in_reg25
  %vaarg.addr32 = phi i32* [ %22, %vaarg.in_reg25 ], [ %24, %vaarg.in_mem27 ], !dbg !23703
  %25 = load i32, i32* %vaarg.addr32, align 4, !dbg !23703
  store i32 %25, i32* %x, align 4, !dbg !23702, !tbaa !2982
  %26 = load i32, i32* %fd.addr, align 4, !dbg !23704, !tbaa !2982
  %27 = load i32, i32* %action.addr, align 4, !dbg !23705, !tbaa !2982
  %28 = load i32, i32* %x, align 4, !dbg !23706, !tbaa !2982
  %call33 = call i32 (i32, i32, ...) @fcntl(i32 %26, i32 %27, i32 %28), !dbg !23707
  store i32 %call33, i32* %result, align 4, !dbg !23708, !tbaa !2982
  br label %sw.epilog, !dbg !23709

sw.default34:                                     ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %p, metadata !23710, metadata !DIExpression()), !dbg !23712
  %arraydecay35 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23713
  %gp_offset_p36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 0, !dbg !23713
  %gp_offset37 = load i32, i32* %gp_offset_p36, align 16, !dbg !23713
  %fits_in_gp38 = icmp ule i32 %gp_offset37, 40, !dbg !23713
  br i1 %fits_in_gp38, label %vaarg.in_reg39, label %vaarg.in_mem41, !dbg !23713

vaarg.in_reg39:                                   ; preds = %sw.default34
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 3, !dbg !23713
  %reg_save_area40 = load i8*, i8** %29, align 16, !dbg !23713
  %30 = getelementptr i8, i8* %reg_save_area40, i32 %gp_offset37, !dbg !23713
  %31 = bitcast i8* %30 to i8**, !dbg !23713
  %32 = add i32 %gp_offset37, 8, !dbg !23713
  store i32 %32, i32* %gp_offset_p36, align 16, !dbg !23713
  br label %vaarg.end45, !dbg !23713

vaarg.in_mem41:                                   ; preds = %sw.default34
  %overflow_arg_area_p42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 2, !dbg !23713
  %overflow_arg_area43 = load i8*, i8** %overflow_arg_area_p42, align 8, !dbg !23713
  %33 = bitcast i8* %overflow_arg_area43 to i8**, !dbg !23713
  %overflow_arg_area.next44 = getelementptr i8, i8* %overflow_arg_area43, i32 8, !dbg !23713
  store i8* %overflow_arg_area.next44, i8** %overflow_arg_area_p42, align 8, !dbg !23713
  br label %vaarg.end45, !dbg !23713

vaarg.end45:                                      ; preds = %vaarg.in_mem41, %vaarg.in_reg39
  %vaarg.addr46 = phi i8** [ %31, %vaarg.in_reg39 ], [ %33, %vaarg.in_mem41 ], !dbg !23713
  %34 = load i8*, i8** %vaarg.addr46, align 8, !dbg !23713
  store i8* %34, i8** %p, align 8, !dbg !23712, !tbaa !2995
  %35 = load i32, i32* %fd.addr, align 4, !dbg !23714, !tbaa !2982
  %36 = load i32, i32* %action.addr, align 4, !dbg !23715, !tbaa !2982
  %37 = load i8*, i8** %p, align 8, !dbg !23716, !tbaa !2995
  %call47 = call i32 (i32, i32, ...) @fcntl(i32 %35, i32 %36, i8* %37), !dbg !23717
  store i32 %call47, i32* %result, align 4, !dbg !23718, !tbaa !2982
  br label %sw.epilog, !dbg !23719

sw.epilog:                                        ; preds = %vaarg.end45, %vaarg.end31, %sw.bb18
  br label %sw.epilog48, !dbg !23720

sw.epilog48:                                      ; preds = %sw.epilog, %vaarg.end15, %vaarg.end
  %arraydecay49 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23721
  %arraydecay4950 = bitcast %struct.__va_list_tag* %arraydecay49 to i8*, !dbg !23721
  call void @llvm.va_end(i8* %arraydecay4950), !dbg !23721
  %38 = load i32, i32* %result, align 4, !dbg !23722, !tbaa !2982
  ret i32 %38, !dbg !23723
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD(i32 %fd, i32 %target) #4 !dbg !23724 !ctir !417 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23725, metadata !DIExpression()), !dbg !23726
  store i32 %target, i32* %target.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !23727, metadata !DIExpression()), !dbg !23728
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23729, metadata !DIExpression()), !dbg !23730
  %0 = load i32, i32* %fd.addr, align 4, !dbg !23731, !tbaa !2982
  %1 = load i32, i32* %target.addr, align 4, !dbg !23732, !tbaa !2982
  %call = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 0, i32 %1), !dbg !23733
  store i32 %call, i32* %result, align 4, !dbg !23734, !tbaa !2982
  %2 = load i32, i32* %result, align 4, !dbg !23735, !tbaa !2982
  ret i32 %2, !dbg !23736
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %fd, i32 %target) #4 !dbg !1307 !ctir !417 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  %flags = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23737, metadata !DIExpression()), !dbg !23738
  store i32 %target, i32* %target.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !23739, metadata !DIExpression()), !dbg !23740
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23741, metadata !DIExpression()), !dbg !23742
  %0 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23743, !tbaa !2982
  %cmp = icmp sle i32 0, %0, !dbg !23745
  br i1 %cmp, label %if.then, label %if.else9, !dbg !23746

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !23747, !tbaa !2982
  %2 = load i32, i32* %target.addr, align 4, !dbg !23749, !tbaa !2982
  %call = call i32 (i32, i32, ...) @fcntl(i32 %1, i32 1030, i32 %2), !dbg !23750
  store i32 %call, i32* %result, align 4, !dbg !23751, !tbaa !2982
  %3 = load i32, i32* %result, align 4, !dbg !23752, !tbaa !2982
  %cmp1 = icmp sle i32 0, %3, !dbg !23754
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !23755

lor.lhs.false:                                    ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !23756
  %4 = load i32, i32* %call2, align 4, !dbg !23756, !tbaa !2982, !ctir !7
  %cmp3 = icmp ne i32 %4, 22, !dbg !23757
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !23758

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23759, !tbaa !2982
  br label %if.end8, !dbg !23761

if.else:                                          ; preds = %lor.lhs.false
  %5 = load i32, i32* %fd.addr, align 4, !dbg !23762, !tbaa !2982
  %6 = load i32, i32* %target.addr, align 4, !dbg !23764, !tbaa !2982
  %call5 = call i32 @rpl_fcntl_DUPFD(i32 %5, i32 %6), !dbg !23765
  store i32 %call5, i32* %result, align 4, !dbg !23766, !tbaa !2982
  %7 = load i32, i32* %result, align 4, !dbg !23767, !tbaa !2982
  %cmp6 = icmp sge i32 %7, 0, !dbg !23769
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !23770

if.then7:                                         ; preds = %if.else
  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23771, !tbaa !2982
  br label %if.end, !dbg !23772

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  br label %if.end11, !dbg !23773

if.else9:                                         ; preds = %entry
  %8 = load i32, i32* %fd.addr, align 4, !dbg !23774, !tbaa !2982
  %9 = load i32, i32* %target.addr, align 4, !dbg !23775, !tbaa !2982
  %call10 = call i32 @rpl_fcntl_DUPFD(i32 %8, i32 %9), !dbg !23776
  store i32 %call10, i32* %result, align 4, !dbg !23777, !tbaa !2982
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.end8
  %10 = load i32, i32* %result, align 4, !dbg !23778, !tbaa !2982
  %cmp12 = icmp sle i32 0, %10, !dbg !23780
  br i1 %cmp12, label %land.lhs.true, label %if.end25, !dbg !23781

land.lhs.true:                                    ; preds = %if.end11
  %11 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23782, !tbaa !2982
  %cmp13 = icmp eq i32 %11, -1, !dbg !23783
  br i1 %cmp13, label %if.then14, label %if.end25, !dbg !23784

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !23785, metadata !DIExpression()), !dbg !23787
  %12 = load i32, i32* %result, align 4, !dbg !23788, !tbaa !2982
  %call15 = call i32 (i32, i32, ...) @fcntl(i32 %12, i32 1), !dbg !23789
  store i32 %call15, i32* %flags, align 4, !dbg !23787, !tbaa !2982
  %13 = load i32, i32* %flags, align 4, !dbg !23790, !tbaa !2982
  %cmp16 = icmp slt i32 %13, 0, !dbg !23792
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17, !dbg !23793

lor.lhs.false17:                                  ; preds = %if.then14
  %14 = load i32, i32* %result, align 4, !dbg !23794, !tbaa !2982
  %15 = load i32, i32* %flags, align 4, !dbg !23795, !tbaa !2982
  %or = or i32 %15, 1, !dbg !23796
  %call18 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 2, i32 %or), !dbg !23797
  %cmp19 = icmp eq i32 %call18, -1, !dbg !23798
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !23799

if.then20:                                        ; preds = %lor.lhs.false17, %if.then14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !23800, metadata !DIExpression()), !dbg !23802
  %call21 = call i32* @__errno_location() #15, !dbg !23803
  %16 = load i32, i32* %call21, align 4, !dbg !23803, !tbaa !2982, !ctir !7
  store i32 %16, i32* %saved_errno, align 4, !dbg !23802, !tbaa !2982
  %17 = load i32, i32* %result, align 4, !dbg !23804, !tbaa !2982
  %call22 = call i32 @close(i32 %17), !dbg !23805
  %18 = load i32, i32* %saved_errno, align 4, !dbg !23806, !tbaa !2982
  %call23 = call i32* @__errno_location() #15, !dbg !23807
  store i32 %18, i32* %call23, align 4, !dbg !23808, !tbaa !2982, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !23809, !tbaa !2982
  br label %if.end24, !dbg !23810

if.end24:                                         ; preds = %if.then20, %lor.lhs.false17
  br label %if.end25, !dbg !23811

if.end25:                                         ; preds = %if.end24, %land.lhs.true, %if.end11
  %19 = load i32, i32* %result, align 4, !dbg !23812, !tbaa !2982
  ret i32 %19, !dbg !23813
}

declare dso_local i32 @fcntl(i32, i32, ...) #3

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local zeroext i1 @acl_errno_valid(i32 %errnum) #11 !dbg !23814 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !23816, metadata !DIExpression()), !dbg !23817
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !23818, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 16, label %sw.bb
    i32 22, label %sw.bb1
    i32 38, label %sw.bb2
    i32 95, label %sw.bb3
  ], !dbg !23819

sw.bb:                                            ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23820
  br label %return, !dbg !23820

sw.bb1:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23822
  br label %return, !dbg !23822

sw.bb2:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23823
  br label %return, !dbg !23823

sw.bb3:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23824
  br label %return, !dbg !23824

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !23825
  br label %return, !dbg !23825

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23826
  ret i1 %1, !dbg !23826
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #4 !dbg !23827 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23829, metadata !DIExpression()), !dbg !23830
  %0 = load i32, i32* %c.addr, align 4, !dbg !23831, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23832

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23833
  br label %return, !dbg !23833

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23835
  br label %return, !dbg !23835

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23836
  ret i1 %1, !dbg !23836
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #4 !dbg !23837 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23838, metadata !DIExpression()), !dbg !23839
  %0 = load i32, i32* %c.addr, align 4, !dbg !23840, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23841

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23842
  br label %return, !dbg !23842

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23844
  br label %return, !dbg !23844

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23845
  ret i1 %1, !dbg !23845
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #4 !dbg !23846 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23847, metadata !DIExpression()), !dbg !23848
  %0 = load i32, i32* %c.addr, align 4, !dbg !23849, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23850

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23851
  br label %return, !dbg !23851

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23853
  br label %return, !dbg !23853

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23854
  ret i1 %1, !dbg !23854
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #4 !dbg !23855 !ctir !307 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23856, metadata !DIExpression()), !dbg !23857
  %0 = load i32, i32* %c.addr, align 4, !dbg !23858, !tbaa !2982
  %cmp = icmp eq i32 %0, 32, !dbg !23859
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !23860

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !23861, !tbaa !2982
  %cmp1 = icmp eq i32 %1, 9, !dbg !23862
  br label %lor.end, !dbg !23860

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !23863
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #4 !dbg !23864 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23865, metadata !DIExpression()), !dbg !23866
  %0 = load i32, i32* %c.addr, align 4, !dbg !23867, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !23868

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23869
  br label %return, !dbg !23869

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23871
  br label %return, !dbg !23871

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23872
  ret i1 %1, !dbg !23872
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #4 !dbg !23873 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23874, metadata !DIExpression()), !dbg !23875
  %0 = load i32, i32* %c.addr, align 4, !dbg !23876, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !23877

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23878
  br label %return, !dbg !23878

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23880
  br label %return, !dbg !23880

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23881
  ret i1 %1, !dbg !23881
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #4 !dbg !23882 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23883, metadata !DIExpression()), !dbg !23884
  %0 = load i32, i32* %c.addr, align 4, !dbg !23885, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23886

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23887
  br label %return, !dbg !23887

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23889
  br label %return, !dbg !23889

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23890
  ret i1 %1, !dbg !23890
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #4 !dbg !23891 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23892, metadata !DIExpression()), !dbg !23893
  %0 = load i32, i32* %c.addr, align 4, !dbg !23894, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !23895

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23896
  br label %return, !dbg !23896

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23898
  br label %return, !dbg !23898

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23899
  ret i1 %1, !dbg !23899
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #4 !dbg !23900 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23901, metadata !DIExpression()), !dbg !23902
  %0 = load i32, i32* %c.addr, align 4, !dbg !23903, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23904

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23905
  br label %return, !dbg !23905

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23907
  br label %return, !dbg !23907

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23908
  ret i1 %1, !dbg !23908
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #4 !dbg !23909 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23910, metadata !DIExpression()), !dbg !23911
  %0 = load i32, i32* %c.addr, align 4, !dbg !23912, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !23913

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23914
  br label %return, !dbg !23914

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23916
  br label %return, !dbg !23916

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23917
  ret i1 %1, !dbg !23917
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #4 !dbg !23918 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23919, metadata !DIExpression()), !dbg !23920
  %0 = load i32, i32* %c.addr, align 4, !dbg !23921, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !23922

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23923
  br label %return, !dbg !23923

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23925
  br label %return, !dbg !23925

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23926
  ret i1 %1, !dbg !23926
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #4 !dbg !23927 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23928, metadata !DIExpression()), !dbg !23929
  %0 = load i32, i32* %c.addr, align 4, !dbg !23930, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23931

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23932
  br label %return, !dbg !23932

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23934
  br label %return, !dbg !23934

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23935
  ret i1 %1, !dbg !23935
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #4 !dbg !23936 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23937, metadata !DIExpression()), !dbg !23938
  %0 = load i32, i32* %c.addr, align 4, !dbg !23939, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !23940

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23941
  br label %return, !dbg !23941

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23943
  br label %return, !dbg !23943

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23944
  ret i1 %1, !dbg !23944
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #4 !dbg !23945 !ctir !1827 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23946, metadata !DIExpression()), !dbg !23947
  %0 = load i32, i32* %c.addr, align 4, !dbg !23948, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23949

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !23950, !tbaa !2982
  %sub = sub nsw i32 %1, 65, !dbg !23952
  %add = add nsw i32 %sub, 97, !dbg !23953
  store i32 %add, i32* %retval, align 4, !dbg !23954
  br label %return, !dbg !23954

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !23955, !tbaa !2982
  store i32 %2, i32* %retval, align 4, !dbg !23956
  br label %return, !dbg !23956

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !23957
  ret i32 %3, !dbg !23957
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #4 !dbg !23958 !ctir !1827 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2982
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23959, metadata !DIExpression()), !dbg !23960
  %0 = load i32, i32* %c.addr, align 4, !dbg !23961, !tbaa !2982
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !23962

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !23963, !tbaa !2982
  %sub = sub nsw i32 %1, 97, !dbg !23965
  %add = add nsw i32 %sub, 65, !dbg !23966
  store i32 %add, i32* %retval, align 4, !dbg !23967
  br label %return, !dbg !23967

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !23968, !tbaa !2982
  store i32 %2, i32* %retval, align 4, !dbg !23969
  br label %return, !dbg !23969

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !23970
  ret i32 %3, !dbg !23970
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @fopen_safer(i8* %file, i8* %mode) #4 !dbg !23971 !ctir !2940 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !2942
  %fd = alloca i32, align 4, !ctir !7
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  %e15 = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !23973, metadata !DIExpression()), !dbg !23974
  store i8* %mode, i8** %mode.addr, align 8, !tbaa !2995
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !23975, metadata !DIExpression()), !dbg !23976
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !23977, metadata !DIExpression()), !dbg !23978
  %0 = load i8*, i8** %file.addr, align 8, !dbg !23979, !tbaa !2995
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !23980, !tbaa !2995
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* %1), !dbg !23981
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !23978, !tbaa !2995
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23982, !tbaa !2995
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !23982
  br i1 %tobool, label %if.then, label %if.end21, !dbg !23984

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !23985, metadata !DIExpression()), !dbg !23987
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23988, !tbaa !2995
  %call1 = call i32 @fileno(%struct._IO_FILE* %3) #10, !dbg !23989
  store i32 %call1, i32* %fd, align 4, !dbg !23987, !tbaa !2982
  %4 = load i32, i32* %fd, align 4, !dbg !23990, !tbaa !2982
  %cmp = icmp sle i32 0, %4, !dbg !23992
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !23993

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %fd, align 4, !dbg !23994, !tbaa !2982
  %cmp2 = icmp sle i32 %5, 2, !dbg !23995
  br i1 %cmp2, label %if.then3, label %if.end20, !dbg !23996

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !23997, metadata !DIExpression()), !dbg !23999
  %6 = load i32, i32* %fd, align 4, !dbg !24000, !tbaa !2982
  %call4 = call i32 @dup_safer(i32 %6), !dbg !24001
  store i32 %call4, i32* %f, align 4, !dbg !23999, !tbaa !2982
  %7 = load i32, i32* %f, align 4, !dbg !24002, !tbaa !2982
  %cmp5 = icmp slt i32 %7, 0, !dbg !24004
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !24005

if.then6:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %e, metadata !24006, metadata !DIExpression()), !dbg !24008
  %call7 = call i32* @__errno_location() #15, !dbg !24009
  %8 = load i32, i32* %call7, align 4, !dbg !24009, !tbaa !2982, !ctir !7
  store i32 %8, i32* %e, align 4, !dbg !24008, !tbaa !2982
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !24010, !tbaa !2995
  %call8 = call i32 @rpl_fclose(%struct._IO_FILE* %9), !dbg !24011
  %10 = load i32, i32* %e, align 4, !dbg !24012, !tbaa !2982
  %call9 = call i32* @__errno_location() #15, !dbg !24013
  store i32 %10, i32* %call9, align 4, !dbg !24014, !tbaa !2982, !ctir !7
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !24015
  br label %return, !dbg !24015

if.end:                                           ; preds = %if.then3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !24016, !tbaa !2995
  %call10 = call i32 @rpl_fclose(%struct._IO_FILE* %11), !dbg !24018
  %cmp11 = icmp ne i32 %call10, 0, !dbg !24019
  br i1 %cmp11, label %if.then14, label %lor.lhs.false, !dbg !24020

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, i32* %f, align 4, !dbg !24021, !tbaa !2982
  %13 = load i8*, i8** %mode.addr, align 8, !dbg !24022, !tbaa !2995
  %call12 = call %struct._IO_FILE* @fdopen(i32 %12, i8* %13) #10, !dbg !24023
  store %struct._IO_FILE* %call12, %struct._IO_FILE** %fp, align 8, !dbg !24024, !tbaa !2995
  %tobool13 = icmp ne %struct._IO_FILE* %call12, null, !dbg !24024
  br i1 %tobool13, label %if.end19, label %if.then14, !dbg !24025

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %e15, metadata !24026, metadata !DIExpression()), !dbg !24028
  %call16 = call i32* @__errno_location() #15, !dbg !24029
  %14 = load i32, i32* %call16, align 4, !dbg !24029, !tbaa !2982, !ctir !7
  store i32 %14, i32* %e15, align 4, !dbg !24028, !tbaa !2982
  %15 = load i32, i32* %f, align 4, !dbg !24030, !tbaa !2982
  %call17 = call i32 @close(i32 %15), !dbg !24031
  %16 = load i32, i32* %e15, align 4, !dbg !24032, !tbaa !2982
  %call18 = call i32* @__errno_location() #15, !dbg !24033
  store i32 %16, i32* %call18, align 4, !dbg !24034, !tbaa !2982, !ctir !7
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !24035
  br label %return, !dbg !24035

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20, !dbg !24036

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %if.then
  br label %if.end21, !dbg !24037

if.end21:                                         ; preds = %if.end20, %entry
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !24038, !tbaa !2995
  store %struct._IO_FILE* %17, %struct._IO_FILE** %retval, align 8, !dbg !24039
  br label %return, !dbg !24039

return:                                           ; preds = %if.end21, %if.then14, %if.then6
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !24040
  ret %struct._IO_FILE* %18, !dbg !24040
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #2

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { nounwind readnone }
attributes #16 = { noreturn }

!llvm.dbg.cu = !{!65, !1322, !244, !528, !1525, !554, !1579, !587, !1581, !1586, !1591, !593, !1594, !630, !1597, !653, !695, !1602, !1605, !1610, !1613, !740, !1618, !1670, !1684, !1723, !1751, !1783, !1788, !1791, !747, !1796, !1807, !1812, !882, !1817, !1819, !923, !1822, !1829, !1839, !1842, !1065, !1849, !1878, !1911, !1108, !1938, !1159, !1180, !1941, !1955, !1233, !1247, !2013, !2030, !2033, !2131, !2149, !2186, !2227, !2266, !2305, !2499, !2516, !2539, !2551, !1255, !2565, !2582, !2585, !2625, !2667, !2672, !2684, !2687, !2690, !2712, !2716, !2730, !2761, !2862, !2882, !2885, !2892, !1309, !2931, !2934, !2937}
!llvm.ident = !{!2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976, !2976}
!llvm.module.flags = !{!2977, !2978, !2979, !2980}

!0 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1, size: 64)
!1 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !3)
!2 = !DIFile(filename: "/usr/include/bits/types/FILE.h", directory: "")
!3 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !5)
!4 = !DIFile(filename: "/usr/include/bits/types/struct_FILE.h", directory: "")
!5 = !{!6, !8, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !24, !26, !27, !28, !32, !34, !36, !40, !43, !45, !48, !51, !52, !54, !58, !59}
!6 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3, file: !4, line: 51, baseType: !7, size: 32)
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !4, line: 36, flags: DIFlagFwdDecl)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3, file: !4, line: 70, baseType: !25, size: 64, offset: 832)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !30, line: 152, baseType: !31)
!30 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!31 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!33 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!35 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!37 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8, elements: !38)
!38 = !{!39}
!39 = !DISubrange(count: 1)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !4, line: 43, baseType: null)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !30, line: 153, baseType: !31)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !4, line: 37, flags: DIFlagFwdDecl)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !4, line: 38, flags: DIFlagFwdDecl)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3, file: !4, line: 93, baseType: !25, size: 64, offset: 1344)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !56, line: 46, baseType: !57)
!56 = !DIFile(filename: "llvm9/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mbarbar/software")
!57 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!60 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 160, elements: !61)
!61 = !{!62}
!62 = !DISubrange(count: 20)
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(name: "long_options", scope: !65, file: !66, line: 56, type: !121, isLocal: true, isDefinition: true)
!65 = distinct !DICompileUnit(language: DW_LANG_C99, file: !66, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !67, retainedTypes: !112, globals: !236, nameTableKind: None)
!66 = !DIFile(filename: "src/mv.c", directory: "/home/mbarbar/software/coreutils-8.31")
!67 = !{!68, !76, !83, !89, !95, !100, !106}
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backup_type", file: !69, line: 30, baseType: !70, size: 32, elements: !71)
!69 = !DIFile(filename: "./lib/backupfile.h", directory: "/home/mbarbar/software/coreutils-8.31")
!70 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!71 = !{!72, !73, !74, !75}
!72 = !DIEnumerator(name: "no_backups", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "simple_backups", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "numbered_existing_backups", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "numbered_backups", value: 3, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Dereference_symlink", file: !77, line: 69, baseType: !70, size: 32, elements: !78)
!77 = !DIFile(filename: "src/copy.h", directory: "/home/mbarbar/software/coreutils-8.31")
!78 = !{!79, !80, !81, !82}
!79 = !DIEnumerator(name: "DEREF_UNDEFINED", value: 1, isUnsigned: true)
!80 = !DIEnumerator(name: "DEREF_NEVER", value: 2, isUnsigned: true)
!81 = !DIEnumerator(name: "DEREF_COMMAND_LINE_ARGUMENTS", value: 3, isUnsigned: true)
!82 = !DIEnumerator(name: "DEREF_ALWAYS", value: 4, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Interactive", file: !77, line: 60, baseType: !70, size: 32, elements: !84)
!84 = !{!85, !86, !87, !88}
!85 = !DIEnumerator(name: "I_ALWAYS_YES", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "I_ALWAYS_NO", value: 2, isUnsigned: true)
!87 = !DIEnumerator(name: "I_ASK_USER", value: 3, isUnsigned: true)
!88 = !DIEnumerator(name: "I_UNSPECIFIED", value: 4, isUnsigned: true)
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Sparse_type", file: !77, line: 26, baseType: !70, size: 32, elements: !90)
!90 = !{!91, !92, !93, !94}
!91 = !DIEnumerator(name: "SPARSE_UNUSED", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SPARSE_NEVER", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "SPARSE_AUTO", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "SPARSE_ALWAYS", value: 3, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Reflink_type", file: !77, line: 47, baseType: !70, size: 32, elements: !96)
!96 = !{!97, !98, !99}
!97 = !DIEnumerator(name: "REFLINK_NEVER", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "REFLINK_AUTO", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "REFLINK_ALWAYS", value: 2, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rm_interactive", file: !101, line: 23, baseType: !70, size: 32, elements: !102)
!101 = !DIFile(filename: "src/remove.h", directory: "/home/mbarbar/software/coreutils-8.31")
!102 = !{!103, !104, !105}
!103 = !DIEnumerator(name: "RMI_ALWAYS", value: 3, isUnsigned: true)
!104 = !DIEnumerator(name: "RMI_SOMETIMES", value: 4, isUnsigned: true)
!105 = !DIEnumerator(name: "RMI_NEVER", value: 5, isUnsigned: true)
!106 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RM_status", file: !101, line: 78, baseType: !70, size: 32, elements: !107)
!107 = !{!108, !109, !110, !111}
!108 = !DIEnumerator(name: "RM_OK", value: 2, isUnsigned: true)
!109 = !DIEnumerator(name: "RM_USER_DECLINED", value: 3, isUnsigned: true)
!110 = !DIEnumerator(name: "RM_ERROR", value: 4, isUnsigned: true)
!111 = !DIEnumerator(name: "RM_NONEMPTY_DIR", value: 5, isUnsigned: true)
!112 = !{!9, !53, !113, !0, !115, !117, !7, !120, !119, !121, !133, !134, !136, !138, !149, !150, !160, !195, !200, !202, !206, !208, !211, !222}
!113 = !DISubroutineType(types: !114)
!114 = !{null, !7}
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!117 = !DISubroutineType(types: !118)
!118 = !{!7, !7, !119}
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!120 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !122, size: 3584, elements: !131)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !124, line: 50, size: 256, elements: !125)
!124 = !DIFile(filename: "/usr/include/bits/getopt_ext.h", directory: "")
!125 = !{!126, !127, !128, !130}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !123, file: !124, line: 52, baseType: !115, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !123, file: !124, line: 55, baseType: !7, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !123, file: !124, line: 56, baseType: !129, size: 64, offset: 128)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !123, file: !124, line: 57, baseType: !7, size: 32, offset: 192)
!131 = !{!132}
!132 = !DISubrange(count: 14)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !30, line: 150, baseType: !70)
!134 = !DISubroutineType(types: !135)
!135 = !{null}
!136 = !DISubroutineType(types: !137)
!137 = !{null, !115}
!138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !139, size: 896, elements: !147)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !142, file: !141, line: 633, size: 128, elements: !144)
!141 = !DIFile(filename: "src/system.h", directory: "/home/mbarbar/software/coreutils-8.31")
!142 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !141, file: !141, line: 631, type: !136, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!143 = !{}
!144 = !{!145, !146}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !140, file: !141, line: 633, baseType: !115, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !140, file: !141, line: 633, baseType: !115, size: 64, offset: 64)
!147 = !{!148}
!148 = !DISubrange(count: 7)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!150 = !DISubroutineType(types: !151)
!151 = !{null, !152}
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !77, line: 98, size: 640, elements: !154)
!154 = !{!155, !156, !157, !158, !159, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !199}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !153, file: !77, line: 100, baseType: !68, size: 32)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !153, file: !77, line: 103, baseType: !76, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !153, file: !77, line: 108, baseType: !83, size: 32, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !153, file: !77, line: 111, baseType: !89, size: 32, offset: 96)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !153, file: !77, line: 115, baseType: !160, size: 32, offset: 128)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !161, line: 69, baseType: !133)
!161 = !DIFile(filename: "/usr/include/sys/types.h", directory: "")
!162 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !153, file: !77, line: 119, baseType: !120, size: 8, offset: 160)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !153, file: !77, line: 123, baseType: !120, size: 8, offset: 168)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !153, file: !77, line: 130, baseType: !120, size: 8, offset: 176)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !153, file: !77, line: 134, baseType: !120, size: 8, offset: 184)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !153, file: !77, line: 138, baseType: !120, size: 8, offset: 192)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !153, file: !77, line: 141, baseType: !120, size: 8, offset: 200)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !153, file: !77, line: 145, baseType: !120, size: 8, offset: 208)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !153, file: !77, line: 152, baseType: !120, size: 8, offset: 216)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !153, file: !77, line: 156, baseType: !120, size: 8, offset: 224)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !153, file: !77, line: 160, baseType: !120, size: 8, offset: 232)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !153, file: !77, line: 161, baseType: !120, size: 8, offset: 240)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !153, file: !77, line: 162, baseType: !120, size: 8, offset: 248)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !153, file: !77, line: 163, baseType: !120, size: 8, offset: 256)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !153, file: !77, line: 166, baseType: !120, size: 8, offset: 264)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !153, file: !77, line: 178, baseType: !120, size: 8, offset: 272)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !153, file: !77, line: 182, baseType: !120, size: 8, offset: 280)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !153, file: !77, line: 188, baseType: !120, size: 8, offset: 288)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !153, file: !77, line: 192, baseType: !120, size: 8, offset: 296)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !153, file: !77, line: 201, baseType: !120, size: 8, offset: 304)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !153, file: !77, line: 205, baseType: !120, size: 8, offset: 312)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !153, file: !77, line: 214, baseType: !120, size: 8, offset: 320)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !153, file: !77, line: 223, baseType: !120, size: 8, offset: 328)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !153, file: !77, line: 227, baseType: !120, size: 8, offset: 336)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !153, file: !77, line: 231, baseType: !120, size: 8, offset: 344)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !153, file: !77, line: 235, baseType: !120, size: 8, offset: 352)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !153, file: !77, line: 239, baseType: !120, size: 8, offset: 360)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !153, file: !77, line: 242, baseType: !120, size: 8, offset: 368)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !153, file: !77, line: 245, baseType: !120, size: 8, offset: 376)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !153, file: !77, line: 250, baseType: !120, size: 8, offset: 384)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !153, file: !77, line: 254, baseType: !120, size: 8, offset: 392)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !153, file: !77, line: 259, baseType: !7, size: 32, offset: 416)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !153, file: !77, line: 262, baseType: !95, size: 32, offset: 448)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !153, file: !77, line: 273, baseType: !195, size: 64, offset: 512)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !197, line: 69, baseType: !198)
!197 = !DIFile(filename: "./lib/hash.h", directory: "/home/mbarbar/software/coreutils-8.31")
!198 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !197, line: 67, flags: DIFlagFwdDecl)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !153, file: !77, line: 276, baseType: !195, size: 64, offset: 576)
!200 = !DISubroutineType(types: !201)
!201 = !{!120, !115}
!202 = !DISubroutineType(types: !203)
!203 = !{!120, !9, !9, !120, !204}
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!206 = !DISubroutineType(types: !207)
!207 = !{!120, !115, !115, !204}
!208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, size: 128, elements: !209)
!209 = !{!210}
!210 = !DISubrange(count: 2)
!211 = !DISubroutineType(types: !212)
!212 = !{null, !213}
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rm_options", file: !101, line: 32, size: 256, elements: !215)
!215 = !{!216, !217, !218, !219, !220, !221, !232, !233, !234, !235}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_missing_files", scope: !214, file: !101, line: 35, baseType: !120, size: 8)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !214, file: !101, line: 38, baseType: !100, size: 32, offset: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !214, file: !101, line: 47, baseType: !120, size: 8, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !214, file: !101, line: 50, baseType: !120, size: 8, offset: 72)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "remove_empty_directories", scope: !214, file: !101, line: 53, baseType: !120, size: 8, offset: 80)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !214, file: !101, line: 57, baseType: !222, size: 64, offset: 128)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !224, line: 7, size: 128, elements: !225)
!224 = !DIFile(filename: "./lib/dev-ino.h", directory: "/home/mbarbar/software/coreutils-8.31")
!225 = !{!226, !229}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !223, file: !224, line: 9, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !161, line: 47, baseType: !228)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !30, line: 148, baseType: !57)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !223, file: !224, line: 10, baseType: !230, size: 64, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !161, line: 59, baseType: !231)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !30, line: 145, baseType: !57)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_all_root", scope: !214, file: !101, line: 61, baseType: !120, size: 8, offset: 192)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !214, file: !101, line: 64, baseType: !120, size: 8, offset: 200)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !214, file: !101, line: 67, baseType: !120, size: 8, offset: 208)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "require_restore_cwd", scope: !214, file: !101, line: 75, baseType: !120, size: 8, offset: 216)
!236 = !{!237, !63, !239}
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(name: "remove_trailing_slashes", scope: !65, file: !66, line: 54, type: !120, isLocal: true, isDefinition: true)
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(name: "dev_ino_buf", scope: !241, file: !66, line: 96, type: !223, isLocal: true, isDefinition: true)
!241 = distinct !DISubprogram(name: "rm_option_init", scope: !66, file: !66, line: 75, type: !211, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!242 = !DIGlobalVariableExpression(var: !243, expr: !DIExpression())
!243 = distinct !DIGlobalVariable(name: "top_level_src_name", scope: !244, file: !245, line: 147, type: !115, isLocal: true, isDefinition: true)
!244 = distinct !DICompileUnit(language: DW_LANG_C99, file: !245, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !246, retainedTypes: !247, globals: !510, nameTableKind: None)
!245 = !DIFile(filename: "src/copy.c", directory: "/home/mbarbar/software/coreutils-8.31")
!246 = !{!68, !76, !83, !89, !95}
!247 = !{!160, !53, !70, !9, !57, !55, !248, !250, !120, !7, !295, !297, !195, !300, !115, !303, !305, !307, !309, !311, !313, !133, !231, !228, !323, !356, !350, !227, !230, !116, !29, !326, !328, !357, !358, !360, !315, !362, !364, !366, !368, !371, !200, !10, !405, !407, !409, !413, !415, !333, !417, !419, !421, !335, !423, !427, !429, !436, !448, !450, !452, !454, !460, !462, !464, !466, !465, !467, !134, !469, !473, !475, !476, !477, !479, !495, !491, !506, !508}
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !249, line: 63, baseType: !29)
!249 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!250 = !DISubroutineType(types: !251)
!251 = !{!120, !115, !115, !160, !120, !252}
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !254)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !77, line: 98, size: 640, elements: !255)
!255 = !{!256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !254, file: !77, line: 100, baseType: !68, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !254, file: !77, line: 103, baseType: !76, size: 32, offset: 32)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !254, file: !77, line: 108, baseType: !83, size: 32, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !254, file: !77, line: 111, baseType: !89, size: 32, offset: 96)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !254, file: !77, line: 115, baseType: !160, size: 32, offset: 128)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !254, file: !77, line: 119, baseType: !120, size: 8, offset: 160)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !254, file: !77, line: 123, baseType: !120, size: 8, offset: 168)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !254, file: !77, line: 130, baseType: !120, size: 8, offset: 176)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !254, file: !77, line: 134, baseType: !120, size: 8, offset: 184)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !254, file: !77, line: 138, baseType: !120, size: 8, offset: 192)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !254, file: !77, line: 141, baseType: !120, size: 8, offset: 200)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !254, file: !77, line: 145, baseType: !120, size: 8, offset: 208)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !254, file: !77, line: 152, baseType: !120, size: 8, offset: 216)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !254, file: !77, line: 156, baseType: !120, size: 8, offset: 224)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !254, file: !77, line: 160, baseType: !120, size: 8, offset: 232)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !254, file: !77, line: 161, baseType: !120, size: 8, offset: 240)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !254, file: !77, line: 162, baseType: !120, size: 8, offset: 248)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !254, file: !77, line: 163, baseType: !120, size: 8, offset: 256)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !254, file: !77, line: 166, baseType: !120, size: 8, offset: 264)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !254, file: !77, line: 178, baseType: !120, size: 8, offset: 272)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !254, file: !77, line: 182, baseType: !120, size: 8, offset: 280)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !254, file: !77, line: 188, baseType: !120, size: 8, offset: 288)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !254, file: !77, line: 192, baseType: !120, size: 8, offset: 296)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !254, file: !77, line: 201, baseType: !120, size: 8, offset: 304)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !254, file: !77, line: 205, baseType: !120, size: 8, offset: 312)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !254, file: !77, line: 214, baseType: !120, size: 8, offset: 320)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !254, file: !77, line: 223, baseType: !120, size: 8, offset: 328)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !254, file: !77, line: 227, baseType: !120, size: 8, offset: 336)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !254, file: !77, line: 231, baseType: !120, size: 8, offset: 344)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !254, file: !77, line: 235, baseType: !120, size: 8, offset: 352)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !254, file: !77, line: 239, baseType: !120, size: 8, offset: 360)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !254, file: !77, line: 242, baseType: !120, size: 8, offset: 368)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !254, file: !77, line: 245, baseType: !120, size: 8, offset: 376)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !254, file: !77, line: 250, baseType: !120, size: 8, offset: 384)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !254, file: !77, line: 254, baseType: !120, size: 8, offset: 392)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !254, file: !77, line: 259, baseType: !7, size: 32, offset: 416)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !254, file: !77, line: 262, baseType: !95, size: 32, offset: 448)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !254, file: !77, line: 273, baseType: !195, size: 64, offset: 512)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !254, file: !77, line: 276, baseType: !195, size: 64, offset: 576)
!295 = !DISubroutineType(types: !296)
!296 = !{!120, !115, !120, !120, !252}
!297 = !DISubroutineType(types: !298)
!298 = !{null, !299}
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!300 = !DISubroutineType(types: !301)
!301 = !{!120, !115, !115, !120, !252, !302, !302}
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!303 = !DISubroutineType(types: !304)
!304 = !{!120, !252}
!305 = !DISubroutineType(types: !306)
!306 = !{!160}
!307 = !DISubroutineType(types: !308)
!308 = !{!120, !7}
!309 = !DISubroutineType(types: !310)
!310 = !{!7, !115, !160}
!311 = !DISubroutineType(types: !312)
!312 = !{!120, !115, !120, !120}
!313 = !DISubroutineType(types: !314)
!314 = !{!120, !115, !115, !120, !315, !350, !252, !120, !302, !302, !302}
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !319)
!318 = !DIFile(filename: "/usr/include/bits/stat.h", directory: "")
!319 = !{!320, !321, !322, !324, !325, !327, !329, !330, !331, !332, !334, !336, !344, !345, !346}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !317, file: !318, line: 48, baseType: !231, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !317, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !317, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !30, line: 151, baseType: !57)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !317, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !317, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !30, line: 146, baseType: !70)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !317, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !30, line: 147, baseType: !70)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !317, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !317, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !317, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !317, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !30, line: 174, baseType: !31)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !317, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !30, line: 179, baseType: !31)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !317, file: !318, line: 91, baseType: !337, size: 128, offset: 576)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !339)
!338 = !DIFile(filename: "/usr/include/bits/types/struct_timespec.h", directory: "")
!339 = !{!340, !342}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !337, file: !338, line: 11, baseType: !341, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !30, line: 160, baseType: !31)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !337, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !30, line: 196, baseType: !31)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !317, file: !318, line: 92, baseType: !337, size: 128, offset: 704)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !317, file: !318, line: 93, baseType: !337, size: 128, offset: 832)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !317, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !343, size: 192, elements: !348)
!348 = !{!349}
!349 = !DISubrange(count: 3)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_list", file: !245, line: 125, size: 192, elements: !352)
!352 = !{!353, !354, !355}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !351, file: !245, line: 127, baseType: !350, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !351, file: !245, line: 128, baseType: !227, size: 64, offset: 64)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !351, file: !245, line: 129, baseType: !230, size: 64, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 256, elements: !209)
!358 = !DISubroutineType(types: !359)
!359 = !{!120, !252, !120}
!360 = !DISubroutineType(types: !361)
!361 = !{!120, !115, !315, !115, !315, !252, !302}
!362 = !DISubroutineType(types: !363)
!363 = !{!120, !115, !115, !120, !120, !120}
!364 = !DISubroutineType(types: !365)
!365 = !{!120, !252, !115, !315}
!366 = !DISubroutineType(types: !367)
!367 = !{!120, !115, !160}
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 96, elements: !369)
!369 = !{!370}
!370 = !DISubrange(count: 12)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !373)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !374)
!374 = !{!375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !373, file: !4, line: 51, baseType: !7, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !373, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !373, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !373, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !373, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !373, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !373, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !373, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !373, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !373, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !373, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !373, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !373, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !373, file: !4, line: 70, baseType: !389, size: 64, offset: 832)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !373, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !373, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !373, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !373, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !373, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !373, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !373, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !373, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !373, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !373, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !373, file: !4, line: 93, baseType: !389, size: 64, offset: 1344)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !373, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !373, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !373, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !373, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!405 = !DISubroutineType(types: !406)
!406 = !{!120, !115, !315, !115}
!407 = !DISubroutineType(types: !408)
!408 = !{null, !115, !115, !115}
!409 = !DISubroutineType(types: !410)
!410 = !{!120, !315, !411}
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !351)
!413 = !DISubroutineType(types: !414)
!414 = !{!120, !115, !115, !120, !315, !350, !252, !302, !302}
!415 = !DISubroutineType(types: !416)
!416 = !{!120, !115, !115, !252, !160, !160, !302, !315}
!417 = !DISubroutineType(types: !418)
!418 = !{!7, !7, !7}
!419 = !DISubroutineType(types: !420)
!420 = !{!55, !317}
!421 = !DISubroutineType(types: !422)
!422 = !{!120, !315}
!423 = !DISubroutineType(types: !424)
!424 = !{!53, !425, !55}
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!427 = !DISubroutineType(types: !428)
!428 = !{!120, !7, !7, !9, !55, !55, !248, !89, !115, !115, !302}
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !431, line: 23, size: 192, elements: !432)
!431 = !DIFile(filename: "src/extent-scan.h", directory: "/home/mbarbar/software/coreutils-8.31")
!432 = !{!433, !434, !435}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !430, file: !431, line: 26, baseType: !248, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !430, file: !431, line: 29, baseType: !248, size: 64, offset: 64)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !430, file: !431, line: 32, baseType: !70, size: 32, offset: 128)
!436 = !DISubroutineType(types: !437)
!437 = !{null, !438}
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !431, line: 36, size: 384, elements: !440)
!440 = !{!441, !442, !443, !444, !445, !446, !447}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !439, file: !431, line: 39, baseType: !7, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !439, file: !431, line: 42, baseType: !248, size: 64, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !439, file: !431, line: 45, baseType: !70, size: 32, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !439, file: !431, line: 48, baseType: !55, size: 64, offset: 192)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !439, file: !431, line: 52, baseType: !120, size: 8, offset: 256)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !439, file: !431, line: 55, baseType: !120, size: 8, offset: 264)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !439, file: !431, line: 58, baseType: !429, size: 64, offset: 320)
!448 = !DISubroutineType(types: !449)
!449 = !{!120, !7, !115, !120, !248}
!450 = !DISubroutineType(types: !451)
!451 = !{!120, !7, !248}
!452 = !DISubroutineType(types: !453)
!453 = !{!7, !7, !248, !248}
!454 = !DISubroutineType(types: !455)
!455 = !{!120, !7, !7, !9, !55, !55, !120, !115, !115, !456, !459, !302}
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !457, line: 102, baseType: !458)
!457 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !30, line: 73, baseType: !57)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !249, line: 77, baseType: !461)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !30, line: 193, baseType: !31)
!462 = !DISubroutineType(types: !463)
!463 = !{!120, !425, !55}
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !466)
!466 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!467 = !DISubroutineType(types: !468)
!468 = !{!7, !7, !115, !160}
!469 = !DISubroutineType(types: !470)
!470 = !{!7, !115, !471}
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !337)
!473 = !DISubroutineType(types: !474)
!474 = !{!7, !252, !115, !7, !315, !120, !315}
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !161, line: 79, baseType: !326)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !161, line: 64, baseType: !328)
!477 = !DISubroutineType(types: !478)
!478 = !{!120, !115, !7, !115, !7, !252}
!479 = !DISubroutineType(types: !480)
!480 = !{null, !481, !115}
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "error_context", file: !483, line: 25, size: 192, elements: !484)
!483 = !DIFile(filename: "/usr/include/attr/error_context.h", directory: "")
!484 = !{!485, !489, !493}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !482, file: !483, line: 27, baseType: !486, size: 64)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = !DISubroutineType(types: !488)
!488 = !{null, !481, !115, null}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "quote", scope: !482, file: !483, line: 30, baseType: !490, size: 64, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!491 = !DISubroutineType(types: !492)
!492 = !{!115, !481, !115}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "quote_free", scope: !482, file: !483, line: 33, baseType: !494, size: 64, offset: 128)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !249, line: 52, baseType: !496)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !497, line: 32, baseType: !498)
!497 = !DIFile(filename: "llvm9/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mbarbar/software")
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !245, line: 623, baseType: !499)
!499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !500, size: 192, elements: !38)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !245, line: 623, size: 192, elements: !501)
!501 = !{!502, !503, !504, !505}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !500, file: !245, line: 623, baseType: !70, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !500, file: !245, line: 623, baseType: !70, size: 32, offset: 32)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !500, file: !245, line: 623, baseType: !53, size: 64, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !500, file: !245, line: 623, baseType: !53, size: 64, offset: 128)
!506 = !DISubroutineType(types: !507)
!507 = !{!7, !115, !481}
!508 = !DISubroutineType(types: !509)
!509 = !{null, !115, !7, !315}
!510 = !{!511, !242, !514, !516, !519, !521}
!511 = !DIGlobalVariableExpression(var: !512, expr: !DIExpression())
!512 = distinct !DIGlobalVariable(name: "mask", scope: !513, file: !245, line: 3051, type: !160, isLocal: true, isDefinition: true)
!513 = distinct !DISubprogram(name: "cached_umask", scope: !245, file: !245, line: 3049, type: !305, scopeLine: 3050, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "top_level_dst_name", scope: !244, file: !245, line: 148, type: !115, isLocal: true, isDefinition: true)
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "zeros", scope: !518, file: !245, line: 351, type: !9, isLocal: true, isDefinition: true)
!518 = distinct !DISubprogram(name: "write_zeros", scope: !245, file: !245, line: 349, type: !450, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "nz", scope: !518, file: !245, line: 352, type: !55, isLocal: true, isDefinition: true)
!521 = !DIGlobalVariableExpression(var: !522, expr: !DIExpression())
!522 = distinct !DIGlobalVariable(name: "fallback", scope: !518, file: !245, line: 359, type: !523, isLocal: true, isDefinition: true)
!523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8192, elements: !524)
!524 = !{!525}
!525 = !DISubrange(count: 1024)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "src_to_dest", scope: !528, file: !529, line: 45, type: !195, isLocal: true, isDefinition: true)
!528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !529, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !530, globals: !551, nameTableKind: None)
!529 = !DIFile(filename: "src/cp-hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!530 = !{!53, !9, !456, !531, !533, !227, !230, !195, !539, !541, !543, !134, !545, !547, !549}
!531 = !DISubroutineType(types: !532)
!532 = !{null, !227, !230}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Src_to_dest", file: !529, line: 33, size: 192, elements: !535)
!535 = !{!536, !537, !538}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !534, file: !529, line: 35, baseType: !227, size: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !534, file: !529, line: 36, baseType: !230, size: 64, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !534, file: !529, line: 40, baseType: !9, size: 64, offset: 128)
!539 = !DISubroutineType(types: !540)
!540 = !{!9, !227, !230}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !534)
!543 = !DISubroutineType(types: !544)
!544 = !{!9, !115, !227, !230}
!545 = !DISubroutineType(types: !546)
!546 = !{null, !53}
!547 = !DISubroutineType(types: !548)
!548 = !{!55, !425, !55}
!549 = !DISubroutineType(types: !550)
!550 = !{!120, !425, !425}
!551 = !{!526}
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "simple_pattern", scope: !554, file: !555, line: 38, type: !567, isLocal: true, isDefinition: true)
!554 = distinct !DICompileUnit(language: DW_LANG_C99, file: !555, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !556, globals: !584, nameTableKind: None)
!555 = !DIFile(filename: "src/force-link.c", directory: "/home/mbarbar/software/coreutils-8.31")
!556 = !{!557, !7, !559, !9, !562, !564, !566, !55, !567, !570, !572, !115, !579}
!557 = !DISubroutineType(types: !558)
!558 = !{!7, !7, !115, !7, !115, !7, !120, !7}
!559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 2048, elements: !560)
!560 = !{!561}
!561 = !DISubrange(count: 256)
!562 = !DISubroutineType(types: !563)
!563 = !{!7, !115, !7, !115, !120, !7}
!564 = !DISubroutineType(types: !565)
!565 = !{!9, !115, !9}
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !56, line: 35, baseType: !31)
!567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 72, elements: !568)
!568 = !{!569}
!569 = !DISubrange(count: 9)
!570 = !DISubroutineType(types: !571)
!571 = !{!7, !9, !53}
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "link_arg", file: !555, line: 71, size: 192, elements: !574)
!574 = !{!575, !576, !577, !578}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "srcdir", scope: !573, file: !555, line: 73, baseType: !7, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !573, file: !555, line: 74, baseType: !115, size: 64, offset: 64)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !573, file: !555, line: 75, baseType: !7, size: 32, offset: 128)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !573, file: !555, line: 76, baseType: !7, size: 32, offset: 160)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "symlink_arg", file: !555, line: 131, size: 128, elements: !581)
!581 = !{!582, !583}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !580, file: !555, line: 133, baseType: !115, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !580, file: !555, line: 134, baseType: !7, size: 32, offset: 64)
!584 = !{!552}
!585 = !DIGlobalVariableExpression(var: !586, expr: !DIExpression())
!586 = distinct !DIGlobalVariable(name: "Version", scope: !587, file: !588, line: 2, type: !115, isLocal: false, isDefinition: true)
!587 = distinct !DICompileUnit(language: DW_LANG_C99, file: !588, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !589, globals: !590, nameTableKind: None)
!588 = !DIFile(filename: "src/version.c", directory: "/home/mbarbar/software/coreutils-8.31")
!589 = !{!115}
!590 = !{!585}
!591 = !DIGlobalVariableExpression(var: !592, expr: !DIExpression())
!592 = distinct !DIGlobalVariable(name: "simple_backup_suffix", scope: !593, file: !597, line: 82, type: !115, isLocal: false, isDefinition: true)
!593 = distinct !DICompileUnit(language: DW_LANG_C99, file: !594, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !595, retainedTypes: !603, globals: !627, nameTableKind: None)
!594 = !DIFile(filename: "./lib/backupfile.c", directory: "/home/mbarbar/software/coreutils-8.31")
!595 = !{!68, !596}
!596 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "numbered_backup_result", file: !597, line: 172, baseType: !70, size: 32, elements: !598)
!597 = !DIFile(filename: "lib/backupfile.c", directory: "/home/mbarbar/software/coreutils-8.31")
!598 = !{!599, !600, !601, !602}
!599 = !DIEnumerator(name: "BACKUP_IS_SAME_LENGTH", value: 0, isUnsigned: true)
!600 = !DIEnumerator(name: "BACKUP_IS_LONGER", value: 1, isUnsigned: true)
!601 = !DIEnumerator(name: "BACKUP_IS_NEW", value: 2, isUnsigned: true)
!602 = !DIEnumerator(name: "BACKUP_NOMEM", value: 3, isUnsigned: true)
!603 = !{!53, !70, !55, !115, !136, !116, !604, !566, !606, !9, !607, !7, !611, !614, !623, !120, !10, !624, !31}
!604 = !DISubroutineType(types: !605)
!605 = !{!9, !7, !115, !68, !120}
!606 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !161, line: 108, baseType: !461)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !609, line: 127, baseType: !610)
!609 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!610 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !609, line: 127, flags: DIFlagFwdDecl)
!611 = !DISubroutineType(types: !612)
!612 = !{!596, !7, !119, !55, !55, !566, !613, !129}
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !616, line: 22, size: 2240, elements: !617)
!616 = !DIFile(filename: "/usr/include/bits/dirent.h", directory: "")
!617 = !{!618, !619, !620, !621, !622}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !615, file: !616, line: 25, baseType: !228, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !615, file: !616, line: 26, baseType: !29, size: 64, offset: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !615, file: !616, line: 31, baseType: !33, size: 16, offset: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !615, file: !616, line: 32, baseType: !466, size: 8, offset: 144)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !615, file: !616, line: 33, baseType: !559, size: 2048, offset: 152)
!623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 16, elements: !209)
!624 = !DISubroutineType(types: !625)
!625 = !{null, !9, !55, !10, !7, !626}
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!627 = !{!591}
!628 = !DIGlobalVariableExpression(var: !629, expr: !DIExpression())
!629 = distinct !DIGlobalVariable(name: "backup_args", scope: !630, file: !650, line: 42, type: !642, isLocal: true, isDefinition: true)
!630 = distinct !DICompileUnit(language: DW_LANG_C99, file: !631, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !632, retainedTypes: !633, globals: !647, nameTableKind: None)
!631 = !DIFile(filename: "./lib/backup-find.c", directory: "/home/mbarbar/software/coreutils-8.31")
!632 = !{!68}
!633 = !{!115, !634, !9, !636, !116, !638, !642, !644}
!634 = !DISubroutineType(types: !635)
!635 = !{!9, !7, !115, !68}
!636 = !DISubroutineType(types: !637)
!637 = !{!68, !115, !115}
!638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, size: 256, elements: !640)
!639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !68)
!640 = !{!641}
!641 = !DISubrange(count: 8)
!642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 576, elements: !568)
!643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !115)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !645, line: 55, baseType: !646)
!645 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mbarbar/software/coreutils-8.31")
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!647 = !{!648, !628}
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "backup_types", scope: !630, file: !650, line: 53, type: !638, isLocal: true, isDefinition: true)
!650 = !DIFile(filename: "lib/backup-find.c", directory: "/home/mbarbar/software/coreutils-8.31")
!651 = !DIGlobalVariableExpression(var: !652, expr: !DIExpression())
!652 = distinct !DIGlobalVariable(name: "file_name", scope: !653, file: !692, line: 37, type: !115, isLocal: true, isDefinition: true)
!653 = distinct !DICompileUnit(language: DW_LANG_C99, file: !654, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !655, globals: !691, nameTableKind: None)
!654 = !DIFile(filename: "./lib/closein.c", directory: "/home/mbarbar/software/coreutils-8.31")
!655 = !{!136, !115, !134, !120, !656, !7, !690}
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !658)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !659)
!659 = !{!660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !658, file: !4, line: 51, baseType: !7, size: 32)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !658, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !658, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !658, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !658, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !658, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !658, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !658, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !658, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !658, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !658, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !658, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !658, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !658, file: !4, line: 70, baseType: !674, size: 64, offset: 832)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !658, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !658, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !658, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !658, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !658, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !658, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !658, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !658, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !658, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !658, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !658, file: !4, line: 93, baseType: !674, size: 64, offset: 1344)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !658, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !658, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !658, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !658, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!690 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!691 = !{!651}
!692 = !DIFile(filename: "lib/closein.c", directory: "/home/mbarbar/software/coreutils-8.31")
!693 = !DIGlobalVariableExpression(var: !694, expr: !DIExpression())
!694 = distinct !DIGlobalVariable(name: "file_name", scope: !695, file: !737, line: 46, type: !115, isLocal: true, isDefinition: true)
!695 = distinct !DICompileUnit(language: DW_LANG_C99, file: !696, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !697, globals: !734, nameTableKind: None)
!696 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mbarbar/software/coreutils-8.31")
!697 = !{!136, !115, !698, !120, !134, !700, !7, !690}
!698 = !DISubroutineType(types: !699)
!699 = !{null, !120}
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !702)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !703)
!703 = !{!704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !702, file: !4, line: 51, baseType: !7, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !702, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !702, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !702, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !702, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !702, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !702, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !702, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !702, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !702, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !702, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !702, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !702, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !702, file: !4, line: 70, baseType: !718, size: 64, offset: 832)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !702, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !702, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !702, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !702, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !702, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !702, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !702, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !702, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !702, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !702, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !702, file: !4, line: 93, baseType: !718, size: 64, offset: 1344)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !702, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !702, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !702, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !702, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!734 = !{!693, !735}
!735 = !DIGlobalVariableExpression(var: !736, expr: !DIExpression())
!736 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !695, file: !737, line: 56, type: !120, isLocal: true, isDefinition: true)
!737 = !DIFile(filename: "lib/closeout.c", directory: "/home/mbarbar/software/coreutils-8.31")
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "exit_failure", scope: !740, file: !744, line: 24, type: !690, isLocal: false, isDefinition: true)
!740 = distinct !DICompileUnit(language: DW_LANG_C99, file: !741, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !742, globals: !743, nameTableKind: None)
!741 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mbarbar/software/coreutils-8.31")
!742 = !{!690}
!743 = !{!738}
!744 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mbarbar/software/coreutils-8.31")
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "default_tuning", scope: !747, file: !756, line: 130, type: !772, isLocal: true, isDefinition: true)
!747 = distinct !DICompileUnit(language: DW_LANG_C99, file: !748, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !749, globals: !879, nameTableKind: None)
!748 = !DIFile(filename: "./lib/hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!749 = !{!57, !53, !55, !750, !753, !765, !759, !792, !794, !830, !786, !832, !834, !836, !837, !843, !466, !116, !845, !772, !848, !850, !754, !771, !783, !789, !851, !853, !855, !425, !777, !120, !858, !7, !860, !547, !549, !862, !864, !866, !868, !870, !872, !874, !877}
!750 = !DISubroutineType(types: !751)
!751 = !{!55, !752}
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !754)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !197, line: 69, baseType: !755)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !756, line: 52, size: 640, elements: !757)
!756 = !DIFile(filename: "lib/hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!757 = !{!758, !764, !767, !768, !769, !770, !782, !785, !788, !791}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !755, file: !756, line: 57, baseType: !759, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !756, line: 46, size: 128, elements: !761)
!761 = !{!762, !763}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !760, file: !756, line: 48, baseType: !53, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !760, file: !756, line: 49, baseType: !759, size: 64, offset: 64)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !755, file: !756, line: 58, baseType: !765, size: 64, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !760)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !755, file: !756, line: 59, baseType: !55, size: 64, offset: 128)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !755, file: !756, line: 60, baseType: !55, size: 64, offset: 192)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !755, file: !756, line: 61, baseType: !55, size: 64, offset: 256)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !755, file: !756, line: 64, baseType: !771, size: 64, offset: 320)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !773)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !197, line: 65, baseType: !774)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !197, line: 53, size: 160, elements: !775)
!775 = !{!776, !778, !779, !780, !781}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !774, file: !197, line: 58, baseType: !777, size: 32)
!777 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !774, file: !197, line: 59, baseType: !777, size: 32, offset: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !774, file: !197, line: 60, baseType: !777, size: 32, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !774, file: !197, line: 61, baseType: !777, size: 32, offset: 96)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !774, file: !197, line: 62, baseType: !120, size: 8, offset: 128)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !755, file: !756, line: 71, baseType: !783, size: 64, offset: 384)
!783 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !197, line: 48, baseType: !784)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !755, file: !756, line: 72, baseType: !786, size: 64, offset: 448)
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !197, line: 49, baseType: !787)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !755, file: !756, line: 73, baseType: !789, size: 64, offset: 512)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !197, line: 50, baseType: !790)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !755, file: !756, line: 76, baseType: !759, size: 64, offset: 576)
!792 = !DISubroutineType(types: !793)
!793 = !{!120, !752}
!794 = !DISubroutineType(types: !795)
!795 = !{null, !752, !796}
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !798)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !799)
!799 = !{!800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !798, file: !4, line: 51, baseType: !7, size: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !798, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !798, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !798, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !798, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !798, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !798, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !798, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !798, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !798, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !798, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !798, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !798, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !798, file: !4, line: 70, baseType: !814, size: 64, offset: 832)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !798, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !798, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !798, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !798, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !798, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !798, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !798, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !798, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !798, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !798, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !798, file: !4, line: 93, baseType: !814, size: 64, offset: 1344)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !798, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !798, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !798, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !798, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!830 = !DISubroutineType(types: !831)
!831 = !{!53, !752, !425}
!832 = !DISubroutineType(types: !833)
!833 = !{!53, !752}
!834 = !DISubroutineType(types: !835)
!835 = !{!55, !752, !836, !55}
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!837 = !DISubroutineType(types: !838)
!838 = !{!55, !752, !839, !53}
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !197, line: 51, baseType: !840)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DISubroutineType(types: !842)
!842 = !{!120, !53, !53}
!843 = !DISubroutineType(types: !844)
!844 = !{!55, !115, !55}
!845 = !DISubroutineType(types: !846)
!846 = !{null, !847}
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!848 = !DISubroutineType(types: !849)
!849 = !{!850, !55, !771, !783, !786, !789}
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{null, !850}
!853 = !DISubroutineType(types: !854)
!854 = !{!120, !850, !55}
!855 = !DISubroutineType(types: !856)
!856 = !{!7, !850, !425, !857}
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!858 = !DISubroutineType(types: !859)
!859 = !{!53, !850, !425}
!860 = !DISubroutineType(types: !861)
!861 = !{!759, !752, !425}
!862 = !DISubroutineType(types: !863)
!863 = !{!120, !850}
!864 = !DISubroutineType(types: !865)
!865 = !{!55, !55, !771}
!866 = !DISubroutineType(types: !867)
!867 = !{!55, !55}
!868 = !DISubroutineType(types: !869)
!869 = !{!120, !55}
!870 = !DISubroutineType(types: !871)
!871 = !{!120, !850, !850, !120}
!872 = !DISubroutineType(types: !873)
!873 = !{null, !850, !759}
!874 = !DISubroutineType(types: !875)
!875 = !{!53, !850, !425, !876, !120}
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!877 = !DISubroutineType(types: !878)
!878 = !{!759, !850}
!879 = !{!745}
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "program_name", scope: !882, file: !920, line: 33, type: !115, isLocal: false, isDefinition: true)
!882 = distinct !DICompileUnit(language: DW_LANG_C99, file: !883, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !884, globals: !919, nameTableKind: None)
!883 = !DIFile(filename: "./lib/progname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!884 = !{!53, !9, !115, !136, !885}
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !887)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !888)
!888 = !{!889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !887, file: !4, line: 51, baseType: !7, size: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !887, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !887, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !887, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !887, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !887, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !887, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !887, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !887, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !887, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !887, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !887, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !887, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !887, file: !4, line: 70, baseType: !903, size: 64, offset: 832)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !887, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !887, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !887, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !887, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !887, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !887, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !887, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !887, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !887, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !887, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !887, file: !4, line: 93, baseType: !903, size: 64, offset: 1344)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !887, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !887, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !887, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !887, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!919 = !{!880}
!920 = !DIFile(filename: "lib/progname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !923, file: !952, line: 85, type: !941, isLocal: false, isDefinition: true)
!923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !924, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !925, retainedTypes: !940, globals: !1048, nameTableKind: None)
!924 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mbarbar/software/coreutils-8.31")
!925 = !{!926}
!926 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !927, line: 32, baseType: !70, size: 32, elements: !928)
!927 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mbarbar/software/coreutils-8.31")
!928 = !{!929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939}
!929 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!930 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!931 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!932 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!933 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!934 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!935 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!936 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!937 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!938 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!939 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!940 = !{!7, !33, !55, !941, !944, !948, !950, !960, !964, !966, !466, !968, !70, !969, !971, !115, !973, !962, !975, !977, !9, !134, !979, !559, !984, !986, !988, !990, !992, !994, !996, !998, !1000, !1002, !1004, !1006, !1008, !1010, !1012, !1014, !1016, !1018, !1020, !120, !116, !1024, !1026, !1041, !1022, !1042, !1044, !1046}
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 704, elements: !942)
!942 = !{!943}
!943 = !DISubrange(count: 11)
!944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !945, size: 320, elements: !946)
!945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !926)
!946 = !{!947}
!947 = !DISubrange(count: 10)
!948 = !DISubroutineType(types: !949)
!949 = !{!950, !950}
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !952, line: 65, size: 448, elements: !953)
!952 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mbarbar/software/coreutils-8.31")
!953 = !{!954, !955, !956, !958, !959}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !951, file: !952, line: 68, baseType: !926, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !951, file: !952, line: 71, baseType: !7, size: 32, offset: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !951, file: !952, line: 75, baseType: !957, size: 256, offset: 64)
!957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 256, elements: !640)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !951, file: !952, line: 78, baseType: !115, size: 64, offset: 320)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !951, file: !952, line: 81, baseType: !115, size: 64, offset: 384)
!960 = !DISubroutineType(types: !961)
!961 = !{!926, !962}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !951)
!964 = !DISubroutineType(types: !965)
!965 = !{null, !950, !926}
!966 = !DISubroutineType(types: !967)
!967 = !{!7, !950, !10, !7}
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!969 = !DISubroutineType(types: !970)
!970 = !{!7, !950, !7}
!971 = !DISubroutineType(types: !972)
!972 = !{null, !950, !115, !115}
!973 = !DISubroutineType(types: !974)
!974 = !{!55, !9, !55, !115, !55, !962}
!975 = !DISubroutineType(types: !976)
!976 = !{!9, !115, !55, !962}
!977 = !DISubroutineType(types: !978)
!978 = !{!9, !115, !55, !626, !962}
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !952, line: 834, size: 128, elements: !981)
!981 = !{!982, !983}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !980, file: !952, line: 836, baseType: !55, size: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !980, file: !952, line: 837, baseType: !9, size: 64, offset: 64)
!984 = !DISubroutineType(types: !985)
!985 = !{!9, !7, !115}
!986 = !DISubroutineType(types: !987)
!987 = !{!9, !7, !115, !55}
!988 = !DISubroutineType(types: !989)
!989 = !{!9, !115}
!990 = !DISubroutineType(types: !991)
!991 = !{!9, !115, !55}
!992 = !DISubroutineType(types: !993)
!993 = !{!9, !7, !926, !115}
!994 = !DISubroutineType(types: !995)
!995 = !{!9, !7, !926, !115, !55}
!996 = !DISubroutineType(types: !997)
!997 = !{!9, !926, !115}
!998 = !DISubroutineType(types: !999)
!999 = !{!9, !926, !115, !55}
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!9, !115, !55, !10}
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!9, !115, !10}
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!9, !7, !115, !115, !115}
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!9, !7, !115, !115, !115, !55}
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!9, !115, !115, !115}
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!9, !115, !115, !115, !55}
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!115, !7, !115, !55}
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!115, !115, !55}
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!115, !7, !115}
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!115, !115}
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!55, !9, !55, !115, !55, !926, !7, !1022, !115, !115}
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !70)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !33)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1027, line: 6, baseType: !1028)
!1027 = !DIFile(filename: "/usr/include/bits/types/mbstate_t.h", directory: "")
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1029, line: 21, baseType: !1030)
!1029 = !DIFile(filename: "/usr/include/bits/types/__mbstate_t.h", directory: "")
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1029, line: 13, size: 64, elements: !1031)
!1031 = !{!1032, !1033}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1030, file: !1029, line: 15, baseType: !7, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1030, file: !1029, line: 20, baseType: !1034, size: 32, offset: 32)
!1034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1030, file: !1029, line: 16, size: 32, elements: !1035)
!1035 = !{!1036, !1037}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1034, file: !1029, line: 18, baseType: !70, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1034, file: !1029, line: 19, baseType: !1038, size: 32)
!1038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32, elements: !1039)
!1039 = !{!1040}
!1040 = !DISubrange(count: 4)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !56, line: 74, baseType: !7)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{!115, !115, !926}
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!9, !7, !115, !55, !962}
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!951, !926}
!1048 = !{!921, !1049, !1051, !1053, !1055, !1057, !1059, !1061}
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !923, file: !952, line: 101, type: !944, isLocal: false, isDefinition: true)
!1051 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression())
!1052 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !923, file: !952, line: 1052, type: !951, isLocal: false, isDefinition: true)
!1053 = !DIGlobalVariableExpression(var: !1054, expr: !DIExpression())
!1054 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !923, file: !952, line: 116, type: !951, isLocal: true, isDefinition: true)
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(name: "slot0", scope: !923, file: !952, line: 842, type: !559, isLocal: true, isDefinition: true)
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(name: "slotvec", scope: !923, file: !952, line: 845, type: !979, isLocal: true, isDefinition: true)
!1059 = !DIGlobalVariableExpression(var: !1060, expr: !DIExpression())
!1060 = distinct !DIGlobalVariable(name: "nslots", scope: !923, file: !952, line: 843, type: !7, isLocal: true, isDefinition: true)
!1061 = !DIGlobalVariableExpression(var: !1062, expr: !DIExpression())
!1062 = distinct !DIGlobalVariable(name: "slotvec0", scope: !923, file: !952, line: 844, type: !980, isLocal: true, isDefinition: true)
!1063 = !DIGlobalVariableExpression(var: !1064, expr: !DIExpression())
!1064 = distinct !DIGlobalVariable(name: "comparison_function_table", scope: !1065, file: !1080, line: 74, type: !1090, isLocal: true, isDefinition: true)
!1065 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1066, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1067, retainedTypes: !1075, globals: !1105, nameTableKind: None)
!1066 = !DIFile(filename: "./lib/savedir.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1067 = !{!1068}
!1068 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "savedir_option", file: !1069, line: 26, baseType: !70, size: 32, elements: !1070)
!1069 = !DIFile(filename: "./lib/savedir.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1070 = !{!1071, !1072, !1073, !1074}
!1071 = !DIEnumerator(name: "SAVEDIR_SORT_NONE", value: 0, isUnsigned: true)
!1072 = !DIEnumerator(name: "SAVEDIR_SORT_NAME", value: 1, isUnsigned: true)
!1073 = !DIEnumerator(name: "SAVEDIR_SORT_INODE", value: 2, isUnsigned: true)
!1074 = !DIEnumerator(name: "SAVEDIR_SORT_FASTREAD", value: 2, isUnsigned: true)
!1075 = !{!53, !1076, !9, !55, !1078, !7, !1086, !1090, !1092, !115, !1079, !228, !1085, !1101, !607, !1088, !1103, !1104}
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!9, !607, !1068}
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "direntry_t", file: !1080, line: 46, baseType: !1081)
!1080 = !DIFile(filename: "lib/savedir.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1080, line: 40, size: 128, elements: !1082)
!1082 = !{!1083, !1084}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1081, file: !1080, line: 42, baseType: !9, size: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1081, file: !1080, line: 44, baseType: !1085, size: 64, offset: 64)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !609, line: 34, baseType: !228)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "comparison_function", file: !1080, line: 72, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!7, !425, !425}
!1090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1091, size: 192, elements: !348)
!1091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1086)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1094)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !616, line: 22, size: 2240, elements: !1095)
!1095 = !{!1096, !1097, !1098, !1099, !1100}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1094, file: !616, line: 25, baseType: !228, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1094, file: !616, line: 26, baseType: !29, size: 64, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1094, file: !616, line: 31, baseType: !33, size: 16, offset: 128)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1094, file: !616, line: 32, baseType: !466, size: 8, offset: 144)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1094, file: !616, line: 33, baseType: !559, size: 2048, offset: 152)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!9, !115, !1068}
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1079)
!1105 = !{!1063}
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "letters", scope: !1108, file: !1129, line: 184, type: !1117, isLocal: true, isDefinition: true)
!1108 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1109, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1110, globals: !1128, nameTableKind: None)
!1109 = !DIFile(filename: "./lib/tempname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1110 = !{!1111, !55, !9, !70, !7, !1114, !1117, !1120, !1113, !1122, !1124, !1126, !570, !129}
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!7, !9, !7, !53, !1113, !55}
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !1116, line: 33, flags: DIFlagFwdDecl)
!1116 = !DIFile(filename: "./lib/randint.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 504, elements: !1118)
!1118 = !{!1119}
!1119 = !DISubrange(count: 63)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!7, !9, !7, !7, !7, !55}
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!7, !9, !7, !7, !7}
!1124 = !DISubroutineType(types: !1125)
!1125 = !{!7, !9, !7, !53, !1113}
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!120, !115, !55}
!1128 = !{!1106}
!1129 = !DIFile(filename: "lib/tempname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "ht", scope: !1132, file: !1133, line: 163, type: !195, isLocal: true, isDefinition: true)
!1132 = distinct !DISubprogram(name: "utimecmpat", scope: !1133, file: !1133, line: 132, type: !1134, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1159, retainedNodes: !143)
!1133 = !DIFile(filename: "lib/utimecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!7, !7, !115, !1136, !1136, !7}
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1138)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1139)
!1139 = !{!1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1156, !1157, !1158}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1138, file: !318, line: 48, baseType: !231, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1138, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1138, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1138, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1138, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1138, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1138, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1138, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1138, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1138, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1138, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1138, file: !318, line: 91, baseType: !1152, size: 128, offset: 576)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1153)
!1153 = !{!1154, !1155}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1152, file: !338, line: 11, baseType: !341, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1152, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1138, file: !318, line: 92, baseType: !1152, size: 128, offset: 704)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1138, file: !318, line: 93, baseType: !1152, size: 128, offset: 832)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1138, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1159 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1160, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1161, globals: !1175, nameTableKind: None)
!1160 = !DIFile(filename: "./lib/utimecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1161 = !{!1162, !1134, !1164, !341, !7, !1166, !120, !231, !230, !1172, !343, !547, !1173, !549}
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!7, !115, !1136, !1136, !7}
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !1165, line: 7, baseType: !341)
!1165 = !DIFile(filename: "/usr/include/bits/types/time_t.h", directory: "")
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_res", file: !1133, line: 66, size: 128, elements: !1168)
!1168 = !{!1169, !1170, !1171}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1167, file: !1133, line: 69, baseType: !230, size: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !1167, file: !1133, line: 76, baseType: !7, size: 32, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "exact", scope: !1167, file: !1133, line: 80, baseType: !120, size: 8, offset: 96)
!1172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1152, size: 256, elements: !209)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1167)
!1175 = !{!1130, !1176}
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "new_dst_res", scope: !1132, file: !1133, line: 166, type: !1166, isLocal: true, isDefinition: true)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "utimensat_works_really", scope: !1180, file: !1230, line: 75, type: !7, isLocal: true, isDefinition: true)
!1180 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1181, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1182, globals: !1227, nameTableKind: None)
!1181 = !DIFile(filename: "./lib/utimens.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1182 = !{!1183, !1191, !1192, !7, !343, !1193, !1200, !341, !1199, !120, !1164, !1201, !133, !1203, !1205}
!1183 = !DISubroutineType(types: !1184)
!1184 = !{!7, !7, !115, !1185}
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!1186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1187)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1188)
!1188 = !{!1189, !1190}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1187, file: !338, line: 11, baseType: !341, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1187, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1187, size: 256, elements: !209)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1194, size: 256, elements: !209)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1195, line: 8, size: 128, elements: !1196)
!1195 = !DIFile(filename: "/usr/include/bits/types/struct_timeval.h", directory: "")
!1196 = !{!1197, !1198}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1194, file: !1195, line: 10, baseType: !341, size: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1194, file: !1195, line: 11, baseType: !1199, size: 64, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !30, line: 162, baseType: !31)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{!7, !115, !1185}
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!7, !1192}
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!120, !1207, !1226}
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1209, file: !318, line: 48, baseType: !231, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1209, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1209, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1209, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1209, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1209, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1209, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1209, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1209, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1209, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1209, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1209, file: !318, line: 91, baseType: !1187, size: 128, offset: 576)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1209, file: !318, line: 92, baseType: !1187, size: 128, offset: 704)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1209, file: !318, line: 93, baseType: !1187, size: 128, offset: 832)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1209, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1227 = !{!1178, !1228}
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "lutimensat_works_really", scope: !1180, file: !1230, line: 76, type: !7, isLocal: true, isDefinition: true)
!1230 = !DIFile(filename: "lib/utimens.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !1233, file: !1240, line: 26, type: !1236, isLocal: false, isDefinition: true)
!1233 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1234, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1235, globals: !1239, nameTableKind: None)
!1234 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1235 = !{!1236}
!1236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 376, elements: !1237)
!1237 = !{!1238}
!1238 = !DISubrange(count: 47)
!1239 = !{!1231}
!1240 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(name: "initialized", scope: !1243, file: !1244, line: 34, type: !120, isLocal: true, isDefinition: true)
!1243 = distinct !DISubprogram(name: "can_write_any_file", scope: !1244, file: !1244, line: 32, type: !1245, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1247, retainedNodes: !143)
!1244 = !DIFile(filename: "lib/write-any-file.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!120}
!1247 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1248, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1249, globals: !1250, nameTableKind: None)
!1248 = !DIFile(filename: "./lib/write-any-file.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1249 = !{!1245, !120}
!1250 = !{!1241, !1251}
!1251 = !DIGlobalVariableExpression(var: !1252, expr: !DIExpression())
!1252 = distinct !DIGlobalVariable(name: "can_write", scope: !1243, file: !1244, line: 35, type: !120, isLocal: true, isDefinition: true)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !1255, file: !1304, line: 69, type: !644, isLocal: false, isDefinition: true)
!1255 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1256, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1257, globals: !1303, nameTableKind: None)
!1256 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1257 = !{!53, !644, !1258, !55, !566, !120, !1260, !1261, !115, !1263, !1265, !1299, !1301, !134}
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!566, !115, !1260, !115, !55}
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{null, !115, !115, !566}
!1263 = !DISubroutineType(types: !1264)
!1264 = !{null, !1260, !115, !55}
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1268)
!1268 = !{!1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1267, file: !4, line: 51, baseType: !7, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1267, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1267, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1267, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1267, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1267, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1267, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1267, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1267, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1267, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1267, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1267, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1267, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1267, file: !4, line: 70, baseType: !1283, size: 64, offset: 832)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1267, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1267, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1267, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1267, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1267, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1267, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1267, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1267, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1267, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1267, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1267, file: !4, line: 93, baseType: !1283, size: 64, offset: 1344)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1267, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1267, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1267, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1267, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!566, !115, !115, !1260, !115, !55, !644}
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!115, !115, !1260, !115, !55}
!1303 = !{!1253}
!1304 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !1307, file: !1308, line: 506, type: !7, isLocal: true, isDefinition: true)
!1307 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD_CLOEXEC", scope: !1308, file: !1308, line: 487, type: !417, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1309, retainedNodes: !143)
!1308 = !DIFile(filename: "lib/fcntl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1310, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1311, globals: !1321, nameTableKind: None)
!1310 = !DIFile(filename: "./lib/fcntl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1311 = !{!417, !1312, !7, !53}
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !497, line: 14, baseType: !1313)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1310, line: 207, baseType: !1314)
!1314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1315, size: 192, elements: !38)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1310, line: 207, size: 192, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1315, file: !1310, line: 207, baseType: !70, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1315, file: !1310, line: 207, baseType: !70, size: 32, offset: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1315, file: !1310, line: 207, baseType: !53, size: 64, offset: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1315, file: !1310, line: 207, baseType: !53, size: 64, offset: 128)
!1321 = !{!1305}
!1322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1323, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1324, retainedTypes: !1334, nameTableKind: None)
!1323 = !DIFile(filename: "src/remove.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1324 = !{!106, !100, !1325, !1330}
!1325 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ternary", file: !1323, line: 35, baseType: !70, size: 32, elements: !1326)
!1326 = !{!1327, !1328, !1329}
!1327 = !DIEnumerator(name: "T_UNKNOWN", value: 2, isUnsigned: true)
!1328 = !DIEnumerator(name: "T_NO", value: 3, isUnsigned: true)
!1329 = !DIEnumerator(name: "T_YES", value: 4, isUnsigned: true)
!1330 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Prompt_action", file: !1323, line: 46, baseType: !70, size: 32, elements: !1331)
!1331 = !{!1332, !1333}
!1332 = !DIEnumerator(name: "PA_DESCEND_INTO_DIR", value: 2, isUnsigned: true)
!1333 = !DIEnumerator(name: "PA_REMOVE_DIR", value: 3, isUnsigned: true)
!1334 = !{!53, !7, !1335, !1338, !120, !1358, !1451, !1453, !1452, !33, !1359, !9, !566, !1349, !228, !227, !231, !230, !1455, !1456, !607, !1458, !1467, !1469, !1364, !31, !1471, !200, !115, !10, !1473, !1476, !1478, !1480, !133, !1481, !1515, !29, !1517, !1519, !1521, !1523, !307}
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!106, !1337, !1339}
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rm_options", file: !101, line: 32, size: 256, elements: !1342)
!1342 = !{!1343, !1344, !1345, !1346, !1347, !1348, !1354, !1355, !1356, !1357}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_missing_files", scope: !1341, file: !101, line: 35, baseType: !120, size: 8)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !1341, file: !101, line: 38, baseType: !100, size: 32, offset: 32)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !1341, file: !101, line: 47, baseType: !120, size: 8, offset: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !1341, file: !101, line: 50, baseType: !120, size: 8, offset: 72)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "remove_empty_directories", scope: !1341, file: !101, line: 53, baseType: !120, size: 8, offset: 80)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !1341, file: !101, line: 57, baseType: !1349, size: 64, offset: 128)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !224, line: 7, size: 128, elements: !1351)
!1351 = !{!1352, !1353}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1350, file: !224, line: 9, baseType: !227, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1350, file: !224, line: 10, baseType: !230, size: 64, offset: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_all_root", scope: !1341, file: !101, line: 61, baseType: !120, size: 8, offset: 192)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !1341, file: !101, line: 64, baseType: !120, size: 8, offset: 200)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !1341, file: !101, line: 67, baseType: !120, size: 8, offset: 208)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "require_restore_cwd", scope: !1341, file: !101, line: 75, baseType: !120, size: 8, offset: 216)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1360, line: 197, baseType: !1361)
!1360 = !DIFile(filename: "./lib/fts_.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1360, line: 80, size: 1024, elements: !1362)
!1362 = !{!1363, !1413, !1414, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1429, !1430, !1433, !1440}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !1361, file: !1360, line: 81, baseType: !1364, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1360, line: 199, size: 2112, elements: !1366)
!1366 = !{!1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1383, !1384, !1385, !1386, !1409}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1365, file: !1360, line: 200, baseType: !1364, size: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !1365, file: !1360, line: 201, baseType: !1364, size: 64, offset: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !1365, file: !1360, line: 202, baseType: !1364, size: 64, offset: 128)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !1365, file: !1360, line: 203, baseType: !607, size: 64, offset: 192)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !1365, file: !1360, line: 206, baseType: !31, size: 64, offset: 256)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !1365, file: !1360, line: 207, baseType: !53, size: 64, offset: 320)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !1365, file: !1360, line: 208, baseType: !9, size: 64, offset: 384)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1365, file: !1360, line: 209, baseType: !9, size: 64, offset: 448)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !1365, file: !1360, line: 210, baseType: !7, size: 32, offset: 512)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !1365, file: !1360, line: 211, baseType: !7, size: 32, offset: 544)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1365, file: !1360, line: 212, baseType: !55, size: 64, offset: 576)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !1365, file: !1360, line: 214, baseType: !1358, size: 64, offset: 640)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !1365, file: !1360, line: 218, baseType: !566, size: 64, offset: 704)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !1365, file: !1360, line: 220, baseType: !55, size: 64, offset: 768)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !1365, file: !1360, line: 225, baseType: !1382, size: 64, offset: 832)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !161, line: 74, baseType: !323)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !1365, file: !1360, line: 241, baseType: !33, size: 16, offset: 896)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !1365, file: !1360, line: 245, baseType: !33, size: 16, offset: 912)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !1365, file: !1360, line: 251, baseType: !33, size: 16, offset: 928)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !1365, file: !1360, line: 253, baseType: !1387, size: 1152, offset: 960)
!1387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1388, size: 1152, elements: !38)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1389)
!1389 = !{!1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1406, !1407, !1408}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1388, file: !318, line: 48, baseType: !231, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1388, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1388, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1388, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1388, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1388, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1388, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1388, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1388, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1388, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1388, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1388, file: !318, line: 91, baseType: !1402, size: 128, offset: 576)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1403)
!1403 = !{!1404, !1405}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1402, file: !338, line: 11, baseType: !341, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1402, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1388, file: !318, line: 92, baseType: !1402, size: 128, offset: 704)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1388, file: !318, line: 93, baseType: !1402, size: 128, offset: 832)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1388, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !1365, file: !1360, line: 254, baseType: !1410, offset: 2112)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, elements: !1411)
!1411 = !{!1412}
!1412 = !DISubrange(count: -1)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !1361, file: !1360, line: 82, baseType: !1364, size: 64, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !1361, file: !1360, line: 83, baseType: !1415, size: 64, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !1361, file: !1360, line: 84, baseType: !230, size: 64, offset: 192)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1361, file: !1360, line: 85, baseType: !9, size: 64, offset: 256)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !1361, file: !1360, line: 86, baseType: !7, size: 32, offset: 320)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !1361, file: !1360, line: 87, baseType: !7, size: 32, offset: 352)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1361, file: !1360, line: 89, baseType: !55, size: 64, offset: 384)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !1361, file: !1360, line: 90, baseType: !55, size: 64, offset: 448)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !1361, file: !1360, line: 91, baseType: !1423, size: 64, offset: 512)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{!7, !1426, !1426}
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1365)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !1361, file: !1360, line: 160, baseType: !7, size: 32, offset: 576)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !1361, file: !1360, line: 169, baseType: !1431, size: 64, offset: 640)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !1360, line: 169, flags: DIFlagFwdDecl)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1361, file: !1360, line: 191, baseType: !1434, size: 64, offset: 704)
!1434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1361, file: !1360, line: 171, size: 64, elements: !1435)
!1435 = !{!1436, !1437}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !1434, file: !1360, line: 184, baseType: !1431, size: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1434, file: !1360, line: 190, baseType: !1438, size: 64)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !1360, line: 190, flags: DIFlagFwdDecl)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !1361, file: !1360, line: 196, baseType: !1441, size: 256, offset: 768)
!1441 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1442, line: 39, baseType: !1443)
!1442 = !DIFile(filename: "./lib/i-ring.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1442, line: 31, size: 256, elements: !1444)
!1444 = !{!1445, !1447, !1448, !1449, !1450}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !1443, file: !1442, line: 33, baseType: !1446, size: 128)
!1446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !1039)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !1443, file: !1442, line: 34, baseType: !7, size: 32, offset: 128)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !1443, file: !1442, line: 35, baseType: !70, size: 32, offset: 160)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !1443, file: !1442, line: 36, baseType: !70, size: 32, offset: 192)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !1443, file: !1442, line: 37, baseType: !120, size: 8, offset: 224)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1360, line: 255, baseType: !1365)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{!106, !1358, !1451, !1339}
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ternary", file: !1323, line: 41, baseType: !1325)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!120, !7, !115}
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1460)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !616, line: 22, size: 2240, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465, !1466}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1460, file: !616, line: 25, baseType: !228, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1460, file: !616, line: 26, baseType: !29, size: 64, offset: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1460, file: !616, line: 31, baseType: !33, size: 16, offset: 128)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1460, file: !616, line: 32, baseType: !466, size: 8, offset: 144)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1460, file: !616, line: 33, baseType: !559, size: 2048, offset: 152)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!1458, !607}
!1469 = !DISubroutineType(types: !1470)
!1470 = !{null, !1451}
!1471 = !DISubroutineType(types: !1472)
!1472 = !{null, !1358, !1451}
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!106, !1475, !1477, !120, !1339, !1330, !1479}
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1359)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1452)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1483)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1484)
!1484 = !{!1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1483, file: !4, line: 51, baseType: !7, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1483, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1483, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1483, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1483, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1483, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1483, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1483, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1483, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1483, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1483, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1483, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1483, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1483, file: !4, line: 70, baseType: !1499, size: 64, offset: 832)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1483, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1483, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1483, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1483, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1483, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1483, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1483, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1483, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1483, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1483, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1483, file: !4, line: 93, baseType: !1499, size: 64, offset: 1344)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1483, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1483, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1483, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1483, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!1480, !1480}
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!7, !7, !115, !1480}
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!7, !7, !115, !1480, !7}
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!106, !1358, !1451, !1339, !120}
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!120, !1339, !7}
!1525 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1526, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1527, nameTableKind: None)
!1526 = !DIFile(filename: "src/extent-scan.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1527 = !{!1528, !1529, !7, !55, !1541, !120, !70, !1547, !1549, !1578, !1565, !1554, !1559, !1245}
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !161, line: 85, baseType: !29)
!1529 = !DISubroutineType(types: !1530)
!1530 = !{null, !7, !1531}
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !431, line: 36, size: 384, elements: !1533)
!1533 = !{!1534, !1535, !1536, !1537, !1538, !1539, !1540}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1532, file: !431, line: 39, baseType: !7, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !1532, file: !431, line: 42, baseType: !1528, size: 64, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1532, file: !431, line: 45, baseType: !70, size: 32, offset: 128)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !1532, file: !431, line: 48, baseType: !55, size: 64, offset: 192)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !1532, file: !431, line: 52, baseType: !120, size: 8, offset: 256)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !1532, file: !431, line: 55, baseType: !120, size: 8, offset: 264)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !1532, file: !431, line: 58, baseType: !1541, size: 64, offset: 320)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !431, line: 23, size: 192, elements: !1543)
!1543 = !{!1544, !1545, !1546}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !1542, file: !431, line: 26, baseType: !1528, size: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !1542, file: !431, line: 29, baseType: !1528, size: 64, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !1542, file: !431, line: 32, baseType: !70, size: 32, offset: 128)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!120, !1531}
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap", file: !1551, line: 35, size: 256, elements: !1552)
!1551 = !DIFile(filename: "src/fiemap.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1552 = !{!1553, !1557, !1558, !1561, !1562, !1563, !1564}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "fm_start", scope: !1550, file: !1551, line: 38, baseType: !1554, size: 64)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1555, line: 27, baseType: !1556)
!1555 = !DIFile(filename: "/usr/include/bits/stdint-uintn.h", directory: "")
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !30, line: 45, baseType: !57)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "fm_length", scope: !1550, file: !1551, line: 41, baseType: !1554, size: 64, offset: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1550, file: !1551, line: 44, baseType: !1559, size: 32, offset: 128)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1555, line: 26, baseType: !1560)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !30, line: 42, baseType: !70)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "fm_mapped_extents", scope: !1550, file: !1551, line: 47, baseType: !1559, size: 32, offset: 160)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extent_count", scope: !1550, file: !1551, line: 50, baseType: !1559, size: 32, offset: 192)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "fm_reserved", scope: !1550, file: !1551, line: 52, baseType: !1559, size: 32, offset: 224)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extents", scope: !1550, file: !1551, line: 59, baseType: !1565, offset: 256)
!1565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1566, elements: !1576)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent", file: !1551, line: 14, size: 448, elements: !1567)
!1567 = !{!1568, !1569, !1570, !1571, !1573, !1574}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "fe_logical", scope: !1566, file: !1551, line: 18, baseType: !1554, size: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "fe_physical", scope: !1566, file: !1551, line: 22, baseType: !1554, size: 64, offset: 64)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "fe_length", scope: !1566, file: !1551, line: 25, baseType: !1554, size: 64, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved64", scope: !1566, file: !1551, line: 27, baseType: !1572, size: 128, offset: 192)
!1572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1554, size: 128, elements: !209)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "fe_flags", scope: !1566, file: !1551, line: 30, baseType: !1559, size: 32, offset: 320)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved", scope: !1566, file: !1551, line: 32, baseType: !1575, size: 96, offset: 352)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1559, size: 96, elements: !348)
!1576 = !{!1577}
!1577 = !DISubrange(count: 0)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1579 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1580, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, nameTableKind: None)
!1580 = !DIFile(filename: "src/selinux.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1582, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1583, nameTableKind: None)
!1582 = !DIFile(filename: "./lib/copy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1583 = !{!1584, !7}
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!7, !115, !7, !115, !7, !160}
!1586 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1587, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1588, nameTableKind: None)
!1587 = !DIFile(filename: "./lib/set-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1588 = !{!1589, !7}
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!7, !115, !7, !160}
!1591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1592, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1593, nameTableKind: None)
!1592 = !DIFile(filename: "./lib/areadlink-with-size.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1593 = !{!53, !990, !55, !606, !9, !7}
!1594 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1595, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !632, retainedTypes: !1596, nameTableKind: None)
!1595 = !DIFile(filename: "./lib/backup-rename.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1596 = !{!634}
!1597 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1598, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1599, nameTableKind: None)
!1598 = !DIFile(filename: "./lib/buffer-lcm.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1599 = !{!1600, !55}
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!55, !55, !55, !55}
!1602 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1603, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1604, nameTableKind: None)
!1603 = !DIFile(filename: "./lib/dirname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1604 = !{!988, !9}
!1605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1606, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1607, nameTableKind: None)
!1606 = !DIFile(filename: "./lib/dirname-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1607 = !{!1608, !55, !115, !988, !120, !9}
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!55, !115}
!1610 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1611, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1612, nameTableKind: None)
!1611 = !DIFile(filename: "./lib/basename-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1612 = !{!9, !988, !115, !120, !116, !1608, !55}
!1613 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1614, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1615, nameTableKind: None)
!1614 = !DIFile(filename: "./lib/stripslash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1615 = !{!1616, !9, !120, !10}
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!120, !9}
!1618 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1619, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1620, retainedTypes: !1630, nameTableKind: None)
!1619 = !DIFile(filename: "./lib/fadvise.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1620 = !{!1621}
!1621 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1622, line: 45, baseType: !70, size: 32, elements: !1623)
!1622 = !DIFile(filename: "./lib/fadvise.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1623 = !{!1624, !1625, !1626, !1627, !1628, !1629}
!1624 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0, isUnsigned: true)
!1625 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2, isUnsigned: true)
!1626 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5, isUnsigned: true)
!1627 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4, isUnsigned: true)
!1628 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3, isUnsigned: true)
!1629 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1, isUnsigned: true)
!1630 = !{!1631, !1634}
!1631 = !DISubroutineType(types: !1632)
!1632 = !{null, !7, !248, !248, !1633}
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !1622, line: 52, baseType: !1621)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{null, !1636, !1633}
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1638)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1639)
!1639 = !{!1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1638, file: !4, line: 51, baseType: !7, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1638, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1638, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1638, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1638, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1638, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1638, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1638, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1638, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1638, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1638, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1638, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1638, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1638, file: !4, line: 70, baseType: !1654, size: 64, offset: 832)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1638, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1638, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1638, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1638, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1638, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1638, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1638, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1638, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1638, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1638, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1638, file: !4, line: 93, baseType: !1654, size: 64, offset: 1344)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1638, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1638, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1638, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1638, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1670 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1671, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1672, nameTableKind: None)
!1671 = !DIFile(filename: "./lib/open-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1672 = !{!1673, !160, !1675}
!1673 = !DISubroutineType(types: !1674)
!1674 = !{!7, !115, !7}
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !497, line: 14, baseType: !1676)
!1676 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1671, line: 35, baseType: !1677)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1678, size: 192, elements: !38)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1671, line: 35, size: 192, elements: !1679)
!1679 = !{!1680, !1681, !1682, !1683}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1678, file: !1671, line: 35, baseType: !70, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1678, file: !1671, line: 35, baseType: !70, size: 32, offset: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1678, file: !1671, line: 35, baseType: !53, size: 64, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1678, file: !1671, line: 35, baseType: !53, size: 64, offset: 128)
!1684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1685, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1686, nameTableKind: None)
!1685 = !DIFile(filename: "./lib/file-set.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1686 = !{!53, !9, !1687, !1712, !228, !227, !231, !230, !1719}
!1687 = !DISubroutineType(types: !1688)
!1688 = !{null, !195, !115, !1689}
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1691)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1692)
!1692 = !{!1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1709, !1710, !1711}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1691, file: !318, line: 48, baseType: !231, size: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1691, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1691, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1691, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1691, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1691, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1691, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1691, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1691, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1691, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1691, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1691, file: !318, line: 91, baseType: !1705, size: 128, offset: 576)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1706)
!1706 = !{!1707, !1708}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1705, file: !338, line: 11, baseType: !341, size: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1705, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1691, file: !318, line: 92, baseType: !1705, size: 128, offset: 704)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1691, file: !318, line: 93, baseType: !1705, size: 128, offset: 832)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1691, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1714, line: 9, size: 192, elements: !1715)
!1714 = !DIFile(filename: "./lib/hash-triple.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1715 = !{!1716, !1717, !1718}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1713, file: !1714, line: 11, baseType: !9, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1713, file: !1714, line: 12, baseType: !227, size: 64, offset: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1713, file: !1714, line: 13, baseType: !230, size: 64, offset: 128)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!120, !1721, !115, !1689}
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!1723 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1724, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1725, nameTableKind: None)
!1724 = !DIFile(filename: "./lib/file-type.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1725 = !{!1726, !133, !29}
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!115, !1728}
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64)
!1729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1730)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1731)
!1731 = !{!1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1748, !1749, !1750}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1730, file: !318, line: 48, baseType: !231, size: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1730, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1730, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1730, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1730, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1730, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1730, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1730, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1730, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1730, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1730, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1730, file: !318, line: 91, baseType: !1744, size: 128, offset: 576)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1745)
!1745 = !{!1746, !1747}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1744, file: !338, line: 11, baseType: !341, size: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1744, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1730, file: !318, line: 92, baseType: !1744, size: 128, offset: 704)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1730, file: !318, line: 93, baseType: !1744, size: 128, offset: 832)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1730, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1751 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1752, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1753, nameTableKind: None)
!1752 = !DIFile(filename: "./lib/filemode.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1753 = !{!1754, !9, !1756, !133, !1781}
!1754 = !DISubroutineType(types: !1755)
!1755 = !{null, !160, !9}
!1756 = !DISubroutineType(types: !1757)
!1757 = !{null, !1758, !9}
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1760)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1761)
!1761 = !{!1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1778, !1779, !1780}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1760, file: !318, line: 48, baseType: !231, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1760, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1760, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1760, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1760, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1760, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1760, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1760, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1760, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1760, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1760, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1760, file: !318, line: 91, baseType: !1774, size: 128, offset: 576)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1775)
!1775 = !{!1776, !1777}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1774, file: !338, line: 11, baseType: !341, size: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1774, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1760, file: !318, line: 92, baseType: !1774, size: 128, offset: 704)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1760, file: !318, line: 93, baseType: !1774, size: 128, offset: 832)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1760, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!10, !160}
!1783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1784, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1785, nameTableKind: None)
!1784 = !DIFile(filename: "./lib/filenamecat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1785 = !{!53, !1786, !9}
!1786 = !DISubroutineType(types: !1787)
!1787 = !{!9, !115, !115, !119}
!1788 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1789, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1790, nameTableKind: None)
!1789 = !DIFile(filename: "./lib/filenamecat-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1790 = !{!53, !1786, !115, !55, !10, !116, !9}
!1791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1792, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1793, nameTableKind: None)
!1792 = !DIFile(filename: "./lib/full-write.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1793 = !{!115, !55, !1794, !7}
!1794 = !DISubroutineType(types: !1795)
!1795 = !{!55, !7, !425, !55}
!1796 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1797, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1798, nameTableKind: None)
!1797 = !DIFile(filename: "./lib/hash-triple.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1798 = !{!547, !1799, !55, !9, !227, !549, !230, !545, !1806}
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1801)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1714, line: 9, size: 192, elements: !1802)
!1802 = !{!1803, !1804, !1805}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1801, file: !1714, line: 11, baseType: !9, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1801, file: !1714, line: 12, baseType: !227, size: 64, offset: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1801, file: !1714, line: 13, baseType: !230, size: 64, offset: 128)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1807 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1808, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1809, nameTableKind: None)
!1808 = !DIFile(filename: "./lib/opendirat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1809 = !{!1810, !7, !607}
!1810 = !DISubroutineType(types: !1811)
!1811 = !{!607, !7, !115, !7, !129}
!1812 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1813, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1814, nameTableKind: None)
!1813 = !DIFile(filename: "./lib/priv-set.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1814 = !{!1815}
!1815 = !DISubroutineType(types: !1816)
!1816 = !{!7}
!1817 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1818, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1583, nameTableKind: None)
!1818 = !DIFile(filename: "./lib/qcopy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1820, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1821, nameTableKind: None)
!1820 = !DIFile(filename: "./lib/qset-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1821 = !{!1589, !7, !160}
!1822 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1823, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1824, nameTableKind: None)
!1823 = !DIFile(filename: "./lib/renameatu.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1824 = !{!9, !1825, !7, !55, !120, !115, !133, !1827}
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!7, !7, !115, !7, !115, !70}
!1827 = !DISubroutineType(types: !1828)
!1828 = !{!7, !7}
!1829 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1830, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1831, nameTableKind: None)
!1830 = !DIFile(filename: "./lib/root-dev-ino.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1831 = !{!1832, !228, !227, !231, !230}
!1832 = !DISubroutineType(types: !1833)
!1833 = !{!1834, !1834}
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !224, line: 7, size: 128, elements: !1836)
!1836 = !{!1837, !1838}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1835, file: !224, line: 9, baseType: !227, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1835, file: !224, line: 10, baseType: !230, size: 64, offset: 64)
!1839 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1840, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1841, nameTableKind: None)
!1840 = !DIFile(filename: "./lib/safe-write.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1841 = !{!1794, !606, !7}
!1842 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1843, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1844, nameTableKind: None)
!1843 = !DIFile(filename: "./lib/same.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1844 = !{!1845, !1847, !115, !55, !120, !9, !7, !228, !231}
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!120, !115, !115}
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!120, !7, !115, !7, !115}
!1849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1850, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1851, nameTableKind: None)
!1850 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1851 = !{!1852, !7, !1857, !1859, !1861, !1863, !1865, !1867, !1869, !1871, !1874, !1876}
!1852 = !DISubroutineType(types: !1853)
!1853 = !{!7, !1854}
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !1856, line: 83, baseType: !9)
!1856 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1857 = !DISubroutineType(types: !1858)
!1858 = !{null, !1855}
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!7, !1855}
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!7, !115, !160, !1854}
!1863 = !DISubroutineType(types: !1864)
!1864 = !{!7, !115, !1854}
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!7, !7, !1854}
!1867 = !DISubroutineType(types: !1868)
!1868 = !{!7, !115, !1855}
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!7, !7, !1855}
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!7, !1855, !1855, !1873, !1854}
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_class_t", file: !1856, line: 82, baseType: !33)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!1873, !115}
!1876 = !DISubroutineType(types: !1877)
!1877 = !{!7, !115, !115}
!1878 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1879, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1880, nameTableKind: None)
!1879 = !DIFile(filename: "./lib/stat-time.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1880 = !{!1881, !343, !1906, !341, !1908}
!1881 = !DISubroutineType(types: !1882)
!1882 = !{!31, !1883}
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1886)
!1886 = !{!1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1903, !1904, !1905}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1885, file: !318, line: 48, baseType: !231, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1885, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1885, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1885, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1885, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1885, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1885, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1885, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1885, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1885, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1885, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1885, file: !318, line: 91, baseType: !1899, size: 128, offset: 576)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1900)
!1900 = !{!1901, !1902}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1899, file: !338, line: 11, baseType: !341, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1899, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1885, file: !318, line: 92, baseType: !1899, size: 128, offset: 704)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1885, file: !318, line: 93, baseType: !1899, size: 128, offset: 832)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1885, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{!1899, !1883}
!1908 = !DISubroutineType(types: !1909)
!1909 = !{!7, !7, !1910}
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1911 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1912, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1913, nameTableKind: None)
!1912 = !DIFile(filename: "./lib/statat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1913 = !{!1914}
!1914 = !DISubroutineType(types: !1915)
!1915 = !{!7, !7, !115, !1916}
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1918)
!1918 = !{!1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1935, !1936, !1937}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1917, file: !318, line: 48, baseType: !231, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1917, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1917, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1917, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1917, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1917, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1917, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1917, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1917, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1917, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1917, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1917, file: !318, line: 91, baseType: !1931, size: 128, offset: 576)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1932)
!1932 = !{!1933, !1934}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1931, file: !338, line: 11, baseType: !341, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1931, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1917, file: !318, line: 92, baseType: !1931, size: 128, offset: 704)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1917, file: !318, line: 93, baseType: !1931, size: 128, offset: 832)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1917, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1938 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1939, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1940, nameTableKind: None)
!1939 = !DIFile(filename: "./lib/fd-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1940 = !{!1827, !7}
!1941 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1942, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1943, nameTableKind: None)
!1942 = !DIFile(filename: "./lib/verror.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1943 = !{!1944, !1953, !9, !7}
!1944 = !DISubroutineType(types: !1945)
!1945 = !{null, !7, !7, !115, !1946}
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1942, size: 192, elements: !1948)
!1948 = !{!1949, !1950, !1951, !1952}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1947, file: !1942, baseType: !70, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1947, file: !1942, baseType: !70, size: 32, offset: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1947, file: !1942, baseType: !53, size: 64, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1947, file: !1942, baseType: !53, size: 64, offset: 128)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{null, !7, !7, !115, !70, !115, !1946}
!1955 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1956, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1957, nameTableKind: None)
!1956 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1957 = !{!53, !1958, !1994, !1260, !1995, !55, !1997, !2006, !2007, !2009, !134, !1960}
!1958 = !DISubroutineType(types: !1959)
!1959 = !{null, !1960, !115, !115, !115, !1260, !55}
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1962)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1963)
!1963 = !{!1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1962, file: !4, line: 51, baseType: !7, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1962, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1962, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1962, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1962, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1962, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1962, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1962, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1962, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1962, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1962, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1962, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1962, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1962, file: !4, line: 70, baseType: !1978, size: 64, offset: 832)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1962, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1962, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1962, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1962, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1962, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1962, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1962, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1962, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1962, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1962, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1962, file: !4, line: 93, baseType: !1978, size: 64, offset: 1344)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1962, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1962, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1962, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1962, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, elements: !1411)
!1995 = !DISubroutineType(types: !1996)
!1996 = !{null, !1960, !115, !115, !115, !1260}
!1997 = !DISubroutineType(types: !1998)
!1998 = !{null, !1960, !115, !115, !115, !1999}
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1956, line: 189, size: 192, elements: !2001)
!2001 = !{!2002, !2003, !2004, !2005}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2000, file: !1956, line: 189, baseType: !70, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2000, file: !1956, line: 189, baseType: !70, size: 32, offset: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2000, file: !1956, line: 189, baseType: !53, size: 64, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2000, file: !1956, line: 189, baseType: !53, size: 64, offset: 128)
!2006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, size: 640, elements: !946)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{null, !1960, !115, !115, !115}
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !249, line: 52, baseType: !2010)
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !497, line: 32, baseType: !2011)
!2011 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1956, line: 231, baseType: !2012)
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2000, size: 192, elements: !38)
!2013 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2014, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2015, nameTableKind: None)
!2014 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2015 = !{!55, !9, !53, !2016, !2018, !2020, !2022, !2024, !2026, !2028, !423, !988}
!2016 = !DISubroutineType(types: !2017)
!2017 = !{!53, !55, !55}
!2018 = !DISubroutineType(types: !2019)
!2019 = !{!53, !53, !55, !55}
!2020 = !DISubroutineType(types: !2021)
!2021 = !{!53, !53, !626, !55}
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!9, !55}
!2024 = !DISubroutineType(types: !2025)
!2025 = !{!53, !55}
!2026 = !DISubroutineType(types: !2027)
!2027 = !{!53, !53, !55}
!2028 = !DISubroutineType(types: !2029)
!2029 = !{!53, !53, !626}
!2030 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2031, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2032, nameTableKind: None)
!2031 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2032 = !{!134, !690}
!2033 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2034, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2035, nameTableKind: None)
!2034 = !DIFile(filename: "./lib/xfts.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2035 = !{!53, !2036, !2038, !7, !2127, !2130, !2125, !566}
!2036 = !DISubroutineType(types: !2037)
!2037 = !{!2038, !1337, !7, !2120}
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1360, line: 197, baseType: !2040)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1360, line: 80, size: 1024, elements: !2041)
!2041 = !{!2042, !2088, !2089, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2104, !2105, !2106, !2111}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !2040, file: !1360, line: 81, baseType: !2043, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1360, line: 199, size: 2112, elements: !2045)
!2045 = !{!2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2087}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !2044, file: !1360, line: 200, baseType: !2043, size: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !2044, file: !1360, line: 201, baseType: !2043, size: 64, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !2044, file: !1360, line: 202, baseType: !2043, size: 64, offset: 128)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !2044, file: !1360, line: 203, baseType: !607, size: 64, offset: 192)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !2044, file: !1360, line: 206, baseType: !31, size: 64, offset: 256)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !2044, file: !1360, line: 207, baseType: !53, size: 64, offset: 320)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !2044, file: !1360, line: 208, baseType: !9, size: 64, offset: 384)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !2044, file: !1360, line: 209, baseType: !9, size: 64, offset: 448)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !2044, file: !1360, line: 210, baseType: !7, size: 32, offset: 512)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !2044, file: !1360, line: 211, baseType: !7, size: 32, offset: 544)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !2044, file: !1360, line: 212, baseType: !55, size: 64, offset: 576)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !2044, file: !1360, line: 214, baseType: !2038, size: 64, offset: 640)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !2044, file: !1360, line: 218, baseType: !566, size: 64, offset: 704)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !2044, file: !1360, line: 220, baseType: !55, size: 64, offset: 768)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !2044, file: !1360, line: 225, baseType: !1382, size: 64, offset: 832)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !2044, file: !1360, line: 241, baseType: !33, size: 16, offset: 896)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !2044, file: !1360, line: 245, baseType: !33, size: 16, offset: 912)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !2044, file: !1360, line: 251, baseType: !33, size: 16, offset: 928)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !2044, file: !1360, line: 253, baseType: !2065, size: 1152, offset: 960)
!2065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2066, size: 1152, elements: !38)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2084, !2085, !2086}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2066, file: !318, line: 48, baseType: !231, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2066, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2066, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2066, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2066, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2066, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2066, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2066, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2066, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2066, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2066, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2066, file: !318, line: 91, baseType: !2080, size: 128, offset: 576)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !2081)
!2081 = !{!2082, !2083}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2080, file: !338, line: 11, baseType: !341, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2080, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2066, file: !318, line: 92, baseType: !2080, size: 128, offset: 704)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2066, file: !318, line: 93, baseType: !2080, size: 128, offset: 832)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2066, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !2044, file: !1360, line: 254, baseType: !1410, offset: 2112)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !2040, file: !1360, line: 82, baseType: !2043, size: 64, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !2040, file: !1360, line: 83, baseType: !2090, size: 64, offset: 128)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !2040, file: !1360, line: 84, baseType: !230, size: 64, offset: 192)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !2040, file: !1360, line: 85, baseType: !9, size: 64, offset: 256)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !2040, file: !1360, line: 86, baseType: !7, size: 32, offset: 320)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !2040, file: !1360, line: 87, baseType: !7, size: 32, offset: 352)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !2040, file: !1360, line: 89, baseType: !55, size: 64, offset: 384)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !2040, file: !1360, line: 90, baseType: !55, size: 64, offset: 448)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !2040, file: !1360, line: 91, baseType: !2098, size: 64, offset: 512)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{!7, !2101, !2101}
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2044)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !2040, file: !1360, line: 160, baseType: !7, size: 32, offset: 576)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !2040, file: !1360, line: 169, baseType: !1431, size: 64, offset: 640)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !2040, file: !1360, line: 191, baseType: !2107, size: 64, offset: 704)
!2107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2040, file: !1360, line: 171, size: 64, elements: !2108)
!2108 = !{!2109, !2110}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2107, file: !1360, line: 184, baseType: !1431, size: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2107, file: !1360, line: 190, baseType: !1438, size: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !2040, file: !1360, line: 196, baseType: !2112, size: 256, offset: 768)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1442, line: 39, baseType: !2113)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1442, line: 31, size: 256, elements: !2114)
!2114 = !{!2115, !2116, !2117, !2118, !2119}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !2113, file: !1442, line: 33, baseType: !1446, size: 128)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !2113, file: !1442, line: 34, baseType: !7, size: 32, offset: 128)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !2113, file: !1442, line: 35, baseType: !70, size: 32, offset: 160)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !2113, file: !1442, line: 36, baseType: !70, size: 32, offset: 192)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !2113, file: !1442, line: 37, baseType: !120, size: 8, offset: 224)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DISubroutineType(types: !2122)
!2122 = !{!7, !2123, !2123}
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2126)
!2126 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1360, line: 255, baseType: !2044)
!2127 = !DISubroutineType(types: !2128)
!2128 = !{!120, !2129, !2124}
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2039)
!2131 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2132, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2133, nameTableKind: None)
!2132 = !DIFile(filename: "./lib/xvasprintf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2133 = !{!9, !2134, !55, !115, !116, !7, !2143, !2145, !10}
!2134 = !DISubroutineType(types: !2135)
!2135 = !{!9, !115, !2136}
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2132, size: 192, elements: !2138)
!2138 = !{!2139, !2140, !2141, !2142}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2137, file: !2132, baseType: !70, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2137, file: !2132, baseType: !70, size: 32, offset: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2137, file: !2132, baseType: !53, size: 64, offset: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2137, file: !2132, baseType: !53, size: 64, offset: 128)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{!9, !55, !2136}
!2145 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !249, line: 52, baseType: !2146)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !497, line: 32, baseType: !2147)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2132, line: 36, baseType: !2148)
!2148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2137, size: 192, elements: !38)
!2149 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2150, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2151, nameTableKind: None)
!2150 = !DIFile(filename: "./lib/yesno.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2151 = !{!1245, !120, !9, !55, !606, !2152}
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2154)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2155)
!2155 = !{!2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2154, file: !4, line: 51, baseType: !7, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2154, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2154, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2154, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2154, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2154, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2154, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2154, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2154, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2154, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2154, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2154, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2154, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2154, file: !4, line: 70, baseType: !2170, size: 64, offset: 832)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2154, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2154, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2154, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2154, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2154, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2154, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2154, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2154, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2154, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2154, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2154, file: !4, line: 93, baseType: !2170, size: 64, offset: 1344)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2154, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2154, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2154, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2154, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2186 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2187, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2188, nameTableKind: None)
!2187 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2188 = !{!53, !2189, !2225, !2192, !7}
!2189 = !DISubroutineType(types: !2190)
!2190 = !{!7, !2191}
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2193)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2194)
!2194 = !{!2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2193, file: !4, line: 51, baseType: !7, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2193, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2193, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2193, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2193, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2193, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2193, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2193, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2193, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2193, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2193, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2193, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2193, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2193, file: !4, line: 70, baseType: !2209, size: 64, offset: 832)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2193, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2193, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2193, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2193, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2193, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2193, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2193, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2193, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2193, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2193, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2193, file: !4, line: 93, baseType: !2209, size: 64, offset: 1344)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2193, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2193, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2193, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2193, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2225 = !DISubroutineType(types: !2226)
!2226 = !{null, !2191}
!2227 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2228, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2229, nameTableKind: None)
!2228 = !DIFile(filename: "./lib/freadahead.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2229 = !{!2230, !2233, !9, !7}
!2230 = !DISubroutineType(types: !2231)
!2231 = !{!55, !2232}
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2234)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2235)
!2235 = !{!2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2234, file: !4, line: 51, baseType: !7, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2234, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2234, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2234, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2234, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2234, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2234, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2234, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2234, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2234, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2234, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2234, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2234, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2234, file: !4, line: 70, baseType: !2250, size: 64, offset: 832)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2234, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2234, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2234, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2234, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2234, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2234, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2234, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2234, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2234, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2234, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2234, file: !4, line: 93, baseType: !2250, size: 64, offset: 1344)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2234, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2234, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2234, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2234, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2266 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2267, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2268, nameTableKind: None)
!2267 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2268 = !{!53, !2269, !2272, !9, !248, !7, !44}
!2269 = !DISubroutineType(types: !2270)
!2270 = !{!7, !2271, !248, !7}
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2272 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2273)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2274)
!2274 = !{!2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2273, file: !4, line: 51, baseType: !7, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2273, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2273, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2273, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2273, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2273, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2273, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2273, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2273, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2273, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2273, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2273, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2273, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2273, file: !4, line: 70, baseType: !2289, size: 64, offset: 832)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2273, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2273, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2273, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2273, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2273, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2273, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2273, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2273, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2273, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2273, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2273, file: !4, line: 93, baseType: !2289, size: 64, offset: 1344)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2273, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2273, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2273, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2273, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2305 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2306, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2307, retainedTypes: !2314, nameTableKind: None)
!2306 = !DIFile(filename: "./lib/fts.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2307 = !{!2308}
!2308 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "leaf_optimization", file: !2309, line: 643, baseType: !70, size: 32, elements: !2310)
!2309 = !DIFile(filename: "lib/fts.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2310 = !{!2311, !2312, !2313}
!2311 = !DIEnumerator(name: "NO_LEAF_OPTIMIZATION", value: 0, isUnsigned: true)
!2312 = !DIEnumerator(name: "OK_LEAF_OPTIMIZATION", value: 1, isUnsigned: true)
!2313 = !DIEnumerator(name: "NOSTAT_LEAF_OPTIMIZATION", value: 2, isUnsigned: true)
!2314 = !{!53, !1382, !456, !9, !31, !1087, !2315, !2412, !2334, !2417, !55, !120, !7, !2335, !2349, !1338, !2318, !566, !115, !2322, !33, !2418, !2341, !1431, !2420, !231, !230, !607, !10, !29, !133, !2422, !2424, !2426, !2428, !2358, !547, !2430, !227, !549, !2438, !2441, !2442, !2445, !2447, !2449, !228, !2451, !2453, !2317, !2457, !2459, !2455, !2456, !2464, !2466, !2468, !2469, !323, !2471, !559, !466, !2479, !160, !2482, !2350, !2352, !2484, !2481, !1410, !2486, !2488, !1088, !2489, !2491, !2493, !2495, !2497}
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2318)
!2318 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1360, line: 255, baseType: !2319)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1360, line: 199, size: 2112, elements: !2320)
!2320 = !{!2321, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2411}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !2319, file: !1360, line: 200, baseType: !2322, size: 64)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !2319, file: !1360, line: 201, baseType: !2322, size: 64, offset: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !2319, file: !1360, line: 202, baseType: !2322, size: 64, offset: 128)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !2319, file: !1360, line: 203, baseType: !607, size: 64, offset: 192)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !2319, file: !1360, line: 206, baseType: !31, size: 64, offset: 256)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !2319, file: !1360, line: 207, baseType: !53, size: 64, offset: 320)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !2319, file: !1360, line: 208, baseType: !9, size: 64, offset: 384)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !2319, file: !1360, line: 209, baseType: !9, size: 64, offset: 448)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !2319, file: !1360, line: 210, baseType: !7, size: 32, offset: 512)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !2319, file: !1360, line: 211, baseType: !7, size: 32, offset: 544)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !2319, file: !1360, line: 212, baseType: !55, size: 64, offset: 576)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !2319, file: !1360, line: 214, baseType: !2334, size: 64, offset: 640)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1360, line: 197, baseType: !2336)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1360, line: 80, size: 1024, elements: !2337)
!2337 = !{!2338, !2339, !2340, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2355, !2356, !2357, !2373}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !2336, file: !1360, line: 81, baseType: !2322, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !2336, file: !1360, line: 82, baseType: !2322, size: 64, offset: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !2336, file: !1360, line: 83, baseType: !2341, size: 64, offset: 128)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !2336, file: !1360, line: 84, baseType: !230, size: 64, offset: 192)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !2336, file: !1360, line: 85, baseType: !9, size: 64, offset: 256)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !2336, file: !1360, line: 86, baseType: !7, size: 32, offset: 320)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !2336, file: !1360, line: 87, baseType: !7, size: 32, offset: 352)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !2336, file: !1360, line: 89, baseType: !55, size: 64, offset: 384)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !2336, file: !1360, line: 90, baseType: !55, size: 64, offset: 448)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !2336, file: !1360, line: 91, baseType: !2349, size: 64, offset: 512)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = !DISubroutineType(types: !2351)
!2351 = !{!7, !2352, !2352}
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2319)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !2336, file: !1360, line: 160, baseType: !7, size: 32, offset: 576)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !2336, file: !1360, line: 169, baseType: !1431, size: 64, offset: 640)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !2336, file: !1360, line: 191, baseType: !2358, size: 64, offset: 704)
!2358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2336, file: !1360, line: 171, size: 64, elements: !2359)
!2359 = !{!2360, !2361}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2358, file: !1360, line: 184, baseType: !1431, size: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2358, file: !1360, line: 190, baseType: !2362, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !2364, line: 28, size: 256, elements: !2365)
!2364 = !DIFile(filename: "./lib/cycle-check.h", directory: "/home/mbarbar/software/coreutils-8.31")
!2365 = !{!2366, !2371, !2372}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !2363, file: !2364, line: 30, baseType: !2367, size: 128)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !224, line: 7, size: 128, elements: !2368)
!2368 = !{!2369, !2370}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2367, file: !224, line: 9, baseType: !227, size: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2367, file: !224, line: 10, baseType: !230, size: 64, offset: 64)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !2363, file: !2364, line: 31, baseType: !456, size: 64, offset: 128)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2363, file: !2364, line: 32, baseType: !7, size: 32, offset: 192)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !2336, file: !1360, line: 196, baseType: !2374, size: 256, offset: 768)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1442, line: 39, baseType: !2375)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1442, line: 31, size: 256, elements: !2376)
!2376 = !{!2377, !2378, !2379, !2380, !2381}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !2375, file: !1442, line: 33, baseType: !1446, size: 128)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !2375, file: !1442, line: 34, baseType: !7, size: 32, offset: 128)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !2375, file: !1442, line: 35, baseType: !70, size: 32, offset: 160)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !2375, file: !1442, line: 36, baseType: !70, size: 32, offset: 192)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !2375, file: !1442, line: 37, baseType: !120, size: 8, offset: 224)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !2319, file: !1360, line: 218, baseType: !566, size: 64, offset: 704)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !2319, file: !1360, line: 220, baseType: !55, size: 64, offset: 768)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !2319, file: !1360, line: 225, baseType: !1382, size: 64, offset: 832)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !2319, file: !1360, line: 241, baseType: !33, size: 16, offset: 896)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !2319, file: !1360, line: 245, baseType: !33, size: 16, offset: 912)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !2319, file: !1360, line: 251, baseType: !33, size: 16, offset: 928)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !2319, file: !1360, line: 253, baseType: !2389, size: 1152, offset: 960)
!2389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2390, size: 1152, elements: !38)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !2391)
!2391 = !{!2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2408, !2409, !2410}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2390, file: !318, line: 48, baseType: !231, size: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2390, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2390, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2390, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2390, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2390, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2390, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2390, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2390, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2390, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2390, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2390, file: !318, line: 91, baseType: !2404, size: 128, offset: 576)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !2405)
!2405 = !{!2406, !2407}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2404, file: !338, line: 11, baseType: !341, size: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2404, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2390, file: !318, line: 92, baseType: !2404, size: 128, offset: 704)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2390, file: !318, line: 93, baseType: !2404, size: 128, offset: 832)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2390, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !2319, file: !1360, line: 254, baseType: !1410, offset: 2112)
!2412 = !DISubroutineType(types: !2413)
!2413 = !{!2334, !1337, !7, !2414}
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{!7, !2315, !2315}
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{!7, !2334}
!2420 = !DISubroutineType(types: !2421)
!2421 = !{!2417, !2334}
!2422 = !DISubroutineType(types: !2423)
!2423 = !{!7, !2334, !2417, !7}
!2424 = !DISubroutineType(types: !2425)
!2425 = !{!2417, !2334, !7}
!2426 = !DISubroutineType(types: !2427)
!2427 = !{null, !2417, !120}
!2428 = !DISubroutineType(types: !2429)
!2429 = !{!120, !2334}
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2432)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Active_dir", file: !2433, line: 24, size: 192, elements: !2434)
!2433 = !DIFile(filename: "./lib/fts-cycle.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2434 = !{!2435, !2436, !2437}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2432, file: !2433, line: 26, baseType: !230, size: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2432, file: !2433, line: 27, baseType: !227, size: 64, offset: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "fts_ent", scope: !2432, file: !2433, line: 28, baseType: !2417, size: 64, offset: 128)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!7, !2440, !115}
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2335)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{null, !2444}
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64)
!2445 = !DISubroutineType(types: !2446)
!2446 = !{null, !2334}
!2447 = !DISubroutineType(types: !2448)
!2448 = !{null, !2334, !2417}
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2390)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{!2308, !2316, !7}
!2453 = !DISubroutineType(types: !2454)
!2454 = !{!2455, !2316, !7}
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "fsword", file: !2309, line: 671, baseType: !2456)
!2456 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsword_t", file: !30, line: 191, baseType: !31)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !197, line: 69, baseType: !1432)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_type", file: !2309, line: 677, size: 128, elements: !2461)
!2461 = !{!2462, !2463}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2460, file: !2309, line: 679, baseType: !230, size: 64)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !2460, file: !2309, line: 680, baseType: !2455, size: 64, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2460)
!2466 = !DISubroutineType(types: !2467)
!2467 = !{!120, !2334, !2417}
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64)
!2469 = !DISubroutineType(types: !2470)
!2470 = !{null, !2334, !7, !120}
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !616, line: 22, size: 2240, elements: !2473)
!2473 = !{!2474, !2475, !2476, !2477, !2478}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !2472, file: !616, line: 25, baseType: !228, size: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !2472, file: !616, line: 26, baseType: !29, size: 64, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !2472, file: !616, line: 31, baseType: !33, size: 16, offset: 128)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !2472, file: !616, line: 32, baseType: !466, size: 8, offset: 144)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !2472, file: !616, line: 33, baseType: !559, size: 2048, offset: 152)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{null, !2481, !70}
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 64)
!2482 = !DISubroutineType(types: !2483)
!2483 = !{!120, !2316, !7}
!2484 = !DISubroutineType(types: !2485)
!2485 = !{!33, !2334, !2417, !120}
!2486 = !DISubroutineType(types: !2487)
!2487 = !{!2417, !2334, !2417, !55}
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{!2417, !2334, !115, !55}
!2491 = !DISubroutineType(types: !2492)
!2492 = !{null, !2417}
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!120, !2334, !55}
!2495 = !DISubroutineType(types: !2496)
!2496 = !{!55, !1337}
!2497 = !DISubroutineType(types: !2498)
!2498 = !{!7, !2334, !2417, !7, !115}
!2499 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2500, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2501, nameTableKind: None)
!2500 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2501 = !{!55, !2502, !1041, !466, !116}
!2502 = !DISubroutineType(types: !2503)
!2503 = !{!55, !2504, !115, !55, !2505}
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1027, line: 6, baseType: !2507)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1029, line: 21, baseType: !2508)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1029, line: 13, size: 64, elements: !2509)
!2509 = !{!2510, !2511}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2508, file: !1029, line: 15, baseType: !7, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2508, file: !1029, line: 20, baseType: !2512, size: 32, offset: 32)
!2512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2508, file: !1029, line: 16, size: 32, elements: !2513)
!2513 = !{!2514, !2515}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2512, file: !1029, line: 18, baseType: !70, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2512, file: !1029, line: 19, baseType: !1038, size: 32)
!2516 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2517, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2518, nameTableKind: None)
!2517 = !DIFile(filename: "./lib/acl-internal.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2518 = !{!2519, !2525, !7, !2528, !2529, !2521}
!2519 = !DISubroutineType(types: !2520)
!2520 = !{!7, !2521}
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_t", file: !2522, line: 40, baseType: !2523)
!2522 = !DIFile(filename: "/usr/include/sys/acl.h", directory: "")
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = !DICompositeType(tag: DW_TAG_structure_type, name: "__acl_ext", file: !2522, line: 32, flags: DIFlagFwdDecl)
!2525 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_entry_t", file: !2522, line: 41, baseType: !2526)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 64)
!2527 = !DICompositeType(tag: DW_TAG_structure_type, name: "__acl_entry_ext", file: !2522, line: 33, flags: DIFlagFwdDecl)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_tag_t", file: !2522, line: 37, baseType: !7)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{null, !2531}
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2533, line: 260, size: 256, elements: !2534)
!2533 = !DIFile(filename: "./lib/acl-internal.h", directory: "/home/mbarbar/software/coreutils-8.31")
!2534 = !{!2535, !2536, !2537, !2538}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2532, file: !2533, line: 261, baseType: !160, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !2532, file: !2533, line: 264, baseType: !2521, size: 64, offset: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !2532, file: !2533, line: 266, baseType: !2521, size: 64, offset: 128)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !2532, file: !2533, line: 268, baseType: !120, size: 8, offset: 192)
!2539 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2540, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2541, nameTableKind: None)
!2540 = !DIFile(filename: "./lib/get-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2541 = !{!53, !2542, !160, !2521, !7}
!2542 = !DISubroutineType(types: !2543)
!2543 = !{!7, !115, !7, !160, !2544}
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 64)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2533, line: 260, size: 256, elements: !2546)
!2546 = !{!2547, !2548, !2549, !2550}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2545, file: !2533, line: 261, baseType: !160, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !2545, file: !2533, line: 264, baseType: !2521, size: 64, offset: 64)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !2545, file: !2533, line: 266, baseType: !2521, size: 64, offset: 128)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !2545, file: !2533, line: 268, baseType: !120, size: 8, offset: 192)
!2551 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2552, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2553, nameTableKind: None)
!2552 = !DIFile(filename: "./lib/set-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2553 = !{!53, !1589, !2554, !120, !7, !160, !2563, !2521}
!2554 = !DISubroutineType(types: !2555)
!2555 = !{!7, !2556, !115, !7}
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 64)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2533, line: 260, size: 256, elements: !2558)
!2558 = !{!2559, !2560, !2561, !2562}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2557, file: !2533, line: 261, baseType: !160, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !2557, file: !2533, line: 264, baseType: !2521, size: 64, offset: 64)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !2557, file: !2533, line: 266, baseType: !2521, size: 64, offset: 128)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !2557, file: !2533, line: 268, baseType: !120, size: 8, offset: 192)
!2563 = !DISubroutineType(types: !2564)
!2564 = !{!7, !2556, !115, !7, !7, !302, !302}
!2565 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2566, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2567, nameTableKind: None)
!2566 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2567 = !{!2568, !2570, !2572, !2574, !2578}
!2568 = !DISubroutineType(types: !2569)
!2569 = !{!1554, !1554, !7}
!2570 = !DISubroutineType(types: !2571)
!2571 = !{!1559, !1559, !7}
!2572 = !DISubroutineType(types: !2573)
!2573 = !{!55, !55, !7}
!2574 = !DISubroutineType(types: !2575)
!2575 = !{!2576, !2576, !7}
!2576 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1555, line: 25, baseType: !2577)
!2577 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !30, line: 40, baseType: !33)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!2580, !2580, !7}
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1555, line: 24, baseType: !2581)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !30, line: 38, baseType: !466)
!2582 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2583, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2584, nameTableKind: None)
!2583 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2584 = !{!464, !1876, !466, !465}
!2585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2586, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2587, nameTableKind: None)
!2586 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2587 = !{!2588, !2624, !7}
!2588 = !DISubroutineType(types: !2589)
!2589 = !{!7, !2590}
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2592)
!2592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2593)
!2593 = !{!2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2592, file: !4, line: 51, baseType: !7, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2592, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2592, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2592, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2592, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2592, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2592, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2592, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2592, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2592, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2592, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2592, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2592, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2592, file: !4, line: 70, baseType: !2608, size: 64, offset: 832)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2592, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2592, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2592, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2592, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2592, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2592, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2592, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2592, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2592, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2592, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2592, file: !4, line: 93, baseType: !2608, size: 64, offset: 1344)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2592, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2592, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2592, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2592, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!2625 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2626, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2627, nameTableKind: None)
!2626 = !DIFile(filename: "./lib/cycle-check.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2627 = !{!2628, !456, !7, !2640, !228, !227, !231, !230, !2665}
!2628 = !DISubroutineType(types: !2629)
!2629 = !{null, !2630}
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !2364, line: 28, size: 256, elements: !2632)
!2632 = !{!2633, !2638, !2639}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !2631, file: !2364, line: 30, baseType: !2634, size: 128)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !224, line: 7, size: 128, elements: !2635)
!2635 = !{!2636, !2637}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2634, file: !224, line: 9, baseType: !227, size: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2634, file: !224, line: 10, baseType: !230, size: 64, offset: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !2631, file: !2364, line: 31, baseType: !456, size: 64, offset: 128)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2631, file: !2364, line: 32, baseType: !7, size: 32, offset: 192)
!2640 = !DISubroutineType(types: !2641)
!2641 = !{!120, !2630, !2642}
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2644)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !2645)
!2645 = !{!2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2662, !2663, !2664}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2644, file: !318, line: 48, baseType: !231, size: 64)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2644, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2644, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2644, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2644, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2644, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2644, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2644, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2644, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2644, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2644, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2644, file: !318, line: 91, baseType: !2658, size: 128, offset: 576)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !2659)
!2659 = !{!2660, !2661}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2658, file: !338, line: 11, baseType: !341, size: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2658, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2644, file: !318, line: 92, baseType: !2658, size: 128, offset: 704)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2644, file: !318, line: 93, baseType: !2658, size: 128, offset: 832)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2644, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{!120, !456}
!2667 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2668, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2669, nameTableKind: None)
!2668 = !DIFile(filename: "./lib/opendir-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2669 = !{!2670, !607, !7}
!2670 = !DISubroutineType(types: !2671)
!2671 = !{!607, !115}
!2672 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2673, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2674, nameTableKind: None)
!2673 = !DIFile(filename: "./lib/gettime.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2674 = !{!2675, !2682}
!2675 = !DISubroutineType(types: !2676)
!2676 = !{null, !2677}
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !2679)
!2679 = !{!2680, !2681}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2678, file: !338, line: 11, baseType: !341, size: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2678, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{!2678}
!2684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2685, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2686, nameTableKind: None)
!2685 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2686 = !{!307, !120, !115}
!2687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2688, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2689, nameTableKind: None)
!2688 = !DIFile(filename: "./lib/hash-pjw.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2689 = !{!547, !115, !55, !116}
!2690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2691, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2692, nameTableKind: None)
!2691 = !DIFile(filename: "./lib/i-ring.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2692 = !{!2693, !7, !2696, !120, !70, !1446, !2704, !2707, !2708, !2710}
!2693 = !DISubroutineType(types: !2694)
!2694 = !{null, !2695, !7}
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1442, line: 39, baseType: !2697)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1442, line: 31, size: 256, elements: !2698)
!2698 = !{!2699, !2700, !2701, !2702, !2703}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !2697, file: !1442, line: 33, baseType: !1446, size: 128)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !2697, file: !1442, line: 34, baseType: !7, size: 32, offset: 128)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !2697, file: !1442, line: 35, baseType: !70, size: 32, offset: 160)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !2697, file: !1442, line: 36, baseType: !70, size: 32, offset: 192)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !2697, file: !1442, line: 37, baseType: !120, size: 8, offset: 224)
!2704 = !DISubroutineType(types: !2705)
!2705 = !{!120, !2706}
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2696)
!2708 = !DISubroutineType(types: !2709)
!2709 = !{!7, !2695, !7}
!2710 = !DISubroutineType(types: !2711)
!2711 = !{!7, !2695}
!2712 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2713, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2714, nameTableKind: None)
!2713 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2714 = !{!53, !2715, !115}
!2715 = !DISubroutineType(types: !589)
!2716 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2717, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2718, nameTableKind: None)
!2717 = !DIFile(filename: "./lib/openat-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2718 = !{!2719, !160, !2721}
!2719 = !DISubroutineType(types: !2720)
!2720 = !{!7, !7, !115, !7}
!2721 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !497, line: 14, baseType: !2722)
!2722 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2717, line: 35, baseType: !2723)
!2723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2724, size: 192, elements: !38)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2717, line: 35, size: 192, elements: !2725)
!2725 = !{!2726, !2727, !2728, !2729}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2724, file: !2717, line: 35, baseType: !70, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2724, file: !2717, line: 35, baseType: !70, size: 32, offset: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2724, file: !2717, line: 35, baseType: !53, size: 64, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2724, file: !2717, line: 35, baseType: !53, size: 64, offset: 128)
!2730 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2731, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2732, nameTableKind: None)
!2731 = !DIFile(filename: "./lib/randint.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2732 = !{!2733, !2735, !2740, !2744, !2746, !2748, !2752, !55, !2754, !2755, !2757, !7, !2759}
!2733 = !DISubroutineType(types: !2734)
!2734 = !{!2735, !2740}
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 64)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !2737, line: 54, size: 192, elements: !2738)
!2737 = !DIFile(filename: "lib/randint.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2738 = !{!2739, !2743, !2745}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2736, file: !2737, line: 57, baseType: !2740, size: 64)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !2742, line: 25, flags: DIFlagFwdDecl)
!2742 = !DIFile(filename: "./lib/randread.h", directory: "/home/mbarbar/software/coreutils-8.31")
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "randnum", scope: !2736, file: !2737, line: 64, baseType: !2744, size: 64, offset: 64)
!2744 = !DIDerivedType(tag: DW_TAG_typedef, name: "randint", file: !1116, line: 30, baseType: !456)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "randmax", scope: !2736, file: !2737, line: 65, baseType: !2744, size: 64, offset: 128)
!2746 = !DISubroutineType(types: !2747)
!2747 = !{!2735, !115, !55}
!2748 = !DISubroutineType(types: !2749)
!2749 = !{!2740, !2750}
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 64)
!2751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2736)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!2744, !2735, !2744}
!2754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 64, elements: !640)
!2755 = !DISubroutineType(types: !2756)
!2756 = !{null, !2735}
!2757 = !DISubroutineType(types: !2758)
!2758 = !{!7, !2735}
!2759 = !DISubroutineType(types: !2760)
!2760 = !{!2744, !2744}
!2761 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2762, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2763, nameTableKind: None)
!2762 = !DIFile(filename: "./lib/randread.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2763 = !{!55, !2764, !2771, !2766, !2841, !2806, !2843, !425, !2845, !2847, !2849, !2807, !690, !7, !2851, !9, !606, !2853, !475, !2855, !2858, !2861}
!2764 = !DISubroutineType(types: !2765)
!2765 = !{!2766, !115, !55}
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !2768, line: 79, size: 33216, elements: !2769)
!2768 = !DIFile(filename: "lib/randread.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2769 = !{!2770, !2805, !2809, !2810}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2767, file: !2768, line: 83, baseType: !2771, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2773)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2774)
!2774 = !{!2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2773, file: !4, line: 51, baseType: !7, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2773, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2773, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2773, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2773, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2773, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2773, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2773, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2773, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2773, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2773, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2773, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2773, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2773, file: !4, line: 70, baseType: !2789, size: 64, offset: 832)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2773, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2773, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2773, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2773, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2773, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2773, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2773, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2773, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2773, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2773, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2773, file: !4, line: 93, baseType: !2789, size: 64, offset: 1344)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2773, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2773, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2773, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2773, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2767, file: !2768, line: 90, baseType: !2806, size: 64, offset: 64)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{null, !425}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "handler_arg", scope: !2767, file: !2768, line: 91, baseType: !425, size: 64, offset: 128)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2767, file: !2768, line: 117, baseType: !2811, size: 33024, offset: 192)
!2811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2768, line: 96, size: 33024, elements: !2812)
!2812 = !{!2813, !2817}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2811, file: !2768, line: 99, baseType: !2814, size: 32768)
!2814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32768, elements: !2815)
!2815 = !{!2816}
!2816 = !DISubrange(count: 4096)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "isaac", scope: !2811, file: !2768, line: 116, baseType: !2818, size: 33024)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac", file: !2768, line: 102, size: 33024, elements: !2819)
!2819 = !{!2820, !2821, !2833}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !2818, file: !2768, line: 105, baseType: !55, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2818, file: !2768, line: 108, baseType: !2822, size: 16576, offset: 64)
!2822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2823, line: 56, size: 16576, elements: !2824)
!2823 = !DIFile(filename: "./lib/rand-isaac.h", directory: "/home/mbarbar/software/coreutils-8.31")
!2824 = !{!2825, !2830, !2831, !2832}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2822, file: !2823, line: 58, baseType: !2826, size: 16384)
!2826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2827, size: 16384, elements: !560)
!2827 = !DIDerivedType(tag: DW_TAG_typedef, name: "isaac_word", file: !2823, line: 44, baseType: !2828)
!2828 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !457, line: 52, baseType: !2829)
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least64_t", file: !30, line: 59, baseType: !1556)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2822, file: !2823, line: 59, baseType: !2827, size: 64, offset: 16384)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2822, file: !2823, line: 59, baseType: !2827, size: 64, offset: 16448)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2822, file: !2823, line: 59, baseType: !2827, size: 64, offset: 16512)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2818, file: !2768, line: 115, baseType: !2834, size: 16384, offset: 16640)
!2834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2768, line: 111, size: 16384, elements: !2835)
!2835 = !{!2836, !2837}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2834, file: !2768, line: 113, baseType: !2826, size: 16384)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2834, file: !2768, line: 114, baseType: !2838, size: 16384)
!2838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 16384, elements: !2839)
!2839 = !{!2840}
!2840 = !DISubrange(count: 2048)
!2841 = !DISubroutineType(types: !2842)
!2842 = !{null, !2766, !2806}
!2843 = !DISubroutineType(types: !2844)
!2844 = !{null, !2766, !425}
!2845 = !DISubroutineType(types: !2846)
!2846 = !{null, !2766, !53, !55}
!2847 = !DISubroutineType(types: !2848)
!2848 = !{!7, !2766}
!2849 = !DISubroutineType(types: !2850)
!2850 = !{!2766, !2771, !425}
!2851 = !DISubroutineType(types: !2852)
!2852 = !{null, !53, !55, !55}
!2853 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !161, line: 97, baseType: !2854)
!2854 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !30, line: 154, baseType: !7)
!2855 = !DISubroutineType(types: !2856)
!2856 = !{null, !2766, !2857, !55}
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{null, !2860, !53, !55}
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 64)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!2862 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2863, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2864, nameTableKind: None)
!2863 = !DIFile(filename: "./lib/rand-isaac.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2864 = !{!2827, !2865, !2861, !2874, !7, !2826, !2876, !425, !115, !2878, !2879, !2880}
!2865 = !DISubroutineType(types: !2866)
!2866 = !{null, !2867, !2861}
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2823, line: 56, size: 16576, elements: !2869)
!2869 = !{!2870, !2871, !2872, !2873}
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2868, file: !2823, line: 58, baseType: !2826, size: 16384)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2868, file: !2823, line: 59, baseType: !2827, size: 64, offset: 16384)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2868, file: !2823, line: 59, baseType: !2827, size: 64, offset: 16448)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2868, file: !2823, line: 59, baseType: !2827, size: 64, offset: 16512)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{null, !2867}
!2876 = !DISubroutineType(types: !2877)
!2877 = !{!2827, !2878, !2827}
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64)
!2879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2827)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{!2827, !2827}
!2882 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2883, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2884, nameTableKind: None)
!2883 = !DIFile(filename: "./lib/dup-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2884 = !{!1827}
!2885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2886, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2887, nameTableKind: None)
!2886 = !DIFile(filename: "./lib/xsize.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2887 = !{!2888, !55, !1600, !2890}
!2888 = !DISubroutineType(types: !2889)
!2889 = !{!55, !55, !55}
!2890 = !DISubroutineType(types: !2891)
!2891 = !{!55, !55, !55, !55, !55}
!2892 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2893, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2894, nameTableKind: None)
!2893 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2894 = !{!2895, !7}
!2895 = !DISubroutineType(types: !2896)
!2896 = !{!7, !2897}
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2899)
!2899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2900)
!2900 = !{!2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930}
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2899, file: !4, line: 51, baseType: !7, size: 32)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2899, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2899, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2899, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2899, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2899, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2899, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2899, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2899, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2899, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2899, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2899, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2899, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2899, file: !4, line: 70, baseType: !2915, size: 64, offset: 832)
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 64)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2899, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2899, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2899, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2899, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2899, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2899, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2899, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2899, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2899, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2899, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2899, file: !4, line: 93, baseType: !2915, size: 64, offset: 1344)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2899, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2899, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2899, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2899, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2931 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2932, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2933, nameTableKind: None)
!2932 = !DIFile(filename: "./lib/acl-errno-valid.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2933 = !{!307}
!2934 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2935, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2936, nameTableKind: None)
!2935 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2936 = !{!307, !1827}
!2937 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2938, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2939, nameTableKind: None)
!2938 = !DIFile(filename: "./lib/fopen-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2939 = !{!2940, !2942, !7}
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!2942, !115, !115}
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2944)
!2944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2945)
!2945 = !{!2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2944, file: !4, line: 51, baseType: !7, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2944, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2944, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2944, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2944, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2944, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2944, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2944, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2944, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2944, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2944, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2944, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2944, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2944, file: !4, line: 70, baseType: !2960, size: 64, offset: 832)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2944, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2944, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2944, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2944, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2944, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2944, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2944, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2944, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2944, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2944, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2944, file: !4, line: 93, baseType: !2960, size: 64, offset: 1344)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2944, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2944, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2944, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2944, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2976 = !{!"clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)"}
!2977 = !{i32 2, !"ctir", i32 1}
!2978 = !{i32 2, !"Dwarf Version", i32 4}
!2979 = !{i32 2, !"Debug Info Version", i32 3}
!2980 = !{i32 1, !"wchar_size", i32 4}
!2981 = distinct !DISubprogram(name: "usage", scope: !66, file: !66, line: 286, type: !113, scopeLine: 287, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !143)
!2982 = !{!2983, !2983, i64 0}
!2983 = !{!"int", !2984, i64 0}
!2984 = !{!"omnipotent char", !2985, i64 0}
!2985 = !{!"Simple C/C++ TBAA"}
!2986 = !DILocalVariable(name: "status", arg: 1, scope: !2981, file: !66, line: 286, type: !7)
!2987 = !DILocation(line: 286, column: 12, scope: !2981)
!2988 = !DILocation(line: 288, column: 7, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2981, file: !66, line: 288, column: 7)
!2990 = !DILocation(line: 288, column: 14, scope: !2989)
!2991 = !DILocation(line: 288, column: 7, scope: !2981)
!2992 = !DILocation(line: 289, column: 5, scope: !2989)
!2993 = !DILocation(line: 289, column: 5, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2989, file: !66, line: 289, column: 5)
!2995 = !{!2996, !2996, i64 0}
!2996 = !{!"any pointer", !2984, i64 0}
!2997 = !DILocation(line: 292, column: 15, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2989, file: !66, line: 291, column: 5)
!2999 = !DILocation(line: 297, column: 15, scope: !2998)
!3000 = !DILocation(line: 297, column: 29, scope: !2998)
!3001 = !DILocation(line: 297, column: 43, scope: !2998)
!3002 = !DILocation(line: 292, column: 7, scope: !2998)
!3003 = !DILocation(line: 298, column: 7, scope: !2998)
!3004 = !DILocation(line: 302, column: 7, scope: !2998)
!3005 = !DILocation(line: 304, column: 7, scope: !2998)
!3006 = !DILocation(line: 313, column: 7, scope: !2998)
!3007 = !DILocation(line: 318, column: 7, scope: !2998)
!3008 = !DILocation(line: 328, column: 7, scope: !2998)
!3009 = !DILocation(line: 329, column: 7, scope: !2998)
!3010 = !DILocation(line: 330, column: 7, scope: !2998)
!3011 = !DILocation(line: 331, column: 7, scope: !2998)
!3012 = !DILocation(line: 333, column: 9, scope: !2981)
!3013 = !DILocation(line: 333, column: 3, scope: !2981)
!3014 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !141, file: !141, line: 585, type: !134, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!3015 = !DILocation(line: 587, column: 3, scope: !3014)
!3016 = !DILocation(line: 590, column: 1, scope: !3014)
!3017 = distinct !DISubprogram(name: "emit_backup_suffix_note", scope: !141, file: !141, line: 613, type: !134, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!3018 = !DILocation(line: 615, column: 3, scope: !3017)
!3019 = !DILocation(line: 622, column: 3, scope: !3017)
!3020 = !DILocation(line: 628, column: 1, scope: !3017)
!3021 = !DILocalVariable(name: "program", arg: 1, scope: !142, file: !141, line: 631, type: !115)
!3022 = !DILocation(line: 631, column: 34, scope: !142)
!3023 = !DILocalVariable(name: "infomap", scope: !142, file: !141, line: 633, type: !138)
!3024 = !DILocation(line: 633, column: 67, scope: !142)
!3025 = !DILocalVariable(name: "node", scope: !142, file: !141, line: 643, type: !115)
!3026 = !DILocation(line: 643, column: 15, scope: !142)
!3027 = !DILocation(line: 643, column: 22, scope: !142)
!3028 = !DILocalVariable(name: "map_prog", scope: !142, file: !141, line: 644, type: !149)
!3029 = !DILocation(line: 644, column: 25, scope: !142)
!3030 = !DILocation(line: 644, column: 36, scope: !142)
!3031 = !DILocation(line: 646, column: 3, scope: !142)
!3032 = !DILocation(line: 646, column: 10, scope: !142)
!3033 = !DILocation(line: 646, column: 20, scope: !142)
!3034 = !{!3035, !2996, i64 0}
!3035 = !{!"infomap", !2996, i64 0, !2996, i64 8}
!3036 = !DILocation(line: 646, column: 28, scope: !142)
!3037 = !DILocation(line: 646, column: 33, scope: !142)
!3038 = !DILocation(line: 646, column: 31, scope: !142)
!3039 = !DILocation(line: 0, scope: !142)
!3040 = !DILocation(line: 647, column: 13, scope: !142)
!3041 = distinct !{!3041, !3031, !3040}
!3042 = !DILocation(line: 649, column: 7, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !142, file: !141, line: 649, column: 7)
!3044 = !DILocation(line: 649, column: 17, scope: !3043)
!3045 = !{!3035, !2996, i64 8}
!3046 = !DILocation(line: 649, column: 7, scope: !142)
!3047 = !DILocation(line: 650, column: 12, scope: !3043)
!3048 = !DILocation(line: 650, column: 22, scope: !3043)
!3049 = !DILocation(line: 650, column: 10, scope: !3043)
!3050 = !DILocation(line: 650, column: 5, scope: !3043)
!3051 = !DILocation(line: 652, column: 11, scope: !142)
!3052 = !DILocation(line: 652, column: 3, scope: !142)
!3053 = !DILocalVariable(name: "lc_messages", scope: !142, file: !141, line: 656, type: !115)
!3054 = !DILocation(line: 656, column: 15, scope: !142)
!3055 = !DILocation(line: 656, column: 29, scope: !142)
!3056 = !DILocation(line: 657, column: 7, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !142, file: !141, line: 657, column: 7)
!3058 = !DILocation(line: 657, column: 19, scope: !3057)
!3059 = !DILocation(line: 657, column: 22, scope: !3057)
!3060 = !DILocation(line: 657, column: 7, scope: !142)
!3061 = !DILocation(line: 663, column: 7, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3057, file: !141, line: 658, column: 5)
!3063 = !DILocation(line: 665, column: 5, scope: !3062)
!3064 = !DILocation(line: 666, column: 11, scope: !142)
!3065 = !DILocation(line: 667, column: 24, scope: !142)
!3066 = !DILocation(line: 666, column: 3, scope: !142)
!3067 = !DILocation(line: 668, column: 11, scope: !142)
!3068 = !DILocation(line: 669, column: 11, scope: !142)
!3069 = !DILocation(line: 669, column: 17, scope: !142)
!3070 = !DILocation(line: 669, column: 25, scope: !142)
!3071 = !DILocation(line: 669, column: 22, scope: !142)
!3072 = !DILocation(line: 668, column: 3, scope: !142)
!3073 = !DILocation(line: 670, column: 1, scope: !142)
!3074 = distinct !DISubprogram(name: "main", scope: !66, file: !66, line: 337, type: !117, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !143)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !3076)
!3076 = !{!3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3093, !3094, !3095}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3075, file: !318, line: 48, baseType: !231, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3075, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3075, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3075, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3075, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3075, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3075, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3075, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3075, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3075, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3075, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3075, file: !318, line: 91, baseType: !3089, size: 128, offset: 576)
!3089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !3090)
!3090 = !{!3091, !3092}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3089, file: !338, line: 11, baseType: !341, size: 64)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3089, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3075, file: !318, line: 92, baseType: !3089, size: 128, offset: 704)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3075, file: !318, line: 93, baseType: !3089, size: 128, offset: 832)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3075, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!3096 = !DILocalVariable(name: "argc", arg: 1, scope: !3074, file: !66, line: 337, type: !7)
!3097 = !DILocation(line: 337, column: 11, scope: !3074)
!3098 = !DILocalVariable(name: "argv", arg: 2, scope: !3074, file: !66, line: 337, type: !119)
!3099 = !DILocation(line: 337, column: 24, scope: !3074)
!3100 = !DILocalVariable(name: "c", scope: !3074, file: !66, line: 339, type: !7)
!3101 = !DILocation(line: 339, column: 7, scope: !3074)
!3102 = !DILocalVariable(name: "ok", scope: !3074, file: !66, line: 340, type: !120)
!3103 = !DILocation(line: 340, column: 8, scope: !3074)
!3104 = !DILocalVariable(name: "make_backups", scope: !3074, file: !66, line: 341, type: !120)
!3105 = !DILocation(line: 341, column: 8, scope: !3074)
!3106 = !{!3107, !3107, i64 0}
!3107 = !{!"_Bool", !2984, i64 0}
!3108 = !DILocalVariable(name: "backup_suffix", scope: !3074, file: !66, line: 342, type: !115)
!3109 = !DILocation(line: 342, column: 15, scope: !3074)
!3110 = !DILocalVariable(name: "version_control_string", scope: !3074, file: !66, line: 343, type: !9)
!3111 = !DILocation(line: 343, column: 9, scope: !3074)
!3112 = !DILocalVariable(name: "x", scope: !3074, file: !66, line: 344, type: !153)
!3113 = !DILocation(line: 344, column: 21, scope: !3074)
!3114 = !DILocalVariable(name: "target_directory", scope: !3074, file: !66, line: 345, type: !9)
!3115 = !DILocation(line: 345, column: 9, scope: !3074)
!3116 = !DILocalVariable(name: "no_target_directory", scope: !3074, file: !66, line: 346, type: !120)
!3117 = !DILocation(line: 346, column: 8, scope: !3074)
!3118 = !DILocalVariable(name: "n_files", scope: !3074, file: !66, line: 347, type: !7)
!3119 = !DILocation(line: 347, column: 7, scope: !3074)
!3120 = !DILocalVariable(name: "file", scope: !3074, file: !66, line: 348, type: !119)
!3121 = !DILocation(line: 348, column: 10, scope: !3074)
!3122 = !DILocalVariable(name: "selinux_enabled", scope: !3074, file: !66, line: 349, type: !120)
!3123 = !DILocation(line: 349, column: 8, scope: !3074)
!3124 = !DILocation(line: 352, column: 21, scope: !3074)
!3125 = !DILocation(line: 352, column: 3, scope: !3074)
!3126 = !DILocation(line: 353, column: 3, scope: !3074)
!3127 = !DILocation(line: 354, column: 3, scope: !3074)
!3128 = !DILocation(line: 355, column: 3, scope: !3074)
!3129 = !DILocation(line: 357, column: 3, scope: !3074)
!3130 = !DILocation(line: 359, column: 3, scope: !3074)
!3131 = !DILocation(line: 362, column: 3, scope: !3074)
!3132 = !DILocation(line: 364, column: 3, scope: !3074)
!3133 = !DILocation(line: 364, column: 28, scope: !3074)
!3134 = !DILocation(line: 364, column: 34, scope: !3074)
!3135 = !DILocation(line: 364, column: 15, scope: !3074)
!3136 = !DILocation(line: 364, column: 13, scope: !3074)
!3137 = !DILocation(line: 365, column: 10, scope: !3074)
!3138 = !DILocation(line: 367, column: 15, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3074, file: !66, line: 366, column: 5)
!3140 = !DILocation(line: 367, column: 7, scope: !3139)
!3141 = !DILocation(line: 370, column: 24, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3139, file: !66, line: 368, column: 9)
!3143 = !DILocation(line: 371, column: 15, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3142, file: !66, line: 371, column: 15)
!3145 = !DILocation(line: 371, column: 15, scope: !3142)
!3146 = !DILocation(line: 372, column: 38, scope: !3144)
!3147 = !DILocation(line: 372, column: 36, scope: !3144)
!3148 = !DILocation(line: 372, column: 13, scope: !3144)
!3149 = !DILocation(line: 373, column: 11, scope: !3142)
!3150 = !DILocation(line: 375, column: 13, scope: !3142)
!3151 = !DILocation(line: 375, column: 25, scope: !3142)
!3152 = !{!3153, !2984, i64 8}
!3153 = !{!"cp_options", !2984, i64 0, !2984, i64 4, !2984, i64 8, !2984, i64 12, !2983, i64 16, !3107, i64 20, !3107, i64 21, !3107, i64 22, !3107, i64 23, !3107, i64 24, !3107, i64 25, !3107, i64 26, !3107, i64 27, !3107, i64 28, !3107, i64 29, !3107, i64 30, !3107, i64 31, !3107, i64 32, !3107, i64 33, !3107, i64 34, !3107, i64 35, !3107, i64 36, !3107, i64 37, !3107, i64 38, !3107, i64 39, !3107, i64 40, !3107, i64 41, !3107, i64 42, !3107, i64 43, !3107, i64 44, !3107, i64 45, !3107, i64 46, !3107, i64 47, !3107, i64 48, !3107, i64 49, !2983, i64 52, !2984, i64 56, !2996, i64 64, !2996, i64 72}
!3154 = !DILocation(line: 376, column: 11, scope: !3142)
!3155 = !DILocation(line: 378, column: 13, scope: !3142)
!3156 = !DILocation(line: 378, column: 25, scope: !3142)
!3157 = !DILocation(line: 379, column: 11, scope: !3142)
!3158 = !DILocation(line: 381, column: 13, scope: !3142)
!3159 = !DILocation(line: 381, column: 25, scope: !3142)
!3160 = !DILocation(line: 382, column: 11, scope: !3142)
!3161 = !DILocation(line: 384, column: 35, scope: !3142)
!3162 = !DILocation(line: 385, column: 11, scope: !3142)
!3163 = !DILocation(line: 387, column: 15, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3142, file: !66, line: 387, column: 15)
!3165 = !DILocation(line: 387, column: 15, scope: !3142)
!3166 = !DILocation(line: 388, column: 13, scope: !3164)
!3167 = !DILocalVariable(name: "st", scope: !3168, file: !66, line: 391, type: !3075)
!3168 = distinct !DILexicalBlock(scope: !3164, file: !66, line: 390, column: 13)
!3169 = !DILocation(line: 391, column: 27, scope: !3168)
!3170 = !DILocation(line: 392, column: 25, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3168, file: !66, line: 392, column: 19)
!3172 = !DILocation(line: 392, column: 19, scope: !3171)
!3173 = !DILocation(line: 392, column: 38, scope: !3171)
!3174 = !DILocation(line: 392, column: 19, scope: !3168)
!3175 = !DILocation(line: 393, column: 17, scope: !3171)
!3176 = !DILocation(line: 395, column: 21, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3168, file: !66, line: 395, column: 19)
!3178 = !{!3179, !2983, i64 24}
!3179 = !{!"stat", !3180, i64 0, !3180, i64 8, !3180, i64 16, !2983, i64 24, !2983, i64 28, !2983, i64 32, !2983, i64 36, !3180, i64 40, !3180, i64 48, !3180, i64 56, !3180, i64 64, !3181, i64 72, !3181, i64 88, !3181, i64 104, !2984, i64 120}
!3180 = !{!"long", !2984, i64 0}
!3181 = !{!"timespec", !3180, i64 0, !3180, i64 8}
!3182 = !DILocation(line: 395, column: 19, scope: !3168)
!3183 = !DILocation(line: 396, column: 17, scope: !3177)
!3184 = !DILocation(line: 399, column: 30, scope: !3142)
!3185 = !DILocation(line: 399, column: 28, scope: !3142)
!3186 = !DILocation(line: 400, column: 11, scope: !3142)
!3187 = !DILocation(line: 402, column: 31, scope: !3142)
!3188 = !DILocation(line: 403, column: 11, scope: !3142)
!3189 = !DILocation(line: 405, column: 13, scope: !3142)
!3190 = !DILocation(line: 405, column: 20, scope: !3142)
!3191 = !{!3153, !3107, i64 45}
!3192 = !DILocation(line: 406, column: 11, scope: !3142)
!3193 = !DILocation(line: 408, column: 13, scope: !3142)
!3194 = !DILocation(line: 408, column: 21, scope: !3142)
!3195 = !{!3153, !3107, i64 46}
!3196 = !DILocation(line: 409, column: 11, scope: !3142)
!3197 = !DILocation(line: 411, column: 24, scope: !3142)
!3198 = !DILocation(line: 412, column: 27, scope: !3142)
!3199 = !DILocation(line: 412, column: 25, scope: !3142)
!3200 = !DILocation(line: 413, column: 11, scope: !3142)
!3201 = !DILocation(line: 417, column: 15, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3142, file: !66, line: 417, column: 15)
!3203 = !DILocation(line: 417, column: 15, scope: !3142)
!3204 = !DILocation(line: 419, column: 17, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3202, file: !66, line: 418, column: 13)
!3206 = !DILocation(line: 419, column: 43, scope: !3205)
!3207 = !{!3153, !3107, i64 37}
!3208 = !DILocation(line: 420, column: 17, scope: !3205)
!3209 = !DILocation(line: 420, column: 38, scope: !3205)
!3210 = !{!3153, !3107, i64 33}
!3211 = !DILocation(line: 421, column: 13, scope: !3205)
!3212 = !DILocation(line: 422, column: 11, scope: !3142)
!3213 = !DILocation(line: 423, column: 9, scope: !3142)
!3214 = !DILocation(line: 424, column: 9, scope: !3142)
!3215 = !DILocation(line: 426, column: 11, scope: !3142)
!3216 = distinct !{!3216, !3132, !3217}
!3217 = !DILocation(line: 428, column: 5, scope: !3074)
!3218 = !DILocation(line: 430, column: 13, scope: !3074)
!3219 = !DILocation(line: 430, column: 20, scope: !3074)
!3220 = !DILocation(line: 430, column: 18, scope: !3074)
!3221 = !DILocation(line: 430, column: 11, scope: !3074)
!3222 = !DILocation(line: 431, column: 10, scope: !3074)
!3223 = !DILocation(line: 431, column: 17, scope: !3074)
!3224 = !DILocation(line: 431, column: 15, scope: !3074)
!3225 = !DILocation(line: 431, column: 8, scope: !3074)
!3226 = !DILocation(line: 433, column: 7, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3074, file: !66, line: 433, column: 7)
!3228 = !DILocation(line: 433, column: 19, scope: !3227)
!3229 = !DILocation(line: 433, column: 18, scope: !3227)
!3230 = !DILocation(line: 433, column: 15, scope: !3227)
!3231 = !DILocation(line: 433, column: 7, scope: !3074)
!3232 = !DILocation(line: 435, column: 11, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3234, file: !66, line: 435, column: 11)
!3234 = distinct !DILexicalBlock(scope: !3227, file: !66, line: 434, column: 5)
!3235 = !DILocation(line: 435, column: 19, scope: !3233)
!3236 = !DILocation(line: 435, column: 11, scope: !3234)
!3237 = !DILocation(line: 436, column: 22, scope: !3233)
!3238 = !DILocation(line: 436, column: 9, scope: !3233)
!3239 = !DILocation(line: 438, column: 22, scope: !3233)
!3240 = !DILocation(line: 439, column: 16, scope: !3233)
!3241 = !DILocation(line: 438, column: 9, scope: !3233)
!3242 = !DILocation(line: 440, column: 7, scope: !3234)
!3243 = !DILocation(line: 443, column: 7, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3074, file: !66, line: 443, column: 7)
!3245 = !DILocation(line: 443, column: 7, scope: !3074)
!3246 = !DILocation(line: 445, column: 11, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3248, file: !66, line: 445, column: 11)
!3248 = distinct !DILexicalBlock(scope: !3244, file: !66, line: 444, column: 5)
!3249 = !DILocation(line: 445, column: 11, scope: !3248)
!3250 = !DILocation(line: 446, column: 9, scope: !3247)
!3251 = !DILocation(line: 449, column: 15, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3248, file: !66, line: 449, column: 11)
!3253 = !DILocation(line: 449, column: 13, scope: !3252)
!3254 = !DILocation(line: 449, column: 11, scope: !3248)
!3255 = !DILocation(line: 451, column: 24, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3252, file: !66, line: 450, column: 9)
!3257 = !DILocation(line: 451, column: 47, scope: !3256)
!3258 = !DILocation(line: 451, column: 11, scope: !3256)
!3259 = !DILocation(line: 452, column: 11, scope: !3256)
!3260 = !DILocation(line: 454, column: 5, scope: !3248)
!3261 = !DILocation(line: 455, column: 13, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3244, file: !66, line: 455, column: 12)
!3263 = !DILocation(line: 455, column: 12, scope: !3244)
!3264 = !DILocation(line: 457, column: 7, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3266, file: !66, line: 457, column: 7)
!3266 = distinct !DILexicalBlock(scope: !3267, file: !66, line: 457, column: 7)
!3267 = distinct !DILexicalBlock(scope: !3262, file: !66, line: 456, column: 5)
!3268 = !DILocation(line: 457, column: 7, scope: !3266)
!3269 = !DILocation(line: 458, column: 11, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3267, file: !66, line: 458, column: 11)
!3271 = !DILocation(line: 458, column: 19, scope: !3270)
!3272 = !DILocation(line: 458, column: 11, scope: !3267)
!3273 = !DILocation(line: 459, column: 48, scope: !3270)
!3274 = !DILocation(line: 459, column: 67, scope: !3270)
!3275 = !DILocation(line: 459, column: 27, scope: !3270)
!3276 = !DILocation(line: 461, column: 29, scope: !3270)
!3277 = !DILocation(line: 459, column: 11, scope: !3270)
!3278 = !DILocation(line: 459, column: 24, scope: !3270)
!3279 = !{!3153, !2983, i64 52}
!3280 = !DILocation(line: 459, column: 9, scope: !3270)
!3281 = !DILocation(line: 462, column: 13, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3267, file: !66, line: 462, column: 11)
!3283 = !DILocation(line: 462, column: 26, scope: !3282)
!3284 = !DILocation(line: 462, column: 31, scope: !3282)
!3285 = !DILocation(line: 462, column: 60, scope: !3282)
!3286 = !DILocation(line: 462, column: 65, scope: !3282)
!3287 = !DILocation(line: 462, column: 73, scope: !3282)
!3288 = !DILocation(line: 462, column: 34, scope: !3282)
!3289 = !DILocation(line: 462, column: 11, scope: !3267)
!3290 = !DILocation(line: 464, column: 13, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3282, file: !66, line: 463, column: 9)
!3292 = !DILocation(line: 464, column: 26, scope: !3291)
!3293 = !DILocation(line: 465, column: 30, scope: !3291)
!3294 = !DILocation(line: 465, column: 35, scope: !3291)
!3295 = !DILocation(line: 465, column: 28, scope: !3291)
!3296 = !DILocation(line: 466, column: 9, scope: !3291)
!3297 = !DILocation(line: 467, column: 20, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3282, file: !66, line: 467, column: 16)
!3299 = !DILocation(line: 467, column: 18, scope: !3298)
!3300 = !DILocation(line: 467, column: 16, scope: !3282)
!3301 = !DILocation(line: 468, column: 9, scope: !3298)
!3302 = !DILocation(line: 470, column: 5, scope: !3267)
!3303 = !DILocation(line: 472, column: 9, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3074, file: !66, line: 472, column: 7)
!3305 = !DILocation(line: 472, column: 21, scope: !3304)
!3306 = !DILocation(line: 472, column: 7, scope: !3074)
!3307 = !DILocation(line: 473, column: 7, scope: !3304)
!3308 = !DILocation(line: 473, column: 14, scope: !3304)
!3309 = !DILocation(line: 473, column: 5, scope: !3304)
!3310 = !DILocation(line: 475, column: 7, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3074, file: !66, line: 475, column: 7)
!3312 = !DILocation(line: 475, column: 20, scope: !3311)
!3313 = !DILocation(line: 475, column: 25, scope: !3311)
!3314 = !DILocation(line: 475, column: 37, scope: !3311)
!3315 = !DILocation(line: 475, column: 7, scope: !3074)
!3316 = !DILocation(line: 478, column: 14, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3311, file: !66, line: 476, column: 5)
!3318 = !DILocation(line: 477, column: 7, scope: !3317)
!3319 = !DILocation(line: 479, column: 7, scope: !3317)
!3320 = !DILocation(line: 482, column: 20, scope: !3074)
!3321 = !DILocation(line: 483, column: 36, scope: !3074)
!3322 = !DILocation(line: 484, column: 36, scope: !3074)
!3323 = !DILocation(line: 483, column: 22, scope: !3074)
!3324 = !DILocation(line: 482, column: 5, scope: !3074)
!3325 = !DILocation(line: 482, column: 17, scope: !3074)
!3326 = !{!3153, !2984, i64 0}
!3327 = !DILocation(line: 486, column: 29, scope: !3074)
!3328 = !DILocation(line: 486, column: 3, scope: !3074)
!3329 = !DILocation(line: 488, column: 3, scope: !3074)
!3330 = !DILocation(line: 490, column: 7, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3074, file: !66, line: 490, column: 7)
!3332 = !DILocation(line: 490, column: 7, scope: !3074)
!3333 = !DILocation(line: 495, column: 16, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3335, file: !66, line: 495, column: 11)
!3335 = distinct !DILexicalBlock(scope: !3331, file: !66, line: 491, column: 5)
!3336 = !DILocation(line: 495, column: 13, scope: !3334)
!3337 = !DILocation(line: 495, column: 11, scope: !3335)
!3338 = !DILocation(line: 496, column: 9, scope: !3334)
!3339 = !DILocation(line: 498, column: 10, scope: !3335)
!3340 = !DILocalVariable(name: "i", scope: !3341, file: !66, line: 499, type: !7)
!3341 = distinct !DILexicalBlock(scope: !3335, file: !66, line: 499, column: 7)
!3342 = !DILocation(line: 499, column: 16, scope: !3341)
!3343 = !DILocation(line: 499, column: 12, scope: !3341)
!3344 = !DILocation(line: 499, column: 23, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3341, file: !66, line: 499, column: 7)
!3346 = !DILocation(line: 499, column: 27, scope: !3345)
!3347 = !DILocation(line: 499, column: 25, scope: !3345)
!3348 = !DILocation(line: 499, column: 7, scope: !3341)
!3349 = !DILocation(line: 501, column: 25, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3345, file: !66, line: 500, column: 9)
!3351 = !DILocation(line: 501, column: 27, scope: !3350)
!3352 = !DILocation(line: 501, column: 34, scope: !3350)
!3353 = !DILocation(line: 501, column: 31, scope: !3350)
!3354 = !DILocation(line: 501, column: 13, scope: !3350)
!3355 = !DILocation(line: 501, column: 23, scope: !3350)
!3356 = !{!3153, !3107, i64 49}
!3357 = !DILocation(line: 502, column: 27, scope: !3350)
!3358 = !DILocation(line: 502, column: 32, scope: !3350)
!3359 = !DILocation(line: 502, column: 36, scope: !3350)
!3360 = !DILocation(line: 502, column: 17, scope: !3350)
!3361 = !DILocation(line: 502, column: 14, scope: !3350)
!3362 = !DILocation(line: 503, column: 9, scope: !3350)
!3363 = !DILocation(line: 499, column: 36, scope: !3345)
!3364 = !DILocation(line: 499, column: 7, scope: !3345)
!3365 = distinct !{!3365, !3348, !3366}
!3366 = !DILocation(line: 503, column: 9, scope: !3341)
!3367 = !DILocation(line: 504, column: 5, scope: !3335)
!3368 = !DILocation(line: 507, column: 9, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3331, file: !66, line: 506, column: 5)
!3370 = !DILocation(line: 507, column: 19, scope: !3369)
!3371 = !DILocation(line: 508, column: 22, scope: !3369)
!3372 = !DILocation(line: 508, column: 31, scope: !3369)
!3373 = !DILocation(line: 508, column: 12, scope: !3369)
!3374 = !DILocation(line: 508, column: 10, scope: !3369)
!3375 = !DILocation(line: 511, column: 10, scope: !3074)
!3376 = !DILocation(line: 511, column: 3, scope: !3074)
!3377 = distinct !DISubprogram(name: "cp_option_init", scope: !66, file: !66, line: 107, type: !150, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!3378 = !DILocalVariable(name: "x", arg: 1, scope: !3377, file: !66, line: 107, type: !152)
!3379 = !DILocation(line: 107, column: 36, scope: !3377)
!3380 = !DILocalVariable(name: "selinux_enabled", scope: !3377, file: !66, line: 109, type: !120)
!3381 = !DILocation(line: 109, column: 8, scope: !3377)
!3382 = !DILocation(line: 111, column: 23, scope: !3377)
!3383 = !DILocation(line: 111, column: 3, scope: !3377)
!3384 = !DILocation(line: 112, column: 3, scope: !3377)
!3385 = !DILocation(line: 112, column: 6, scope: !3377)
!3386 = !DILocation(line: 112, column: 22, scope: !3377)
!3387 = !{!3153, !3107, i64 20}
!3388 = !DILocation(line: 113, column: 3, scope: !3377)
!3389 = !DILocation(line: 113, column: 6, scope: !3377)
!3390 = !DILocation(line: 113, column: 19, scope: !3377)
!3391 = !{!3153, !2984, i64 56}
!3392 = !DILocation(line: 114, column: 3, scope: !3377)
!3393 = !DILocation(line: 114, column: 6, scope: !3377)
!3394 = !DILocation(line: 114, column: 18, scope: !3377)
!3395 = !{!3153, !2984, i64 4}
!3396 = !DILocation(line: 115, column: 3, scope: !3377)
!3397 = !DILocation(line: 115, column: 6, scope: !3377)
!3398 = !DILocation(line: 115, column: 33, scope: !3377)
!3399 = !{!3153, !3107, i64 21}
!3400 = !DILocation(line: 116, column: 3, scope: !3377)
!3401 = !DILocation(line: 116, column: 6, scope: !3377)
!3402 = !DILocation(line: 116, column: 36, scope: !3377)
!3403 = !{!3153, !3107, i64 22}
!3404 = !DILocation(line: 117, column: 3, scope: !3377)
!3405 = !DILocation(line: 117, column: 6, scope: !3377)
!3406 = !DILocation(line: 117, column: 16, scope: !3377)
!3407 = !{!3153, !3107, i64 23}
!3408 = !DILocation(line: 118, column: 3, scope: !3377)
!3409 = !DILocation(line: 118, column: 6, scope: !3377)
!3410 = !DILocation(line: 118, column: 18, scope: !3377)
!3411 = !DILocation(line: 119, column: 3, scope: !3377)
!3412 = !DILocation(line: 119, column: 6, scope: !3377)
!3413 = !DILocation(line: 119, column: 16, scope: !3377)
!3414 = !{!3153, !3107, i64 24}
!3415 = !DILocation(line: 120, column: 3, scope: !3377)
!3416 = !DILocation(line: 120, column: 6, scope: !3377)
!3417 = !DILocation(line: 120, column: 19, scope: !3377)
!3418 = !{!3153, !3107, i64 25}
!3419 = !DILocation(line: 121, column: 3, scope: !3377)
!3420 = !DILocation(line: 121, column: 6, scope: !3377)
!3421 = !DILocation(line: 121, column: 22, scope: !3377)
!3422 = !{!3153, !3107, i64 28}
!3423 = !DILocation(line: 122, column: 3, scope: !3377)
!3424 = !DILocation(line: 122, column: 6, scope: !3377)
!3425 = !DILocation(line: 122, column: 25, scope: !3377)
!3426 = !{!3153, !3107, i64 29}
!3427 = !DILocation(line: 123, column: 3, scope: !3377)
!3428 = !DILocation(line: 123, column: 6, scope: !3377)
!3429 = !DILocation(line: 123, column: 21, scope: !3377)
!3430 = !{!3153, !3107, i64 34}
!3431 = !DILocation(line: 124, column: 3, scope: !3377)
!3432 = !DILocation(line: 124, column: 6, scope: !3377)
!3433 = !DILocation(line: 124, column: 20, scope: !3377)
!3434 = !{!3153, !3107, i64 30}
!3435 = !DILocation(line: 125, column: 3, scope: !3377)
!3436 = !DILocation(line: 125, column: 6, scope: !3377)
!3437 = !DILocation(line: 125, column: 26, scope: !3377)
!3438 = !{!3153, !3107, i64 31}
!3439 = !DILocation(line: 126, column: 3, scope: !3377)
!3440 = !DILocation(line: 126, column: 6, scope: !3377)
!3441 = !DILocation(line: 126, column: 31, scope: !3377)
!3442 = !{!3153, !3107, i64 32}
!3443 = !DILocation(line: 127, column: 34, scope: !3377)
!3444 = !DILocation(line: 127, column: 3, scope: !3377)
!3445 = !DILocation(line: 127, column: 6, scope: !3377)
!3446 = !DILocation(line: 127, column: 32, scope: !3377)
!3447 = !DILocation(line: 128, column: 3, scope: !3377)
!3448 = !DILocation(line: 128, column: 6, scope: !3377)
!3449 = !DILocation(line: 128, column: 27, scope: !3377)
!3450 = !DILocation(line: 129, column: 3, scope: !3377)
!3451 = !DILocation(line: 129, column: 6, scope: !3377)
!3452 = !DILocation(line: 129, column: 25, scope: !3377)
!3453 = !{!3153, !3107, i64 41}
!3454 = !DILocation(line: 130, column: 3, scope: !3377)
!3455 = !DILocation(line: 130, column: 6, scope: !3377)
!3456 = !DILocation(line: 130, column: 25, scope: !3377)
!3457 = !{!3153, !3107, i64 35}
!3458 = !DILocation(line: 131, column: 3, scope: !3377)
!3459 = !DILocation(line: 131, column: 6, scope: !3377)
!3460 = !DILocation(line: 131, column: 23, scope: !3377)
!3461 = !{!3153, !3107, i64 36}
!3462 = !DILocation(line: 132, column: 3, scope: !3377)
!3463 = !DILocation(line: 132, column: 6, scope: !3377)
!3464 = !DILocation(line: 132, column: 31, scope: !3377)
!3465 = !{!3153, !3107, i64 38}
!3466 = !DILocation(line: 133, column: 3, scope: !3377)
!3467 = !DILocation(line: 133, column: 6, scope: !3377)
!3468 = !DILocation(line: 133, column: 21, scope: !3377)
!3469 = !{!3153, !3107, i64 39}
!3470 = !DILocation(line: 134, column: 3, scope: !3377)
!3471 = !DILocation(line: 134, column: 6, scope: !3377)
!3472 = !DILocation(line: 134, column: 29, scope: !3377)
!3473 = !{!3153, !3107, i64 40}
!3474 = !DILocation(line: 135, column: 3, scope: !3377)
!3475 = !DILocation(line: 135, column: 6, scope: !3377)
!3476 = !DILocation(line: 135, column: 16, scope: !3377)
!3477 = !{!3153, !3107, i64 42}
!3478 = !DILocation(line: 136, column: 3, scope: !3377)
!3479 = !DILocation(line: 136, column: 6, scope: !3377)
!3480 = !DILocation(line: 136, column: 18, scope: !3377)
!3481 = !{!3153, !2984, i64 12}
!3482 = !DILocation(line: 137, column: 3, scope: !3377)
!3483 = !DILocation(line: 137, column: 6, scope: !3377)
!3484 = !DILocation(line: 137, column: 20, scope: !3377)
!3485 = !{!3153, !3107, i64 44}
!3486 = !DILocation(line: 138, column: 3, scope: !3377)
!3487 = !DILocation(line: 138, column: 6, scope: !3377)
!3488 = !DILocation(line: 138, column: 15, scope: !3377)
!3489 = !{!3153, !3107, i64 43}
!3490 = !DILocation(line: 139, column: 3, scope: !3377)
!3491 = !DILocation(line: 139, column: 6, scope: !3377)
!3492 = !DILocation(line: 139, column: 11, scope: !3377)
!3493 = !{!3153, !2983, i64 16}
!3494 = !DILocation(line: 140, column: 18, scope: !3377)
!3495 = !DILocation(line: 140, column: 3, scope: !3377)
!3496 = !DILocation(line: 140, column: 6, scope: !3377)
!3497 = !DILocation(line: 140, column: 16, scope: !3377)
!3498 = !{!3153, !3107, i64 47}
!3499 = !DILocation(line: 142, column: 3, scope: !3377)
!3500 = !DILocation(line: 142, column: 6, scope: !3377)
!3501 = !DILocation(line: 142, column: 33, scope: !3377)
!3502 = !{!3153, !3107, i64 48}
!3503 = !DILocation(line: 143, column: 3, scope: !3377)
!3504 = !DILocation(line: 143, column: 6, scope: !3377)
!3505 = !DILocation(line: 143, column: 13, scope: !3377)
!3506 = !DILocation(line: 144, column: 3, scope: !3377)
!3507 = !DILocation(line: 144, column: 6, scope: !3377)
!3508 = !DILocation(line: 144, column: 14, scope: !3377)
!3509 = !DILocation(line: 145, column: 3, scope: !3377)
!3510 = !DILocation(line: 145, column: 6, scope: !3377)
!3511 = !DILocation(line: 145, column: 16, scope: !3377)
!3512 = !{!3153, !2996, i64 64}
!3513 = !DILocation(line: 146, column: 3, scope: !3377)
!3514 = !DILocation(line: 146, column: 6, scope: !3377)
!3515 = !DILocation(line: 146, column: 15, scope: !3377)
!3516 = !{!3153, !2996, i64 72}
!3517 = !DILocation(line: 147, column: 1, scope: !3377)
!3518 = distinct !DISubprogram(name: "target_directory_operand", scope: !66, file: !66, line: 154, type: !200, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!3519 = !DILocalVariable(name: "file", arg: 1, scope: !3518, file: !66, line: 154, type: !115)
!3520 = !DILocation(line: 154, column: 39, scope: !3518)
!3521 = !DILocalVariable(name: "st", scope: !3518, file: !66, line: 156, type: !3075)
!3522 = !DILocation(line: 156, column: 15, scope: !3518)
!3523 = !DILocalVariable(name: "err", scope: !3518, file: !66, line: 157, type: !7)
!3524 = !DILocation(line: 157, column: 7, scope: !3518)
!3525 = !DILocation(line: 157, column: 20, scope: !3518)
!3526 = !DILocation(line: 157, column: 14, scope: !3518)
!3527 = !DILocation(line: 157, column: 31, scope: !3518)
!3528 = !DILocation(line: 157, column: 42, scope: !3518)
!3529 = !DILocalVariable(name: "is_a_dir", scope: !3518, file: !66, line: 158, type: !120)
!3530 = !DILocation(line: 158, column: 8, scope: !3518)
!3531 = !DILocation(line: 158, column: 20, scope: !3518)
!3532 = !DILocation(line: 158, column: 24, scope: !3518)
!3533 = !DILocation(line: 158, column: 27, scope: !3518)
!3534 = !DILocation(line: 0, scope: !3518)
!3535 = !DILocation(line: 159, column: 7, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3518, file: !66, line: 159, column: 7)
!3537 = !DILocation(line: 159, column: 11, scope: !3536)
!3538 = !DILocation(line: 159, column: 14, scope: !3536)
!3539 = !DILocation(line: 159, column: 18, scope: !3536)
!3540 = !DILocation(line: 159, column: 7, scope: !3518)
!3541 = !DILocation(line: 160, column: 5, scope: !3536)
!3542 = !DILocation(line: 161, column: 10, scope: !3518)
!3543 = !DILocation(line: 161, column: 3, scope: !3518)
!3544 = distinct !DISubprogram(name: "movefile", scope: !66, file: !66, line: 253, type: !202, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!3545 = !DILocalVariable(name: "source", arg: 1, scope: !3544, file: !66, line: 253, type: !9)
!3546 = !DILocation(line: 253, column: 17, scope: !3544)
!3547 = !DILocalVariable(name: "dest", arg: 2, scope: !3544, file: !66, line: 253, type: !9)
!3548 = !DILocation(line: 253, column: 31, scope: !3544)
!3549 = !DILocalVariable(name: "dest_is_dir", arg: 3, scope: !3544, file: !66, line: 253, type: !120)
!3550 = !DILocation(line: 253, column: 42, scope: !3544)
!3551 = !DILocalVariable(name: "x", arg: 4, scope: !3544, file: !66, line: 254, type: !204)
!3552 = !DILocation(line: 254, column: 36, scope: !3544)
!3553 = !DILocalVariable(name: "ok", scope: !3544, file: !66, line: 256, type: !120)
!3554 = !DILocation(line: 256, column: 8, scope: !3544)
!3555 = !DILocation(line: 265, column: 7, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3544, file: !66, line: 265, column: 7)
!3557 = !DILocation(line: 265, column: 7, scope: !3544)
!3558 = !DILocation(line: 266, column: 29, scope: !3556)
!3559 = !DILocation(line: 266, column: 5, scope: !3556)
!3560 = !DILocation(line: 268, column: 7, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3544, file: !66, line: 268, column: 7)
!3562 = !DILocation(line: 268, column: 7, scope: !3544)
!3563 = !DILocalVariable(name: "src_basename", scope: !3564, file: !66, line: 271, type: !115)
!3564 = distinct !DILexicalBlock(scope: !3561, file: !66, line: 269, column: 5)
!3565 = !DILocation(line: 271, column: 19, scope: !3564)
!3566 = !DILocation(line: 271, column: 50, scope: !3564)
!3567 = !DILocation(line: 271, column: 34, scope: !3564)
!3568 = !DILocalVariable(name: "new_dest", scope: !3564, file: !66, line: 272, type: !9)
!3569 = !DILocation(line: 272, column: 13, scope: !3564)
!3570 = !DILocation(line: 272, column: 42, scope: !3564)
!3571 = !DILocation(line: 272, column: 48, scope: !3564)
!3572 = !DILocation(line: 272, column: 24, scope: !3564)
!3573 = !DILocation(line: 273, column: 31, scope: !3564)
!3574 = !DILocation(line: 273, column: 7, scope: !3564)
!3575 = !DILocation(line: 274, column: 21, scope: !3564)
!3576 = !DILocation(line: 274, column: 29, scope: !3564)
!3577 = !DILocation(line: 274, column: 39, scope: !3564)
!3578 = !DILocation(line: 274, column: 12, scope: !3564)
!3579 = !DILocation(line: 274, column: 10, scope: !3564)
!3580 = !DILocation(line: 275, column: 13, scope: !3564)
!3581 = !DILocation(line: 275, column: 7, scope: !3564)
!3582 = !DILocation(line: 276, column: 5, scope: !3564)
!3583 = !DILocation(line: 279, column: 21, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3561, file: !66, line: 278, column: 5)
!3585 = !DILocation(line: 279, column: 29, scope: !3584)
!3586 = !DILocation(line: 279, column: 35, scope: !3584)
!3587 = !DILocation(line: 279, column: 12, scope: !3584)
!3588 = !DILocation(line: 279, column: 10, scope: !3584)
!3589 = !DILocation(line: 282, column: 10, scope: !3544)
!3590 = !DILocation(line: 282, column: 3, scope: !3544)
!3591 = distinct !DISubprogram(name: "do_move", scope: !66, file: !66, line: 169, type: !206, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!3592 = !DILocalVariable(name: "source", arg: 1, scope: !3591, file: !66, line: 169, type: !115)
!3593 = !DILocation(line: 169, column: 22, scope: !3591)
!3594 = !DILocalVariable(name: "dest", arg: 2, scope: !3591, file: !66, line: 169, type: !115)
!3595 = !DILocation(line: 169, column: 42, scope: !3591)
!3596 = !DILocalVariable(name: "x", arg: 3, scope: !3591, file: !66, line: 169, type: !204)
!3597 = !DILocation(line: 169, column: 73, scope: !3591)
!3598 = !DILocalVariable(name: "copy_into_self", scope: !3591, file: !66, line: 171, type: !120)
!3599 = !DILocation(line: 171, column: 8, scope: !3591)
!3600 = !DILocalVariable(name: "rename_succeeded", scope: !3591, file: !66, line: 172, type: !120)
!3601 = !DILocation(line: 172, column: 8, scope: !3591)
!3602 = !DILocalVariable(name: "ok", scope: !3591, file: !66, line: 173, type: !120)
!3603 = !DILocation(line: 173, column: 8, scope: !3591)
!3604 = !DILocation(line: 173, column: 19, scope: !3591)
!3605 = !DILocation(line: 173, column: 27, scope: !3591)
!3606 = !DILocation(line: 173, column: 40, scope: !3591)
!3607 = !DILocation(line: 173, column: 13, scope: !3591)
!3608 = !DILocation(line: 175, column: 7, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3591, file: !66, line: 175, column: 7)
!3610 = !DILocation(line: 175, column: 7, scope: !3591)
!3611 = !DILocalVariable(name: "dir_to_remove", scope: !3612, file: !66, line: 177, type: !115)
!3612 = distinct !DILexicalBlock(scope: !3609, file: !66, line: 176, column: 5)
!3613 = !DILocation(line: 177, column: 19, scope: !3612)
!3614 = !DILocation(line: 178, column: 11, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3612, file: !66, line: 178, column: 11)
!3616 = !DILocation(line: 178, column: 11, scope: !3612)
!3617 = !DILocation(line: 191, column: 25, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3615, file: !66, line: 179, column: 9)
!3619 = !DILocation(line: 192, column: 14, scope: !3618)
!3620 = !DILocation(line: 193, column: 9, scope: !3618)
!3621 = !DILocation(line: 194, column: 16, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3615, file: !66, line: 194, column: 16)
!3623 = !DILocation(line: 194, column: 16, scope: !3615)
!3624 = !DILocation(line: 198, column: 25, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3622, file: !66, line: 195, column: 9)
!3626 = !DILocation(line: 199, column: 9, scope: !3625)
!3627 = !DILocation(line: 224, column: 27, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3622, file: !66, line: 201, column: 9)
!3629 = !DILocation(line: 224, column: 25, scope: !3628)
!3630 = !DILocation(line: 227, column: 11, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3612, file: !66, line: 227, column: 11)
!3632 = !DILocation(line: 227, column: 25, scope: !3631)
!3633 = !DILocation(line: 227, column: 11, scope: !3612)
!3634 = !DILocalVariable(name: "rm_options", scope: !3635, file: !66, line: 229, type: !214)
!3635 = distinct !DILexicalBlock(scope: !3631, file: !66, line: 228, column: 9)
!3636 = !DILocation(line: 229, column: 29, scope: !3635)
!3637 = !DILocalVariable(name: "status", scope: !3635, file: !66, line: 230, type: !106)
!3638 = !DILocation(line: 230, column: 26, scope: !3635)
!3639 = !DILocalVariable(name: "dir", scope: !3635, file: !66, line: 231, type: !208)
!3640 = !DILocation(line: 231, column: 23, scope: !3635)
!3641 = !DILocation(line: 233, column: 11, scope: !3635)
!3642 = !DILocation(line: 234, column: 32, scope: !3635)
!3643 = !DILocation(line: 234, column: 35, scope: !3635)
!3644 = !DILocation(line: 234, column: 22, scope: !3635)
!3645 = !DILocation(line: 234, column: 30, scope: !3635)
!3646 = !{!3647, !3107, i64 26}
!3647 = !{!"rm_options", !3107, i64 0, !2984, i64 4, !3107, i64 8, !3107, i64 9, !3107, i64 10, !2996, i64 16, !3107, i64 24, !3107, i64 25, !3107, i64 26, !3107, i64 27}
!3648 = !DILocation(line: 235, column: 20, scope: !3635)
!3649 = !DILocation(line: 235, column: 11, scope: !3635)
!3650 = !DILocation(line: 235, column: 18, scope: !3635)
!3651 = !DILocation(line: 236, column: 11, scope: !3635)
!3652 = !DILocation(line: 236, column: 18, scope: !3635)
!3653 = !DILocation(line: 238, column: 32, scope: !3635)
!3654 = !DILocation(line: 238, column: 24, scope: !3635)
!3655 = !DILocation(line: 238, column: 20, scope: !3635)
!3656 = !DILocation(line: 238, column: 18, scope: !3635)
!3657 = !{!2984, !2984, i64 0}
!3658 = !DILocation(line: 239, column: 11, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !66, line: 239, column: 11)
!3660 = distinct !DILexicalBlock(scope: !3635, file: !66, line: 239, column: 11)
!3661 = !DILocation(line: 239, column: 11, scope: !3660)
!3662 = !DILocation(line: 240, column: 15, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3635, file: !66, line: 240, column: 15)
!3664 = !DILocation(line: 240, column: 22, scope: !3663)
!3665 = !DILocation(line: 240, column: 15, scope: !3635)
!3666 = !DILocation(line: 241, column: 16, scope: !3663)
!3667 = !DILocation(line: 241, column: 13, scope: !3663)
!3668 = !DILocation(line: 242, column: 9, scope: !3635)
!3669 = !DILocation(line: 243, column: 5, scope: !3612)
!3670 = !DILocation(line: 245, column: 10, scope: !3591)
!3671 = !DILocation(line: 245, column: 3, scope: !3591)
!3672 = !DILocalVariable(name: "x", arg: 1, scope: !241, file: !66, line: 75, type: !213)
!3673 = !DILocation(line: 75, column: 36, scope: !241)
!3674 = !DILocation(line: 77, column: 3, scope: !241)
!3675 = !DILocation(line: 77, column: 6, scope: !241)
!3676 = !DILocation(line: 77, column: 27, scope: !241)
!3677 = !{!3647, !3107, i64 0}
!3678 = !DILocation(line: 78, column: 3, scope: !241)
!3679 = !DILocation(line: 78, column: 6, scope: !241)
!3680 = !DILocation(line: 78, column: 31, scope: !241)
!3681 = !{!3647, !3107, i64 10}
!3682 = !DILocation(line: 79, column: 3, scope: !241)
!3683 = !DILocation(line: 79, column: 6, scope: !241)
!3684 = !DILocation(line: 79, column: 16, scope: !241)
!3685 = !{!3647, !3107, i64 9}
!3686 = !DILocation(line: 80, column: 3, scope: !241)
!3687 = !DILocation(line: 80, column: 6, scope: !241)
!3688 = !DILocation(line: 80, column: 22, scope: !241)
!3689 = !{!3647, !3107, i64 8}
!3690 = !DILocation(line: 84, column: 3, scope: !241)
!3691 = !DILocation(line: 84, column: 6, scope: !241)
!3692 = !DILocation(line: 84, column: 18, scope: !241)
!3693 = !{!3647, !2984, i64 4}
!3694 = !DILocation(line: 85, column: 3, scope: !241)
!3695 = !DILocation(line: 85, column: 6, scope: !241)
!3696 = !DILocation(line: 85, column: 16, scope: !241)
!3697 = !{!3647, !3107, i64 25}
!3698 = !DILocation(line: 87, column: 3, scope: !241)
!3699 = !DILocation(line: 87, column: 6, scope: !241)
!3700 = !DILocation(line: 87, column: 14, scope: !241)
!3701 = !DILocation(line: 93, column: 3, scope: !241)
!3702 = !DILocation(line: 93, column: 6, scope: !241)
!3703 = !DILocation(line: 93, column: 26, scope: !241)
!3704 = !{!3647, !3107, i64 27}
!3705 = !DILocation(line: 97, column: 23, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !241, file: !66, line: 95, column: 3)
!3707 = !DILocation(line: 97, column: 5, scope: !3706)
!3708 = !DILocation(line: 97, column: 8, scope: !3706)
!3709 = !DILocation(line: 97, column: 21, scope: !3706)
!3710 = !{!3647, !2996, i64 16}
!3711 = !DILocation(line: 98, column: 9, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3706, file: !66, line: 98, column: 9)
!3713 = !DILocation(line: 98, column: 12, scope: !3712)
!3714 = !DILocation(line: 98, column: 25, scope: !3712)
!3715 = !DILocation(line: 98, column: 9, scope: !3706)
!3716 = !DILocation(line: 99, column: 7, scope: !3712)
!3717 = !DILocation(line: 103, column: 3, scope: !241)
!3718 = !DILocation(line: 103, column: 6, scope: !241)
!3719 = !DILocation(line: 103, column: 24, scope: !241)
!3720 = !{!3647, !3107, i64 24}
!3721 = !DILocation(line: 104, column: 1, scope: !241)
!3722 = distinct !DISubprogram(name: "rm", scope: !1323, file: !1323, line: 577, type: !1335, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1322, retainedNodes: !143)
!3723 = !DILocalVariable(name: "file", arg: 1, scope: !3722, file: !1323, line: 577, type: !1337)
!3724 = !DILocation(line: 577, column: 18, scope: !3722)
!3725 = !DILocalVariable(name: "x", arg: 2, scope: !3722, file: !1323, line: 577, type: !1339)
!3726 = !DILocation(line: 577, column: 49, scope: !3722)
!3727 = !DILocalVariable(name: "rm_status", scope: !3722, file: !1323, line: 579, type: !106)
!3728 = !DILocation(line: 579, column: 18, scope: !3722)
!3729 = !DILocation(line: 581, column: 8, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3722, file: !1323, line: 581, column: 7)
!3731 = !DILocation(line: 581, column: 7, scope: !3730)
!3732 = !DILocation(line: 581, column: 7, scope: !3722)
!3733 = !DILocalVariable(name: "bit_flags", scope: !3734, file: !1323, line: 583, type: !7)
!3734 = distinct !DILexicalBlock(scope: !3730, file: !1323, line: 582, column: 5)
!3735 = !DILocation(line: 583, column: 11, scope: !3734)
!3736 = !DILocation(line: 587, column: 11, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3734, file: !1323, line: 587, column: 11)
!3738 = !DILocation(line: 587, column: 14, scope: !3737)
!3739 = !DILocation(line: 587, column: 11, scope: !3734)
!3740 = !DILocation(line: 588, column: 19, scope: !3737)
!3741 = !DILocation(line: 588, column: 9, scope: !3737)
!3742 = !DILocalVariable(name: "fts", scope: !3734, file: !1323, line: 590, type: !1358)
!3743 = !DILocation(line: 590, column: 12, scope: !3734)
!3744 = !DILocation(line: 590, column: 29, scope: !3734)
!3745 = !DILocation(line: 590, column: 35, scope: !3734)
!3746 = !DILocation(line: 590, column: 18, scope: !3734)
!3747 = !DILocation(line: 592, column: 7, scope: !3734)
!3748 = !DILocalVariable(name: "ent", scope: !3749, file: !1323, line: 594, type: !1451)
!3749 = distinct !DILexicalBlock(scope: !3734, file: !1323, line: 593, column: 9)
!3750 = !DILocation(line: 594, column: 19, scope: !3749)
!3751 = !DILocation(line: 596, column: 27, scope: !3749)
!3752 = !DILocation(line: 596, column: 17, scope: !3749)
!3753 = !DILocation(line: 596, column: 15, scope: !3749)
!3754 = !DILocation(line: 597, column: 15, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3749, file: !1323, line: 597, column: 15)
!3756 = !DILocation(line: 597, column: 19, scope: !3755)
!3757 = !DILocation(line: 597, column: 15, scope: !3749)
!3758 = !DILocation(line: 599, column: 19, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !1323, line: 599, column: 19)
!3760 = distinct !DILexicalBlock(scope: !3755, file: !1323, line: 598, column: 13)
!3761 = !DILocation(line: 599, column: 25, scope: !3759)
!3762 = !DILocation(line: 599, column: 19, scope: !3760)
!3763 = !DILocation(line: 601, column: 29, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3759, file: !1323, line: 600, column: 17)
!3765 = !DILocation(line: 601, column: 36, scope: !3764)
!3766 = !DILocation(line: 601, column: 19, scope: !3764)
!3767 = !DILocation(line: 602, column: 29, scope: !3764)
!3768 = !DILocation(line: 603, column: 17, scope: !3764)
!3769 = !DILocation(line: 604, column: 15, scope: !3760)
!3770 = !DILocalVariable(name: "s", scope: !3749, file: !1323, line: 607, type: !106)
!3771 = !DILocation(line: 607, column: 26, scope: !3749)
!3772 = !DILocation(line: 607, column: 38, scope: !3749)
!3773 = !DILocation(line: 607, column: 43, scope: !3749)
!3774 = !DILocation(line: 607, column: 48, scope: !3749)
!3775 = !DILocation(line: 607, column: 30, scope: !3749)
!3776 = !DILocation(line: 609, column: 11, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !1323, line: 609, column: 11)
!3778 = distinct !DILexicalBlock(scope: !3749, file: !1323, line: 609, column: 11)
!3779 = !DILocation(line: 609, column: 11, scope: !3778)
!3780 = !DILocation(line: 610, column: 11, scope: !3749)
!3781 = !DILocation(line: 610, column: 11, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3783, file: !1323, line: 610, column: 11)
!3783 = distinct !DILexicalBlock(scope: !3749, file: !1323, line: 610, column: 11)
!3784 = !DILocation(line: 610, column: 11, scope: !3783)
!3785 = distinct !{!3785, !3747, !3786}
!3786 = !DILocation(line: 611, column: 9, scope: !3734)
!3787 = !DILocation(line: 613, column: 22, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3734, file: !1323, line: 613, column: 11)
!3789 = !DILocation(line: 613, column: 11, scope: !3788)
!3790 = !DILocation(line: 613, column: 27, scope: !3788)
!3791 = !DILocation(line: 613, column: 11, scope: !3734)
!3792 = !DILocation(line: 615, column: 21, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3788, file: !1323, line: 614, column: 9)
!3794 = !DILocation(line: 615, column: 28, scope: !3793)
!3795 = !DILocation(line: 615, column: 11, scope: !3793)
!3796 = !DILocation(line: 616, column: 21, scope: !3793)
!3797 = !DILocation(line: 617, column: 9, scope: !3793)
!3798 = !DILocation(line: 618, column: 5, scope: !3734)
!3799 = !DILocation(line: 620, column: 10, scope: !3722)
!3800 = !DILocation(line: 620, column: 3, scope: !3722)
!3801 = distinct !DISubprogram(name: "rm_fts", scope: !1323, file: !1323, line: 418, type: !1453, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1322, retainedNodes: !143)
!3802 = !DILocalVariable(name: "fts", arg: 1, scope: !3801, file: !1323, line: 418, type: !1358)
!3803 = !DILocation(line: 418, column: 14, scope: !3801)
!3804 = !DILocalVariable(name: "ent", arg: 2, scope: !3801, file: !1323, line: 418, type: !1451)
!3805 = !DILocation(line: 418, column: 27, scope: !3801)
!3806 = !DILocalVariable(name: "x", arg: 3, scope: !3801, file: !1323, line: 418, type: !1339)
!3807 = !DILocation(line: 418, column: 57, scope: !3801)
!3808 = !DILocation(line: 420, column: 11, scope: !3801)
!3809 = !DILocation(line: 420, column: 16, scope: !3801)
!3810 = !{!3811, !3811, i64 0}
!3811 = !{!"short", !2984, i64 0}
!3812 = !DILocation(line: 420, column: 3, scope: !3801)
!3813 = !DILocation(line: 423, column: 13, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3815, file: !1323, line: 423, column: 11)
!3815 = distinct !DILexicalBlock(scope: !3801, file: !1323, line: 421, column: 5)
!3816 = !DILocation(line: 423, column: 16, scope: !3814)
!3817 = !DILocation(line: 424, column: 11, scope: !3814)
!3818 = !DILocation(line: 424, column: 16, scope: !3814)
!3819 = !DILocation(line: 424, column: 19, scope: !3814)
!3820 = !DILocation(line: 425, column: 16, scope: !3814)
!3821 = !DILocation(line: 425, column: 33, scope: !3814)
!3822 = !DILocation(line: 425, column: 38, scope: !3814)
!3823 = !{!3824, !2983, i64 44}
!3824 = !{!"", !2996, i64 0, !2996, i64 8, !2996, i64 16, !3180, i64 24, !2996, i64 32, !2983, i64 40, !2983, i64 44, !3180, i64 48, !3180, i64 56, !2996, i64 64, !2983, i64 72, !2996, i64 80, !2984, i64 88, !3825, i64 96}
!3825 = !{!"I_ring", !2984, i64 0, !2983, i64 16, !2983, i64 20, !2983, i64 24, !3107, i64 28}
!3826 = !DILocation(line: 425, column: 50, scope: !3814)
!3827 = !DILocation(line: 425, column: 55, scope: !3814)
!3828 = !DILocation(line: 425, column: 19, scope: !3814)
!3829 = !DILocation(line: 423, column: 11, scope: !3815)
!3830 = !DILocalVariable(name: "err", scope: !3831, file: !1323, line: 431, type: !7)
!3831 = distinct !DILexicalBlock(scope: !3814, file: !1323, line: 426, column: 9)
!3832 = !DILocation(line: 431, column: 15, scope: !3831)
!3833 = !DILocation(line: 431, column: 21, scope: !3831)
!3834 = !DILocation(line: 431, column: 24, scope: !3831)
!3835 = !DILocation(line: 432, column: 21, scope: !3831)
!3836 = !DILocation(line: 432, column: 26, scope: !3831)
!3837 = !DILocation(line: 432, column: 49, scope: !3831)
!3838 = !DILocation(line: 432, column: 11, scope: !3831)
!3839 = !DILocation(line: 433, column: 31, scope: !3831)
!3840 = !DILocation(line: 433, column: 11, scope: !3831)
!3841 = !DILocation(line: 434, column: 26, scope: !3831)
!3842 = !DILocation(line: 434, column: 31, scope: !3831)
!3843 = !DILocation(line: 434, column: 11, scope: !3831)
!3844 = !DILocation(line: 435, column: 11, scope: !3831)
!3845 = !DILocation(line: 439, column: 11, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3815, file: !1323, line: 439, column: 11)
!3847 = !DILocation(line: 439, column: 16, scope: !3846)
!3848 = !{!3180, !3180, i64 0}
!3849 = !DILocation(line: 439, column: 26, scope: !3846)
!3850 = !DILocation(line: 439, column: 11, scope: !3815)
!3851 = !DILocation(line: 444, column: 46, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !1323, line: 444, column: 15)
!3853 = distinct !DILexicalBlock(scope: !3846, file: !1323, line: 440, column: 9)
!3854 = !DILocation(line: 444, column: 51, scope: !3852)
!3855 = !DILocation(line: 444, column: 30, scope: !3852)
!3856 = !DILocation(line: 444, column: 15, scope: !3852)
!3857 = !DILocation(line: 444, column: 15, scope: !3853)
!3858 = !DILocation(line: 447, column: 22, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3852, file: !1323, line: 445, column: 13)
!3860 = !DILocation(line: 448, column: 22, scope: !3859)
!3861 = !DILocation(line: 448, column: 42, scope: !3859)
!3862 = !DILocation(line: 449, column: 22, scope: !3859)
!3863 = !DILocation(line: 446, column: 15, scope: !3859)
!3864 = !DILocation(line: 450, column: 30, scope: !3859)
!3865 = !DILocation(line: 450, column: 35, scope: !3859)
!3866 = !DILocation(line: 450, column: 15, scope: !3859)
!3867 = !DILocation(line: 451, column: 15, scope: !3859)
!3868 = !DILocation(line: 457, column: 15, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3853, file: !1323, line: 457, column: 15)
!3870 = !{!3179, !3180, i64 8}
!3871 = !{!3872, !3180, i64 0}
!3872 = !{!"dev_ino", !3180, i64 0, !3180, i64 8}
!3873 = !{!3179, !3180, i64 0}
!3874 = !{!3872, !3180, i64 8}
!3875 = !DILocation(line: 457, column: 15, scope: !3853)
!3876 = !DILocation(line: 459, column: 15, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3869, file: !1323, line: 458, column: 13)
!3878 = !DILocation(line: 459, column: 15, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !1323, line: 459, column: 15)
!3880 = distinct !DILexicalBlock(scope: !3877, file: !1323, line: 459, column: 15)
!3881 = !DILocation(line: 459, column: 15, scope: !3880)
!3882 = !DILocation(line: 460, column: 30, scope: !3877)
!3883 = !DILocation(line: 460, column: 35, scope: !3877)
!3884 = !DILocation(line: 460, column: 15, scope: !3877)
!3885 = !DILocation(line: 461, column: 15, scope: !3877)
!3886 = !DILocation(line: 467, column: 15, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3853, file: !1323, line: 467, column: 15)
!3888 = !DILocation(line: 467, column: 18, scope: !3887)
!3889 = !DILocation(line: 467, column: 15, scope: !3853)
!3890 = !DILocalVariable(name: "failed", scope: !3891, file: !1323, line: 469, type: !120)
!3891 = distinct !DILexicalBlock(scope: !3887, file: !1323, line: 468, column: 13)
!3892 = !DILocation(line: 469, column: 20, scope: !3891)
!3893 = !DILocalVariable(name: "parent", scope: !3891, file: !1323, line: 470, type: !9)
!3894 = !DILocation(line: 470, column: 21, scope: !3891)
!3895 = !DILocation(line: 470, column: 48, scope: !3891)
!3896 = !DILocation(line: 470, column: 53, scope: !3891)
!3897 = !DILocation(line: 470, column: 30, scope: !3891)
!3898 = !DILocalVariable(name: "statbuf", scope: !3891, file: !1323, line: 471, type: !1388)
!3899 = !DILocation(line: 471, column: 27, scope: !3891)
!3900 = !DILocation(line: 473, column: 20, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3891, file: !1323, line: 473, column: 19)
!3902 = !DILocation(line: 473, column: 27, scope: !3901)
!3903 = !DILocation(line: 473, column: 37, scope: !3901)
!3904 = !DILocation(line: 473, column: 30, scope: !3901)
!3905 = !DILocation(line: 473, column: 19, scope: !3891)
!3906 = !DILocation(line: 476, column: 26, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3901, file: !1323, line: 474, column: 17)
!3908 = !DILocation(line: 477, column: 26, scope: !3907)
!3909 = !DILocation(line: 478, column: 26, scope: !3907)
!3910 = !DILocation(line: 475, column: 19, scope: !3907)
!3911 = !DILocation(line: 479, column: 26, scope: !3907)
!3912 = !DILocation(line: 480, column: 17, scope: !3907)
!3913 = !DILocation(line: 482, column: 21, scope: !3891)
!3914 = !DILocation(line: 482, column: 15, scope: !3891)
!3915 = !DILocation(line: 484, column: 19, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3891, file: !1323, line: 484, column: 19)
!3917 = !DILocation(line: 484, column: 26, scope: !3916)
!3918 = !DILocation(line: 484, column: 29, scope: !3916)
!3919 = !DILocation(line: 484, column: 34, scope: !3916)
!3920 = !{!3824, !3180, i64 24}
!3921 = !DILocation(line: 484, column: 53, scope: !3916)
!3922 = !DILocation(line: 484, column: 42, scope: !3916)
!3923 = !DILocation(line: 484, column: 19, scope: !3891)
!3924 = !DILocation(line: 486, column: 25, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3926, file: !1323, line: 486, column: 23)
!3926 = distinct !DILexicalBlock(scope: !3916, file: !1323, line: 485, column: 17)
!3927 = !DILocation(line: 486, column: 23, scope: !3926)
!3928 = !DILocation(line: 489, column: 30, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3925, file: !1323, line: 487, column: 21)
!3930 = !DILocation(line: 490, column: 30, scope: !3929)
!3931 = !DILocation(line: 488, column: 23, scope: !3929)
!3932 = !DILocation(line: 491, column: 36, scope: !3929)
!3933 = !DILocation(line: 491, column: 23, scope: !3929)
!3934 = !DILocation(line: 492, column: 21, scope: !3929)
!3935 = !DILocation(line: 493, column: 34, scope: !3926)
!3936 = !DILocation(line: 493, column: 39, scope: !3926)
!3937 = !DILocation(line: 493, column: 19, scope: !3926)
!3938 = !DILocation(line: 494, column: 19, scope: !3926)
!3939 = !DILocation(line: 496, column: 13, scope: !3891)
!3940 = !DILocation(line: 497, column: 9, scope: !3853)
!3941 = !DILocalVariable(name: "is_empty_directory", scope: !3942, file: !1323, line: 500, type: !1455)
!3942 = distinct !DILexicalBlock(scope: !3815, file: !1323, line: 499, column: 7)
!3943 = !DILocation(line: 500, column: 17, scope: !3942)
!3944 = !DILocalVariable(name: "s", scope: !3942, file: !1323, line: 501, type: !106)
!3945 = !DILocation(line: 501, column: 24, scope: !3942)
!3946 = !DILocation(line: 501, column: 36, scope: !3942)
!3947 = !DILocation(line: 501, column: 41, scope: !3942)
!3948 = !DILocation(line: 501, column: 63, scope: !3942)
!3949 = !DILocation(line: 501, column: 28, scope: !3942)
!3950 = !DILocation(line: 504, column: 13, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3942, file: !1323, line: 504, column: 13)
!3952 = !DILocation(line: 504, column: 15, scope: !3951)
!3953 = !DILocation(line: 504, column: 24, scope: !3951)
!3954 = !DILocation(line: 504, column: 27, scope: !3951)
!3955 = !DILocation(line: 504, column: 46, scope: !3951)
!3956 = !DILocation(line: 504, column: 13, scope: !3942)
!3957 = !DILocation(line: 508, column: 25, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3951, file: !1323, line: 505, column: 11)
!3959 = !DILocation(line: 508, column: 30, scope: !3958)
!3960 = !DILocation(line: 508, column: 35, scope: !3958)
!3961 = !DILocation(line: 508, column: 17, scope: !3958)
!3962 = !DILocation(line: 508, column: 15, scope: !3958)
!3963 = !DILocation(line: 509, column: 28, scope: !3958)
!3964 = !DILocation(line: 509, column: 33, scope: !3958)
!3965 = !DILocation(line: 509, column: 13, scope: !3958)
!3966 = !DILocation(line: 510, column: 11, scope: !3958)
!3967 = !DILocation(line: 512, column: 13, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3942, file: !1323, line: 512, column: 13)
!3969 = !DILocation(line: 512, column: 15, scope: !3968)
!3970 = !DILocation(line: 512, column: 13, scope: !3942)
!3971 = !DILocation(line: 514, column: 33, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3968, file: !1323, line: 513, column: 11)
!3973 = !DILocation(line: 514, column: 13, scope: !3972)
!3974 = !DILocation(line: 515, column: 28, scope: !3972)
!3975 = !DILocation(line: 515, column: 33, scope: !3972)
!3976 = !DILocation(line: 515, column: 13, scope: !3972)
!3977 = !DILocation(line: 516, column: 11, scope: !3972)
!3978 = !DILocation(line: 518, column: 16, scope: !3942)
!3979 = !DILocation(line: 518, column: 9, scope: !3942)
!3980 = !DILocation(line: 533, column: 13, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !1323, line: 533, column: 13)
!3982 = distinct !DILexicalBlock(scope: !3815, file: !1323, line: 529, column: 7)
!3983 = !DILocation(line: 533, column: 18, scope: !3981)
!3984 = !DILocation(line: 533, column: 27, scope: !3981)
!3985 = !DILocation(line: 534, column: 13, scope: !3981)
!3986 = !DILocation(line: 534, column: 16, scope: !3981)
!3987 = !DILocation(line: 534, column: 19, scope: !3981)
!3988 = !DILocation(line: 535, column: 13, scope: !3981)
!3989 = !DILocation(line: 535, column: 32, scope: !3981)
!3990 = !DILocation(line: 535, column: 37, scope: !3981)
!3991 = !DILocation(line: 535, column: 30, scope: !3981)
!3992 = !DILocation(line: 536, column: 13, scope: !3981)
!3993 = !DILocation(line: 536, column: 16, scope: !3981)
!3994 = !DILocation(line: 536, column: 21, scope: !3981)
!3995 = !DILocation(line: 536, column: 32, scope: !3981)
!3996 = !DILocation(line: 536, column: 42, scope: !3981)
!3997 = !DILocation(line: 536, column: 47, scope: !3981)
!3998 = !DILocation(line: 536, column: 39, scope: !3981)
!3999 = !DILocation(line: 533, column: 13, scope: !3982)
!4000 = !DILocation(line: 538, column: 33, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3981, file: !1323, line: 537, column: 11)
!4002 = !DILocation(line: 538, column: 13, scope: !4001)
!4003 = !DILocation(line: 539, column: 26, scope: !4001)
!4004 = !DILocation(line: 540, column: 20, scope: !4001)
!4005 = !DILocation(line: 539, column: 13, scope: !4001)
!4006 = !DILocation(line: 541, column: 13, scope: !4001)
!4007 = !DILocalVariable(name: "is_dir", scope: !3982, file: !1323, line: 544, type: !120)
!4008 = !DILocation(line: 544, column: 14, scope: !3982)
!4009 = !DILocation(line: 544, column: 23, scope: !3982)
!4010 = !DILocation(line: 544, column: 28, scope: !3982)
!4011 = !DILocation(line: 544, column: 37, scope: !3982)
!4012 = !DILocation(line: 544, column: 47, scope: !3982)
!4013 = !DILocation(line: 544, column: 50, scope: !3982)
!4014 = !DILocation(line: 544, column: 55, scope: !3982)
!4015 = !DILocation(line: 544, column: 64, scope: !3982)
!4016 = !DILocalVariable(name: "s", scope: !3982, file: !1323, line: 545, type: !106)
!4017 = !DILocation(line: 545, column: 24, scope: !3982)
!4018 = !DILocation(line: 545, column: 36, scope: !3982)
!4019 = !DILocation(line: 545, column: 41, scope: !3982)
!4020 = !DILocation(line: 545, column: 46, scope: !3982)
!4021 = !DILocation(line: 545, column: 54, scope: !3982)
!4022 = !DILocation(line: 545, column: 28, scope: !3982)
!4023 = !DILocation(line: 546, column: 13, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !3982, file: !1323, line: 546, column: 13)
!4025 = !DILocation(line: 546, column: 15, scope: !4024)
!4026 = !DILocation(line: 546, column: 13, scope: !3982)
!4027 = !DILocation(line: 547, column: 18, scope: !4024)
!4028 = !DILocation(line: 547, column: 11, scope: !4024)
!4029 = !DILocation(line: 548, column: 24, scope: !3982)
!4030 = !DILocation(line: 548, column: 29, scope: !3982)
!4031 = !DILocation(line: 548, column: 34, scope: !3982)
!4032 = !DILocation(line: 548, column: 37, scope: !3982)
!4033 = !DILocation(line: 548, column: 16, scope: !3982)
!4034 = !DILocation(line: 548, column: 9, scope: !3982)
!4035 = !DILocation(line: 552, column: 7, scope: !3815)
!4036 = !DILocation(line: 552, column: 7, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !3815, file: !1323, line: 552, column: 7)
!4038 = !DILocation(line: 553, column: 22, scope: !3815)
!4039 = !DILocation(line: 553, column: 27, scope: !3815)
!4040 = !DILocation(line: 553, column: 7, scope: !3815)
!4041 = !DILocation(line: 554, column: 7, scope: !3815)
!4042 = !DILocation(line: 559, column: 17, scope: !3815)
!4043 = !DILocation(line: 559, column: 22, scope: !3815)
!4044 = !DILocation(line: 559, column: 33, scope: !3815)
!4045 = !DILocation(line: 560, column: 14, scope: !3815)
!4046 = !DILocation(line: 559, column: 7, scope: !3815)
!4047 = !DILocation(line: 561, column: 22, scope: !3815)
!4048 = !DILocation(line: 561, column: 27, scope: !3815)
!4049 = !DILocation(line: 561, column: 7, scope: !3815)
!4050 = !DILocation(line: 562, column: 7, scope: !3815)
!4051 = !DILocation(line: 565, column: 20, scope: !3815)
!4052 = !DILocation(line: 567, column: 14, scope: !3815)
!4053 = !DILocation(line: 567, column: 19, scope: !3815)
!4054 = !DILocation(line: 568, column: 14, scope: !3815)
!4055 = !DILocation(line: 565, column: 7, scope: !3815)
!4056 = !DILocation(line: 570, column: 7, scope: !3815)
!4057 = !DILocation(line: 572, column: 1, scope: !3801)
!4058 = distinct !DISubprogram(name: "is_empty_dir", scope: !141, file: !141, line: 290, type: !1456, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1322, retainedNodes: !143)
!4059 = !DILocalVariable(name: "fd_cwd", arg: 1, scope: !4058, file: !141, line: 290, type: !7)
!4060 = !DILocation(line: 290, column: 19, scope: !4058)
!4061 = !DILocalVariable(name: "dir", arg: 2, scope: !4058, file: !141, line: 290, type: !115)
!4062 = !DILocation(line: 290, column: 39, scope: !4058)
!4063 = !DILocalVariable(name: "dirp", scope: !4058, file: !141, line: 292, type: !607)
!4064 = !DILocation(line: 292, column: 8, scope: !4058)
!4065 = !DILocalVariable(name: "dp", scope: !4058, file: !141, line: 293, type: !1458)
!4066 = !DILocation(line: 293, column: 24, scope: !4058)
!4067 = !DILocalVariable(name: "saved_errno", scope: !4058, file: !141, line: 294, type: !7)
!4068 = !DILocation(line: 294, column: 7, scope: !4058)
!4069 = !DILocalVariable(name: "fd", scope: !4058, file: !141, line: 295, type: !7)
!4070 = !DILocation(line: 295, column: 7, scope: !4058)
!4071 = !DILocation(line: 295, column: 20, scope: !4058)
!4072 = !DILocation(line: 295, column: 28, scope: !4058)
!4073 = !DILocation(line: 295, column: 12, scope: !4058)
!4074 = !DILocation(line: 299, column: 7, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4058, file: !141, line: 299, column: 7)
!4076 = !DILocation(line: 299, column: 10, scope: !4075)
!4077 = !DILocation(line: 299, column: 7, scope: !4058)
!4078 = !DILocation(line: 300, column: 5, scope: !4075)
!4079 = !DILocation(line: 302, column: 21, scope: !4058)
!4080 = !DILocation(line: 302, column: 10, scope: !4058)
!4081 = !DILocation(line: 302, column: 8, scope: !4058)
!4082 = !DILocation(line: 303, column: 7, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4058, file: !141, line: 303, column: 7)
!4084 = !DILocation(line: 303, column: 12, scope: !4083)
!4085 = !DILocation(line: 303, column: 7, scope: !4058)
!4086 = !DILocation(line: 305, column: 14, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4083, file: !141, line: 304, column: 5)
!4088 = !DILocation(line: 305, column: 7, scope: !4087)
!4089 = !DILocation(line: 306, column: 7, scope: !4087)
!4090 = !DILocation(line: 309, column: 3, scope: !4058)
!4091 = !DILocation(line: 309, column: 9, scope: !4058)
!4092 = !DILocation(line: 310, column: 41, scope: !4058)
!4093 = !DILocation(line: 310, column: 8, scope: !4058)
!4094 = !DILocation(line: 310, column: 6, scope: !4058)
!4095 = !DILocation(line: 311, column: 17, scope: !4058)
!4096 = !DILocation(line: 311, column: 15, scope: !4058)
!4097 = !DILocation(line: 312, column: 13, scope: !4058)
!4098 = !DILocation(line: 312, column: 3, scope: !4058)
!4099 = !DILocation(line: 313, column: 7, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4058, file: !141, line: 313, column: 7)
!4101 = !DILocation(line: 313, column: 10, scope: !4100)
!4102 = !DILocation(line: 313, column: 7, scope: !4058)
!4103 = !DILocation(line: 314, column: 5, scope: !4100)
!4104 = !DILocation(line: 315, column: 10, scope: !4058)
!4105 = !DILocation(line: 315, column: 22, scope: !4058)
!4106 = !DILocation(line: 315, column: 3, scope: !4058)
!4107 = !DILocation(line: 316, column: 1, scope: !4058)
!4108 = distinct !DISubprogram(name: "mark_ancestor_dirs", scope: !1323, file: !1323, line: 352, type: !1469, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1322, retainedNodes: !143)
!4109 = !DILocalVariable(name: "ent", arg: 1, scope: !4108, file: !1323, line: 352, type: !1451)
!4110 = !DILocation(line: 352, column: 29, scope: !4108)
!4111 = !DILocalVariable(name: "p", scope: !4108, file: !1323, line: 354, type: !1451)
!4112 = !DILocation(line: 354, column: 11, scope: !4108)
!4113 = !DILocation(line: 355, column: 12, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4108, file: !1323, line: 355, column: 3)
!4115 = !DILocation(line: 355, column: 17, scope: !4114)
!4116 = !DILocation(line: 355, column: 10, scope: !4114)
!4117 = !DILocation(line: 355, column: 8, scope: !4114)
!4118 = !DILocation(line: 355, column: 46, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4114, file: !1323, line: 355, column: 3)
!4120 = !DILocation(line: 355, column: 49, scope: !4119)
!4121 = !DILocation(line: 355, column: 43, scope: !4119)
!4122 = !DILocation(line: 355, column: 3, scope: !4114)
!4123 = !DILocation(line: 357, column: 11, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !1323, line: 357, column: 11)
!4125 = distinct !DILexicalBlock(scope: !4119, file: !1323, line: 356, column: 5)
!4126 = !DILocation(line: 357, column: 14, scope: !4124)
!4127 = !DILocation(line: 357, column: 11, scope: !4125)
!4128 = !DILocation(line: 358, column: 9, scope: !4124)
!4129 = !DILocation(line: 359, column: 7, scope: !4125)
!4130 = !DILocation(line: 359, column: 10, scope: !4125)
!4131 = !DILocation(line: 359, column: 21, scope: !4125)
!4132 = !DILocation(line: 360, column: 5, scope: !4125)
!4133 = !DILocation(line: 355, column: 64, scope: !4119)
!4134 = !DILocation(line: 355, column: 67, scope: !4119)
!4135 = !DILocation(line: 355, column: 62, scope: !4119)
!4136 = !DILocation(line: 355, column: 3, scope: !4119)
!4137 = distinct !{!4137, !4122, !4138}
!4138 = !DILocation(line: 360, column: 5, scope: !4114)
!4139 = !DILocation(line: 361, column: 1, scope: !4108)
!4140 = distinct !DISubprogram(name: "fts_skip_tree", scope: !1323, file: !1323, line: 341, type: !1471, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1322, retainedNodes: !143)
!4141 = !DILocalVariable(name: "fts", arg: 1, scope: !4140, file: !1323, line: 341, type: !1358)
!4142 = !DILocation(line: 341, column: 21, scope: !4140)
!4143 = !DILocalVariable(name: "ent", arg: 2, scope: !4140, file: !1323, line: 341, type: !1451)
!4144 = !DILocation(line: 341, column: 34, scope: !4140)
!4145 = !DILocation(line: 343, column: 12, scope: !4140)
!4146 = !DILocation(line: 343, column: 17, scope: !4140)
!4147 = !DILocation(line: 343, column: 3, scope: !4140)
!4148 = !DILocalVariable(name: "__x", scope: !4149, file: !1323, line: 345, type: !1451)
!4149 = distinct !DILexicalBlock(scope: !4140, file: !1323, line: 345, column: 3)
!4150 = !DILocation(line: 345, column: 3, scope: !4149)
!4151 = !DILocation(line: 346, column: 1, scope: !4140)
!4152 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !141, file: !141, line: 265, type: !200, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1322, retainedNodes: !143)
!4153 = !DILocalVariable(name: "file_name", arg: 1, scope: !4152, file: !141, line: 265, type: !115)
!4154 = !DILocation(line: 265, column: 28, scope: !4152)
!4155 = !DILocation(line: 267, column: 7, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4152, file: !141, line: 267, column: 7)
!4157 = !DILocation(line: 267, column: 20, scope: !4156)
!4158 = !DILocation(line: 267, column: 7, scope: !4152)
!4159 = !DILocalVariable(name: "sep", scope: !4160, file: !141, line: 269, type: !10)
!4160 = distinct !DILexicalBlock(scope: !4156, file: !141, line: 268, column: 5)
!4161 = !DILocation(line: 269, column: 12, scope: !4160)
!4162 = !DILocation(line: 269, column: 18, scope: !4160)
!4163 = !DILocation(line: 269, column: 29, scope: !4160)
!4164 = !DILocation(line: 269, column: 42, scope: !4160)
!4165 = !DILocation(line: 269, column: 50, scope: !4160)
!4166 = !DILocation(line: 270, column: 17, scope: !4160)
!4167 = !DILocation(line: 270, column: 21, scope: !4160)
!4168 = !DILocation(line: 270, column: 24, scope: !4160)
!4169 = !DILocation(line: 270, column: 7, scope: !4160)
!4170 = !DILocation(line: 273, column: 5, scope: !4156)
!4171 = !DILocation(line: 274, column: 1, scope: !4152)
!4172 = distinct !DISubprogram(name: "prompt", scope: !1323, file: !1323, line: 176, type: !1473, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1322, retainedNodes: !143)
!4173 = !DILocalVariable(name: "fts", arg: 1, scope: !4172, file: !1323, line: 176, type: !1475)
!4174 = !DILocation(line: 176, column: 20, scope: !4172)
!4175 = !DILocalVariable(name: "ent", arg: 2, scope: !4172, file: !1323, line: 176, type: !1477)
!4176 = !DILocation(line: 176, column: 39, scope: !4172)
!4177 = !DILocalVariable(name: "is_dir", arg: 3, scope: !4172, file: !1323, line: 176, type: !120)
!4178 = !DILocation(line: 176, column: 49, scope: !4172)
!4179 = !DILocalVariable(name: "x", arg: 4, scope: !4172, file: !1323, line: 177, type: !1339)
!4180 = !DILocation(line: 177, column: 34, scope: !4172)
!4181 = !DILocalVariable(name: "mode", arg: 5, scope: !4172, file: !1323, line: 177, type: !1330)
!4182 = !DILocation(line: 177, column: 56, scope: !4172)
!4183 = !DILocalVariable(name: "is_empty_p", arg: 6, scope: !4172, file: !1323, line: 178, type: !1479)
!4184 = !DILocation(line: 178, column: 18, scope: !4172)
!4185 = !DILocalVariable(name: "fd_cwd", scope: !4172, file: !1323, line: 180, type: !7)
!4186 = !DILocation(line: 180, column: 7, scope: !4172)
!4187 = !DILocation(line: 180, column: 16, scope: !4172)
!4188 = !DILocation(line: 180, column: 21, scope: !4172)
!4189 = !DILocalVariable(name: "full_name", scope: !4172, file: !1323, line: 181, type: !115)
!4190 = !DILocation(line: 181, column: 15, scope: !4172)
!4191 = !DILocation(line: 181, column: 27, scope: !4172)
!4192 = !DILocation(line: 181, column: 32, scope: !4172)
!4193 = !DILocalVariable(name: "filename", scope: !4172, file: !1323, line: 182, type: !115)
!4194 = !DILocation(line: 182, column: 15, scope: !4172)
!4195 = !DILocation(line: 182, column: 26, scope: !4172)
!4196 = !DILocation(line: 182, column: 31, scope: !4172)
!4197 = !DILocation(line: 183, column: 7, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4172, file: !1323, line: 183, column: 7)
!4199 = !DILocation(line: 183, column: 7, scope: !4172)
!4200 = !DILocation(line: 184, column: 6, scope: !4198)
!4201 = !DILocation(line: 184, column: 17, scope: !4198)
!4202 = !DILocation(line: 184, column: 5, scope: !4198)
!4203 = !DILocalVariable(name: "st", scope: !4172, file: !1323, line: 186, type: !1388)
!4204 = !DILocation(line: 186, column: 15, scope: !4172)
!4205 = !DILocalVariable(name: "sbuf", scope: !4172, file: !1323, line: 187, type: !1480)
!4206 = !DILocation(line: 187, column: 16, scope: !4172)
!4207 = !DILocation(line: 188, column: 20, scope: !4172)
!4208 = !DILocation(line: 188, column: 3, scope: !4172)
!4209 = !DILocalVariable(name: "dirent_type", scope: !4172, file: !1323, line: 190, type: !7)
!4210 = !DILocation(line: 190, column: 7, scope: !4172)
!4211 = !DILocation(line: 190, column: 21, scope: !4172)
!4212 = !DILocalVariable(name: "write_protected", scope: !4172, file: !1323, line: 191, type: !7)
!4213 = !DILocation(line: 191, column: 7, scope: !4172)
!4214 = !DILocalVariable(name: "is_empty", scope: !4172, file: !1323, line: 193, type: !120)
!4215 = !DILocation(line: 193, column: 8, scope: !4172)
!4216 = !DILocation(line: 194, column: 7, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4172, file: !1323, line: 194, column: 7)
!4218 = !DILocation(line: 194, column: 7, scope: !4172)
!4219 = !DILocation(line: 196, column: 32, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4217, file: !1323, line: 195, column: 5)
!4221 = !DILocation(line: 196, column: 40, scope: !4220)
!4222 = !DILocation(line: 196, column: 18, scope: !4220)
!4223 = !DILocation(line: 196, column: 16, scope: !4220)
!4224 = !DILocation(line: 197, column: 21, scope: !4220)
!4225 = !DILocation(line: 197, column: 8, scope: !4220)
!4226 = !DILocation(line: 197, column: 19, scope: !4220)
!4227 = !DILocation(line: 198, column: 5, scope: !4220)
!4228 = !DILocation(line: 203, column: 7, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4172, file: !1323, line: 203, column: 7)
!4230 = !DILocation(line: 203, column: 12, scope: !4229)
!4231 = !DILocation(line: 203, column: 7, scope: !4172)
!4232 = !DILocation(line: 204, column: 5, scope: !4229)
!4233 = !DILocation(line: 206, column: 7, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4172, file: !1323, line: 206, column: 7)
!4235 = !DILocation(line: 206, column: 10, scope: !4234)
!4236 = !DILocation(line: 206, column: 22, scope: !4234)
!4237 = !DILocation(line: 206, column: 7, scope: !4172)
!4238 = !DILocation(line: 207, column: 5, scope: !4234)
!4239 = !DILocalVariable(name: "wp_errno", scope: !4172, file: !1323, line: 209, type: !7)
!4240 = !DILocation(line: 209, column: 7, scope: !4172)
!4241 = !DILocation(line: 210, column: 8, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4172, file: !1323, line: 210, column: 7)
!4243 = !DILocation(line: 210, column: 11, scope: !4242)
!4244 = !DILocation(line: 211, column: 7, scope: !4242)
!4245 = !DILocation(line: 211, column: 12, scope: !4242)
!4246 = !DILocation(line: 211, column: 15, scope: !4242)
!4247 = !DILocation(line: 211, column: 27, scope: !4242)
!4248 = !DILocation(line: 211, column: 42, scope: !4242)
!4249 = !DILocation(line: 211, column: 45, scope: !4242)
!4250 = !DILocation(line: 211, column: 48, scope: !4242)
!4251 = !DILocation(line: 212, column: 7, scope: !4242)
!4252 = !DILocation(line: 212, column: 10, scope: !4242)
!4253 = !DILocation(line: 212, column: 22, scope: !4242)
!4254 = !DILocation(line: 210, column: 7, scope: !4172)
!4255 = !DILocation(line: 214, column: 54, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4242, file: !1323, line: 213, column: 5)
!4257 = !DILocation(line: 214, column: 62, scope: !4256)
!4258 = !DILocation(line: 214, column: 72, scope: !4256)
!4259 = !DILocation(line: 214, column: 25, scope: !4256)
!4260 = !DILocation(line: 214, column: 23, scope: !4256)
!4261 = !DILocation(line: 215, column: 18, scope: !4256)
!4262 = !DILocation(line: 215, column: 16, scope: !4256)
!4263 = !DILocation(line: 216, column: 5, scope: !4256)
!4264 = !DILocation(line: 218, column: 7, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4172, file: !1323, line: 218, column: 7)
!4266 = !DILocation(line: 218, column: 23, scope: !4265)
!4267 = !DILocation(line: 218, column: 26, scope: !4265)
!4268 = !DILocation(line: 218, column: 29, scope: !4265)
!4269 = !DILocation(line: 218, column: 41, scope: !4265)
!4270 = !DILocation(line: 218, column: 7, scope: !4172)
!4271 = !DILocation(line: 220, column: 16, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4273, file: !1323, line: 220, column: 11)
!4273 = distinct !DILexicalBlock(scope: !4265, file: !1323, line: 219, column: 5)
!4274 = !DILocation(line: 220, column: 13, scope: !4272)
!4275 = !DILocation(line: 220, column: 32, scope: !4272)
!4276 = !DILocation(line: 220, column: 35, scope: !4272)
!4277 = !DILocation(line: 220, column: 47, scope: !4272)
!4278 = !DILocation(line: 220, column: 11, scope: !4273)
!4279 = !DILocation(line: 222, column: 30, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4281, file: !1323, line: 222, column: 15)
!4281 = distinct !DILexicalBlock(scope: !4272, file: !1323, line: 221, column: 9)
!4282 = !DILocation(line: 222, column: 38, scope: !4280)
!4283 = !DILocation(line: 222, column: 48, scope: !4280)
!4284 = !DILocation(line: 222, column: 15, scope: !4280)
!4285 = !DILocation(line: 222, column: 75, scope: !4280)
!4286 = !DILocation(line: 222, column: 15, scope: !4281)
!4287 = !DILocation(line: 224, column: 19, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !1323, line: 224, column: 19)
!4289 = distinct !DILexicalBlock(scope: !4280, file: !1323, line: 223, column: 13)
!4290 = !DILocation(line: 224, column: 19, scope: !4289)
!4291 = !DILocation(line: 225, column: 29, scope: !4288)
!4292 = !DILocation(line: 225, column: 17, scope: !4288)
!4293 = !DILocation(line: 226, column: 24, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4288, file: !1323, line: 226, column: 24)
!4295 = !DILocation(line: 226, column: 24, scope: !4288)
!4296 = !DILocation(line: 227, column: 29, scope: !4294)
!4297 = !DILocation(line: 227, column: 17, scope: !4294)
!4298 = !DILocation(line: 229, column: 13, scope: !4289)
!4299 = !DILocation(line: 233, column: 31, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4280, file: !1323, line: 231, column: 13)
!4301 = !DILocation(line: 234, column: 26, scope: !4300)
!4302 = !DILocation(line: 234, column: 24, scope: !4300)
!4303 = !DILocation(line: 236, column: 9, scope: !4281)
!4304 = !DILocation(line: 238, column: 16, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4273, file: !1323, line: 238, column: 11)
!4306 = !DILocation(line: 238, column: 13, scope: !4305)
!4307 = !DILocation(line: 238, column: 11, scope: !4273)
!4308 = !DILocation(line: 239, column: 17, scope: !4305)
!4309 = !DILocation(line: 239, column: 9, scope: !4305)
!4310 = !DILocation(line: 243, column: 17, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4312, file: !1323, line: 243, column: 17)
!4312 = distinct !DILexicalBlock(scope: !4305, file: !1323, line: 240, column: 11)
!4313 = !DILocation(line: 243, column: 20, scope: !4311)
!4314 = !DILocation(line: 243, column: 32, scope: !4311)
!4315 = !DILocation(line: 243, column: 17, scope: !4312)
!4316 = !DILocation(line: 244, column: 15, scope: !4311)
!4317 = !DILocation(line: 245, column: 13, scope: !4312)
!4318 = !DILocation(line: 251, column: 21, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4312, file: !1323, line: 251, column: 18)
!4320 = !DILocation(line: 251, column: 24, scope: !4319)
!4321 = !DILocation(line: 251, column: 34, scope: !4319)
!4322 = !DILocation(line: 251, column: 38, scope: !4319)
!4323 = !DILocation(line: 251, column: 41, scope: !4319)
!4324 = !DILocation(line: 251, column: 66, scope: !4319)
!4325 = !DILocation(line: 251, column: 69, scope: !4319)
!4326 = !DILocation(line: 251, column: 18, scope: !4312)
!4327 = !DILocation(line: 253, column: 33, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4319, file: !1323, line: 252, column: 15)
!4329 = !DILocation(line: 254, column: 26, scope: !4328)
!4330 = !DILocation(line: 255, column: 15, scope: !4328)
!4331 = !DILocation(line: 256, column: 13, scope: !4312)
!4332 = !DILocation(line: 257, column: 11, scope: !4312)
!4333 = !DILocalVariable(name: "quoted_name", scope: !4273, file: !1323, line: 259, type: !115)
!4334 = !DILocation(line: 259, column: 19, scope: !4273)
!4335 = !DILocation(line: 259, column: 33, scope: !4273)
!4336 = !DILocation(line: 261, column: 11, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4273, file: !1323, line: 261, column: 11)
!4338 = !DILocation(line: 261, column: 27, scope: !4337)
!4339 = !DILocation(line: 261, column: 11, scope: !4273)
!4340 = !DILocation(line: 263, column: 21, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4337, file: !1323, line: 262, column: 9)
!4342 = !DILocation(line: 263, column: 31, scope: !4341)
!4343 = !DILocation(line: 263, column: 54, scope: !4341)
!4344 = !DILocation(line: 263, column: 11, scope: !4341)
!4345 = !DILocation(line: 264, column: 11, scope: !4341)
!4346 = !DILocation(line: 268, column: 11, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4273, file: !1323, line: 268, column: 11)
!4348 = !DILocation(line: 268, column: 23, scope: !4347)
!4349 = !DILocation(line: 269, column: 11, scope: !4347)
!4350 = !DILocation(line: 269, column: 14, scope: !4347)
!4351 = !DILocation(line: 269, column: 19, scope: !4347)
!4352 = !DILocation(line: 270, column: 11, scope: !4347)
!4353 = !DILocation(line: 270, column: 15, scope: !4347)
!4354 = !DILocation(line: 268, column: 11, scope: !4273)
!4355 = !DILocation(line: 271, column: 18, scope: !4347)
!4356 = !DILocation(line: 272, column: 19, scope: !4347)
!4357 = !DILocation(line: 273, column: 21, scope: !4347)
!4358 = !DILocation(line: 274, column: 21, scope: !4347)
!4359 = !DILocation(line: 275, column: 18, scope: !4347)
!4360 = !DILocation(line: 275, column: 32, scope: !4347)
!4361 = !DILocation(line: 271, column: 9, scope: !4347)
!4362 = !DILocation(line: 278, column: 30, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4364, file: !1323, line: 278, column: 15)
!4364 = distinct !DILexicalBlock(scope: !4347, file: !1323, line: 277, column: 9)
!4365 = !DILocation(line: 278, column: 38, scope: !4363)
!4366 = !DILocation(line: 278, column: 48, scope: !4363)
!4367 = !DILocation(line: 278, column: 15, scope: !4363)
!4368 = !DILocation(line: 278, column: 75, scope: !4363)
!4369 = !DILocation(line: 278, column: 15, scope: !4364)
!4370 = !DILocation(line: 280, column: 25, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4363, file: !1323, line: 279, column: 13)
!4372 = !DILocation(line: 280, column: 32, scope: !4371)
!4373 = !DILocation(line: 280, column: 55, scope: !4371)
!4374 = !DILocation(line: 280, column: 15, scope: !4371)
!4375 = !DILocation(line: 281, column: 15, scope: !4371)
!4376 = !DILocation(line: 284, column: 20, scope: !4364)
!4377 = !DILocation(line: 285, column: 21, scope: !4364)
!4378 = !DILocation(line: 291, column: 23, scope: !4364)
!4379 = !DILocation(line: 292, column: 23, scope: !4364)
!4380 = !DILocation(line: 293, column: 20, scope: !4364)
!4381 = !DILocation(line: 293, column: 45, scope: !4364)
!4382 = !DILocation(line: 293, column: 34, scope: !4364)
!4383 = !DILocation(line: 293, column: 52, scope: !4364)
!4384 = !DILocation(line: 284, column: 11, scope: !4364)
!4385 = !DILocation(line: 296, column: 12, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4273, file: !1323, line: 296, column: 11)
!4387 = !DILocation(line: 296, column: 11, scope: !4273)
!4388 = !DILocation(line: 297, column: 9, scope: !4386)
!4389 = !DILocation(line: 298, column: 5, scope: !4273)
!4390 = !DILocation(line: 299, column: 3, scope: !4172)
!4391 = !DILocation(line: 300, column: 1, scope: !4172)
!4392 = distinct !DISubprogram(name: "excise", scope: !1323, file: !1323, line: 367, type: !1521, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1322, retainedNodes: !143)
!4393 = !DILocalVariable(name: "fts", arg: 1, scope: !4392, file: !1323, line: 367, type: !1358)
!4394 = !DILocation(line: 367, column: 14, scope: !4392)
!4395 = !DILocalVariable(name: "ent", arg: 2, scope: !4392, file: !1323, line: 367, type: !1451)
!4396 = !DILocation(line: 367, column: 27, scope: !4392)
!4397 = !DILocalVariable(name: "x", arg: 3, scope: !4392, file: !1323, line: 367, type: !1339)
!4398 = !DILocation(line: 367, column: 57, scope: !4392)
!4399 = !DILocalVariable(name: "is_dir", arg: 4, scope: !4392, file: !1323, line: 367, type: !120)
!4400 = !DILocation(line: 367, column: 65, scope: !4392)
!4401 = !DILocalVariable(name: "flag", scope: !4392, file: !1323, line: 369, type: !7)
!4402 = !DILocation(line: 369, column: 7, scope: !4392)
!4403 = !DILocation(line: 369, column: 14, scope: !4392)
!4404 = !DILocation(line: 370, column: 17, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4392, file: !1323, line: 370, column: 7)
!4406 = !DILocation(line: 370, column: 22, scope: !4405)
!4407 = !DILocation(line: 370, column: 34, scope: !4405)
!4408 = !DILocation(line: 370, column: 39, scope: !4405)
!4409 = !DILocation(line: 370, column: 52, scope: !4405)
!4410 = !DILocation(line: 370, column: 7, scope: !4405)
!4411 = !DILocation(line: 370, column: 58, scope: !4405)
!4412 = !DILocation(line: 370, column: 7, scope: !4392)
!4413 = !DILocation(line: 372, column: 11, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4415, file: !1323, line: 372, column: 11)
!4415 = distinct !DILexicalBlock(scope: !4405, file: !1323, line: 371, column: 5)
!4416 = !DILocation(line: 372, column: 14, scope: !4414)
!4417 = !DILocation(line: 372, column: 11, scope: !4415)
!4418 = !DILocation(line: 374, column: 20, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4414, file: !1323, line: 373, column: 9)
!4420 = !DILocation(line: 375, column: 22, scope: !4419)
!4421 = !DILocation(line: 376, column: 22, scope: !4419)
!4422 = !DILocation(line: 376, column: 42, scope: !4419)
!4423 = !DILocation(line: 374, column: 11, scope: !4419)
!4424 = !DILocation(line: 377, column: 9, scope: !4419)
!4425 = !DILocation(line: 378, column: 7, scope: !4415)
!4426 = !DILocation(line: 385, column: 7, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4392, file: !1323, line: 385, column: 7)
!4428 = !DILocation(line: 385, column: 13, scope: !4427)
!4429 = !DILocation(line: 385, column: 7, scope: !4392)
!4430 = !DILocalVariable(name: "st", scope: !4431, file: !1323, line: 387, type: !1388)
!4431 = distinct !DILexicalBlock(scope: !4427, file: !1323, line: 386, column: 5)
!4432 = !DILocation(line: 387, column: 19, scope: !4431)
!4433 = !DILocation(line: 388, column: 24, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4431, file: !1323, line: 388, column: 12)
!4435 = !DILocation(line: 388, column: 29, scope: !4434)
!4436 = !DILocation(line: 388, column: 41, scope: !4434)
!4437 = !DILocation(line: 388, column: 46, scope: !4434)
!4438 = !DILocation(line: 388, column: 15, scope: !4434)
!4439 = !DILocation(line: 389, column: 24, scope: !4434)
!4440 = !DILocation(line: 389, column: 27, scope: !4434)
!4441 = !DILocation(line: 389, column: 33, scope: !4434)
!4442 = !DILocation(line: 388, column: 12, scope: !4431)
!4443 = !DILocation(line: 390, column: 9, scope: !4434)
!4444 = !DILocation(line: 390, column: 15, scope: !4434)
!4445 = !DILocation(line: 391, column: 5, scope: !4431)
!4446 = !DILocation(line: 393, column: 26, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4392, file: !1323, line: 393, column: 7)
!4448 = !DILocation(line: 393, column: 29, scope: !4447)
!4449 = !DILocation(line: 393, column: 7, scope: !4447)
!4450 = !DILocation(line: 393, column: 7, scope: !4392)
!4451 = !DILocation(line: 394, column: 5, scope: !4447)
!4452 = !DILocation(line: 401, column: 7, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4392, file: !1323, line: 401, column: 7)
!4454 = !DILocation(line: 401, column: 12, scope: !4453)
!4455 = !DILocation(line: 401, column: 21, scope: !4453)
!4456 = !DILocation(line: 402, column: 7, scope: !4453)
!4457 = !DILocation(line: 402, column: 11, scope: !4453)
!4458 = !DILocation(line: 402, column: 17, scope: !4453)
!4459 = !DILocation(line: 402, column: 30, scope: !4453)
!4460 = !DILocation(line: 402, column: 33, scope: !4453)
!4461 = !DILocation(line: 402, column: 39, scope: !4453)
!4462 = !DILocation(line: 402, column: 49, scope: !4453)
!4463 = !DILocation(line: 402, column: 52, scope: !4453)
!4464 = !DILocation(line: 402, column: 58, scope: !4453)
!4465 = !DILocation(line: 403, column: 11, scope: !4453)
!4466 = !DILocation(line: 403, column: 14, scope: !4453)
!4467 = !DILocation(line: 403, column: 20, scope: !4453)
!4468 = !DILocation(line: 404, column: 7, scope: !4453)
!4469 = !DILocation(line: 404, column: 11, scope: !4453)
!4470 = !DILocation(line: 404, column: 16, scope: !4453)
!4471 = !DILocation(line: 404, column: 26, scope: !4453)
!4472 = !DILocation(line: 404, column: 35, scope: !4453)
!4473 = !DILocation(line: 404, column: 38, scope: !4453)
!4474 = !DILocation(line: 404, column: 43, scope: !4453)
!4475 = !DILocation(line: 404, column: 53, scope: !4453)
!4476 = !DILocation(line: 401, column: 7, scope: !4392)
!4477 = !DILocation(line: 405, column: 13, scope: !4453)
!4478 = !DILocation(line: 405, column: 18, scope: !4453)
!4479 = !DILocation(line: 405, column: 5, scope: !4453)
!4480 = !DILocation(line: 405, column: 11, scope: !4453)
!4481 = !DILocation(line: 406, column: 13, scope: !4392)
!4482 = !DILocation(line: 406, column: 20, scope: !4392)
!4483 = !DILocation(line: 406, column: 43, scope: !4392)
!4484 = !DILocation(line: 406, column: 3, scope: !4392)
!4485 = !DILocation(line: 407, column: 23, scope: !4392)
!4486 = !DILocation(line: 407, column: 3, scope: !4392)
!4487 = !DILocation(line: 408, column: 3, scope: !4392)
!4488 = !DILocation(line: 409, column: 1, scope: !4392)
!4489 = distinct !DISubprogram(name: "ignorable_missing", scope: !1323, file: !1323, line: 334, type: !1523, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1322, retainedNodes: !143)
!4490 = !DILocalVariable(name: "x", arg: 1, scope: !4489, file: !1323, line: 334, type: !1339)
!4491 = !DILocation(line: 334, column: 45, scope: !4489)
!4492 = !DILocalVariable(name: "errnum", arg: 2, scope: !4489, file: !1323, line: 334, type: !7)
!4493 = !DILocation(line: 334, column: 52, scope: !4489)
!4494 = !DILocation(line: 336, column: 10, scope: !4489)
!4495 = !DILocation(line: 336, column: 13, scope: !4489)
!4496 = !DILocation(line: 336, column: 34, scope: !4489)
!4497 = !DILocation(line: 336, column: 61, scope: !4489)
!4498 = !DILocation(line: 336, column: 37, scope: !4489)
!4499 = !DILocation(line: 0, scope: !4489)
!4500 = !DILocation(line: 336, column: 3, scope: !4489)
!4501 = distinct !DISubprogram(name: "nonexistent_file_errno", scope: !1323, file: !1323, line: 306, type: !307, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1322, retainedNodes: !143)
!4502 = !DILocalVariable(name: "errnum", arg: 1, scope: !4501, file: !1323, line: 306, type: !7)
!4503 = !DILocation(line: 306, column: 29, scope: !4501)
!4504 = !DILocation(line: 320, column: 11, scope: !4501)
!4505 = !DILocation(line: 320, column: 3, scope: !4501)
!4506 = !DILocation(line: 326, column: 7, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4501, file: !1323, line: 321, column: 5)
!4508 = !DILocation(line: 328, column: 7, scope: !4507)
!4509 = !DILocation(line: 330, column: 1, scope: !4501)
!4510 = distinct !DISubprogram(name: "cache_stat_init", scope: !1323, file: !1323, line: 85, type: !1515, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1322, retainedNodes: !143)
!4511 = !DILocalVariable(name: "st", arg: 1, scope: !4510, file: !1323, line: 85, type: !1480)
!4512 = !DILocation(line: 85, column: 31, scope: !4510)
!4513 = !DILocation(line: 87, column: 3, scope: !4510)
!4514 = !DILocation(line: 87, column: 7, scope: !4510)
!4515 = !DILocation(line: 87, column: 15, scope: !4510)
!4516 = !{!3179, !3180, i64 48}
!4517 = !DILocation(line: 88, column: 10, scope: !4510)
!4518 = !DILocation(line: 88, column: 3, scope: !4510)
!4519 = distinct !DISubprogram(name: "write_protected_non_symlink", scope: !1323, file: !1323, line: 96, type: !1517, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1322, retainedNodes: !143)
!4520 = !DILocalVariable(name: "fd_cwd", arg: 1, scope: !4519, file: !1323, line: 96, type: !7)
!4521 = !DILocation(line: 96, column: 34, scope: !4519)
!4522 = !DILocalVariable(name: "file", arg: 2, scope: !4519, file: !1323, line: 97, type: !115)
!4523 = !DILocation(line: 97, column: 42, scope: !4519)
!4524 = !DILocalVariable(name: "buf", arg: 3, scope: !4519, file: !1323, line: 98, type: !1480)
!4525 = !DILocation(line: 98, column: 43, scope: !4519)
!4526 = !DILocation(line: 100, column: 7, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4519, file: !1323, line: 100, column: 7)
!4528 = !DILocation(line: 100, column: 7, scope: !4519)
!4529 = !DILocation(line: 101, column: 5, scope: !4527)
!4530 = !DILocation(line: 102, column: 22, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4519, file: !1323, line: 102, column: 7)
!4532 = !DILocation(line: 102, column: 30, scope: !4531)
!4533 = !DILocation(line: 102, column: 36, scope: !4531)
!4534 = !DILocation(line: 102, column: 7, scope: !4531)
!4535 = !DILocation(line: 102, column: 62, scope: !4531)
!4536 = !DILocation(line: 102, column: 7, scope: !4519)
!4537 = !DILocation(line: 103, column: 5, scope: !4531)
!4538 = !DILocation(line: 104, column: 7, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4519, file: !1323, line: 104, column: 7)
!4540 = !DILocation(line: 104, column: 7, scope: !4519)
!4541 = !DILocation(line: 105, column: 5, scope: !4539)
!4542 = !DILocation(line: 155, column: 20, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4544, file: !1323, line: 155, column: 9)
!4544 = distinct !DILexicalBlock(scope: !4519, file: !1323, line: 154, column: 3)
!4545 = !DILocation(line: 155, column: 28, scope: !4543)
!4546 = !DILocation(line: 155, column: 9, scope: !4543)
!4547 = !DILocation(line: 155, column: 52, scope: !4543)
!4548 = !DILocation(line: 155, column: 9, scope: !4544)
!4549 = !DILocation(line: 156, column: 7, scope: !4543)
!4550 = !DILocation(line: 158, column: 12, scope: !4544)
!4551 = !DILocation(line: 158, column: 18, scope: !4544)
!4552 = !DILocation(line: 158, column: 5, scope: !4544)
!4553 = !DILocation(line: 160, column: 1, scope: !4519)
!4554 = distinct !DISubprogram(name: "cache_fstatat", scope: !1323, file: !1323, line: 70, type: !1519, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1322, retainedNodes: !143)
!4555 = !DILocalVariable(name: "fd", arg: 1, scope: !4554, file: !1323, line: 70, type: !7)
!4556 = !DILocation(line: 70, column: 20, scope: !4554)
!4557 = !DILocalVariable(name: "file", arg: 2, scope: !4554, file: !1323, line: 70, type: !115)
!4558 = !DILocation(line: 70, column: 36, scope: !4554)
!4559 = !DILocalVariable(name: "st", arg: 3, scope: !4554, file: !1323, line: 70, type: !1480)
!4560 = !DILocation(line: 70, column: 55, scope: !4554)
!4561 = !DILocalVariable(name: "flag", arg: 4, scope: !4554, file: !1323, line: 70, type: !7)
!4562 = !DILocation(line: 70, column: 63, scope: !4554)
!4563 = !DILocation(line: 72, column: 7, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4554, file: !1323, line: 72, column: 7)
!4565 = !DILocation(line: 72, column: 11, scope: !4564)
!4566 = !DILocation(line: 72, column: 19, scope: !4564)
!4567 = !DILocation(line: 72, column: 25, scope: !4564)
!4568 = !DILocation(line: 72, column: 37, scope: !4564)
!4569 = !DILocation(line: 72, column: 41, scope: !4564)
!4570 = !DILocation(line: 72, column: 47, scope: !4564)
!4571 = !DILocation(line: 72, column: 51, scope: !4564)
!4572 = !DILocation(line: 72, column: 28, scope: !4564)
!4573 = !DILocation(line: 72, column: 57, scope: !4564)
!4574 = !DILocation(line: 72, column: 7, scope: !4554)
!4575 = !DILocation(line: 74, column: 7, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4564, file: !1323, line: 73, column: 5)
!4577 = !DILocation(line: 74, column: 11, scope: !4576)
!4578 = !DILocation(line: 74, column: 19, scope: !4576)
!4579 = !DILocation(line: 75, column: 20, scope: !4576)
!4580 = !DILocation(line: 75, column: 7, scope: !4576)
!4581 = !DILocation(line: 75, column: 11, scope: !4576)
!4582 = !DILocation(line: 75, column: 18, scope: !4576)
!4583 = !DILocation(line: 76, column: 5, scope: !4576)
!4584 = !DILocation(line: 77, column: 12, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4554, file: !1323, line: 77, column: 7)
!4586 = !DILocation(line: 77, column: 16, scope: !4585)
!4587 = !DILocation(line: 77, column: 9, scope: !4585)
!4588 = !DILocation(line: 77, column: 7, scope: !4554)
!4589 = !DILocation(line: 78, column: 5, scope: !4585)
!4590 = !DILocation(line: 79, column: 17, scope: !4554)
!4591 = !DILocation(line: 79, column: 21, scope: !4554)
!4592 = !DILocation(line: 79, column: 11, scope: !4554)
!4593 = !DILocation(line: 79, column: 3, scope: !4554)
!4594 = !DILocation(line: 79, column: 9, scope: !4554)
!4595 = !DILocation(line: 80, column: 3, scope: !4554)
!4596 = !DILocation(line: 81, column: 1, scope: !4554)
!4597 = distinct !DISubprogram(name: "readdir_ignoring_dot_and_dotdot", scope: !141, file: !141, line: 278, type: !1467, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1322, retainedNodes: !143)
!4598 = !DILocalVariable(name: "dirp", arg: 1, scope: !4597, file: !141, line: 278, type: !607)
!4599 = !DILocation(line: 278, column: 39, scope: !4597)
!4600 = !DILocation(line: 280, column: 3, scope: !4597)
!4601 = !DILocalVariable(name: "dp", scope: !4602, file: !141, line: 282, type: !1458)
!4602 = distinct !DILexicalBlock(scope: !4597, file: !141, line: 281, column: 5)
!4603 = !DILocation(line: 282, column: 28, scope: !4602)
!4604 = !DILocation(line: 282, column: 42, scope: !4602)
!4605 = !DILocation(line: 282, column: 33, scope: !4602)
!4606 = !DILocation(line: 283, column: 11, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4602, file: !141, line: 283, column: 11)
!4608 = !DILocation(line: 283, column: 14, scope: !4607)
!4609 = !DILocation(line: 283, column: 22, scope: !4607)
!4610 = !DILocation(line: 283, column: 42, scope: !4607)
!4611 = !DILocation(line: 283, column: 46, scope: !4607)
!4612 = !DILocation(line: 283, column: 27, scope: !4607)
!4613 = !DILocation(line: 283, column: 11, scope: !4602)
!4614 = !DILocation(line: 284, column: 16, scope: !4607)
!4615 = !DILocation(line: 284, column: 9, scope: !4607)
!4616 = distinct !{!4616, !4600, !4617}
!4617 = !DILocation(line: 285, column: 5, scope: !4597)
!4618 = distinct !DISubprogram(name: "set_process_security_ctx", scope: !245, file: !245, line: 893, type: !250, scopeLine: 895, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4619 = !DILocalVariable(name: "src_name", arg: 1, scope: !4618, file: !245, line: 893, type: !115)
!4620 = !DILocation(line: 893, column: 39, scope: !4618)
!4621 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4618, file: !245, line: 893, type: !115)
!4622 = !DILocation(line: 893, column: 61, scope: !4618)
!4623 = !DILocalVariable(name: "mode", arg: 3, scope: !4618, file: !245, line: 894, type: !160)
!4624 = !DILocation(line: 894, column: 34, scope: !4618)
!4625 = !DILocalVariable(name: "new_dst", arg: 4, scope: !4618, file: !245, line: 894, type: !120)
!4626 = !DILocation(line: 894, column: 45, scope: !4618)
!4627 = !DILocalVariable(name: "x", arg: 5, scope: !4618, file: !245, line: 894, type: !252)
!4628 = !DILocation(line: 894, column: 79, scope: !4618)
!4629 = !DILocation(line: 896, column: 7, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4618, file: !245, line: 896, column: 7)
!4631 = !DILocation(line: 896, column: 10, scope: !4630)
!4632 = !DILocation(line: 896, column: 7, scope: !4618)
!4633 = !DILocalVariable(name: "all_errors", scope: !4634, file: !245, line: 899, type: !120)
!4634 = distinct !DILexicalBlock(scope: !4630, file: !245, line: 897, column: 5)
!4635 = !DILocation(line: 899, column: 12, scope: !4634)
!4636 = !DILocation(line: 899, column: 26, scope: !4634)
!4637 = !DILocation(line: 899, column: 29, scope: !4634)
!4638 = !DILocation(line: 899, column: 48, scope: !4634)
!4639 = !DILocation(line: 899, column: 51, scope: !4634)
!4640 = !DILocation(line: 899, column: 54, scope: !4634)
!4641 = !DILocalVariable(name: "some_errors", scope: !4634, file: !245, line: 900, type: !120)
!4642 = !DILocation(line: 900, column: 12, scope: !4634)
!4643 = !DILocation(line: 900, column: 27, scope: !4634)
!4644 = !DILocation(line: 900, column: 38, scope: !4634)
!4645 = !DILocation(line: 900, column: 42, scope: !4634)
!4646 = !DILocation(line: 900, column: 45, scope: !4634)
!4647 = !DILocation(line: 900, column: 41, scope: !4634)
!4648 = !DILocation(line: 0, scope: !4634)
!4649 = !DILocalVariable(name: "con", scope: !4634, file: !245, line: 901, type: !9)
!4650 = !DILocation(line: 901, column: 13, scope: !4634)
!4651 = !DILocation(line: 903, column: 29, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4634, file: !245, line: 903, column: 11)
!4653 = !DILocation(line: 903, column: 16, scope: !4652)
!4654 = !DILocation(line: 903, column: 13, scope: !4652)
!4655 = !DILocation(line: 903, column: 11, scope: !4634)
!4656 = !DILocation(line: 905, column: 31, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !245, line: 905, column: 15)
!4658 = distinct !DILexicalBlock(scope: !4652, file: !245, line: 904, column: 9)
!4659 = !DILocation(line: 905, column: 15, scope: !4657)
!4660 = !DILocation(line: 905, column: 36, scope: !4657)
!4661 = !DILocation(line: 905, column: 15, scope: !4658)
!4662 = !DILocation(line: 907, column: 19, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !245, line: 907, column: 19)
!4664 = distinct !DILexicalBlock(scope: !4657, file: !245, line: 906, column: 13)
!4665 = !DILocation(line: 907, column: 30, scope: !4663)
!4666 = !DILocation(line: 907, column: 34, scope: !4663)
!4667 = !DILocation(line: 907, column: 46, scope: !4663)
!4668 = !DILocation(line: 907, column: 69, scope: !4663)
!4669 = !DILocation(line: 907, column: 50, scope: !4663)
!4670 = !DILocation(line: 907, column: 19, scope: !4664)
!4671 = !DILocation(line: 908, column: 27, scope: !4663)
!4672 = !DILocation(line: 909, column: 24, scope: !4663)
!4673 = !DILocation(line: 910, column: 31, scope: !4663)
!4674 = !DILocation(line: 910, column: 24, scope: !4663)
!4675 = !DILocation(line: 908, column: 17, scope: !4663)
!4676 = !DILocation(line: 911, column: 19, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4664, file: !245, line: 911, column: 19)
!4678 = !DILocation(line: 911, column: 22, scope: !4677)
!4679 = !DILocation(line: 911, column: 19, scope: !4664)
!4680 = !DILocation(line: 913, column: 28, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4677, file: !245, line: 912, column: 17)
!4682 = !DILocation(line: 913, column: 19, scope: !4681)
!4683 = !DILocation(line: 914, column: 19, scope: !4681)
!4684 = !DILocation(line: 916, column: 13, scope: !4664)
!4685 = !DILocation(line: 917, column: 20, scope: !4658)
!4686 = !DILocation(line: 917, column: 11, scope: !4658)
!4687 = !DILocation(line: 918, column: 9, scope: !4658)
!4688 = !DILocation(line: 921, column: 15, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !245, line: 921, column: 15)
!4690 = distinct !DILexicalBlock(scope: !4652, file: !245, line: 920, column: 9)
!4691 = !DILocation(line: 921, column: 26, scope: !4689)
!4692 = !DILocation(line: 921, column: 30, scope: !4689)
!4693 = !DILocation(line: 921, column: 42, scope: !4689)
!4694 = !DILocation(line: 921, column: 65, scope: !4689)
!4695 = !DILocation(line: 921, column: 46, scope: !4689)
!4696 = !DILocation(line: 921, column: 15, scope: !4690)
!4697 = !DILocation(line: 923, column: 25, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4689, file: !245, line: 922, column: 13)
!4699 = !DILocation(line: 924, column: 22, scope: !4698)
!4700 = !DILocation(line: 925, column: 22, scope: !4698)
!4701 = !DILocation(line: 923, column: 15, scope: !4698)
!4702 = !DILocation(line: 926, column: 13, scope: !4698)
!4703 = !DILocation(line: 927, column: 15, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4690, file: !245, line: 927, column: 15)
!4705 = !DILocation(line: 927, column: 18, scope: !4704)
!4706 = !DILocation(line: 927, column: 15, scope: !4690)
!4707 = !DILocation(line: 928, column: 13, scope: !4704)
!4708 = !DILocation(line: 930, column: 5, scope: !4634)
!4709 = !DILocation(line: 931, column: 12, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4630, file: !245, line: 931, column: 12)
!4711 = !DILocation(line: 931, column: 15, scope: !4710)
!4712 = !DILocation(line: 931, column: 12, scope: !4630)
!4713 = !DILocation(line: 935, column: 11, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !245, line: 935, column: 11)
!4715 = distinct !DILexicalBlock(scope: !4710, file: !245, line: 932, column: 5)
!4716 = !DILocation(line: 935, column: 19, scope: !4714)
!4717 = !DILocation(line: 935, column: 34, scope: !4714)
!4718 = !DILocation(line: 935, column: 44, scope: !4714)
!4719 = !DILocation(line: 935, column: 22, scope: !4714)
!4720 = !DILocation(line: 935, column: 50, scope: !4714)
!4721 = !DILocation(line: 936, column: 11, scope: !4714)
!4722 = !DILocation(line: 936, column: 35, scope: !4714)
!4723 = !DILocation(line: 936, column: 16, scope: !4714)
!4724 = !DILocation(line: 935, column: 11, scope: !4715)
!4725 = !DILocation(line: 938, column: 21, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4714, file: !245, line: 937, column: 9)
!4727 = !DILocation(line: 939, column: 18, scope: !4726)
!4728 = !DILocation(line: 940, column: 18, scope: !4726)
!4729 = !DILocation(line: 938, column: 11, scope: !4726)
!4730 = !DILocation(line: 941, column: 9, scope: !4726)
!4731 = !DILocation(line: 942, column: 5, scope: !4715)
!4732 = !DILocation(line: 944, column: 3, scope: !4618)
!4733 = !DILocation(line: 945, column: 1, scope: !4618)
!4734 = distinct !DISubprogram(name: "errno_unsupported", scope: !245, file: !245, line: 596, type: !307, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4735 = !DILocalVariable(name: "err", arg: 1, scope: !4734, file: !245, line: 596, type: !7)
!4736 = !DILocation(line: 596, column: 24, scope: !4734)
!4737 = !DILocation(line: 598, column: 10, scope: !4734)
!4738 = !DILocation(line: 598, column: 14, scope: !4734)
!4739 = !DILocation(line: 598, column: 25, scope: !4734)
!4740 = !DILocation(line: 598, column: 28, scope: !4734)
!4741 = !DILocation(line: 598, column: 32, scope: !4734)
!4742 = !DILocation(line: 598, column: 3, scope: !4734)
!4743 = distinct !DISubprogram(name: "defaultcon", scope: !4744, file: !4744, line: 44, type: !309, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4744 = !DIFile(filename: "src/selinux.h", directory: "/home/mbarbar/software/coreutils-8.31")
!4745 = !DILocalVariable(name: "path", arg: 1, scope: !4743, file: !4744, line: 44, type: !115)
!4746 = !DILocation(line: 44, column: 25, scope: !4743)
!4747 = !DILocalVariable(name: "mode", arg: 2, scope: !4743, file: !4744, line: 44, type: !160)
!4748 = !DILocation(line: 44, column: 38, scope: !4743)
!4749 = !DILocation(line: 45, column: 3, scope: !4743)
!4750 = !DILocation(line: 45, column: 9, scope: !4743)
!4751 = !DILocation(line: 45, column: 20, scope: !4743)
!4752 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !4744, file: !4744, line: 25, type: !307, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4753 = !DILocalVariable(name: "err", arg: 1, scope: !4752, file: !4744, line: 25, type: !7)
!4754 = !DILocation(line: 25, column: 24, scope: !4752)
!4755 = !DILocation(line: 27, column: 10, scope: !4752)
!4756 = !DILocation(line: 27, column: 14, scope: !4752)
!4757 = !DILocation(line: 27, column: 25, scope: !4752)
!4758 = !DILocation(line: 27, column: 28, scope: !4752)
!4759 = !DILocation(line: 27, column: 32, scope: !4752)
!4760 = !DILocation(line: 27, column: 3, scope: !4752)
!4761 = distinct !DISubprogram(name: "set_file_security_ctx", scope: !245, file: !245, line: 955, type: !295, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4762 = !DILocalVariable(name: "dst_name", arg: 1, scope: !4761, file: !245, line: 955, type: !115)
!4763 = !DILocation(line: 955, column: 36, scope: !4761)
!4764 = !DILocalVariable(name: "process_local", arg: 2, scope: !4761, file: !245, line: 955, type: !120)
!4765 = !DILocation(line: 955, column: 51, scope: !4761)
!4766 = !DILocalVariable(name: "recurse", arg: 3, scope: !4761, file: !245, line: 956, type: !120)
!4767 = !DILocation(line: 956, column: 29, scope: !4761)
!4768 = !DILocalVariable(name: "x", arg: 4, scope: !4761, file: !245, line: 956, type: !252)
!4769 = !DILocation(line: 956, column: 63, scope: !4761)
!4770 = !DILocalVariable(name: "all_errors", scope: !4761, file: !245, line: 958, type: !120)
!4771 = !DILocation(line: 958, column: 8, scope: !4761)
!4772 = !DILocation(line: 958, column: 23, scope: !4761)
!4773 = !DILocation(line: 958, column: 26, scope: !4761)
!4774 = !DILocation(line: 959, column: 22, scope: !4761)
!4775 = !DILocation(line: 959, column: 25, scope: !4761)
!4776 = !DILocation(line: 959, column: 28, scope: !4761)
!4777 = !DILocalVariable(name: "some_errors", scope: !4761, file: !245, line: 960, type: !120)
!4778 = !DILocation(line: 960, column: 8, scope: !4761)
!4779 = !DILocation(line: 960, column: 23, scope: !4761)
!4780 = !DILocation(line: 960, column: 34, scope: !4761)
!4781 = !DILocation(line: 960, column: 38, scope: !4761)
!4782 = !DILocation(line: 960, column: 41, scope: !4761)
!4783 = !DILocation(line: 960, column: 37, scope: !4761)
!4784 = !DILocation(line: 0, scope: !4761)
!4785 = !DILocation(line: 962, column: 21, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4761, file: !245, line: 962, column: 7)
!4787 = !DILocation(line: 962, column: 31, scope: !4786)
!4788 = !DILocation(line: 962, column: 40, scope: !4786)
!4789 = !DILocation(line: 962, column: 9, scope: !4786)
!4790 = !DILocation(line: 962, column: 7, scope: !4761)
!4791 = !DILocation(line: 964, column: 11, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4793, file: !245, line: 964, column: 11)
!4793 = distinct !DILexicalBlock(scope: !4786, file: !245, line: 963, column: 5)
!4794 = !DILocation(line: 964, column: 22, scope: !4792)
!4795 = !DILocation(line: 964, column: 26, scope: !4792)
!4796 = !DILocation(line: 964, column: 38, scope: !4792)
!4797 = !DILocation(line: 964, column: 61, scope: !4792)
!4798 = !DILocation(line: 964, column: 42, scope: !4792)
!4799 = !DILocation(line: 964, column: 11, scope: !4793)
!4800 = !DILocation(line: 965, column: 19, scope: !4792)
!4801 = !DILocation(line: 965, column: 26, scope: !4792)
!4802 = !DILocation(line: 966, column: 16, scope: !4792)
!4803 = !DILocation(line: 965, column: 9, scope: !4792)
!4804 = !DILocation(line: 967, column: 7, scope: !4793)
!4805 = !DILocation(line: 970, column: 3, scope: !4761)
!4806 = !DILocation(line: 971, column: 1, scope: !4761)
!4807 = distinct !DISubprogram(name: "restorecon", scope: !4744, file: !4744, line: 40, type: !311, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4808 = !DILocalVariable(name: "path", arg: 1, scope: !4807, file: !4744, line: 40, type: !115)
!4809 = !DILocation(line: 40, column: 25, scope: !4807)
!4810 = !DILocalVariable(name: "recurse", arg: 2, scope: !4807, file: !4744, line: 40, type: !120)
!4811 = !DILocation(line: 40, column: 36, scope: !4807)
!4812 = !DILocalVariable(name: "preserve", arg: 3, scope: !4807, file: !4744, line: 40, type: !120)
!4813 = !DILocation(line: 40, column: 50, scope: !4807)
!4814 = !DILocation(line: 41, column: 3, scope: !4807)
!4815 = !DILocation(line: 41, column: 9, scope: !4807)
!4816 = !DILocation(line: 41, column: 20, scope: !4807)
!4817 = distinct !DISubprogram(name: "dest_info_init", scope: !245, file: !245, line: 1703, type: !297, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4818 = !DILocalVariable(name: "x", arg: 1, scope: !4817, file: !245, line: 1703, type: !299)
!4819 = !DILocation(line: 1703, column: 36, scope: !4817)
!4820 = !DILocation(line: 1706, column: 7, scope: !4817)
!4821 = !DILocation(line: 1705, column: 3, scope: !4817)
!4822 = !DILocation(line: 1705, column: 6, scope: !4817)
!4823 = !DILocation(line: 1706, column: 5, scope: !4817)
!4824 = !DILocation(line: 1711, column: 1, scope: !4817)
!4825 = distinct !DISubprogram(name: "src_info_init", scope: !245, file: !245, line: 1716, type: !297, scopeLine: 1717, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4826 = !DILocalVariable(name: "x", arg: 1, scope: !4825, file: !245, line: 1716, type: !299)
!4827 = !DILocation(line: 1716, column: 35, scope: !4825)
!4828 = !DILocation(line: 1728, column: 7, scope: !4825)
!4829 = !DILocation(line: 1727, column: 3, scope: !4825)
!4830 = !DILocation(line: 1727, column: 6, scope: !4825)
!4831 = !DILocation(line: 1728, column: 5, scope: !4825)
!4832 = !DILocation(line: 1733, column: 1, scope: !4825)
!4833 = distinct !DISubprogram(name: "copy", scope: !245, file: !245, line: 2971, type: !300, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4834 = !DILocalVariable(name: "src_name", arg: 1, scope: !4833, file: !245, line: 2971, type: !115)
!4835 = !DILocation(line: 2971, column: 19, scope: !4833)
!4836 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4833, file: !245, line: 2971, type: !115)
!4837 = !DILocation(line: 2971, column: 41, scope: !4833)
!4838 = !DILocalVariable(name: "nonexistent_dst", arg: 3, scope: !4833, file: !245, line: 2972, type: !120)
!4839 = !DILocation(line: 2972, column: 12, scope: !4833)
!4840 = !DILocalVariable(name: "options", arg: 4, scope: !4833, file: !245, line: 2972, type: !252)
!4841 = !DILocation(line: 2972, column: 54, scope: !4833)
!4842 = !DILocalVariable(name: "copy_into_self", arg: 5, scope: !4833, file: !245, line: 2973, type: !302)
!4843 = !DILocation(line: 2973, column: 13, scope: !4833)
!4844 = !DILocalVariable(name: "rename_succeeded", arg: 6, scope: !4833, file: !245, line: 2973, type: !302)
!4845 = !DILocation(line: 2973, column: 35, scope: !4833)
!4846 = !DILocation(line: 2975, column: 3, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4848, file: !245, line: 2975, column: 3)
!4848 = distinct !DILexicalBlock(scope: !4833, file: !245, line: 2975, column: 3)
!4849 = !DILocation(line: 2975, column: 3, scope: !4848)
!4850 = !DILocation(line: 2984, column: 24, scope: !4833)
!4851 = !DILocation(line: 2984, column: 22, scope: !4833)
!4852 = !DILocation(line: 2985, column: 24, scope: !4833)
!4853 = !DILocation(line: 2985, column: 22, scope: !4833)
!4854 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", scope: !4833, file: !245, line: 2987, type: !120)
!4855 = !DILocation(line: 2987, column: 8, scope: !4833)
!4856 = !DILocation(line: 2988, column: 25, scope: !4833)
!4857 = !DILocation(line: 2988, column: 35, scope: !4833)
!4858 = !DILocation(line: 2988, column: 45, scope: !4833)
!4859 = !DILocation(line: 2989, column: 25, scope: !4833)
!4860 = !DILocation(line: 2991, column: 25, scope: !4833)
!4861 = !DILocation(line: 2991, column: 41, scope: !4833)
!4862 = !DILocation(line: 2988, column: 10, scope: !4833)
!4863 = !DILocation(line: 2988, column: 3, scope: !4833)
!4864 = distinct !DISubprogram(name: "valid_options", scope: !245, file: !245, line: 2948, type: !303, scopeLine: 2949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4865 = !DILocalVariable(name: "co", arg: 1, scope: !4864, file: !245, line: 2948, type: !252)
!4866 = !DILocation(line: 2948, column: 41, scope: !4864)
!4867 = !DILocation(line: 2950, column: 3, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4869, file: !245, line: 2950, column: 3)
!4869 = distinct !DILexicalBlock(scope: !4864, file: !245, line: 2950, column: 3)
!4870 = !DILocation(line: 2950, column: 3, scope: !4869)
!4871 = !DILocation(line: 2951, column: 3, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !245, line: 2951, column: 3)
!4873 = distinct !DILexicalBlock(scope: !4864, file: !245, line: 2951, column: 3)
!4874 = !DILocation(line: 2951, column: 3, scope: !4873)
!4875 = !DILocation(line: 2952, column: 3, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4877, file: !245, line: 2952, column: 3)
!4877 = distinct !DILexicalBlock(scope: !4864, file: !245, line: 2952, column: 3)
!4878 = !DILocation(line: 2952, column: 3, scope: !4877)
!4879 = !DILocation(line: 2953, column: 3, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4881, file: !245, line: 2953, column: 3)
!4881 = distinct !DILexicalBlock(scope: !4864, file: !245, line: 2953, column: 3)
!4882 = !DILocation(line: 2953, column: 3, scope: !4881)
!4883 = !DILocation(line: 2954, column: 3, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4885, file: !245, line: 2954, column: 3)
!4885 = distinct !DILexicalBlock(scope: !4864, file: !245, line: 2954, column: 3)
!4886 = !DILocation(line: 2954, column: 3, scope: !4885)
!4887 = !DILocation(line: 2955, column: 3, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !245, line: 2955, column: 3)
!4889 = distinct !DILexicalBlock(scope: !4864, file: !245, line: 2955, column: 3)
!4890 = !DILocation(line: 2955, column: 3, scope: !4889)
!4891 = !DILocation(line: 2958, column: 3, scope: !4864)
!4892 = distinct !DISubprogram(name: "copy_internal", scope: !245, file: !245, line: 1846, type: !313, scopeLine: 1855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4893 = !DILocalVariable(name: "src_name", arg: 1, scope: !4892, file: !245, line: 1846, type: !115)
!4894 = !DILocation(line: 1846, column: 28, scope: !4892)
!4895 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4892, file: !245, line: 1846, type: !115)
!4896 = !DILocation(line: 1846, column: 50, scope: !4892)
!4897 = !DILocalVariable(name: "new_dst", arg: 3, scope: !4892, file: !245, line: 1847, type: !120)
!4898 = !DILocation(line: 1847, column: 21, scope: !4892)
!4899 = !DILocalVariable(name: "parent", arg: 4, scope: !4892, file: !245, line: 1848, type: !315)
!4900 = !DILocation(line: 1848, column: 35, scope: !4892)
!4901 = !DILocalVariable(name: "ancestors", arg: 5, scope: !4892, file: !245, line: 1849, type: !350)
!4902 = !DILocation(line: 1849, column: 33, scope: !4892)
!4903 = !DILocalVariable(name: "x", arg: 6, scope: !4892, file: !245, line: 1850, type: !252)
!4904 = !DILocation(line: 1850, column: 41, scope: !4892)
!4905 = !DILocalVariable(name: "command_line_arg", arg: 7, scope: !4892, file: !245, line: 1851, type: !120)
!4906 = !DILocation(line: 1851, column: 21, scope: !4892)
!4907 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 8, scope: !4892, file: !245, line: 1852, type: !302)
!4908 = !DILocation(line: 1852, column: 22, scope: !4892)
!4909 = !DILocalVariable(name: "copy_into_self", arg: 9, scope: !4892, file: !245, line: 1853, type: !302)
!4910 = !DILocation(line: 1853, column: 22, scope: !4892)
!4911 = !DILocalVariable(name: "rename_succeeded", arg: 10, scope: !4892, file: !245, line: 1854, type: !302)
!4912 = !DILocation(line: 1854, column: 22, scope: !4892)
!4913 = !DILocalVariable(name: "src_sb", scope: !4892, file: !245, line: 1856, type: !317)
!4914 = !DILocation(line: 1856, column: 15, scope: !4892)
!4915 = !DILocalVariable(name: "dst_sb", scope: !4892, file: !245, line: 1857, type: !317)
!4916 = !DILocation(line: 1857, column: 15, scope: !4892)
!4917 = !DILocalVariable(name: "src_mode", scope: !4892, file: !245, line: 1858, type: !160)
!4918 = !DILocation(line: 1858, column: 10, scope: !4892)
!4919 = !DILocalVariable(name: "dst_mode", scope: !4892, file: !245, line: 1859, type: !160)
!4920 = !DILocation(line: 1859, column: 10, scope: !4892)
!4921 = !DILocalVariable(name: "dst_mode_bits", scope: !4892, file: !245, line: 1860, type: !160)
!4922 = !DILocation(line: 1860, column: 10, scope: !4892)
!4923 = !DILocalVariable(name: "omitted_permissions", scope: !4892, file: !245, line: 1861, type: !160)
!4924 = !DILocation(line: 1861, column: 10, scope: !4892)
!4925 = !DILocalVariable(name: "restore_dst_mode", scope: !4892, file: !245, line: 1862, type: !120)
!4926 = !DILocation(line: 1862, column: 8, scope: !4892)
!4927 = !DILocalVariable(name: "earlier_file", scope: !4892, file: !245, line: 1863, type: !9)
!4928 = !DILocation(line: 1863, column: 9, scope: !4892)
!4929 = !DILocalVariable(name: "dst_backup", scope: !4892, file: !245, line: 1864, type: !9)
!4930 = !DILocation(line: 1864, column: 9, scope: !4892)
!4931 = !DILocalVariable(name: "delayed_ok", scope: !4892, file: !245, line: 1865, type: !120)
!4932 = !DILocation(line: 1865, column: 8, scope: !4892)
!4933 = !DILocalVariable(name: "copied_as_regular", scope: !4892, file: !245, line: 1866, type: !120)
!4934 = !DILocation(line: 1866, column: 8, scope: !4892)
!4935 = !DILocalVariable(name: "dest_is_symlink", scope: !4892, file: !245, line: 1867, type: !120)
!4936 = !DILocation(line: 1867, column: 8, scope: !4892)
!4937 = !DILocalVariable(name: "have_dst_lstat", scope: !4892, file: !245, line: 1868, type: !120)
!4938 = !DILocation(line: 1868, column: 8, scope: !4892)
!4939 = !DILocation(line: 1870, column: 4, scope: !4892)
!4940 = !DILocation(line: 1870, column: 19, scope: !4892)
!4941 = !DILocalVariable(name: "rename_errno", scope: !4892, file: !245, line: 1872, type: !7)
!4942 = !DILocation(line: 1872, column: 7, scope: !4892)
!4943 = !DILocation(line: 1872, column: 22, scope: !4892)
!4944 = !DILocation(line: 1872, column: 25, scope: !4892)
!4945 = !DILocation(line: 1873, column: 7, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 1873, column: 7)
!4947 = !DILocation(line: 1873, column: 10, scope: !4946)
!4948 = !DILocation(line: 1873, column: 7, scope: !4892)
!4949 = !DILocation(line: 1875, column: 11, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4951, file: !245, line: 1875, column: 11)
!4951 = distinct !DILexicalBlock(scope: !4946, file: !245, line: 1874, column: 5)
!4952 = !DILocation(line: 1875, column: 24, scope: !4950)
!4953 = !DILocation(line: 1875, column: 11, scope: !4951)
!4954 = !DILocation(line: 1876, column: 46, scope: !4950)
!4955 = !DILocation(line: 1876, column: 66, scope: !4950)
!4956 = !DILocation(line: 1876, column: 25, scope: !4950)
!4957 = !DILocation(line: 1878, column: 27, scope: !4950)
!4958 = !DILocation(line: 1876, column: 22, scope: !4950)
!4959 = !DILocation(line: 1876, column: 9, scope: !4950)
!4960 = !DILocation(line: 1879, column: 17, scope: !4951)
!4961 = !DILocation(line: 1879, column: 30, scope: !4951)
!4962 = !DILocation(line: 1879, column: 15, scope: !4951)
!4963 = !DILocation(line: 1880, column: 11, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4951, file: !245, line: 1880, column: 11)
!4965 = !DILocation(line: 1880, column: 11, scope: !4951)
!4966 = !DILocation(line: 1881, column: 29, scope: !4964)
!4967 = !DILocation(line: 1881, column: 10, scope: !4964)
!4968 = !DILocation(line: 1881, column: 27, scope: !4964)
!4969 = !DILocation(line: 1881, column: 9, scope: !4964)
!4970 = !DILocation(line: 1882, column: 5, scope: !4951)
!4971 = !DILocation(line: 1884, column: 7, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 1884, column: 7)
!4973 = !DILocation(line: 1884, column: 20, scope: !4972)
!4974 = !DILocation(line: 1884, column: 7, scope: !4892)
!4975 = !DILocation(line: 1885, column: 10, scope: !4972)
!4976 = !DILocation(line: 1885, column: 13, scope: !4972)
!4977 = !DILocation(line: 1886, column: 9, scope: !4972)
!4978 = !DILocation(line: 1886, column: 22, scope: !4972)
!4979 = !DILocation(line: 1886, column: 32, scope: !4972)
!4980 = !DILocation(line: 1886, column: 35, scope: !4972)
!4981 = !DILocation(line: 1886, column: 38, scope: !4972)
!4982 = !DILocation(line: 1886, column: 50, scope: !4972)
!4983 = !DILocalVariable(name: "name", scope: !4984, file: !245, line: 1888, type: !115)
!4984 = distinct !DILexicalBlock(scope: !4972, file: !245, line: 1887, column: 5)
!4985 = !DILocation(line: 1888, column: 19, scope: !4984)
!4986 = !DILocation(line: 1888, column: 26, scope: !4984)
!4987 = !DILocation(line: 1888, column: 39, scope: !4984)
!4988 = !DILocation(line: 1888, column: 46, scope: !4984)
!4989 = !DILocation(line: 1888, column: 57, scope: !4984)
!4990 = !DILocation(line: 1889, column: 11, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4984, file: !245, line: 1889, column: 11)
!4992 = !DILocation(line: 1889, column: 36, scope: !4991)
!4993 = !DILocation(line: 1889, column: 11, scope: !4984)
!4994 = !DILocation(line: 1891, column: 21, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4991, file: !245, line: 1890, column: 9)
!4996 = !DILocation(line: 1891, column: 28, scope: !4995)
!4997 = !DILocation(line: 1891, column: 49, scope: !4995)
!4998 = !DILocation(line: 1891, column: 11, scope: !4995)
!4999 = !DILocation(line: 1892, column: 11, scope: !4995)
!5000 = !DILocation(line: 1895, column: 25, scope: !4984)
!5001 = !DILocation(line: 1895, column: 16, scope: !4984)
!5002 = !DILocation(line: 1897, column: 11, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4984, file: !245, line: 1897, column: 11)
!5004 = !DILocation(line: 1897, column: 30, scope: !5003)
!5005 = !DILocation(line: 1897, column: 34, scope: !5003)
!5006 = !DILocation(line: 1897, column: 37, scope: !5003)
!5007 = !DILocation(line: 1897, column: 11, scope: !4984)
!5008 = !DILocation(line: 1899, column: 26, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5003, file: !245, line: 1898, column: 9)
!5010 = !DILocation(line: 1899, column: 29, scope: !5009)
!5011 = !DILocation(line: 1899, column: 24, scope: !5009)
!5012 = !DILocation(line: 1900, column: 20, scope: !5009)
!5013 = !DILocation(line: 1901, column: 20, scope: !5009)
!5014 = !DILocation(line: 1902, column: 18, scope: !5009)
!5015 = !DILocation(line: 1899, column: 11, scope: !5009)
!5016 = !DILocation(line: 1903, column: 11, scope: !5009)
!5017 = !DILocation(line: 1905, column: 5, scope: !4984)
!5018 = !DILocation(line: 1918, column: 7, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 1918, column: 7)
!5020 = !DILocation(line: 1918, column: 24, scope: !5019)
!5021 = !DILocation(line: 1918, column: 27, scope: !5019)
!5022 = !DILocation(line: 1918, column: 30, scope: !5019)
!5023 = !DILocation(line: 1918, column: 7, scope: !4892)
!5024 = !DILocation(line: 1920, column: 14, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5026, file: !245, line: 1920, column: 12)
!5026 = distinct !DILexicalBlock(scope: !5019, file: !245, line: 1919, column: 5)
!5027 = !DILocation(line: 1921, column: 12, scope: !5025)
!5028 = !DILocation(line: 1921, column: 15, scope: !5025)
!5029 = !DILocation(line: 1921, column: 18, scope: !5025)
!5030 = !DILocation(line: 1921, column: 30, scope: !5025)
!5031 = !DILocation(line: 1922, column: 12, scope: !5025)
!5032 = !DILocation(line: 1922, column: 26, scope: !5025)
!5033 = !DILocation(line: 1922, column: 29, scope: !5025)
!5034 = !DILocation(line: 1922, column: 39, scope: !5025)
!5035 = !DILocation(line: 1922, column: 15, scope: !5025)
!5036 = !DILocation(line: 1920, column: 12, scope: !5026)
!5037 = !DILocation(line: 1924, column: 24, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5025, file: !245, line: 1923, column: 9)
!5039 = !DILocation(line: 1925, column: 18, scope: !5038)
!5040 = !DILocation(line: 1924, column: 11, scope: !5038)
!5041 = !DILocation(line: 1926, column: 11, scope: !5038)
!5042 = !DILocation(line: 1929, column: 20, scope: !5026)
!5043 = !DILocation(line: 1929, column: 23, scope: !5026)
!5044 = !DILocation(line: 1929, column: 33, scope: !5026)
!5045 = !DILocation(line: 1929, column: 7, scope: !5026)
!5046 = !DILocation(line: 1930, column: 5, scope: !5026)
!5047 = !DILocalVariable(name: "dereference", scope: !4892, file: !245, line: 1932, type: !120)
!5048 = !DILocation(line: 1932, column: 8, scope: !4892)
!5049 = !DILocation(line: 1932, column: 42, scope: !4892)
!5050 = !DILocation(line: 1932, column: 45, scope: !4892)
!5051 = !DILocation(line: 1932, column: 22, scope: !4892)
!5052 = !DILocation(line: 1934, column: 8, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 1934, column: 7)
!5054 = !DILocation(line: 1934, column: 7, scope: !4892)
!5055 = !DILocation(line: 1936, column: 14, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5057, file: !245, line: 1936, column: 11)
!5057 = distinct !DILexicalBlock(scope: !5053, file: !245, line: 1935, column: 5)
!5058 = !DILocation(line: 1936, column: 27, scope: !5056)
!5059 = !DILocation(line: 1936, column: 37, scope: !5056)
!5060 = !DILocation(line: 1936, column: 40, scope: !5056)
!5061 = !DILocation(line: 1936, column: 43, scope: !5056)
!5062 = !DILocation(line: 1936, column: 55, scope: !5056)
!5063 = !DILocation(line: 1936, column: 11, scope: !5057)
!5064 = !DILocalVariable(name: "use_lstat", scope: !5065, file: !245, line: 1944, type: !120)
!5065 = distinct !DILexicalBlock(scope: !5056, file: !245, line: 1937, column: 9)
!5066 = !DILocation(line: 1944, column: 16, scope: !5065)
!5067 = !DILocation(line: 1945, column: 19, scope: !5065)
!5068 = !DILocation(line: 1946, column: 17, scope: !5065)
!5069 = !DILocation(line: 1946, column: 23, scope: !5065)
!5070 = !DILocation(line: 1946, column: 26, scope: !5065)
!5071 = !DILocation(line: 1947, column: 21, scope: !5065)
!5072 = !DILocation(line: 1947, column: 24, scope: !5065)
!5073 = !DILocation(line: 1947, column: 43, scope: !5065)
!5074 = !DILocation(line: 1947, column: 46, scope: !5065)
!5075 = !DILocation(line: 1948, column: 16, scope: !5065)
!5076 = !DILocation(line: 1948, column: 19, scope: !5065)
!5077 = !DILocation(line: 1948, column: 22, scope: !5065)
!5078 = !DILocation(line: 1948, column: 32, scope: !5065)
!5079 = !DILocation(line: 1948, column: 35, scope: !5065)
!5080 = !DILocation(line: 1948, column: 38, scope: !5065)
!5081 = !DILocation(line: 1948, column: 52, scope: !5065)
!5082 = !DILocation(line: 1948, column: 55, scope: !5065)
!5083 = !DILocation(line: 1948, column: 58, scope: !5065)
!5084 = !DILocation(line: 1949, column: 16, scope: !5065)
!5085 = !DILocation(line: 1949, column: 19, scope: !5065)
!5086 = !DILocation(line: 1949, column: 22, scope: !5065)
!5087 = !DILocation(line: 1949, column: 34, scope: !5065)
!5088 = !DILocation(line: 1950, column: 16, scope: !5065)
!5089 = !DILocation(line: 1950, column: 19, scope: !5065)
!5090 = !DILocation(line: 1950, column: 22, scope: !5065)
!5091 = !DILocalVariable(name: "fstatat_flags", scope: !5065, file: !245, line: 1951, type: !7)
!5092 = !DILocation(line: 1951, column: 15, scope: !5065)
!5093 = !DILocation(line: 1951, column: 31, scope: !5065)
!5094 = !DILocation(line: 1952, column: 34, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5065, file: !245, line: 1952, column: 15)
!5096 = !DILocation(line: 1952, column: 53, scope: !5095)
!5097 = !DILocation(line: 1952, column: 15, scope: !5095)
!5098 = !DILocation(line: 1952, column: 68, scope: !5095)
!5099 = !DILocation(line: 1952, column: 15, scope: !5065)
!5100 = !DILocation(line: 1954, column: 32, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5095, file: !245, line: 1953, column: 13)
!5102 = !DILocation(line: 1954, column: 30, scope: !5101)
!5103 = !DILocation(line: 1955, column: 28, scope: !5101)
!5104 = !DILocation(line: 1956, column: 13, scope: !5101)
!5105 = !DILocation(line: 1959, column: 19, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5107, file: !245, line: 1959, column: 19)
!5107 = distinct !DILexicalBlock(scope: !5095, file: !245, line: 1958, column: 13)
!5108 = !DILocation(line: 1959, column: 25, scope: !5106)
!5109 = !DILocation(line: 1959, column: 34, scope: !5106)
!5110 = !DILocation(line: 1959, column: 37, scope: !5106)
!5111 = !DILocation(line: 1959, column: 40, scope: !5106)
!5112 = !DILocation(line: 1959, column: 19, scope: !5107)
!5113 = !DILocation(line: 1961, column: 24, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5106, file: !245, line: 1961, column: 24)
!5115 = !DILocation(line: 1961, column: 30, scope: !5114)
!5116 = !DILocation(line: 1961, column: 24, scope: !5106)
!5117 = !DILocation(line: 1963, column: 29, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5114, file: !245, line: 1962, column: 17)
!5119 = !DILocation(line: 1963, column: 36, scope: !5118)
!5120 = !DILocation(line: 1963, column: 57, scope: !5118)
!5121 = !DILocation(line: 1963, column: 19, scope: !5118)
!5122 = !DILocation(line: 1964, column: 19, scope: !5118)
!5123 = !DILocation(line: 1967, column: 25, scope: !5114)
!5124 = !DILocation(line: 1969, column: 9, scope: !5065)
!5125 = !DILocation(line: 1971, column: 11, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5057, file: !245, line: 1971, column: 11)
!5127 = !DILocation(line: 1971, column: 24, scope: !5126)
!5128 = !DILocation(line: 1971, column: 11, scope: !5057)
!5129 = !DILocalVariable(name: "return_now", scope: !5130, file: !245, line: 1973, type: !120)
!5130 = distinct !DILexicalBlock(scope: !5126, file: !245, line: 1972, column: 9)
!5131 = !DILocation(line: 1973, column: 16, scope: !5130)
!5132 = !DILocation(line: 1975, column: 15, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5130, file: !245, line: 1975, column: 15)
!5134 = !DILocation(line: 1975, column: 18, scope: !5133)
!5135 = !DILocation(line: 1975, column: 30, scope: !5133)
!5136 = !DILocation(line: 1976, column: 15, scope: !5133)
!5137 = !DILocation(line: 1976, column: 34, scope: !5133)
!5138 = !DILocation(line: 1976, column: 53, scope: !5133)
!5139 = !DILocation(line: 1977, column: 34, scope: !5133)
!5140 = !DILocation(line: 1976, column: 20, scope: !5133)
!5141 = !DILocation(line: 1975, column: 15, scope: !5130)
!5142 = !DILocation(line: 1979, column: 28, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5133, file: !245, line: 1978, column: 13)
!5144 = !DILocation(line: 1980, column: 22, scope: !5143)
!5145 = !DILocation(line: 1980, column: 47, scope: !5143)
!5146 = !DILocation(line: 1979, column: 15, scope: !5143)
!5147 = !DILocation(line: 1981, column: 15, scope: !5143)
!5148 = !DILocation(line: 1984, column: 15, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5130, file: !245, line: 1984, column: 15)
!5150 = !DILocation(line: 1984, column: 18, scope: !5149)
!5151 = !DILocation(line: 1984, column: 25, scope: !5149)
!5152 = !DILocation(line: 1984, column: 29, scope: !5149)
!5153 = !DILocation(line: 1984, column: 15, scope: !5130)
!5154 = !DILocalVariable(name: "options", scope: !5155, file: !245, line: 1990, type: !7)
!5155 = distinct !DILexicalBlock(scope: !5149, file: !245, line: 1985, column: 13)
!5156 = !DILocation(line: 1990, column: 19, scope: !5155)
!5157 = !DILocation(line: 1990, column: 31, scope: !5155)
!5158 = !DILocation(line: 1990, column: 34, scope: !5155)
!5159 = !DILocation(line: 1991, column: 31, scope: !5155)
!5160 = !DILocation(line: 1991, column: 37, scope: !5155)
!5161 = !DILocation(line: 1991, column: 40, scope: !5155)
!5162 = !DILocation(line: 1992, column: 37, scope: !5155)
!5163 = !DILocation(line: 1992, column: 47, scope: !5155)
!5164 = !DILocation(line: 1992, column: 64, scope: !5155)
!5165 = !DILocation(line: 1992, column: 54, scope: !5155)
!5166 = !DILocation(line: 0, scope: !5155)
!5167 = !DILocation(line: 1991, column: 34, scope: !5155)
!5168 = !DILocation(line: 1990, column: 30, scope: !5155)
!5169 = !DILocation(line: 1996, column: 34, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5155, file: !245, line: 1996, column: 19)
!5171 = !DILocation(line: 1996, column: 62, scope: !5170)
!5172 = !DILocation(line: 1996, column: 24, scope: !5170)
!5173 = !DILocation(line: 1996, column: 21, scope: !5170)
!5174 = !DILocation(line: 1996, column: 19, scope: !5155)
!5175 = !DILocation(line: 2002, column: 23, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5177, file: !245, line: 2002, column: 23)
!5177 = distinct !DILexicalBlock(scope: !5170, file: !245, line: 1997, column: 17)
!5178 = !DILocation(line: 2002, column: 23, scope: !5177)
!5179 = !DILocation(line: 2003, column: 22, scope: !5176)
!5180 = !DILocation(line: 2003, column: 39, scope: !5176)
!5181 = !DILocation(line: 2003, column: 21, scope: !5176)
!5182 = !DILocation(line: 2010, column: 51, scope: !5177)
!5183 = !DILocation(line: 2010, column: 68, scope: !5177)
!5184 = !DILocation(line: 2011, column: 58, scope: !5177)
!5185 = !DILocation(line: 2010, column: 34, scope: !5177)
!5186 = !DILocation(line: 2010, column: 32, scope: !5177)
!5187 = !DILocation(line: 2012, column: 23, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5177, file: !245, line: 2012, column: 23)
!5189 = !DILocation(line: 2012, column: 23, scope: !5177)
!5190 = !DILocation(line: 2016, column: 47, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5192, file: !245, line: 2016, column: 27)
!5192 = distinct !DILexicalBlock(scope: !5188, file: !245, line: 2013, column: 21)
!5193 = !DILocation(line: 2016, column: 61, scope: !5191)
!5194 = !DILocation(line: 2017, column: 47, scope: !5191)
!5195 = !DILocation(line: 2017, column: 50, scope: !5191)
!5196 = !DILocation(line: 2017, column: 59, scope: !5191)
!5197 = !DILocation(line: 2016, column: 29, scope: !5191)
!5198 = !DILocation(line: 2016, column: 27, scope: !5192)
!5199 = !DILocation(line: 2019, column: 27, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5191, file: !245, line: 2018, column: 25)
!5201 = !DILocation(line: 2021, column: 21, scope: !5192)
!5202 = !DILocation(line: 2023, column: 19, scope: !5177)
!5203 = !DILocation(line: 2025, column: 13, scope: !5155)
!5204 = !DILocation(line: 2034, column: 15, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5130, file: !245, line: 2034, column: 15)
!5206 = !DILocation(line: 2034, column: 18, scope: !5205)
!5207 = !DILocation(line: 2034, column: 15, scope: !5130)
!5208 = !DILocation(line: 2036, column: 33, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5210, file: !245, line: 2036, column: 19)
!5210 = distinct !DILexicalBlock(scope: !5205, file: !245, line: 2035, column: 13)
!5211 = !DILocation(line: 2036, column: 36, scope: !5209)
!5212 = !DILocation(line: 2036, column: 19, scope: !5209)
!5213 = !DILocation(line: 2036, column: 19, scope: !5210)
!5214 = !DILocation(line: 2040, column: 23, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5216, file: !245, line: 2040, column: 23)
!5216 = distinct !DILexicalBlock(scope: !5209, file: !245, line: 2037, column: 17)
!5217 = !DILocation(line: 2040, column: 23, scope: !5216)
!5218 = !DILocation(line: 2041, column: 22, scope: !5215)
!5219 = !DILocation(line: 2041, column: 39, scope: !5215)
!5220 = !DILocation(line: 2041, column: 21, scope: !5215)
!5221 = !DILocation(line: 2042, column: 19, scope: !5216)
!5222 = !DILocation(line: 2044, column: 13, scope: !5210)
!5223 = !DILocation(line: 2047, column: 21, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5225, file: !245, line: 2047, column: 19)
!5225 = distinct !DILexicalBlock(scope: !5205, file: !245, line: 2046, column: 13)
!5226 = !DILocation(line: 2048, column: 19, scope: !5224)
!5227 = !DILocation(line: 2048, column: 23, scope: !5224)
!5228 = !DILocation(line: 2048, column: 26, scope: !5224)
!5229 = !DILocation(line: 2048, column: 38, scope: !5224)
!5230 = !DILocation(line: 2049, column: 23, scope: !5224)
!5231 = !DILocation(line: 2049, column: 27, scope: !5224)
!5232 = !DILocation(line: 2049, column: 30, scope: !5224)
!5233 = !DILocation(line: 2049, column: 42, scope: !5224)
!5234 = !DILocation(line: 2050, column: 27, scope: !5224)
!5235 = !DILocation(line: 2050, column: 46, scope: !5224)
!5236 = !DILocation(line: 2050, column: 49, scope: !5224)
!5237 = !DILocation(line: 2050, column: 32, scope: !5224)
!5238 = !DILocation(line: 2047, column: 19, scope: !5225)
!5239 = !DILocation(line: 2051, column: 17, scope: !5224)
!5240 = !DILocation(line: 2054, column: 15, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5130, file: !245, line: 2054, column: 15)
!5242 = !DILocation(line: 2054, column: 15, scope: !5130)
!5243 = !DILocation(line: 2055, column: 13, scope: !5241)
!5244 = !DILocation(line: 2057, column: 16, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5130, file: !245, line: 2057, column: 15)
!5246 = !DILocation(line: 2057, column: 15, scope: !5130)
!5247 = !DILocation(line: 2059, column: 19, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5249, file: !245, line: 2059, column: 19)
!5249 = distinct !DILexicalBlock(scope: !5245, file: !245, line: 2058, column: 13)
!5250 = !DILocation(line: 2059, column: 19, scope: !5249)
!5251 = !DILocation(line: 2061, column: 23, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5253, file: !245, line: 2061, column: 23)
!5253 = distinct !DILexicalBlock(scope: !5248, file: !245, line: 2060, column: 17)
!5254 = !DILocation(line: 2061, column: 26, scope: !5252)
!5255 = !DILocation(line: 2061, column: 36, scope: !5252)
!5256 = !DILocation(line: 2061, column: 39, scope: !5252)
!5257 = !DILocation(line: 2061, column: 42, scope: !5252)
!5258 = !DILocation(line: 2061, column: 54, scope: !5252)
!5259 = !DILocation(line: 2061, column: 23, scope: !5253)
!5260 = !DILocation(line: 2065, column: 21, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5252, file: !245, line: 2062, column: 21)
!5262 = !DILocation(line: 2069, column: 24, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5252, file: !245, line: 2067, column: 21)
!5264 = !DILocation(line: 2070, column: 30, scope: !5263)
!5265 = !DILocation(line: 2070, column: 55, scope: !5263)
!5266 = !DILocation(line: 2068, column: 23, scope: !5263)
!5267 = !DILocation(line: 2071, column: 23, scope: !5263)
!5268 = !DILocation(line: 2073, column: 17, scope: !5253)
!5269 = !DILocation(line: 2082, column: 19, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5249, file: !245, line: 2082, column: 19)
!5271 = !DILocation(line: 2083, column: 19, scope: !5270)
!5272 = !DILocation(line: 2083, column: 22, scope: !5270)
!5273 = !DILocation(line: 2083, column: 25, scope: !5270)
!5274 = !DILocation(line: 2083, column: 37, scope: !5270)
!5275 = !DILocation(line: 2084, column: 19, scope: !5270)
!5276 = !DILocation(line: 2084, column: 33, scope: !5270)
!5277 = !DILocation(line: 2084, column: 36, scope: !5270)
!5278 = !DILocation(line: 2084, column: 47, scope: !5270)
!5279 = !DILocation(line: 2084, column: 22, scope: !5270)
!5280 = !DILocation(line: 2082, column: 19, scope: !5249)
!5281 = !DILocation(line: 2087, column: 26, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5270, file: !245, line: 2085, column: 17)
!5283 = !DILocation(line: 2088, column: 26, scope: !5282)
!5284 = !DILocation(line: 2088, column: 51, scope: !5282)
!5285 = !DILocation(line: 2086, column: 19, scope: !5282)
!5286 = !DILocation(line: 2089, column: 19, scope: !5282)
!5287 = !DILocation(line: 2091, column: 13, scope: !5249)
!5288 = !DILocation(line: 2093, column: 16, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5130, file: !245, line: 2093, column: 15)
!5290 = !DILocation(line: 2093, column: 15, scope: !5130)
!5291 = !DILocation(line: 2095, column: 19, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5293, file: !245, line: 2095, column: 19)
!5293 = distinct !DILexicalBlock(scope: !5289, file: !245, line: 2094, column: 13)
!5294 = !DILocation(line: 2095, column: 19, scope: !5293)
!5295 = !DILocation(line: 2097, column: 23, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5297, file: !245, line: 2097, column: 23)
!5297 = distinct !DILexicalBlock(scope: !5292, file: !245, line: 2096, column: 17)
!5298 = !DILocation(line: 2097, column: 26, scope: !5296)
!5299 = !DILocation(line: 2097, column: 36, scope: !5296)
!5300 = !DILocation(line: 2097, column: 39, scope: !5296)
!5301 = !DILocation(line: 2097, column: 42, scope: !5296)
!5302 = !DILocation(line: 2097, column: 54, scope: !5296)
!5303 = !DILocation(line: 2097, column: 23, scope: !5297)
!5304 = !DILocation(line: 2101, column: 21, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5296, file: !245, line: 2098, column: 21)
!5306 = !DILocation(line: 2105, column: 26, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5296, file: !245, line: 2103, column: 21)
!5308 = !DILocation(line: 2106, column: 30, scope: !5307)
!5309 = !DILocation(line: 2104, column: 23, scope: !5307)
!5310 = !DILocation(line: 2107, column: 23, scope: !5307)
!5311 = !DILocation(line: 2109, column: 17, scope: !5297)
!5312 = !DILocation(line: 2110, column: 13, scope: !5293)
!5313 = !DILocation(line: 2112, column: 15, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5130, file: !245, line: 2112, column: 15)
!5315 = !DILocation(line: 2112, column: 18, scope: !5314)
!5316 = !DILocation(line: 2112, column: 15, scope: !5130)
!5317 = !DILocation(line: 2115, column: 19, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5319, file: !245, line: 2115, column: 19)
!5319 = distinct !DILexicalBlock(scope: !5314, file: !245, line: 2113, column: 13)
!5320 = !DILocation(line: 2115, column: 44, scope: !5318)
!5321 = !DILocation(line: 2115, column: 48, scope: !5318)
!5322 = !DILocation(line: 2116, column: 19, scope: !5318)
!5323 = !DILocation(line: 2116, column: 22, scope: !5318)
!5324 = !DILocation(line: 2116, column: 25, scope: !5318)
!5325 = !DILocation(line: 2116, column: 37, scope: !5318)
!5326 = !DILocation(line: 2115, column: 19, scope: !5319)
!5327 = !DILocation(line: 2119, column: 24, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5318, file: !245, line: 2117, column: 17)
!5329 = !DILocation(line: 2120, column: 26, scope: !5328)
!5330 = !DILocation(line: 2120, column: 50, scope: !5328)
!5331 = !DILocation(line: 2118, column: 19, scope: !5328)
!5332 = !DILocation(line: 2121, column: 19, scope: !5328)
!5333 = !DILocation(line: 2123, column: 13, scope: !5319)
!5334 = !DILocalVariable(name: "srcbase", scope: !5130, file: !245, line: 2125, type: !115)
!5335 = !DILocation(line: 2125, column: 23, scope: !5130)
!5336 = !DILocation(line: 2126, column: 15, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5130, file: !245, line: 2126, column: 15)
!5338 = !DILocation(line: 2126, column: 18, scope: !5337)
!5339 = !DILocation(line: 2126, column: 30, scope: !5337)
!5340 = !DILocation(line: 2129, column: 15, scope: !5337)
!5341 = !DILocation(line: 2129, column: 61, scope: !5337)
!5342 = !DILocation(line: 2129, column: 45, scope: !5337)
!5343 = !DILocation(line: 2129, column: 43, scope: !5337)
!5344 = !DILocation(line: 2129, column: 20, scope: !5337)
!5345 = !DILocation(line: 2135, column: 15, scope: !5337)
!5346 = !DILocation(line: 2135, column: 19, scope: !5337)
!5347 = !DILocation(line: 2135, column: 22, scope: !5337)
!5348 = !DILocation(line: 2135, column: 32, scope: !5337)
!5349 = !DILocation(line: 2135, column: 37, scope: !5337)
!5350 = !DILocation(line: 2126, column: 15, scope: !5130)
!5351 = !DILocation(line: 2141, column: 19, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5353, file: !245, line: 2141, column: 19)
!5353 = distinct !DILexicalBlock(scope: !5337, file: !245, line: 2136, column: 13)
!5354 = !DILocation(line: 2141, column: 22, scope: !5352)
!5355 = !DILocation(line: 2141, column: 34, scope: !5352)
!5356 = !DILocation(line: 2142, column: 19, scope: !5352)
!5357 = !DILocation(line: 2142, column: 44, scope: !5352)
!5358 = !DILocation(line: 2142, column: 62, scope: !5352)
!5359 = !DILocation(line: 2142, column: 22, scope: !5352)
!5360 = !DILocation(line: 2141, column: 19, scope: !5353)
!5361 = !DILocalVariable(name: "fmt", scope: !5362, file: !245, line: 2144, type: !115)
!5362 = distinct !DILexicalBlock(scope: !5352, file: !245, line: 2143, column: 17)
!5363 = !DILocation(line: 2144, column: 31, scope: !5362)
!5364 = !DILocation(line: 2145, column: 26, scope: !5362)
!5365 = !DILocation(line: 2145, column: 29, scope: !5362)
!5366 = !DILocation(line: 2146, column: 20, scope: !5362)
!5367 = !DILocation(line: 2147, column: 20, scope: !5362)
!5368 = !DILocation(line: 2145, column: 23, scope: !5362)
!5369 = !DILocation(line: 2148, column: 32, scope: !5362)
!5370 = !DILocation(line: 2149, column: 26, scope: !5362)
!5371 = !DILocation(line: 2150, column: 26, scope: !5362)
!5372 = !DILocation(line: 2148, column: 19, scope: !5362)
!5373 = !DILocation(line: 2151, column: 19, scope: !5362)
!5374 = !DILocalVariable(name: "tmp_backup", scope: !5353, file: !245, line: 2154, type: !9)
!5375 = !DILocation(line: 2154, column: 21, scope: !5353)
!5376 = !DILocation(line: 2154, column: 64, scope: !5353)
!5377 = !DILocation(line: 2155, column: 54, scope: !5353)
!5378 = !DILocation(line: 2155, column: 57, scope: !5353)
!5379 = !DILocation(line: 2154, column: 34, scope: !5353)
!5380 = !DILocation(line: 2162, column: 19, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5353, file: !245, line: 2162, column: 19)
!5382 = !DILocation(line: 2162, column: 19, scope: !5353)
!5383 = !DILocation(line: 2164, column: 19, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5381, file: !245, line: 2163, column: 17)
!5385 = !DILocalVariable(name: "__old", scope: !5386, file: !245, line: 2164, type: !115)
!5386 = distinct !DILexicalBlock(scope: !5387, file: !245, line: 2164, column: 19)
!5387 = distinct !DILexicalBlock(scope: !5384, file: !245, line: 2164, column: 19)
!5388 = !DILocation(line: 2164, column: 19, scope: !5386)
!5389 = !DILocalVariable(name: "__len", scope: !5386, file: !245, line: 2164, type: !55)
!5390 = !DILocalVariable(name: "__new", scope: !5386, file: !245, line: 2164, type: !9)
!5391 = !DILocation(line: 2164, column: 19, scope: !5387)
!5392 = !DILocation(line: 2165, column: 25, scope: !5384)
!5393 = !DILocation(line: 2165, column: 19, scope: !5384)
!5394 = !DILocation(line: 2166, column: 17, scope: !5384)
!5395 = !DILocation(line: 2167, column: 24, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5381, file: !245, line: 2167, column: 24)
!5397 = !DILocation(line: 2167, column: 30, scope: !5396)
!5398 = !DILocation(line: 2167, column: 24, scope: !5381)
!5399 = !DILocation(line: 2169, column: 29, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5396, file: !245, line: 2168, column: 17)
!5401 = !DILocation(line: 2169, column: 36, scope: !5400)
!5402 = !DILocation(line: 2169, column: 59, scope: !5400)
!5403 = !DILocation(line: 2169, column: 19, scope: !5400)
!5404 = !DILocation(line: 2170, column: 19, scope: !5400)
!5405 = !DILocation(line: 2172, column: 23, scope: !5353)
!5406 = !DILocation(line: 2173, column: 13, scope: !5353)
!5407 = !DILocation(line: 2174, column: 22, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5337, file: !245, line: 2174, column: 20)
!5409 = !DILocation(line: 2176, column: 20, scope: !5408)
!5410 = !DILocation(line: 2176, column: 25, scope: !5408)
!5411 = !DILocation(line: 2176, column: 28, scope: !5408)
!5412 = !DILocation(line: 2177, column: 20, scope: !5408)
!5413 = !DILocation(line: 2177, column: 24, scope: !5408)
!5414 = !DILocation(line: 2177, column: 27, scope: !5408)
!5415 = !DILocation(line: 2178, column: 24, scope: !5408)
!5416 = !DILocation(line: 2178, column: 28, scope: !5408)
!5417 = !DILocation(line: 2178, column: 31, scope: !5408)
!5418 = !DILocation(line: 2178, column: 46, scope: !5408)
!5419 = !DILocation(line: 2178, column: 60, scope: !5408)
!5420 = !{!3179, !3180, i64 16}
!5421 = !DILocation(line: 2178, column: 51, scope: !5408)
!5422 = !DILocation(line: 2179, column: 24, scope: !5408)
!5423 = !DILocation(line: 2179, column: 28, scope: !5408)
!5424 = !DILocation(line: 2179, column: 31, scope: !5408)
!5425 = !DILocation(line: 2179, column: 43, scope: !5408)
!5426 = !DILocation(line: 2180, column: 28, scope: !5408)
!5427 = !DILocation(line: 2180, column: 33, scope: !5408)
!5428 = !DILocation(line: 2174, column: 20, scope: !5337)
!5429 = !DILocation(line: 2183, column: 27, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5431, file: !245, line: 2183, column: 19)
!5431 = distinct !DILexicalBlock(scope: !5408, file: !245, line: 2182, column: 13)
!5432 = !DILocation(line: 2183, column: 19, scope: !5430)
!5433 = !DILocation(line: 2183, column: 37, scope: !5430)
!5434 = !DILocation(line: 2183, column: 42, scope: !5430)
!5435 = !DILocation(line: 2183, column: 45, scope: !5430)
!5436 = !DILocation(line: 2183, column: 51, scope: !5430)
!5437 = !DILocation(line: 2183, column: 19, scope: !5431)
!5438 = !DILocation(line: 2185, column: 29, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5430, file: !245, line: 2184, column: 17)
!5440 = !DILocation(line: 2185, column: 36, scope: !5439)
!5441 = !DILocation(line: 2185, column: 59, scope: !5439)
!5442 = !DILocation(line: 2185, column: 19, scope: !5439)
!5443 = !DILocation(line: 2186, column: 19, scope: !5439)
!5444 = !DILocation(line: 2188, column: 23, scope: !5431)
!5445 = !DILocation(line: 2189, column: 19, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5431, file: !245, line: 2189, column: 19)
!5447 = !DILocation(line: 2189, column: 22, scope: !5446)
!5448 = !DILocation(line: 2189, column: 19, scope: !5431)
!5449 = !DILocation(line: 2190, column: 25, scope: !5446)
!5450 = !DILocation(line: 2190, column: 44, scope: !5446)
!5451 = !DILocation(line: 2190, column: 17, scope: !5446)
!5452 = !DILocation(line: 2191, column: 13, scope: !5431)
!5453 = !DILocation(line: 2192, column: 9, scope: !5130)
!5454 = !DILocation(line: 2193, column: 5, scope: !5057)
!5455 = !DILocation(line: 2197, column: 7, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2197, column: 7)
!5457 = !DILocation(line: 2198, column: 7, scope: !5456)
!5458 = !DILocation(line: 2198, column: 10, scope: !5456)
!5459 = !DILocation(line: 2198, column: 13, scope: !5456)
!5460 = !DILocation(line: 2199, column: 7, scope: !5456)
!5461 = !DILocation(line: 2199, column: 12, scope: !5456)
!5462 = !DILocation(line: 2199, column: 15, scope: !5456)
!5463 = !DILocation(line: 2200, column: 7, scope: !5456)
!5464 = !DILocation(line: 2200, column: 10, scope: !5456)
!5465 = !DILocation(line: 2200, column: 13, scope: !5456)
!5466 = !DILocation(line: 2200, column: 25, scope: !5456)
!5467 = !DILocation(line: 2197, column: 7, scope: !4892)
!5468 = !DILocalVariable(name: "lstat_ok", scope: !5469, file: !245, line: 2202, type: !120)
!5469 = distinct !DILexicalBlock(scope: !5456, file: !245, line: 2201, column: 5)
!5470 = !DILocation(line: 2202, column: 12, scope: !5469)
!5471 = !DILocalVariable(name: "tmp_buf", scope: !5469, file: !245, line: 2203, type: !317)
!5472 = !DILocation(line: 2203, column: 19, scope: !5469)
!5473 = !DILocalVariable(name: "dst_lstat_sb", scope: !5469, file: !245, line: 2204, type: !356)
!5474 = !DILocation(line: 2204, column: 20, scope: !5469)
!5475 = !DILocation(line: 2208, column: 11, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5469, file: !245, line: 2208, column: 11)
!5477 = !DILocation(line: 2208, column: 11, scope: !5469)
!5478 = !DILocation(line: 2209, column: 22, scope: !5476)
!5479 = !DILocation(line: 2209, column: 9, scope: !5476)
!5480 = !DILocation(line: 2212, column: 22, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !245, line: 2212, column: 15)
!5482 = distinct !DILexicalBlock(scope: !5476, file: !245, line: 2211, column: 9)
!5483 = !DILocation(line: 2212, column: 15, scope: !5481)
!5484 = !DILocation(line: 2212, column: 42, scope: !5481)
!5485 = !DILocation(line: 2212, column: 15, scope: !5482)
!5486 = !DILocation(line: 2213, column: 26, scope: !5481)
!5487 = !DILocation(line: 2213, column: 13, scope: !5481)
!5488 = !DILocation(line: 2215, column: 22, scope: !5481)
!5489 = !DILocation(line: 2219, column: 11, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5469, file: !245, line: 2219, column: 11)
!5491 = !DILocation(line: 2220, column: 11, scope: !5490)
!5492 = !DILocation(line: 2220, column: 14, scope: !5490)
!5493 = !DILocation(line: 2221, column: 11, scope: !5490)
!5494 = !DILocation(line: 2221, column: 25, scope: !5490)
!5495 = !DILocation(line: 2221, column: 28, scope: !5490)
!5496 = !DILocation(line: 2221, column: 39, scope: !5490)
!5497 = !DILocation(line: 2221, column: 49, scope: !5490)
!5498 = !DILocation(line: 2221, column: 14, scope: !5490)
!5499 = !DILocation(line: 2219, column: 11, scope: !5469)
!5500 = !DILocation(line: 2224, column: 18, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5490, file: !245, line: 2222, column: 9)
!5502 = !DILocation(line: 2225, column: 18, scope: !5501)
!5503 = !DILocation(line: 2225, column: 43, scope: !5501)
!5504 = !DILocation(line: 2223, column: 11, scope: !5501)
!5505 = !DILocation(line: 2226, column: 11, scope: !5501)
!5506 = !DILocation(line: 2228, column: 5, scope: !5469)
!5507 = !DILocation(line: 2234, column: 7, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2234, column: 7)
!5509 = !DILocation(line: 2234, column: 10, scope: !5508)
!5510 = !DILocation(line: 2234, column: 18, scope: !5508)
!5511 = !DILocation(line: 2234, column: 22, scope: !5508)
!5512 = !DILocation(line: 2234, column: 25, scope: !5508)
!5513 = !DILocation(line: 2234, column: 35, scope: !5508)
!5514 = !DILocation(line: 2234, column: 39, scope: !5508)
!5515 = !DILocation(line: 2234, column: 7, scope: !4892)
!5516 = !DILocation(line: 2235, column: 19, scope: !5508)
!5517 = !DILocation(line: 2235, column: 29, scope: !5508)
!5518 = !DILocation(line: 2235, column: 39, scope: !5508)
!5519 = !DILocation(line: 2235, column: 5, scope: !5508)
!5520 = !DILocation(line: 2267, column: 7, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2267, column: 7)
!5522 = !DILocation(line: 2267, column: 20, scope: !5521)
!5523 = !DILocation(line: 2267, column: 7, scope: !4892)
!5524 = !DILocation(line: 2268, column: 18, scope: !5521)
!5525 = !DILocation(line: 2268, column: 5, scope: !5521)
!5526 = !DILocation(line: 2269, column: 12, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5521, file: !245, line: 2269, column: 12)
!5528 = !DILocation(line: 2269, column: 15, scope: !5527)
!5529 = !DILocation(line: 2269, column: 25, scope: !5527)
!5530 = !DILocation(line: 2269, column: 28, scope: !5527)
!5531 = !DILocation(line: 2269, column: 12, scope: !5521)
!5532 = !DILocation(line: 2271, column: 11, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5534, file: !245, line: 2271, column: 11)
!5534 = distinct !DILexicalBlock(scope: !5527, file: !245, line: 2270, column: 5)
!5535 = !DILocation(line: 2271, column: 11, scope: !5534)
!5536 = !DILocation(line: 2272, column: 41, scope: !5533)
!5537 = !DILocation(line: 2272, column: 58, scope: !5533)
!5538 = !DILocation(line: 2272, column: 73, scope: !5533)
!5539 = !DILocation(line: 2272, column: 24, scope: !5533)
!5540 = !DILocation(line: 2272, column: 22, scope: !5533)
!5541 = !DILocation(line: 2272, column: 9, scope: !5533)
!5542 = !DILocation(line: 2274, column: 51, scope: !5533)
!5543 = !DILocation(line: 2274, column: 66, scope: !5533)
!5544 = !DILocation(line: 2274, column: 24, scope: !5533)
!5545 = !DILocation(line: 2274, column: 22, scope: !5533)
!5546 = !DILocation(line: 2275, column: 5, scope: !5534)
!5547 = !DILocation(line: 2276, column: 12, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5527, file: !245, line: 2276, column: 12)
!5549 = !DILocation(line: 2276, column: 15, scope: !5548)
!5550 = !DILocation(line: 2276, column: 25, scope: !5548)
!5551 = !DILocation(line: 2276, column: 35, scope: !5548)
!5552 = !DILocation(line: 2276, column: 44, scope: !5548)
!5553 = !DILocation(line: 2276, column: 12, scope: !5527)
!5554 = !DILocation(line: 2278, column: 49, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5548, file: !245, line: 2277, column: 5)
!5556 = !DILocation(line: 2278, column: 64, scope: !5555)
!5557 = !DILocation(line: 2278, column: 22, scope: !5555)
!5558 = !DILocation(line: 2278, column: 20, scope: !5555)
!5559 = !DILocation(line: 2279, column: 5, scope: !5555)
!5560 = !DILocation(line: 2280, column: 12, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5548, file: !245, line: 2280, column: 12)
!5562 = !DILocation(line: 2280, column: 15, scope: !5561)
!5563 = !DILocation(line: 2281, column: 12, scope: !5561)
!5564 = !DILocation(line: 2281, column: 16, scope: !5561)
!5565 = !DILocation(line: 2281, column: 19, scope: !5561)
!5566 = !DILocation(line: 2282, column: 12, scope: !5561)
!5567 = !DILocation(line: 2282, column: 27, scope: !5561)
!5568 = !DILocation(line: 2282, column: 18, scope: !5561)
!5569 = !DILocation(line: 2283, column: 16, scope: !5561)
!5570 = !DILocation(line: 2283, column: 20, scope: !5561)
!5571 = !DILocation(line: 2284, column: 20, scope: !5561)
!5572 = !DILocation(line: 2284, column: 23, scope: !5561)
!5573 = !DILocation(line: 2284, column: 26, scope: !5561)
!5574 = !DILocation(line: 2284, column: 38, scope: !5561)
!5575 = !DILocation(line: 2285, column: 16, scope: !5561)
!5576 = !DILocation(line: 2285, column: 19, scope: !5561)
!5577 = !DILocation(line: 2285, column: 22, scope: !5561)
!5578 = !DILocation(line: 2285, column: 34, scope: !5561)
!5579 = !DILocation(line: 2280, column: 12, scope: !5548)
!5580 = !DILocation(line: 2287, column: 39, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5561, file: !245, line: 2286, column: 5)
!5582 = !DILocation(line: 2287, column: 56, scope: !5581)
!5583 = !DILocation(line: 2287, column: 71, scope: !5581)
!5584 = !DILocation(line: 2287, column: 22, scope: !5581)
!5585 = !DILocation(line: 2287, column: 20, scope: !5581)
!5586 = !DILocation(line: 2288, column: 5, scope: !5581)
!5587 = !DILocation(line: 2293, column: 7, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2293, column: 7)
!5589 = !DILocation(line: 2293, column: 7, scope: !4892)
!5590 = !DILocation(line: 2298, column: 11, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5592, file: !245, line: 2298, column: 11)
!5592 = distinct !DILexicalBlock(scope: !5588, file: !245, line: 2294, column: 5)
!5593 = !DILocation(line: 2298, column: 11, scope: !5592)
!5594 = !DILocation(line: 2302, column: 26, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5596, file: !245, line: 2302, column: 15)
!5596 = distinct !DILexicalBlock(scope: !5591, file: !245, line: 2299, column: 9)
!5597 = !DILocation(line: 2302, column: 36, scope: !5595)
!5598 = !DILocation(line: 2302, column: 15, scope: !5595)
!5599 = !DILocation(line: 2302, column: 15, scope: !5596)
!5600 = !DILocation(line: 2304, column: 28, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5595, file: !245, line: 2303, column: 13)
!5602 = !DILocation(line: 2305, column: 22, scope: !5601)
!5603 = !DILocation(line: 2306, column: 22, scope: !5601)
!5604 = !DILocation(line: 2304, column: 15, scope: !5601)
!5605 = !DILocation(line: 2307, column: 16, scope: !5601)
!5606 = !DILocation(line: 2307, column: 31, scope: !5601)
!5607 = !DILocation(line: 2308, column: 15, scope: !5601)
!5608 = !DILocation(line: 2310, column: 31, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5595, file: !245, line: 2310, column: 20)
!5610 = !DILocation(line: 2310, column: 41, scope: !5609)
!5611 = !DILocation(line: 2310, column: 20, scope: !5609)
!5612 = !DILocation(line: 2310, column: 20, scope: !5595)
!5613 = !DILocation(line: 2312, column: 28, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5609, file: !245, line: 2311, column: 13)
!5615 = !DILocation(line: 2314, column: 22, scope: !5614)
!5616 = !DILocation(line: 2312, column: 15, scope: !5614)
!5617 = !DILocation(line: 2319, column: 19, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5614, file: !245, line: 2319, column: 19)
!5619 = !DILocation(line: 2319, column: 22, scope: !5618)
!5620 = !DILocation(line: 2319, column: 32, scope: !5618)
!5621 = !DILocation(line: 2319, column: 35, scope: !5618)
!5622 = !DILocation(line: 2319, column: 19, scope: !5614)
!5623 = !DILocation(line: 2320, column: 18, scope: !5618)
!5624 = !DILocation(line: 2320, column: 35, scope: !5618)
!5625 = !DILocation(line: 2320, column: 17, scope: !5618)
!5626 = !DILocation(line: 2323, column: 15, scope: !5614)
!5627 = !DILocation(line: 2325, column: 20, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5609, file: !245, line: 2325, column: 20)
!5629 = !DILocation(line: 2325, column: 23, scope: !5628)
!5630 = !DILocation(line: 2325, column: 35, scope: !5628)
!5631 = !DILocation(line: 2326, column: 20, scope: !5628)
!5632 = !DILocation(line: 2326, column: 24, scope: !5628)
!5633 = !DILocation(line: 2327, column: 24, scope: !5628)
!5634 = !DILocation(line: 2327, column: 27, scope: !5628)
!5635 = !DILocation(line: 2327, column: 30, scope: !5628)
!5636 = !DILocation(line: 2327, column: 42, scope: !5628)
!5637 = !DILocation(line: 2325, column: 20, scope: !5609)
!5638 = !DILocation(line: 2335, column: 13, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5628, file: !245, line: 2328, column: 13)
!5640 = !DILocation(line: 2338, column: 28, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5628, file: !245, line: 2337, column: 13)
!5642 = !DILocation(line: 2339, column: 22, scope: !5641)
!5643 = !DILocation(line: 2339, column: 47, scope: !5641)
!5644 = !DILocation(line: 2338, column: 15, scope: !5641)
!5645 = !DILocation(line: 2340, column: 15, scope: !5641)
!5646 = !DILocation(line: 2342, column: 9, scope: !5596)
!5647 = !DILocation(line: 2345, column: 35, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !245, line: 2345, column: 15)
!5649 = distinct !DILexicalBlock(scope: !5591, file: !245, line: 2344, column: 9)
!5650 = !DILocation(line: 2345, column: 49, scope: !5648)
!5651 = !DILocation(line: 2345, column: 65, scope: !5648)
!5652 = !DILocation(line: 2345, column: 68, scope: !5648)
!5653 = !DILocation(line: 2346, column: 35, scope: !5648)
!5654 = !DILocation(line: 2345, column: 17, scope: !5648)
!5655 = !DILocation(line: 2345, column: 15, scope: !5649)
!5656 = !DILocation(line: 2347, column: 13, scope: !5648)
!5657 = !DILocation(line: 2349, column: 11, scope: !5649)
!5658 = !DILocation(line: 2351, column: 5, scope: !5592)
!5659 = !DILocation(line: 2353, column: 7, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2353, column: 7)
!5661 = !DILocation(line: 2353, column: 10, scope: !5660)
!5662 = !DILocation(line: 2353, column: 7, scope: !4892)
!5663 = !DILocation(line: 2355, column: 11, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5665, file: !245, line: 2355, column: 11)
!5665 = distinct !DILexicalBlock(scope: !5660, file: !245, line: 2354, column: 5)
!5666 = !DILocation(line: 2355, column: 24, scope: !5664)
!5667 = !DILocation(line: 2355, column: 11, scope: !5665)
!5668 = !DILocation(line: 2356, column: 32, scope: !5664)
!5669 = !DILocation(line: 2356, column: 42, scope: !5664)
!5670 = !DILocation(line: 2356, column: 24, scope: !5664)
!5671 = !DILocation(line: 2356, column: 52, scope: !5664)
!5672 = !DILocation(line: 2356, column: 63, scope: !5664)
!5673 = !DILocation(line: 2356, column: 22, scope: !5664)
!5674 = !DILocation(line: 2356, column: 9, scope: !5664)
!5675 = !DILocation(line: 2358, column: 11, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5665, file: !245, line: 2358, column: 11)
!5677 = !DILocation(line: 2358, column: 24, scope: !5676)
!5678 = !DILocation(line: 2358, column: 11, scope: !5665)
!5679 = !DILocation(line: 2360, column: 15, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5681, file: !245, line: 2360, column: 15)
!5681 = distinct !DILexicalBlock(scope: !5676, file: !245, line: 2359, column: 9)
!5682 = !DILocation(line: 2360, column: 18, scope: !5680)
!5683 = !DILocation(line: 2360, column: 15, scope: !5681)
!5684 = !DILocation(line: 2362, column: 23, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5680, file: !245, line: 2361, column: 13)
!5686 = !DILocation(line: 2362, column: 15, scope: !5685)
!5687 = !DILocation(line: 2363, column: 29, scope: !5685)
!5688 = !DILocation(line: 2363, column: 39, scope: !5685)
!5689 = !DILocation(line: 2363, column: 49, scope: !5685)
!5690 = !DILocation(line: 2363, column: 15, scope: !5685)
!5691 = !DILocation(line: 2364, column: 13, scope: !5685)
!5692 = !DILocation(line: 2366, column: 15, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5681, file: !245, line: 2366, column: 15)
!5694 = !DILocation(line: 2366, column: 18, scope: !5693)
!5695 = !DILocation(line: 2366, column: 15, scope: !5681)
!5696 = !DILocation(line: 2369, column: 45, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5693, file: !245, line: 2367, column: 13)
!5698 = !DILocation(line: 2369, column: 68, scope: !5697)
!5699 = !DILocation(line: 2369, column: 22, scope: !5697)
!5700 = !DILocation(line: 2370, column: 13, scope: !5697)
!5701 = !DILocation(line: 2372, column: 15, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5681, file: !245, line: 2372, column: 15)
!5703 = !DILocation(line: 2372, column: 15, scope: !5681)
!5704 = !DILocation(line: 2373, column: 14, scope: !5702)
!5705 = !DILocation(line: 2373, column: 31, scope: !5702)
!5706 = !DILocation(line: 2373, column: 13, scope: !5702)
!5707 = !DILocation(line: 2375, column: 15, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5681, file: !245, line: 2375, column: 15)
!5709 = !DILocation(line: 2375, column: 32, scope: !5708)
!5710 = !DILocation(line: 2375, column: 36, scope: !5708)
!5711 = !DILocation(line: 2375, column: 39, scope: !5708)
!5712 = !DILocation(line: 2375, column: 15, scope: !5681)
!5713 = !DILocation(line: 2384, column: 28, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5708, file: !245, line: 2376, column: 13)
!5715 = !DILocation(line: 2384, column: 31, scope: !5714)
!5716 = !DILocation(line: 2384, column: 42, scope: !5714)
!5717 = !DILocation(line: 2384, column: 15, scope: !5714)
!5718 = !DILocation(line: 2385, column: 13, scope: !5714)
!5719 = !DILocation(line: 2387, column: 11, scope: !5681)
!5720 = !DILocation(line: 2395, column: 11, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5665, file: !245, line: 2395, column: 11)
!5722 = !DILocation(line: 2395, column: 24, scope: !5721)
!5723 = !DILocation(line: 2395, column: 11, scope: !5665)
!5724 = !DILocation(line: 2400, column: 24, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5721, file: !245, line: 2396, column: 9)
!5726 = !DILocation(line: 2401, column: 18, scope: !5725)
!5727 = !DILocation(line: 2402, column: 18, scope: !5725)
!5728 = !DILocation(line: 2400, column: 11, scope: !5725)
!5729 = !DILocation(line: 2408, column: 12, scope: !5725)
!5730 = !DILocation(line: 2408, column: 27, scope: !5725)
!5731 = !DILocation(line: 2412, column: 11, scope: !5725)
!5732 = !DILocation(line: 2430, column: 11, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5665, file: !245, line: 2430, column: 11)
!5734 = !DILocation(line: 2430, column: 24, scope: !5733)
!5735 = !DILocation(line: 2430, column: 11, scope: !5665)
!5736 = !DILocation(line: 2442, column: 21, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5733, file: !245, line: 2431, column: 9)
!5738 = !DILocation(line: 2443, column: 18, scope: !5737)
!5739 = !DILocation(line: 2444, column: 18, scope: !5737)
!5740 = !DILocation(line: 2444, column: 43, scope: !5737)
!5741 = !DILocation(line: 2442, column: 11, scope: !5737)
!5742 = !DILocation(line: 2445, column: 34, scope: !5737)
!5743 = !DILocation(line: 2445, column: 49, scope: !5737)
!5744 = !DILocation(line: 2445, column: 11, scope: !5737)
!5745 = !DILocation(line: 2446, column: 11, scope: !5737)
!5746 = !DILocation(line: 2455, column: 12, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5665, file: !245, line: 2455, column: 11)
!5748 = !DILocation(line: 2455, column: 40, scope: !5747)
!5749 = !DILocation(line: 2455, column: 33, scope: !5747)
!5750 = !DILocation(line: 2455, column: 60, scope: !5747)
!5751 = !DILocation(line: 2455, column: 52, scope: !5747)
!5752 = !DILocation(line: 2455, column: 71, scope: !5747)
!5753 = !DILocation(line: 2456, column: 11, scope: !5747)
!5754 = !DILocation(line: 2456, column: 14, scope: !5747)
!5755 = !DILocation(line: 2456, column: 20, scope: !5747)
!5756 = !DILocation(line: 2455, column: 11, scope: !5665)
!5757 = !DILocation(line: 2458, column: 21, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5747, file: !245, line: 2457, column: 9)
!5759 = !DILocation(line: 2459, column: 14, scope: !5758)
!5760 = !DILocation(line: 2460, column: 18, scope: !5758)
!5761 = !DILocation(line: 2460, column: 43, scope: !5758)
!5762 = !DILocation(line: 2458, column: 11, scope: !5758)
!5763 = !DILocation(line: 2461, column: 34, scope: !5758)
!5764 = !DILocation(line: 2461, column: 49, scope: !5758)
!5765 = !DILocation(line: 2461, column: 11, scope: !5758)
!5766 = !DILocation(line: 2462, column: 11, scope: !5758)
!5767 = !DILocation(line: 2465, column: 11, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5665, file: !245, line: 2465, column: 11)
!5769 = !DILocation(line: 2465, column: 14, scope: !5768)
!5770 = !DILocation(line: 2465, column: 22, scope: !5768)
!5771 = !DILocation(line: 2465, column: 26, scope: !5768)
!5772 = !DILocation(line: 2465, column: 11, scope: !5665)
!5773 = !DILocation(line: 2467, column: 19, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5768, file: !245, line: 2466, column: 9)
!5775 = !DILocation(line: 2467, column: 11, scope: !5774)
!5776 = !DILocation(line: 2468, column: 25, scope: !5774)
!5777 = !DILocation(line: 2468, column: 35, scope: !5774)
!5778 = !DILocation(line: 2468, column: 45, scope: !5774)
!5779 = !DILocation(line: 2468, column: 11, scope: !5774)
!5780 = !DILocation(line: 2469, column: 9, scope: !5774)
!5781 = !DILocation(line: 2470, column: 15, scope: !5665)
!5782 = !DILocation(line: 2471, column: 5, scope: !5665)
!5783 = !DILocation(line: 2477, column: 20, scope: !4892)
!5784 = !DILocation(line: 2477, column: 23, scope: !4892)
!5785 = !DILocation(line: 2477, column: 34, scope: !4892)
!5786 = !DILocation(line: 2477, column: 37, scope: !4892)
!5787 = !DILocation(line: 2477, column: 44, scope: !4892)
!5788 = !DILocation(line: 2477, column: 54, scope: !4892)
!5789 = !DILocation(line: 2477, column: 17, scope: !4892)
!5790 = !DILocation(line: 2479, column: 6, scope: !4892)
!5791 = !DILocation(line: 2480, column: 9, scope: !4892)
!5792 = !DILocation(line: 2480, column: 12, scope: !4892)
!5793 = !DILocation(line: 2481, column: 11, scope: !4892)
!5794 = !DILocation(line: 2480, column: 6, scope: !4892)
!5795 = !DILocation(line: 2478, column: 23, scope: !4892)
!5796 = !DILocation(line: 2484, column: 14, scope: !4892)
!5797 = !DILocation(line: 2490, column: 35, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2490, column: 7)
!5799 = !DILocation(line: 2490, column: 45, scope: !5798)
!5800 = !DILocation(line: 2490, column: 55, scope: !5798)
!5801 = !DILocation(line: 2490, column: 65, scope: !5798)
!5802 = !DILocation(line: 2490, column: 74, scope: !5798)
!5803 = !DILocation(line: 2490, column: 9, scope: !5798)
!5804 = !DILocation(line: 2490, column: 7, scope: !4892)
!5805 = !DILocation(line: 2491, column: 5, scope: !5798)
!5806 = !DILocation(line: 2493, column: 7, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2493, column: 7)
!5808 = !DILocation(line: 2493, column: 7, scope: !4892)
!5809 = !DILocalVariable(name: "dir", scope: !5810, file: !245, line: 2495, type: !350)
!5810 = distinct !DILexicalBlock(scope: !5807, file: !245, line: 2494, column: 5)
!5811 = !DILocation(line: 2495, column: 24, scope: !5810)
!5812 = !DILocation(line: 2502, column: 33, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5810, file: !245, line: 2502, column: 11)
!5814 = !DILocation(line: 2502, column: 11, scope: !5813)
!5815 = !DILocation(line: 2502, column: 11, scope: !5810)
!5816 = !DILocation(line: 2504, column: 24, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5813, file: !245, line: 2503, column: 9)
!5818 = !DILocation(line: 2505, column: 18, scope: !5817)
!5819 = !DILocation(line: 2504, column: 11, scope: !5817)
!5820 = !DILocation(line: 2506, column: 11, scope: !5817)
!5821 = !DILocation(line: 2511, column: 13, scope: !5810)
!5822 = !DILocation(line: 2511, column: 11, scope: !5810)
!5823 = !DILocation(line: 2512, column: 21, scope: !5810)
!5824 = !DILocation(line: 2512, column: 7, scope: !5810)
!5825 = !DILocation(line: 2512, column: 12, scope: !5810)
!5826 = !DILocation(line: 2512, column: 19, scope: !5810)
!5827 = !{!5828, !2996, i64 0}
!5828 = !{!"dir_list", !2996, i64 0, !3180, i64 8, !3180, i64 16}
!5829 = !DILocation(line: 2513, column: 25, scope: !5810)
!5830 = !DILocation(line: 2513, column: 7, scope: !5810)
!5831 = !DILocation(line: 2513, column: 12, scope: !5810)
!5832 = !DILocation(line: 2513, column: 16, scope: !5810)
!5833 = !{!5828, !3180, i64 8}
!5834 = !DILocation(line: 2514, column: 25, scope: !5810)
!5835 = !DILocation(line: 2514, column: 7, scope: !5810)
!5836 = !DILocation(line: 2514, column: 12, scope: !5810)
!5837 = !DILocation(line: 2514, column: 16, scope: !5810)
!5838 = !{!5828, !3180, i64 16}
!5839 = !DILocation(line: 2516, column: 11, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5810, file: !245, line: 2516, column: 11)
!5841 = !DILocation(line: 2516, column: 19, scope: !5840)
!5842 = !DILocation(line: 2516, column: 23, scope: !5840)
!5843 = !DILocation(line: 2516, column: 11, scope: !5810)
!5844 = !DILocation(line: 2522, column: 22, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5846, file: !245, line: 2522, column: 15)
!5846 = distinct !DILexicalBlock(scope: !5840, file: !245, line: 2517, column: 9)
!5847 = !DILocation(line: 2522, column: 32, scope: !5845)
!5848 = !DILocation(line: 2522, column: 49, scope: !5845)
!5849 = !DILocation(line: 2522, column: 48, scope: !5845)
!5850 = !DILocation(line: 2522, column: 46, scope: !5845)
!5851 = !DILocation(line: 2522, column: 15, scope: !5845)
!5852 = !DILocation(line: 2522, column: 70, scope: !5845)
!5853 = !DILocation(line: 2522, column: 15, scope: !5846)
!5854 = !DILocation(line: 2524, column: 25, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5845, file: !245, line: 2523, column: 13)
!5856 = !DILocation(line: 2524, column: 32, scope: !5855)
!5857 = !DILocation(line: 2525, column: 22, scope: !5855)
!5858 = !DILocation(line: 2524, column: 15, scope: !5855)
!5859 = !DILocation(line: 2526, column: 15, scope: !5855)
!5860 = !DILocation(line: 2533, column: 22, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5846, file: !245, line: 2533, column: 15)
!5862 = !DILocation(line: 2533, column: 15, scope: !5861)
!5863 = !DILocation(line: 2533, column: 41, scope: !5861)
!5864 = !DILocation(line: 2533, column: 15, scope: !5846)
!5865 = !DILocation(line: 2535, column: 25, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5861, file: !245, line: 2534, column: 13)
!5867 = !DILocation(line: 2535, column: 32, scope: !5866)
!5868 = !DILocation(line: 2535, column: 53, scope: !5866)
!5869 = !DILocation(line: 2535, column: 15, scope: !5866)
!5870 = !DILocation(line: 2536, column: 15, scope: !5866)
!5871 = !DILocation(line: 2538, column: 28, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5861, file: !245, line: 2538, column: 20)
!5873 = !DILocation(line: 2538, column: 36, scope: !5872)
!5874 = !DILocation(line: 2538, column: 47, scope: !5872)
!5875 = !DILocation(line: 2538, column: 20, scope: !5861)
!5876 = !DILocation(line: 2542, column: 33, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5872, file: !245, line: 2539, column: 13)
!5878 = !DILocation(line: 2542, column: 24, scope: !5877)
!5879 = !DILocation(line: 2543, column: 32, scope: !5877)
!5880 = !DILocation(line: 2545, column: 27, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5877, file: !245, line: 2545, column: 19)
!5882 = !DILocation(line: 2545, column: 37, scope: !5881)
!5883 = !DILocation(line: 2545, column: 46, scope: !5881)
!5884 = !DILocation(line: 2545, column: 19, scope: !5881)
!5885 = !DILocation(line: 2545, column: 57, scope: !5881)
!5886 = !DILocation(line: 2545, column: 19, scope: !5877)
!5887 = !DILocation(line: 2547, column: 29, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5881, file: !245, line: 2546, column: 17)
!5889 = !DILocation(line: 2547, column: 36, scope: !5888)
!5890 = !DILocation(line: 2548, column: 26, scope: !5888)
!5891 = !DILocation(line: 2547, column: 19, scope: !5888)
!5892 = !DILocation(line: 2549, column: 19, scope: !5888)
!5893 = !DILocation(line: 2551, column: 13, scope: !5877)
!5894 = !DILocation(line: 2557, column: 17, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5846, file: !245, line: 2557, column: 15)
!5896 = !DILocation(line: 2557, column: 16, scope: !5895)
!5897 = !DILocation(line: 2557, column: 15, scope: !5846)
!5898 = !DILocation(line: 2559, column: 32, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5895, file: !245, line: 2558, column: 13)
!5900 = !DILocation(line: 2559, column: 49, scope: !5899)
!5901 = !DILocation(line: 2559, column: 64, scope: !5899)
!5902 = !DILocation(line: 2559, column: 15, scope: !5899)
!5903 = !DILocation(line: 2560, column: 16, scope: !5899)
!5904 = !DILocation(line: 2560, column: 55, scope: !5899)
!5905 = !DILocation(line: 2561, column: 13, scope: !5899)
!5906 = !DILocation(line: 2563, column: 15, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5846, file: !245, line: 2563, column: 15)
!5908 = !DILocation(line: 2563, column: 18, scope: !5907)
!5909 = !DILocation(line: 2563, column: 15, scope: !5846)
!5910 = !DILocation(line: 2565, column: 19, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5912, file: !245, line: 2565, column: 19)
!5912 = distinct !DILexicalBlock(scope: !5907, file: !245, line: 2564, column: 13)
!5913 = !DILocation(line: 2565, column: 22, scope: !5911)
!5914 = !DILocation(line: 2565, column: 19, scope: !5912)
!5915 = !DILocation(line: 2566, column: 25, scope: !5911)
!5916 = !DILocation(line: 2566, column: 54, scope: !5911)
!5917 = !DILocation(line: 2566, column: 17, scope: !5911)
!5918 = !DILocation(line: 2568, column: 31, scope: !5911)
!5919 = !DILocation(line: 2568, column: 41, scope: !5911)
!5920 = !DILocation(line: 2568, column: 17, scope: !5911)
!5921 = !DILocation(line: 2569, column: 13, scope: !5912)
!5922 = !DILocation(line: 2570, column: 9, scope: !5846)
!5923 = !DILocation(line: 2573, column: 31, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5840, file: !245, line: 2572, column: 9)
!5925 = !DILocation(line: 2578, column: 15, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5924, file: !245, line: 2578, column: 15)
!5927 = !DILocation(line: 2578, column: 18, scope: !5926)
!5928 = !DILocation(line: 2578, column: 39, scope: !5926)
!5929 = !DILocation(line: 2578, column: 42, scope: !5926)
!5930 = !DILocation(line: 2578, column: 45, scope: !5926)
!5931 = !DILocation(line: 2578, column: 15, scope: !5924)
!5932 = !DILocation(line: 2579, column: 42, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5926, file: !245, line: 2579, column: 17)
!5934 = !DILocation(line: 2579, column: 52, scope: !5933)
!5935 = !DILocation(line: 2579, column: 55, scope: !5933)
!5936 = !DILocation(line: 2580, column: 49, scope: !5933)
!5937 = !DILocation(line: 2579, column: 19, scope: !5933)
!5938 = !DILocation(line: 2579, column: 17, scope: !5926)
!5939 = !DILocation(line: 2582, column: 21, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5941, file: !245, line: 2582, column: 21)
!5941 = distinct !DILexicalBlock(scope: !5933, file: !245, line: 2581, column: 15)
!5942 = !DILocation(line: 2582, column: 24, scope: !5940)
!5943 = !DILocation(line: 2582, column: 21, scope: !5941)
!5944 = !DILocation(line: 2583, column: 19, scope: !5940)
!5945 = !DILocation(line: 2584, column: 15, scope: !5941)
!5946 = !DILocation(line: 2580, column: 50, scope: !5933)
!5947 = !DILocation(line: 2588, column: 11, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5810, file: !245, line: 2588, column: 11)
!5949 = !DILocation(line: 2588, column: 14, scope: !5948)
!5950 = !DILocation(line: 2588, column: 30, scope: !5948)
!5951 = !DILocation(line: 2588, column: 33, scope: !5948)
!5952 = !DILocation(line: 2588, column: 40, scope: !5948)
!5953 = !DILocation(line: 2588, column: 43, scope: !5948)
!5954 = !DILocation(line: 2588, column: 51, scope: !5948)
!5955 = !DILocation(line: 2588, column: 68, scope: !5948)
!5956 = !DILocation(line: 2588, column: 58, scope: !5948)
!5957 = !DILocation(line: 2588, column: 11, scope: !5810)
!5958 = !DILocation(line: 2592, column: 9, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5948, file: !245, line: 2589, column: 9)
!5960 = !DILocation(line: 2599, column: 34, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5948, file: !245, line: 2594, column: 9)
!5962 = !DILocation(line: 2599, column: 44, scope: !5961)
!5963 = !DILocation(line: 2599, column: 54, scope: !5961)
!5964 = !DILocation(line: 2599, column: 72, scope: !5961)
!5965 = !DILocation(line: 2599, column: 77, scope: !5961)
!5966 = !DILocation(line: 2600, column: 34, scope: !5961)
!5967 = !DILocation(line: 2601, column: 34, scope: !5961)
!5968 = !DILocation(line: 2599, column: 24, scope: !5961)
!5969 = !DILocation(line: 2599, column: 22, scope: !5961)
!5970 = !DILocation(line: 2603, column: 5, scope: !5810)
!5971 = !DILocation(line: 2604, column: 12, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5807, file: !245, line: 2604, column: 12)
!5973 = !DILocation(line: 2604, column: 15, scope: !5972)
!5974 = !DILocation(line: 2604, column: 12, scope: !5807)
!5975 = !DILocation(line: 2606, column: 23, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5972, file: !245, line: 2605, column: 5)
!5977 = !DILocation(line: 2607, column: 12, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5976, file: !245, line: 2607, column: 11)
!5979 = !DILocation(line: 2607, column: 11, scope: !5978)
!5980 = !DILocation(line: 2607, column: 21, scope: !5978)
!5981 = !DILocation(line: 2607, column: 11, scope: !5976)
!5982 = !DILocalVariable(name: "dot_sb", scope: !5983, file: !245, line: 2610, type: !317)
!5983 = distinct !DILexicalBlock(scope: !5978, file: !245, line: 2608, column: 9)
!5984 = !DILocation(line: 2610, column: 23, scope: !5983)
!5985 = !DILocalVariable(name: "dst_parent_sb", scope: !5983, file: !245, line: 2611, type: !317)
!5986 = !DILocation(line: 2611, column: 23, scope: !5983)
!5987 = !DILocalVariable(name: "dst_parent", scope: !5983, file: !245, line: 2612, type: !9)
!5988 = !DILocation(line: 2612, column: 17, scope: !5983)
!5989 = !DILocalVariable(name: "in_current_dir", scope: !5983, file: !245, line: 2613, type: !120)
!5990 = !DILocation(line: 2613, column: 16, scope: !5983)
!5991 = !DILocation(line: 2615, column: 34, scope: !5983)
!5992 = !DILocation(line: 2615, column: 24, scope: !5983)
!5993 = !DILocation(line: 2615, column: 22, scope: !5983)
!5994 = !DILocation(line: 2617, column: 29, scope: !5983)
!5995 = !DILocation(line: 2621, column: 29, scope: !5983)
!5996 = !DILocation(line: 2621, column: 32, scope: !5983)
!5997 = !DILocation(line: 2621, column: 52, scope: !5983)
!5998 = !DILocation(line: 2622, column: 29, scope: !5983)
!5999 = !DILocation(line: 2622, column: 38, scope: !5983)
!6000 = !DILocation(line: 2622, column: 32, scope: !5983)
!6001 = !DILocation(line: 2622, column: 66, scope: !5983)
!6002 = !DILocation(line: 2623, column: 29, scope: !5983)
!6003 = !DILocation(line: 2623, column: 32, scope: !5983)
!6004 = !DILocation(line: 0, scope: !5983)
!6005 = !DILocation(line: 2617, column: 26, scope: !5983)
!6006 = !DILocation(line: 2624, column: 17, scope: !5983)
!6007 = !DILocation(line: 2624, column: 11, scope: !5983)
!6008 = !DILocation(line: 2626, column: 17, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5983, file: !245, line: 2626, column: 15)
!6010 = !DILocation(line: 2626, column: 15, scope: !5983)
!6011 = !DILocation(line: 2629, column: 12, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6009, file: !245, line: 2627, column: 13)
!6013 = !DILocation(line: 2630, column: 22, scope: !6012)
!6014 = !DILocation(line: 2628, column: 15, scope: !6012)
!6015 = !DILocation(line: 2631, column: 15, scope: !6012)
!6016 = !DILocation(line: 2633, column: 9, scope: !5983)
!6017 = !DILocalVariable(name: "err", scope: !5976, file: !245, line: 2635, type: !7)
!6018 = !DILocation(line: 2635, column: 11, scope: !5976)
!6019 = !DILocation(line: 2635, column: 34, scope: !5976)
!6020 = !DILocation(line: 2635, column: 54, scope: !5976)
!6021 = !DILocation(line: 2636, column: 34, scope: !5976)
!6022 = !DILocation(line: 2636, column: 37, scope: !5976)
!6023 = !DILocation(line: 2635, column: 17, scope: !5976)
!6024 = !DILocation(line: 2637, column: 15, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !5976, file: !245, line: 2637, column: 11)
!6026 = !DILocation(line: 2637, column: 13, scope: !6025)
!6027 = !DILocation(line: 2637, column: 11, scope: !5976)
!6028 = !DILocation(line: 2639, column: 21, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6025, file: !245, line: 2638, column: 9)
!6030 = !DILocation(line: 2639, column: 26, scope: !6029)
!6031 = !DILocation(line: 2640, column: 18, scope: !6029)
!6032 = !DILocation(line: 2640, column: 43, scope: !6029)
!6033 = !DILocation(line: 2639, column: 11, scope: !6029)
!6034 = !DILocation(line: 2641, column: 11, scope: !6029)
!6035 = !DILocation(line: 2643, column: 5, scope: !5976)
!6036 = !DILocation(line: 2658, column: 12, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !5972, file: !245, line: 2658, column: 12)
!6038 = !DILocation(line: 2658, column: 15, scope: !6037)
!6039 = !DILocation(line: 2658, column: 12, scope: !5972)
!6040 = !DILocalVariable(name: "replace", scope: !6041, file: !245, line: 2662, type: !120)
!6041 = distinct !DILexicalBlock(scope: !6037, file: !245, line: 2661, column: 5)
!6042 = !DILocation(line: 2662, column: 12, scope: !6041)
!6043 = !DILocation(line: 2662, column: 23, scope: !6041)
!6044 = !DILocation(line: 2662, column: 26, scope: !6041)
!6045 = !DILocation(line: 2663, column: 23, scope: !6041)
!6046 = !DILocation(line: 2663, column: 26, scope: !6041)
!6047 = !DILocation(line: 2663, column: 29, scope: !6041)
!6048 = !DILocation(line: 2663, column: 41, scope: !6041)
!6049 = !DILocation(line: 2664, column: 31, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6041, file: !245, line: 2664, column: 11)
!6051 = !DILocation(line: 2664, column: 41, scope: !6050)
!6052 = !DILocation(line: 2664, column: 51, scope: !6050)
!6053 = !DILocation(line: 2664, column: 67, scope: !6050)
!6054 = !DILocation(line: 2664, column: 13, scope: !6050)
!6055 = !DILocation(line: 2664, column: 11, scope: !6041)
!6056 = !DILocation(line: 2665, column: 9, scope: !6050)
!6057 = !DILocation(line: 2666, column: 5, scope: !6041)
!6058 = !DILocation(line: 2667, column: 12, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6037, file: !245, line: 2667, column: 12)
!6060 = !DILocation(line: 2668, column: 12, scope: !6059)
!6061 = !DILocation(line: 2668, column: 16, scope: !6059)
!6062 = !DILocation(line: 2668, column: 19, scope: !6059)
!6063 = !DILocation(line: 2668, column: 35, scope: !6059)
!6064 = !DILocation(line: 2668, column: 39, scope: !6059)
!6065 = !DILocation(line: 2667, column: 12, scope: !6037)
!6066 = !DILocation(line: 2670, column: 25, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6059, file: !245, line: 2669, column: 5)
!6068 = !DILocation(line: 2680, column: 23, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6067, file: !245, line: 2680, column: 11)
!6070 = !DILocation(line: 2680, column: 33, scope: !6069)
!6071 = !DILocation(line: 2680, column: 43, scope: !6069)
!6072 = !DILocation(line: 2680, column: 46, scope: !6069)
!6073 = !DILocation(line: 2680, column: 60, scope: !6069)
!6074 = !DILocation(line: 2681, column: 23, scope: !6069)
!6075 = !DILocation(line: 2680, column: 13, scope: !6069)
!6076 = !DILocation(line: 2680, column: 11, scope: !6067)
!6077 = !DILocation(line: 2682, column: 9, scope: !6069)
!6078 = !DILocation(line: 2683, column: 5, scope: !6067)
!6079 = !DILocation(line: 2684, column: 12, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6059, file: !245, line: 2684, column: 12)
!6081 = !DILocation(line: 2684, column: 12, scope: !6059)
!6082 = !DILocation(line: 2690, column: 18, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6084, file: !245, line: 2690, column: 11)
!6084 = distinct !DILexicalBlock(scope: !6080, file: !245, line: 2685, column: 5)
!6085 = !DILocation(line: 2690, column: 28, scope: !6083)
!6086 = !DILocation(line: 2690, column: 40, scope: !6083)
!6087 = !DILocation(line: 2690, column: 39, scope: !6083)
!6088 = !DILocation(line: 2690, column: 37, scope: !6083)
!6089 = !DILocation(line: 2690, column: 11, scope: !6083)
!6090 = !DILocation(line: 2690, column: 64, scope: !6083)
!6091 = !DILocation(line: 2690, column: 11, scope: !6084)
!6092 = !DILocation(line: 2691, column: 21, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6083, file: !245, line: 2691, column: 13)
!6094 = !DILocation(line: 2691, column: 31, scope: !6093)
!6095 = !DILocation(line: 2691, column: 40, scope: !6093)
!6096 = !DILocation(line: 2691, column: 54, scope: !6093)
!6097 = !DILocation(line: 2691, column: 53, scope: !6093)
!6098 = !DILocation(line: 2691, column: 51, scope: !6093)
!6099 = !DILocation(line: 2691, column: 13, scope: !6093)
!6100 = !DILocation(line: 2691, column: 75, scope: !6093)
!6101 = !DILocation(line: 2691, column: 13, scope: !6083)
!6102 = !DILocation(line: 2693, column: 23, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6093, file: !245, line: 2692, column: 11)
!6104 = !DILocation(line: 2693, column: 30, scope: !6103)
!6105 = !DILocation(line: 2693, column: 58, scope: !6103)
!6106 = !DILocation(line: 2693, column: 13, scope: !6103)
!6107 = !DILocation(line: 2694, column: 13, scope: !6103)
!6108 = !DILocation(line: 2691, column: 78, scope: !6093)
!6109 = !DILocation(line: 2696, column: 5, scope: !6084)
!6110 = !DILocation(line: 2697, column: 12, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6080, file: !245, line: 2697, column: 12)
!6112 = !DILocation(line: 2697, column: 31, scope: !6111)
!6113 = !DILocation(line: 2697, column: 34, scope: !6111)
!6114 = !DILocation(line: 2697, column: 53, scope: !6111)
!6115 = !DILocation(line: 2697, column: 56, scope: !6111)
!6116 = !DILocation(line: 2697, column: 12, scope: !6080)
!6117 = !DILocation(line: 2699, column: 18, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6119, file: !245, line: 2699, column: 11)
!6119 = distinct !DILexicalBlock(scope: !6111, file: !245, line: 2698, column: 5)
!6120 = !DILocation(line: 2699, column: 28, scope: !6118)
!6121 = !DILocation(line: 2699, column: 40, scope: !6118)
!6122 = !DILocation(line: 2699, column: 39, scope: !6118)
!6123 = !DILocation(line: 2699, column: 37, scope: !6118)
!6124 = !DILocation(line: 2699, column: 68, scope: !6118)
!6125 = !{!3179, !3180, i64 40}
!6126 = !DILocation(line: 2699, column: 11, scope: !6118)
!6127 = !DILocation(line: 2700, column: 11, scope: !6118)
!6128 = !DILocation(line: 2699, column: 11, scope: !6119)
!6129 = !DILocation(line: 2702, column: 21, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6118, file: !245, line: 2701, column: 9)
!6131 = !DILocation(line: 2702, column: 28, scope: !6130)
!6132 = !DILocation(line: 2703, column: 18, scope: !6130)
!6133 = !DILocation(line: 2702, column: 11, scope: !6130)
!6134 = !DILocation(line: 2704, column: 11, scope: !6130)
!6135 = !DILocation(line: 2706, column: 5, scope: !6119)
!6136 = !DILocation(line: 2707, column: 12, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6111, file: !245, line: 2707, column: 12)
!6138 = !DILocation(line: 2707, column: 12, scope: !6111)
!6139 = !DILocalVariable(name: "src_link_val", scope: !6140, file: !245, line: 2709, type: !9)
!6140 = distinct !DILexicalBlock(scope: !6137, file: !245, line: 2708, column: 5)
!6141 = !DILocation(line: 2709, column: 13, scope: !6140)
!6142 = !DILocation(line: 2709, column: 49, scope: !6140)
!6143 = !DILocation(line: 2709, column: 66, scope: !6140)
!6144 = !DILocation(line: 2709, column: 28, scope: !6140)
!6145 = !DILocation(line: 2710, column: 23, scope: !6140)
!6146 = !DILocation(line: 2711, column: 11, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6140, file: !245, line: 2711, column: 11)
!6148 = !DILocation(line: 2711, column: 24, scope: !6147)
!6149 = !DILocation(line: 2711, column: 11, scope: !6140)
!6150 = !DILocation(line: 2713, column: 21, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6147, file: !245, line: 2712, column: 9)
!6152 = !DILocation(line: 2713, column: 28, scope: !6151)
!6153 = !DILocation(line: 2714, column: 18, scope: !6151)
!6154 = !DILocation(line: 2713, column: 11, scope: !6151)
!6155 = !DILocation(line: 2715, column: 11, scope: !6151)
!6156 = !DILocalVariable(name: "symlink_err", scope: !6140, file: !245, line: 2718, type: !7)
!6157 = !DILocation(line: 2718, column: 11, scope: !6140)
!6158 = !DILocation(line: 2718, column: 42, scope: !6140)
!6159 = !DILocation(line: 2718, column: 66, scope: !6140)
!6160 = !DILocation(line: 2719, column: 42, scope: !6140)
!6161 = !DILocation(line: 2719, column: 45, scope: !6140)
!6162 = !DILocation(line: 2718, column: 25, scope: !6140)
!6163 = !DILocation(line: 2720, column: 15, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6140, file: !245, line: 2720, column: 11)
!6165 = !DILocation(line: 2720, column: 13, scope: !6164)
!6166 = !DILocation(line: 2720, column: 27, scope: !6164)
!6167 = !DILocation(line: 2720, column: 30, scope: !6164)
!6168 = !DILocation(line: 2720, column: 33, scope: !6164)
!6169 = !DILocation(line: 2720, column: 40, scope: !6164)
!6170 = !DILocation(line: 2720, column: 44, scope: !6164)
!6171 = !DILocation(line: 2720, column: 52, scope: !6164)
!6172 = !DILocation(line: 2720, column: 55, scope: !6164)
!6173 = !DILocation(line: 2721, column: 11, scope: !6164)
!6174 = !DILocation(line: 2721, column: 21, scope: !6164)
!6175 = !DILocation(line: 2721, column: 40, scope: !6164)
!6176 = !DILocation(line: 2721, column: 32, scope: !6164)
!6177 = !DILocation(line: 2721, column: 29, scope: !6164)
!6178 = !DILocation(line: 2720, column: 11, scope: !6140)
!6179 = !DILocalVariable(name: "dest_link_val", scope: !6180, file: !245, line: 2727, type: !9)
!6180 = distinct !DILexicalBlock(scope: !6164, file: !245, line: 2722, column: 9)
!6181 = !DILocation(line: 2727, column: 17, scope: !6180)
!6182 = !DILocation(line: 2728, column: 34, scope: !6180)
!6183 = !DILocation(line: 2728, column: 51, scope: !6180)
!6184 = !DILocation(line: 2728, column: 13, scope: !6180)
!6185 = !DILocation(line: 2729, column: 15, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6180, file: !245, line: 2729, column: 15)
!6187 = !DILocation(line: 2729, column: 15, scope: !6180)
!6188 = !DILocation(line: 2731, column: 19, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6190, file: !245, line: 2731, column: 19)
!6190 = distinct !DILexicalBlock(scope: !6186, file: !245, line: 2730, column: 13)
!6191 = !DILocation(line: 2731, column: 19, scope: !6190)
!6192 = !DILocation(line: 2732, column: 29, scope: !6189)
!6193 = !DILocation(line: 2732, column: 17, scope: !6189)
!6194 = !DILocation(line: 2733, column: 21, scope: !6190)
!6195 = !DILocation(line: 2733, column: 15, scope: !6190)
!6196 = !DILocation(line: 2734, column: 13, scope: !6190)
!6197 = !DILocation(line: 2735, column: 9, scope: !6180)
!6198 = !DILocation(line: 2736, column: 13, scope: !6140)
!6199 = !DILocation(line: 2736, column: 7, scope: !6140)
!6200 = !DILocation(line: 2737, column: 15, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6140, file: !245, line: 2737, column: 11)
!6202 = !DILocation(line: 2737, column: 13, scope: !6201)
!6203 = !DILocation(line: 2737, column: 11, scope: !6140)
!6204 = !DILocation(line: 2739, column: 21, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6201, file: !245, line: 2738, column: 9)
!6206 = !DILocation(line: 2739, column: 34, scope: !6205)
!6207 = !DILocation(line: 2740, column: 18, scope: !6205)
!6208 = !DILocation(line: 2739, column: 11, scope: !6205)
!6209 = !DILocation(line: 2741, column: 11, scope: !6205)
!6210 = !DILocation(line: 2744, column: 11, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6140, file: !245, line: 2744, column: 11)
!6212 = !DILocation(line: 2744, column: 14, scope: !6211)
!6213 = !DILocation(line: 2744, column: 11, scope: !6140)
!6214 = !DILocation(line: 2745, column: 9, scope: !6211)
!6215 = !DILocation(line: 2747, column: 11, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6140, file: !245, line: 2747, column: 11)
!6217 = !DILocation(line: 2747, column: 14, scope: !6216)
!6218 = !DILocation(line: 2747, column: 11, scope: !6140)
!6219 = !DILocation(line: 2752, column: 26, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6221, file: !245, line: 2751, column: 15)
!6221 = distinct !DILexicalBlock(scope: !6216, file: !245, line: 2748, column: 9)
!6222 = !DILocation(line: 2752, column: 43, scope: !6220)
!6223 = !{!3179, !2983, i64 28}
!6224 = !DILocation(line: 2752, column: 58, scope: !6220)
!6225 = !{!3179, !2983, i64 32}
!6226 = !DILocation(line: 2752, column: 18, scope: !6220)
!6227 = !DILocation(line: 2752, column: 66, scope: !6220)
!6228 = !DILocation(line: 2753, column: 15, scope: !6220)
!6229 = !DILocation(line: 2753, column: 38, scope: !6220)
!6230 = !DILocation(line: 2753, column: 20, scope: !6220)
!6231 = !DILocation(line: 2751, column: 15, scope: !6221)
!6232 = !DILocation(line: 2755, column: 25, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6220, file: !245, line: 2754, column: 13)
!6234 = !DILocation(line: 2755, column: 32, scope: !6233)
!6235 = !DILocation(line: 2756, column: 22, scope: !6233)
!6236 = !DILocation(line: 2755, column: 15, scope: !6233)
!6237 = !DILocation(line: 2757, column: 19, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6233, file: !245, line: 2757, column: 19)
!6239 = !DILocation(line: 2757, column: 22, scope: !6238)
!6240 = !DILocation(line: 2757, column: 19, scope: !6233)
!6241 = !DILocation(line: 2758, column: 17, scope: !6238)
!6242 = !DILocation(line: 2759, column: 13, scope: !6233)
!6243 = !DILocation(line: 2767, column: 9, scope: !6221)
!6244 = !DILocation(line: 2768, column: 5, scope: !6140)
!6245 = !DILocation(line: 2771, column: 20, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6137, file: !245, line: 2770, column: 5)
!6247 = !DILocation(line: 2771, column: 51, scope: !6246)
!6248 = !DILocation(line: 2771, column: 7, scope: !6246)
!6249 = !DILocation(line: 2772, column: 7, scope: !6246)
!6250 = !DILocation(line: 2777, column: 8, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2777, column: 7)
!6252 = !DILocation(line: 2777, column: 16, scope: !6251)
!6253 = !DILocation(line: 2777, column: 20, scope: !6251)
!6254 = !DILocation(line: 2777, column: 23, scope: !6251)
!6255 = !DILocation(line: 2777, column: 39, scope: !6251)
!6256 = !DILocation(line: 2777, column: 43, scope: !6251)
!6257 = !DILocation(line: 2778, column: 7, scope: !6251)
!6258 = !DILocation(line: 2778, column: 11, scope: !6251)
!6259 = !DILocation(line: 2778, column: 14, scope: !6251)
!6260 = !DILocation(line: 2778, column: 35, scope: !6251)
!6261 = !DILocation(line: 2778, column: 38, scope: !6251)
!6262 = !DILocation(line: 2778, column: 41, scope: !6251)
!6263 = !DILocation(line: 2777, column: 7, scope: !4892)
!6264 = !DILocation(line: 2780, column: 36, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6266, file: !245, line: 2780, column: 11)
!6266 = distinct !DILexicalBlock(scope: !6251, file: !245, line: 2779, column: 5)
!6267 = !DILocation(line: 2780, column: 46, scope: !6265)
!6268 = !DILocation(line: 2780, column: 49, scope: !6265)
!6269 = !DILocation(line: 2781, column: 43, scope: !6265)
!6270 = !DILocation(line: 2780, column: 13, scope: !6265)
!6271 = !DILocation(line: 2780, column: 11, scope: !6266)
!6272 = !DILocation(line: 2783, column: 16, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6274, file: !245, line: 2783, column: 16)
!6274 = distinct !DILexicalBlock(scope: !6265, file: !245, line: 2782, column: 9)
!6275 = !DILocation(line: 2783, column: 19, scope: !6273)
!6276 = !DILocation(line: 2783, column: 16, scope: !6274)
!6277 = !DILocation(line: 2784, column: 14, scope: !6273)
!6278 = !DILocation(line: 2785, column: 9, scope: !6274)
!6279 = !DILocation(line: 2786, column: 5, scope: !6266)
!6280 = !DILocation(line: 2788, column: 7, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2788, column: 7)
!6282 = !DILocation(line: 2788, column: 24, scope: !6281)
!6283 = !DILocation(line: 2788, column: 27, scope: !6281)
!6284 = !DILocation(line: 2788, column: 30, scope: !6281)
!6285 = !DILocation(line: 2788, column: 7, scope: !4892)
!6286 = !DILocalVariable(name: "sb", scope: !6287, file: !245, line: 2792, type: !317)
!6287 = distinct !DILexicalBlock(scope: !6281, file: !245, line: 2789, column: 5)
!6288 = !DILocation(line: 2792, column: 19, scope: !6287)
!6289 = !DILocation(line: 2793, column: 18, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6287, file: !245, line: 2793, column: 11)
!6291 = !DILocation(line: 2793, column: 11, scope: !6290)
!6292 = !DILocation(line: 2793, column: 33, scope: !6290)
!6293 = !DILocation(line: 2793, column: 11, scope: !6287)
!6294 = !DILocation(line: 2794, column: 22, scope: !6290)
!6295 = !DILocation(line: 2794, column: 25, scope: !6290)
!6296 = !DILocation(line: 2794, column: 36, scope: !6290)
!6297 = !DILocation(line: 2794, column: 9, scope: !6290)
!6298 = !DILocation(line: 2795, column: 5, scope: !6287)
!6299 = !DILocation(line: 2799, column: 7, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2799, column: 7)
!6301 = !DILocation(line: 2799, column: 10, scope: !6300)
!6302 = !DILocation(line: 2799, column: 20, scope: !6300)
!6303 = !DILocation(line: 2799, column: 25, scope: !6300)
!6304 = !DILocation(line: 2799, column: 7, scope: !4892)
!6305 = !DILocation(line: 2802, column: 12, scope: !6300)
!6306 = !DILocation(line: 2802, column: 5, scope: !6300)
!6307 = !DILocation(line: 2804, column: 7, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2804, column: 7)
!6309 = !DILocation(line: 2804, column: 7, scope: !4892)
!6310 = !DILocation(line: 2805, column: 12, scope: !6308)
!6311 = !DILocation(line: 2805, column: 5, scope: !6308)
!6312 = !DILocation(line: 2819, column: 7, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2819, column: 7)
!6314 = !DILocation(line: 2819, column: 10, scope: !6313)
!6315 = !DILocation(line: 2819, column: 7, scope: !4892)
!6316 = !DILocalVariable(name: "timespec", scope: !6317, file: !245, line: 2821, type: !357)
!6317 = distinct !DILexicalBlock(scope: !6313, file: !245, line: 2820, column: 5)
!6318 = !DILocation(line: 2821, column: 23, scope: !6317)
!6319 = !DILocation(line: 2822, column: 7, scope: !6317)
!6320 = !DILocation(line: 2822, column: 21, scope: !6317)
!6321 = !{i64 0, i64 8, !3848, i64 8, i64 8, !3848}
!6322 = !DILocation(line: 2823, column: 7, scope: !6317)
!6323 = !DILocation(line: 2823, column: 21, scope: !6317)
!6324 = !DILocation(line: 2825, column: 12, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6317, file: !245, line: 2825, column: 11)
!6326 = !DILocation(line: 2826, column: 31, scope: !6325)
!6327 = !DILocation(line: 2826, column: 41, scope: !6325)
!6328 = !DILocation(line: 2826, column: 14, scope: !6325)
!6329 = !DILocation(line: 2827, column: 23, scope: !6325)
!6330 = !DILocation(line: 2827, column: 33, scope: !6325)
!6331 = !DILocation(line: 2827, column: 14, scope: !6325)
!6332 = !DILocation(line: 2828, column: 11, scope: !6325)
!6333 = !DILocation(line: 2825, column: 11, scope: !6317)
!6334 = !DILocation(line: 2830, column: 21, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6325, file: !245, line: 2829, column: 9)
!6336 = !DILocation(line: 2830, column: 28, scope: !6335)
!6337 = !DILocation(line: 2830, column: 58, scope: !6335)
!6338 = !DILocation(line: 2830, column: 11, scope: !6335)
!6339 = !DILocation(line: 2831, column: 15, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6335, file: !245, line: 2831, column: 15)
!6341 = !DILocation(line: 2831, column: 18, scope: !6340)
!6342 = !DILocation(line: 2831, column: 15, scope: !6335)
!6343 = !DILocation(line: 2832, column: 13, scope: !6340)
!6344 = !DILocation(line: 2833, column: 9, scope: !6335)
!6345 = !DILocation(line: 2834, column: 5, scope: !6317)
!6346 = !DILocation(line: 2837, column: 8, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2837, column: 7)
!6348 = !DILocation(line: 2837, column: 24, scope: !6347)
!6349 = !DILocation(line: 2837, column: 27, scope: !6347)
!6350 = !DILocation(line: 2837, column: 30, scope: !6347)
!6351 = !DILocation(line: 2838, column: 7, scope: !6347)
!6352 = !DILocation(line: 2838, column: 11, scope: !6347)
!6353 = !DILocation(line: 2838, column: 19, scope: !6347)
!6354 = !DILocation(line: 2838, column: 23, scope: !6347)
!6355 = !DILocation(line: 2837, column: 7, scope: !4892)
!6356 = !DILocation(line: 2840, column: 26, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6347, file: !245, line: 2839, column: 5)
!6358 = !DILocation(line: 2840, column: 29, scope: !6357)
!6359 = !DILocation(line: 2840, column: 52, scope: !6357)
!6360 = !DILocation(line: 2840, column: 15, scope: !6357)
!6361 = !DILocation(line: 2840, column: 7, scope: !6357)
!6362 = !DILocation(line: 2843, column: 11, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6357, file: !245, line: 2841, column: 9)
!6364 = !DILocation(line: 2846, column: 20, scope: !6363)
!6365 = !DILocation(line: 2847, column: 11, scope: !6363)
!6366 = !DILocation(line: 2849, column: 5, scope: !6357)
!6367 = !DILocation(line: 2852, column: 7, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2852, column: 7)
!6369 = !DILocation(line: 2852, column: 10, scope: !6368)
!6370 = !DILocation(line: 2852, column: 25, scope: !6368)
!6371 = !DILocation(line: 2852, column: 41, scope: !6368)
!6372 = !DILocation(line: 2852, column: 55, scope: !6368)
!6373 = !DILocation(line: 2852, column: 69, scope: !6368)
!6374 = !DILocation(line: 2852, column: 30, scope: !6368)
!6375 = !DILocation(line: 2853, column: 7, scope: !6368)
!6376 = !DILocation(line: 2853, column: 10, scope: !6368)
!6377 = !DILocation(line: 2853, column: 13, scope: !6368)
!6378 = !DILocation(line: 2852, column: 7, scope: !4892)
!6379 = !DILocation(line: 2854, column: 5, scope: !6368)
!6380 = !DILocation(line: 2857, column: 7, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2857, column: 7)
!6382 = !DILocation(line: 2857, column: 7, scope: !4892)
!6383 = !DILocation(line: 2858, column: 12, scope: !6381)
!6384 = !DILocation(line: 2858, column: 5, scope: !6381)
!6385 = !DILocation(line: 2860, column: 15, scope: !4892)
!6386 = !DILocation(line: 2860, column: 3, scope: !4892)
!6387 = !DILocation(line: 2862, column: 7, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2862, column: 7)
!6389 = !DILocation(line: 2862, column: 10, scope: !6388)
!6390 = !DILocation(line: 2862, column: 24, scope: !6388)
!6391 = !DILocation(line: 2862, column: 27, scope: !6388)
!6392 = !DILocation(line: 2862, column: 30, scope: !6388)
!6393 = !DILocation(line: 2862, column: 7, scope: !4892)
!6394 = !DILocation(line: 2864, column: 21, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6396, file: !245, line: 2864, column: 11)
!6396 = distinct !DILexicalBlock(scope: !6388, file: !245, line: 2863, column: 5)
!6397 = !DILocation(line: 2864, column: 35, scope: !6395)
!6398 = !DILocation(line: 2864, column: 49, scope: !6395)
!6399 = !DILocation(line: 2864, column: 11, scope: !6395)
!6400 = !DILocation(line: 2864, column: 59, scope: !6395)
!6401 = !DILocation(line: 2865, column: 11, scope: !6395)
!6402 = !DILocation(line: 2865, column: 14, scope: !6395)
!6403 = !DILocation(line: 2865, column: 17, scope: !6395)
!6404 = !DILocation(line: 2864, column: 11, scope: !6396)
!6405 = !DILocation(line: 2866, column: 9, scope: !6395)
!6406 = !DILocation(line: 2867, column: 5, scope: !6396)
!6407 = !DILocation(line: 2868, column: 12, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6388, file: !245, line: 2868, column: 12)
!6409 = !DILocation(line: 2868, column: 15, scope: !6408)
!6410 = !DILocation(line: 2868, column: 12, scope: !6388)
!6411 = !DILocation(line: 2870, column: 20, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !245, line: 2870, column: 11)
!6413 = distinct !DILexicalBlock(scope: !6408, file: !245, line: 2869, column: 5)
!6414 = !DILocation(line: 2870, column: 34, scope: !6412)
!6415 = !DILocation(line: 2870, column: 37, scope: !6412)
!6416 = !DILocation(line: 2870, column: 11, scope: !6412)
!6417 = !DILocation(line: 2870, column: 43, scope: !6412)
!6418 = !DILocation(line: 2870, column: 11, scope: !6413)
!6419 = !DILocation(line: 2871, column: 9, scope: !6412)
!6420 = !DILocation(line: 2872, column: 5, scope: !6413)
!6421 = !DILocation(line: 2873, column: 12, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6408, file: !245, line: 2873, column: 12)
!6423 = !DILocation(line: 2873, column: 15, scope: !6422)
!6424 = !DILocation(line: 2873, column: 41, scope: !6422)
!6425 = !DILocation(line: 2873, column: 44, scope: !6422)
!6426 = !DILocation(line: 2873, column: 12, scope: !6408)
!6427 = !DILocalVariable(name: "default_permissions", scope: !6428, file: !245, line: 2875, type: !7)
!6428 = distinct !DILexicalBlock(scope: !6422, file: !245, line: 2874, column: 5)
!6429 = !DILocation(line: 2875, column: 11, scope: !6428)
!6430 = !DILocation(line: 2875, column: 33, scope: !6428)
!6431 = !DILocation(line: 2875, column: 52, scope: !6428)
!6432 = !DILocation(line: 2875, column: 55, scope: !6428)
!6433 = !DILocation(line: 2877, column: 20, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6428, file: !245, line: 2877, column: 11)
!6435 = !DILocation(line: 2877, column: 34, scope: !6434)
!6436 = !DILocation(line: 2877, column: 57, scope: !6434)
!6437 = !DILocation(line: 2877, column: 56, scope: !6434)
!6438 = !DILocation(line: 2877, column: 54, scope: !6434)
!6439 = !DILocation(line: 2877, column: 11, scope: !6434)
!6440 = !DILocation(line: 2877, column: 74, scope: !6434)
!6441 = !DILocation(line: 2877, column: 11, scope: !6428)
!6442 = !DILocation(line: 2878, column: 9, scope: !6434)
!6443 = !DILocation(line: 2879, column: 5, scope: !6428)
!6444 = !DILocation(line: 2882, column: 11, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6446, file: !245, line: 2882, column: 11)
!6446 = distinct !DILexicalBlock(scope: !6422, file: !245, line: 2881, column: 5)
!6447 = !DILocation(line: 2882, column: 11, scope: !6446)
!6448 = !DILocation(line: 2884, column: 36, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6445, file: !245, line: 2883, column: 9)
!6450 = !DILocation(line: 2884, column: 34, scope: !6449)
!6451 = !DILocation(line: 2884, column: 31, scope: !6449)
!6452 = !DILocation(line: 2886, column: 15, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6449, file: !245, line: 2886, column: 15)
!6454 = !DILocation(line: 2886, column: 35, scope: !6453)
!6455 = !DILocation(line: 2886, column: 39, scope: !6453)
!6456 = !DILocation(line: 2886, column: 15, scope: !6449)
!6457 = !DILocation(line: 2894, column: 19, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6459, file: !245, line: 2894, column: 19)
!6459 = distinct !DILexicalBlock(scope: !6453, file: !245, line: 2887, column: 13)
!6460 = !DILocation(line: 2894, column: 27, scope: !6458)
!6461 = !DILocation(line: 2894, column: 37, scope: !6458)
!6462 = !DILocation(line: 2894, column: 30, scope: !6458)
!6463 = !DILocation(line: 2894, column: 56, scope: !6458)
!6464 = !DILocation(line: 2894, column: 19, scope: !6459)
!6465 = !DILocation(line: 2896, column: 29, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6458, file: !245, line: 2895, column: 17)
!6467 = !DILocation(line: 2896, column: 36, scope: !6466)
!6468 = !DILocation(line: 2896, column: 57, scope: !6466)
!6469 = !DILocation(line: 2896, column: 19, scope: !6466)
!6470 = !DILocation(line: 2897, column: 19, scope: !6466)
!6471 = !DILocation(line: 2899, column: 33, scope: !6459)
!6472 = !DILocation(line: 2899, column: 24, scope: !6459)
!6473 = !DILocation(line: 2900, column: 19, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6459, file: !245, line: 2900, column: 19)
!6475 = !DILocation(line: 2900, column: 42, scope: !6474)
!6476 = !DILocation(line: 2900, column: 41, scope: !6474)
!6477 = !DILocation(line: 2900, column: 39, scope: !6474)
!6478 = !DILocation(line: 2900, column: 19, scope: !6459)
!6479 = !DILocation(line: 2901, column: 34, scope: !6474)
!6480 = !DILocation(line: 2901, column: 17, scope: !6474)
!6481 = !DILocation(line: 2902, column: 13, scope: !6459)
!6482 = !DILocation(line: 2903, column: 9, scope: !6449)
!6483 = !DILocation(line: 2905, column: 11, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6446, file: !245, line: 2905, column: 11)
!6485 = !DILocation(line: 2905, column: 11, scope: !6446)
!6486 = !DILocation(line: 2907, column: 23, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6488, file: !245, line: 2907, column: 15)
!6488 = distinct !DILexicalBlock(scope: !6484, file: !245, line: 2906, column: 9)
!6489 = !DILocation(line: 2907, column: 33, scope: !6487)
!6490 = !DILocation(line: 2907, column: 44, scope: !6487)
!6491 = !DILocation(line: 2907, column: 42, scope: !6487)
!6492 = !DILocation(line: 2907, column: 15, scope: !6487)
!6493 = !DILocation(line: 2907, column: 65, scope: !6487)
!6494 = !DILocation(line: 2907, column: 15, scope: !6488)
!6495 = !DILocation(line: 2909, column: 25, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6487, file: !245, line: 2908, column: 13)
!6497 = !DILocation(line: 2909, column: 32, scope: !6496)
!6498 = !DILocation(line: 2910, column: 22, scope: !6496)
!6499 = !DILocation(line: 2909, column: 15, scope: !6496)
!6500 = !DILocation(line: 2911, column: 19, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6496, file: !245, line: 2911, column: 19)
!6502 = !DILocation(line: 2911, column: 22, scope: !6501)
!6503 = !DILocation(line: 2911, column: 19, scope: !6496)
!6504 = !DILocation(line: 2912, column: 17, scope: !6501)
!6505 = !DILocation(line: 2913, column: 13, scope: !6496)
!6506 = !DILocation(line: 2914, column: 9, scope: !6488)
!6507 = !DILocation(line: 2917, column: 10, scope: !4892)
!6508 = !DILocation(line: 2917, column: 3, scope: !4892)
!6509 = !DILabel(scope: !4892, name: "un_backup", file: !245, line: 2919)
!6510 = !DILocation(line: 2919, column: 1, scope: !4892)
!6511 = !DILocation(line: 2921, column: 7, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2921, column: 7)
!6513 = !DILocation(line: 2921, column: 10, scope: !6512)
!6514 = !DILocation(line: 2921, column: 7, scope: !4892)
!6515 = !DILocation(line: 2922, column: 5, scope: !6512)
!6516 = !DILocation(line: 2930, column: 7, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2930, column: 7)
!6518 = !DILocation(line: 2930, column: 20, scope: !6517)
!6519 = !DILocation(line: 2930, column: 7, scope: !4892)
!6520 = !DILocation(line: 2931, column: 28, scope: !6517)
!6521 = !DILocation(line: 2931, column: 43, scope: !6517)
!6522 = !DILocation(line: 2931, column: 5, scope: !6517)
!6523 = !DILocation(line: 2933, column: 7, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2933, column: 7)
!6525 = !DILocation(line: 2933, column: 7, scope: !4892)
!6526 = !DILocation(line: 2935, column: 19, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6528, file: !245, line: 2935, column: 11)
!6528 = distinct !DILexicalBlock(scope: !6524, file: !245, line: 2934, column: 5)
!6529 = !DILocation(line: 2935, column: 31, scope: !6527)
!6530 = !DILocation(line: 2935, column: 11, scope: !6527)
!6531 = !DILocation(line: 2935, column: 41, scope: !6527)
!6532 = !DILocation(line: 2935, column: 11, scope: !6528)
!6533 = !DILocation(line: 2936, column: 19, scope: !6527)
!6534 = !DILocation(line: 2936, column: 26, scope: !6527)
!6535 = !DILocation(line: 2936, column: 52, scope: !6527)
!6536 = !DILocation(line: 2936, column: 9, scope: !6527)
!6537 = !DILocation(line: 2939, column: 15, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6539, file: !245, line: 2939, column: 15)
!6539 = distinct !DILexicalBlock(scope: !6527, file: !245, line: 2938, column: 9)
!6540 = !DILocation(line: 2939, column: 18, scope: !6538)
!6541 = !DILocation(line: 2939, column: 15, scope: !6539)
!6542 = !DILocation(line: 2940, column: 21, scope: !6538)
!6543 = !DILocation(line: 2941, column: 21, scope: !6538)
!6544 = !DILocation(line: 2941, column: 48, scope: !6538)
!6545 = !DILocation(line: 2940, column: 13, scope: !6538)
!6546 = !DILocation(line: 2943, column: 5, scope: !6528)
!6547 = !DILocation(line: 2944, column: 3, scope: !4892)
!6548 = !DILocation(line: 2945, column: 1, scope: !4892)
!6549 = distinct !DISubprogram(name: "should_dereference", scope: !245, file: !245, line: 1804, type: !358, scopeLine: 1805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!6550 = !DILocalVariable(name: "x", arg: 1, scope: !6549, file: !245, line: 1804, type: !252)
!6551 = !DILocation(line: 1804, column: 46, scope: !6549)
!6552 = !DILocalVariable(name: "command_line_arg", arg: 2, scope: !6549, file: !245, line: 1804, type: !120)
!6553 = !DILocation(line: 1804, column: 54, scope: !6549)
!6554 = !DILocation(line: 1806, column: 10, scope: !6549)
!6555 = !DILocation(line: 1806, column: 13, scope: !6549)
!6556 = !DILocation(line: 1806, column: 25, scope: !6549)
!6557 = !DILocation(line: 1807, column: 10, scope: !6549)
!6558 = !DILocation(line: 1807, column: 14, scope: !6549)
!6559 = !DILocation(line: 1807, column: 17, scope: !6549)
!6560 = !DILocation(line: 1807, column: 29, scope: !6549)
!6561 = !DILocation(line: 1808, column: 14, scope: !6549)
!6562 = !DILocation(line: 1808, column: 17, scope: !6549)
!6563 = !DILocation(line: 0, scope: !6549)
!6564 = !DILocation(line: 1806, column: 3, scope: !6549)
!6565 = distinct !DISubprogram(name: "same_file_ok", scope: !245, file: !245, line: 1428, type: !360, scopeLine: 1431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!6566 = !DILocalVariable(name: "src_name", arg: 1, scope: !6565, file: !245, line: 1428, type: !115)
!6567 = !DILocation(line: 1428, column: 27, scope: !6565)
!6568 = !DILocalVariable(name: "src_sb", arg: 2, scope: !6565, file: !245, line: 1428, type: !315)
!6569 = !DILocation(line: 1428, column: 56, scope: !6565)
!6570 = !DILocalVariable(name: "dst_name", arg: 3, scope: !6565, file: !245, line: 1429, type: !115)
!6571 = !DILocation(line: 1429, column: 27, scope: !6565)
!6572 = !DILocalVariable(name: "dst_sb", arg: 4, scope: !6565, file: !245, line: 1429, type: !315)
!6573 = !DILocation(line: 1429, column: 56, scope: !6565)
!6574 = !DILocalVariable(name: "x", arg: 5, scope: !6565, file: !245, line: 1430, type: !252)
!6575 = !DILocation(line: 1430, column: 40, scope: !6565)
!6576 = !DILocalVariable(name: "return_now", arg: 6, scope: !6565, file: !245, line: 1430, type: !302)
!6577 = !DILocation(line: 1430, column: 49, scope: !6565)
!6578 = !DILocalVariable(name: "src_sb_link", scope: !6565, file: !245, line: 1432, type: !315)
!6579 = !DILocation(line: 1432, column: 22, scope: !6565)
!6580 = !DILocalVariable(name: "dst_sb_link", scope: !6565, file: !245, line: 1433, type: !315)
!6581 = !DILocation(line: 1433, column: 22, scope: !6565)
!6582 = !DILocalVariable(name: "tmp_dst_sb", scope: !6565, file: !245, line: 1434, type: !317)
!6583 = !DILocation(line: 1434, column: 15, scope: !6565)
!6584 = !DILocalVariable(name: "tmp_src_sb", scope: !6565, file: !245, line: 1435, type: !317)
!6585 = !DILocation(line: 1435, column: 15, scope: !6565)
!6586 = !DILocalVariable(name: "same_link", scope: !6565, file: !245, line: 1437, type: !120)
!6587 = !DILocation(line: 1437, column: 8, scope: !6565)
!6588 = !DILocalVariable(name: "same", scope: !6565, file: !245, line: 1438, type: !120)
!6589 = !DILocation(line: 1438, column: 8, scope: !6565)
!6590 = !DILocation(line: 1438, column: 15, scope: !6565)
!6591 = !DILocation(line: 0, scope: !6565)
!6592 = !DILocation(line: 1440, column: 4, scope: !6565)
!6593 = !DILocation(line: 1440, column: 15, scope: !6565)
!6594 = !DILocation(line: 1447, column: 7, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6565, file: !245, line: 1447, column: 7)
!6596 = !DILocation(line: 1447, column: 12, scope: !6595)
!6597 = !DILocation(line: 1447, column: 15, scope: !6595)
!6598 = !DILocation(line: 1447, column: 18, scope: !6595)
!6599 = !DILocation(line: 1447, column: 7, scope: !6565)
!6600 = !DILocation(line: 1449, column: 8, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6595, file: !245, line: 1448, column: 5)
!6602 = !DILocation(line: 1449, column: 19, scope: !6601)
!6603 = !DILocation(line: 1450, column: 7, scope: !6601)
!6604 = !DILocation(line: 1453, column: 7, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6565, file: !245, line: 1453, column: 7)
!6606 = !DILocation(line: 1453, column: 10, scope: !6605)
!6607 = !DILocation(line: 1453, column: 22, scope: !6605)
!6608 = !DILocation(line: 1453, column: 7, scope: !6565)
!6609 = !DILocation(line: 1455, column: 19, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6605, file: !245, line: 1454, column: 5)
!6611 = !DILocation(line: 1455, column: 17, scope: !6610)
!6612 = !DILocation(line: 1460, column: 11, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6610, file: !245, line: 1460, column: 11)
!6614 = !DILocation(line: 1460, column: 37, scope: !6613)
!6615 = !DILocation(line: 1460, column: 40, scope: !6613)
!6616 = !DILocation(line: 1460, column: 11, scope: !6610)
!6617 = !DILocalVariable(name: "sn", scope: !6618, file: !245, line: 1462, type: !120)
!6618 = distinct !DILexicalBlock(scope: !6613, file: !245, line: 1461, column: 9)
!6619 = !DILocation(line: 1462, column: 16, scope: !6618)
!6620 = !DILocation(line: 1462, column: 32, scope: !6618)
!6621 = !DILocation(line: 1462, column: 42, scope: !6618)
!6622 = !DILocation(line: 1462, column: 21, scope: !6618)
!6623 = !DILocation(line: 1463, column: 18, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6618, file: !245, line: 1463, column: 16)
!6625 = !DILocation(line: 1463, column: 16, scope: !6618)
!6626 = !DILocation(line: 1466, column: 19, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6628, file: !245, line: 1466, column: 19)
!6628 = distinct !DILexicalBlock(scope: !6624, file: !245, line: 1464, column: 13)
!6629 = !DILocation(line: 1466, column: 22, scope: !6627)
!6630 = !DILocation(line: 1466, column: 34, scope: !6627)
!6631 = !DILocation(line: 1466, column: 19, scope: !6628)
!6632 = !DILocation(line: 1467, column: 17, scope: !6627)
!6633 = !DILocation(line: 1473, column: 19, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6628, file: !245, line: 1473, column: 19)
!6635 = !DILocation(line: 1473, column: 19, scope: !6628)
!6636 = !DILocation(line: 1475, column: 20, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6634, file: !245, line: 1474, column: 17)
!6638 = !DILocation(line: 1475, column: 31, scope: !6637)
!6639 = !DILocation(line: 1476, column: 28, scope: !6637)
!6640 = !DILocation(line: 1476, column: 31, scope: !6637)
!6641 = !DILocation(line: 1476, column: 26, scope: !6637)
!6642 = !DILocation(line: 1476, column: 19, scope: !6637)
!6643 = !DILocation(line: 1478, column: 13, scope: !6628)
!6644 = !DILocation(line: 1480, column: 20, scope: !6618)
!6645 = !DILocation(line: 1480, column: 18, scope: !6618)
!6646 = !DILocation(line: 1480, column: 11, scope: !6618)
!6647 = !DILocation(line: 1483, column: 21, scope: !6610)
!6648 = !DILocation(line: 1483, column: 19, scope: !6610)
!6649 = !DILocation(line: 1484, column: 21, scope: !6610)
!6650 = !DILocation(line: 1484, column: 19, scope: !6610)
!6651 = !DILocation(line: 1485, column: 5, scope: !6610)
!6652 = !DILocation(line: 1488, column: 12, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6654, file: !245, line: 1488, column: 11)
!6654 = distinct !DILexicalBlock(scope: !6605, file: !245, line: 1487, column: 5)
!6655 = !DILocation(line: 1488, column: 11, scope: !6654)
!6656 = !DILocation(line: 1489, column: 9, scope: !6653)
!6657 = !DILocation(line: 1491, column: 18, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6654, file: !245, line: 1491, column: 11)
!6659 = !DILocation(line: 1491, column: 11, scope: !6658)
!6660 = !DILocation(line: 1491, column: 41, scope: !6658)
!6661 = !DILocation(line: 1492, column: 11, scope: !6658)
!6662 = !DILocation(line: 1492, column: 21, scope: !6658)
!6663 = !DILocation(line: 1492, column: 14, scope: !6658)
!6664 = !DILocation(line: 1492, column: 44, scope: !6658)
!6665 = !DILocation(line: 1491, column: 11, scope: !6654)
!6666 = !DILocation(line: 1493, column: 9, scope: !6658)
!6667 = !DILocation(line: 1495, column: 19, scope: !6654)
!6668 = !DILocation(line: 1496, column: 19, scope: !6654)
!6669 = !DILocation(line: 1498, column: 19, scope: !6654)
!6670 = !DILocation(line: 0, scope: !6654)
!6671 = !DILocation(line: 1498, column: 17, scope: !6654)
!6672 = !DILocation(line: 1505, column: 11, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6654, file: !245, line: 1505, column: 11)
!6674 = !DILocation(line: 1505, column: 42, scope: !6673)
!6675 = !DILocation(line: 1505, column: 45, scope: !6673)
!6676 = !DILocation(line: 1506, column: 11, scope: !6673)
!6677 = !DILocation(line: 1506, column: 14, scope: !6673)
!6678 = !DILocation(line: 1506, column: 17, scope: !6673)
!6679 = !DILocation(line: 1505, column: 11, scope: !6654)
!6680 = !DILocation(line: 1507, column: 9, scope: !6673)
!6681 = !DILocation(line: 1515, column: 7, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6565, file: !245, line: 1515, column: 7)
!6683 = !DILocation(line: 1515, column: 10, scope: !6682)
!6684 = !DILocation(line: 1515, column: 22, scope: !6682)
!6685 = !DILocation(line: 1515, column: 7, scope: !6565)
!6686 = !DILocation(line: 1517, column: 12, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6688, file: !245, line: 1517, column: 11)
!6688 = distinct !DILexicalBlock(scope: !6682, file: !245, line: 1516, column: 5)
!6689 = !DILocation(line: 1517, column: 11, scope: !6688)
!6690 = !DILocation(line: 1535, column: 18, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6692, file: !245, line: 1535, column: 16)
!6692 = distinct !DILexicalBlock(scope: !6687, file: !245, line: 1518, column: 9)
!6693 = !DILocation(line: 1535, column: 21, scope: !6691)
!6694 = !DILocation(line: 1536, column: 16, scope: !6691)
!6695 = !DILocation(line: 1536, column: 19, scope: !6691)
!6696 = !DILocation(line: 1536, column: 22, scope: !6691)
!6697 = !DILocation(line: 1536, column: 34, scope: !6691)
!6698 = !DILocation(line: 1537, column: 16, scope: !6691)
!6699 = !DILocation(line: 1537, column: 19, scope: !6691)
!6700 = !DILocation(line: 1538, column: 16, scope: !6691)
!6701 = !DILocation(line: 1538, column: 21, scope: !6691)
!6702 = !DILocation(line: 1535, column: 16, scope: !6692)
!6703 = !DILocation(line: 1539, column: 13, scope: !6691)
!6704 = !DILocation(line: 1541, column: 11, scope: !6692)
!6705 = !DILocation(line: 1545, column: 27, scope: !6688)
!6706 = !DILocation(line: 1545, column: 37, scope: !6688)
!6707 = !DILocation(line: 1545, column: 16, scope: !6688)
!6708 = !DILocation(line: 1545, column: 14, scope: !6688)
!6709 = !DILocation(line: 1545, column: 7, scope: !6688)
!6710 = !DILocation(line: 1565, column: 7, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6565, file: !245, line: 1565, column: 7)
!6712 = !DILocation(line: 1565, column: 10, scope: !6711)
!6713 = !DILocation(line: 1565, column: 20, scope: !6711)
!6714 = !DILocation(line: 1565, column: 23, scope: !6711)
!6715 = !DILocation(line: 1565, column: 26, scope: !6711)
!6716 = !DILocation(line: 1565, column: 7, scope: !6565)
!6717 = !DILocation(line: 1571, column: 11, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !245, line: 1571, column: 11)
!6719 = distinct !DILexicalBlock(scope: !6711, file: !245, line: 1566, column: 5)
!6720 = !DILocation(line: 1571, column: 11, scope: !6719)
!6721 = !DILocation(line: 1572, column: 9, scope: !6718)
!6722 = !DILocation(line: 1576, column: 11, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6719, file: !245, line: 1576, column: 11)
!6724 = !DILocation(line: 1577, column: 11, scope: !6723)
!6725 = !DILocation(line: 1577, column: 18, scope: !6723)
!6726 = !DILocation(line: 1577, column: 31, scope: !6723)
!6727 = !DILocation(line: 1577, column: 16, scope: !6723)
!6728 = !DILocation(line: 1578, column: 11, scope: !6723)
!6729 = !DILocation(line: 1578, column: 27, scope: !6723)
!6730 = !DILocation(line: 1578, column: 37, scope: !6723)
!6731 = !DILocation(line: 1578, column: 16, scope: !6723)
!6732 = !DILocation(line: 1576, column: 11, scope: !6719)
!6733 = !DILocation(line: 1579, column: 18, scope: !6723)
!6734 = !DILocation(line: 1579, column: 21, scope: !6723)
!6735 = !DILocation(line: 1579, column: 16, scope: !6723)
!6736 = !DILocation(line: 1579, column: 9, scope: !6723)
!6737 = !DILocation(line: 1580, column: 5, scope: !6719)
!6738 = !DILocation(line: 1584, column: 8, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6565, file: !245, line: 1584, column: 7)
!6740 = !DILocation(line: 1584, column: 39, scope: !6739)
!6741 = !DILocation(line: 1584, column: 43, scope: !6739)
!6742 = !DILocation(line: 1584, column: 7, scope: !6565)
!6743 = !DILocation(line: 1586, column: 12, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !245, line: 1586, column: 11)
!6745 = distinct !DILexicalBlock(scope: !6739, file: !245, line: 1585, column: 5)
!6746 = !DILocation(line: 1586, column: 11, scope: !6745)
!6747 = !DILocation(line: 1587, column: 9, scope: !6744)
!6748 = !DILocation(line: 1590, column: 11, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6745, file: !245, line: 1590, column: 11)
!6750 = !DILocation(line: 1590, column: 14, scope: !6749)
!6751 = !DILocation(line: 1590, column: 11, scope: !6745)
!6752 = !DILocation(line: 1592, column: 12, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6749, file: !245, line: 1591, column: 9)
!6754 = !DILocation(line: 1592, column: 23, scope: !6753)
!6755 = !DILocation(line: 1593, column: 11, scope: !6753)
!6756 = !DILocation(line: 1595, column: 5, scope: !6745)
!6757 = !DILocation(line: 1617, column: 7, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6565, file: !245, line: 1617, column: 7)
!6759 = !DILocation(line: 1617, column: 10, scope: !6758)
!6760 = !DILocation(line: 1618, column: 7, scope: !6758)
!6761 = !DILocation(line: 1618, column: 10, scope: !6758)
!6762 = !DILocation(line: 1619, column: 7, scope: !6758)
!6763 = !DILocation(line: 1619, column: 14, scope: !6758)
!6764 = !DILocation(line: 1619, column: 27, scope: !6758)
!6765 = !DILocation(line: 1619, column: 12, scope: !6758)
!6766 = !DILocation(line: 1617, column: 7, scope: !6565)
!6767 = !DILocalVariable(name: "abs_src", scope: !6768, file: !245, line: 1621, type: !9)
!6768 = distinct !DILexicalBlock(scope: !6758, file: !245, line: 1620, column: 5)
!6769 = !DILocation(line: 1621, column: 13, scope: !6768)
!6770 = !DILocation(line: 1621, column: 47, scope: !6768)
!6771 = !DILocation(line: 1621, column: 23, scope: !6768)
!6772 = !DILocation(line: 1622, column: 11, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6768, file: !245, line: 1622, column: 11)
!6774 = !DILocation(line: 1622, column: 11, scope: !6768)
!6775 = !DILocalVariable(name: "result", scope: !6776, file: !245, line: 1624, type: !120)
!6776 = distinct !DILexicalBlock(scope: !6773, file: !245, line: 1623, column: 9)
!6777 = !DILocation(line: 1624, column: 16, scope: !6776)
!6778 = !DILocation(line: 1624, column: 38, scope: !6776)
!6779 = !DILocation(line: 1624, column: 47, scope: !6776)
!6780 = !DILocation(line: 1624, column: 27, scope: !6776)
!6781 = !DILocation(line: 1624, column: 25, scope: !6776)
!6782 = !DILocation(line: 1625, column: 17, scope: !6776)
!6783 = !DILocation(line: 1625, column: 11, scope: !6776)
!6784 = !DILocation(line: 1626, column: 18, scope: !6776)
!6785 = !DILocation(line: 1626, column: 11, scope: !6776)
!6786 = !DILocation(line: 1628, column: 5, scope: !6768)
!6787 = !DILocation(line: 1631, column: 7, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6565, file: !245, line: 1631, column: 7)
!6789 = !DILocation(line: 1631, column: 10, scope: !6788)
!6790 = !DILocation(line: 1631, column: 24, scope: !6788)
!6791 = !DILocation(line: 1631, column: 27, scope: !6788)
!6792 = !DILocation(line: 1631, column: 7, scope: !6565)
!6793 = !DILocation(line: 1632, column: 5, scope: !6788)
!6794 = !DILocation(line: 1634, column: 7, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6565, file: !245, line: 1634, column: 7)
!6796 = !DILocation(line: 1634, column: 10, scope: !6795)
!6797 = !DILocation(line: 1634, column: 22, scope: !6795)
!6798 = !DILocation(line: 1634, column: 7, scope: !6565)
!6799 = !DILocation(line: 1636, column: 14, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !245, line: 1636, column: 12)
!6801 = distinct !DILexicalBlock(scope: !6795, file: !245, line: 1635, column: 5)
!6802 = !DILocation(line: 1636, column: 12, scope: !6801)
!6803 = !DILocation(line: 1637, column: 23, scope: !6800)
!6804 = !DILocation(line: 1637, column: 22, scope: !6800)
!6805 = !{i64 0, i64 8, !3848, i64 8, i64 8, !3848, i64 16, i64 8, !3848, i64 24, i64 4, !2982, i64 28, i64 4, !2982, i64 32, i64 4, !2982, i64 36, i64 4, !2982, i64 40, i64 8, !3848, i64 48, i64 8, !3848, i64 56, i64 8, !3848, i64 64, i64 8, !3848, i64 72, i64 8, !3848, i64 80, i64 8, !3848, i64 88, i64 8, !3848, i64 96, i64 8, !3848, i64 104, i64 8, !3848, i64 112, i64 8, !3848, i64 120, i64 24, !3657}
!6806 = !DILocation(line: 1637, column: 9, scope: !6800)
!6807 = !DILocation(line: 1638, column: 22, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6800, file: !245, line: 1638, column: 16)
!6809 = !DILocation(line: 1638, column: 16, scope: !6808)
!6810 = !DILocation(line: 1638, column: 45, scope: !6808)
!6811 = !DILocation(line: 1638, column: 16, scope: !6800)
!6812 = !DILocation(line: 1639, column: 9, scope: !6808)
!6813 = !DILocation(line: 1641, column: 14, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6801, file: !245, line: 1641, column: 12)
!6815 = !DILocation(line: 1641, column: 12, scope: !6801)
!6816 = !DILocation(line: 1642, column: 23, scope: !6814)
!6817 = !DILocation(line: 1642, column: 22, scope: !6814)
!6818 = !DILocation(line: 1642, column: 9, scope: !6814)
!6819 = !DILocation(line: 1643, column: 22, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6814, file: !245, line: 1643, column: 16)
!6821 = !DILocation(line: 1643, column: 16, scope: !6820)
!6822 = !DILocation(line: 1643, column: 45, scope: !6820)
!6823 = !DILocation(line: 1643, column: 16, scope: !6814)
!6824 = !DILocation(line: 1644, column: 9, scope: !6820)
!6825 = !DILocation(line: 1646, column: 14, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6801, file: !245, line: 1646, column: 12)
!6827 = !DILocation(line: 1646, column: 12, scope: !6801)
!6828 = !DILocation(line: 1647, column: 9, scope: !6826)
!6829 = !DILocation(line: 1649, column: 11, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6801, file: !245, line: 1649, column: 11)
!6831 = !DILocation(line: 1649, column: 14, scope: !6830)
!6832 = !DILocation(line: 1649, column: 11, scope: !6801)
!6833 = !DILocation(line: 1655, column: 27, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6830, file: !245, line: 1650, column: 9)
!6835 = !DILocation(line: 1655, column: 25, scope: !6834)
!6836 = !DILocation(line: 1655, column: 12, scope: !6834)
!6837 = !DILocation(line: 1655, column: 23, scope: !6834)
!6838 = !DILocation(line: 1656, column: 11, scope: !6834)
!6839 = !DILocation(line: 1658, column: 5, scope: !6801)
!6840 = !DILocation(line: 1660, column: 3, scope: !6565)
!6841 = !DILocation(line: 1661, column: 1, scope: !6565)
!6842 = distinct !DISubprogram(name: "create_hard_link", scope: !245, file: !245, line: 1783, type: !362, scopeLine: 1785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!6843 = !DILocalVariable(name: "src_name", arg: 1, scope: !6842, file: !245, line: 1783, type: !115)
!6844 = !DILocation(line: 1783, column: 31, scope: !6842)
!6845 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6842, file: !245, line: 1783, type: !115)
!6846 = !DILocation(line: 1783, column: 53, scope: !6842)
!6847 = !DILocalVariable(name: "replace", arg: 3, scope: !6842, file: !245, line: 1784, type: !120)
!6848 = !DILocation(line: 1784, column: 24, scope: !6842)
!6849 = !DILocalVariable(name: "verbose", arg: 4, scope: !6842, file: !245, line: 1784, type: !120)
!6850 = !DILocation(line: 1784, column: 38, scope: !6842)
!6851 = !DILocalVariable(name: "dereference", arg: 5, scope: !6842, file: !245, line: 1784, type: !120)
!6852 = !DILocation(line: 1784, column: 52, scope: !6842)
!6853 = !DILocalVariable(name: "err", scope: !6842, file: !245, line: 1786, type: !7)
!6854 = !DILocation(line: 1786, column: 7, scope: !6842)
!6855 = !DILocation(line: 1786, column: 37, scope: !6842)
!6856 = !DILocation(line: 1786, column: 57, scope: !6842)
!6857 = !DILocation(line: 1787, column: 27, scope: !6842)
!6858 = !DILocation(line: 1788, column: 27, scope: !6842)
!6859 = !DILocation(line: 1786, column: 13, scope: !6842)
!6860 = !DILocation(line: 1789, column: 11, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6842, file: !245, line: 1789, column: 7)
!6862 = !DILocation(line: 1789, column: 9, scope: !6861)
!6863 = !DILocation(line: 1789, column: 7, scope: !6842)
!6864 = !DILocation(line: 1791, column: 17, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6861, file: !245, line: 1790, column: 5)
!6866 = !DILocation(line: 1791, column: 22, scope: !6865)
!6867 = !DILocation(line: 1792, column: 14, scope: !6865)
!6868 = !DILocation(line: 1792, column: 39, scope: !6865)
!6869 = !DILocation(line: 1791, column: 7, scope: !6865)
!6870 = !DILocation(line: 1793, column: 7, scope: !6865)
!6871 = !DILocation(line: 1795, column: 7, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6842, file: !245, line: 1795, column: 7)
!6873 = !DILocation(line: 1795, column: 11, scope: !6872)
!6874 = !DILocation(line: 1795, column: 15, scope: !6872)
!6875 = !DILocation(line: 1795, column: 18, scope: !6872)
!6876 = !DILocation(line: 1795, column: 7, scope: !6842)
!6877 = !DILocation(line: 1796, column: 13, scope: !6872)
!6878 = !DILocation(line: 1796, column: 32, scope: !6872)
!6879 = !DILocation(line: 1796, column: 5, scope: !6872)
!6880 = !DILocation(line: 1797, column: 3, scope: !6842)
!6881 = !DILocation(line: 1798, column: 1, scope: !6842)
!6882 = distinct !DISubprogram(name: "abandon_move", scope: !245, file: !245, line: 1742, type: !364, scopeLine: 1745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!6883 = !DILocalVariable(name: "x", arg: 1, scope: !6882, file: !245, line: 1742, type: !252)
!6884 = !DILocation(line: 1742, column: 40, scope: !6882)
!6885 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6882, file: !245, line: 1743, type: !115)
!6886 = !DILocation(line: 1743, column: 27, scope: !6882)
!6887 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6882, file: !245, line: 1744, type: !315)
!6888 = !DILocation(line: 1744, column: 34, scope: !6882)
!6889 = !DILocation(line: 1746, column: 3, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6891, file: !245, line: 1746, column: 3)
!6891 = distinct !DILexicalBlock(scope: !6882, file: !245, line: 1746, column: 3)
!6892 = !DILocation(line: 1746, column: 3, scope: !6891)
!6893 = !DILocation(line: 1747, column: 11, scope: !6882)
!6894 = !DILocation(line: 1747, column: 14, scope: !6882)
!6895 = !DILocation(line: 1747, column: 26, scope: !6882)
!6896 = !DILocation(line: 1748, column: 11, scope: !6882)
!6897 = !DILocation(line: 1748, column: 16, scope: !6882)
!6898 = !DILocation(line: 1748, column: 19, scope: !6882)
!6899 = !DILocation(line: 1748, column: 31, scope: !6882)
!6900 = !DILocation(line: 1749, column: 16, scope: !6882)
!6901 = !DILocation(line: 1749, column: 20, scope: !6882)
!6902 = !DILocation(line: 1749, column: 23, scope: !6882)
!6903 = !DILocation(line: 1749, column: 35, scope: !6882)
!6904 = !DILocation(line: 1750, column: 20, scope: !6882)
!6905 = !DILocation(line: 1750, column: 23, scope: !6882)
!6906 = !DILocation(line: 1750, column: 26, scope: !6882)
!6907 = !DILocation(line: 1751, column: 20, scope: !6882)
!6908 = !DILocation(line: 1751, column: 47, scope: !6882)
!6909 = !DILocation(line: 1751, column: 57, scope: !6882)
!6910 = !DILocation(line: 1751, column: 65, scope: !6882)
!6911 = !DILocation(line: 1751, column: 25, scope: !6882)
!6912 = !DILocation(line: 1752, column: 15, scope: !6882)
!6913 = !DILocation(line: 1752, column: 34, scope: !6882)
!6914 = !DILocation(line: 1752, column: 37, scope: !6882)
!6915 = !DILocation(line: 1752, column: 47, scope: !6882)
!6916 = !DILocation(line: 1752, column: 20, scope: !6882)
!6917 = !DILocation(line: 1752, column: 18, scope: !6882)
!6918 = !DILocation(line: 0, scope: !6882)
!6919 = !DILocation(line: 1747, column: 3, scope: !6882)
!6920 = distinct !DISubprogram(name: "overwrite_ok", scope: !245, file: !245, line: 1674, type: !364, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!6921 = !DILocalVariable(name: "x", arg: 1, scope: !6920, file: !245, line: 1674, type: !252)
!6922 = !DILocation(line: 1674, column: 40, scope: !6920)
!6923 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6920, file: !245, line: 1674, type: !115)
!6924 = !DILocation(line: 1674, column: 55, scope: !6920)
!6925 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6920, file: !245, line: 1675, type: !315)
!6926 = !DILocation(line: 1675, column: 34, scope: !6920)
!6927 = !DILocation(line: 1677, column: 31, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6920, file: !245, line: 1677, column: 7)
!6929 = !DILocation(line: 1677, column: 41, scope: !6928)
!6930 = !DILocation(line: 1677, column: 49, scope: !6928)
!6931 = !DILocation(line: 1677, column: 9, scope: !6928)
!6932 = !DILocation(line: 1677, column: 7, scope: !6920)
!6933 = !DILocalVariable(name: "perms", scope: !6934, file: !245, line: 1679, type: !368)
!6934 = distinct !DILexicalBlock(scope: !6928, file: !245, line: 1678, column: 5)
!6935 = !DILocation(line: 1679, column: 12, scope: !6934)
!6936 = !DILocation(line: 1680, column: 16, scope: !6934)
!6937 = !DILocation(line: 1680, column: 24, scope: !6934)
!6938 = !DILocation(line: 1680, column: 33, scope: !6934)
!6939 = !DILocation(line: 1680, column: 7, scope: !6934)
!6940 = !DILocation(line: 1681, column: 7, scope: !6934)
!6941 = !DILocation(line: 1681, column: 17, scope: !6934)
!6942 = !DILocation(line: 1682, column: 16, scope: !6934)
!6943 = !DILocation(line: 1683, column: 17, scope: !6934)
!6944 = !DILocation(line: 1683, column: 20, scope: !6934)
!6945 = !DILocation(line: 1683, column: 30, scope: !6934)
!6946 = !DILocation(line: 1683, column: 33, scope: !6934)
!6947 = !DILocation(line: 1683, column: 36, scope: !6934)
!6948 = !DILocation(line: 1684, column: 17, scope: !6934)
!6949 = !DILocation(line: 1684, column: 20, scope: !6934)
!6950 = !DILocation(line: 1684, column: 23, scope: !6934)
!6951 = !DILocation(line: 1683, column: 16, scope: !6934)
!6952 = !DILocation(line: 1685, column: 18, scope: !6934)
!6953 = !DILocation(line: 1686, column: 18, scope: !6934)
!6954 = !DILocation(line: 1687, column: 16, scope: !6934)
!6955 = !DILocation(line: 1687, column: 30, scope: !6934)
!6956 = !DILocation(line: 1688, column: 37, scope: !6934)
!6957 = !DILocation(line: 1688, column: 45, scope: !6934)
!6958 = !DILocation(line: 1688, column: 53, scope: !6934)
!6959 = !DILocation(line: 1688, column: 16, scope: !6934)
!6960 = !DILocation(line: 1689, column: 17, scope: !6934)
!6961 = !DILocation(line: 1682, column: 7, scope: !6934)
!6962 = !DILocation(line: 1690, column: 5, scope: !6934)
!6963 = !DILocation(line: 1693, column: 16, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6928, file: !245, line: 1692, column: 5)
!6965 = !DILocation(line: 1693, column: 24, scope: !6964)
!6966 = !DILocation(line: 1694, column: 16, scope: !6964)
!6967 = !DILocation(line: 1694, column: 30, scope: !6964)
!6968 = !DILocation(line: 1693, column: 7, scope: !6964)
!6969 = !DILocation(line: 1697, column: 10, scope: !6920)
!6970 = !DILocation(line: 1697, column: 3, scope: !6920)
!6971 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !141, file: !141, line: 265, type: !200, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!6972 = !DILocalVariable(name: "file_name", arg: 1, scope: !6971, file: !141, line: 265, type: !115)
!6973 = !DILocation(line: 265, column: 28, scope: !6971)
!6974 = !DILocation(line: 267, column: 7, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6971, file: !141, line: 267, column: 7)
!6976 = !DILocation(line: 267, column: 20, scope: !6975)
!6977 = !DILocation(line: 267, column: 7, scope: !6971)
!6978 = !DILocalVariable(name: "sep", scope: !6979, file: !141, line: 269, type: !10)
!6979 = distinct !DILexicalBlock(scope: !6975, file: !141, line: 268, column: 5)
!6980 = !DILocation(line: 269, column: 12, scope: !6979)
!6981 = !DILocation(line: 269, column: 18, scope: !6979)
!6982 = !DILocation(line: 269, column: 29, scope: !6979)
!6983 = !DILocation(line: 269, column: 42, scope: !6979)
!6984 = !DILocation(line: 269, column: 50, scope: !6979)
!6985 = !DILocation(line: 270, column: 17, scope: !6979)
!6986 = !DILocation(line: 270, column: 21, scope: !6979)
!6987 = !DILocation(line: 270, column: 24, scope: !6979)
!6988 = !DILocation(line: 270, column: 7, scope: !6979)
!6989 = !DILocation(line: 273, column: 5, scope: !6975)
!6990 = !DILocation(line: 274, column: 1, scope: !6971)
!6991 = distinct !DISubprogram(name: "source_is_dst_backup", scope: !245, file: !245, line: 1814, type: !405, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!6992 = !DILocalVariable(name: "srcbase", arg: 1, scope: !6991, file: !245, line: 1814, type: !115)
!6993 = !DILocation(line: 1814, column: 35, scope: !6991)
!6994 = !DILocalVariable(name: "src_st", arg: 2, scope: !6991, file: !245, line: 1814, type: !315)
!6995 = !DILocation(line: 1814, column: 63, scope: !6991)
!6996 = !DILocalVariable(name: "dst_name", arg: 3, scope: !6991, file: !245, line: 1815, type: !115)
!6997 = !DILocation(line: 1815, column: 35, scope: !6991)
!6998 = !DILocalVariable(name: "srcbaselen", scope: !6991, file: !245, line: 1817, type: !55)
!6999 = !DILocation(line: 1817, column: 10, scope: !6991)
!7000 = !DILocation(line: 1817, column: 31, scope: !6991)
!7001 = !DILocation(line: 1817, column: 23, scope: !6991)
!7002 = !DILocalVariable(name: "dstbase", scope: !6991, file: !245, line: 1818, type: !115)
!7003 = !DILocation(line: 1818, column: 15, scope: !6991)
!7004 = !DILocation(line: 1818, column: 41, scope: !6991)
!7005 = !DILocation(line: 1818, column: 25, scope: !6991)
!7006 = !DILocalVariable(name: "dstbaselen", scope: !6991, file: !245, line: 1819, type: !55)
!7007 = !DILocation(line: 1819, column: 10, scope: !6991)
!7008 = !DILocation(line: 1819, column: 31, scope: !6991)
!7009 = !DILocation(line: 1819, column: 23, scope: !6991)
!7010 = !DILocalVariable(name: "suffixlen", scope: !6991, file: !245, line: 1820, type: !55)
!7011 = !DILocation(line: 1820, column: 10, scope: !6991)
!7012 = !DILocation(line: 1820, column: 30, scope: !6991)
!7013 = !DILocation(line: 1820, column: 22, scope: !6991)
!7014 = !DILocation(line: 1821, column: 10, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6991, file: !245, line: 1821, column: 7)
!7016 = !DILocation(line: 1821, column: 24, scope: !7015)
!7017 = !DILocation(line: 1821, column: 37, scope: !7015)
!7018 = !DILocation(line: 1821, column: 35, scope: !7015)
!7019 = !DILocation(line: 1821, column: 21, scope: !7015)
!7020 = !DILocation(line: 1822, column: 10, scope: !7015)
!7021 = !DILocation(line: 1822, column: 21, scope: !7015)
!7022 = !DILocation(line: 1822, column: 30, scope: !7015)
!7023 = !DILocation(line: 1822, column: 39, scope: !7015)
!7024 = !DILocation(line: 1822, column: 13, scope: !7015)
!7025 = !DILocation(line: 1822, column: 51, scope: !7015)
!7026 = !DILocation(line: 1823, column: 10, scope: !7015)
!7027 = !DILocation(line: 1823, column: 13, scope: !7015)
!7028 = !DILocation(line: 1821, column: 7, scope: !6991)
!7029 = !DILocation(line: 1824, column: 5, scope: !7015)
!7030 = !DILocalVariable(name: "dstlen", scope: !6991, file: !245, line: 1825, type: !55)
!7031 = !DILocation(line: 1825, column: 10, scope: !6991)
!7032 = !DILocation(line: 1825, column: 27, scope: !6991)
!7033 = !DILocation(line: 1825, column: 19, scope: !6991)
!7034 = !DILocalVariable(name: "dst_back", scope: !6991, file: !245, line: 1826, type: !9)
!7035 = !DILocation(line: 1826, column: 9, scope: !6991)
!7036 = !DILocation(line: 1826, column: 29, scope: !6991)
!7037 = !DILocation(line: 1826, column: 38, scope: !6991)
!7038 = !DILocation(line: 1826, column: 36, scope: !6991)
!7039 = !DILocation(line: 1826, column: 48, scope: !6991)
!7040 = !DILocation(line: 1826, column: 20, scope: !6991)
!7041 = !DILocation(line: 1827, column: 20, scope: !6991)
!7042 = !DILocation(line: 1827, column: 30, scope: !6991)
!7043 = !DILocation(line: 1827, column: 40, scope: !6991)
!7044 = !DILocation(line: 1827, column: 11, scope: !6991)
!7045 = !DILocation(line: 1827, column: 49, scope: !6991)
!7046 = !DILocation(line: 1827, column: 3, scope: !6991)
!7047 = !DILocalVariable(name: "dst_back_sb", scope: !6991, file: !245, line: 1828, type: !317)
!7048 = !DILocation(line: 1828, column: 15, scope: !6991)
!7049 = !DILocalVariable(name: "dst_back_status", scope: !6991, file: !245, line: 1829, type: !7)
!7050 = !DILocation(line: 1829, column: 7, scope: !6991)
!7051 = !DILocation(line: 1829, column: 31, scope: !6991)
!7052 = !DILocation(line: 1829, column: 25, scope: !6991)
!7053 = !DILocation(line: 1830, column: 9, scope: !6991)
!7054 = !DILocation(line: 1830, column: 3, scope: !6991)
!7055 = !DILocation(line: 1831, column: 10, scope: !6991)
!7056 = !DILocation(line: 1831, column: 26, scope: !6991)
!7057 = !DILocation(line: 1831, column: 31, scope: !6991)
!7058 = !DILocation(line: 1831, column: 34, scope: !6991)
!7059 = !DILocation(line: 0, scope: !6991)
!7060 = !DILocation(line: 1831, column: 3, scope: !6991)
!7061 = !DILocation(line: 1832, column: 1, scope: !6991)
!7062 = distinct !DISubprogram(name: "emit_verbose", scope: !245, file: !245, line: 1759, type: !407, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7063 = !DILocalVariable(name: "src", arg: 1, scope: !7062, file: !245, line: 1759, type: !115)
!7064 = !DILocation(line: 1759, column: 27, scope: !7062)
!7065 = !DILocalVariable(name: "dst", arg: 2, scope: !7062, file: !245, line: 1759, type: !115)
!7066 = !DILocation(line: 1759, column: 44, scope: !7062)
!7067 = !DILocalVariable(name: "backup_dst_name", arg: 3, scope: !7062, file: !245, line: 1759, type: !115)
!7068 = !DILocation(line: 1759, column: 61, scope: !7062)
!7069 = !DILocation(line: 1761, column: 23, scope: !7062)
!7070 = !DILocation(line: 1761, column: 43, scope: !7062)
!7071 = !DILocation(line: 1761, column: 3, scope: !7062)
!7072 = !DILocation(line: 1762, column: 7, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7062, file: !245, line: 1762, column: 7)
!7074 = !DILocation(line: 1762, column: 7, scope: !7062)
!7075 = !DILocation(line: 1763, column: 13, scope: !7073)
!7076 = !DILocation(line: 1763, column: 33, scope: !7073)
!7077 = !DILocation(line: 1763, column: 5, scope: !7073)
!7078 = !DILocation(line: 1764, column: 3, scope: !7062)
!7079 = !DILocation(line: 1765, column: 1, scope: !7062)
!7080 = distinct !DISubprogram(name: "is_ancestor", scope: !245, file: !245, line: 584, type: !409, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7081 = !DILocalVariable(name: "sb", arg: 1, scope: !7080, file: !245, line: 584, type: !315)
!7082 = !DILocation(line: 584, column: 33, scope: !7080)
!7083 = !DILocalVariable(name: "ancestors", arg: 2, scope: !7080, file: !245, line: 584, type: !411)
!7084 = !DILocation(line: 584, column: 60, scope: !7080)
!7085 = !DILocation(line: 586, column: 3, scope: !7080)
!7086 = !DILocation(line: 586, column: 10, scope: !7080)
!7087 = !DILocation(line: 586, column: 20, scope: !7080)
!7088 = !DILocation(line: 588, column: 11, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7090, file: !245, line: 588, column: 11)
!7090 = distinct !DILexicalBlock(scope: !7080, file: !245, line: 587, column: 5)
!7091 = !DILocation(line: 588, column: 22, scope: !7089)
!7092 = !DILocation(line: 588, column: 29, scope: !7089)
!7093 = !DILocation(line: 588, column: 33, scope: !7089)
!7094 = !DILocation(line: 588, column: 26, scope: !7089)
!7095 = !DILocation(line: 588, column: 40, scope: !7089)
!7096 = !DILocation(line: 588, column: 43, scope: !7089)
!7097 = !DILocation(line: 588, column: 54, scope: !7089)
!7098 = !DILocation(line: 588, column: 61, scope: !7089)
!7099 = !DILocation(line: 588, column: 65, scope: !7089)
!7100 = !DILocation(line: 588, column: 58, scope: !7089)
!7101 = !DILocation(line: 588, column: 11, scope: !7090)
!7102 = !DILocation(line: 589, column: 9, scope: !7089)
!7103 = !DILocation(line: 590, column: 19, scope: !7090)
!7104 = !DILocation(line: 590, column: 30, scope: !7090)
!7105 = !DILocation(line: 590, column: 17, scope: !7090)
!7106 = distinct !{!7106, !7085, !7107}
!7107 = !DILocation(line: 591, column: 5, scope: !7080)
!7108 = !DILocation(line: 592, column: 3, scope: !7080)
!7109 = !DILocation(line: 593, column: 1, scope: !7080)
!7110 = distinct !DISubprogram(name: "copy_dir", scope: !245, file: !245, line: 709, type: !413, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7111 = !DILocalVariable(name: "src_name_in", arg: 1, scope: !7110, file: !245, line: 709, type: !115)
!7112 = !DILocation(line: 709, column: 23, scope: !7110)
!7113 = !DILocalVariable(name: "dst_name_in", arg: 2, scope: !7110, file: !245, line: 709, type: !115)
!7114 = !DILocation(line: 709, column: 48, scope: !7110)
!7115 = !DILocalVariable(name: "new_dst", arg: 3, scope: !7110, file: !245, line: 709, type: !120)
!7116 = !DILocation(line: 709, column: 66, scope: !7110)
!7117 = !DILocalVariable(name: "src_sb", arg: 4, scope: !7110, file: !245, line: 710, type: !315)
!7118 = !DILocation(line: 710, column: 30, scope: !7110)
!7119 = !DILocalVariable(name: "ancestors", arg: 5, scope: !7110, file: !245, line: 710, type: !350)
!7120 = !DILocation(line: 710, column: 55, scope: !7110)
!7121 = !DILocalVariable(name: "x", arg: 6, scope: !7110, file: !245, line: 711, type: !252)
!7122 = !DILocation(line: 711, column: 36, scope: !7110)
!7123 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 7, scope: !7110, file: !245, line: 712, type: !302)
!7124 = !DILocation(line: 712, column: 17, scope: !7110)
!7125 = !DILocalVariable(name: "copy_into_self", arg: 8, scope: !7110, file: !245, line: 713, type: !302)
!7126 = !DILocation(line: 713, column: 17, scope: !7110)
!7127 = !DILocalVariable(name: "name_space", scope: !7110, file: !245, line: 715, type: !9)
!7128 = !DILocation(line: 715, column: 9, scope: !7110)
!7129 = !DILocalVariable(name: "namep", scope: !7110, file: !245, line: 716, type: !9)
!7130 = !DILocation(line: 716, column: 9, scope: !7110)
!7131 = !DILocalVariable(name: "non_command_line_options", scope: !7110, file: !245, line: 717, type: !254)
!7132 = !DILocation(line: 717, column: 21, scope: !7110)
!7133 = !DILocation(line: 717, column: 49, scope: !7110)
!7134 = !DILocation(line: 717, column: 48, scope: !7110)
!7135 = !{i64 0, i64 4, !3657, i64 4, i64 4, !3657, i64 8, i64 4, !3657, i64 12, i64 4, !3657, i64 16, i64 4, !2982, i64 20, i64 1, !3106, i64 21, i64 1, !3106, i64 22, i64 1, !3106, i64 23, i64 1, !3106, i64 24, i64 1, !3106, i64 25, i64 1, !3106, i64 26, i64 1, !3106, i64 27, i64 1, !3106, i64 28, i64 1, !3106, i64 29, i64 1, !3106, i64 30, i64 1, !3106, i64 31, i64 1, !3106, i64 32, i64 1, !3106, i64 33, i64 1, !3106, i64 34, i64 1, !3106, i64 35, i64 1, !3106, i64 36, i64 1, !3106, i64 37, i64 1, !3106, i64 38, i64 1, !3106, i64 39, i64 1, !3106, i64 40, i64 1, !3106, i64 41, i64 1, !3106, i64 42, i64 1, !3106, i64 43, i64 1, !3106, i64 44, i64 1, !3106, i64 45, i64 1, !3106, i64 46, i64 1, !3106, i64 47, i64 1, !3106, i64 48, i64 1, !3106, i64 49, i64 1, !3106, i64 52, i64 4, !2982, i64 56, i64 4, !3657, i64 64, i64 8, !2995, i64 72, i64 8, !2995}
!7136 = !DILocalVariable(name: "ok", scope: !7110, file: !245, line: 718, type: !120)
!7137 = !DILocation(line: 718, column: 8, scope: !7110)
!7138 = !DILocation(line: 720, column: 25, scope: !7110)
!7139 = !DILocation(line: 720, column: 16, scope: !7110)
!7140 = !DILocation(line: 720, column: 14, scope: !7110)
!7141 = !DILocation(line: 721, column: 7, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7110, file: !245, line: 721, column: 7)
!7143 = !DILocation(line: 721, column: 18, scope: !7142)
!7144 = !DILocation(line: 721, column: 7, scope: !7110)
!7145 = !DILocation(line: 725, column: 17, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7142, file: !245, line: 722, column: 5)
!7147 = !DILocation(line: 725, column: 24, scope: !7146)
!7148 = !DILocation(line: 725, column: 47, scope: !7146)
!7149 = !DILocation(line: 725, column: 7, scope: !7146)
!7150 = !DILocation(line: 726, column: 7, scope: !7146)
!7151 = !DILocation(line: 731, column: 7, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7110, file: !245, line: 731, column: 7)
!7153 = !DILocation(line: 731, column: 10, scope: !7152)
!7154 = !DILocation(line: 731, column: 22, scope: !7152)
!7155 = !DILocation(line: 731, column: 7, scope: !7110)
!7156 = !DILocation(line: 732, column: 30, scope: !7152)
!7157 = !DILocation(line: 732, column: 42, scope: !7152)
!7158 = !DILocation(line: 732, column: 5, scope: !7152)
!7159 = !DILocalVariable(name: "new_first_dir_created", scope: !7110, file: !245, line: 734, type: !120)
!7160 = !DILocation(line: 734, column: 8, scope: !7110)
!7161 = !DILocation(line: 735, column: 11, scope: !7110)
!7162 = !DILocation(line: 735, column: 9, scope: !7110)
!7163 = !DILocation(line: 736, column: 3, scope: !7110)
!7164 = !DILocation(line: 736, column: 11, scope: !7110)
!7165 = !DILocation(line: 736, column: 10, scope: !7110)
!7166 = !DILocation(line: 736, column: 17, scope: !7110)
!7167 = !DILocalVariable(name: "local_copy_into_self", scope: !7168, file: !245, line: 738, type: !120)
!7168 = distinct !DILexicalBlock(scope: !7110, file: !245, line: 737, column: 5)
!7169 = !DILocation(line: 738, column: 12, scope: !7168)
!7170 = !DILocalVariable(name: "src_name", scope: !7168, file: !245, line: 739, type: !9)
!7171 = !DILocation(line: 739, column: 13, scope: !7168)
!7172 = !DILocation(line: 739, column: 42, scope: !7168)
!7173 = !DILocation(line: 739, column: 55, scope: !7168)
!7174 = !DILocation(line: 739, column: 24, scope: !7168)
!7175 = !DILocalVariable(name: "dst_name", scope: !7168, file: !245, line: 740, type: !9)
!7176 = !DILocation(line: 740, column: 13, scope: !7168)
!7177 = !DILocation(line: 740, column: 42, scope: !7168)
!7178 = !DILocation(line: 740, column: 55, scope: !7168)
!7179 = !DILocation(line: 740, column: 24, scope: !7168)
!7180 = !DILocalVariable(name: "first_dir_created", scope: !7168, file: !245, line: 741, type: !120)
!7181 = !DILocation(line: 741, column: 12, scope: !7168)
!7182 = !DILocation(line: 741, column: 33, scope: !7168)
!7183 = !DILocation(line: 741, column: 32, scope: !7168)
!7184 = !DILocation(line: 743, column: 28, scope: !7168)
!7185 = !DILocation(line: 743, column: 38, scope: !7168)
!7186 = !DILocation(line: 743, column: 48, scope: !7168)
!7187 = !DILocation(line: 743, column: 57, scope: !7168)
!7188 = !DILocation(line: 744, column: 28, scope: !7168)
!7189 = !DILocation(line: 743, column: 13, scope: !7168)
!7190 = !DILocation(line: 743, column: 10, scope: !7168)
!7191 = !DILocation(line: 747, column: 26, scope: !7168)
!7192 = !DILocation(line: 747, column: 8, scope: !7168)
!7193 = !DILocation(line: 747, column: 23, scope: !7168)
!7194 = !DILocation(line: 749, column: 13, scope: !7168)
!7195 = !DILocation(line: 749, column: 7, scope: !7168)
!7196 = !DILocation(line: 750, column: 13, scope: !7168)
!7197 = !DILocation(line: 750, column: 7, scope: !7168)
!7198 = !DILocation(line: 755, column: 11, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7168, file: !245, line: 755, column: 11)
!7200 = !DILocation(line: 755, column: 11, scope: !7168)
!7201 = !DILocation(line: 756, column: 9, scope: !7199)
!7202 = !DILocation(line: 758, column: 32, scope: !7168)
!7203 = !DILocation(line: 758, column: 29, scope: !7168)
!7204 = !DILocation(line: 759, column: 24, scope: !7168)
!7205 = !DILocation(line: 759, column: 16, scope: !7168)
!7206 = !DILocation(line: 759, column: 31, scope: !7168)
!7207 = !DILocation(line: 759, column: 13, scope: !7168)
!7208 = distinct !{!7208, !7163, !7209}
!7209 = !DILocation(line: 760, column: 5, scope: !7110)
!7210 = !DILocation(line: 761, column: 9, scope: !7110)
!7211 = !DILocation(line: 761, column: 3, scope: !7110)
!7212 = !DILocation(line: 762, column: 45, scope: !7110)
!7213 = !DILocation(line: 762, column: 4, scope: !7110)
!7214 = !DILocation(line: 762, column: 43, scope: !7110)
!7215 = !DILocation(line: 764, column: 10, scope: !7110)
!7216 = !DILocation(line: 764, column: 3, scope: !7110)
!7217 = !DILocation(line: 765, column: 1, scope: !7110)
!7218 = distinct !DISubprogram(name: "copy_reg", scope: !245, file: !245, line: 1016, type: !415, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7219 = !DILocalVariable(name: "src_name", arg: 1, scope: !7218, file: !245, line: 1016, type: !115)
!7220 = !DILocation(line: 1016, column: 23, scope: !7218)
!7221 = !DILocalVariable(name: "dst_name", arg: 2, scope: !7218, file: !245, line: 1016, type: !115)
!7222 = !DILocation(line: 1016, column: 45, scope: !7218)
!7223 = !DILocalVariable(name: "x", arg: 3, scope: !7218, file: !245, line: 1017, type: !252)
!7224 = !DILocation(line: 1017, column: 36, scope: !7218)
!7225 = !DILocalVariable(name: "dst_mode", arg: 4, scope: !7218, file: !245, line: 1018, type: !160)
!7226 = !DILocation(line: 1018, column: 18, scope: !7218)
!7227 = !DILocalVariable(name: "omitted_permissions", arg: 5, scope: !7218, file: !245, line: 1018, type: !160)
!7228 = !DILocation(line: 1018, column: 35, scope: !7218)
!7229 = !DILocalVariable(name: "new_dst", arg: 6, scope: !7218, file: !245, line: 1018, type: !302)
!7230 = !DILocation(line: 1018, column: 62, scope: !7218)
!7231 = !DILocalVariable(name: "src_sb", arg: 7, scope: !7218, file: !245, line: 1019, type: !315)
!7232 = !DILocation(line: 1019, column: 30, scope: !7218)
!7233 = !DILocalVariable(name: "buf", scope: !7218, file: !245, line: 1021, type: !9)
!7234 = !DILocation(line: 1021, column: 9, scope: !7218)
!7235 = !DILocalVariable(name: "buf_alloc", scope: !7218, file: !245, line: 1022, type: !9)
!7236 = !DILocation(line: 1022, column: 9, scope: !7218)
!7237 = !DILocalVariable(name: "name_alloc", scope: !7218, file: !245, line: 1023, type: !9)
!7238 = !DILocation(line: 1023, column: 9, scope: !7218)
!7239 = !DILocalVariable(name: "dest_desc", scope: !7218, file: !245, line: 1024, type: !7)
!7240 = !DILocation(line: 1024, column: 7, scope: !7218)
!7241 = !DILocalVariable(name: "dest_errno", scope: !7218, file: !245, line: 1025, type: !7)
!7242 = !DILocation(line: 1025, column: 7, scope: !7218)
!7243 = !DILocalVariable(name: "source_desc", scope: !7218, file: !245, line: 1026, type: !7)
!7244 = !DILocation(line: 1026, column: 7, scope: !7218)
!7245 = !DILocalVariable(name: "src_mode", scope: !7218, file: !245, line: 1027, type: !160)
!7246 = !DILocation(line: 1027, column: 10, scope: !7218)
!7247 = !DILocation(line: 1027, column: 21, scope: !7218)
!7248 = !DILocation(line: 1027, column: 29, scope: !7218)
!7249 = !DILocalVariable(name: "sb", scope: !7218, file: !245, line: 1028, type: !317)
!7250 = !DILocation(line: 1028, column: 15, scope: !7218)
!7251 = !DILocalVariable(name: "src_open_sb", scope: !7218, file: !245, line: 1029, type: !317)
!7252 = !DILocation(line: 1029, column: 15, scope: !7218)
!7253 = !DILocalVariable(name: "return_val", scope: !7218, file: !245, line: 1030, type: !120)
!7254 = !DILocation(line: 1030, column: 8, scope: !7218)
!7255 = !DILocalVariable(name: "data_copy_required", scope: !7218, file: !245, line: 1031, type: !120)
!7256 = !DILocation(line: 1031, column: 8, scope: !7218)
!7257 = !DILocation(line: 1031, column: 29, scope: !7218)
!7258 = !DILocation(line: 1031, column: 32, scope: !7218)
!7259 = !DILocation(line: 1033, column: 23, scope: !7218)
!7260 = !DILocation(line: 1035, column: 27, scope: !7218)
!7261 = !DILocation(line: 1035, column: 30, scope: !7218)
!7262 = !DILocation(line: 1035, column: 42, scope: !7218)
!7263 = !DILocation(line: 1035, column: 24, scope: !7218)
!7264 = !DILocation(line: 1033, column: 17, scope: !7218)
!7265 = !DILocation(line: 1033, column: 15, scope: !7218)
!7266 = !DILocation(line: 1036, column: 7, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1036, column: 7)
!7268 = !DILocation(line: 1036, column: 19, scope: !7267)
!7269 = !DILocation(line: 1036, column: 7, scope: !7218)
!7270 = !DILocation(line: 1038, column: 17, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7267, file: !245, line: 1037, column: 5)
!7272 = !DILocation(line: 1038, column: 24, scope: !7271)
!7273 = !DILocation(line: 1038, column: 57, scope: !7271)
!7274 = !DILocation(line: 1038, column: 7, scope: !7271)
!7275 = !DILocation(line: 1039, column: 7, scope: !7271)
!7276 = !DILocation(line: 1042, column: 14, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1042, column: 7)
!7278 = !DILocation(line: 1042, column: 7, scope: !7277)
!7279 = !DILocation(line: 1042, column: 41, scope: !7277)
!7280 = !DILocation(line: 1042, column: 7, scope: !7218)
!7281 = !DILocation(line: 1044, column: 17, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7277, file: !245, line: 1043, column: 5)
!7283 = !DILocation(line: 1044, column: 24, scope: !7282)
!7284 = !DILocation(line: 1044, column: 46, scope: !7282)
!7285 = !DILocation(line: 1044, column: 7, scope: !7282)
!7286 = !DILocation(line: 1045, column: 18, scope: !7282)
!7287 = !DILocation(line: 1046, column: 7, scope: !7282)
!7288 = !DILocation(line: 1051, column: 9, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1051, column: 7)
!7290 = !DILocation(line: 1051, column: 7, scope: !7218)
!7291 = !DILocation(line: 1054, column: 14, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7289, file: !245, line: 1052, column: 5)
!7293 = !DILocation(line: 1055, column: 14, scope: !7292)
!7294 = !DILocation(line: 1053, column: 7, scope: !7292)
!7295 = !DILocation(line: 1056, column: 18, scope: !7292)
!7296 = !DILocation(line: 1057, column: 7, scope: !7292)
!7297 = !DILocation(line: 1062, column: 10, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1062, column: 7)
!7299 = !DILocation(line: 1062, column: 9, scope: !7298)
!7300 = !DILocation(line: 1062, column: 7, scope: !7218)
!7301 = !DILocalVariable(name: "open_flags", scope: !7302, file: !245, line: 1064, type: !7)
!7302 = distinct !DILexicalBlock(scope: !7298, file: !245, line: 1063, column: 5)
!7303 = !DILocation(line: 1064, column: 11, scope: !7302)
!7304 = !DILocation(line: 1065, column: 32, scope: !7302)
!7305 = !DILocation(line: 1065, column: 35, scope: !7302)
!7306 = !DILocation(line: 1065, column: 29, scope: !7302)
!7307 = !DILocation(line: 1066, column: 25, scope: !7302)
!7308 = !DILocation(line: 1066, column: 35, scope: !7302)
!7309 = !DILocation(line: 1066, column: 19, scope: !7302)
!7310 = !DILocation(line: 1066, column: 17, scope: !7302)
!7311 = !DILocation(line: 1067, column: 20, scope: !7302)
!7312 = !DILocation(line: 1067, column: 18, scope: !7302)
!7313 = !DILocation(line: 1076, column: 12, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7302, file: !245, line: 1076, column: 11)
!7315 = !DILocation(line: 1076, column: 15, scope: !7314)
!7316 = !DILocation(line: 1076, column: 36, scope: !7314)
!7317 = !DILocation(line: 1076, column: 39, scope: !7314)
!7318 = !DILocation(line: 1076, column: 42, scope: !7314)
!7319 = !DILocation(line: 1077, column: 11, scope: !7314)
!7320 = !DILocation(line: 1077, column: 19, scope: !7314)
!7321 = !DILocation(line: 1077, column: 16, scope: !7314)
!7322 = !DILocation(line: 1076, column: 11, scope: !7302)
!7323 = !DILocation(line: 1079, column: 40, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7325, file: !245, line: 1079, column: 15)
!7325 = distinct !DILexicalBlock(scope: !7314, file: !245, line: 1078, column: 9)
!7326 = !DILocation(line: 1079, column: 50, scope: !7324)
!7327 = !DILocation(line: 1079, column: 53, scope: !7324)
!7328 = !DILocation(line: 1080, column: 47, scope: !7324)
!7329 = !DILocation(line: 1079, column: 17, scope: !7324)
!7330 = !DILocation(line: 1079, column: 15, scope: !7325)
!7331 = !DILocation(line: 1082, column: 19, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7333, file: !245, line: 1082, column: 19)
!7333 = distinct !DILexicalBlock(scope: !7324, file: !245, line: 1081, column: 13)
!7334 = !DILocation(line: 1082, column: 22, scope: !7332)
!7335 = !DILocation(line: 1082, column: 19, scope: !7333)
!7336 = !DILocation(line: 1084, column: 30, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7332, file: !245, line: 1083, column: 17)
!7338 = !DILocation(line: 1085, column: 19, scope: !7337)
!7339 = !DILocation(line: 1087, column: 13, scope: !7333)
!7340 = !DILocation(line: 1088, column: 9, scope: !7325)
!7341 = !DILocation(line: 1090, column: 11, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7302, file: !245, line: 1090, column: 11)
!7343 = !DILocation(line: 1090, column: 21, scope: !7342)
!7344 = !DILocation(line: 1090, column: 25, scope: !7342)
!7345 = !DILocation(line: 1090, column: 28, scope: !7342)
!7346 = !DILocation(line: 1090, column: 31, scope: !7342)
!7347 = !DILocation(line: 1090, column: 11, scope: !7302)
!7348 = !DILocation(line: 1092, column: 23, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7350, file: !245, line: 1092, column: 15)
!7350 = distinct !DILexicalBlock(scope: !7342, file: !245, line: 1091, column: 9)
!7351 = !DILocation(line: 1092, column: 15, scope: !7349)
!7352 = !DILocation(line: 1092, column: 33, scope: !7349)
!7353 = !DILocation(line: 1092, column: 15, scope: !7350)
!7354 = !DILocation(line: 1094, column: 25, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7349, file: !245, line: 1093, column: 13)
!7356 = !DILocation(line: 1094, column: 32, scope: !7355)
!7357 = !DILocation(line: 1094, column: 55, scope: !7355)
!7358 = !DILocation(line: 1094, column: 15, scope: !7355)
!7359 = !DILocation(line: 1095, column: 26, scope: !7355)
!7360 = !DILocation(line: 1096, column: 15, scope: !7355)
!7361 = !DILocation(line: 1098, column: 15, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7350, file: !245, line: 1098, column: 15)
!7363 = !DILocation(line: 1098, column: 18, scope: !7362)
!7364 = !DILocation(line: 1098, column: 15, scope: !7350)
!7365 = !DILocation(line: 1099, column: 21, scope: !7362)
!7366 = !DILocation(line: 1099, column: 40, scope: !7362)
!7367 = !DILocation(line: 1099, column: 13, scope: !7362)
!7368 = !DILocation(line: 1102, column: 12, scope: !7350)
!7369 = !DILocation(line: 1102, column: 20, scope: !7350)
!7370 = !DILocation(line: 1106, column: 15, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7350, file: !245, line: 1106, column: 15)
!7372 = !DILocation(line: 1106, column: 18, scope: !7371)
!7373 = !DILocation(line: 1106, column: 15, scope: !7350)
!7374 = !DILocation(line: 1108, column: 47, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7376, file: !245, line: 1108, column: 19)
!7376 = distinct !DILexicalBlock(scope: !7371, file: !245, line: 1107, column: 13)
!7377 = !DILocation(line: 1108, column: 57, scope: !7375)
!7378 = !DILocation(line: 1108, column: 67, scope: !7375)
!7379 = !DILocation(line: 1109, column: 48, scope: !7375)
!7380 = !DILocation(line: 1109, column: 47, scope: !7375)
!7381 = !DILocation(line: 1109, column: 57, scope: !7375)
!7382 = !DILocation(line: 1108, column: 21, scope: !7375)
!7383 = !DILocation(line: 1108, column: 19, scope: !7376)
!7384 = !DILocation(line: 1111, column: 30, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7375, file: !245, line: 1110, column: 17)
!7386 = !DILocation(line: 1112, column: 19, scope: !7385)
!7387 = !DILocation(line: 1114, column: 13, scope: !7376)
!7388 = !DILocation(line: 1115, column: 9, scope: !7350)
!7389 = !DILocation(line: 1116, column: 5, scope: !7302)
!7390 = !DILocation(line: 1118, column: 8, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1118, column: 7)
!7392 = !DILocation(line: 1118, column: 7, scope: !7391)
!7393 = !DILocation(line: 1118, column: 7, scope: !7218)
!7394 = !DILocation(line: 1119, column: 5, scope: !7391)
!7395 = !DILabel(scope: !7396, name: "open_with_O_CREAT", file: !245, line: 1120)
!7396 = distinct !DILexicalBlock(scope: !7391, file: !245, line: 1119, column: 5)
!7397 = !DILocation(line: 1120, column: 5, scope: !7396)
!7398 = !DILocalVariable(name: "open_flags", scope: !7396, file: !245, line: 1122, type: !7)
!7399 = !DILocation(line: 1122, column: 11, scope: !7396)
!7400 = !DILocation(line: 1123, column: 25, scope: !7396)
!7401 = !DILocation(line: 1123, column: 35, scope: !7396)
!7402 = !DILocation(line: 1123, column: 46, scope: !7396)
!7403 = !DILocation(line: 1124, column: 25, scope: !7396)
!7404 = !DILocation(line: 1124, column: 37, scope: !7396)
!7405 = !DILocation(line: 1124, column: 36, scope: !7396)
!7406 = !DILocation(line: 1124, column: 34, scope: !7396)
!7407 = !DILocation(line: 1123, column: 19, scope: !7396)
!7408 = !DILocation(line: 1123, column: 17, scope: !7396)
!7409 = !DILocation(line: 1125, column: 20, scope: !7396)
!7410 = !DILocation(line: 1125, column: 18, scope: !7396)
!7411 = !DILocation(line: 1137, column: 11, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7396, file: !245, line: 1137, column: 11)
!7413 = !DILocation(line: 1137, column: 21, scope: !7412)
!7414 = !DILocation(line: 1137, column: 25, scope: !7412)
!7415 = !DILocation(line: 1137, column: 28, scope: !7412)
!7416 = !DILocation(line: 1137, column: 39, scope: !7412)
!7417 = !DILocation(line: 1137, column: 49, scope: !7412)
!7418 = !DILocation(line: 1137, column: 54, scope: !7412)
!7419 = !DILocation(line: 1137, column: 57, scope: !7412)
!7420 = !DILocation(line: 1137, column: 11, scope: !7396)
!7421 = !DILocalVariable(name: "dangling_link_sb", scope: !7422, file: !245, line: 1139, type: !317)
!7422 = distinct !DILexicalBlock(scope: !7412, file: !245, line: 1138, column: 9)
!7423 = !DILocation(line: 1139, column: 23, scope: !7422)
!7424 = !DILocation(line: 1140, column: 22, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7422, file: !245, line: 1140, column: 15)
!7426 = !DILocation(line: 1140, column: 15, scope: !7425)
!7427 = !DILocation(line: 1140, column: 51, scope: !7425)
!7428 = !DILocation(line: 1141, column: 15, scope: !7425)
!7429 = !DILocation(line: 1141, column: 18, scope: !7425)
!7430 = !DILocation(line: 1140, column: 15, scope: !7422)
!7431 = !DILocation(line: 1143, column: 19, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7433, file: !245, line: 1143, column: 19)
!7433 = distinct !DILexicalBlock(scope: !7425, file: !245, line: 1142, column: 13)
!7434 = !DILocation(line: 1143, column: 22, scope: !7432)
!7435 = !DILocation(line: 1143, column: 19, scope: !7433)
!7436 = !DILocation(line: 1145, column: 37, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7432, file: !245, line: 1144, column: 17)
!7438 = !DILocation(line: 1145, column: 47, scope: !7437)
!7439 = !DILocation(line: 1146, column: 37, scope: !7437)
!7440 = !DILocation(line: 1146, column: 49, scope: !7437)
!7441 = !DILocation(line: 1146, column: 48, scope: !7437)
!7442 = !DILocation(line: 1146, column: 46, scope: !7437)
!7443 = !DILocation(line: 1145, column: 31, scope: !7437)
!7444 = !DILocation(line: 1145, column: 29, scope: !7437)
!7445 = !DILocation(line: 1147, column: 32, scope: !7437)
!7446 = !DILocation(line: 1147, column: 30, scope: !7437)
!7447 = !DILocation(line: 1148, column: 17, scope: !7437)
!7448 = !DILocation(line: 1151, column: 32, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7432, file: !245, line: 1150, column: 17)
!7450 = !DILocation(line: 1152, column: 26, scope: !7449)
!7451 = !DILocation(line: 1151, column: 19, scope: !7449)
!7452 = !DILocation(line: 1153, column: 30, scope: !7449)
!7453 = !DILocation(line: 1154, column: 19, scope: !7449)
!7454 = !DILocation(line: 1156, column: 13, scope: !7433)
!7455 = !DILocation(line: 1157, column: 9, scope: !7422)
!7456 = !DILocation(line: 1161, column: 11, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7396, file: !245, line: 1161, column: 11)
!7458 = !DILocation(line: 1161, column: 21, scope: !7457)
!7459 = !DILocation(line: 1161, column: 25, scope: !7457)
!7460 = !DILocation(line: 1161, column: 28, scope: !7457)
!7461 = !DILocation(line: 1161, column: 39, scope: !7457)
!7462 = !DILocation(line: 1162, column: 11, scope: !7457)
!7463 = !DILocation(line: 1162, column: 15, scope: !7457)
!7464 = !DILocation(line: 1162, column: 14, scope: !7457)
!7465 = !DILocation(line: 1162, column: 24, scope: !7457)
!7466 = !DILocation(line: 1162, column: 27, scope: !7457)
!7467 = !DILocation(line: 1162, column: 44, scope: !7457)
!7468 = !DILocation(line: 1162, column: 36, scope: !7457)
!7469 = !DILocation(line: 1162, column: 54, scope: !7457)
!7470 = !DILocation(line: 1162, column: 59, scope: !7457)
!7471 = !DILocation(line: 1161, column: 11, scope: !7396)
!7472 = !DILocation(line: 1163, column: 20, scope: !7457)
!7473 = !DILocation(line: 1163, column: 9, scope: !7457)
!7474 = !DILocation(line: 1164, column: 5, scope: !7396)
!7475 = !DILocation(line: 1167, column: 27, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7391, file: !245, line: 1166, column: 5)
!7477 = !DILocation(line: 1170, column: 7, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1170, column: 7)
!7479 = !DILocation(line: 1170, column: 17, scope: !7478)
!7480 = !DILocation(line: 1170, column: 7, scope: !7218)
!7481 = !DILocation(line: 1182, column: 11, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7483, file: !245, line: 1182, column: 11)
!7483 = distinct !DILexicalBlock(scope: !7478, file: !245, line: 1171, column: 5)
!7484 = !DILocation(line: 1182, column: 22, scope: !7482)
!7485 = !DILocation(line: 1182, column: 32, scope: !7482)
!7486 = !DILocation(line: 1182, column: 38, scope: !7482)
!7487 = !DILocation(line: 1182, column: 37, scope: !7482)
!7488 = !DILocation(line: 1182, column: 46, scope: !7482)
!7489 = !DILocation(line: 1182, column: 51, scope: !7482)
!7490 = !DILocation(line: 1182, column: 54, scope: !7482)
!7491 = !DILocation(line: 1182, column: 11, scope: !7483)
!7492 = !DILocation(line: 1184, column: 12, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7482, file: !245, line: 1183, column: 9)
!7494 = !DILocation(line: 1184, column: 20, scope: !7493)
!7495 = !DILocation(line: 1185, column: 11, scope: !7493)
!7496 = !DILocation(line: 1189, column: 17, scope: !7483)
!7497 = !DILocation(line: 1189, column: 29, scope: !7483)
!7498 = !DILocation(line: 1190, column: 14, scope: !7483)
!7499 = !DILocation(line: 1189, column: 7, scope: !7483)
!7500 = !DILocation(line: 1191, column: 18, scope: !7483)
!7501 = !DILocation(line: 1192, column: 7, scope: !7483)
!7502 = !DILocation(line: 1195, column: 14, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1195, column: 7)
!7504 = !DILocation(line: 1195, column: 7, scope: !7503)
!7505 = !DILocation(line: 1195, column: 30, scope: !7503)
!7506 = !DILocation(line: 1195, column: 7, scope: !7218)
!7507 = !DILocation(line: 1197, column: 17, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7503, file: !245, line: 1196, column: 5)
!7509 = !DILocation(line: 1197, column: 24, scope: !7508)
!7510 = !DILocation(line: 1197, column: 46, scope: !7508)
!7511 = !DILocation(line: 1197, column: 7, scope: !7508)
!7512 = !DILocation(line: 1198, column: 18, scope: !7508)
!7513 = !DILocation(line: 1199, column: 7, scope: !7508)
!7514 = !DILocation(line: 1203, column: 7, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1203, column: 7)
!7516 = !DILocation(line: 1203, column: 26, scope: !7515)
!7517 = !DILocation(line: 1203, column: 29, scope: !7515)
!7518 = !DILocation(line: 1203, column: 32, scope: !7515)
!7519 = !DILocation(line: 1203, column: 7, scope: !7218)
!7520 = !DILocalVariable(name: "clone_ok", scope: !7521, file: !245, line: 1205, type: !120)
!7521 = distinct !DILexicalBlock(scope: !7515, file: !245, line: 1204, column: 5)
!7522 = !DILocation(line: 1205, column: 12, scope: !7521)
!7523 = !DILocation(line: 1205, column: 35, scope: !7521)
!7524 = !DILocation(line: 1205, column: 46, scope: !7521)
!7525 = !DILocation(line: 1205, column: 23, scope: !7521)
!7526 = !DILocation(line: 1205, column: 59, scope: !7521)
!7527 = !DILocation(line: 1206, column: 11, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7521, file: !245, line: 1206, column: 11)
!7529 = !DILocation(line: 1206, column: 20, scope: !7528)
!7530 = !DILocation(line: 1206, column: 23, scope: !7528)
!7531 = !DILocation(line: 1206, column: 26, scope: !7528)
!7532 = !DILocation(line: 1206, column: 39, scope: !7528)
!7533 = !DILocation(line: 1206, column: 11, scope: !7521)
!7534 = !DILocation(line: 1208, column: 16, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !245, line: 1208, column: 15)
!7536 = distinct !DILexicalBlock(scope: !7528, file: !245, line: 1207, column: 9)
!7537 = !DILocation(line: 1208, column: 15, scope: !7536)
!7538 = !DILocation(line: 1210, column: 25, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7535, file: !245, line: 1209, column: 13)
!7540 = !DILocation(line: 1210, column: 32, scope: !7539)
!7541 = !DILocation(line: 1211, column: 22, scope: !7539)
!7542 = !DILocation(line: 1211, column: 47, scope: !7539)
!7543 = !DILocation(line: 1210, column: 15, scope: !7539)
!7544 = !DILocation(line: 1212, column: 26, scope: !7539)
!7545 = !DILocation(line: 1213, column: 15, scope: !7539)
!7546 = !DILocation(line: 1215, column: 30, scope: !7536)
!7547 = !DILocation(line: 1216, column: 9, scope: !7536)
!7548 = !DILocation(line: 1217, column: 5, scope: !7521)
!7549 = !DILocation(line: 1219, column: 7, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1219, column: 7)
!7551 = !DILocation(line: 1219, column: 7, scope: !7218)
!7552 = !DILocalVariable(name: "buf_alignment", scope: !7553, file: !245, line: 1222, type: !55)
!7553 = distinct !DILexicalBlock(scope: !7550, file: !245, line: 1220, column: 5)
!7554 = !DILocation(line: 1222, column: 14, scope: !7553)
!7555 = !DILocation(line: 1222, column: 30, scope: !7553)
!7556 = !DILocalVariable(name: "buf_size", scope: !7553, file: !245, line: 1223, type: !55)
!7557 = !DILocation(line: 1223, column: 14, scope: !7553)
!7558 = !DILocation(line: 1223, column: 25, scope: !7553)
!7559 = !DILocalVariable(name: "hole_size", scope: !7553, file: !245, line: 1224, type: !55)
!7560 = !DILocation(line: 1224, column: 14, scope: !7553)
!7561 = !DILocation(line: 1224, column: 26, scope: !7553)
!7562 = !{!3179, !3180, i64 56}
!7563 = !DILocation(line: 1226, column: 17, scope: !7553)
!7564 = !DILocation(line: 1226, column: 7, scope: !7553)
!7565 = !DILocalVariable(name: "make_holes", scope: !7553, file: !245, line: 1229, type: !120)
!7566 = !DILocation(line: 1229, column: 12, scope: !7553)
!7567 = !DILocalVariable(name: "sparse_src", scope: !7553, file: !245, line: 1230, type: !120)
!7568 = !DILocation(line: 1230, column: 12, scope: !7553)
!7569 = !DILocation(line: 1230, column: 25, scope: !7553)
!7570 = !DILocation(line: 1232, column: 11, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7553, file: !245, line: 1232, column: 11)
!7572 = !DILocation(line: 1232, column: 11, scope: !7553)
!7573 = !DILocation(line: 1236, column: 15, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !245, line: 1236, column: 15)
!7575 = distinct !DILexicalBlock(scope: !7571, file: !245, line: 1233, column: 9)
!7576 = !DILocation(line: 1236, column: 18, scope: !7574)
!7577 = !DILocation(line: 1236, column: 30, scope: !7574)
!7578 = !DILocation(line: 1236, column: 15, scope: !7575)
!7579 = !DILocation(line: 1237, column: 24, scope: !7574)
!7580 = !DILocation(line: 1237, column: 13, scope: !7574)
!7581 = !DILocation(line: 1243, column: 15, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7575, file: !245, line: 1243, column: 15)
!7583 = !DILocation(line: 1243, column: 18, scope: !7582)
!7584 = !DILocation(line: 1243, column: 30, scope: !7582)
!7585 = !DILocation(line: 1243, column: 45, scope: !7582)
!7586 = !DILocation(line: 1243, column: 48, scope: !7582)
!7587 = !DILocation(line: 1243, column: 15, scope: !7575)
!7588 = !DILocation(line: 1244, column: 24, scope: !7582)
!7589 = !DILocation(line: 1244, column: 13, scope: !7582)
!7590 = !DILocation(line: 1245, column: 9, scope: !7575)
!7591 = !DILocation(line: 1249, column: 13, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7553, file: !245, line: 1249, column: 11)
!7593 = !DILocation(line: 1249, column: 11, scope: !7553)
!7594 = !DILocalVariable(name: "blcm_max", scope: !7595, file: !245, line: 1253, type: !55)
!7595 = distinct !DILexicalBlock(scope: !7592, file: !245, line: 1250, column: 9)
!7596 = !DILocation(line: 1253, column: 18, scope: !7595)
!7597 = !DILocation(line: 1253, column: 57, scope: !7595)
!7598 = !DILocation(line: 1253, column: 55, scope: !7595)
!7599 = !DILocalVariable(name: "blcm", scope: !7595, file: !245, line: 1254, type: !55)
!7600 = !DILocation(line: 1254, column: 18, scope: !7595)
!7601 = !DILocation(line: 1254, column: 37, scope: !7595)
!7602 = !DILocation(line: 1254, column: 63, scope: !7595)
!7603 = !DILocation(line: 1255, column: 37, scope: !7595)
!7604 = !DILocation(line: 1254, column: 25, scope: !7595)
!7605 = !DILocation(line: 1259, column: 15, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7595, file: !245, line: 1259, column: 15)
!7607 = !DILocation(line: 1259, column: 45, scope: !7606)
!7608 = !DILocation(line: 1259, column: 60, scope: !7606)
!7609 = !DILocation(line: 1259, column: 70, scope: !7606)
!7610 = !DILocation(line: 1259, column: 68, scope: !7606)
!7611 = !DILocation(line: 1259, column: 15, scope: !7595)
!7612 = !DILocation(line: 1260, column: 36, scope: !7606)
!7613 = !DILocation(line: 1260, column: 44, scope: !7606)
!7614 = !DILocation(line: 1260, column: 22, scope: !7606)
!7615 = !DILocation(line: 1260, column: 13, scope: !7606)
!7616 = !DILocation(line: 1265, column: 23, scope: !7595)
!7617 = !DILocation(line: 1265, column: 28, scope: !7595)
!7618 = !DILocation(line: 1265, column: 20, scope: !7595)
!7619 = !DILocation(line: 1266, column: 23, scope: !7595)
!7620 = !DILocation(line: 1266, column: 34, scope: !7595)
!7621 = !DILocation(line: 1266, column: 32, scope: !7595)
!7622 = !DILocation(line: 1266, column: 20, scope: !7595)
!7623 = !DILocation(line: 1267, column: 15, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7595, file: !245, line: 1267, column: 15)
!7625 = !DILocation(line: 1267, column: 24, scope: !7624)
!7626 = !DILocation(line: 1267, column: 29, scope: !7624)
!7627 = !DILocation(line: 1267, column: 32, scope: !7624)
!7628 = !DILocation(line: 1267, column: 43, scope: !7624)
!7629 = !DILocation(line: 1267, column: 41, scope: !7624)
!7630 = !DILocation(line: 1267, column: 15, scope: !7595)
!7631 = !DILocation(line: 1268, column: 24, scope: !7624)
!7632 = !DILocation(line: 1268, column: 22, scope: !7624)
!7633 = !DILocation(line: 1268, column: 13, scope: !7624)
!7634 = !DILocation(line: 1269, column: 9, scope: !7595)
!7635 = !DILocation(line: 1271, column: 28, scope: !7553)
!7636 = !DILocation(line: 1271, column: 39, scope: !7553)
!7637 = !DILocation(line: 1271, column: 37, scope: !7553)
!7638 = !DILocation(line: 1271, column: 19, scope: !7553)
!7639 = !DILocation(line: 1271, column: 17, scope: !7553)
!7640 = !DILocation(line: 1272, column: 24, scope: !7553)
!7641 = !DILocation(line: 1272, column: 35, scope: !7553)
!7642 = !DILocation(line: 1272, column: 13, scope: !7553)
!7643 = !DILocation(line: 1272, column: 11, scope: !7553)
!7644 = !DILocation(line: 1274, column: 11, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7553, file: !245, line: 1274, column: 11)
!7646 = !DILocation(line: 1274, column: 11, scope: !7553)
!7647 = !DILocalVariable(name: "normal_copy_required", scope: !7648, file: !245, line: 1276, type: !120)
!7648 = distinct !DILexicalBlock(scope: !7645, file: !245, line: 1275, column: 9)
!7649 = !DILocation(line: 1276, column: 16, scope: !7648)
!7650 = !DILocation(line: 1282, column: 28, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7648, file: !245, line: 1282, column: 15)
!7652 = !DILocation(line: 1282, column: 41, scope: !7651)
!7653 = !DILocation(line: 1282, column: 52, scope: !7651)
!7654 = !DILocation(line: 1282, column: 57, scope: !7651)
!7655 = !DILocation(line: 1282, column: 67, scope: !7651)
!7656 = !DILocation(line: 1283, column: 40, scope: !7651)
!7657 = !DILocation(line: 1284, column: 28, scope: !7651)
!7658 = !DILocation(line: 1284, column: 41, scope: !7651)
!7659 = !DILocation(line: 1284, column: 44, scope: !7651)
!7660 = !DILocation(line: 1285, column: 28, scope: !7651)
!7661 = !DILocation(line: 1285, column: 38, scope: !7651)
!7662 = !DILocation(line: 1282, column: 15, scope: !7651)
!7663 = !DILocation(line: 1282, column: 15, scope: !7648)
!7664 = !DILocation(line: 1286, column: 13, scope: !7651)
!7665 = !DILocation(line: 1288, column: 17, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7648, file: !245, line: 1288, column: 15)
!7667 = !DILocation(line: 1288, column: 15, scope: !7648)
!7668 = !DILocation(line: 1290, column: 26, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7666, file: !245, line: 1289, column: 13)
!7670 = !DILocation(line: 1291, column: 15, scope: !7669)
!7671 = !DILocation(line: 1293, column: 9, scope: !7648)
!7672 = !DILocalVariable(name: "n_read", scope: !7553, file: !245, line: 1295, type: !248)
!7673 = !DILocation(line: 1295, column: 13, scope: !7553)
!7674 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !7553, file: !245, line: 1296, type: !120)
!7675 = !DILocation(line: 1296, column: 12, scope: !7553)
!7676 = !DILocation(line: 1297, column: 26, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7553, file: !245, line: 1297, column: 11)
!7678 = !DILocation(line: 1297, column: 39, scope: !7677)
!7679 = !DILocation(line: 1297, column: 50, scope: !7677)
!7680 = !DILocation(line: 1297, column: 55, scope: !7677)
!7681 = !DILocation(line: 1298, column: 26, scope: !7677)
!7682 = !DILocation(line: 1298, column: 39, scope: !7677)
!7683 = !DILocation(line: 1299, column: 26, scope: !7677)
!7684 = !DILocation(line: 1299, column: 29, scope: !7677)
!7685 = !DILocation(line: 1299, column: 41, scope: !7677)
!7686 = !DILocation(line: 1299, column: 59, scope: !7677)
!7687 = !DILocation(line: 1299, column: 69, scope: !7677)
!7688 = !DILocation(line: 1297, column: 13, scope: !7677)
!7689 = !DILocation(line: 1297, column: 11, scope: !7553)
!7690 = !DILocation(line: 1303, column: 22, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7677, file: !245, line: 1302, column: 9)
!7692 = !DILocation(line: 1304, column: 11, scope: !7691)
!7693 = !DILocation(line: 1306, column: 16, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7677, file: !245, line: 1306, column: 16)
!7695 = !DILocation(line: 1306, column: 34, scope: !7694)
!7696 = !DILocation(line: 1306, column: 48, scope: !7694)
!7697 = !DILocation(line: 1306, column: 59, scope: !7694)
!7698 = !DILocation(line: 1306, column: 37, scope: !7694)
!7699 = !DILocation(line: 1306, column: 67, scope: !7694)
!7700 = !DILocation(line: 1306, column: 16, scope: !7677)
!7701 = !DILocation(line: 1308, column: 21, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7694, file: !245, line: 1307, column: 9)
!7703 = !DILocation(line: 1308, column: 28, scope: !7702)
!7704 = !DILocation(line: 1308, column: 54, scope: !7702)
!7705 = !DILocation(line: 1308, column: 11, scope: !7702)
!7706 = !DILocation(line: 1309, column: 22, scope: !7702)
!7707 = !DILocation(line: 1310, column: 11, scope: !7702)
!7708 = !DILocation(line: 1312, column: 5, scope: !7553)
!7709 = !DILabel(scope: !7218, name: "preserve_metadata", file: !245, line: 1314)
!7710 = !DILocation(line: 1314, column: 1, scope: !7218)
!7711 = !DILocation(line: 1315, column: 7, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1315, column: 7)
!7713 = !DILocation(line: 1315, column: 10, scope: !7712)
!7714 = !DILocation(line: 1315, column: 7, scope: !7218)
!7715 = !DILocalVariable(name: "timespec", scope: !7716, file: !245, line: 1317, type: !357)
!7716 = distinct !DILexicalBlock(scope: !7712, file: !245, line: 1316, column: 5)
!7717 = !DILocation(line: 1317, column: 23, scope: !7716)
!7718 = !DILocation(line: 1318, column: 7, scope: !7716)
!7719 = !DILocation(line: 1318, column: 37, scope: !7716)
!7720 = !DILocation(line: 1318, column: 21, scope: !7716)
!7721 = !DILocation(line: 1319, column: 7, scope: !7716)
!7722 = !DILocation(line: 1319, column: 37, scope: !7716)
!7723 = !DILocation(line: 1319, column: 21, scope: !7716)
!7724 = !DILocation(line: 1321, column: 22, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7716, file: !245, line: 1321, column: 11)
!7726 = !DILocation(line: 1321, column: 33, scope: !7725)
!7727 = !DILocation(line: 1321, column: 43, scope: !7725)
!7728 = !DILocation(line: 1321, column: 11, scope: !7725)
!7729 = !DILocation(line: 1321, column: 53, scope: !7725)
!7730 = !DILocation(line: 1321, column: 11, scope: !7716)
!7731 = !DILocation(line: 1323, column: 21, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7725, file: !245, line: 1322, column: 9)
!7733 = !DILocation(line: 1323, column: 28, scope: !7732)
!7734 = !DILocation(line: 1323, column: 58, scope: !7732)
!7735 = !DILocation(line: 1323, column: 11, scope: !7732)
!7736 = !DILocation(line: 1324, column: 15, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7732, file: !245, line: 1324, column: 15)
!7738 = !DILocation(line: 1324, column: 18, scope: !7737)
!7739 = !DILocation(line: 1324, column: 15, scope: !7732)
!7740 = !DILocation(line: 1326, column: 26, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7737, file: !245, line: 1325, column: 13)
!7742 = !DILocation(line: 1327, column: 15, scope: !7741)
!7743 = !DILocation(line: 1329, column: 9, scope: !7732)
!7744 = !DILocation(line: 1330, column: 5, scope: !7716)
!7745 = !DILocation(line: 1334, column: 7, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1334, column: 7)
!7747 = !DILocation(line: 1334, column: 10, scope: !7746)
!7748 = !DILocation(line: 1334, column: 29, scope: !7746)
!7749 = !DILocation(line: 1334, column: 34, scope: !7746)
!7750 = !DILocation(line: 1334, column: 7, scope: !7218)
!7751 = !DILocation(line: 1336, column: 26, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7746, file: !245, line: 1335, column: 5)
!7753 = !DILocation(line: 1336, column: 29, scope: !7752)
!7754 = !DILocation(line: 1336, column: 39, scope: !7752)
!7755 = !DILocation(line: 1336, column: 50, scope: !7752)
!7756 = !DILocation(line: 1336, column: 59, scope: !7752)
!7757 = !DILocation(line: 1336, column: 58, scope: !7752)
!7758 = !DILocation(line: 1336, column: 15, scope: !7752)
!7759 = !DILocation(line: 1336, column: 7, scope: !7752)
!7760 = !DILocation(line: 1339, column: 22, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7752, file: !245, line: 1337, column: 9)
!7762 = !DILocation(line: 1340, column: 11, scope: !7761)
!7763 = !DILocation(line: 1343, column: 20, scope: !7761)
!7764 = !DILocation(line: 1344, column: 11, scope: !7761)
!7765 = !DILocation(line: 1346, column: 5, scope: !7752)
!7766 = !DILocation(line: 1351, column: 7, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1351, column: 7)
!7768 = !DILocation(line: 1351, column: 10, scope: !7767)
!7769 = !DILocation(line: 1351, column: 7, scope: !7218)
!7770 = !DILocalVariable(name: "access_changed", scope: !7771, file: !245, line: 1353, type: !120)
!7771 = distinct !DILexicalBlock(scope: !7767, file: !245, line: 1352, column: 5)
!7772 = !DILocation(line: 1353, column: 12, scope: !7771)
!7773 = !DILocation(line: 1355, column: 16, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7771, file: !245, line: 1355, column: 11)
!7775 = !DILocation(line: 1355, column: 24, scope: !7774)
!7776 = !DILocation(line: 1355, column: 35, scope: !7774)
!7777 = !DILocation(line: 1355, column: 38, scope: !7774)
!7778 = !DILocation(line: 1355, column: 49, scope: !7774)
!7779 = !DILocation(line: 1355, column: 11, scope: !7771)
!7780 = !DILocation(line: 1357, column: 46, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7774, file: !245, line: 1356, column: 9)
!7782 = !DILocation(line: 1357, column: 57, scope: !7781)
!7783 = !DILocation(line: 1357, column: 28, scope: !7781)
!7784 = !DILocation(line: 1358, column: 65, scope: !7781)
!7785 = !DILocation(line: 1357, column: 26, scope: !7781)
!7786 = !DILocation(line: 1359, column: 9, scope: !7781)
!7787 = !DILocation(line: 1361, column: 23, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7771, file: !245, line: 1361, column: 11)
!7789 = !DILocation(line: 1361, column: 33, scope: !7788)
!7790 = !DILocation(line: 1361, column: 46, scope: !7788)
!7791 = !DILocation(line: 1361, column: 56, scope: !7788)
!7792 = !DILocation(line: 1361, column: 67, scope: !7788)
!7793 = !DILocation(line: 1361, column: 12, scope: !7788)
!7794 = !DILocation(line: 1362, column: 11, scope: !7788)
!7795 = !DILocation(line: 1362, column: 14, scope: !7788)
!7796 = !DILocation(line: 1362, column: 17, scope: !7788)
!7797 = !DILocation(line: 1361, column: 11, scope: !7771)
!7798 = !DILocation(line: 1363, column: 20, scope: !7788)
!7799 = !DILocation(line: 1363, column: 9, scope: !7788)
!7800 = !DILocation(line: 1365, column: 11, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7771, file: !245, line: 1365, column: 11)
!7802 = !DILocation(line: 1365, column: 11, scope: !7771)
!7803 = !DILocation(line: 1366, column: 27, scope: !7801)
!7804 = !DILocation(line: 1366, column: 38, scope: !7801)
!7805 = !DILocation(line: 1366, column: 48, scope: !7801)
!7806 = !DILocation(line: 1366, column: 60, scope: !7801)
!7807 = !DILocation(line: 1366, column: 59, scope: !7801)
!7808 = !DILocation(line: 1366, column: 57, scope: !7801)
!7809 = !DILocation(line: 1366, column: 9, scope: !7801)
!7810 = !DILocation(line: 1367, column: 5, scope: !7771)
!7811 = !DILocation(line: 1369, column: 15, scope: !7218)
!7812 = !DILocation(line: 1369, column: 25, scope: !7218)
!7813 = !DILocation(line: 1369, column: 36, scope: !7218)
!7814 = !DILocation(line: 1369, column: 3, scope: !7218)
!7815 = !DILocation(line: 1371, column: 7, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1371, column: 7)
!7817 = !DILocation(line: 1371, column: 10, scope: !7816)
!7818 = !DILocation(line: 1371, column: 24, scope: !7816)
!7819 = !DILocation(line: 1371, column: 27, scope: !7816)
!7820 = !DILocation(line: 1371, column: 30, scope: !7816)
!7821 = !DILocation(line: 1371, column: 7, scope: !7218)
!7822 = !DILocation(line: 1373, column: 21, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7824, file: !245, line: 1373, column: 11)
!7824 = distinct !DILexicalBlock(scope: !7816, file: !245, line: 1372, column: 5)
!7825 = !DILocation(line: 1373, column: 31, scope: !7823)
!7826 = !DILocation(line: 1373, column: 44, scope: !7823)
!7827 = !DILocation(line: 1373, column: 54, scope: !7823)
!7828 = !DILocation(line: 1373, column: 65, scope: !7823)
!7829 = !DILocation(line: 1373, column: 11, scope: !7823)
!7830 = !DILocation(line: 1373, column: 75, scope: !7823)
!7831 = !DILocation(line: 1374, column: 11, scope: !7823)
!7832 = !DILocation(line: 1374, column: 14, scope: !7823)
!7833 = !DILocation(line: 1374, column: 17, scope: !7823)
!7834 = !DILocation(line: 1373, column: 11, scope: !7824)
!7835 = !DILocation(line: 1375, column: 20, scope: !7823)
!7836 = !DILocation(line: 1375, column: 9, scope: !7823)
!7837 = !DILocation(line: 1376, column: 5, scope: !7824)
!7838 = !DILocation(line: 1377, column: 12, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7816, file: !245, line: 1377, column: 12)
!7840 = !DILocation(line: 1377, column: 15, scope: !7839)
!7841 = !DILocation(line: 1377, column: 12, scope: !7816)
!7842 = !DILocation(line: 1379, column: 20, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !245, line: 1379, column: 11)
!7844 = distinct !DILexicalBlock(scope: !7839, file: !245, line: 1378, column: 5)
!7845 = !DILocation(line: 1379, column: 30, scope: !7843)
!7846 = !DILocation(line: 1379, column: 41, scope: !7843)
!7847 = !DILocation(line: 1379, column: 44, scope: !7843)
!7848 = !DILocation(line: 1379, column: 11, scope: !7843)
!7849 = !DILocation(line: 1379, column: 50, scope: !7843)
!7850 = !DILocation(line: 1379, column: 11, scope: !7844)
!7851 = !DILocation(line: 1380, column: 20, scope: !7843)
!7852 = !DILocation(line: 1380, column: 9, scope: !7843)
!7853 = !DILocation(line: 1381, column: 5, scope: !7844)
!7854 = !DILocation(line: 1382, column: 12, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7839, file: !245, line: 1382, column: 12)
!7856 = !DILocation(line: 1382, column: 15, scope: !7855)
!7857 = !DILocation(line: 1382, column: 41, scope: !7855)
!7858 = !DILocation(line: 1382, column: 45, scope: !7855)
!7859 = !DILocation(line: 1382, column: 44, scope: !7855)
!7860 = !DILocation(line: 1382, column: 12, scope: !7839)
!7861 = !DILocation(line: 1384, column: 20, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7863, file: !245, line: 1384, column: 11)
!7863 = distinct !DILexicalBlock(scope: !7855, file: !245, line: 1383, column: 5)
!7864 = !DILocation(line: 1384, column: 30, scope: !7862)
!7865 = !DILocation(line: 1384, column: 56, scope: !7862)
!7866 = !DILocation(line: 1384, column: 55, scope: !7862)
!7867 = !DILocation(line: 1384, column: 53, scope: !7862)
!7868 = !DILocation(line: 1384, column: 11, scope: !7862)
!7869 = !DILocation(line: 1384, column: 73, scope: !7862)
!7870 = !DILocation(line: 1384, column: 11, scope: !7863)
!7871 = !DILocation(line: 1385, column: 20, scope: !7862)
!7872 = !DILocation(line: 1385, column: 9, scope: !7862)
!7873 = !DILocation(line: 1386, column: 5, scope: !7863)
!7874 = !DILocation(line: 1387, column: 12, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7855, file: !245, line: 1387, column: 12)
!7876 = !DILocation(line: 1387, column: 12, scope: !7855)
!7877 = !DILocation(line: 1389, column: 32, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7875, file: !245, line: 1388, column: 5)
!7879 = !DILocation(line: 1389, column: 30, scope: !7878)
!7880 = !DILocation(line: 1389, column: 27, scope: !7878)
!7881 = !DILocation(line: 1390, column: 11, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7878, file: !245, line: 1390, column: 11)
!7883 = !DILocation(line: 1391, column: 11, scope: !7882)
!7884 = !DILocation(line: 1391, column: 32, scope: !7882)
!7885 = !DILocation(line: 1391, column: 43, scope: !7882)
!7886 = !DILocation(line: 1391, column: 53, scope: !7882)
!7887 = !DILocation(line: 1391, column: 14, scope: !7882)
!7888 = !DILocation(line: 1391, column: 63, scope: !7882)
!7889 = !DILocation(line: 1390, column: 11, scope: !7878)
!7890 = !DILocation(line: 1393, column: 21, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7882, file: !245, line: 1392, column: 9)
!7892 = !DILocation(line: 1393, column: 28, scope: !7891)
!7893 = !DILocation(line: 1394, column: 18, scope: !7891)
!7894 = !DILocation(line: 1393, column: 11, scope: !7891)
!7895 = !DILocation(line: 1395, column: 15, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7891, file: !245, line: 1395, column: 15)
!7897 = !DILocation(line: 1395, column: 18, scope: !7896)
!7898 = !DILocation(line: 1395, column: 15, scope: !7891)
!7899 = !DILocation(line: 1396, column: 24, scope: !7896)
!7900 = !DILocation(line: 1396, column: 13, scope: !7896)
!7901 = !DILocation(line: 1397, column: 9, scope: !7891)
!7902 = !DILocation(line: 1398, column: 5, scope: !7878)
!7903 = !DILabel(scope: !7218, name: "close_src_and_dst_desc", file: !245, line: 1400)
!7904 = !DILocation(line: 1400, column: 1, scope: !7218)
!7905 = !DILocation(line: 1401, column: 14, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1401, column: 7)
!7907 = !DILocation(line: 1401, column: 7, scope: !7906)
!7908 = !DILocation(line: 1401, column: 25, scope: !7906)
!7909 = !DILocation(line: 1401, column: 7, scope: !7218)
!7910 = !DILocation(line: 1403, column: 17, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7906, file: !245, line: 1402, column: 5)
!7912 = !DILocation(line: 1403, column: 24, scope: !7911)
!7913 = !DILocation(line: 1403, column: 49, scope: !7911)
!7914 = !DILocation(line: 1403, column: 7, scope: !7911)
!7915 = !DILocation(line: 1404, column: 18, scope: !7911)
!7916 = !DILocation(line: 1405, column: 5, scope: !7911)
!7917 = !DILocation(line: 1401, column: 27, scope: !7906)
!7918 = !DILabel(scope: !7218, name: "close_src_desc", file: !245, line: 1406)
!7919 = !DILocation(line: 1406, column: 1, scope: !7218)
!7920 = !DILocation(line: 1407, column: 14, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7218, file: !245, line: 1407, column: 7)
!7922 = !DILocation(line: 1407, column: 7, scope: !7921)
!7923 = !DILocation(line: 1407, column: 27, scope: !7921)
!7924 = !DILocation(line: 1407, column: 7, scope: !7218)
!7925 = !DILocation(line: 1409, column: 17, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7921, file: !245, line: 1408, column: 5)
!7927 = !DILocation(line: 1409, column: 24, scope: !7926)
!7928 = !DILocation(line: 1409, column: 49, scope: !7926)
!7929 = !DILocation(line: 1409, column: 7, scope: !7926)
!7930 = !DILocation(line: 1410, column: 18, scope: !7926)
!7931 = !DILocation(line: 1411, column: 5, scope: !7926)
!7932 = !DILocation(line: 1413, column: 9, scope: !7218)
!7933 = !DILocation(line: 1413, column: 3, scope: !7218)
!7934 = !DILocation(line: 1414, column: 9, scope: !7218)
!7935 = !DILocation(line: 1414, column: 3, scope: !7218)
!7936 = !DILocation(line: 1415, column: 10, scope: !7218)
!7937 = !DILocation(line: 1415, column: 3, scope: !7218)
!7938 = !DILocation(line: 1416, column: 1, scope: !7218)
!7939 = distinct !DISubprogram(name: "restore_default_fscreatecon_or_die", scope: !245, file: !245, line: 1769, type: !134, scopeLine: 1770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7940 = !DILocation(line: 1771, column: 7, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7939, file: !245, line: 1771, column: 7)
!7942 = !DILocation(line: 1771, column: 29, scope: !7941)
!7943 = !DILocation(line: 1771, column: 7, scope: !7939)
!7944 = !DILocation(line: 1772, column: 5, scope: !7941)
!7945 = !DILocation(line: 1774, column: 1, scope: !7939)
!7946 = distinct !DISubprogram(name: "chown_failure_ok", scope: !245, file: !245, line: 3023, type: !303, scopeLine: 3024, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7947 = !DILocalVariable(name: "x", arg: 1, scope: !7946, file: !245, line: 3023, type: !252)
!7948 = !DILocation(line: 3023, column: 44, scope: !7946)
!7949 = !DILocation(line: 3029, column: 12, scope: !7946)
!7950 = !DILocation(line: 3029, column: 18, scope: !7946)
!7951 = !DILocation(line: 3029, column: 27, scope: !7946)
!7952 = !DILocation(line: 3029, column: 30, scope: !7946)
!7953 = !DILocation(line: 3029, column: 36, scope: !7946)
!7954 = !DILocation(line: 3029, column: 47, scope: !7946)
!7955 = !DILocation(line: 3029, column: 51, scope: !7946)
!7956 = !DILocation(line: 3029, column: 54, scope: !7946)
!7957 = !{!3153, !3107, i64 26}
!7958 = !DILocation(line: 3029, column: 50, scope: !7946)
!7959 = !DILocation(line: 0, scope: !7946)
!7960 = !DILocation(line: 3029, column: 3, scope: !7946)
!7961 = distinct !DISubprogram(name: "utimens_symlink", scope: !245, file: !245, line: 153, type: !469, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7962 = !DILocalVariable(name: "file", arg: 1, scope: !7961, file: !245, line: 153, type: !115)
!7963 = !DILocation(line: 153, column: 30, scope: !7961)
!7964 = !DILocalVariable(name: "timespec", arg: 2, scope: !7961, file: !245, line: 153, type: !471)
!7965 = !DILocation(line: 153, column: 59, scope: !7961)
!7966 = !DILocalVariable(name: "err", scope: !7961, file: !245, line: 155, type: !7)
!7967 = !DILocation(line: 155, column: 7, scope: !7961)
!7968 = !DILocation(line: 155, column: 23, scope: !7961)
!7969 = !DILocation(line: 155, column: 29, scope: !7961)
!7970 = !DILocation(line: 155, column: 13, scope: !7961)
!7971 = !DILocation(line: 159, column: 7, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7961, file: !245, line: 159, column: 7)
!7973 = !DILocation(line: 159, column: 11, scope: !7972)
!7974 = !DILocation(line: 159, column: 14, scope: !7972)
!7975 = !DILocation(line: 159, column: 20, scope: !7972)
!7976 = !DILocation(line: 159, column: 7, scope: !7961)
!7977 = !DILocation(line: 160, column: 9, scope: !7972)
!7978 = !DILocation(line: 160, column: 5, scope: !7972)
!7979 = !DILocation(line: 161, column: 10, scope: !7961)
!7980 = !DILocation(line: 161, column: 3, scope: !7961)
!7981 = distinct !DISubprogram(name: "set_owner", scope: !245, file: !245, line: 780, type: !473, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7982 = !DILocalVariable(name: "x", arg: 1, scope: !7981, file: !245, line: 780, type: !252)
!7983 = !DILocation(line: 780, column: 37, scope: !7981)
!7984 = !DILocalVariable(name: "dst_name", arg: 2, scope: !7981, file: !245, line: 780, type: !115)
!7985 = !DILocation(line: 780, column: 52, scope: !7981)
!7986 = !DILocalVariable(name: "dest_desc", arg: 3, scope: !7981, file: !245, line: 780, type: !7)
!7987 = !DILocation(line: 780, column: 66, scope: !7981)
!7988 = !DILocalVariable(name: "src_sb", arg: 4, scope: !7981, file: !245, line: 781, type: !315)
!7989 = !DILocation(line: 781, column: 31, scope: !7981)
!7990 = !DILocalVariable(name: "new_dst", arg: 5, scope: !7981, file: !245, line: 781, type: !120)
!7991 = !DILocation(line: 781, column: 44, scope: !7981)
!7992 = !DILocalVariable(name: "dst_sb", arg: 6, scope: !7981, file: !245, line: 782, type: !315)
!7993 = !DILocation(line: 782, column: 31, scope: !7981)
!7994 = !DILocalVariable(name: "uid", scope: !7981, file: !245, line: 784, type: !475)
!7995 = !DILocation(line: 784, column: 9, scope: !7981)
!7996 = !DILocation(line: 784, column: 15, scope: !7981)
!7997 = !DILocation(line: 784, column: 23, scope: !7981)
!7998 = !DILocalVariable(name: "gid", scope: !7981, file: !245, line: 785, type: !476)
!7999 = !DILocation(line: 785, column: 9, scope: !7981)
!8000 = !DILocation(line: 785, column: 15, scope: !7981)
!8001 = !DILocation(line: 785, column: 23, scope: !7981)
!8002 = !DILocation(line: 793, column: 8, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7981, file: !245, line: 793, column: 7)
!8004 = !DILocation(line: 793, column: 16, scope: !8003)
!8005 = !DILocation(line: 793, column: 20, scope: !8003)
!8006 = !DILocation(line: 793, column: 23, scope: !8003)
!8007 = !DILocation(line: 793, column: 37, scope: !8003)
!8008 = !DILocation(line: 793, column: 40, scope: !8003)
!8009 = !DILocation(line: 793, column: 43, scope: !8003)
!8010 = !DILocation(line: 793, column: 53, scope: !8003)
!8011 = !DILocation(line: 793, column: 56, scope: !8003)
!8012 = !DILocation(line: 793, column: 59, scope: !8003)
!8013 = !DILocation(line: 793, column: 7, scope: !7981)
!8014 = !DILocalVariable(name: "old_mode", scope: !8015, file: !245, line: 795, type: !160)
!8015 = distinct !DILexicalBlock(scope: !8003, file: !245, line: 794, column: 5)
!8016 = !DILocation(line: 795, column: 14, scope: !8015)
!8017 = !DILocation(line: 795, column: 25, scope: !8015)
!8018 = !DILocation(line: 795, column: 33, scope: !8015)
!8019 = !DILocalVariable(name: "new_mode", scope: !8015, file: !245, line: 796, type: !160)
!8020 = !DILocation(line: 796, column: 14, scope: !8015)
!8021 = !DILocation(line: 797, column: 10, scope: !8015)
!8022 = !DILocation(line: 797, column: 13, scope: !8015)
!8023 = !DILocation(line: 797, column: 27, scope: !8015)
!8024 = !DILocation(line: 797, column: 30, scope: !8015)
!8025 = !DILocation(line: 797, column: 33, scope: !8015)
!8026 = !DILocation(line: 797, column: 45, scope: !8015)
!8027 = !DILocation(line: 797, column: 53, scope: !8015)
!8028 = !DILocation(line: 797, column: 63, scope: !8015)
!8029 = !DILocation(line: 797, column: 66, scope: !8015)
!8030 = !DILocalVariable(name: "restrictive_temp_mode", scope: !8015, file: !245, line: 798, type: !160)
!8031 = !DILocation(line: 798, column: 14, scope: !8015)
!8032 = !DILocation(line: 798, column: 38, scope: !8015)
!8033 = !DILocation(line: 798, column: 49, scope: !8015)
!8034 = !DILocation(line: 798, column: 47, scope: !8015)
!8035 = !DILocation(line: 798, column: 58, scope: !8015)
!8036 = !DILocation(line: 803, column: 24, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8015, file: !245, line: 800, column: 11)
!8038 = !DILocation(line: 803, column: 34, scope: !8037)
!8039 = !DILocation(line: 803, column: 45, scope: !8037)
!8040 = !DILocation(line: 803, column: 14, scope: !8037)
!8041 = !DILocation(line: 803, column: 68, scope: !8037)
!8042 = !DILocation(line: 800, column: 11, scope: !8015)
!8043 = !DILocation(line: 805, column: 35, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8045, file: !245, line: 805, column: 15)
!8045 = distinct !DILexicalBlock(scope: !8037, file: !245, line: 804, column: 9)
!8046 = !DILocation(line: 805, column: 17, scope: !8044)
!8047 = !DILocation(line: 805, column: 15, scope: !8045)
!8048 = !DILocation(line: 806, column: 23, scope: !8044)
!8049 = !DILocation(line: 806, column: 30, scope: !8044)
!8050 = !DILocation(line: 807, column: 20, scope: !8044)
!8051 = !DILocation(line: 806, column: 13, scope: !8044)
!8052 = !DILocation(line: 808, column: 19, scope: !8045)
!8053 = !DILocation(line: 808, column: 22, scope: !8045)
!8054 = !DILocation(line: 808, column: 18, scope: !8045)
!8055 = !DILocation(line: 808, column: 11, scope: !8045)
!8056 = !DILocation(line: 810, column: 5, scope: !8015)
!8057 = !DILocation(line: 812, column: 22, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !7981, file: !245, line: 812, column: 7)
!8059 = !DILocation(line: 812, column: 32, scope: !8058)
!8060 = !DILocation(line: 812, column: 7, scope: !7981)
!8061 = !DILocation(line: 814, column: 19, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8063, file: !245, line: 814, column: 11)
!8063 = distinct !DILexicalBlock(scope: !8058, file: !245, line: 813, column: 5)
!8064 = !DILocation(line: 814, column: 30, scope: !8062)
!8065 = !DILocation(line: 814, column: 35, scope: !8062)
!8066 = !DILocation(line: 814, column: 11, scope: !8062)
!8067 = !DILocation(line: 814, column: 40, scope: !8062)
!8068 = !DILocation(line: 814, column: 11, scope: !8063)
!8069 = !DILocation(line: 815, column: 9, scope: !8062)
!8070 = !DILocation(line: 816, column: 11, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8063, file: !245, line: 816, column: 11)
!8072 = !DILocation(line: 816, column: 17, scope: !8071)
!8073 = !DILocation(line: 816, column: 26, scope: !8071)
!8074 = !DILocation(line: 816, column: 29, scope: !8071)
!8075 = !DILocation(line: 816, column: 35, scope: !8071)
!8076 = !DILocation(line: 816, column: 11, scope: !8063)
!8077 = !DILocalVariable(name: "saved_errno", scope: !8078, file: !245, line: 820, type: !7)
!8078 = distinct !DILexicalBlock(scope: !8071, file: !245, line: 817, column: 9)
!8079 = !DILocation(line: 820, column: 15, scope: !8078)
!8080 = !DILocation(line: 820, column: 29, scope: !8078)
!8081 = !DILocalVariable(name: "__x", scope: !8082, file: !245, line: 821, type: !7)
!8082 = distinct !DILexicalBlock(scope: !8078, file: !245, line: 821, column: 11)
!8083 = !DILocation(line: 821, column: 11, scope: !8082)
!8084 = !DILocation(line: 822, column: 19, scope: !8078)
!8085 = !DILocation(line: 822, column: 11, scope: !8078)
!8086 = !DILocation(line: 822, column: 17, scope: !8078)
!8087 = !DILocation(line: 823, column: 9, scope: !8078)
!8088 = !DILocation(line: 824, column: 5, scope: !8063)
!8089 = !DILocation(line: 827, column: 19, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8091, file: !245, line: 827, column: 11)
!8091 = distinct !DILexicalBlock(scope: !8058, file: !245, line: 826, column: 5)
!8092 = !DILocation(line: 827, column: 29, scope: !8090)
!8093 = !DILocation(line: 827, column: 34, scope: !8090)
!8094 = !DILocation(line: 827, column: 11, scope: !8090)
!8095 = !DILocation(line: 827, column: 39, scope: !8090)
!8096 = !DILocation(line: 827, column: 11, scope: !8091)
!8097 = !DILocation(line: 828, column: 9, scope: !8090)
!8098 = !DILocation(line: 829, column: 11, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8091, file: !245, line: 829, column: 11)
!8100 = !DILocation(line: 829, column: 17, scope: !8099)
!8101 = !DILocation(line: 829, column: 26, scope: !8099)
!8102 = !DILocation(line: 829, column: 29, scope: !8099)
!8103 = !DILocation(line: 829, column: 35, scope: !8099)
!8104 = !DILocation(line: 829, column: 11, scope: !8091)
!8105 = !DILocalVariable(name: "saved_errno", scope: !8106, file: !245, line: 833, type: !7)
!8106 = distinct !DILexicalBlock(scope: !8099, file: !245, line: 830, column: 9)
!8107 = !DILocation(line: 833, column: 15, scope: !8106)
!8108 = !DILocation(line: 833, column: 29, scope: !8106)
!8109 = !DILocalVariable(name: "__x", scope: !8110, file: !245, line: 834, type: !7)
!8110 = distinct !DILexicalBlock(scope: !8106, file: !245, line: 834, column: 11)
!8111 = !DILocation(line: 834, column: 11, scope: !8110)
!8112 = !DILocation(line: 835, column: 19, scope: !8106)
!8113 = !DILocation(line: 835, column: 11, scope: !8106)
!8114 = !DILocation(line: 835, column: 17, scope: !8106)
!8115 = !DILocation(line: 836, column: 9, scope: !8106)
!8116 = !DILocation(line: 839, column: 27, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !7981, file: !245, line: 839, column: 7)
!8118 = !DILocation(line: 839, column: 9, scope: !8117)
!8119 = !DILocation(line: 839, column: 7, scope: !7981)
!8120 = !DILocation(line: 841, column: 17, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8117, file: !245, line: 840, column: 5)
!8122 = !DILocation(line: 841, column: 24, scope: !8121)
!8123 = !DILocation(line: 842, column: 14, scope: !8121)
!8124 = !DILocation(line: 841, column: 7, scope: !8121)
!8125 = !DILocation(line: 843, column: 11, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8121, file: !245, line: 843, column: 11)
!8127 = !DILocation(line: 843, column: 14, scope: !8126)
!8128 = !DILocation(line: 843, column: 11, scope: !8121)
!8129 = !DILocation(line: 844, column: 9, scope: !8126)
!8130 = !DILocation(line: 845, column: 5, scope: !8121)
!8131 = !DILocation(line: 847, column: 3, scope: !7981)
!8132 = !DILocation(line: 848, column: 1, scope: !7981)
!8133 = distinct !DISubprogram(name: "copy_attr", scope: !245, file: !245, line: 659, type: !477, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8134 = !DILocalVariable(name: "src_path", arg: 1, scope: !8133, file: !245, line: 659, type: !115)
!8135 = !DILocation(line: 659, column: 24, scope: !8133)
!8136 = !DILocalVariable(name: "src_fd", arg: 2, scope: !8133, file: !245, line: 659, type: !7)
!8137 = !DILocation(line: 659, column: 38, scope: !8133)
!8138 = !DILocalVariable(name: "dst_path", arg: 3, scope: !8133, file: !245, line: 660, type: !115)
!8139 = !DILocation(line: 660, column: 24, scope: !8133)
!8140 = !DILocalVariable(name: "dst_fd", arg: 4, scope: !8133, file: !245, line: 660, type: !7)
!8141 = !DILocation(line: 660, column: 38, scope: !8133)
!8142 = !DILocalVariable(name: "x", arg: 5, scope: !8133, file: !245, line: 660, type: !252)
!8143 = !DILocation(line: 660, column: 71, scope: !8133)
!8144 = !DILocalVariable(name: "ret", scope: !8133, file: !245, line: 662, type: !7)
!8145 = !DILocation(line: 662, column: 7, scope: !8133)
!8146 = !DILocalVariable(name: "all_errors", scope: !8133, file: !245, line: 663, type: !120)
!8147 = !DILocation(line: 663, column: 8, scope: !8133)
!8148 = !DILocation(line: 663, column: 23, scope: !8133)
!8149 = !DILocation(line: 663, column: 26, scope: !8133)
!8150 = !DILocation(line: 663, column: 45, scope: !8133)
!8151 = !DILocation(line: 663, column: 48, scope: !8133)
!8152 = !DILocation(line: 663, column: 51, scope: !8133)
!8153 = !DILocalVariable(name: "some_errors", scope: !8133, file: !245, line: 664, type: !120)
!8154 = !DILocation(line: 664, column: 8, scope: !8133)
!8155 = !DILocation(line: 664, column: 24, scope: !8133)
!8156 = !DILocation(line: 664, column: 35, scope: !8133)
!8157 = !DILocation(line: 664, column: 39, scope: !8133)
!8158 = !DILocation(line: 664, column: 42, scope: !8133)
!8159 = !DILocation(line: 664, column: 38, scope: !8133)
!8160 = !DILocation(line: 0, scope: !8133)
!8161 = !DILocalVariable(name: "selinux_done", scope: !8133, file: !245, line: 665, type: !120)
!8162 = !DILocation(line: 665, column: 8, scope: !8133)
!8163 = !DILocation(line: 665, column: 24, scope: !8133)
!8164 = !DILocation(line: 665, column: 27, scope: !8133)
!8165 = !DILocation(line: 665, column: 53, scope: !8133)
!8166 = !DILocation(line: 665, column: 56, scope: !8133)
!8167 = !DILocation(line: 665, column: 59, scope: !8133)
!8168 = !DILocalVariable(name: "ctx", scope: !8133, file: !245, line: 666, type: !482)
!8169 = !DILocation(line: 666, column: 24, scope: !8133)
!8170 = !DILocation(line: 667, column: 3, scope: !8133)
!8171 = !DILocation(line: 668, column: 14, scope: !8133)
!8172 = !{!8173, !2996, i64 0}
!8173 = !{!"error_context", !2996, i64 0, !2996, i64 8, !2996, i64 16}
!8174 = !{!8173, !2996, i64 8}
!8175 = !{!8173, !2996, i64 16}
!8176 = !DILocation(line: 672, column: 12, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8133, file: !245, line: 672, column: 7)
!8178 = !DILocation(line: 672, column: 9, scope: !8177)
!8179 = !DILocation(line: 672, column: 19, scope: !8177)
!8180 = !DILocation(line: 672, column: 27, scope: !8177)
!8181 = !DILocation(line: 672, column: 24, scope: !8177)
!8182 = !DILocation(line: 672, column: 7, scope: !8133)
!8183 = !DILocation(line: 673, column: 25, scope: !8177)
!8184 = !DILocation(line: 673, column: 35, scope: !8177)
!8185 = !DILocation(line: 673, column: 43, scope: !8177)
!8186 = !DILocation(line: 673, column: 53, scope: !8177)
!8187 = !DILocation(line: 674, column: 25, scope: !8177)
!8188 = !DILocation(line: 675, column: 26, scope: !8177)
!8189 = !DILocation(line: 675, column: 37, scope: !8177)
!8190 = !DILocation(line: 675, column: 40, scope: !8177)
!8191 = !DILocation(line: 673, column: 11, scope: !8177)
!8192 = !DILocation(line: 673, column: 9, scope: !8177)
!8193 = !DILocation(line: 673, column: 5, scope: !8177)
!8194 = !DILocation(line: 677, column: 27, scope: !8177)
!8195 = !DILocation(line: 677, column: 37, scope: !8177)
!8196 = !DILocation(line: 678, column: 27, scope: !8177)
!8197 = !DILocation(line: 679, column: 28, scope: !8177)
!8198 = !DILocation(line: 679, column: 39, scope: !8177)
!8199 = !DILocation(line: 679, column: 42, scope: !8177)
!8200 = !DILocation(line: 677, column: 11, scope: !8177)
!8201 = !DILocation(line: 677, column: 9, scope: !8177)
!8202 = !DILocation(line: 681, column: 10, scope: !8133)
!8203 = !DILocation(line: 681, column: 14, scope: !8133)
!8204 = !DILocation(line: 681, column: 3, scope: !8133)
!8205 = distinct !DISubprogram(name: "set_author", scope: !245, file: !245, line: 856, type: !508, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8206 = !DILocalVariable(name: "dst_name", arg: 1, scope: !8205, file: !245, line: 856, type: !115)
!8207 = !DILocation(line: 856, column: 25, scope: !8205)
!8208 = !DILocalVariable(name: "dest_desc", arg: 2, scope: !8205, file: !245, line: 856, type: !7)
!8209 = !DILocation(line: 856, column: 39, scope: !8205)
!8210 = !DILocalVariable(name: "src_sb", arg: 3, scope: !8205, file: !245, line: 856, type: !315)
!8211 = !DILocation(line: 856, column: 69, scope: !8205)
!8212 = !DILocation(line: 877, column: 10, scope: !8205)
!8213 = !DILocation(line: 878, column: 10, scope: !8205)
!8214 = !DILocation(line: 879, column: 10, scope: !8205)
!8215 = !DILocation(line: 881, column: 1, scope: !8205)
!8216 = !DILocation(line: 3052, column: 7, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !513, file: !245, line: 3052, column: 7)
!8218 = !DILocation(line: 3052, column: 12, scope: !8217)
!8219 = !DILocation(line: 3052, column: 7, scope: !513)
!8220 = !DILocation(line: 3054, column: 14, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8217, file: !245, line: 3053, column: 5)
!8222 = !DILocation(line: 3054, column: 12, scope: !8221)
!8223 = !DILocation(line: 3055, column: 14, scope: !8221)
!8224 = !DILocation(line: 3055, column: 7, scope: !8221)
!8225 = !DILocation(line: 3056, column: 5, scope: !8221)
!8226 = !DILocation(line: 3057, column: 10, scope: !513)
!8227 = !DILocation(line: 3057, column: 3, scope: !513)
!8228 = distinct !DISubprogram(name: "copy_attr_allerror", scope: !245, file: !245, line: 619, type: !487, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8229 = !DILocalVariable(name: "ctx", arg: 1, scope: !8228, file: !245, line: 619, type: !481)
!8230 = !DILocation(line: 619, column: 43, scope: !8228)
!8231 = !DILocalVariable(name: "fmt", arg: 2, scope: !8228, file: !245, line: 620, type: !115)
!8232 = !DILocation(line: 620, column: 30, scope: !8228)
!8233 = !DILocalVariable(name: "err", scope: !8228, file: !245, line: 622, type: !7)
!8234 = !DILocation(line: 622, column: 7, scope: !8228)
!8235 = !DILocation(line: 622, column: 13, scope: !8228)
!8236 = !DILocalVariable(name: "ap", scope: !8228, file: !245, line: 623, type: !495)
!8237 = !DILocation(line: 623, column: 11, scope: !8228)
!8238 = !DILocation(line: 626, column: 3, scope: !8228)
!8239 = !DILocation(line: 627, column: 14, scope: !8228)
!8240 = !DILocation(line: 627, column: 19, scope: !8228)
!8241 = !DILocation(line: 627, column: 24, scope: !8228)
!8242 = !DILocation(line: 627, column: 3, scope: !8228)
!8243 = !DILocation(line: 628, column: 3, scope: !8228)
!8244 = !DILocation(line: 629, column: 1, scope: !8228)
!8245 = distinct !DISubprogram(name: "copy_attr_error", scope: !245, file: !245, line: 603, type: !487, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8246 = !DILocalVariable(name: "ctx", arg: 1, scope: !8245, file: !245, line: 603, type: !481)
!8247 = !DILocation(line: 603, column: 40, scope: !8245)
!8248 = !DILocalVariable(name: "fmt", arg: 2, scope: !8245, file: !245, line: 604, type: !115)
!8249 = !DILocation(line: 604, column: 30, scope: !8245)
!8250 = !DILocation(line: 606, column: 27, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8245, file: !245, line: 606, column: 7)
!8252 = !DILocation(line: 606, column: 8, scope: !8251)
!8253 = !DILocation(line: 606, column: 7, scope: !8245)
!8254 = !DILocalVariable(name: "err", scope: !8255, file: !245, line: 608, type: !7)
!8255 = distinct !DILexicalBlock(scope: !8251, file: !245, line: 607, column: 5)
!8256 = !DILocation(line: 608, column: 11, scope: !8255)
!8257 = !DILocation(line: 608, column: 17, scope: !8255)
!8258 = !DILocalVariable(name: "ap", scope: !8255, file: !245, line: 609, type: !495)
!8259 = !DILocation(line: 609, column: 15, scope: !8255)
!8260 = !DILocation(line: 612, column: 7, scope: !8255)
!8261 = !DILocation(line: 613, column: 18, scope: !8255)
!8262 = !DILocation(line: 613, column: 23, scope: !8255)
!8263 = !DILocation(line: 613, column: 28, scope: !8255)
!8264 = !DILocation(line: 613, column: 7, scope: !8255)
!8265 = !DILocation(line: 614, column: 7, scope: !8255)
!8266 = !DILocation(line: 615, column: 5, scope: !8255)
!8267 = !DILocation(line: 616, column: 1, scope: !8245)
!8268 = distinct !DISubprogram(name: "copy_attr_quote", scope: !245, file: !245, line: 632, type: !491, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8269 = !DILocalVariable(name: "ctx", arg: 1, scope: !8268, file: !245, line: 632, type: !481)
!8270 = !DILocation(line: 632, column: 40, scope: !8268)
!8271 = !DILocalVariable(name: "str", arg: 2, scope: !8268, file: !245, line: 632, type: !115)
!8272 = !DILocation(line: 632, column: 68, scope: !8268)
!8273 = !DILocation(line: 634, column: 10, scope: !8268)
!8274 = !DILocation(line: 634, column: 3, scope: !8268)
!8275 = distinct !DISubprogram(name: "copy_attr_free", scope: !245, file: !245, line: 638, type: !479, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8276 = !DILocalVariable(name: "ctx", arg: 1, scope: !8275, file: !245, line: 638, type: !481)
!8277 = !DILocation(line: 638, column: 39, scope: !8275)
!8278 = !DILocalVariable(name: "str", arg: 2, scope: !8275, file: !245, line: 639, type: !115)
!8279 = !DILocation(line: 639, column: 29, scope: !8275)
!8280 = !DILocation(line: 641, column: 1, scope: !8275)
!8281 = distinct !DISubprogram(name: "check_selinux_attr", scope: !245, file: !245, line: 649, type: !506, scopeLine: 650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8282 = !DILocalVariable(name: "name", arg: 1, scope: !8281, file: !245, line: 649, type: !115)
!8283 = !DILocation(line: 649, column: 33, scope: !8281)
!8284 = !DILocalVariable(name: "ctx", arg: 2, scope: !8281, file: !245, line: 649, type: !481)
!8285 = !DILocation(line: 649, column: 61, scope: !8281)
!8286 = !DILocation(line: 651, column: 10, scope: !8281)
!8287 = !DILocation(line: 652, column: 10, scope: !8281)
!8288 = !DILocation(line: 652, column: 42, scope: !8281)
!8289 = !DILocation(line: 652, column: 48, scope: !8281)
!8290 = !DILocation(line: 652, column: 13, scope: !8281)
!8291 = !DILocation(line: 0, scope: !8281)
!8292 = !DILocation(line: 651, column: 3, scope: !8281)
!8293 = distinct !DISubprogram(name: "owner_failure_ok", scope: !245, file: !245, line: 3037, type: !303, scopeLine: 3038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8294 = !DILocalVariable(name: "x", arg: 1, scope: !8293, file: !245, line: 3037, type: !252)
!8295 = !DILocation(line: 3037, column: 44, scope: !8293)
!8296 = !DILocation(line: 3039, column: 12, scope: !8293)
!8297 = !DILocation(line: 3039, column: 18, scope: !8293)
!8298 = !DILocation(line: 3039, column: 27, scope: !8293)
!8299 = !DILocation(line: 3039, column: 30, scope: !8293)
!8300 = !DILocation(line: 3039, column: 36, scope: !8293)
!8301 = !DILocation(line: 3039, column: 47, scope: !8293)
!8302 = !DILocation(line: 3039, column: 51, scope: !8293)
!8303 = !DILocation(line: 3039, column: 54, scope: !8293)
!8304 = !{!3153, !3107, i64 27}
!8305 = !DILocation(line: 3039, column: 50, scope: !8293)
!8306 = !DILocation(line: 0, scope: !8293)
!8307 = !DILocation(line: 3039, column: 3, scope: !8293)
!8308 = distinct !DISubprogram(name: "clone_file", scope: !245, file: !245, line: 334, type: !417, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8309 = !DILocalVariable(name: "dest_fd", arg: 1, scope: !8308, file: !245, line: 334, type: !7)
!8310 = !DILocation(line: 334, column: 17, scope: !8308)
!8311 = !DILocalVariable(name: "src_fd", arg: 2, scope: !8308, file: !245, line: 334, type: !7)
!8312 = !DILocation(line: 334, column: 30, scope: !8308)
!8313 = !DILocation(line: 337, column: 17, scope: !8308)
!8314 = !DILocation(line: 337, column: 35, scope: !8308)
!8315 = !DILocation(line: 337, column: 10, scope: !8308)
!8316 = !DILocation(line: 337, column: 3, scope: !8308)
!8317 = distinct !DISubprogram(name: "io_blksize", scope: !8318, file: !8318, line: 75, type: !419, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8318 = !DIFile(filename: "src/ioblksize.h", directory: "/home/mbarbar/software/coreutils-8.31")
!8319 = !DILocalVariable(name: "sb", arg: 1, scope: !8317, file: !8318, line: 75, type: !317)
!8320 = !DILocation(line: 75, column: 25, scope: !8317)
!8321 = !DILocation(line: 77, column: 10, scope: !8317)
!8322 = !DILocation(line: 77, column: 3, scope: !8317)
!8323 = distinct !DISubprogram(name: "is_probably_sparse", scope: !245, file: !245, line: 995, type: !421, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8324 = !DILocalVariable(name: "sb", arg: 1, scope: !8323, file: !245, line: 995, type: !315)
!8325 = !DILocation(line: 995, column: 40, scope: !8323)
!8326 = !DILocation(line: 998, column: 14, scope: !8323)
!8327 = !DILocation(line: 999, column: 11, scope: !8323)
!8328 = !DILocation(line: 999, column: 14, scope: !8323)
!8329 = !{!3179, !3180, i64 64}
!8330 = !DILocation(line: 999, column: 33, scope: !8323)
!8331 = !DILocation(line: 999, column: 37, scope: !8323)
!8332 = !DILocation(line: 999, column: 45, scope: !8323)
!8333 = !DILocation(line: 999, column: 31, scope: !8323)
!8334 = !DILocation(line: 0, scope: !8323)
!8335 = !DILocation(line: 997, column: 3, scope: !8323)
!8336 = distinct !DISubprogram(name: "ptr_align", scope: !141, file: !141, line: 498, type: !423, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8337 = !DILocalVariable(name: "ptr", arg: 1, scope: !8336, file: !141, line: 498, type: !425)
!8338 = !DILocation(line: 498, column: 24, scope: !8336)
!8339 = !DILocalVariable(name: "alignment", arg: 2, scope: !8336, file: !141, line: 498, type: !55)
!8340 = !DILocation(line: 498, column: 36, scope: !8336)
!8341 = !DILocalVariable(name: "p0", scope: !8336, file: !141, line: 500, type: !115)
!8342 = !DILocation(line: 500, column: 15, scope: !8336)
!8343 = !DILocation(line: 500, column: 20, scope: !8336)
!8344 = !DILocalVariable(name: "p1", scope: !8336, file: !141, line: 501, type: !115)
!8345 = !DILocation(line: 501, column: 15, scope: !8336)
!8346 = !DILocation(line: 501, column: 20, scope: !8336)
!8347 = !DILocation(line: 501, column: 25, scope: !8336)
!8348 = !DILocation(line: 501, column: 23, scope: !8336)
!8349 = !DILocation(line: 501, column: 35, scope: !8336)
!8350 = !DILocation(line: 502, column: 20, scope: !8336)
!8351 = !DILocation(line: 502, column: 34, scope: !8336)
!8352 = !DILocation(line: 502, column: 25, scope: !8336)
!8353 = !DILocation(line: 502, column: 39, scope: !8336)
!8354 = !DILocation(line: 502, column: 37, scope: !8336)
!8355 = !DILocation(line: 502, column: 23, scope: !8336)
!8356 = !DILocation(line: 502, column: 3, scope: !8336)
!8357 = distinct !DISubprogram(name: "extent_copy", scope: !245, file: !245, line: 387, type: !427, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8358 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8357, file: !245, line: 387, type: !7)
!8359 = !DILocation(line: 387, column: 18, scope: !8357)
!8360 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !8357, file: !245, line: 387, type: !7)
!8361 = !DILocation(line: 387, column: 30, scope: !8357)
!8362 = !DILocalVariable(name: "buf", arg: 3, scope: !8357, file: !245, line: 387, type: !9)
!8363 = !DILocation(line: 387, column: 45, scope: !8357)
!8364 = !DILocalVariable(name: "buf_size", arg: 4, scope: !8357, file: !245, line: 387, type: !55)
!8365 = !DILocation(line: 387, column: 57, scope: !8357)
!8366 = !DILocalVariable(name: "hole_size", arg: 5, scope: !8357, file: !245, line: 388, type: !55)
!8367 = !DILocation(line: 388, column: 21, scope: !8357)
!8368 = !DILocalVariable(name: "src_total_size", arg: 6, scope: !8357, file: !245, line: 388, type: !248)
!8369 = !DILocation(line: 388, column: 38, scope: !8357)
!8370 = !DILocalVariable(name: "sparse_mode", arg: 7, scope: !8357, file: !245, line: 389, type: !89)
!8371 = !DILocation(line: 389, column: 31, scope: !8357)
!8372 = !DILocalVariable(name: "src_name", arg: 8, scope: !8357, file: !245, line: 390, type: !115)
!8373 = !DILocation(line: 390, column: 26, scope: !8357)
!8374 = !DILocalVariable(name: "dst_name", arg: 9, scope: !8357, file: !245, line: 390, type: !115)
!8375 = !DILocation(line: 390, column: 48, scope: !8357)
!8376 = !DILocalVariable(name: "require_normal_copy", arg: 10, scope: !8357, file: !245, line: 391, type: !302)
!8377 = !DILocation(line: 391, column: 20, scope: !8357)
!8378 = !DILocalVariable(name: "scan", scope: !8357, file: !245, line: 393, type: !439)
!8379 = !DILocation(line: 393, column: 22, scope: !8357)
!8380 = !DILocalVariable(name: "last_ext_start", scope: !8357, file: !245, line: 394, type: !248)
!8381 = !DILocation(line: 394, column: 9, scope: !8357)
!8382 = !DILocalVariable(name: "last_ext_len", scope: !8357, file: !245, line: 395, type: !248)
!8383 = !DILocation(line: 395, column: 9, scope: !8357)
!8384 = !DILocalVariable(name: "dest_pos", scope: !8357, file: !245, line: 399, type: !248)
!8385 = !DILocation(line: 399, column: 9, scope: !8357)
!8386 = !DILocation(line: 401, column: 21, scope: !8357)
!8387 = !DILocation(line: 401, column: 3, scope: !8357)
!8388 = !DILocation(line: 403, column: 4, scope: !8357)
!8389 = !DILocation(line: 403, column: 24, scope: !8357)
!8390 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !8357, file: !245, line: 404, type: !120)
!8391 = !DILocation(line: 404, column: 8, scope: !8357)
!8392 = !DILocation(line: 405, column: 3, scope: !8357)
!8393 = !DILocalVariable(name: "ok", scope: !8394, file: !245, line: 407, type: !120)
!8394 = distinct !DILexicalBlock(scope: !8357, file: !245, line: 406, column: 5)
!8395 = !DILocation(line: 407, column: 12, scope: !8394)
!8396 = !DILocation(line: 407, column: 17, scope: !8394)
!8397 = !DILocation(line: 408, column: 13, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8394, file: !245, line: 408, column: 11)
!8399 = !DILocation(line: 408, column: 11, scope: !8394)
!8400 = !DILocation(line: 410, column: 20, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !245, line: 410, column: 15)
!8402 = distinct !DILexicalBlock(scope: !8398, file: !245, line: 409, column: 9)
!8403 = !{!8404, !3107, i64 33}
!8404 = !{!"extent_scan", !2983, i64 0, !3180, i64 8, !2983, i64 16, !3180, i64 24, !3107, i64 32, !3107, i64 33, !2996, i64 40}
!8405 = !DILocation(line: 410, column: 15, scope: !8402)
!8406 = !DILocation(line: 411, column: 13, scope: !8401)
!8407 = !DILocation(line: 413, column: 20, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8402, file: !245, line: 413, column: 15)
!8409 = !{!8404, !3107, i64 32}
!8410 = !DILocation(line: 413, column: 15, scope: !8402)
!8411 = !DILocation(line: 415, column: 16, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8408, file: !245, line: 414, column: 13)
!8413 = !DILocation(line: 415, column: 36, scope: !8412)
!8414 = !DILocation(line: 416, column: 15, scope: !8412)
!8415 = !DILocation(line: 419, column: 21, scope: !8402)
!8416 = !DILocation(line: 419, column: 28, scope: !8402)
!8417 = !DILocation(line: 420, column: 18, scope: !8402)
!8418 = !DILocation(line: 419, column: 11, scope: !8402)
!8419 = !DILocation(line: 421, column: 11, scope: !8402)
!8420 = !DILocalVariable(name: "empty_extent", scope: !8394, file: !245, line: 424, type: !120)
!8421 = !DILocation(line: 424, column: 12, scope: !8394)
!8422 = !DILocalVariable(name: "i", scope: !8423, file: !245, line: 425, type: !70)
!8423 = distinct !DILexicalBlock(scope: !8394, file: !245, line: 425, column: 7)
!8424 = !DILocation(line: 425, column: 25, scope: !8423)
!8425 = !DILocation(line: 425, column: 12, scope: !8423)
!8426 = !DILocation(line: 425, column: 32, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8423, file: !245, line: 425, column: 7)
!8428 = !DILocation(line: 425, column: 41, scope: !8427)
!8429 = !{!8404, !3180, i64 24}
!8430 = !DILocation(line: 425, column: 34, scope: !8427)
!8431 = !DILocation(line: 425, column: 50, scope: !8427)
!8432 = !DILocation(line: 425, column: 53, scope: !8427)
!8433 = !DILocation(line: 425, column: 7, scope: !8423)
!8434 = !DILocalVariable(name: "ext_start", scope: !8435, file: !245, line: 427, type: !248)
!8435 = distinct !DILexicalBlock(scope: !8427, file: !245, line: 426, column: 9)
!8436 = !DILocation(line: 427, column: 17, scope: !8435)
!8437 = !DILocalVariable(name: "ext_len", scope: !8435, file: !245, line: 428, type: !248)
!8438 = !DILocation(line: 428, column: 17, scope: !8435)
!8439 = !DILocalVariable(name: "ext_hole_size", scope: !8435, file: !245, line: 429, type: !248)
!8440 = !DILocation(line: 429, column: 17, scope: !8435)
!8441 = !DILocation(line: 431, column: 15, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8435, file: !245, line: 431, column: 15)
!8443 = !DILocation(line: 431, column: 24, scope: !8442)
!8444 = !DILocation(line: 431, column: 17, scope: !8442)
!8445 = !DILocation(line: 431, column: 15, scope: !8435)
!8446 = !DILocation(line: 433, column: 32, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8442, file: !245, line: 432, column: 13)
!8448 = !{!8404, !2996, i64 40}
!8449 = !DILocation(line: 433, column: 41, scope: !8447)
!8450 = !DILocation(line: 433, column: 27, scope: !8447)
!8451 = !DILocation(line: 433, column: 44, scope: !8447)
!8452 = !{!8453, !3180, i64 0}
!8453 = !{!"extent_info", !3180, i64 0, !3180, i64 8, !2983, i64 16}
!8454 = !DILocation(line: 433, column: 25, scope: !8447)
!8455 = !DILocation(line: 434, column: 30, scope: !8447)
!8456 = !DILocation(line: 434, column: 39, scope: !8447)
!8457 = !DILocation(line: 434, column: 25, scope: !8447)
!8458 = !DILocation(line: 434, column: 42, scope: !8447)
!8459 = !{!8453, !3180, i64 8}
!8460 = !DILocation(line: 434, column: 23, scope: !8447)
!8461 = !DILocation(line: 435, column: 13, scope: !8447)
!8462 = !DILocation(line: 438, column: 16, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8442, file: !245, line: 437, column: 13)
!8464 = !DILocation(line: 439, column: 27, scope: !8463)
!8465 = !DILocation(line: 439, column: 49, scope: !8463)
!8466 = !DILocation(line: 439, column: 58, scope: !8463)
!8467 = !DILocation(line: 439, column: 44, scope: !8463)
!8468 = !DILocation(line: 439, column: 61, scope: !8463)
!8469 = !DILocation(line: 439, column: 42, scope: !8463)
!8470 = !DILocation(line: 439, column: 25, scope: !8463)
!8471 = !DILocation(line: 440, column: 23, scope: !8463)
!8472 = !DILocation(line: 450, column: 15, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8435, file: !245, line: 450, column: 15)
!8474 = !DILocation(line: 450, column: 32, scope: !8473)
!8475 = !DILocation(line: 450, column: 44, scope: !8473)
!8476 = !DILocation(line: 450, column: 42, scope: !8473)
!8477 = !DILocation(line: 450, column: 30, scope: !8473)
!8478 = !DILocation(line: 450, column: 15, scope: !8435)
!8479 = !DILocation(line: 452, column: 19, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8481, file: !245, line: 452, column: 19)
!8481 = distinct !DILexicalBlock(scope: !8473, file: !245, line: 451, column: 13)
!8482 = !DILocation(line: 452, column: 36, scope: !8480)
!8483 = !DILocation(line: 452, column: 34, scope: !8480)
!8484 = !DILocation(line: 452, column: 19, scope: !8481)
!8485 = !DILocation(line: 453, column: 29, scope: !8480)
!8486 = !DILocation(line: 453, column: 27, scope: !8480)
!8487 = !DILocation(line: 453, column: 17, scope: !8480)
!8488 = !DILocation(line: 454, column: 25, scope: !8481)
!8489 = !DILocation(line: 454, column: 42, scope: !8481)
!8490 = !DILocation(line: 454, column: 40, scope: !8481)
!8491 = !DILocation(line: 454, column: 23, scope: !8481)
!8492 = !DILocation(line: 455, column: 13, scope: !8481)
!8493 = !DILocation(line: 457, column: 27, scope: !8435)
!8494 = !DILocation(line: 457, column: 39, scope: !8435)
!8495 = !DILocation(line: 457, column: 37, scope: !8435)
!8496 = !DILocation(line: 457, column: 56, scope: !8435)
!8497 = !DILocation(line: 457, column: 54, scope: !8435)
!8498 = !DILocation(line: 457, column: 25, scope: !8435)
!8499 = !DILocation(line: 459, column: 29, scope: !8435)
!8500 = !DILocation(line: 461, column: 15, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8435, file: !245, line: 461, column: 15)
!8502 = !DILocation(line: 461, column: 15, scope: !8435)
!8503 = !DILocation(line: 463, column: 26, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8505, file: !245, line: 463, column: 19)
!8505 = distinct !DILexicalBlock(scope: !8501, file: !245, line: 462, column: 13)
!8506 = !DILocation(line: 463, column: 34, scope: !8504)
!8507 = !DILocation(line: 463, column: 19, scope: !8504)
!8508 = !DILocation(line: 463, column: 55, scope: !8504)
!8509 = !DILocation(line: 463, column: 19, scope: !8505)
!8510 = !DILocation(line: 465, column: 29, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8504, file: !245, line: 464, column: 17)
!8512 = !DILocation(line: 465, column: 36, scope: !8511)
!8513 = !DILocation(line: 465, column: 58, scope: !8511)
!8514 = !DILocation(line: 465, column: 19, scope: !8511)
!8515 = !DILabel(scope: !8511, name: "fail", file: !245, line: 466)
!8516 = !DILocation(line: 466, column: 17, scope: !8511)
!8517 = !DILocation(line: 467, column: 19, scope: !8511)
!8518 = !DILocation(line: 468, column: 19, scope: !8511)
!8519 = !DILocation(line: 471, column: 20, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8505, file: !245, line: 471, column: 19)
!8521 = !DILocation(line: 471, column: 33, scope: !8520)
!8522 = !DILocation(line: 471, column: 36, scope: !8520)
!8523 = !DILocation(line: 471, column: 48, scope: !8520)
!8524 = !DILocation(line: 472, column: 19, scope: !8520)
!8525 = !DILocation(line: 472, column: 24, scope: !8520)
!8526 = !DILocation(line: 472, column: 37, scope: !8520)
!8527 = !DILocation(line: 472, column: 40, scope: !8520)
!8528 = !DILocation(line: 472, column: 52, scope: !8520)
!8529 = !DILocation(line: 471, column: 19, scope: !8505)
!8530 = !DILocation(line: 474, column: 38, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8532, file: !245, line: 474, column: 23)
!8532 = distinct !DILexicalBlock(scope: !8520, file: !245, line: 473, column: 17)
!8533 = !DILocation(line: 474, column: 47, scope: !8531)
!8534 = !DILocation(line: 475, column: 38, scope: !8531)
!8535 = !DILocation(line: 475, column: 50, scope: !8531)
!8536 = !DILocation(line: 476, column: 38, scope: !8531)
!8537 = !DILocation(line: 474, column: 25, scope: !8531)
!8538 = !DILocation(line: 474, column: 23, scope: !8532)
!8539 = !DILocation(line: 477, column: 21, scope: !8531)
!8540 = !DILocation(line: 478, column: 37, scope: !8532)
!8541 = !DILocation(line: 479, column: 17, scope: !8532)
!8542 = !DILocalVariable(name: "nzeros", scope: !8543, file: !245, line: 485, type: !248)
!8543 = distinct !DILexicalBlock(scope: !8520, file: !245, line: 481, column: 17)
!8544 = !DILocation(line: 485, column: 25, scope: !8543)
!8545 = !DILocation(line: 485, column: 34, scope: !8543)
!8546 = !DILocation(line: 486, column: 23, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8543, file: !245, line: 486, column: 23)
!8548 = !DILocation(line: 486, column: 23, scope: !8543)
!8549 = !DILocation(line: 487, column: 30, scope: !8547)
!8550 = !DILocation(line: 487, column: 28, scope: !8547)
!8551 = !DILocation(line: 487, column: 21, scope: !8547)
!8552 = !DILocation(line: 489, column: 38, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8543, file: !245, line: 489, column: 23)
!8554 = !DILocation(line: 489, column: 47, scope: !8553)
!8555 = !DILocation(line: 489, column: 25, scope: !8553)
!8556 = !DILocation(line: 489, column: 23, scope: !8543)
!8557 = !DILocation(line: 491, column: 33, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8553, file: !245, line: 490, column: 21)
!8559 = !DILocation(line: 491, column: 40, scope: !8558)
!8560 = !DILocation(line: 492, column: 30, scope: !8558)
!8561 = !DILocation(line: 491, column: 23, scope: !8558)
!8562 = !DILocation(line: 493, column: 23, scope: !8558)
!8563 = !DILocation(line: 496, column: 30, scope: !8543)
!8564 = !DILocation(line: 496, column: 28, scope: !8543)
!8565 = !DILocation(line: 498, column: 13, scope: !8505)
!8566 = !DILocation(line: 500, column: 28, scope: !8435)
!8567 = !DILocation(line: 500, column: 26, scope: !8435)
!8568 = !DILocalVariable(name: "n_read", scope: !8569, file: !245, line: 517, type: !248)
!8569 = distinct !DILexicalBlock(scope: !8570, file: !245, line: 516, column: 13)
!8570 = distinct !DILexicalBlock(scope: !8435, file: !245, line: 508, column: 15)
!8571 = !DILocation(line: 517, column: 21, scope: !8569)
!8572 = !DILocation(line: 518, column: 28, scope: !8569)
!8573 = !DILocation(line: 519, column: 30, scope: !8569)
!8574 = !DILocation(line: 519, column: 28, scope: !8569)
!8575 = !DILocalVariable(name: "read_hole", scope: !8569, file: !245, line: 520, type: !120)
!8576 = !DILocation(line: 520, column: 20, scope: !8569)
!8577 = !DILocation(line: 522, column: 35, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8569, file: !245, line: 522, column: 20)
!8579 = !DILocation(line: 522, column: 43, scope: !8578)
!8580 = !DILocation(line: 522, column: 52, scope: !8578)
!8581 = !DILocation(line: 522, column: 57, scope: !8578)
!8582 = !DILocation(line: 523, column: 35, scope: !8578)
!8583 = !DILocation(line: 523, column: 47, scope: !8578)
!8584 = !DILocation(line: 523, column: 66, scope: !8578)
!8585 = !DILocation(line: 524, column: 41, scope: !8578)
!8586 = !DILocation(line: 524, column: 51, scope: !8578)
!8587 = !DILocation(line: 524, column: 61, scope: !8578)
!8588 = !DILocation(line: 522, column: 22, scope: !8578)
!8589 = !DILocation(line: 522, column: 20, scope: !8569)
!8590 = !DILocation(line: 526, column: 17, scope: !8578)
!8591 = !DILocation(line: 528, column: 26, scope: !8569)
!8592 = !DILocation(line: 528, column: 38, scope: !8569)
!8593 = !DILocation(line: 528, column: 36, scope: !8569)
!8594 = !DILocation(line: 528, column: 24, scope: !8569)
!8595 = !DILocation(line: 529, column: 19, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8569, file: !245, line: 529, column: 19)
!8597 = !DILocation(line: 529, column: 19, scope: !8569)
!8598 = !DILocation(line: 530, column: 37, scope: !8596)
!8599 = !DILocation(line: 530, column: 35, scope: !8596)
!8600 = !DILocation(line: 530, column: 17, scope: !8596)
!8601 = !DILocation(line: 538, column: 15, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8435, file: !245, line: 538, column: 15)
!8603 = !DILocation(line: 538, column: 27, scope: !8602)
!8604 = !DILocation(line: 538, column: 24, scope: !8602)
!8605 = !DILocation(line: 538, column: 15, scope: !8435)
!8606 = !DILocation(line: 540, column: 20, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8602, file: !245, line: 539, column: 13)
!8608 = !DILocation(line: 540, column: 37, scope: !8607)
!8609 = !DILocation(line: 541, column: 15, scope: !8607)
!8610 = !DILocation(line: 543, column: 9, scope: !8435)
!8611 = !DILocation(line: 425, column: 68, scope: !8427)
!8612 = !DILocation(line: 425, column: 7, scope: !8427)
!8613 = distinct !{!8613, !8433, !8614}
!8614 = !DILocation(line: 543, column: 9, scope: !8423)
!8615 = !DILocation(line: 546, column: 7, scope: !8394)
!8616 = !DILocation(line: 548, column: 5, scope: !8394)
!8617 = !DILocation(line: 549, column: 17, scope: !8357)
!8618 = !DILocation(line: 549, column: 10, scope: !8357)
!8619 = distinct !{!8619, !8392, !8620}
!8620 = !DILocation(line: 549, column: 33, scope: !8357)
!8621 = !DILocation(line: 559, column: 8, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8357, file: !245, line: 559, column: 7)
!8623 = !DILocation(line: 559, column: 19, scope: !8622)
!8624 = !DILocation(line: 559, column: 17, scope: !8622)
!8625 = !DILocation(line: 559, column: 34, scope: !8622)
!8626 = !DILocation(line: 559, column: 37, scope: !8622)
!8627 = !DILocation(line: 560, column: 7, scope: !8622)
!8628 = !DILocation(line: 560, column: 11, scope: !8622)
!8629 = !DILocation(line: 560, column: 23, scope: !8622)
!8630 = !DILocation(line: 559, column: 7, scope: !8357)
!8631 = !DILocation(line: 561, column: 24, scope: !8622)
!8632 = !DILocation(line: 561, column: 33, scope: !8622)
!8633 = !DILocation(line: 561, column: 13, scope: !8622)
!8634 = !DILocation(line: 562, column: 28, scope: !8622)
!8635 = !DILocation(line: 562, column: 37, scope: !8622)
!8636 = !DILocation(line: 562, column: 54, scope: !8622)
!8637 = !DILocation(line: 562, column: 52, scope: !8622)
!8638 = !DILocation(line: 562, column: 15, scope: !8622)
!8639 = !DILocation(line: 564, column: 17, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8622, file: !245, line: 563, column: 5)
!8641 = !DILocation(line: 564, column: 24, scope: !8640)
!8642 = !DILocation(line: 564, column: 50, scope: !8640)
!8643 = !DILocation(line: 564, column: 7, scope: !8640)
!8644 = !DILocation(line: 565, column: 7, scope: !8640)
!8645 = !DILocation(line: 568, column: 7, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8357, file: !245, line: 568, column: 7)
!8647 = !DILocation(line: 568, column: 19, scope: !8646)
!8648 = !DILocation(line: 568, column: 36, scope: !8646)
!8649 = !DILocation(line: 568, column: 39, scope: !8646)
!8650 = !DILocation(line: 568, column: 50, scope: !8646)
!8651 = !DILocation(line: 568, column: 48, scope: !8646)
!8652 = !DILocation(line: 569, column: 7, scope: !8646)
!8653 = !DILocation(line: 569, column: 22, scope: !8646)
!8654 = !DILocation(line: 569, column: 31, scope: !8646)
!8655 = !DILocation(line: 569, column: 41, scope: !8646)
!8656 = !DILocation(line: 569, column: 58, scope: !8646)
!8657 = !DILocation(line: 569, column: 56, scope: !8646)
!8658 = !DILocation(line: 569, column: 10, scope: !8646)
!8659 = !DILocation(line: 569, column: 68, scope: !8646)
!8660 = !DILocation(line: 568, column: 7, scope: !8357)
!8661 = !DILocation(line: 571, column: 17, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8646, file: !245, line: 570, column: 5)
!8663 = !DILocation(line: 571, column: 24, scope: !8662)
!8664 = !DILocation(line: 571, column: 52, scope: !8662)
!8665 = !DILocation(line: 571, column: 7, scope: !8662)
!8666 = !DILocation(line: 572, column: 7, scope: !8662)
!8667 = !DILocation(line: 575, column: 3, scope: !8357)
!8668 = !DILocation(line: 576, column: 1, scope: !8357)
!8669 = distinct !DISubprogram(name: "sparse_copy", scope: !245, file: !245, line: 224, type: !454, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8670 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8669, file: !245, line: 224, type: !7)
!8671 = !DILocation(line: 224, column: 18, scope: !8669)
!8672 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !8669, file: !245, line: 224, type: !7)
!8673 = !DILocation(line: 224, column: 30, scope: !8669)
!8674 = !DILocalVariable(name: "buf", arg: 3, scope: !8669, file: !245, line: 224, type: !9)
!8675 = !DILocation(line: 224, column: 45, scope: !8669)
!8676 = !DILocalVariable(name: "buf_size", arg: 4, scope: !8669, file: !245, line: 224, type: !55)
!8677 = !DILocation(line: 224, column: 57, scope: !8669)
!8678 = !DILocalVariable(name: "hole_size", arg: 5, scope: !8669, file: !245, line: 225, type: !55)
!8679 = !DILocation(line: 225, column: 21, scope: !8669)
!8680 = !DILocalVariable(name: "punch_holes", arg: 6, scope: !8669, file: !245, line: 225, type: !120)
!8681 = !DILocation(line: 225, column: 37, scope: !8669)
!8682 = !DILocalVariable(name: "src_name", arg: 7, scope: !8669, file: !245, line: 226, type: !115)
!8683 = !DILocation(line: 226, column: 26, scope: !8669)
!8684 = !DILocalVariable(name: "dst_name", arg: 8, scope: !8669, file: !245, line: 226, type: !115)
!8685 = !DILocation(line: 226, column: 48, scope: !8669)
!8686 = !DILocalVariable(name: "max_n_read", arg: 9, scope: !8669, file: !245, line: 227, type: !456)
!8687 = !DILocation(line: 227, column: 24, scope: !8669)
!8688 = !DILocalVariable(name: "total_n_read", arg: 10, scope: !8669, file: !245, line: 227, type: !459)
!8689 = !DILocation(line: 227, column: 43, scope: !8669)
!8690 = !DILocalVariable(name: "last_write_made_hole", arg: 11, scope: !8669, file: !245, line: 228, type: !302)
!8691 = !DILocation(line: 228, column: 20, scope: !8669)
!8692 = !DILocation(line: 230, column: 4, scope: !8669)
!8693 = !DILocation(line: 230, column: 25, scope: !8669)
!8694 = !DILocation(line: 231, column: 4, scope: !8669)
!8695 = !DILocation(line: 231, column: 17, scope: !8669)
!8696 = !DILocalVariable(name: "make_hole", scope: !8669, file: !245, line: 232, type: !120)
!8697 = !DILocation(line: 232, column: 8, scope: !8669)
!8698 = !DILocalVariable(name: "psize", scope: !8669, file: !245, line: 233, type: !248)
!8699 = !DILocation(line: 233, column: 9, scope: !8669)
!8700 = !DILocation(line: 235, column: 3, scope: !8669)
!8701 = !DILocation(line: 235, column: 10, scope: !8669)
!8702 = !DILocalVariable(name: "n_read", scope: !8703, file: !245, line: 237, type: !460)
!8703 = distinct !DILexicalBlock(scope: !8669, file: !245, line: 236, column: 5)
!8704 = !DILocation(line: 237, column: 15, scope: !8703)
!8705 = !DILocation(line: 237, column: 30, scope: !8703)
!8706 = !DILocation(line: 237, column: 38, scope: !8703)
!8707 = !DILocation(line: 237, column: 43, scope: !8703)
!8708 = !DILocation(line: 237, column: 24, scope: !8703)
!8709 = !DILocation(line: 238, column: 11, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8703, file: !245, line: 238, column: 11)
!8711 = !DILocation(line: 238, column: 18, scope: !8710)
!8712 = !DILocation(line: 238, column: 11, scope: !8703)
!8713 = !DILocation(line: 240, column: 15, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8715, file: !245, line: 240, column: 15)
!8715 = distinct !DILexicalBlock(scope: !8710, file: !245, line: 239, column: 9)
!8716 = !DILocation(line: 240, column: 21, scope: !8714)
!8717 = !DILocation(line: 240, column: 15, scope: !8715)
!8718 = !DILocation(line: 241, column: 13, scope: !8714)
!8719 = distinct !{!8719, !8700, !8720}
!8720 = !DILocation(line: 321, column: 5, scope: !8669)
!8721 = !DILocation(line: 242, column: 21, scope: !8715)
!8722 = !DILocation(line: 242, column: 28, scope: !8715)
!8723 = !DILocation(line: 242, column: 51, scope: !8715)
!8724 = !DILocation(line: 242, column: 11, scope: !8715)
!8725 = !DILocation(line: 243, column: 11, scope: !8715)
!8726 = !DILocation(line: 245, column: 11, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8703, file: !245, line: 245, column: 11)
!8728 = !DILocation(line: 245, column: 18, scope: !8727)
!8729 = !DILocation(line: 245, column: 11, scope: !8703)
!8730 = !DILocation(line: 246, column: 9, scope: !8727)
!8731 = !DILocation(line: 247, column: 21, scope: !8703)
!8732 = !DILocation(line: 247, column: 18, scope: !8703)
!8733 = !DILocation(line: 248, column: 24, scope: !8703)
!8734 = !DILocation(line: 248, column: 8, scope: !8703)
!8735 = !DILocation(line: 248, column: 21, scope: !8703)
!8736 = !DILocalVariable(name: "csize", scope: !8703, file: !245, line: 251, type: !55)
!8737 = !DILocation(line: 251, column: 14, scope: !8703)
!8738 = !DILocation(line: 251, column: 22, scope: !8703)
!8739 = !DILocation(line: 251, column: 34, scope: !8703)
!8740 = !DILocation(line: 251, column: 46, scope: !8703)
!8741 = !DILocalVariable(name: "cbuf", scope: !8703, file: !245, line: 252, type: !9)
!8742 = !DILocation(line: 252, column: 13, scope: !8703)
!8743 = !DILocation(line: 252, column: 20, scope: !8703)
!8744 = !DILocalVariable(name: "pbuf", scope: !8703, file: !245, line: 253, type: !9)
!8745 = !DILocation(line: 253, column: 13, scope: !8703)
!8746 = !DILocation(line: 253, column: 20, scope: !8703)
!8747 = !DILocation(line: 255, column: 7, scope: !8703)
!8748 = !DILocation(line: 255, column: 14, scope: !8703)
!8749 = !DILocalVariable(name: "prev_hole", scope: !8750, file: !245, line: 257, type: !120)
!8750 = distinct !DILexicalBlock(scope: !8703, file: !245, line: 256, column: 9)
!8751 = !DILocation(line: 257, column: 16, scope: !8750)
!8752 = !DILocation(line: 257, column: 28, scope: !8750)
!8753 = !DILocation(line: 258, column: 19, scope: !8750)
!8754 = !DILocation(line: 258, column: 17, scope: !8750)
!8755 = !DILocation(line: 260, column: 15, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8750, file: !245, line: 260, column: 15)
!8757 = !DILocation(line: 260, column: 25, scope: !8756)
!8758 = !DILocation(line: 260, column: 28, scope: !8756)
!8759 = !DILocation(line: 260, column: 15, scope: !8750)
!8760 = !DILocation(line: 261, column: 33, scope: !8756)
!8761 = !DILocation(line: 261, column: 39, scope: !8756)
!8762 = !DILocation(line: 261, column: 25, scope: !8756)
!8763 = !DILocation(line: 261, column: 23, scope: !8756)
!8764 = !DILocation(line: 261, column: 13, scope: !8756)
!8765 = !DILocalVariable(name: "transition", scope: !8750, file: !245, line: 263, type: !120)
!8766 = !DILocation(line: 263, column: 16, scope: !8750)
!8767 = !DILocation(line: 263, column: 30, scope: !8750)
!8768 = !DILocation(line: 263, column: 43, scope: !8750)
!8769 = !DILocation(line: 263, column: 40, scope: !8750)
!8770 = !DILocation(line: 263, column: 54, scope: !8750)
!8771 = !DILocation(line: 263, column: 57, scope: !8750)
!8772 = !DILocation(line: 0, scope: !8750)
!8773 = !DILocalVariable(name: "last_chunk", scope: !8750, file: !245, line: 264, type: !120)
!8774 = !DILocation(line: 264, column: 16, scope: !8750)
!8775 = !DILocation(line: 264, column: 30, scope: !8750)
!8776 = !DILocation(line: 264, column: 40, scope: !8750)
!8777 = !DILocation(line: 264, column: 37, scope: !8750)
!8778 = !DILocation(line: 264, column: 46, scope: !8750)
!8779 = !DILocation(line: 264, column: 51, scope: !8750)
!8780 = !DILocation(line: 264, column: 62, scope: !8750)
!8781 = !DILocation(line: 264, column: 67, scope: !8750)
!8782 = !DILocation(line: 264, column: 65, scope: !8750)
!8783 = !DILocation(line: 266, column: 15, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8750, file: !245, line: 266, column: 15)
!8785 = !DILocation(line: 266, column: 26, scope: !8784)
!8786 = !DILocation(line: 266, column: 29, scope: !8784)
!8787 = !DILocation(line: 266, column: 15, scope: !8750)
!8788 = !DILocation(line: 268, column: 21, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8790, file: !245, line: 268, column: 19)
!8790 = distinct !DILexicalBlock(scope: !8784, file: !245, line: 267, column: 13)
!8791 = !DILocation(line: 268, column: 19, scope: !8790)
!8792 = !DILocation(line: 269, column: 26, scope: !8789)
!8793 = !DILocation(line: 269, column: 23, scope: !8789)
!8794 = !DILocation(line: 269, column: 17, scope: !8789)
!8795 = !DILocation(line: 271, column: 21, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8790, file: !245, line: 271, column: 19)
!8797 = !DILocation(line: 271, column: 19, scope: !8790)
!8798 = !DILocation(line: 273, column: 35, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8800, file: !245, line: 273, column: 23)
!8800 = distinct !DILexicalBlock(scope: !8796, file: !245, line: 272, column: 17)
!8801 = !DILocation(line: 273, column: 44, scope: !8799)
!8802 = !DILocation(line: 273, column: 50, scope: !8799)
!8803 = !DILocation(line: 273, column: 23, scope: !8799)
!8804 = !DILocation(line: 273, column: 60, scope: !8799)
!8805 = !DILocation(line: 273, column: 57, scope: !8799)
!8806 = !DILocation(line: 273, column: 23, scope: !8800)
!8807 = !DILocation(line: 275, column: 33, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8799, file: !245, line: 274, column: 21)
!8809 = !DILocation(line: 275, column: 40, scope: !8808)
!8810 = !DILocation(line: 276, column: 30, scope: !8808)
!8811 = !DILocation(line: 275, column: 23, scope: !8808)
!8812 = !DILocation(line: 277, column: 23, scope: !8808)
!8813 = !DILocation(line: 279, column: 17, scope: !8800)
!8814 = !DILocation(line: 282, column: 38, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8816, file: !245, line: 282, column: 23)
!8816 = distinct !DILexicalBlock(scope: !8796, file: !245, line: 281, column: 17)
!8817 = !DILocation(line: 282, column: 47, scope: !8815)
!8818 = !DILocation(line: 282, column: 57, scope: !8815)
!8819 = !DILocation(line: 282, column: 70, scope: !8815)
!8820 = !DILocation(line: 282, column: 25, scope: !8815)
!8821 = !DILocation(line: 282, column: 23, scope: !8816)
!8822 = !DILocation(line: 283, column: 21, scope: !8815)
!8823 = !DILocation(line: 286, column: 22, scope: !8790)
!8824 = !DILocation(line: 286, column: 20, scope: !8790)
!8825 = !DILocation(line: 287, column: 23, scope: !8790)
!8826 = !DILocation(line: 287, column: 21, scope: !8790)
!8827 = !DILocation(line: 289, column: 19, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8790, file: !245, line: 289, column: 19)
!8829 = !DILocation(line: 289, column: 19, scope: !8790)
!8830 = !DILocation(line: 291, column: 25, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8832, file: !245, line: 291, column: 23)
!8832 = distinct !DILexicalBlock(scope: !8828, file: !245, line: 290, column: 17)
!8833 = !DILocation(line: 291, column: 23, scope: !8832)
!8834 = !DILocation(line: 292, column: 28, scope: !8831)
!8835 = !DILocation(line: 292, column: 21, scope: !8831)
!8836 = !DILocation(line: 294, column: 23, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8832, file: !245, line: 294, column: 23)
!8838 = !DILocation(line: 294, column: 23, scope: !8832)
!8839 = !DILocation(line: 295, column: 27, scope: !8837)
!8840 = !DILocation(line: 295, column: 21, scope: !8837)
!8841 = !DILocation(line: 297, column: 27, scope: !8837)
!8842 = !DILocation(line: 298, column: 17, scope: !8832)
!8843 = !DILocation(line: 299, column: 13, scope: !8790)
!8844 = !DILocation(line: 302, column: 19, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8846, file: !245, line: 302, column: 19)
!8846 = distinct !DILexicalBlock(scope: !8784, file: !245, line: 301, column: 13)
!8847 = !DILocation(line: 302, column: 40, scope: !8845)
!8848 = !DILocation(line: 302, column: 38, scope: !8845)
!8849 = !DILocation(line: 302, column: 25, scope: !8845)
!8850 = !DILocation(line: 302, column: 19, scope: !8846)
!8851 = !DILocation(line: 303, column: 26, scope: !8845)
!8852 = !DILocation(line: 303, column: 23, scope: !8845)
!8853 = !DILocation(line: 303, column: 17, scope: !8845)
!8854 = !DILocation(line: 306, column: 32, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8845, file: !245, line: 305, column: 17)
!8856 = !DILocation(line: 306, column: 58, scope: !8855)
!8857 = !DILocation(line: 306, column: 19, scope: !8855)
!8858 = !DILocation(line: 307, column: 19, scope: !8855)
!8859 = !DILocation(line: 311, column: 21, scope: !8750)
!8860 = !DILocation(line: 311, column: 18, scope: !8750)
!8861 = !DILocation(line: 312, column: 19, scope: !8750)
!8862 = !DILocation(line: 312, column: 16, scope: !8750)
!8863 = distinct !{!8863, !8747, !8864}
!8864 = !DILocation(line: 313, column: 9, scope: !8703)
!8865 = !DILocation(line: 315, column: 31, scope: !8703)
!8866 = !DILocation(line: 315, column: 8, scope: !8703)
!8867 = !DILocation(line: 315, column: 29, scope: !8703)
!8868 = !DILocation(line: 325, column: 7, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8669, file: !245, line: 325, column: 7)
!8870 = !DILocation(line: 325, column: 17, scope: !8869)
!8871 = !DILocation(line: 325, column: 35, scope: !8869)
!8872 = !DILocation(line: 325, column: 44, scope: !8869)
!8873 = !DILocation(line: 325, column: 54, scope: !8869)
!8874 = !DILocation(line: 325, column: 67, scope: !8869)
!8875 = !DILocation(line: 325, column: 22, scope: !8869)
!8876 = !DILocation(line: 325, column: 7, scope: !8669)
!8877 = !DILocation(line: 326, column: 5, scope: !8869)
!8878 = !DILocation(line: 328, column: 5, scope: !8869)
!8879 = !DILocation(line: 329, column: 1, scope: !8669)
!8880 = distinct !DISubprogram(name: "fchmod_or_lchmod", scope: !245, file: !245, line: 977, type: !467, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8881 = !DILocalVariable(name: "desc", arg: 1, scope: !8880, file: !245, line: 977, type: !7)
!8882 = !DILocation(line: 977, column: 23, scope: !8880)
!8883 = !DILocalVariable(name: "name", arg: 2, scope: !8880, file: !245, line: 977, type: !115)
!8884 = !DILocation(line: 977, column: 41, scope: !8880)
!8885 = !DILocalVariable(name: "mode", arg: 3, scope: !8880, file: !245, line: 977, type: !160)
!8886 = !DILocation(line: 977, column: 54, scope: !8880)
!8887 = !DILocation(line: 980, column: 12, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8880, file: !245, line: 980, column: 7)
!8889 = !DILocation(line: 980, column: 9, scope: !8888)
!8890 = !DILocation(line: 980, column: 7, scope: !8880)
!8891 = !DILocation(line: 981, column: 20, scope: !8888)
!8892 = !DILocation(line: 981, column: 26, scope: !8888)
!8893 = !DILocation(line: 981, column: 12, scope: !8888)
!8894 = !DILocation(line: 981, column: 5, scope: !8888)
!8895 = !DILocation(line: 983, column: 18, scope: !8880)
!8896 = !DILocation(line: 983, column: 24, scope: !8880)
!8897 = !DILocation(line: 983, column: 10, scope: !8880)
!8898 = !DILocation(line: 983, column: 3, scope: !8880)
!8899 = !DILocation(line: 984, column: 1, scope: !8880)
!8900 = distinct !DISubprogram(name: "is_nul", scope: !141, file: !141, line: 509, type: !462, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8901 = !DILocalVariable(name: "buf", arg: 1, scope: !8900, file: !141, line: 509, type: !425)
!8902 = !DILocation(line: 509, column: 21, scope: !8900)
!8903 = !DILocalVariable(name: "length", arg: 2, scope: !8900, file: !141, line: 509, type: !55)
!8904 = !DILocation(line: 509, column: 33, scope: !8900)
!8905 = !DILocalVariable(name: "p", scope: !8900, file: !141, line: 511, type: !464)
!8906 = !DILocation(line: 511, column: 24, scope: !8900)
!8907 = !DILocation(line: 511, column: 28, scope: !8900)
!8908 = !DILocalVariable(name: "word", scope: !8900, file: !141, line: 521, type: !466)
!8909 = !DILocation(line: 521, column: 17, scope: !8900)
!8910 = !DILocation(line: 524, column: 9, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8900, file: !141, line: 524, column: 7)
!8912 = !DILocation(line: 524, column: 7, scope: !8900)
!8913 = !DILocation(line: 525, column: 7, scope: !8911)
!8914 = !DILocation(line: 528, column: 3, scope: !8900)
!8915 = !DILocation(line: 528, column: 10, scope: !8900)
!8916 = !DILocation(line: 530, column: 12, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8918, file: !141, line: 530, column: 11)
!8918 = distinct !DILexicalBlock(scope: !8900, file: !141, line: 529, column: 5)
!8919 = !DILocation(line: 530, column: 11, scope: !8917)
!8920 = !DILocation(line: 530, column: 11, scope: !8918)
!8921 = !DILocation(line: 531, column: 9, scope: !8917)
!8922 = !DILocation(line: 532, column: 8, scope: !8918)
!8923 = !DILocation(line: 533, column: 13, scope: !8918)
!8924 = !DILocation(line: 534, column: 13, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8918, file: !141, line: 534, column: 11)
!8926 = !DILocation(line: 534, column: 11, scope: !8918)
!8927 = !DILocation(line: 535, column: 9, scope: !8925)
!8928 = distinct !{!8928, !8914, !8929}
!8929 = !DILocation(line: 536, column: 4, scope: !8900)
!8930 = !DILocation(line: 539, column: 3, scope: !8900)
!8931 = !DILocation(line: 541, column: 22, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8933, file: !141, line: 540, column: 5)
!8933 = distinct !DILexicalBlock(scope: !8934, file: !141, line: 539, column: 3)
!8934 = distinct !DILexicalBlock(scope: !8900, file: !141, line: 539, column: 3)
!8935 = !DILocation(line: 541, column: 7, scope: !8932)
!8936 = !DILocation(line: 542, column: 11, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8932, file: !141, line: 542, column: 11)
!8938 = !DILocation(line: 542, column: 11, scope: !8932)
!8939 = !DILocation(line: 543, column: 9, scope: !8937)
!8940 = !DILocation(line: 544, column: 9, scope: !8932)
!8941 = !DILocation(line: 545, column: 14, scope: !8932)
!8942 = !DILocation(line: 546, column: 13, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8932, file: !141, line: 546, column: 11)
!8944 = !DILocation(line: 546, column: 11, scope: !8932)
!8945 = !DILocation(line: 547, column: 9, scope: !8943)
!8946 = !DILocation(line: 548, column: 11, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8932, file: !141, line: 548, column: 11)
!8948 = !DILocation(line: 548, column: 34, scope: !8947)
!8949 = !DILocation(line: 548, column: 11, scope: !8932)
!8950 = !DILocation(line: 549, column: 9, scope: !8947)
!8951 = !DILocation(line: 539, column: 3, scope: !8933)
!8952 = distinct !{!8952, !8953, !8954}
!8953 = !DILocation(line: 539, column: 3, scope: !8934)
!8954 = !DILocation(line: 550, column: 4, scope: !8934)
!8955 = !DILocation(line: 553, column: 19, scope: !8900)
!8956 = !DILocation(line: 553, column: 24, scope: !8900)
!8957 = !DILocation(line: 553, column: 27, scope: !8900)
!8958 = !DILocation(line: 553, column: 11, scope: !8900)
!8959 = !DILocation(line: 553, column: 35, scope: !8900)
!8960 = !DILocation(line: 553, column: 4, scope: !8900)
!8961 = !DILocation(line: 554, column: 1, scope: !8900)
!8962 = distinct !DISubprogram(name: "create_hole", scope: !245, file: !245, line: 188, type: !448, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8963 = !DILocalVariable(name: "fd", arg: 1, scope: !8962, file: !245, line: 188, type: !7)
!8964 = !DILocation(line: 188, column: 18, scope: !8962)
!8965 = !DILocalVariable(name: "name", arg: 2, scope: !8962, file: !245, line: 188, type: !115)
!8966 = !DILocation(line: 188, column: 34, scope: !8962)
!8967 = !DILocalVariable(name: "punch_holes", arg: 3, scope: !8962, file: !245, line: 188, type: !120)
!8968 = !DILocation(line: 188, column: 45, scope: !8962)
!8969 = !DILocalVariable(name: "size", arg: 4, scope: !8962, file: !245, line: 188, type: !248)
!8970 = !DILocation(line: 188, column: 64, scope: !8962)
!8971 = !DILocalVariable(name: "file_end", scope: !8962, file: !245, line: 190, type: !248)
!8972 = !DILocation(line: 190, column: 9, scope: !8962)
!8973 = !DILocation(line: 190, column: 27, scope: !8962)
!8974 = !DILocation(line: 190, column: 31, scope: !8962)
!8975 = !DILocation(line: 190, column: 20, scope: !8962)
!8976 = !DILocation(line: 192, column: 7, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8962, file: !245, line: 192, column: 7)
!8978 = !DILocation(line: 192, column: 16, scope: !8977)
!8979 = !DILocation(line: 192, column: 7, scope: !8962)
!8980 = !DILocation(line: 194, column: 17, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8977, file: !245, line: 193, column: 5)
!8982 = !DILocation(line: 194, column: 24, scope: !8981)
!8983 = !DILocation(line: 194, column: 46, scope: !8981)
!8984 = !DILocation(line: 194, column: 7, scope: !8981)
!8985 = !DILocation(line: 195, column: 7, scope: !8981)
!8986 = !DILocation(line: 202, column: 7, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8962, file: !245, line: 202, column: 7)
!8988 = !DILocation(line: 202, column: 19, scope: !8987)
!8989 = !DILocation(line: 202, column: 34, scope: !8987)
!8990 = !DILocation(line: 202, column: 38, scope: !8987)
!8991 = !DILocation(line: 202, column: 49, scope: !8987)
!8992 = !DILocation(line: 202, column: 47, scope: !8987)
!8993 = !DILocation(line: 202, column: 55, scope: !8987)
!8994 = !DILocation(line: 202, column: 22, scope: !8987)
!8995 = !DILocation(line: 202, column: 61, scope: !8987)
!8996 = !DILocation(line: 202, column: 7, scope: !8962)
!8997 = !DILocation(line: 204, column: 17, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8987, file: !245, line: 203, column: 5)
!8999 = !DILocation(line: 204, column: 24, scope: !8998)
!9000 = !DILocation(line: 204, column: 52, scope: !8998)
!9001 = !DILocation(line: 204, column: 7, scope: !8998)
!9002 = !DILocation(line: 205, column: 7, scope: !8998)
!9003 = !DILocation(line: 208, column: 3, scope: !8962)
!9004 = !DILocation(line: 209, column: 1, scope: !8962)
!9005 = distinct !DISubprogram(name: "punch_hole", scope: !245, file: !245, line: 169, type: !452, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!9006 = !DILocalVariable(name: "fd", arg: 1, scope: !9005, file: !245, line: 169, type: !7)
!9007 = !DILocation(line: 169, column: 17, scope: !9005)
!9008 = !DILocalVariable(name: "offset", arg: 2, scope: !9005, file: !245, line: 169, type: !248)
!9009 = !DILocation(line: 169, column: 27, scope: !9005)
!9010 = !DILocalVariable(name: "length", arg: 3, scope: !9005, file: !245, line: 169, type: !248)
!9011 = !DILocation(line: 169, column: 41, scope: !9005)
!9012 = !DILocalVariable(name: "ret", scope: !9005, file: !245, line: 171, type: !7)
!9013 = !DILocation(line: 171, column: 7, scope: !9005)
!9014 = !DILocation(line: 175, column: 20, scope: !9005)
!9015 = !DILocation(line: 176, column: 20, scope: !9005)
!9016 = !DILocation(line: 176, column: 28, scope: !9005)
!9017 = !DILocation(line: 175, column: 9, scope: !9005)
!9018 = !DILocation(line: 175, column: 7, scope: !9005)
!9019 = !DILocation(line: 177, column: 7, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9005, file: !245, line: 177, column: 7)
!9021 = !DILocation(line: 177, column: 11, scope: !9020)
!9022 = !DILocation(line: 177, column: 15, scope: !9020)
!9023 = !DILocation(line: 177, column: 31, scope: !9020)
!9024 = !DILocation(line: 177, column: 19, scope: !9020)
!9025 = !DILocation(line: 177, column: 38, scope: !9020)
!9026 = !DILocation(line: 177, column: 41, scope: !9020)
!9027 = !DILocation(line: 177, column: 47, scope: !9020)
!9028 = !DILocation(line: 177, column: 7, scope: !9005)
!9029 = !DILocation(line: 178, column: 9, scope: !9020)
!9030 = !DILocation(line: 178, column: 5, scope: !9020)
!9031 = !DILocation(line: 181, column: 10, scope: !9005)
!9032 = !DILocation(line: 181, column: 3, scope: !9005)
!9033 = distinct !DISubprogram(name: "is_ENOTSUP", scope: !141, file: !141, line: 762, type: !307, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!9034 = !DILocalVariable(name: "err", arg: 1, scope: !9033, file: !141, line: 762, type: !7)
!9035 = !DILocation(line: 762, column: 17, scope: !9033)
!9036 = !DILocation(line: 764, column: 10, scope: !9033)
!9037 = !DILocation(line: 764, column: 14, scope: !9033)
!9038 = !DILocation(line: 764, column: 28, scope: !9033)
!9039 = !DILocation(line: 764, column: 3, scope: !9033)
!9040 = distinct !DISubprogram(name: "extent_scan_free", scope: !431, file: !431, line: 66, type: !436, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!9041 = !DILocalVariable(name: "scan", arg: 1, scope: !9040, file: !431, line: 66, type: !438)
!9042 = !DILocation(line: 66, column: 39, scope: !9040)
!9043 = !DILocation(line: 68, column: 9, scope: !9040)
!9044 = !DILocation(line: 68, column: 15, scope: !9040)
!9045 = !DILocation(line: 68, column: 3, scope: !9040)
!9046 = !DILocation(line: 69, column: 3, scope: !9040)
!9047 = !DILocation(line: 69, column: 9, scope: !9040)
!9048 = !DILocation(line: 69, column: 18, scope: !9040)
!9049 = !DILocation(line: 70, column: 3, scope: !9040)
!9050 = !DILocation(line: 70, column: 9, scope: !9040)
!9051 = !DILocation(line: 70, column: 18, scope: !9040)
!9052 = !DILocation(line: 71, column: 1, scope: !9040)
!9053 = !DILocalVariable(name: "fd", arg: 1, scope: !518, file: !245, line: 349, type: !7)
!9054 = !DILocation(line: 349, column: 18, scope: !518)
!9055 = !DILocalVariable(name: "n_bytes", arg: 2, scope: !518, file: !245, line: 349, type: !248)
!9056 = !DILocation(line: 349, column: 28, scope: !518)
!9057 = !DILocation(line: 357, column: 7, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !518, file: !245, line: 357, column: 7)
!9059 = !DILocation(line: 357, column: 13, scope: !9058)
!9060 = !DILocation(line: 357, column: 7, scope: !518)
!9061 = !DILocation(line: 360, column: 23, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9058, file: !245, line: 358, column: 5)
!9063 = !DILocation(line: 360, column: 15, scope: !9062)
!9064 = !DILocation(line: 360, column: 13, scope: !9062)
!9065 = !DILocation(line: 361, column: 11, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9062, file: !245, line: 361, column: 11)
!9067 = !DILocation(line: 361, column: 17, scope: !9066)
!9068 = !DILocation(line: 361, column: 11, scope: !9062)
!9069 = !DILocation(line: 363, column: 17, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9066, file: !245, line: 362, column: 9)
!9071 = !DILocation(line: 364, column: 14, scope: !9070)
!9072 = !DILocation(line: 365, column: 9, scope: !9070)
!9073 = !DILocation(line: 366, column: 5, scope: !9062)
!9074 = !DILocation(line: 368, column: 3, scope: !518)
!9075 = !DILocation(line: 368, column: 10, scope: !518)
!9076 = !DILocalVariable(name: "n", scope: !9077, file: !245, line: 370, type: !55)
!9077 = distinct !DILexicalBlock(scope: !518, file: !245, line: 369, column: 5)
!9078 = !DILocation(line: 370, column: 14, scope: !9077)
!9079 = !DILocation(line: 370, column: 18, scope: !9077)
!9080 = !DILocation(line: 371, column: 24, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9077, file: !245, line: 371, column: 11)
!9082 = !DILocation(line: 371, column: 28, scope: !9081)
!9083 = !DILocation(line: 371, column: 35, scope: !9081)
!9084 = !DILocation(line: 371, column: 12, scope: !9081)
!9085 = !DILocation(line: 371, column: 42, scope: !9081)
!9086 = !DILocation(line: 371, column: 39, scope: !9081)
!9087 = !DILocation(line: 371, column: 11, scope: !9077)
!9088 = !DILocation(line: 372, column: 9, scope: !9081)
!9089 = !DILocation(line: 373, column: 18, scope: !9077)
!9090 = !DILocation(line: 373, column: 15, scope: !9077)
!9091 = distinct !{!9091, !9074, !9092}
!9092 = !DILocation(line: 374, column: 5, scope: !518)
!9093 = !DILocation(line: 376, column: 3, scope: !518)
!9094 = !DILocation(line: 377, column: 1, scope: !518)
!9095 = distinct !DISubprogram(name: "writable_destination", scope: !245, file: !245, line: 1666, type: !366, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!9096 = !DILocalVariable(name: "file", arg: 1, scope: !9095, file: !245, line: 1666, type: !115)
!9097 = !DILocation(line: 1666, column: 35, scope: !9095)
!9098 = !DILocalVariable(name: "mode", arg: 2, scope: !9095, file: !245, line: 1666, type: !160)
!9099 = !DILocation(line: 1666, column: 48, scope: !9095)
!9100 = !DILocation(line: 1668, column: 11, scope: !9095)
!9101 = !DILocation(line: 1669, column: 11, scope: !9095)
!9102 = !DILocation(line: 1669, column: 14, scope: !9095)
!9103 = !DILocation(line: 1670, column: 11, scope: !9095)
!9104 = !DILocation(line: 1670, column: 26, scope: !9095)
!9105 = !DILocation(line: 1670, column: 14, scope: !9095)
!9106 = !DILocation(line: 1670, column: 38, scope: !9095)
!9107 = !DILocation(line: 1668, column: 3, scope: !9095)
!9108 = distinct !DISubprogram(name: "cp_options_default", scope: !245, file: !245, line: 2997, type: !297, scopeLine: 2998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!9109 = !DILocalVariable(name: "x", arg: 1, scope: !9108, file: !245, line: 2997, type: !299)
!9110 = !DILocation(line: 2997, column: 40, scope: !9108)
!9111 = !DILocation(line: 2999, column: 11, scope: !9108)
!9112 = !DILocation(line: 2999, column: 3, scope: !9108)
!9113 = !DILocation(line: 3013, column: 48, scope: !9108)
!9114 = !DILocation(line: 3013, column: 59, scope: !9108)
!9115 = !DILocation(line: 3013, column: 25, scope: !9108)
!9116 = !DILocation(line: 3013, column: 28, scope: !9108)
!9117 = !DILocation(line: 3013, column: 45, scope: !9108)
!9118 = !DILocation(line: 3013, column: 3, scope: !9108)
!9119 = !DILocation(line: 3013, column: 6, scope: !9108)
!9120 = !DILocation(line: 3013, column: 23, scope: !9108)
!9121 = !DILocation(line: 3015, column: 3, scope: !9108)
!9122 = !DILocation(line: 3015, column: 6, scope: !9108)
!9123 = !DILocation(line: 3015, column: 19, scope: !9108)
!9124 = !DILocation(line: 3016, column: 1, scope: !9108)
!9125 = distinct !DISubprogram(name: "forget_created", scope: !529, file: !529, line: 82, type: !531, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !528, retainedNodes: !143)
!9126 = !DILocalVariable(name: "ino", arg: 1, scope: !9125, file: !529, line: 82, type: !227)
!9127 = !DILocation(line: 82, column: 23, scope: !9125)
!9128 = !DILocalVariable(name: "dev", arg: 2, scope: !9125, file: !529, line: 82, type: !230)
!9129 = !DILocation(line: 82, column: 34, scope: !9125)
!9130 = !DILocalVariable(name: "probe", scope: !9125, file: !529, line: 84, type: !534)
!9131 = !DILocation(line: 84, column: 22, scope: !9125)
!9132 = !DILocalVariable(name: "ent", scope: !9125, file: !529, line: 85, type: !533)
!9133 = !DILocation(line: 85, column: 23, scope: !9125)
!9134 = !DILocation(line: 87, column: 18, scope: !9125)
!9135 = !DILocation(line: 87, column: 9, scope: !9125)
!9136 = !DILocation(line: 87, column: 16, scope: !9125)
!9137 = !{!9138, !3180, i64 0}
!9138 = !{!"Src_to_dest", !3180, i64 0, !3180, i64 8, !2996, i64 16}
!9139 = !DILocation(line: 88, column: 18, scope: !9125)
!9140 = !DILocation(line: 88, column: 9, scope: !9125)
!9141 = !DILocation(line: 88, column: 16, scope: !9125)
!9142 = !{!9138, !3180, i64 8}
!9143 = !DILocation(line: 89, column: 9, scope: !9125)
!9144 = !DILocation(line: 89, column: 14, scope: !9125)
!9145 = !{!9138, !2996, i64 16}
!9146 = !DILocation(line: 91, column: 22, scope: !9125)
!9147 = !DILocation(line: 91, column: 35, scope: !9125)
!9148 = !DILocation(line: 91, column: 9, scope: !9125)
!9149 = !DILocation(line: 91, column: 7, scope: !9125)
!9150 = !DILocation(line: 92, column: 7, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9125, file: !529, line: 92, column: 7)
!9152 = !DILocation(line: 92, column: 7, scope: !9125)
!9153 = !DILocation(line: 93, column: 23, scope: !9151)
!9154 = !DILocation(line: 93, column: 5, scope: !9151)
!9155 = !DILocation(line: 94, column: 1, scope: !9125)
!9156 = distinct !DISubprogram(name: "src_to_dest_free", scope: !529, file: !529, line: 72, type: !545, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !528, retainedNodes: !143)
!9157 = !DILocalVariable(name: "x", arg: 1, scope: !9156, file: !529, line: 72, type: !53)
!9158 = !DILocation(line: 72, column: 25, scope: !9156)
!9159 = !DILocalVariable(name: "a", scope: !9156, file: !529, line: 74, type: !533)
!9160 = !DILocation(line: 74, column: 23, scope: !9156)
!9161 = !DILocation(line: 74, column: 27, scope: !9156)
!9162 = !DILocation(line: 75, column: 9, scope: !9156)
!9163 = !DILocation(line: 75, column: 12, scope: !9156)
!9164 = !DILocation(line: 75, column: 3, scope: !9156)
!9165 = !DILocation(line: 76, column: 9, scope: !9156)
!9166 = !DILocation(line: 76, column: 3, scope: !9156)
!9167 = !DILocation(line: 77, column: 1, scope: !9156)
!9168 = distinct !DISubprogram(name: "src_to_dest_lookup", scope: !529, file: !529, line: 100, type: !539, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !528, retainedNodes: !143)
!9169 = !DILocalVariable(name: "ino", arg: 1, scope: !9168, file: !529, line: 100, type: !227)
!9170 = !DILocation(line: 100, column: 27, scope: !9168)
!9171 = !DILocalVariable(name: "dev", arg: 2, scope: !9168, file: !529, line: 100, type: !230)
!9172 = !DILocation(line: 100, column: 38, scope: !9168)
!9173 = !DILocalVariable(name: "ent", scope: !9168, file: !529, line: 102, type: !534)
!9174 = !DILocation(line: 102, column: 22, scope: !9168)
!9175 = !DILocalVariable(name: "e", scope: !9168, file: !529, line: 103, type: !541)
!9176 = !DILocation(line: 103, column: 29, scope: !9168)
!9177 = !DILocation(line: 104, column: 16, scope: !9168)
!9178 = !DILocation(line: 104, column: 7, scope: !9168)
!9179 = !DILocation(line: 104, column: 14, scope: !9168)
!9180 = !DILocation(line: 105, column: 16, scope: !9168)
!9181 = !DILocation(line: 105, column: 7, scope: !9168)
!9182 = !DILocation(line: 105, column: 14, scope: !9168)
!9183 = !DILocation(line: 106, column: 20, scope: !9168)
!9184 = !DILocation(line: 106, column: 33, scope: !9168)
!9185 = !DILocation(line: 106, column: 7, scope: !9168)
!9186 = !DILocation(line: 106, column: 5, scope: !9168)
!9187 = !DILocation(line: 107, column: 10, scope: !9168)
!9188 = !DILocation(line: 107, column: 14, scope: !9168)
!9189 = !DILocation(line: 107, column: 17, scope: !9168)
!9190 = !DILocation(line: 107, column: 3, scope: !9168)
!9191 = distinct !DISubprogram(name: "remember_copied", scope: !529, file: !529, line: 115, type: !543, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !528, retainedNodes: !143)
!9192 = !DILocalVariable(name: "name", arg: 1, scope: !9191, file: !529, line: 115, type: !115)
!9193 = !DILocation(line: 115, column: 30, scope: !9191)
!9194 = !DILocalVariable(name: "ino", arg: 2, scope: !9191, file: !529, line: 115, type: !227)
!9195 = !DILocation(line: 115, column: 42, scope: !9191)
!9196 = !DILocalVariable(name: "dev", arg: 3, scope: !9191, file: !529, line: 115, type: !230)
!9197 = !DILocation(line: 115, column: 53, scope: !9191)
!9198 = !DILocalVariable(name: "ent", scope: !9191, file: !529, line: 117, type: !533)
!9199 = !DILocation(line: 117, column: 23, scope: !9191)
!9200 = !DILocalVariable(name: "ent_from_table", scope: !9191, file: !529, line: 118, type: !533)
!9201 = !DILocation(line: 118, column: 23, scope: !9191)
!9202 = !DILocation(line: 120, column: 9, scope: !9191)
!9203 = !DILocation(line: 120, column: 7, scope: !9191)
!9204 = !DILocation(line: 121, column: 24, scope: !9191)
!9205 = !DILocation(line: 121, column: 15, scope: !9191)
!9206 = !DILocation(line: 121, column: 3, scope: !9191)
!9207 = !DILocation(line: 121, column: 8, scope: !9191)
!9208 = !DILocation(line: 121, column: 13, scope: !9191)
!9209 = !DILocation(line: 122, column: 17, scope: !9191)
!9210 = !DILocation(line: 122, column: 3, scope: !9191)
!9211 = !DILocation(line: 122, column: 8, scope: !9191)
!9212 = !DILocation(line: 122, column: 15, scope: !9191)
!9213 = !DILocation(line: 123, column: 17, scope: !9191)
!9214 = !DILocation(line: 123, column: 3, scope: !9191)
!9215 = !DILocation(line: 123, column: 8, scope: !9191)
!9216 = !DILocation(line: 123, column: 15, scope: !9191)
!9217 = !DILocation(line: 125, column: 33, scope: !9191)
!9218 = !DILocation(line: 125, column: 46, scope: !9191)
!9219 = !DILocation(line: 125, column: 20, scope: !9191)
!9220 = !DILocation(line: 125, column: 18, scope: !9191)
!9221 = !DILocation(line: 126, column: 7, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9191, file: !529, line: 126, column: 7)
!9223 = !DILocation(line: 126, column: 22, scope: !9222)
!9224 = !DILocation(line: 126, column: 7, scope: !9191)
!9225 = !DILocation(line: 129, column: 7, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9222, file: !529, line: 127, column: 5)
!9227 = !DILocation(line: 135, column: 7, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9191, file: !529, line: 135, column: 7)
!9229 = !DILocation(line: 135, column: 25, scope: !9228)
!9230 = !DILocation(line: 135, column: 22, scope: !9228)
!9231 = !DILocation(line: 135, column: 7, scope: !9191)
!9232 = !DILocation(line: 137, column: 25, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9228, file: !529, line: 136, column: 5)
!9234 = !DILocation(line: 137, column: 7, scope: !9233)
!9235 = !DILocation(line: 138, column: 23, scope: !9233)
!9236 = !DILocation(line: 138, column: 39, scope: !9233)
!9237 = !DILocation(line: 138, column: 7, scope: !9233)
!9238 = !DILocation(line: 142, column: 3, scope: !9191)
!9239 = !DILocation(line: 143, column: 1, scope: !9191)
!9240 = distinct !DISubprogram(name: "hash_init", scope: !529, file: !529, line: 147, type: !134, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !528, retainedNodes: !143)
!9241 = !DILocation(line: 149, column: 17, scope: !9240)
!9242 = !DILocation(line: 149, column: 15, scope: !9240)
!9243 = !DILocation(line: 153, column: 7, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9240, file: !529, line: 153, column: 7)
!9245 = !DILocation(line: 153, column: 19, scope: !9244)
!9246 = !DILocation(line: 153, column: 7, scope: !9240)
!9247 = !DILocation(line: 154, column: 5, scope: !9244)
!9248 = !DILocation(line: 155, column: 1, scope: !9240)
!9249 = distinct !DISubprogram(name: "src_to_dest_hash", scope: !529, file: !529, line: 51, type: !547, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !528, retainedNodes: !143)
!9250 = !DILocalVariable(name: "x", arg: 1, scope: !9249, file: !529, line: 51, type: !425)
!9251 = !DILocation(line: 51, column: 31, scope: !9249)
!9252 = !DILocalVariable(name: "table_size", arg: 2, scope: !9249, file: !529, line: 51, type: !55)
!9253 = !DILocation(line: 51, column: 41, scope: !9249)
!9254 = !DILocalVariable(name: "p", scope: !9249, file: !529, line: 53, type: !541)
!9255 = !DILocation(line: 53, column: 29, scope: !9249)
!9256 = !DILocation(line: 53, column: 33, scope: !9249)
!9257 = !DILocation(line: 58, column: 22, scope: !9249)
!9258 = !DILocation(line: 58, column: 25, scope: !9249)
!9259 = !DILocation(line: 58, column: 34, scope: !9249)
!9260 = !DILocation(line: 58, column: 32, scope: !9249)
!9261 = !DILocation(line: 58, column: 3, scope: !9249)
!9262 = distinct !DISubprogram(name: "src_to_dest_compare", scope: !529, file: !529, line: 64, type: !549, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !528, retainedNodes: !143)
!9263 = !DILocalVariable(name: "x", arg: 1, scope: !9262, file: !529, line: 64, type: !425)
!9264 = !DILocation(line: 64, column: 34, scope: !9262)
!9265 = !DILocalVariable(name: "y", arg: 2, scope: !9262, file: !529, line: 64, type: !425)
!9266 = !DILocation(line: 64, column: 49, scope: !9262)
!9267 = !DILocalVariable(name: "a", scope: !9262, file: !529, line: 66, type: !541)
!9268 = !DILocation(line: 66, column: 29, scope: !9262)
!9269 = !DILocation(line: 66, column: 33, scope: !9262)
!9270 = !DILocalVariable(name: "b", scope: !9262, file: !529, line: 67, type: !541)
!9271 = !DILocation(line: 67, column: 29, scope: !9262)
!9272 = !DILocation(line: 67, column: 33, scope: !9262)
!9273 = !DILocation(line: 68, column: 10, scope: !9262)
!9274 = !DILocation(line: 0, scope: !9262)
!9275 = !DILocation(line: 68, column: 3, scope: !9262)
!9276 = distinct !DISubprogram(name: "forget_all", scope: !529, file: !529, line: 161, type: !134, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !528, retainedNodes: !143)
!9277 = !DILocation(line: 163, column: 14, scope: !9276)
!9278 = !DILocation(line: 163, column: 3, scope: !9276)
!9279 = !DILocation(line: 164, column: 1, scope: !9276)
!9280 = distinct !DISubprogram(name: "extent_scan_init", scope: !1526, file: !1526, line: 69, type: !1529, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1525, retainedNodes: !143)
!9281 = !DILocalVariable(name: "src_fd", arg: 1, scope: !9280, file: !1526, line: 69, type: !7)
!9282 = !DILocation(line: 69, column: 23, scope: !9280)
!9283 = !DILocalVariable(name: "scan", arg: 2, scope: !9280, file: !1526, line: 69, type: !1531)
!9284 = !DILocation(line: 69, column: 51, scope: !9280)
!9285 = !DILocation(line: 71, column: 14, scope: !9280)
!9286 = !DILocation(line: 71, column: 3, scope: !9280)
!9287 = !DILocation(line: 71, column: 9, scope: !9280)
!9288 = !DILocation(line: 71, column: 12, scope: !9280)
!9289 = !{!8404, !2983, i64 0}
!9290 = !DILocation(line: 72, column: 3, scope: !9280)
!9291 = !DILocation(line: 72, column: 9, scope: !9280)
!9292 = !DILocation(line: 72, column: 18, scope: !9280)
!9293 = !DILocation(line: 73, column: 3, scope: !9280)
!9294 = !DILocation(line: 73, column: 9, scope: !9280)
!9295 = !DILocation(line: 73, column: 18, scope: !9280)
!9296 = !DILocation(line: 74, column: 3, scope: !9280)
!9297 = !DILocation(line: 74, column: 9, scope: !9280)
!9298 = !DILocation(line: 74, column: 20, scope: !9280)
!9299 = !{!8404, !3180, i64 8}
!9300 = !DILocation(line: 75, column: 3, scope: !9280)
!9301 = !DILocation(line: 75, column: 9, scope: !9280)
!9302 = !DILocation(line: 75, column: 29, scope: !9280)
!9303 = !DILocation(line: 76, column: 3, scope: !9280)
!9304 = !DILocation(line: 76, column: 9, scope: !9280)
!9305 = !DILocation(line: 76, column: 26, scope: !9280)
!9306 = !DILocation(line: 77, column: 20, scope: !9280)
!9307 = !DILocation(line: 77, column: 3, scope: !9280)
!9308 = !DILocation(line: 77, column: 9, scope: !9280)
!9309 = !DILocation(line: 77, column: 18, scope: !9280)
!9310 = !{!8404, !2983, i64 16}
!9311 = !DILocation(line: 78, column: 1, scope: !9280)
!9312 = distinct !DISubprogram(name: "extent_need_sync", scope: !1526, file: !1526, line: 33, type: !1245, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1525, retainedNodes: !143)
!9313 = !DILocation(line: 39, column: 3, scope: !9312)
!9314 = distinct !DISubprogram(name: "extent_scan_read", scope: !1526, file: !1526, line: 87, type: !1547, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1525, retainedNodes: !143)
!9315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9314, file: !1526, line: 94, size: 32768, elements: !9316)
!9316 = !{!9317, !9318}
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !9315, file: !1526, line: 94, baseType: !1550, size: 256)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !9315, file: !1526, line: 94, baseType: !2814, size: 32768)
!9319 = !DILocalVariable(name: "scan", arg: 1, scope: !9314, file: !1526, line: 87, type: !1531)
!9320 = !DILocation(line: 87, column: 39, scope: !9314)
!9321 = !DILocalVariable(name: "si", scope: !9314, file: !1526, line: 89, type: !70)
!9322 = !DILocation(line: 89, column: 16, scope: !9314)
!9323 = !DILocalVariable(name: "last_ei", scope: !9314, file: !1526, line: 90, type: !1541)
!9324 = !DILocation(line: 90, column: 23, scope: !9314)
!9325 = !DILocation(line: 90, column: 33, scope: !9314)
!9326 = !DILocation(line: 90, column: 39, scope: !9314)
!9327 = !DILocation(line: 92, column: 3, scope: !9314)
!9328 = !DILocalVariable(name: "fiemap_buf", scope: !9329, file: !1526, line: 94, type: !9315)
!9329 = distinct !DILexicalBlock(scope: !9314, file: !1526, line: 93, column: 5)
!9330 = !DILocation(line: 94, column: 48, scope: !9329)
!9331 = !DILocalVariable(name: "fiemap", scope: !9329, file: !1526, line: 95, type: !1549)
!9332 = !DILocation(line: 95, column: 22, scope: !9329)
!9333 = !DILocation(line: 95, column: 43, scope: !9329)
!9334 = !DILocalVariable(name: "fm_extents", scope: !9329, file: !1526, line: 96, type: !1578)
!9335 = !DILocation(line: 96, column: 29, scope: !9329)
!9336 = !DILocation(line: 96, column: 43, scope: !9329)
!9337 = !DILocation(line: 96, column: 51, scope: !9329)
!9338 = !DILocation(line: 103, column: 7, scope: !9329)
!9339 = !DILocation(line: 105, column: 26, scope: !9329)
!9340 = !DILocation(line: 105, column: 32, scope: !9329)
!9341 = !DILocation(line: 105, column: 7, scope: !9329)
!9342 = !DILocation(line: 105, column: 15, scope: !9329)
!9343 = !DILocation(line: 105, column: 24, scope: !9329)
!9344 = !{!9345, !3180, i64 0}
!9345 = !{!"fiemap", !3180, i64 0, !3180, i64 8, !2983, i64 16, !2983, i64 20, !2983, i64 24, !2983, i64 28, !2984, i64 32}
!9346 = !DILocation(line: 106, column: 26, scope: !9329)
!9347 = !DILocation(line: 106, column: 32, scope: !9329)
!9348 = !DILocation(line: 106, column: 7, scope: !9329)
!9349 = !DILocation(line: 106, column: 15, scope: !9329)
!9350 = !DILocation(line: 106, column: 24, scope: !9329)
!9351 = !{!9345, !2983, i64 16}
!9352 = !DILocation(line: 107, column: 7, scope: !9329)
!9353 = !DILocation(line: 107, column: 15, scope: !9329)
!9354 = !DILocation(line: 107, column: 31, scope: !9329)
!9355 = !{!9345, !2983, i64 24}
!9356 = !DILocation(line: 108, column: 47, scope: !9329)
!9357 = !DILocation(line: 108, column: 53, scope: !9329)
!9358 = !DILocation(line: 108, column: 45, scope: !9329)
!9359 = !DILocation(line: 108, column: 7, scope: !9329)
!9360 = !DILocation(line: 108, column: 15, scope: !9329)
!9361 = !DILocation(line: 108, column: 25, scope: !9329)
!9362 = !{!9345, !3180, i64 8}
!9363 = !DILocation(line: 112, column: 18, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9329, file: !1526, line: 112, column: 11)
!9365 = !DILocation(line: 112, column: 24, scope: !9364)
!9366 = !DILocation(line: 112, column: 43, scope: !9364)
!9367 = !DILocation(line: 112, column: 11, scope: !9364)
!9368 = !DILocation(line: 112, column: 51, scope: !9364)
!9369 = !DILocation(line: 112, column: 11, scope: !9329)
!9370 = !DILocation(line: 114, column: 15, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9372, file: !1526, line: 114, column: 15)
!9372 = distinct !DILexicalBlock(scope: !9364, file: !1526, line: 113, column: 9)
!9373 = !DILocation(line: 114, column: 21, scope: !9371)
!9374 = !DILocation(line: 114, column: 32, scope: !9371)
!9375 = !DILocation(line: 114, column: 15, scope: !9372)
!9376 = !DILocation(line: 115, column: 13, scope: !9371)
!9377 = !DILocation(line: 115, column: 19, scope: !9371)
!9378 = !DILocation(line: 115, column: 39, scope: !9371)
!9379 = !DILocation(line: 116, column: 11, scope: !9372)
!9380 = !DILocation(line: 120, column: 11, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9329, file: !1526, line: 120, column: 11)
!9382 = !DILocation(line: 120, column: 19, scope: !9381)
!9383 = !{!9345, !2983, i64 20}
!9384 = !DILocation(line: 120, column: 37, scope: !9381)
!9385 = !DILocation(line: 120, column: 11, scope: !9329)
!9386 = !DILocation(line: 122, column: 11, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9381, file: !1526, line: 121, column: 9)
!9388 = !DILocation(line: 122, column: 17, scope: !9387)
!9389 = !DILocation(line: 122, column: 34, scope: !9387)
!9390 = !DILocation(line: 123, column: 18, scope: !9387)
!9391 = !DILocation(line: 123, column: 24, scope: !9387)
!9392 = !DILocation(line: 123, column: 35, scope: !9387)
!9393 = !DILocation(line: 123, column: 11, scope: !9387)
!9394 = !DILocation(line: 126, column: 7, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9396, file: !1526, line: 126, column: 7)
!9396 = distinct !DILexicalBlock(scope: !9329, file: !1526, line: 126, column: 7)
!9397 = !DILocation(line: 126, column: 7, scope: !9396)
!9398 = !DILocation(line: 127, column: 25, scope: !9329)
!9399 = !DILocation(line: 127, column: 33, scope: !9329)
!9400 = !DILocation(line: 127, column: 7, scope: !9329)
!9401 = !DILocation(line: 127, column: 13, scope: !9329)
!9402 = !DILocation(line: 127, column: 22, scope: !9329)
!9403 = !DILocalVariable(name: "prev_idx", scope: !9404, file: !1526, line: 131, type: !55)
!9404 = distinct !DILexicalBlock(scope: !9329, file: !1526, line: 128, column: 7)
!9405 = !DILocation(line: 131, column: 16, scope: !9404)
!9406 = !DILocation(line: 131, column: 27, scope: !9404)
!9407 = !DILocation(line: 131, column: 37, scope: !9404)
!9408 = !DILocation(line: 131, column: 43, scope: !9404)
!9409 = !DILocation(line: 131, column: 35, scope: !9404)
!9410 = !DILocation(line: 132, column: 37, scope: !9404)
!9411 = !DILocation(line: 132, column: 43, scope: !9404)
!9412 = !DILocation(line: 132, column: 53, scope: !9404)
!9413 = !DILocation(line: 132, column: 59, scope: !9404)
!9414 = !DILocation(line: 132, column: 26, scope: !9404)
!9415 = !DILocation(line: 132, column: 9, scope: !9404)
!9416 = !DILocation(line: 132, column: 15, scope: !9404)
!9417 = !DILocation(line: 132, column: 24, scope: !9404)
!9418 = !DILocation(line: 134, column: 19, scope: !9404)
!9419 = !DILocation(line: 134, column: 25, scope: !9404)
!9420 = !DILocation(line: 134, column: 36, scope: !9404)
!9421 = !DILocation(line: 134, column: 34, scope: !9404)
!9422 = !DILocation(line: 134, column: 17, scope: !9404)
!9423 = !DILocalVariable(name: "i", scope: !9329, file: !1526, line: 137, type: !70)
!9424 = !DILocation(line: 137, column: 20, scope: !9329)
!9425 = !DILocation(line: 138, column: 14, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9329, file: !1526, line: 138, column: 7)
!9427 = !DILocation(line: 138, column: 12, scope: !9426)
!9428 = !DILocation(line: 138, column: 19, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9426, file: !1526, line: 138, column: 7)
!9430 = !DILocation(line: 138, column: 23, scope: !9429)
!9431 = !DILocation(line: 138, column: 31, scope: !9429)
!9432 = !DILocation(line: 138, column: 21, scope: !9429)
!9433 = !DILocation(line: 138, column: 7, scope: !9426)
!9434 = !DILocation(line: 140, column: 11, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9436, file: !1526, line: 140, column: 11)
!9436 = distinct !DILexicalBlock(scope: !9437, file: !1526, line: 140, column: 11)
!9437 = distinct !DILexicalBlock(scope: !9429, file: !1526, line: 139, column: 9)
!9438 = !{!9439, !3180, i64 0}
!9439 = !{!"fiemap_extent", !3180, i64 0, !3180, i64 8, !3180, i64 16, !2984, i64 24, !2983, i64 40, !2984, i64 44}
!9440 = !{!9439, !3180, i64 16}
!9441 = !DILocation(line: 140, column: 11, scope: !9436)
!9442 = !DILocation(line: 145, column: 15, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9437, file: !1526, line: 145, column: 15)
!9444 = !DILocation(line: 145, column: 18, scope: !9443)
!9445 = !DILocation(line: 145, column: 21, scope: !9443)
!9446 = !DILocation(line: 145, column: 30, scope: !9443)
!9447 = !{!8453, !2983, i64 16}
!9448 = !DILocation(line: 146, column: 19, scope: !9443)
!9449 = !DILocation(line: 146, column: 30, scope: !9443)
!9450 = !DILocation(line: 146, column: 33, scope: !9443)
!9451 = !{!9439, !2983, i64 40}
!9452 = !DILocation(line: 146, column: 42, scope: !9443)
!9453 = !DILocation(line: 146, column: 15, scope: !9443)
!9454 = !DILocation(line: 147, column: 15, scope: !9443)
!9455 = !DILocation(line: 147, column: 19, scope: !9443)
!9456 = !DILocation(line: 147, column: 28, scope: !9443)
!9457 = !DILocation(line: 147, column: 42, scope: !9443)
!9458 = !DILocation(line: 147, column: 51, scope: !9443)
!9459 = !DILocation(line: 147, column: 40, scope: !9443)
!9460 = !DILocation(line: 148, column: 22, scope: !9443)
!9461 = !DILocation(line: 148, column: 33, scope: !9443)
!9462 = !DILocation(line: 148, column: 36, scope: !9443)
!9463 = !DILocation(line: 148, column: 19, scope: !9443)
!9464 = !DILocation(line: 145, column: 15, scope: !9437)
!9465 = !DILocation(line: 151, column: 38, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9443, file: !1526, line: 149, column: 13)
!9467 = !DILocation(line: 151, column: 49, scope: !9466)
!9468 = !DILocation(line: 151, column: 52, scope: !9466)
!9469 = !DILocation(line: 151, column: 15, scope: !9466)
!9470 = !DILocation(line: 151, column: 24, scope: !9466)
!9471 = !DILocation(line: 151, column: 35, scope: !9466)
!9472 = !DILocation(line: 153, column: 36, scope: !9466)
!9473 = !DILocation(line: 153, column: 47, scope: !9466)
!9474 = !DILocation(line: 153, column: 50, scope: !9466)
!9475 = !DILocation(line: 153, column: 15, scope: !9466)
!9476 = !DILocation(line: 153, column: 24, scope: !9466)
!9477 = !DILocation(line: 153, column: 34, scope: !9466)
!9478 = !DILocation(line: 154, column: 13, scope: !9466)
!9479 = !DILocation(line: 155, column: 21, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9443, file: !1526, line: 155, column: 20)
!9481 = !DILocation(line: 155, column: 24, scope: !9480)
!9482 = !DILocation(line: 155, column: 29, scope: !9480)
!9483 = !DILocation(line: 155, column: 32, scope: !9480)
!9484 = !DILocation(line: 155, column: 38, scope: !9480)
!9485 = !DILocation(line: 155, column: 51, scope: !9480)
!9486 = !DILocation(line: 155, column: 62, scope: !9480)
!9487 = !DILocation(line: 155, column: 65, scope: !9480)
!9488 = !DILocation(line: 155, column: 49, scope: !9480)
!9489 = !DILocation(line: 156, column: 20, scope: !9480)
!9490 = !DILocation(line: 156, column: 24, scope: !9480)
!9491 = !DILocation(line: 156, column: 27, scope: !9480)
!9492 = !DILocation(line: 156, column: 31, scope: !9480)
!9493 = !DILocation(line: 156, column: 40, scope: !9480)
!9494 = !DILocation(line: 156, column: 54, scope: !9480)
!9495 = !DILocation(line: 156, column: 63, scope: !9480)
!9496 = !DILocation(line: 156, column: 52, scope: !9480)
!9497 = !DILocation(line: 157, column: 33, scope: !9480)
!9498 = !DILocation(line: 157, column: 44, scope: !9480)
!9499 = !DILocation(line: 157, column: 47, scope: !9480)
!9500 = !DILocation(line: 157, column: 31, scope: !9480)
!9501 = !DILocation(line: 155, column: 20, scope: !9443)
!9502 = !DILocalVariable(name: "new_logical", scope: !9503, file: !1526, line: 163, type: !1554)
!9503 = distinct !DILexicalBlock(scope: !9480, file: !1526, line: 158, column: 13)
!9504 = !DILocation(line: 163, column: 24, scope: !9503)
!9505 = !DILocalVariable(name: "length_adjust", scope: !9503, file: !1526, line: 164, type: !1554)
!9506 = !DILocation(line: 164, column: 24, scope: !9503)
!9507 = !DILocation(line: 165, column: 19, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9503, file: !1526, line: 165, column: 19)
!9509 = !DILocation(line: 165, column: 22, scope: !9508)
!9510 = !DILocation(line: 165, column: 19, scope: !9503)
!9511 = !DILocation(line: 166, column: 31, scope: !9508)
!9512 = !DILocation(line: 166, column: 37, scope: !9508)
!9513 = !DILocation(line: 166, column: 29, scope: !9508)
!9514 = !DILocation(line: 166, column: 17, scope: !9508)
!9515 = !DILocation(line: 171, column: 33, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9508, file: !1526, line: 168, column: 17)
!9517 = !DILocation(line: 171, column: 42, scope: !9516)
!9518 = !DILocation(line: 171, column: 56, scope: !9516)
!9519 = !DILocation(line: 171, column: 65, scope: !9516)
!9520 = !DILocation(line: 171, column: 54, scope: !9516)
!9521 = !DILocation(line: 171, column: 31, scope: !9516)
!9522 = !DILocation(line: 173, column: 31, scope: !9503)
!9523 = !DILocation(line: 173, column: 45, scope: !9503)
!9524 = !DILocation(line: 173, column: 56, scope: !9503)
!9525 = !DILocation(line: 173, column: 59, scope: !9503)
!9526 = !DILocation(line: 173, column: 43, scope: !9503)
!9527 = !DILocation(line: 173, column: 29, scope: !9503)
!9528 = !DILocation(line: 175, column: 19, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9503, file: !1526, line: 175, column: 19)
!9530 = !DILocation(line: 175, column: 35, scope: !9529)
!9531 = !DILocation(line: 175, column: 46, scope: !9529)
!9532 = !DILocation(line: 175, column: 49, scope: !9529)
!9533 = !DILocation(line: 175, column: 33, scope: !9529)
!9534 = !DILocation(line: 175, column: 19, scope: !9503)
!9535 = !DILocation(line: 177, column: 23, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9537, file: !1526, line: 177, column: 23)
!9537 = distinct !DILexicalBlock(scope: !9529, file: !1526, line: 176, column: 17)
!9538 = !DILocation(line: 177, column: 29, scope: !9536)
!9539 = !DILocation(line: 177, column: 40, scope: !9536)
!9540 = !DILocation(line: 177, column: 23, scope: !9537)
!9541 = !DILocation(line: 178, column: 21, scope: !9536)
!9542 = !DILocation(line: 178, column: 27, scope: !9536)
!9543 = !DILocation(line: 178, column: 47, scope: !9536)
!9544 = !DILocation(line: 179, column: 19, scope: !9537)
!9545 = !DILocation(line: 181, column: 42, scope: !9503)
!9546 = !DILocation(line: 181, column: 15, scope: !9503)
!9547 = !DILocation(line: 181, column: 26, scope: !9503)
!9548 = !DILocation(line: 181, column: 29, scope: !9503)
!9549 = !DILocation(line: 181, column: 40, scope: !9503)
!9550 = !DILocation(line: 182, column: 42, scope: !9503)
!9551 = !DILocation(line: 182, column: 15, scope: !9503)
!9552 = !DILocation(line: 182, column: 26, scope: !9503)
!9553 = !DILocation(line: 182, column: 29, scope: !9503)
!9554 = !DILocation(line: 182, column: 39, scope: !9503)
!9555 = !DILocation(line: 184, column: 16, scope: !9503)
!9556 = !DILocation(line: 185, column: 15, scope: !9503)
!9557 = !DILocation(line: 189, column: 25, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9480, file: !1526, line: 188, column: 13)
!9559 = !DILocation(line: 189, column: 31, scope: !9558)
!9560 = !DILocation(line: 189, column: 42, scope: !9558)
!9561 = !DILocation(line: 189, column: 40, scope: !9558)
!9562 = !DILocation(line: 189, column: 23, scope: !9558)
!9563 = !DILocation(line: 190, column: 38, scope: !9558)
!9564 = !DILocation(line: 190, column: 49, scope: !9558)
!9565 = !DILocation(line: 190, column: 52, scope: !9558)
!9566 = !DILocation(line: 190, column: 15, scope: !9558)
!9567 = !DILocation(line: 190, column: 24, scope: !9558)
!9568 = !DILocation(line: 190, column: 36, scope: !9558)
!9569 = !DILocation(line: 191, column: 37, scope: !9558)
!9570 = !DILocation(line: 191, column: 48, scope: !9558)
!9571 = !DILocation(line: 191, column: 51, scope: !9558)
!9572 = !DILocation(line: 191, column: 15, scope: !9558)
!9573 = !DILocation(line: 191, column: 24, scope: !9558)
!9574 = !DILocation(line: 191, column: 35, scope: !9558)
!9575 = !DILocation(line: 192, column: 36, scope: !9558)
!9576 = !DILocation(line: 192, column: 47, scope: !9558)
!9577 = !DILocation(line: 192, column: 50, scope: !9558)
!9578 = !DILocation(line: 192, column: 15, scope: !9558)
!9579 = !DILocation(line: 192, column: 24, scope: !9558)
!9580 = !DILocation(line: 192, column: 34, scope: !9558)
!9581 = !DILocation(line: 193, column: 17, scope: !9558)
!9582 = !DILocation(line: 195, column: 9, scope: !9437)
!9583 = !DILocation(line: 138, column: 51, scope: !9429)
!9584 = !DILocation(line: 138, column: 7, scope: !9429)
!9585 = distinct !{!9585, !9433, !9586}
!9586 = !DILocation(line: 195, column: 9, scope: !9426)
!9587 = !DILocation(line: 197, column: 11, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9329, file: !1526, line: 197, column: 11)
!9589 = !DILocation(line: 197, column: 20, scope: !9588)
!9590 = !DILocation(line: 197, column: 30, scope: !9588)
!9591 = !DILocation(line: 197, column: 11, scope: !9329)
!9592 = !DILocation(line: 198, column: 9, scope: !9588)
!9593 = !DILocation(line: 198, column: 15, scope: !9588)
!9594 = !DILocation(line: 198, column: 32, scope: !9588)
!9595 = !DILocation(line: 202, column: 11, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9329, file: !1526, line: 202, column: 11)
!9597 = !DILocation(line: 202, column: 14, scope: !9596)
!9598 = !DILocation(line: 202, column: 22, scope: !9596)
!9599 = !DILocation(line: 202, column: 26, scope: !9596)
!9600 = !DILocation(line: 202, column: 32, scope: !9596)
!9601 = !DILocation(line: 202, column: 11, scope: !9329)
!9602 = !DILocation(line: 203, column: 19, scope: !9596)
!9603 = !DILocation(line: 203, column: 25, scope: !9596)
!9604 = !DILocation(line: 203, column: 36, scope: !9596)
!9605 = !DILocation(line: 203, column: 34, scope: !9596)
!9606 = !DILocation(line: 203, column: 41, scope: !9596)
!9607 = !DILocation(line: 203, column: 17, scope: !9596)
!9608 = !DILocation(line: 203, column: 9, scope: !9596)
!9609 = !DILocation(line: 206, column: 24, scope: !9329)
!9610 = !DILocation(line: 206, column: 7, scope: !9329)
!9611 = !DILocation(line: 206, column: 13, scope: !9329)
!9612 = !DILocation(line: 206, column: 22, scope: !9329)
!9613 = !DILocation(line: 208, column: 11, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9329, file: !1526, line: 208, column: 11)
!9615 = !DILocation(line: 208, column: 17, scope: !9614)
!9616 = !DILocation(line: 208, column: 11, scope: !9329)
!9617 = !DILocation(line: 209, column: 9, scope: !9614)
!9618 = !DILocation(line: 211, column: 28, scope: !9614)
!9619 = !DILocation(line: 211, column: 37, scope: !9614)
!9620 = !DILocation(line: 211, column: 51, scope: !9614)
!9621 = !DILocation(line: 211, column: 60, scope: !9614)
!9622 = !DILocation(line: 211, column: 49, scope: !9614)
!9623 = !DILocation(line: 211, column: 9, scope: !9614)
!9624 = !DILocation(line: 211, column: 15, scope: !9614)
!9625 = !DILocation(line: 211, column: 26, scope: !9614)
!9626 = !DILocation(line: 213, column: 11, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9329, file: !1526, line: 213, column: 11)
!9628 = !DILocation(line: 213, column: 14, scope: !9627)
!9629 = !DILocation(line: 213, column: 11, scope: !9329)
!9630 = !DILocation(line: 214, column: 9, scope: !9627)
!9631 = distinct !{!9631, !9327, !9632}
!9632 = !DILocation(line: 215, column: 5, scope: !9314)
!9633 = !DILocation(line: 217, column: 3, scope: !9314)
!9634 = !DILocation(line: 218, column: 1, scope: !9314)
!9635 = distinct !DISubprogram(name: "force_linkat", scope: !555, file: !555, line: 95, type: !557, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !554, retainedNodes: !143)
!9636 = !DILocalVariable(name: "srcdir", arg: 1, scope: !9635, file: !555, line: 95, type: !7)
!9637 = !DILocation(line: 95, column: 19, scope: !9635)
!9638 = !DILocalVariable(name: "srcname", arg: 2, scope: !9635, file: !555, line: 95, type: !115)
!9639 = !DILocation(line: 95, column: 39, scope: !9635)
!9640 = !DILocalVariable(name: "dstdir", arg: 3, scope: !9635, file: !555, line: 96, type: !7)
!9641 = !DILocation(line: 96, column: 19, scope: !9635)
!9642 = !DILocalVariable(name: "dstname", arg: 4, scope: !9635, file: !555, line: 96, type: !115)
!9643 = !DILocation(line: 96, column: 39, scope: !9635)
!9644 = !DILocalVariable(name: "flags", arg: 5, scope: !9635, file: !555, line: 96, type: !7)
!9645 = !DILocation(line: 96, column: 52, scope: !9635)
!9646 = !DILocalVariable(name: "force", arg: 6, scope: !9635, file: !555, line: 96, type: !120)
!9647 = !DILocation(line: 96, column: 64, scope: !9635)
!9648 = !DILocalVariable(name: "linkat_errno", arg: 7, scope: !9635, file: !555, line: 97, type: !7)
!9649 = !DILocation(line: 97, column: 19, scope: !9635)
!9650 = !DILocation(line: 99, column: 7, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9635, file: !555, line: 99, column: 7)
!9652 = !DILocation(line: 99, column: 20, scope: !9651)
!9653 = !DILocation(line: 99, column: 7, scope: !9635)
!9654 = !DILocation(line: 100, column: 29, scope: !9651)
!9655 = !DILocation(line: 100, column: 37, scope: !9651)
!9656 = !DILocation(line: 100, column: 46, scope: !9651)
!9657 = !DILocation(line: 100, column: 54, scope: !9651)
!9658 = !DILocation(line: 100, column: 63, scope: !9651)
!9659 = !DILocation(line: 100, column: 21, scope: !9651)
!9660 = !DILocation(line: 100, column: 70, scope: !9651)
!9661 = !DILocation(line: 101, column: 27, scope: !9651)
!9662 = !DILocation(line: 100, column: 18, scope: !9651)
!9663 = !DILocation(line: 100, column: 5, scope: !9651)
!9664 = !DILocation(line: 102, column: 8, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9635, file: !555, line: 102, column: 7)
!9666 = !DILocation(line: 102, column: 14, scope: !9665)
!9667 = !DILocation(line: 102, column: 17, scope: !9665)
!9668 = !DILocation(line: 102, column: 30, scope: !9665)
!9669 = !DILocation(line: 102, column: 7, scope: !9635)
!9670 = !DILocation(line: 103, column: 12, scope: !9665)
!9671 = !DILocation(line: 103, column: 5, scope: !9665)
!9672 = !DILocalVariable(name: "buf", scope: !9635, file: !555, line: 105, type: !559)
!9673 = !DILocation(line: 105, column: 8, scope: !9635)
!9674 = !DILocalVariable(name: "dsttmp", scope: !9635, file: !555, line: 106, type: !9)
!9675 = !DILocation(line: 106, column: 9, scope: !9635)
!9676 = !DILocation(line: 106, column: 36, scope: !9635)
!9677 = !DILocation(line: 106, column: 45, scope: !9635)
!9678 = !DILocation(line: 106, column: 18, scope: !9635)
!9679 = !DILocation(line: 107, column: 9, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9635, file: !555, line: 107, column: 7)
!9681 = !DILocation(line: 107, column: 7, scope: !9635)
!9682 = !DILocation(line: 108, column: 12, scope: !9680)
!9683 = !DILocation(line: 108, column: 5, scope: !9680)
!9684 = !DILocalVariable(name: "arg", scope: !9635, file: !555, line: 109, type: !573)
!9685 = !DILocation(line: 109, column: 19, scope: !9635)
!9686 = !DILocation(line: 109, column: 25, scope: !9635)
!9687 = !DILocation(line: 109, column: 27, scope: !9635)
!9688 = !{!9689, !2983, i64 0}
!9689 = !{!"link_arg", !2983, i64 0, !2996, i64 8, !2983, i64 16, !2983, i64 20}
!9690 = !DILocation(line: 109, column: 35, scope: !9635)
!9691 = !{!9689, !2996, i64 8}
!9692 = !DILocation(line: 109, column: 44, scope: !9635)
!9693 = !{!9689, !2983, i64 16}
!9694 = !DILocation(line: 109, column: 52, scope: !9635)
!9695 = !{!9689, !2983, i64 20}
!9696 = !DILocalVariable(name: "err", scope: !9635, file: !555, line: 110, type: !7)
!9697 = !DILocation(line: 110, column: 7, scope: !9635)
!9698 = !DILocation(line: 112, column: 25, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9635, file: !555, line: 112, column: 7)
!9700 = !DILocation(line: 112, column: 36, scope: !9699)
!9701 = !DILocation(line: 112, column: 7, scope: !9699)
!9702 = !DILocation(line: 112, column: 66, scope: !9699)
!9703 = !DILocation(line: 112, column: 7, scope: !9635)
!9704 = !DILocation(line: 113, column: 11, scope: !9699)
!9705 = !DILocation(line: 113, column: 9, scope: !9699)
!9706 = !DILocation(line: 113, column: 5, scope: !9699)
!9707 = !DILocation(line: 116, column: 23, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9699, file: !555, line: 115, column: 5)
!9709 = !DILocation(line: 116, column: 31, scope: !9708)
!9710 = !DILocation(line: 116, column: 39, scope: !9708)
!9711 = !DILocation(line: 116, column: 47, scope: !9708)
!9712 = !DILocation(line: 116, column: 13, scope: !9708)
!9713 = !DILocation(line: 116, column: 56, scope: !9708)
!9714 = !DILocation(line: 116, column: 68, scope: !9708)
!9715 = !DILocation(line: 116, column: 11, scope: !9708)
!9716 = !DILocation(line: 120, column: 17, scope: !9708)
!9717 = !DILocation(line: 120, column: 25, scope: !9708)
!9718 = !DILocation(line: 120, column: 7, scope: !9708)
!9719 = !DILocation(line: 123, column: 7, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9635, file: !555, line: 123, column: 7)
!9721 = !DILocation(line: 123, column: 17, scope: !9720)
!9722 = !DILocation(line: 123, column: 14, scope: !9720)
!9723 = !DILocation(line: 123, column: 7, scope: !9635)
!9724 = !DILocation(line: 124, column: 11, scope: !9720)
!9725 = !DILocation(line: 124, column: 5, scope: !9720)
!9726 = !DILocation(line: 125, column: 10, scope: !9635)
!9727 = !DILocation(line: 125, column: 3, scope: !9635)
!9728 = !DILocation(line: 126, column: 1, scope: !9635)
!9729 = distinct !DISubprogram(name: "samedir_template", scope: !555, file: !555, line: 51, type: !564, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !143)
!9730 = !DILocalVariable(name: "dstname", arg: 1, scope: !9729, file: !555, line: 51, type: !115)
!9731 = !DILocation(line: 51, column: 31, scope: !9729)
!9732 = !DILocalVariable(name: "buf", arg: 2, scope: !9729, file: !555, line: 51, type: !9)
!9733 = !DILocation(line: 51, column: 45, scope: !9729)
!9734 = !DILocalVariable(name: "dstdirlen", scope: !9729, file: !555, line: 53, type: !566)
!9735 = !DILocation(line: 53, column: 13, scope: !9729)
!9736 = !DILocation(line: 53, column: 41, scope: !9729)
!9737 = !DILocation(line: 53, column: 25, scope: !9729)
!9738 = !DILocation(line: 53, column: 52, scope: !9729)
!9739 = !DILocation(line: 53, column: 50, scope: !9729)
!9740 = !DILocalVariable(name: "dsttmpsize", scope: !9729, file: !555, line: 54, type: !55)
!9741 = !DILocation(line: 54, column: 10, scope: !9729)
!9742 = !DILocation(line: 54, column: 23, scope: !9729)
!9743 = !DILocation(line: 54, column: 33, scope: !9729)
!9744 = !DILocalVariable(name: "dsttmp", scope: !9729, file: !555, line: 55, type: !9)
!9745 = !DILocation(line: 55, column: 9, scope: !9729)
!9746 = !DILocation(line: 56, column: 7, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9729, file: !555, line: 56, column: 7)
!9748 = !DILocation(line: 56, column: 18, scope: !9747)
!9749 = !DILocation(line: 56, column: 7, scope: !9729)
!9750 = !DILocation(line: 57, column: 14, scope: !9747)
!9751 = !DILocation(line: 57, column: 12, scope: !9747)
!9752 = !DILocation(line: 57, column: 5, scope: !9747)
!9753 = !DILocation(line: 60, column: 24, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9747, file: !555, line: 59, column: 5)
!9755 = !DILocation(line: 60, column: 16, scope: !9754)
!9756 = !DILocation(line: 60, column: 14, scope: !9754)
!9757 = !DILocation(line: 61, column: 12, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9754, file: !555, line: 61, column: 11)
!9759 = !DILocation(line: 61, column: 11, scope: !9754)
!9760 = !DILocation(line: 62, column: 16, scope: !9758)
!9761 = !DILocation(line: 62, column: 9, scope: !9758)
!9762 = !DILocation(line: 64, column: 20, scope: !9729)
!9763 = !DILocation(line: 64, column: 28, scope: !9729)
!9764 = !DILocation(line: 64, column: 37, scope: !9729)
!9765 = !DILocation(line: 64, column: 11, scope: !9729)
!9766 = !DILocation(line: 64, column: 3, scope: !9729)
!9767 = !DILocation(line: 65, column: 10, scope: !9729)
!9768 = !DILocation(line: 65, column: 3, scope: !9729)
!9769 = !DILocation(line: 66, column: 1, scope: !9729)
!9770 = distinct !DISubprogram(name: "try_link", scope: !555, file: !555, line: 80, type: !570, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !143)
!9771 = !DILocalVariable(name: "dest", arg: 1, scope: !9770, file: !555, line: 80, type: !9)
!9772 = !DILocation(line: 80, column: 17, scope: !9770)
!9773 = !DILocalVariable(name: "arg", arg: 2, scope: !9770, file: !555, line: 80, type: !53)
!9774 = !DILocation(line: 80, column: 29, scope: !9770)
!9775 = !DILocalVariable(name: "a", scope: !9770, file: !555, line: 82, type: !572)
!9776 = !DILocation(line: 82, column: 20, scope: !9770)
!9777 = !DILocation(line: 82, column: 24, scope: !9770)
!9778 = !DILocation(line: 83, column: 18, scope: !9770)
!9779 = !DILocation(line: 83, column: 21, scope: !9770)
!9780 = !DILocation(line: 83, column: 29, scope: !9770)
!9781 = !DILocation(line: 83, column: 32, scope: !9770)
!9782 = !DILocation(line: 83, column: 41, scope: !9770)
!9783 = !DILocation(line: 83, column: 44, scope: !9770)
!9784 = !DILocation(line: 83, column: 52, scope: !9770)
!9785 = !DILocation(line: 83, column: 58, scope: !9770)
!9786 = !DILocation(line: 83, column: 61, scope: !9770)
!9787 = !DILocation(line: 83, column: 10, scope: !9770)
!9788 = !DILocation(line: 83, column: 3, scope: !9770)
!9789 = distinct !DISubprogram(name: "force_symlinkat", scope: !555, file: !555, line: 152, type: !562, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !554, retainedNodes: !143)
!9790 = !DILocalVariable(name: "srcname", arg: 1, scope: !9789, file: !555, line: 152, type: !115)
!9791 = !DILocation(line: 152, column: 30, scope: !9789)
!9792 = !DILocalVariable(name: "dstdir", arg: 2, scope: !9789, file: !555, line: 152, type: !7)
!9793 = !DILocation(line: 152, column: 43, scope: !9789)
!9794 = !DILocalVariable(name: "dstname", arg: 3, scope: !9789, file: !555, line: 152, type: !115)
!9795 = !DILocation(line: 152, column: 63, scope: !9789)
!9796 = !DILocalVariable(name: "force", arg: 4, scope: !9789, file: !555, line: 153, type: !120)
!9797 = !DILocation(line: 153, column: 23, scope: !9789)
!9798 = !DILocalVariable(name: "symlinkat_errno", arg: 5, scope: !9789, file: !555, line: 153, type: !7)
!9799 = !DILocation(line: 153, column: 34, scope: !9789)
!9800 = !DILocation(line: 155, column: 7, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9789, file: !555, line: 155, column: 7)
!9802 = !DILocation(line: 155, column: 23, scope: !9801)
!9803 = !DILocation(line: 155, column: 7, scope: !9789)
!9804 = !DILocation(line: 156, column: 34, scope: !9801)
!9805 = !DILocation(line: 156, column: 43, scope: !9801)
!9806 = !DILocation(line: 156, column: 51, scope: !9801)
!9807 = !DILocation(line: 156, column: 23, scope: !9801)
!9808 = !DILocation(line: 156, column: 60, scope: !9801)
!9809 = !DILocation(line: 156, column: 71, scope: !9801)
!9810 = !DILocation(line: 156, column: 21, scope: !9801)
!9811 = !DILocation(line: 156, column: 5, scope: !9801)
!9812 = !DILocation(line: 157, column: 8, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9789, file: !555, line: 157, column: 7)
!9814 = !DILocation(line: 157, column: 14, scope: !9813)
!9815 = !DILocation(line: 157, column: 17, scope: !9813)
!9816 = !DILocation(line: 157, column: 33, scope: !9813)
!9817 = !DILocation(line: 157, column: 7, scope: !9789)
!9818 = !DILocation(line: 158, column: 12, scope: !9813)
!9819 = !DILocation(line: 158, column: 5, scope: !9813)
!9820 = !DILocalVariable(name: "buf", scope: !9789, file: !555, line: 160, type: !559)
!9821 = !DILocation(line: 160, column: 8, scope: !9789)
!9822 = !DILocalVariable(name: "dsttmp", scope: !9789, file: !555, line: 161, type: !9)
!9823 = !DILocation(line: 161, column: 9, scope: !9789)
!9824 = !DILocation(line: 161, column: 36, scope: !9789)
!9825 = !DILocation(line: 161, column: 45, scope: !9789)
!9826 = !DILocation(line: 161, column: 18, scope: !9789)
!9827 = !DILocation(line: 162, column: 8, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9789, file: !555, line: 162, column: 7)
!9829 = !DILocation(line: 162, column: 7, scope: !9789)
!9830 = !DILocation(line: 163, column: 12, scope: !9828)
!9831 = !DILocation(line: 163, column: 5, scope: !9828)
!9832 = !DILocalVariable(name: "arg", scope: !9789, file: !555, line: 164, type: !580)
!9833 = !DILocation(line: 164, column: 22, scope: !9789)
!9834 = !DILocation(line: 164, column: 28, scope: !9789)
!9835 = !DILocation(line: 164, column: 30, scope: !9789)
!9836 = !{!9837, !2996, i64 0}
!9837 = !{!"symlink_arg", !2996, i64 0, !2983, i64 8}
!9838 = !DILocation(line: 164, column: 39, scope: !9789)
!9839 = !{!9837, !2983, i64 8}
!9840 = !DILocalVariable(name: "err", scope: !9789, file: !555, line: 165, type: !7)
!9841 = !DILocation(line: 165, column: 7, scope: !9789)
!9842 = !DILocation(line: 167, column: 25, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9789, file: !555, line: 167, column: 7)
!9844 = !DILocation(line: 167, column: 36, scope: !9843)
!9845 = !DILocation(line: 167, column: 7, scope: !9843)
!9846 = !DILocation(line: 167, column: 69, scope: !9843)
!9847 = !DILocation(line: 167, column: 7, scope: !9789)
!9848 = !DILocation(line: 168, column: 11, scope: !9843)
!9849 = !DILocation(line: 168, column: 9, scope: !9843)
!9850 = !DILocation(line: 168, column: 5, scope: !9843)
!9851 = !DILocation(line: 169, column: 22, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9843, file: !555, line: 169, column: 12)
!9853 = !DILocation(line: 169, column: 30, scope: !9852)
!9854 = !DILocation(line: 169, column: 38, scope: !9852)
!9855 = !DILocation(line: 169, column: 46, scope: !9852)
!9856 = !DILocation(line: 169, column: 12, scope: !9852)
!9857 = !DILocation(line: 169, column: 55, scope: !9852)
!9858 = !DILocation(line: 169, column: 12, scope: !9843)
!9859 = !DILocation(line: 171, column: 13, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9852, file: !555, line: 170, column: 5)
!9861 = !DILocation(line: 171, column: 11, scope: !9860)
!9862 = !DILocation(line: 172, column: 17, scope: !9860)
!9863 = !DILocation(line: 172, column: 25, scope: !9860)
!9864 = !DILocation(line: 172, column: 7, scope: !9860)
!9865 = !DILocation(line: 173, column: 5, scope: !9860)
!9866 = !DILocation(line: 178, column: 11, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9852, file: !555, line: 175, column: 5)
!9868 = !DILocation(line: 181, column: 7, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9789, file: !555, line: 181, column: 7)
!9870 = !DILocation(line: 181, column: 17, scope: !9869)
!9871 = !DILocation(line: 181, column: 14, scope: !9869)
!9872 = !DILocation(line: 181, column: 7, scope: !9789)
!9873 = !DILocation(line: 182, column: 11, scope: !9869)
!9874 = !DILocation(line: 182, column: 5, scope: !9869)
!9875 = !DILocation(line: 183, column: 10, scope: !9789)
!9876 = !DILocation(line: 183, column: 3, scope: !9789)
!9877 = !DILocation(line: 184, column: 1, scope: !9789)
!9878 = distinct !DISubprogram(name: "try_symlink", scope: !555, file: !555, line: 138, type: !570, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !143)
!9879 = !DILocalVariable(name: "dest", arg: 1, scope: !9878, file: !555, line: 138, type: !9)
!9880 = !DILocation(line: 138, column: 20, scope: !9878)
!9881 = !DILocalVariable(name: "arg", arg: 2, scope: !9878, file: !555, line: 138, type: !53)
!9882 = !DILocation(line: 138, column: 32, scope: !9878)
!9883 = !DILocalVariable(name: "a", scope: !9878, file: !555, line: 140, type: !579)
!9884 = !DILocation(line: 140, column: 23, scope: !9878)
!9885 = !DILocation(line: 140, column: 27, scope: !9878)
!9886 = !DILocation(line: 141, column: 21, scope: !9878)
!9887 = !DILocation(line: 141, column: 24, scope: !9878)
!9888 = !DILocation(line: 141, column: 33, scope: !9878)
!9889 = !DILocation(line: 141, column: 36, scope: !9878)
!9890 = !DILocation(line: 141, column: 44, scope: !9878)
!9891 = !DILocation(line: 141, column: 10, scope: !9878)
!9892 = !DILocation(line: 141, column: 3, scope: !9878)
!9893 = distinct !DISubprogram(name: "copy_acl", scope: !9894, file: !9894, line: 43, type: !1584, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1581, retainedNodes: !143)
!9894 = !DIFile(filename: "lib/copy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9895 = !DILocalVariable(name: "src_name", arg: 1, scope: !9893, file: !9894, line: 43, type: !115)
!9896 = !DILocation(line: 43, column: 23, scope: !9893)
!9897 = !DILocalVariable(name: "source_desc", arg: 2, scope: !9893, file: !9894, line: 43, type: !7)
!9898 = !DILocation(line: 43, column: 37, scope: !9893)
!9899 = !DILocalVariable(name: "dst_name", arg: 3, scope: !9893, file: !9894, line: 43, type: !115)
!9900 = !DILocation(line: 43, column: 62, scope: !9893)
!9901 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !9893, file: !9894, line: 44, type: !7)
!9902 = !DILocation(line: 44, column: 15, scope: !9893)
!9903 = !DILocalVariable(name: "mode", arg: 5, scope: !9893, file: !9894, line: 44, type: !160)
!9904 = !DILocation(line: 44, column: 33, scope: !9893)
!9905 = !DILocalVariable(name: "ret", scope: !9893, file: !9894, line: 46, type: !7)
!9906 = !DILocation(line: 46, column: 7, scope: !9893)
!9907 = !DILocation(line: 46, column: 24, scope: !9893)
!9908 = !DILocation(line: 46, column: 34, scope: !9893)
!9909 = !DILocation(line: 46, column: 47, scope: !9893)
!9910 = !DILocation(line: 46, column: 57, scope: !9893)
!9911 = !DILocation(line: 46, column: 68, scope: !9893)
!9912 = !DILocation(line: 46, column: 13, scope: !9893)
!9913 = !DILocation(line: 47, column: 11, scope: !9893)
!9914 = !DILocation(line: 47, column: 3, scope: !9893)
!9915 = !DILocation(line: 50, column: 17, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9893, file: !9894, line: 48, column: 5)
!9917 = !DILocation(line: 50, column: 37, scope: !9916)
!9918 = !DILocation(line: 50, column: 30, scope: !9916)
!9919 = !DILocation(line: 50, column: 7, scope: !9916)
!9920 = !DILocation(line: 51, column: 7, scope: !9916)
!9921 = !DILocation(line: 54, column: 17, scope: !9916)
!9922 = !DILocation(line: 54, column: 24, scope: !9916)
!9923 = !DILocation(line: 54, column: 67, scope: !9916)
!9924 = !DILocation(line: 54, column: 60, scope: !9916)
!9925 = !DILocation(line: 54, column: 7, scope: !9916)
!9926 = !DILocation(line: 55, column: 7, scope: !9916)
!9927 = !DILocation(line: 58, column: 7, scope: !9916)
!9928 = !DILocation(line: 60, column: 10, scope: !9893)
!9929 = !DILocation(line: 60, column: 3, scope: !9893)
!9930 = distinct !DISubprogram(name: "set_acl", scope: !9931, file: !9931, line: 42, type: !1589, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1586, retainedNodes: !143)
!9931 = !DIFile(filename: "lib/set-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9932 = !DILocalVariable(name: "name", arg: 1, scope: !9930, file: !9931, line: 42, type: !115)
!9933 = !DILocation(line: 42, column: 22, scope: !9930)
!9934 = !DILocalVariable(name: "desc", arg: 2, scope: !9930, file: !9931, line: 42, type: !7)
!9935 = !DILocation(line: 42, column: 32, scope: !9930)
!9936 = !DILocalVariable(name: "mode", arg: 3, scope: !9930, file: !9931, line: 42, type: !160)
!9937 = !DILocation(line: 42, column: 45, scope: !9930)
!9938 = !DILocalVariable(name: "ret", scope: !9930, file: !9931, line: 44, type: !7)
!9939 = !DILocation(line: 44, column: 7, scope: !9930)
!9940 = !DILocation(line: 44, column: 23, scope: !9930)
!9941 = !DILocation(line: 44, column: 29, scope: !9930)
!9942 = !DILocation(line: 44, column: 35, scope: !9930)
!9943 = !DILocation(line: 44, column: 13, scope: !9930)
!9944 = !DILocation(line: 45, column: 7, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9930, file: !9931, line: 45, column: 7)
!9946 = !DILocation(line: 45, column: 11, scope: !9945)
!9947 = !DILocation(line: 45, column: 7, scope: !9930)
!9948 = !DILocation(line: 46, column: 15, scope: !9945)
!9949 = !DILocation(line: 46, column: 22, scope: !9945)
!9950 = !DILocation(line: 46, column: 62, scope: !9945)
!9951 = !DILocation(line: 46, column: 55, scope: !9945)
!9952 = !DILocation(line: 46, column: 5, scope: !9945)
!9953 = !DILocation(line: 47, column: 10, scope: !9930)
!9954 = !DILocation(line: 47, column: 3, scope: !9930)
!9955 = distinct !DISubprogram(name: "areadlink_with_size", scope: !9956, file: !9956, line: 52, type: !990, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1591, retainedNodes: !143)
!9956 = !DIFile(filename: "lib/areadlink-with-size.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9957 = !DILocalVariable(name: "file", arg: 1, scope: !9955, file: !9956, line: 52, type: !115)
!9958 = !DILocation(line: 52, column: 34, scope: !9955)
!9959 = !DILocalVariable(name: "size", arg: 2, scope: !9955, file: !9956, line: 52, type: !55)
!9960 = !DILocation(line: 52, column: 47, scope: !9955)
!9961 = !DILocalVariable(name: "symlink_max", scope: !9955, file: !9956, line: 57, type: !55)
!9962 = !DILocation(line: 57, column: 10, scope: !9955)
!9963 = !DILocalVariable(name: "INITIAL_LIMIT_BOUND", scope: !9955, file: !9956, line: 58, type: !55)
!9964 = !DILocation(line: 58, column: 10, scope: !9955)
!9965 = !DILocalVariable(name: "initial_limit", scope: !9955, file: !9956, line: 59, type: !55)
!9966 = !DILocation(line: 59, column: 10, scope: !9955)
!9967 = !DILocation(line: 59, column: 27, scope: !9955)
!9968 = !DILocation(line: 59, column: 41, scope: !9955)
!9969 = !DILocation(line: 59, column: 39, scope: !9955)
!9970 = !DILocation(line: 60, column: 29, scope: !9955)
!9971 = !DILocation(line: 60, column: 41, scope: !9955)
!9972 = !DILocation(line: 61, column: 29, scope: !9955)
!9973 = !DILocalVariable(name: "buf_size", scope: !9955, file: !9956, line: 64, type: !55)
!9974 = !DILocation(line: 64, column: 10, scope: !9955)
!9975 = !DILocation(line: 64, column: 21, scope: !9955)
!9976 = !DILocation(line: 64, column: 28, scope: !9955)
!9977 = !DILocation(line: 64, column: 26, scope: !9955)
!9978 = !DILocation(line: 64, column: 44, scope: !9955)
!9979 = !DILocation(line: 64, column: 49, scope: !9955)
!9980 = !DILocation(line: 64, column: 55, scope: !9955)
!9981 = !DILocation(line: 66, column: 3, scope: !9955)
!9982 = !DILocalVariable(name: "r", scope: !9983, file: !9956, line: 68, type: !606)
!9983 = distinct !DILexicalBlock(scope: !9955, file: !9956, line: 67, column: 5)
!9984 = !DILocation(line: 68, column: 15, scope: !9983)
!9985 = !DILocalVariable(name: "link_length", scope: !9983, file: !9956, line: 69, type: !55)
!9986 = !DILocation(line: 69, column: 14, scope: !9983)
!9987 = !DILocalVariable(name: "buffer", scope: !9983, file: !9956, line: 70, type: !9)
!9988 = !DILocation(line: 70, column: 13, scope: !9983)
!9989 = !DILocation(line: 70, column: 30, scope: !9983)
!9990 = !DILocation(line: 70, column: 22, scope: !9983)
!9991 = !DILocation(line: 72, column: 11, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9983, file: !9956, line: 72, column: 11)
!9993 = !DILocation(line: 72, column: 18, scope: !9992)
!9994 = !DILocation(line: 72, column: 11, scope: !9983)
!9995 = !DILocation(line: 73, column: 9, scope: !9992)
!9996 = !DILocation(line: 74, column: 21, scope: !9983)
!9997 = !DILocation(line: 74, column: 27, scope: !9983)
!9998 = !DILocation(line: 74, column: 35, scope: !9983)
!9999 = !DILocation(line: 74, column: 11, scope: !9983)
!10000 = !DILocation(line: 74, column: 9, scope: !9983)
!10001 = !DILocation(line: 75, column: 21, scope: !9983)
!10002 = !DILocation(line: 75, column: 19, scope: !9983)
!10003 = !DILocation(line: 79, column: 11, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9983, file: !9956, line: 79, column: 11)
!10005 = !DILocation(line: 79, column: 13, scope: !10004)
!10006 = !DILocation(line: 79, column: 17, scope: !10004)
!10007 = !DILocation(line: 79, column: 20, scope: !10004)
!10008 = !DILocation(line: 79, column: 26, scope: !10004)
!10009 = !DILocation(line: 79, column: 11, scope: !9983)
!10010 = !DILocalVariable(name: "saved_errno", scope: !10011, file: !9956, line: 81, type: !7)
!10011 = distinct !DILexicalBlock(scope: !10004, file: !9956, line: 80, column: 9)
!10012 = !DILocation(line: 81, column: 15, scope: !10011)
!10013 = !DILocation(line: 81, column: 29, scope: !10011)
!10014 = !DILocation(line: 82, column: 17, scope: !10011)
!10015 = !DILocation(line: 82, column: 11, scope: !10011)
!10016 = !DILocation(line: 83, column: 19, scope: !10011)
!10017 = !DILocation(line: 83, column: 11, scope: !10011)
!10018 = !DILocation(line: 83, column: 17, scope: !10011)
!10019 = !DILocation(line: 84, column: 11, scope: !10011)
!10020 = !DILocation(line: 87, column: 11, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !9983, file: !9956, line: 87, column: 11)
!10022 = !DILocation(line: 87, column: 25, scope: !10021)
!10023 = !DILocation(line: 87, column: 23, scope: !10021)
!10024 = !DILocation(line: 87, column: 11, scope: !9983)
!10025 = !DILocation(line: 89, column: 11, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10021, file: !9956, line: 88, column: 9)
!10027 = !DILocation(line: 89, column: 18, scope: !10026)
!10028 = !DILocation(line: 89, column: 31, scope: !10026)
!10029 = !DILocation(line: 90, column: 18, scope: !10026)
!10030 = !DILocation(line: 90, column: 11, scope: !10026)
!10031 = !DILocation(line: 93, column: 13, scope: !9983)
!10032 = !DILocation(line: 93, column: 7, scope: !9983)
!10033 = !DILocation(line: 94, column: 11, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !9983, file: !9956, line: 94, column: 11)
!10035 = !DILocation(line: 94, column: 20, scope: !10034)
!10036 = !DILocation(line: 94, column: 11, scope: !9983)
!10037 = !DILocation(line: 95, column: 18, scope: !10034)
!10038 = !DILocation(line: 95, column: 9, scope: !10034)
!10039 = !DILocation(line: 96, column: 16, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10034, file: !9956, line: 96, column: 16)
!10041 = !DILocation(line: 96, column: 25, scope: !10040)
!10042 = !DILocation(line: 96, column: 16, scope: !10034)
!10043 = !DILocation(line: 97, column: 18, scope: !10040)
!10044 = !DILocation(line: 97, column: 9, scope: !10040)
!10045 = !DILocation(line: 100, column: 11, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10040, file: !9956, line: 99, column: 9)
!10047 = !DILocation(line: 100, column: 17, scope: !10046)
!10048 = !DILocation(line: 101, column: 11, scope: !10046)
!10049 = distinct !{!10049, !9981, !10050}
!10050 = !DILocation(line: 103, column: 5, scope: !9955)
!10051 = !DILocation(line: 104, column: 1, scope: !9955)
!10052 = distinct !DISubprogram(name: "set_simple_backup_suffix", scope: !597, file: !597, line: 88, type: !136, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !593, retainedNodes: !143)
!10053 = !DILocalVariable(name: "s", arg: 1, scope: !10052, file: !597, line: 88, type: !115)
!10054 = !DILocation(line: 88, column: 39, scope: !10052)
!10055 = !DILocation(line: 90, column: 8, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10052, file: !597, line: 90, column: 7)
!10057 = !DILocation(line: 90, column: 7, scope: !10052)
!10058 = !DILocation(line: 91, column: 9, scope: !10056)
!10059 = !DILocation(line: 91, column: 7, scope: !10056)
!10060 = !DILocation(line: 91, column: 5, scope: !10056)
!10061 = !DILocation(line: 92, column: 26, scope: !10052)
!10062 = !DILocation(line: 92, column: 28, scope: !10052)
!10063 = !DILocation(line: 92, column: 32, scope: !10052)
!10064 = !DILocation(line: 92, column: 31, scope: !10052)
!10065 = !DILocation(line: 92, column: 34, scope: !10052)
!10066 = !DILocation(line: 92, column: 37, scope: !10052)
!10067 = !DILocation(line: 92, column: 58, scope: !10052)
!10068 = !DILocation(line: 92, column: 42, scope: !10052)
!10069 = !DILocation(line: 92, column: 39, scope: !10052)
!10070 = !DILocation(line: 92, column: 63, scope: !10052)
!10071 = !DILocation(line: 92, column: 24, scope: !10052)
!10072 = !DILocation(line: 93, column: 1, scope: !10052)
!10073 = distinct !DISubprogram(name: "backupfile_internal", scope: !597, file: !597, line: 314, type: !604, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !593, retainedNodes: !143)
!10074 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10073, file: !597, line: 314, type: !7)
!10075 = !DILocation(line: 314, column: 26, scope: !10073)
!10076 = !DILocalVariable(name: "file", arg: 2, scope: !10073, file: !597, line: 314, type: !115)
!10077 = !DILocation(line: 314, column: 46, scope: !10073)
!10078 = !DILocalVariable(name: "backup_type", arg: 3, scope: !10073, file: !597, line: 315, type: !68)
!10079 = !DILocation(line: 315, column: 39, scope: !10073)
!10080 = !DILocalVariable(name: "rename", arg: 4, scope: !10073, file: !597, line: 315, type: !120)
!10081 = !DILocation(line: 315, column: 57, scope: !10073)
!10082 = !DILocalVariable(name: "base_offset", scope: !10073, file: !597, line: 317, type: !566)
!10083 = !DILocation(line: 317, column: 13, scope: !10073)
!10084 = !DILocation(line: 317, column: 43, scope: !10073)
!10085 = !DILocation(line: 317, column: 27, scope: !10073)
!10086 = !DILocation(line: 317, column: 51, scope: !10073)
!10087 = !DILocation(line: 317, column: 49, scope: !10073)
!10088 = !DILocalVariable(name: "filelen", scope: !10073, file: !597, line: 318, type: !55)
!10089 = !DILocation(line: 318, column: 10, scope: !10073)
!10090 = !DILocation(line: 318, column: 20, scope: !10073)
!10091 = !DILocation(line: 318, column: 42, scope: !10073)
!10092 = !DILocation(line: 318, column: 49, scope: !10073)
!10093 = !DILocation(line: 318, column: 47, scope: !10073)
!10094 = !DILocation(line: 318, column: 34, scope: !10073)
!10095 = !DILocation(line: 318, column: 32, scope: !10073)
!10096 = !DILocation(line: 320, column: 9, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10073, file: !597, line: 320, column: 7)
!10098 = !DILocation(line: 320, column: 7, scope: !10073)
!10099 = !DILocation(line: 321, column: 5, scope: !10097)
!10100 = !DILocalVariable(name: "simple_backup_suffix_size", scope: !10073, file: !597, line: 325, type: !55)
!10101 = !DILocation(line: 325, column: 10, scope: !10073)
!10102 = !DILocation(line: 325, column: 46, scope: !10073)
!10103 = !DILocation(line: 325, column: 38, scope: !10073)
!10104 = !DILocation(line: 325, column: 68, scope: !10073)
!10105 = !DILocalVariable(name: "backup_suffix_size_guess", scope: !10073, file: !597, line: 326, type: !55)
!10106 = !DILocation(line: 326, column: 10, scope: !10073)
!10107 = !DILocation(line: 326, column: 37, scope: !10073)
!10108 = !DILocation(line: 328, column: 7, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10073, file: !597, line: 328, column: 7)
!10110 = !DILocation(line: 328, column: 32, scope: !10109)
!10111 = !DILocation(line: 328, column: 7, scope: !10073)
!10112 = !DILocation(line: 329, column: 30, scope: !10109)
!10113 = !DILocation(line: 329, column: 5, scope: !10109)
!10114 = !DILocalVariable(name: "ssize", scope: !10073, file: !597, line: 331, type: !606)
!10115 = !DILocation(line: 331, column: 11, scope: !10073)
!10116 = !DILocation(line: 331, column: 19, scope: !10073)
!10117 = !DILocation(line: 331, column: 29, scope: !10073)
!10118 = !DILocation(line: 331, column: 27, scope: !10073)
!10119 = !DILocation(line: 331, column: 54, scope: !10073)
!10120 = !DILocalVariable(name: "s", scope: !10073, file: !597, line: 332, type: !9)
!10121 = !DILocation(line: 332, column: 9, scope: !10073)
!10122 = !DILocation(line: 332, column: 21, scope: !10073)
!10123 = !DILocation(line: 332, column: 13, scope: !10073)
!10124 = !DILocation(line: 333, column: 8, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10073, file: !597, line: 333, column: 7)
!10126 = !DILocation(line: 333, column: 7, scope: !10073)
!10127 = !DILocation(line: 334, column: 12, scope: !10125)
!10128 = !DILocation(line: 334, column: 5, scope: !10125)
!10129 = !DILocalVariable(name: "dirp", scope: !10073, file: !597, line: 336, type: !607)
!10130 = !DILocation(line: 336, column: 8, scope: !10073)
!10131 = !DILocalVariable(name: "sdir", scope: !10073, file: !597, line: 337, type: !7)
!10132 = !DILocation(line: 337, column: 7, scope: !10073)
!10133 = !DILocalVariable(name: "base_max", scope: !10073, file: !597, line: 338, type: !55)
!10134 = !DILocation(line: 338, column: 10, scope: !10073)
!10135 = !DILocation(line: 339, column: 3, scope: !10073)
!10136 = !DILocation(line: 341, column: 15, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10073, file: !597, line: 340, column: 5)
!10138 = !DILocation(line: 341, column: 18, scope: !10137)
!10139 = !DILocation(line: 341, column: 24, scope: !10137)
!10140 = !DILocation(line: 341, column: 32, scope: !10137)
!10141 = !DILocation(line: 341, column: 7, scope: !10137)
!10142 = !DILocation(line: 343, column: 11, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10137, file: !597, line: 343, column: 11)
!10144 = !DILocation(line: 343, column: 23, scope: !10143)
!10145 = !DILocation(line: 343, column: 11, scope: !10137)
!10146 = !DILocation(line: 344, column: 17, scope: !10143)
!10147 = !DILocation(line: 344, column: 21, scope: !10143)
!10148 = !DILocation(line: 344, column: 19, scope: !10143)
!10149 = !DILocation(line: 344, column: 30, scope: !10143)
!10150 = !DILocation(line: 344, column: 52, scope: !10143)
!10151 = !DILocation(line: 344, column: 9, scope: !10143)
!10152 = !DILocation(line: 346, column: 34, scope: !10143)
!10153 = !DILocation(line: 346, column: 46, scope: !10143)
!10154 = !DILocation(line: 346, column: 53, scope: !10143)
!10155 = !DILocation(line: 346, column: 62, scope: !10143)
!10156 = !DILocation(line: 346, column: 17, scope: !10143)
!10157 = !DILocation(line: 346, column: 9, scope: !10143)
!10158 = !DILocation(line: 350, column: 13, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10143, file: !597, line: 348, column: 11)
!10160 = !DILocation(line: 353, column: 17, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10159, file: !597, line: 353, column: 17)
!10162 = !DILocation(line: 353, column: 29, scope: !10161)
!10163 = !DILocation(line: 353, column: 17, scope: !10159)
!10164 = !DILocation(line: 355, column: 29, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10161, file: !597, line: 354, column: 15)
!10166 = !DILocation(line: 356, column: 25, scope: !10165)
!10167 = !DILocation(line: 356, column: 29, scope: !10165)
!10168 = !DILocation(line: 356, column: 27, scope: !10165)
!10169 = !DILocation(line: 356, column: 38, scope: !10165)
!10170 = !DILocation(line: 357, column: 25, scope: !10165)
!10171 = !DILocation(line: 356, column: 17, scope: !10165)
!10172 = !DILocation(line: 358, column: 15, scope: !10165)
!10173 = !DILocation(line: 359, column: 13, scope: !10159)
!10174 = !DILocation(line: 361, column: 30, scope: !10159)
!10175 = !DILocation(line: 361, column: 33, scope: !10159)
!10176 = !DILocation(line: 361, column: 47, scope: !10159)
!10177 = !DILocation(line: 361, column: 13, scope: !10159)
!10178 = !DILocation(line: 362, column: 13, scope: !10159)
!10179 = !DILocation(line: 365, column: 19, scope: !10159)
!10180 = !DILocation(line: 365, column: 13, scope: !10159)
!10181 = !DILocation(line: 366, column: 13, scope: !10159)
!10182 = !DILocation(line: 366, column: 19, scope: !10159)
!10183 = !DILocation(line: 367, column: 13, scope: !10159)
!10184 = !DILocation(line: 370, column: 13, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10137, file: !597, line: 370, column: 11)
!10186 = !DILocation(line: 370, column: 11, scope: !10137)
!10187 = !DILocation(line: 371, column: 9, scope: !10185)
!10188 = !DILocation(line: 373, column: 11, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10137, file: !597, line: 373, column: 11)
!10190 = !DILocation(line: 373, column: 16, scope: !10189)
!10191 = !DILocation(line: 373, column: 11, scope: !10137)
!10192 = !DILocation(line: 375, column: 16, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10189, file: !597, line: 374, column: 9)
!10194 = !DILocation(line: 376, column: 23, scope: !10193)
!10195 = !DILocation(line: 377, column: 9, scope: !10193)
!10196 = !DILocalVariable(name: "flags", scope: !10137, file: !597, line: 378, type: !70)
!10197 = !DILocation(line: 378, column: 16, scope: !10137)
!10198 = !DILocation(line: 378, column: 24, scope: !10137)
!10199 = !DILocation(line: 378, column: 36, scope: !10137)
!10200 = !DILocation(line: 379, column: 32, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10137, file: !597, line: 379, column: 11)
!10202 = !DILocation(line: 379, column: 38, scope: !10201)
!10203 = !DILocation(line: 379, column: 44, scope: !10201)
!10204 = !DILocation(line: 379, column: 48, scope: !10201)
!10205 = !DILocation(line: 379, column: 46, scope: !10201)
!10206 = !DILocation(line: 379, column: 61, scope: !10201)
!10207 = !DILocation(line: 379, column: 11, scope: !10201)
!10208 = !DILocation(line: 379, column: 68, scope: !10201)
!10209 = !DILocation(line: 379, column: 11, scope: !10137)
!10210 = !DILocation(line: 380, column: 9, scope: !10201)
!10211 = !DILocalVariable(name: "e", scope: !10137, file: !597, line: 381, type: !7)
!10212 = !DILocation(line: 381, column: 11, scope: !10137)
!10213 = !DILocation(line: 381, column: 15, scope: !10137)
!10214 = !DILocation(line: 382, column: 11, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10137, file: !597, line: 382, column: 11)
!10216 = !DILocation(line: 382, column: 13, scope: !10215)
!10217 = !DILocation(line: 382, column: 11, scope: !10137)
!10218 = !DILocation(line: 384, column: 15, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !597, line: 384, column: 15)
!10220 = distinct !DILexicalBlock(scope: !10215, file: !597, line: 383, column: 9)
!10221 = !DILocation(line: 384, column: 15, scope: !10220)
!10222 = !DILocation(line: 385, column: 23, scope: !10219)
!10223 = !DILocation(line: 385, column: 13, scope: !10219)
!10224 = !DILocation(line: 386, column: 17, scope: !10220)
!10225 = !DILocation(line: 386, column: 11, scope: !10220)
!10226 = !DILocation(line: 387, column: 19, scope: !10220)
!10227 = !DILocation(line: 387, column: 11, scope: !10220)
!10228 = !DILocation(line: 387, column: 17, scope: !10220)
!10229 = !DILocation(line: 388, column: 11, scope: !10220)
!10230 = distinct !{!10230, !10135, !10231}
!10231 = !DILocation(line: 390, column: 5, scope: !10073)
!10232 = !DILocation(line: 392, column: 7, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10073, file: !597, line: 392, column: 7)
!10234 = !DILocation(line: 392, column: 7, scope: !10073)
!10235 = !DILocation(line: 393, column: 15, scope: !10233)
!10236 = !DILocation(line: 393, column: 5, scope: !10233)
!10237 = !DILocation(line: 394, column: 10, scope: !10073)
!10238 = !DILocation(line: 394, column: 3, scope: !10073)
!10239 = !DILocation(line: 395, column: 1, scope: !10073)
!10240 = distinct !DISubprogram(name: "numbered_backup", scope: !597, file: !597, line: 207, type: !611, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !143)
!10241 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10240, file: !597, line: 207, type: !7)
!10242 = !DILocation(line: 207, column: 22, scope: !10240)
!10243 = !DILocalVariable(name: "buffer", arg: 2, scope: !10240, file: !597, line: 207, type: !119)
!10244 = !DILocation(line: 207, column: 37, scope: !10240)
!10245 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !10240, file: !597, line: 207, type: !55)
!10246 = !DILocation(line: 207, column: 52, scope: !10240)
!10247 = !DILocalVariable(name: "filelen", arg: 4, scope: !10240, file: !597, line: 207, type: !55)
!10248 = !DILocation(line: 207, column: 72, scope: !10240)
!10249 = !DILocalVariable(name: "base_offset", arg: 5, scope: !10240, file: !597, line: 208, type: !566)
!10250 = !DILocation(line: 208, column: 28, scope: !10240)
!10251 = !DILocalVariable(name: "dirpp", arg: 6, scope: !10240, file: !597, line: 208, type: !613)
!10252 = !DILocation(line: 208, column: 47, scope: !10240)
!10253 = !DILocalVariable(name: "pnew_fd", arg: 7, scope: !10240, file: !597, line: 208, type: !129)
!10254 = !DILocation(line: 208, column: 59, scope: !10240)
!10255 = !DILocalVariable(name: "result", scope: !10240, file: !597, line: 210, type: !596)
!10256 = !DILocation(line: 210, column: 31, scope: !10240)
!10257 = !DILocalVariable(name: "dirp", scope: !10240, file: !597, line: 211, type: !607)
!10258 = !DILocation(line: 211, column: 8, scope: !10240)
!10259 = !DILocation(line: 211, column: 16, scope: !10240)
!10260 = !DILocation(line: 211, column: 15, scope: !10240)
!10261 = !DILocalVariable(name: "dp", scope: !10240, file: !597, line: 212, type: !614)
!10262 = !DILocation(line: 212, column: 18, scope: !10240)
!10263 = !DILocalVariable(name: "buf", scope: !10240, file: !597, line: 213, type: !9)
!10264 = !DILocation(line: 213, column: 9, scope: !10240)
!10265 = !DILocation(line: 213, column: 16, scope: !10240)
!10266 = !DILocation(line: 213, column: 15, scope: !10240)
!10267 = !DILocalVariable(name: "versionlenmax", scope: !10240, file: !597, line: 214, type: !55)
!10268 = !DILocation(line: 214, column: 10, scope: !10240)
!10269 = !DILocalVariable(name: "base", scope: !10240, file: !597, line: 215, type: !9)
!10270 = !DILocation(line: 215, column: 9, scope: !10240)
!10271 = !DILocation(line: 215, column: 16, scope: !10240)
!10272 = !DILocation(line: 215, column: 22, scope: !10240)
!10273 = !DILocation(line: 215, column: 20, scope: !10240)
!10274 = !DILocalVariable(name: "baselen", scope: !10240, file: !597, line: 216, type: !55)
!10275 = !DILocation(line: 216, column: 10, scope: !10240)
!10276 = !DILocation(line: 216, column: 30, scope: !10240)
!10277 = !DILocation(line: 216, column: 20, scope: !10240)
!10278 = !DILocation(line: 218, column: 7, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10240, file: !597, line: 218, column: 7)
!10280 = !DILocation(line: 218, column: 7, scope: !10240)
!10281 = !DILocation(line: 219, column: 16, scope: !10279)
!10282 = !DILocation(line: 219, column: 5, scope: !10279)
!10283 = !DILocalVariable(name: "tmp", scope: !10284, file: !597, line: 224, type: !623)
!10284 = distinct !DILexicalBlock(scope: !10279, file: !597, line: 221, column: 5)
!10285 = !DILocation(line: 224, column: 12, scope: !10284)
!10286 = !DILocation(line: 225, column: 7, scope: !10284)
!10287 = !DILocation(line: 225, column: 20, scope: !10284)
!10288 = !DILocation(line: 226, column: 15, scope: !10284)
!10289 = !DILocation(line: 226, column: 7, scope: !10284)
!10290 = !DILocation(line: 227, column: 25, scope: !10284)
!10291 = !DILocation(line: 227, column: 33, scope: !10284)
!10292 = !DILocation(line: 227, column: 41, scope: !10284)
!10293 = !DILocation(line: 227, column: 14, scope: !10284)
!10294 = !DILocation(line: 227, column: 12, scope: !10284)
!10295 = !DILocation(line: 228, column: 12, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10284, file: !597, line: 228, column: 11)
!10297 = !DILocation(line: 228, column: 17, scope: !10296)
!10298 = !DILocation(line: 228, column: 20, scope: !10296)
!10299 = !DILocation(line: 228, column: 26, scope: !10296)
!10300 = !DILocation(line: 228, column: 11, scope: !10284)
!10301 = !DILocation(line: 229, column: 16, scope: !10296)
!10302 = !DILocation(line: 229, column: 9, scope: !10296)
!10303 = !DILocation(line: 230, column: 15, scope: !10284)
!10304 = !DILocation(line: 230, column: 7, scope: !10284)
!10305 = !DILocation(line: 231, column: 15, scope: !10284)
!10306 = !DILocation(line: 231, column: 22, scope: !10284)
!10307 = !DILocation(line: 231, column: 20, scope: !10284)
!10308 = !DILocation(line: 231, column: 7, scope: !10284)
!10309 = !DILocation(line: 232, column: 12, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10284, file: !597, line: 232, column: 11)
!10311 = !DILocation(line: 232, column: 11, scope: !10284)
!10312 = !DILocation(line: 233, column: 16, scope: !10310)
!10313 = !DILocation(line: 233, column: 9, scope: !10310)
!10314 = !DILocation(line: 234, column: 16, scope: !10284)
!10315 = !DILocation(line: 234, column: 8, scope: !10284)
!10316 = !DILocation(line: 234, column: 14, scope: !10284)
!10317 = !DILocation(line: 237, column: 3, scope: !10240)
!10318 = !DILocation(line: 237, column: 25, scope: !10240)
!10319 = !DILocation(line: 237, column: 16, scope: !10240)
!10320 = !DILocation(line: 237, column: 14, scope: !10240)
!10321 = !DILocation(line: 237, column: 32, scope: !10240)
!10322 = !DILocalVariable(name: "p", scope: !10323, file: !597, line: 239, type: !115)
!10323 = distinct !DILexicalBlock(scope: !10240, file: !597, line: 238, column: 5)
!10324 = !DILocation(line: 239, column: 19, scope: !10323)
!10325 = !DILocalVariable(name: "q", scope: !10323, file: !597, line: 240, type: !9)
!10326 = !DILocation(line: 240, column: 13, scope: !10323)
!10327 = !DILocalVariable(name: "all_9s", scope: !10323, file: !597, line: 241, type: !120)
!10328 = !DILocation(line: 241, column: 12, scope: !10323)
!10329 = !DILocalVariable(name: "versionlen", scope: !10323, file: !597, line: 242, type: !55)
!10330 = !DILocation(line: 242, column: 14, scope: !10323)
!10331 = !DILocation(line: 244, column: 11, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10323, file: !597, line: 244, column: 11)
!10333 = !DILocation(line: 244, column: 34, scope: !10332)
!10334 = !DILocation(line: 244, column: 42, scope: !10332)
!10335 = !DILocation(line: 244, column: 32, scope: !10332)
!10336 = !DILocation(line: 244, column: 11, scope: !10323)
!10337 = !DILocation(line: 245, column: 9, scope: !10332)
!10338 = distinct !{!10338, !10317, !10339}
!10339 = !DILocation(line: 301, column: 5, scope: !10240)
!10340 = !DILocation(line: 247, column: 19, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10323, file: !597, line: 247, column: 11)
!10342 = !DILocation(line: 247, column: 25, scope: !10341)
!10343 = !DILocation(line: 247, column: 23, scope: !10341)
!10344 = !DILocation(line: 247, column: 38, scope: !10341)
!10345 = !DILocation(line: 247, column: 42, scope: !10341)
!10346 = !DILocation(line: 247, column: 50, scope: !10341)
!10347 = !DILocation(line: 247, column: 58, scope: !10341)
!10348 = !DILocation(line: 247, column: 11, scope: !10341)
!10349 = !DILocation(line: 247, column: 63, scope: !10341)
!10350 = !DILocation(line: 247, column: 11, scope: !10323)
!10351 = !DILocation(line: 248, column: 9, scope: !10341)
!10352 = !DILocation(line: 250, column: 11, scope: !10323)
!10353 = !DILocation(line: 250, column: 15, scope: !10323)
!10354 = !DILocation(line: 250, column: 24, scope: !10323)
!10355 = !DILocation(line: 250, column: 22, scope: !10323)
!10356 = !DILocation(line: 250, column: 32, scope: !10323)
!10357 = !DILocation(line: 250, column: 9, scope: !10323)
!10358 = !DILocation(line: 256, column: 22, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10323, file: !597, line: 256, column: 11)
!10360 = !DILocation(line: 256, column: 21, scope: !10359)
!10361 = !DILocation(line: 256, column: 18, scope: !10359)
!10362 = !DILocation(line: 256, column: 24, scope: !10359)
!10363 = !DILocation(line: 256, column: 28, scope: !10359)
!10364 = !DILocation(line: 256, column: 27, scope: !10359)
!10365 = !DILocation(line: 256, column: 30, scope: !10359)
!10366 = !DILocation(line: 256, column: 11, scope: !10323)
!10367 = !DILocation(line: 257, column: 9, scope: !10359)
!10368 = !DILocation(line: 258, column: 18, scope: !10323)
!10369 = !DILocation(line: 258, column: 17, scope: !10323)
!10370 = !DILocation(line: 258, column: 20, scope: !10323)
!10371 = !DILocation(line: 258, column: 14, scope: !10323)
!10372 = !DILocation(line: 259, column: 23, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10323, file: !597, line: 259, column: 7)
!10374 = !DILocation(line: 259, column: 12, scope: !10373)
!10375 = !DILocation(line: 259, column: 28, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10373, file: !597, line: 259, column: 7)
!10377 = !DILocation(line: 259, column: 7, scope: !10373)
!10378 = !DILocation(line: 260, column: 20, scope: !10376)
!10379 = !DILocation(line: 260, column: 22, scope: !10376)
!10380 = !DILocation(line: 260, column: 34, scope: !10376)
!10381 = !DILocation(line: 260, column: 16, scope: !10376)
!10382 = !DILocation(line: 260, column: 9, scope: !10376)
!10383 = !DILocation(line: 259, column: 63, scope: !10376)
!10384 = !DILocation(line: 259, column: 7, scope: !10376)
!10385 = distinct !{!10385, !10377, !10386}
!10386 = !DILocation(line: 260, column: 40, scope: !10373)
!10387 = !DILocation(line: 262, column: 14, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10323, file: !597, line: 262, column: 11)
!10389 = !DILocation(line: 262, column: 16, scope: !10388)
!10390 = !DILocation(line: 262, column: 28, scope: !10388)
!10391 = !DILocation(line: 262, column: 35, scope: !10388)
!10392 = !DILocation(line: 262, column: 39, scope: !10388)
!10393 = !DILocation(line: 262, column: 41, scope: !10388)
!10394 = !DILocation(line: 262, column: 52, scope: !10388)
!10395 = !DILocation(line: 263, column: 14, scope: !10388)
!10396 = !DILocation(line: 263, column: 18, scope: !10388)
!10397 = !DILocation(line: 263, column: 34, scope: !10388)
!10398 = !DILocation(line: 263, column: 32, scope: !10388)
!10399 = !DILocation(line: 264, column: 18, scope: !10388)
!10400 = !DILocation(line: 264, column: 22, scope: !10388)
!10401 = !DILocation(line: 264, column: 39, scope: !10388)
!10402 = !DILocation(line: 264, column: 36, scope: !10388)
!10403 = !DILocation(line: 265, column: 22, scope: !10388)
!10404 = !DILocation(line: 265, column: 33, scope: !10388)
!10405 = !DILocation(line: 265, column: 39, scope: !10388)
!10406 = !DILocation(line: 265, column: 37, scope: !10388)
!10407 = !DILocation(line: 265, column: 47, scope: !10388)
!10408 = !DILocation(line: 265, column: 52, scope: !10388)
!10409 = !DILocation(line: 265, column: 55, scope: !10388)
!10410 = !DILocation(line: 265, column: 25, scope: !10388)
!10411 = !DILocation(line: 265, column: 67, scope: !10388)
!10412 = !DILocation(line: 262, column: 11, scope: !10323)
!10413 = !DILocation(line: 266, column: 9, scope: !10388)
!10414 = !DILocation(line: 272, column: 23, scope: !10323)
!10415 = !DILocation(line: 272, column: 32, scope: !10323)
!10416 = !DILocation(line: 272, column: 30, scope: !10323)
!10417 = !DILocation(line: 272, column: 21, scope: !10323)
!10418 = !DILocation(line: 273, column: 17, scope: !10323)
!10419 = !DILocation(line: 273, column: 14, scope: !10323)
!10420 = !DILocalVariable(name: "new_buffer_size", scope: !10323, file: !597, line: 274, type: !55)
!10421 = !DILocation(line: 274, column: 14, scope: !10323)
!10422 = !DILocation(line: 274, column: 32, scope: !10323)
!10423 = !DILocation(line: 274, column: 40, scope: !10323)
!10424 = !DILocation(line: 274, column: 46, scope: !10323)
!10425 = !DILocation(line: 274, column: 44, scope: !10323)
!10426 = !DILocation(line: 274, column: 60, scope: !10323)
!10427 = !DILocation(line: 275, column: 11, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10323, file: !597, line: 275, column: 11)
!10429 = !DILocation(line: 275, column: 25, scope: !10428)
!10430 = !DILocation(line: 275, column: 23, scope: !10428)
!10431 = !DILocation(line: 275, column: 11, scope: !10323)
!10432 = !DILocation(line: 277, column: 17, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10434, file: !597, line: 277, column: 15)
!10434 = distinct !DILexicalBlock(scope: !10428, file: !597, line: 276, column: 9)
!10435 = !DILocation(line: 277, column: 15, scope: !10434)
!10436 = !DILocation(line: 278, column: 29, scope: !10433)
!10437 = !DILocation(line: 278, column: 13, scope: !10433)
!10438 = !DILocalVariable(name: "new_buf", scope: !10434, file: !597, line: 279, type: !9)
!10439 = !DILocation(line: 279, column: 17, scope: !10434)
!10440 = !DILocation(line: 279, column: 36, scope: !10434)
!10441 = !DILocation(line: 279, column: 41, scope: !10434)
!10442 = !DILocation(line: 279, column: 27, scope: !10434)
!10443 = !DILocation(line: 280, column: 16, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10434, file: !597, line: 280, column: 15)
!10445 = !DILocation(line: 280, column: 15, scope: !10434)
!10446 = !DILocation(line: 282, column: 25, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10444, file: !597, line: 281, column: 13)
!10448 = !DILocation(line: 282, column: 16, scope: !10447)
!10449 = !DILocation(line: 282, column: 23, scope: !10447)
!10450 = !DILocation(line: 283, column: 15, scope: !10447)
!10451 = !DILocation(line: 285, column: 17, scope: !10434)
!10452 = !DILocation(line: 285, column: 15, scope: !10434)
!10453 = !DILocation(line: 286, column: 25, scope: !10434)
!10454 = !DILocation(line: 286, column: 23, scope: !10434)
!10455 = !DILocation(line: 287, column: 9, scope: !10434)
!10456 = !DILocation(line: 288, column: 11, scope: !10323)
!10457 = !DILocation(line: 288, column: 17, scope: !10323)
!10458 = !DILocation(line: 288, column: 15, scope: !10323)
!10459 = !DILocation(line: 288, column: 9, scope: !10323)
!10460 = !DILocation(line: 289, column: 9, scope: !10323)
!10461 = !DILocation(line: 289, column: 12, scope: !10323)
!10462 = !DILocation(line: 290, column: 9, scope: !10323)
!10463 = !DILocation(line: 290, column: 12, scope: !10323)
!10464 = !DILocation(line: 291, column: 8, scope: !10323)
!10465 = !DILocation(line: 291, column: 10, scope: !10323)
!10466 = !DILocation(line: 292, column: 12, scope: !10323)
!10467 = !DILocation(line: 292, column: 9, scope: !10323)
!10468 = !DILocation(line: 293, column: 15, scope: !10323)
!10469 = !DILocation(line: 293, column: 18, scope: !10323)
!10470 = !DILocation(line: 293, column: 21, scope: !10323)
!10471 = !DILocation(line: 293, column: 32, scope: !10323)
!10472 = !DILocation(line: 293, column: 7, scope: !10323)
!10473 = !DILocation(line: 297, column: 12, scope: !10323)
!10474 = !DILocation(line: 297, column: 9, scope: !10323)
!10475 = !DILocation(line: 298, column: 7, scope: !10323)
!10476 = !DILocation(line: 298, column: 15, scope: !10323)
!10477 = !DILocation(line: 298, column: 14, scope: !10323)
!10478 = !DILocation(line: 298, column: 19, scope: !10323)
!10479 = !DILocation(line: 299, column: 10, scope: !10323)
!10480 = !DILocation(line: 299, column: 12, scope: !10323)
!10481 = distinct !{!10481, !10475, !10482}
!10482 = !DILocation(line: 299, column: 14, scope: !10323)
!10483 = !DILocation(line: 300, column: 10, scope: !10323)
!10484 = !DILocation(line: 300, column: 7, scope: !10323)
!10485 = !DILocation(line: 303, column: 13, scope: !10240)
!10486 = !DILocation(line: 303, column: 4, scope: !10240)
!10487 = !DILocation(line: 303, column: 11, scope: !10240)
!10488 = !DILocation(line: 304, column: 10, scope: !10240)
!10489 = !DILocation(line: 304, column: 3, scope: !10240)
!10490 = !DILocation(line: 305, column: 1, scope: !10240)
!10491 = distinct !DISubprogram(name: "check_extension", scope: !597, file: !597, line: 105, type: !624, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !143)
!10492 = !DILocalVariable(name: "file", arg: 1, scope: !10491, file: !597, line: 105, type: !9)
!10493 = !DILocation(line: 105, column: 24, scope: !10491)
!10494 = !DILocalVariable(name: "filelen", arg: 2, scope: !10491, file: !597, line: 105, type: !55)
!10495 = !DILocation(line: 105, column: 37, scope: !10491)
!10496 = !DILocalVariable(name: "e", arg: 3, scope: !10491, file: !597, line: 105, type: !10)
!10497 = !DILocation(line: 105, column: 51, scope: !10491)
!10498 = !DILocalVariable(name: "dir_fd", arg: 4, scope: !10491, file: !597, line: 106, type: !7)
!10499 = !DILocation(line: 106, column: 22, scope: !10491)
!10500 = !DILocalVariable(name: "base_max", arg: 5, scope: !10491, file: !597, line: 106, type: !626)
!10501 = !DILocation(line: 106, column: 38, scope: !10491)
!10502 = !DILocalVariable(name: "base", scope: !10491, file: !597, line: 108, type: !9)
!10503 = !DILocation(line: 108, column: 9, scope: !10491)
!10504 = !DILocation(line: 108, column: 32, scope: !10491)
!10505 = !DILocation(line: 108, column: 16, scope: !10491)
!10506 = !DILocalVariable(name: "baselen", scope: !10491, file: !597, line: 109, type: !55)
!10507 = !DILocation(line: 109, column: 10, scope: !10491)
!10508 = !DILocation(line: 109, column: 30, scope: !10491)
!10509 = !DILocation(line: 109, column: 20, scope: !10491)
!10510 = !DILocalVariable(name: "baselen_max", scope: !10491, file: !597, line: 110, type: !55)
!10511 = !DILocation(line: 110, column: 10, scope: !10491)
!10512 = !DILocation(line: 112, column: 49, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10491, file: !597, line: 112, column: 7)
!10514 = !DILocation(line: 112, column: 47, scope: !10513)
!10515 = !DILocation(line: 112, column: 7, scope: !10491)
!10516 = !DILocation(line: 115, column: 12, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10518, file: !597, line: 115, column: 11)
!10518 = distinct !DILexicalBlock(scope: !10513, file: !597, line: 113, column: 5)
!10519 = !DILocation(line: 115, column: 11, scope: !10517)
!10520 = !DILocation(line: 115, column: 21, scope: !10517)
!10521 = !DILocation(line: 115, column: 11, scope: !10518)
!10522 = !DILocalVariable(name: "name_max", scope: !10523, file: !597, line: 117, type: !31)
!10523 = distinct !DILexicalBlock(scope: !10517, file: !597, line: 116, column: 9)
!10524 = !DILocation(line: 117, column: 16, scope: !10523)
!10525 = !DILocation(line: 118, column: 15, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10523, file: !597, line: 118, column: 15)
!10527 = !DILocation(line: 118, column: 22, scope: !10526)
!10528 = !DILocation(line: 118, column: 15, scope: !10523)
!10529 = !DILocalVariable(name: "tmp", scope: !10530, file: !597, line: 123, type: !623)
!10530 = distinct !DILexicalBlock(scope: !10526, file: !597, line: 119, column: 13)
!10531 = !DILocation(line: 123, column: 20, scope: !10530)
!10532 = !DILocation(line: 124, column: 15, scope: !10530)
!10533 = !DILocation(line: 124, column: 28, scope: !10530)
!10534 = !DILocation(line: 125, column: 23, scope: !10530)
!10535 = !DILocation(line: 125, column: 15, scope: !10530)
!10536 = !DILocation(line: 126, column: 15, scope: !10530)
!10537 = !DILocation(line: 126, column: 21, scope: !10530)
!10538 = !DILocation(line: 127, column: 36, scope: !10530)
!10539 = !DILocation(line: 127, column: 26, scope: !10530)
!10540 = !DILocation(line: 127, column: 24, scope: !10530)
!10541 = !DILocation(line: 128, column: 28, scope: !10530)
!10542 = !DILocation(line: 128, column: 27, scope: !10530)
!10543 = !DILocation(line: 128, column: 24, scope: !10530)
!10544 = !DILocation(line: 129, column: 23, scope: !10530)
!10545 = !DILocation(line: 129, column: 15, scope: !10530)
!10546 = !DILocation(line: 130, column: 13, scope: !10530)
!10547 = !DILocation(line: 133, column: 15, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10526, file: !597, line: 132, column: 13)
!10549 = !DILocation(line: 133, column: 21, scope: !10548)
!10550 = !DILocation(line: 134, column: 37, scope: !10548)
!10551 = !DILocation(line: 134, column: 26, scope: !10548)
!10552 = !DILocation(line: 134, column: 24, scope: !10548)
!10553 = !DILocation(line: 135, column: 28, scope: !10548)
!10554 = !DILocation(line: 135, column: 27, scope: !10548)
!10555 = !DILocation(line: 135, column: 24, scope: !10548)
!10556 = !DILocation(line: 138, column: 29, scope: !10523)
!10557 = !DILocation(line: 138, column: 26, scope: !10523)
!10558 = !DILocation(line: 138, column: 38, scope: !10523)
!10559 = !DILocation(line: 138, column: 41, scope: !10523)
!10560 = !DILocation(line: 138, column: 50, scope: !10523)
!10561 = !DILocation(line: 138, column: 24, scope: !10523)
!10562 = !DILocation(line: 138, column: 64, scope: !10523)
!10563 = !DILocation(line: 139, column: 26, scope: !10523)
!10564 = !DILocation(line: 139, column: 35, scope: !10523)
!10565 = !DILocation(line: 138, column: 12, scope: !10523)
!10566 = !DILocation(line: 138, column: 21, scope: !10523)
!10567 = !DILocation(line: 140, column: 9, scope: !10523)
!10568 = !DILocation(line: 142, column: 22, scope: !10518)
!10569 = !DILocation(line: 142, column: 21, scope: !10518)
!10570 = !DILocation(line: 142, column: 19, scope: !10518)
!10571 = !DILocation(line: 143, column: 5, scope: !10518)
!10572 = !DILocation(line: 160, column: 7, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10491, file: !597, line: 160, column: 7)
!10574 = !DILocation(line: 160, column: 21, scope: !10573)
!10575 = !DILocation(line: 160, column: 19, scope: !10573)
!10576 = !DILocation(line: 160, column: 7, scope: !10491)
!10577 = !DILocation(line: 162, column: 17, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10573, file: !597, line: 161, column: 5)
!10579 = !DILocation(line: 162, column: 24, scope: !10578)
!10580 = !DILocation(line: 162, column: 22, scope: !10578)
!10581 = !DILocation(line: 162, column: 34, scope: !10578)
!10582 = !DILocation(line: 162, column: 32, scope: !10578)
!10583 = !DILocation(line: 162, column: 15, scope: !10578)
!10584 = !DILocation(line: 163, column: 11, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10578, file: !597, line: 163, column: 11)
!10586 = !DILocation(line: 163, column: 26, scope: !10585)
!10587 = !DILocation(line: 163, column: 23, scope: !10585)
!10588 = !DILocation(line: 163, column: 11, scope: !10578)
!10589 = !DILocation(line: 164, column: 19, scope: !10585)
!10590 = !DILocation(line: 164, column: 31, scope: !10585)
!10591 = !DILocation(line: 164, column: 17, scope: !10585)
!10592 = !DILocation(line: 164, column: 9, scope: !10585)
!10593 = !DILocation(line: 165, column: 23, scope: !10578)
!10594 = !DILocation(line: 165, column: 7, scope: !10578)
!10595 = !DILocation(line: 165, column: 12, scope: !10578)
!10596 = !DILocation(line: 165, column: 21, scope: !10578)
!10597 = !DILocation(line: 166, column: 7, scope: !10578)
!10598 = !DILocation(line: 166, column: 12, scope: !10578)
!10599 = !DILocation(line: 166, column: 20, scope: !10578)
!10600 = !DILocation(line: 166, column: 25, scope: !10578)
!10601 = !DILocation(line: 167, column: 5, scope: !10578)
!10602 = !DILocation(line: 168, column: 1, scope: !10491)
!10603 = distinct !DISubprogram(name: "backup_file_rename", scope: !10604, file: !10604, line: 28, type: !634, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1594, retainedNodes: !143)
!10604 = !DIFile(filename: "lib/backup-rename.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10605 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10603, file: !10604, line: 28, type: !7)
!10606 = !DILocation(line: 28, column: 25, scope: !10603)
!10607 = !DILocalVariable(name: "file", arg: 2, scope: !10603, file: !10604, line: 28, type: !115)
!10608 = !DILocation(line: 28, column: 45, scope: !10603)
!10609 = !DILocalVariable(name: "backup_type", arg: 3, scope: !10603, file: !10604, line: 28, type: !68)
!10610 = !DILocation(line: 28, column: 68, scope: !10603)
!10611 = !DILocation(line: 30, column: 31, scope: !10603)
!10612 = !DILocation(line: 30, column: 39, scope: !10603)
!10613 = !DILocation(line: 30, column: 45, scope: !10603)
!10614 = !DILocation(line: 30, column: 10, scope: !10603)
!10615 = !DILocation(line: 30, column: 3, scope: !10603)
!10616 = distinct !DISubprogram(name: "find_backup_file_name", scope: !650, file: !650, line: 33, type: !634, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !630, retainedNodes: !143)
!10617 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10616, file: !650, line: 33, type: !7)
!10618 = !DILocation(line: 33, column: 28, scope: !10616)
!10619 = !DILocalVariable(name: "file", arg: 2, scope: !10616, file: !650, line: 33, type: !115)
!10620 = !DILocation(line: 33, column: 48, scope: !10616)
!10621 = !DILocalVariable(name: "backup_type", arg: 3, scope: !10616, file: !650, line: 34, type: !68)
!10622 = !DILocation(line: 34, column: 41, scope: !10616)
!10623 = !DILocalVariable(name: "result", scope: !10616, file: !650, line: 36, type: !9)
!10624 = !DILocation(line: 36, column: 9, scope: !10616)
!10625 = !DILocation(line: 36, column: 39, scope: !10616)
!10626 = !DILocation(line: 36, column: 47, scope: !10616)
!10627 = !DILocation(line: 36, column: 53, scope: !10616)
!10628 = !DILocation(line: 36, column: 18, scope: !10616)
!10629 = !DILocation(line: 37, column: 8, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10616, file: !650, line: 37, column: 7)
!10631 = !DILocation(line: 37, column: 7, scope: !10616)
!10632 = !DILocation(line: 38, column: 5, scope: !10630)
!10633 = !DILocation(line: 39, column: 10, scope: !10616)
!10634 = !DILocation(line: 39, column: 3, scope: !10616)
!10635 = distinct !DISubprogram(name: "get_version", scope: !650, file: !650, line: 71, type: !636, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !630, retainedNodes: !143)
!10636 = !DILocalVariable(name: "context", arg: 1, scope: !10635, file: !650, line: 71, type: !115)
!10637 = !DILocation(line: 71, column: 26, scope: !10635)
!10638 = !DILocalVariable(name: "version", arg: 2, scope: !10635, file: !650, line: 71, type: !115)
!10639 = !DILocation(line: 71, column: 47, scope: !10635)
!10640 = !DILocation(line: 73, column: 7, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10635, file: !650, line: 73, column: 7)
!10642 = !DILocation(line: 73, column: 15, scope: !10641)
!10643 = !DILocation(line: 73, column: 20, scope: !10641)
!10644 = !DILocation(line: 73, column: 24, scope: !10641)
!10645 = !DILocation(line: 73, column: 23, scope: !10641)
!10646 = !DILocation(line: 73, column: 32, scope: !10641)
!10647 = !DILocation(line: 73, column: 7, scope: !10635)
!10648 = !DILocation(line: 74, column: 5, scope: !10641)
!10649 = !DILocation(line: 76, column: 12, scope: !10641)
!10650 = !DILocation(line: 76, column: 5, scope: !10641)
!10651 = !DILocation(line: 77, column: 1, scope: !10635)
!10652 = distinct !DISubprogram(name: "xget_version", scope: !650, file: !650, line: 87, type: !636, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !630, retainedNodes: !143)
!10653 = !DILocalVariable(name: "context", arg: 1, scope: !10652, file: !650, line: 87, type: !115)
!10654 = !DILocation(line: 87, column: 27, scope: !10652)
!10655 = !DILocalVariable(name: "version", arg: 2, scope: !10652, file: !650, line: 87, type: !115)
!10656 = !DILocation(line: 87, column: 48, scope: !10652)
!10657 = !DILocation(line: 89, column: 7, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10652, file: !650, line: 89, column: 7)
!10659 = !DILocation(line: 89, column: 15, scope: !10658)
!10660 = !DILocation(line: 89, column: 19, scope: !10658)
!10661 = !DILocation(line: 89, column: 18, scope: !10658)
!10662 = !DILocation(line: 89, column: 7, scope: !10652)
!10663 = !DILocation(line: 90, column: 25, scope: !10658)
!10664 = !DILocation(line: 90, column: 34, scope: !10658)
!10665 = !DILocation(line: 90, column: 12, scope: !10658)
!10666 = !DILocation(line: 90, column: 5, scope: !10658)
!10667 = !DILocation(line: 92, column: 45, scope: !10658)
!10668 = !DILocation(line: 92, column: 12, scope: !10658)
!10669 = !DILocation(line: 92, column: 5, scope: !10658)
!10670 = !DILocation(line: 93, column: 1, scope: !10652)
!10671 = distinct !DISubprogram(name: "buffer_lcm", scope: !10672, file: !10672, line: 28, type: !1600, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1597, retainedNodes: !143)
!10672 = !DIFile(filename: "lib/buffer-lcm.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10673 = !DILocalVariable(name: "a", arg: 1, scope: !10671, file: !10672, line: 28, type: !55)
!10674 = !DILocation(line: 28, column: 20, scope: !10671)
!10675 = !DILocalVariable(name: "b", arg: 2, scope: !10671, file: !10672, line: 28, type: !55)
!10676 = !DILocation(line: 28, column: 30, scope: !10671)
!10677 = !DILocalVariable(name: "lcm_max", arg: 3, scope: !10671, file: !10672, line: 28, type: !55)
!10678 = !DILocation(line: 28, column: 40, scope: !10671)
!10679 = !DILocalVariable(name: "size", scope: !10671, file: !10672, line: 30, type: !55)
!10680 = !DILocation(line: 30, column: 10, scope: !10671)
!10681 = !DILocation(line: 33, column: 8, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10671, file: !10672, line: 33, column: 7)
!10683 = !DILocation(line: 33, column: 7, scope: !10671)
!10684 = !DILocation(line: 34, column: 12, scope: !10682)
!10685 = !DILocation(line: 34, column: 16, scope: !10682)
!10686 = !DILocation(line: 34, column: 10, scope: !10682)
!10687 = !DILocation(line: 34, column: 5, scope: !10682)
!10688 = !DILocation(line: 37, column: 11, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10690, file: !10672, line: 37, column: 11)
!10690 = distinct !DILexicalBlock(scope: !10682, file: !10672, line: 36, column: 5)
!10691 = !DILocation(line: 37, column: 11, scope: !10690)
!10692 = !DILocalVariable(name: "lcm", scope: !10693, file: !10672, line: 42, type: !55)
!10693 = distinct !DILexicalBlock(scope: !10689, file: !10672, line: 38, column: 9)
!10694 = !DILocation(line: 42, column: 18, scope: !10693)
!10695 = !DILocalVariable(name: "m", scope: !10693, file: !10672, line: 42, type: !55)
!10696 = !DILocation(line: 42, column: 23, scope: !10693)
!10697 = !DILocalVariable(name: "n", scope: !10693, file: !10672, line: 42, type: !55)
!10698 = !DILocation(line: 42, column: 26, scope: !10693)
!10699 = !DILocalVariable(name: "q", scope: !10693, file: !10672, line: 42, type: !55)
!10700 = !DILocation(line: 42, column: 29, scope: !10693)
!10701 = !DILocalVariable(name: "r", scope: !10693, file: !10672, line: 42, type: !55)
!10702 = !DILocation(line: 42, column: 32, scope: !10693)
!10703 = !DILocation(line: 45, column: 20, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10693, file: !10672, line: 45, column: 11)
!10705 = !DILocation(line: 45, column: 18, scope: !10704)
!10706 = !DILocation(line: 45, column: 27, scope: !10704)
!10707 = !DILocation(line: 45, column: 25, scope: !10704)
!10708 = !DILocation(line: 45, column: 16, scope: !10704)
!10709 = !DILocation(line: 45, column: 36, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10704, file: !10672, line: 45, column: 11)
!10711 = !DILocation(line: 45, column: 40, scope: !10710)
!10712 = !DILocation(line: 45, column: 38, scope: !10710)
!10713 = !DILocation(line: 45, column: 34, scope: !10710)
!10714 = !DILocation(line: 45, column: 43, scope: !10710)
!10715 = !DILocation(line: 45, column: 11, scope: !10704)
!10716 = !DILocation(line: 46, column: 13, scope: !10710)
!10717 = !DILocation(line: 45, column: 54, scope: !10710)
!10718 = !DILocation(line: 45, column: 52, scope: !10710)
!10719 = !DILocation(line: 45, column: 61, scope: !10710)
!10720 = !DILocation(line: 45, column: 59, scope: !10710)
!10721 = !DILocation(line: 45, column: 11, scope: !10710)
!10722 = distinct !{!10722, !10715, !10723}
!10723 = !DILocation(line: 46, column: 13, scope: !10704)
!10724 = !DILocation(line: 49, column: 15, scope: !10693)
!10725 = !DILocation(line: 49, column: 19, scope: !10693)
!10726 = !DILocation(line: 49, column: 17, scope: !10693)
!10727 = !DILocation(line: 49, column: 13, scope: !10693)
!10728 = !DILocation(line: 50, column: 17, scope: !10693)
!10729 = !DILocation(line: 50, column: 21, scope: !10693)
!10730 = !DILocation(line: 50, column: 19, scope: !10693)
!10731 = !DILocation(line: 50, column: 15, scope: !10693)
!10732 = !DILocation(line: 51, column: 15, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10693, file: !10672, line: 51, column: 15)
!10734 = !DILocation(line: 51, column: 22, scope: !10733)
!10735 = !DILocation(line: 51, column: 19, scope: !10733)
!10736 = !DILocation(line: 51, column: 30, scope: !10733)
!10737 = !DILocation(line: 51, column: 33, scope: !10733)
!10738 = !DILocation(line: 51, column: 39, scope: !10733)
!10739 = !DILocation(line: 51, column: 37, scope: !10733)
!10740 = !DILocation(line: 51, column: 44, scope: !10733)
!10741 = !DILocation(line: 51, column: 41, scope: !10733)
!10742 = !DILocation(line: 51, column: 15, scope: !10693)
!10743 = !DILocation(line: 52, column: 20, scope: !10733)
!10744 = !DILocation(line: 52, column: 13, scope: !10733)
!10745 = !DILocation(line: 53, column: 9, scope: !10693)
!10746 = !DILocation(line: 55, column: 14, scope: !10690)
!10747 = !DILocation(line: 55, column: 12, scope: !10690)
!10748 = !DILocation(line: 58, column: 10, scope: !10671)
!10749 = !DILocation(line: 58, column: 18, scope: !10671)
!10750 = !DILocation(line: 58, column: 15, scope: !10671)
!10751 = !DILocation(line: 58, column: 28, scope: !10671)
!10752 = !DILocation(line: 58, column: 35, scope: !10671)
!10753 = !DILocation(line: 58, column: 3, scope: !10671)
!10754 = !DILocation(line: 59, column: 1, scope: !10671)
!10755 = distinct !DISubprogram(name: "close_stdin_set_file_name", scope: !692, file: !692, line: 43, type: !136, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !653, retainedNodes: !143)
!10756 = !DILocalVariable(name: "file", arg: 1, scope: !10755, file: !692, line: 43, type: !115)
!10757 = !DILocation(line: 43, column: 40, scope: !10755)
!10758 = !DILocation(line: 45, column: 15, scope: !10755)
!10759 = !DILocation(line: 45, column: 13, scope: !10755)
!10760 = !DILocation(line: 46, column: 1, scope: !10755)
!10761 = distinct !DISubprogram(name: "close_stdin", scope: !692, file: !692, line: 79, type: !134, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !653, retainedNodes: !143)
!10762 = !DILocalVariable(name: "fail", scope: !10761, file: !692, line: 81, type: !120)
!10763 = !DILocation(line: 81, column: 8, scope: !10761)
!10764 = !DILocation(line: 87, column: 19, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10761, file: !692, line: 87, column: 7)
!10766 = !DILocation(line: 87, column: 7, scope: !10765)
!10767 = !DILocation(line: 87, column: 26, scope: !10765)
!10768 = !DILocation(line: 87, column: 7, scope: !10761)
!10769 = !DILocation(line: 91, column: 19, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10771, file: !692, line: 91, column: 11)
!10771 = distinct !DILexicalBlock(scope: !10765, file: !692, line: 88, column: 5)
!10772 = !DILocation(line: 91, column: 11, scope: !10770)
!10773 = !DILocation(line: 91, column: 39, scope: !10770)
!10774 = !DILocation(line: 91, column: 44, scope: !10770)
!10775 = !DILocation(line: 91, column: 55, scope: !10770)
!10776 = !DILocation(line: 91, column: 47, scope: !10770)
!10777 = !DILocation(line: 91, column: 62, scope: !10770)
!10778 = !DILocation(line: 91, column: 11, scope: !10771)
!10779 = !DILocation(line: 92, column: 14, scope: !10770)
!10780 = !DILocation(line: 92, column: 9, scope: !10770)
!10781 = !DILocation(line: 93, column: 5, scope: !10771)
!10782 = !DILocation(line: 94, column: 21, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10761, file: !692, line: 94, column: 7)
!10784 = !DILocation(line: 94, column: 7, scope: !10783)
!10785 = !DILocation(line: 94, column: 28, scope: !10783)
!10786 = !DILocation(line: 94, column: 7, scope: !10761)
!10787 = !DILocation(line: 95, column: 10, scope: !10783)
!10788 = !DILocation(line: 95, column: 5, scope: !10783)
!10789 = !DILocation(line: 96, column: 7, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10761, file: !692, line: 96, column: 7)
!10791 = !DILocation(line: 96, column: 7, scope: !10761)
!10792 = !DILocalVariable(name: "close_error", scope: !10793, file: !692, line: 100, type: !115)
!10793 = distinct !DILexicalBlock(scope: !10790, file: !692, line: 97, column: 5)
!10794 = !DILocation(line: 100, column: 19, scope: !10793)
!10795 = !DILocation(line: 100, column: 33, scope: !10793)
!10796 = !DILocation(line: 101, column: 11, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10793, file: !692, line: 101, column: 11)
!10798 = !DILocation(line: 101, column: 11, scope: !10793)
!10799 = !DILocation(line: 102, column: 19, scope: !10797)
!10800 = !DILocation(line: 102, column: 52, scope: !10797)
!10801 = !DILocation(line: 102, column: 36, scope: !10797)
!10802 = !DILocation(line: 103, column: 16, scope: !10797)
!10803 = !DILocation(line: 102, column: 9, scope: !10797)
!10804 = !DILocation(line: 105, column: 19, scope: !10797)
!10805 = !DILocation(line: 105, column: 32, scope: !10797)
!10806 = !DILocation(line: 105, column: 9, scope: !10797)
!10807 = !DILocation(line: 106, column: 5, scope: !10793)
!10808 = !DILocation(line: 108, column: 3, scope: !10761)
!10809 = !DILocation(line: 110, column: 7, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10761, file: !692, line: 110, column: 7)
!10811 = !DILocation(line: 110, column: 7, scope: !10761)
!10812 = !DILocation(line: 111, column: 12, scope: !10810)
!10813 = !DILocation(line: 111, column: 5, scope: !10810)
!10814 = !DILocation(line: 112, column: 1, scope: !10761)
!10815 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !737, file: !737, line: 51, type: !136, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !695, retainedNodes: !143)
!10816 = !DILocalVariable(name: "file", arg: 1, scope: !10815, file: !737, line: 51, type: !115)
!10817 = !DILocation(line: 51, column: 41, scope: !10815)
!10818 = !DILocation(line: 53, column: 15, scope: !10815)
!10819 = !DILocation(line: 53, column: 13, scope: !10815)
!10820 = !DILocation(line: 54, column: 1, scope: !10815)
!10821 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !737, file: !737, line: 88, type: !698, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !695, retainedNodes: !143)
!10822 = !DILocalVariable(name: "ignore", arg: 1, scope: !10821, file: !737, line: 88, type: !120)
!10823 = !DILocation(line: 88, column: 37, scope: !10821)
!10824 = !DILocation(line: 90, column: 18, scope: !10821)
!10825 = !DILocation(line: 90, column: 16, scope: !10821)
!10826 = !DILocation(line: 91, column: 1, scope: !10821)
!10827 = distinct !DISubprogram(name: "close_stdout", scope: !737, file: !737, line: 117, type: !134, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !695, retainedNodes: !143)
!10828 = !DILocation(line: 119, column: 21, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10827, file: !737, line: 119, column: 7)
!10830 = !DILocation(line: 119, column: 7, scope: !10829)
!10831 = !DILocation(line: 119, column: 29, scope: !10829)
!10832 = !DILocation(line: 120, column: 7, scope: !10829)
!10833 = !DILocation(line: 120, column: 12, scope: !10829)
!10834 = !DILocation(line: 120, column: 25, scope: !10829)
!10835 = !DILocation(line: 120, column: 28, scope: !10829)
!10836 = !DILocation(line: 120, column: 34, scope: !10829)
!10837 = !DILocation(line: 119, column: 7, scope: !10827)
!10838 = !DILocalVariable(name: "write_error", scope: !10839, file: !737, line: 122, type: !115)
!10839 = distinct !DILexicalBlock(scope: !10829, file: !737, line: 121, column: 5)
!10840 = !DILocation(line: 122, column: 19, scope: !10839)
!10841 = !DILocation(line: 122, column: 33, scope: !10839)
!10842 = !DILocation(line: 123, column: 11, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10839, file: !737, line: 123, column: 11)
!10844 = !DILocation(line: 123, column: 11, scope: !10839)
!10845 = !DILocation(line: 124, column: 19, scope: !10843)
!10846 = !DILocation(line: 124, column: 52, scope: !10843)
!10847 = !DILocation(line: 124, column: 36, scope: !10843)
!10848 = !DILocation(line: 125, column: 16, scope: !10843)
!10849 = !DILocation(line: 124, column: 9, scope: !10843)
!10850 = !DILocation(line: 127, column: 19, scope: !10843)
!10851 = !DILocation(line: 127, column: 32, scope: !10843)
!10852 = !DILocation(line: 127, column: 9, scope: !10843)
!10853 = !DILocation(line: 129, column: 14, scope: !10839)
!10854 = !DILocation(line: 129, column: 7, scope: !10839)
!10855 = !DILocation(line: 134, column: 42, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10827, file: !737, line: 134, column: 7)
!10857 = !DILocation(line: 134, column: 28, scope: !10856)
!10858 = !DILocation(line: 134, column: 50, scope: !10856)
!10859 = !DILocation(line: 134, column: 7, scope: !10827)
!10860 = !DILocation(line: 135, column: 12, scope: !10856)
!10861 = !DILocation(line: 135, column: 5, scope: !10856)
!10862 = !DILocation(line: 136, column: 1, scope: !10827)
!10863 = distinct !DISubprogram(name: "dir_name", scope: !10864, file: !10864, line: 32, type: !988, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1602, retainedNodes: !143)
!10864 = !DIFile(filename: "lib/dirname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10865 = !DILocalVariable(name: "file", arg: 1, scope: !10863, file: !10864, line: 32, type: !115)
!10866 = !DILocation(line: 32, column: 23, scope: !10863)
!10867 = !DILocalVariable(name: "result", scope: !10863, file: !10864, line: 34, type: !9)
!10868 = !DILocation(line: 34, column: 9, scope: !10863)
!10869 = !DILocation(line: 34, column: 29, scope: !10863)
!10870 = !DILocation(line: 34, column: 18, scope: !10863)
!10871 = !DILocation(line: 35, column: 8, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10863, file: !10864, line: 35, column: 7)
!10873 = !DILocation(line: 35, column: 7, scope: !10863)
!10874 = !DILocation(line: 36, column: 5, scope: !10872)
!10875 = !DILocation(line: 37, column: 10, scope: !10863)
!10876 = !DILocation(line: 37, column: 3, scope: !10863)
!10877 = distinct !DISubprogram(name: "dir_len", scope: !10878, file: !10878, line: 32, type: !1608, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1605, retainedNodes: !143)
!10878 = !DIFile(filename: "lib/dirname-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10879 = !DILocalVariable(name: "file", arg: 1, scope: !10877, file: !10878, line: 32, type: !115)
!10880 = !DILocation(line: 32, column: 22, scope: !10877)
!10881 = !DILocalVariable(name: "prefix_length", scope: !10877, file: !10878, line: 34, type: !55)
!10882 = !DILocation(line: 34, column: 10, scope: !10877)
!10883 = !DILocalVariable(name: "length", scope: !10877, file: !10878, line: 35, type: !55)
!10884 = !DILocation(line: 35, column: 10, scope: !10877)
!10885 = !DILocation(line: 38, column: 21, scope: !10877)
!10886 = !DILocation(line: 38, column: 35, scope: !10877)
!10887 = !DILocation(line: 41, column: 24, scope: !10877)
!10888 = !DILocation(line: 38, column: 20, scope: !10877)
!10889 = !DILocation(line: 38, column: 17, scope: !10877)
!10890 = !DILocation(line: 48, column: 33, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10877, file: !10878, line: 48, column: 3)
!10892 = !DILocation(line: 48, column: 17, scope: !10891)
!10893 = !DILocation(line: 48, column: 41, scope: !10891)
!10894 = !DILocation(line: 48, column: 39, scope: !10891)
!10895 = !DILocation(line: 48, column: 15, scope: !10891)
!10896 = !DILocation(line: 48, column: 8, scope: !10891)
!10897 = !DILocation(line: 49, column: 8, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10891, file: !10878, line: 48, column: 3)
!10899 = !DILocation(line: 49, column: 24, scope: !10898)
!10900 = !DILocation(line: 49, column: 22, scope: !10898)
!10901 = !DILocation(line: 48, column: 3, scope: !10891)
!10902 = !DILocation(line: 50, column: 11, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10898, file: !10878, line: 50, column: 9)
!10904 = !DILocation(line: 50, column: 9, scope: !10898)
!10905 = !DILocation(line: 51, column: 7, scope: !10903)
!10906 = !DILocation(line: 49, column: 38, scope: !10898)
!10907 = !DILocation(line: 48, column: 3, scope: !10898)
!10908 = distinct !{!10908, !10901, !10909}
!10909 = !DILocation(line: 51, column: 7, scope: !10891)
!10910 = !DILocation(line: 52, column: 10, scope: !10877)
!10911 = !DILocation(line: 52, column: 3, scope: !10877)
!10912 = distinct !DISubprogram(name: "mdir_name", scope: !10878, file: !10878, line: 71, type: !988, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1605, retainedNodes: !143)
!10913 = !DILocalVariable(name: "file", arg: 1, scope: !10912, file: !10878, line: 71, type: !115)
!10914 = !DILocation(line: 71, column: 24, scope: !10912)
!10915 = !DILocalVariable(name: "length", scope: !10912, file: !10878, line: 73, type: !55)
!10916 = !DILocation(line: 73, column: 10, scope: !10912)
!10917 = !DILocation(line: 73, column: 28, scope: !10912)
!10918 = !DILocation(line: 73, column: 19, scope: !10912)
!10919 = !DILocalVariable(name: "append_dot", scope: !10912, file: !10878, line: 74, type: !120)
!10920 = !DILocation(line: 74, column: 8, scope: !10912)
!10921 = !DILocation(line: 74, column: 22, scope: !10912)
!10922 = !DILocation(line: 74, column: 29, scope: !10912)
!10923 = !DILocation(line: 75, column: 22, scope: !10912)
!10924 = !DILocalVariable(name: "dir", scope: !10912, file: !10878, line: 78, type: !9)
!10925 = !DILocation(line: 78, column: 9, scope: !10912)
!10926 = !DILocation(line: 78, column: 23, scope: !10912)
!10927 = !DILocation(line: 78, column: 32, scope: !10912)
!10928 = !DILocation(line: 78, column: 30, scope: !10912)
!10929 = !DILocation(line: 78, column: 43, scope: !10912)
!10930 = !DILocation(line: 78, column: 15, scope: !10912)
!10931 = !DILocation(line: 79, column: 8, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10912, file: !10878, line: 79, column: 7)
!10933 = !DILocation(line: 79, column: 7, scope: !10912)
!10934 = !DILocation(line: 80, column: 5, scope: !10932)
!10935 = !DILocation(line: 81, column: 11, scope: !10912)
!10936 = !DILocation(line: 81, column: 16, scope: !10912)
!10937 = !DILocation(line: 81, column: 22, scope: !10912)
!10938 = !DILocation(line: 81, column: 3, scope: !10912)
!10939 = !DILocation(line: 82, column: 7, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10912, file: !10878, line: 82, column: 7)
!10941 = !DILocation(line: 82, column: 7, scope: !10912)
!10942 = !DILocation(line: 83, column: 5, scope: !10940)
!10943 = !DILocation(line: 83, column: 15, scope: !10940)
!10944 = !DILocation(line: 83, column: 19, scope: !10940)
!10945 = !DILocation(line: 84, column: 3, scope: !10912)
!10946 = !DILocation(line: 84, column: 7, scope: !10912)
!10947 = !DILocation(line: 84, column: 15, scope: !10912)
!10948 = !DILocation(line: 85, column: 10, scope: !10912)
!10949 = !DILocation(line: 85, column: 3, scope: !10912)
!10950 = !DILocation(line: 86, column: 1, scope: !10912)
!10951 = distinct !DISubprogram(name: "last_component", scope: !10952, file: !10952, line: 30, type: !988, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1610, retainedNodes: !143)
!10952 = !DIFile(filename: "lib/basename-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10953 = !DILocalVariable(name: "name", arg: 1, scope: !10951, file: !10952, line: 30, type: !115)
!10954 = !DILocation(line: 30, column: 29, scope: !10951)
!10955 = !DILocalVariable(name: "base", scope: !10951, file: !10952, line: 32, type: !115)
!10956 = !DILocation(line: 32, column: 15, scope: !10951)
!10957 = !DILocation(line: 32, column: 22, scope: !10951)
!10958 = !DILocation(line: 32, column: 27, scope: !10951)
!10959 = !DILocalVariable(name: "p", scope: !10951, file: !10952, line: 33, type: !115)
!10960 = !DILocation(line: 33, column: 15, scope: !10951)
!10961 = !DILocalVariable(name: "saw_slash", scope: !10951, file: !10952, line: 34, type: !120)
!10962 = !DILocation(line: 34, column: 8, scope: !10951)
!10963 = !DILocation(line: 36, column: 3, scope: !10951)
!10964 = !DILocation(line: 36, column: 10, scope: !10951)
!10965 = !DILocation(line: 37, column: 9, scope: !10951)
!10966 = distinct !{!10966, !10963, !10965}
!10967 = !DILocation(line: 39, column: 12, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10951, file: !10952, line: 39, column: 3)
!10969 = !DILocation(line: 39, column: 10, scope: !10968)
!10970 = !DILocation(line: 39, column: 8, scope: !10968)
!10971 = !DILocation(line: 39, column: 19, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10968, file: !10952, line: 39, column: 3)
!10973 = !DILocation(line: 39, column: 18, scope: !10972)
!10974 = !DILocation(line: 39, column: 3, scope: !10968)
!10975 = !DILocation(line: 41, column: 11, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10977, file: !10952, line: 41, column: 11)
!10977 = distinct !DILexicalBlock(scope: !10972, file: !10952, line: 40, column: 5)
!10978 = !DILocation(line: 41, column: 11, scope: !10977)
!10979 = !DILocation(line: 42, column: 19, scope: !10976)
!10980 = !DILocation(line: 42, column: 9, scope: !10976)
!10981 = !DILocation(line: 43, column: 16, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10976, file: !10952, line: 43, column: 16)
!10983 = !DILocation(line: 43, column: 16, scope: !10976)
!10984 = !DILocation(line: 45, column: 18, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10982, file: !10952, line: 44, column: 9)
!10986 = !DILocation(line: 45, column: 16, scope: !10985)
!10987 = !DILocation(line: 46, column: 21, scope: !10985)
!10988 = !DILocation(line: 47, column: 9, scope: !10985)
!10989 = !DILocation(line: 48, column: 5, scope: !10977)
!10990 = !DILocation(line: 39, column: 23, scope: !10972)
!10991 = !DILocation(line: 39, column: 3, scope: !10972)
!10992 = distinct !{!10992, !10974, !10993}
!10993 = !DILocation(line: 48, column: 5, scope: !10968)
!10994 = !DILocation(line: 50, column: 19, scope: !10951)
!10995 = !DILocation(line: 50, column: 3, scope: !10951)
!10996 = distinct !DISubprogram(name: "base_len", scope: !10952, file: !10952, line: 58, type: !1608, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1610, retainedNodes: !143)
!10997 = !DILocalVariable(name: "name", arg: 1, scope: !10996, file: !10952, line: 58, type: !115)
!10998 = !DILocation(line: 58, column: 23, scope: !10996)
!10999 = !DILocalVariable(name: "len", scope: !10996, file: !10952, line: 60, type: !55)
!11000 = !DILocation(line: 60, column: 10, scope: !10996)
!11001 = !DILocalVariable(name: "prefix_len", scope: !10996, file: !10952, line: 61, type: !55)
!11002 = !DILocation(line: 61, column: 10, scope: !10996)
!11003 = !DILocation(line: 63, column: 22, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !10996, file: !10952, line: 63, column: 3)
!11005 = !DILocation(line: 63, column: 14, scope: !11004)
!11006 = !DILocation(line: 63, column: 12, scope: !11004)
!11007 = !DILocation(line: 63, column: 8, scope: !11004)
!11008 = !DILocation(line: 63, column: 34, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11004, file: !10952, line: 63, column: 3)
!11010 = !DILocation(line: 63, column: 32, scope: !11009)
!11011 = !DILocation(line: 63, column: 38, scope: !11009)
!11012 = !DILocation(line: 63, column: 41, scope: !11009)
!11013 = !DILocation(line: 0, scope: !11009)
!11014 = !DILocation(line: 63, column: 3, scope: !11004)
!11015 = !DILocation(line: 64, column: 5, scope: !11009)
!11016 = !DILocation(line: 63, column: 70, scope: !11009)
!11017 = !DILocation(line: 63, column: 3, scope: !11009)
!11018 = distinct !{!11018, !11014, !11019}
!11019 = !DILocation(line: 64, column: 5, scope: !11004)
!11020 = !DILocation(line: 74, column: 10, scope: !10996)
!11021 = !DILocation(line: 74, column: 3, scope: !10996)
!11022 = distinct !DISubprogram(name: "strip_trailing_slashes", scope: !11023, file: !11023, line: 31, type: !1616, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1613, retainedNodes: !143)
!11023 = !DIFile(filename: "lib/stripslash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11024 = !DILocalVariable(name: "file", arg: 1, scope: !11022, file: !11023, line: 31, type: !9)
!11025 = !DILocation(line: 31, column: 31, scope: !11022)
!11026 = !DILocalVariable(name: "base", scope: !11022, file: !11023, line: 33, type: !9)
!11027 = !DILocation(line: 33, column: 9, scope: !11022)
!11028 = !DILocation(line: 33, column: 32, scope: !11022)
!11029 = !DILocation(line: 33, column: 16, scope: !11022)
!11030 = !DILocalVariable(name: "base_lim", scope: !11022, file: !11023, line: 34, type: !9)
!11031 = !DILocation(line: 34, column: 9, scope: !11022)
!11032 = !DILocalVariable(name: "had_slash", scope: !11022, file: !11023, line: 35, type: !120)
!11033 = !DILocation(line: 35, column: 8, scope: !11022)
!11034 = !DILocation(line: 39, column: 10, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11022, file: !11023, line: 39, column: 7)
!11036 = !DILocation(line: 39, column: 9, scope: !11035)
!11037 = !DILocation(line: 39, column: 7, scope: !11022)
!11038 = !DILocation(line: 40, column: 12, scope: !11035)
!11039 = !DILocation(line: 40, column: 10, scope: !11035)
!11040 = !DILocation(line: 40, column: 5, scope: !11035)
!11041 = !DILocation(line: 41, column: 14, scope: !11022)
!11042 = !DILocation(line: 41, column: 31, scope: !11022)
!11043 = !DILocation(line: 41, column: 21, scope: !11022)
!11044 = !DILocation(line: 41, column: 19, scope: !11022)
!11045 = !DILocation(line: 41, column: 12, scope: !11022)
!11046 = !DILocation(line: 42, column: 17, scope: !11022)
!11047 = !DILocation(line: 42, column: 16, scope: !11022)
!11048 = !DILocation(line: 42, column: 26, scope: !11022)
!11049 = !DILocation(line: 42, column: 13, scope: !11022)
!11050 = !DILocation(line: 43, column: 4, scope: !11022)
!11051 = !DILocation(line: 43, column: 13, scope: !11022)
!11052 = !DILocation(line: 44, column: 10, scope: !11022)
!11053 = !DILocation(line: 44, column: 3, scope: !11022)
!11054 = distinct !DISubprogram(name: "fdadvise", scope: !11055, file: !11055, line: 31, type: !1631, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1618, retainedNodes: !143)
!11055 = !DIFile(filename: "lib/fadvise.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11056 = !DILocalVariable(name: "fd", arg: 1, scope: !11054, file: !11055, line: 31, type: !7)
!11057 = !DILocation(line: 31, column: 15, scope: !11054)
!11058 = !DILocalVariable(name: "offset", arg: 2, scope: !11054, file: !11055, line: 31, type: !248)
!11059 = !DILocation(line: 31, column: 25, scope: !11054)
!11060 = !DILocalVariable(name: "len", arg: 3, scope: !11054, file: !11055, line: 31, type: !248)
!11061 = !DILocation(line: 31, column: 39, scope: !11054)
!11062 = !DILocalVariable(name: "advice", arg: 4, scope: !11054, file: !11055, line: 31, type: !1633)
!11063 = !DILocation(line: 31, column: 54, scope: !11054)
!11064 = !DILocalVariable(name: "__x", scope: !11065, file: !11055, line: 34, type: !7)
!11065 = distinct !DILexicalBlock(scope: !11054, file: !11055, line: 34, column: 3)
!11066 = !DILocation(line: 34, column: 3, scope: !11065)
!11067 = !DILocation(line: 36, column: 1, scope: !11054)
!11068 = distinct !DISubprogram(name: "fadvise", scope: !11055, file: !11055, line: 39, type: !1634, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1618, retainedNodes: !143)
!11069 = !DILocalVariable(name: "fp", arg: 1, scope: !11068, file: !11055, line: 39, type: !1636)
!11070 = !DILocation(line: 39, column: 16, scope: !11068)
!11071 = !DILocalVariable(name: "advice", arg: 2, scope: !11068, file: !11055, line: 39, type: !1633)
!11072 = !DILocation(line: 39, column: 30, scope: !11068)
!11073 = !DILocation(line: 41, column: 7, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11068, file: !11055, line: 41, column: 7)
!11075 = !DILocation(line: 41, column: 7, scope: !11068)
!11076 = !DILocation(line: 42, column: 23, scope: !11074)
!11077 = !DILocation(line: 42, column: 15, scope: !11074)
!11078 = !DILocation(line: 42, column: 34, scope: !11074)
!11079 = !DILocation(line: 42, column: 5, scope: !11074)
!11080 = !DILocation(line: 43, column: 1, scope: !11068)
!11081 = distinct !DISubprogram(name: "open_safer", scope: !11082, file: !11082, line: 29, type: !11083, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1670, retainedNodes: !143)
!11082 = !DIFile(filename: "lib/open-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11083 = !DISubroutineType(types: !11084)
!11084 = !{!7, !115, !7, null}
!11085 = !DILocalVariable(name: "file", arg: 1, scope: !11081, file: !11082, line: 29, type: !115)
!11086 = !DILocation(line: 29, column: 25, scope: !11081)
!11087 = !DILocalVariable(name: "flags", arg: 2, scope: !11081, file: !11082, line: 29, type: !7)
!11088 = !DILocation(line: 29, column: 35, scope: !11081)
!11089 = !DILocalVariable(name: "mode", scope: !11081, file: !11082, line: 31, type: !160)
!11090 = !DILocation(line: 31, column: 10, scope: !11081)
!11091 = !DILocation(line: 33, column: 7, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11081, file: !11082, line: 33, column: 7)
!11093 = !DILocation(line: 33, column: 13, scope: !11092)
!11094 = !DILocation(line: 33, column: 7, scope: !11081)
!11095 = !DILocalVariable(name: "ap", scope: !11096, file: !11082, line: 35, type: !1675)
!11096 = distinct !DILexicalBlock(scope: !11092, file: !11082, line: 34, column: 5)
!11097 = !DILocation(line: 35, column: 15, scope: !11096)
!11098 = !DILocation(line: 36, column: 7, scope: !11096)
!11099 = !DILocation(line: 40, column: 14, scope: !11096)
!11100 = !DILocation(line: 40, column: 12, scope: !11096)
!11101 = !DILocation(line: 42, column: 7, scope: !11096)
!11102 = !DILocation(line: 43, column: 5, scope: !11096)
!11103 = !DILocation(line: 45, column: 26, scope: !11081)
!11104 = !DILocation(line: 45, column: 32, scope: !11081)
!11105 = !DILocation(line: 45, column: 39, scope: !11081)
!11106 = !DILocation(line: 45, column: 20, scope: !11081)
!11107 = !DILocation(line: 45, column: 10, scope: !11081)
!11108 = !DILocation(line: 45, column: 3, scope: !11081)
!11109 = distinct !DISubprogram(name: "record_file", scope: !11110, file: !11110, line: 29, type: !1687, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1684, retainedNodes: !143)
!11110 = !DIFile(filename: "lib/file-set.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11111 = !DILocalVariable(name: "ht", arg: 1, scope: !11109, file: !11110, line: 29, type: !195)
!11112 = !DILocation(line: 29, column: 26, scope: !11109)
!11113 = !DILocalVariable(name: "file", arg: 2, scope: !11109, file: !11110, line: 29, type: !115)
!11114 = !DILocation(line: 29, column: 42, scope: !11109)
!11115 = !DILocalVariable(name: "stats", arg: 3, scope: !11109, file: !11110, line: 29, type: !1689)
!11116 = !DILocation(line: 29, column: 67, scope: !11109)
!11117 = !DILocalVariable(name: "ent", scope: !11109, file: !11110, line: 31, type: !1712)
!11118 = !DILocation(line: 31, column: 20, scope: !11109)
!11119 = !DILocation(line: 33, column: 7, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11109, file: !11110, line: 33, column: 7)
!11121 = !DILocation(line: 33, column: 10, scope: !11120)
!11122 = !DILocation(line: 33, column: 7, scope: !11109)
!11123 = !DILocation(line: 34, column: 5, scope: !11120)
!11124 = !DILocation(line: 36, column: 9, scope: !11109)
!11125 = !DILocation(line: 36, column: 7, scope: !11109)
!11126 = !DILocation(line: 37, column: 24, scope: !11109)
!11127 = !DILocation(line: 37, column: 15, scope: !11109)
!11128 = !DILocation(line: 37, column: 3, scope: !11109)
!11129 = !DILocation(line: 37, column: 8, scope: !11109)
!11130 = !DILocation(line: 37, column: 13, scope: !11109)
!11131 = !{!11132, !2996, i64 0}
!11132 = !{!"F_triple", !2996, i64 0, !3180, i64 8, !3180, i64 16}
!11133 = !DILocation(line: 38, column: 17, scope: !11109)
!11134 = !DILocation(line: 38, column: 24, scope: !11109)
!11135 = !DILocation(line: 38, column: 3, scope: !11109)
!11136 = !DILocation(line: 38, column: 8, scope: !11109)
!11137 = !DILocation(line: 38, column: 15, scope: !11109)
!11138 = !{!11132, !3180, i64 8}
!11139 = !DILocation(line: 39, column: 17, scope: !11109)
!11140 = !DILocation(line: 39, column: 24, scope: !11109)
!11141 = !DILocation(line: 39, column: 3, scope: !11109)
!11142 = !DILocation(line: 39, column: 8, scope: !11109)
!11143 = !DILocation(line: 39, column: 15, scope: !11109)
!11144 = !{!11132, !3180, i64 16}
!11145 = !DILocalVariable(name: "ent_from_table", scope: !11146, file: !11110, line: 42, type: !1712)
!11146 = distinct !DILexicalBlock(scope: !11109, file: !11110, line: 41, column: 3)
!11147 = !DILocation(line: 42, column: 22, scope: !11146)
!11148 = !DILocation(line: 42, column: 52, scope: !11146)
!11149 = !DILocation(line: 42, column: 56, scope: !11146)
!11150 = !DILocation(line: 42, column: 39, scope: !11146)
!11151 = !DILocation(line: 43, column: 9, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11146, file: !11110, line: 43, column: 9)
!11153 = !DILocation(line: 43, column: 24, scope: !11152)
!11154 = !DILocation(line: 43, column: 9, scope: !11146)
!11155 = !DILocation(line: 46, column: 9, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11152, file: !11110, line: 44, column: 7)
!11157 = !DILocation(line: 49, column: 9, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11146, file: !11110, line: 49, column: 9)
!11159 = !DILocation(line: 49, column: 27, scope: !11158)
!11160 = !DILocation(line: 49, column: 24, scope: !11158)
!11161 = !DILocation(line: 49, column: 9, scope: !11146)
!11162 = !DILocation(line: 53, column: 22, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11158, file: !11110, line: 50, column: 7)
!11164 = !DILocation(line: 53, column: 9, scope: !11163)
!11165 = !DILocation(line: 54, column: 7, scope: !11163)
!11166 = !DILocation(line: 56, column: 1, scope: !11109)
!11167 = distinct !DISubprogram(name: "seen_file", scope: !11110, file: !11110, line: 61, type: !1719, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1684, retainedNodes: !143)
!11168 = !DILocalVariable(name: "ht", arg: 1, scope: !11167, file: !11110, line: 61, type: !1721)
!11169 = !DILocation(line: 61, column: 30, scope: !11167)
!11170 = !DILocalVariable(name: "file", arg: 2, scope: !11167, file: !11110, line: 61, type: !115)
!11171 = !DILocation(line: 61, column: 46, scope: !11167)
!11172 = !DILocalVariable(name: "stats", arg: 3, scope: !11167, file: !11110, line: 62, type: !1689)
!11173 = !DILocation(line: 62, column: 31, scope: !11167)
!11174 = !DILocalVariable(name: "new_ent", scope: !11167, file: !11110, line: 64, type: !1713)
!11175 = !DILocation(line: 64, column: 19, scope: !11167)
!11176 = !DILocation(line: 66, column: 7, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11167, file: !11110, line: 66, column: 7)
!11178 = !DILocation(line: 66, column: 10, scope: !11177)
!11179 = !DILocation(line: 66, column: 7, scope: !11167)
!11180 = !DILocation(line: 67, column: 5, scope: !11177)
!11181 = !DILocation(line: 69, column: 27, scope: !11167)
!11182 = !DILocation(line: 69, column: 11, scope: !11167)
!11183 = !DILocation(line: 69, column: 16, scope: !11167)
!11184 = !DILocation(line: 70, column: 20, scope: !11167)
!11185 = !DILocation(line: 70, column: 27, scope: !11167)
!11186 = !DILocation(line: 70, column: 11, scope: !11167)
!11187 = !DILocation(line: 70, column: 18, scope: !11167)
!11188 = !DILocation(line: 71, column: 20, scope: !11167)
!11189 = !DILocation(line: 71, column: 27, scope: !11167)
!11190 = !DILocation(line: 71, column: 11, scope: !11167)
!11191 = !DILocation(line: 71, column: 18, scope: !11167)
!11192 = !DILocation(line: 73, column: 25, scope: !11167)
!11193 = !DILocation(line: 73, column: 29, scope: !11167)
!11194 = !DILocation(line: 73, column: 12, scope: !11167)
!11195 = !DILocation(line: 73, column: 11, scope: !11167)
!11196 = !DILocation(line: 73, column: 10, scope: !11167)
!11197 = !DILocation(line: 73, column: 3, scope: !11167)
!11198 = !DILocation(line: 74, column: 1, scope: !11167)
!11199 = distinct !DISubprogram(name: "file_type", scope: !11200, file: !11200, line: 29, type: !1726, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1723, retainedNodes: !143)
!11200 = !DIFile(filename: "lib/file-type.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11201 = !DILocalVariable(name: "st", arg: 1, scope: !11199, file: !11200, line: 29, type: !1728)
!11202 = !DILocation(line: 29, column: 31, scope: !11199)
!11203 = !DILocation(line: 39, column: 7, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11199, file: !11200, line: 39, column: 7)
!11205 = !DILocation(line: 39, column: 7, scope: !11199)
!11206 = !DILocation(line: 40, column: 12, scope: !11204)
!11207 = !DILocation(line: 40, column: 16, scope: !11204)
!11208 = !DILocation(line: 40, column: 24, scope: !11204)
!11209 = !DILocation(line: 40, column: 31, scope: !11204)
!11210 = !DILocation(line: 40, column: 57, scope: !11204)
!11211 = !DILocation(line: 40, column: 5, scope: !11204)
!11212 = !DILocation(line: 42, column: 7, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11199, file: !11200, line: 42, column: 7)
!11214 = !DILocation(line: 42, column: 7, scope: !11199)
!11215 = !DILocation(line: 43, column: 12, scope: !11213)
!11216 = !DILocation(line: 43, column: 5, scope: !11213)
!11217 = !DILocation(line: 45, column: 7, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11199, file: !11200, line: 45, column: 7)
!11219 = !DILocation(line: 45, column: 7, scope: !11199)
!11220 = !DILocation(line: 46, column: 12, scope: !11218)
!11221 = !DILocation(line: 46, column: 5, scope: !11218)
!11222 = !DILocation(line: 51, column: 7, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11199, file: !11200, line: 51, column: 7)
!11224 = !DILocation(line: 51, column: 7, scope: !11199)
!11225 = !DILocation(line: 52, column: 12, scope: !11223)
!11226 = !DILocation(line: 52, column: 5, scope: !11223)
!11227 = !DILocation(line: 54, column: 7, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11199, file: !11200, line: 54, column: 7)
!11229 = !DILocation(line: 54, column: 7, scope: !11199)
!11230 = !DILocation(line: 55, column: 12, scope: !11228)
!11231 = !DILocation(line: 55, column: 5, scope: !11228)
!11232 = !DILocation(line: 57, column: 7, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11199, file: !11200, line: 57, column: 7)
!11234 = !DILocation(line: 57, column: 7, scope: !11199)
!11235 = !DILocation(line: 58, column: 12, scope: !11233)
!11236 = !DILocation(line: 58, column: 5, scope: !11233)
!11237 = !DILocation(line: 65, column: 7, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11199, file: !11200, line: 65, column: 7)
!11239 = !DILocation(line: 65, column: 7, scope: !11199)
!11240 = !DILocation(line: 66, column: 12, scope: !11238)
!11241 = !DILocation(line: 66, column: 5, scope: !11238)
!11242 = !DILocation(line: 68, column: 7, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11199, file: !11200, line: 68, column: 7)
!11244 = !DILocation(line: 68, column: 7, scope: !11199)
!11245 = !DILocation(line: 69, column: 12, scope: !11243)
!11246 = !DILocation(line: 69, column: 5, scope: !11243)
!11247 = !DILocation(line: 74, column: 7, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11199, file: !11200, line: 74, column: 7)
!11249 = !DILocation(line: 74, column: 7, scope: !11199)
!11250 = !DILocation(line: 75, column: 12, scope: !11248)
!11251 = !DILocation(line: 75, column: 5, scope: !11248)
!11252 = !DILocation(line: 104, column: 7, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11199, file: !11200, line: 104, column: 7)
!11254 = !DILocation(line: 104, column: 7, scope: !11199)
!11255 = !DILocation(line: 105, column: 12, scope: !11253)
!11256 = !DILocation(line: 105, column: 5, scope: !11253)
!11257 = !DILocation(line: 110, column: 10, scope: !11199)
!11258 = !DILocation(line: 110, column: 3, scope: !11199)
!11259 = !DILocation(line: 111, column: 1, scope: !11199)
!11260 = distinct !DISubprogram(name: "strmode", scope: !11261, file: !11261, line: 96, type: !1754, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1751, retainedNodes: !143)
!11261 = !DIFile(filename: "lib/filemode.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11262 = !DILocalVariable(name: "mode", arg: 1, scope: !11260, file: !11261, line: 96, type: !160)
!11263 = !DILocation(line: 96, column: 17, scope: !11260)
!11264 = !DILocalVariable(name: "str", arg: 2, scope: !11260, file: !11261, line: 96, type: !9)
!11265 = !DILocation(line: 96, column: 29, scope: !11260)
!11266 = !DILocation(line: 98, column: 22, scope: !11260)
!11267 = !DILocation(line: 98, column: 12, scope: !11260)
!11268 = !DILocation(line: 98, column: 3, scope: !11260)
!11269 = !DILocation(line: 98, column: 10, scope: !11260)
!11270 = !DILocation(line: 99, column: 12, scope: !11260)
!11271 = !DILocation(line: 99, column: 17, scope: !11260)
!11272 = !DILocation(line: 99, column: 3, scope: !11260)
!11273 = !DILocation(line: 99, column: 10, scope: !11260)
!11274 = !DILocation(line: 100, column: 12, scope: !11260)
!11275 = !DILocation(line: 100, column: 17, scope: !11260)
!11276 = !DILocation(line: 100, column: 3, scope: !11260)
!11277 = !DILocation(line: 100, column: 10, scope: !11260)
!11278 = !DILocation(line: 101, column: 13, scope: !11260)
!11279 = !DILocation(line: 101, column: 18, scope: !11260)
!11280 = !DILocation(line: 102, column: 16, scope: !11260)
!11281 = !DILocation(line: 102, column: 21, scope: !11260)
!11282 = !DILocation(line: 103, column: 16, scope: !11260)
!11283 = !DILocation(line: 103, column: 21, scope: !11260)
!11284 = !DILocation(line: 101, column: 12, scope: !11260)
!11285 = !DILocation(line: 101, column: 3, scope: !11260)
!11286 = !DILocation(line: 101, column: 10, scope: !11260)
!11287 = !DILocation(line: 104, column: 12, scope: !11260)
!11288 = !DILocation(line: 104, column: 17, scope: !11260)
!11289 = !DILocation(line: 104, column: 3, scope: !11260)
!11290 = !DILocation(line: 104, column: 10, scope: !11260)
!11291 = !DILocation(line: 105, column: 12, scope: !11260)
!11292 = !DILocation(line: 105, column: 17, scope: !11260)
!11293 = !DILocation(line: 105, column: 3, scope: !11260)
!11294 = !DILocation(line: 105, column: 10, scope: !11260)
!11295 = !DILocation(line: 106, column: 13, scope: !11260)
!11296 = !DILocation(line: 106, column: 18, scope: !11260)
!11297 = !DILocation(line: 107, column: 16, scope: !11260)
!11298 = !DILocation(line: 107, column: 21, scope: !11260)
!11299 = !DILocation(line: 108, column: 16, scope: !11260)
!11300 = !DILocation(line: 108, column: 21, scope: !11260)
!11301 = !DILocation(line: 106, column: 12, scope: !11260)
!11302 = !DILocation(line: 106, column: 3, scope: !11260)
!11303 = !DILocation(line: 106, column: 10, scope: !11260)
!11304 = !DILocation(line: 109, column: 12, scope: !11260)
!11305 = !DILocation(line: 109, column: 17, scope: !11260)
!11306 = !DILocation(line: 109, column: 3, scope: !11260)
!11307 = !DILocation(line: 109, column: 10, scope: !11260)
!11308 = !DILocation(line: 110, column: 12, scope: !11260)
!11309 = !DILocation(line: 110, column: 17, scope: !11260)
!11310 = !DILocation(line: 110, column: 3, scope: !11260)
!11311 = !DILocation(line: 110, column: 10, scope: !11260)
!11312 = !DILocation(line: 111, column: 13, scope: !11260)
!11313 = !DILocation(line: 111, column: 18, scope: !11260)
!11314 = !DILocation(line: 112, column: 16, scope: !11260)
!11315 = !DILocation(line: 112, column: 21, scope: !11260)
!11316 = !DILocation(line: 113, column: 16, scope: !11260)
!11317 = !DILocation(line: 113, column: 21, scope: !11260)
!11318 = !DILocation(line: 111, column: 12, scope: !11260)
!11319 = !DILocation(line: 111, column: 3, scope: !11260)
!11320 = !DILocation(line: 111, column: 10, scope: !11260)
!11321 = !DILocation(line: 114, column: 3, scope: !11260)
!11322 = !DILocation(line: 114, column: 11, scope: !11260)
!11323 = !DILocation(line: 115, column: 3, scope: !11260)
!11324 = !DILocation(line: 115, column: 11, scope: !11260)
!11325 = !DILocation(line: 116, column: 1, scope: !11260)
!11326 = distinct !DISubprogram(name: "ftypelet", scope: !11261, file: !11261, line: 54, type: !1781, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1751, retainedNodes: !143)
!11327 = !DILocalVariable(name: "bits", arg: 1, scope: !11326, file: !11261, line: 54, type: !160)
!11328 = !DILocation(line: 54, column: 18, scope: !11326)
!11329 = !DILocation(line: 57, column: 7, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11326, file: !11261, line: 57, column: 7)
!11331 = !DILocation(line: 57, column: 7, scope: !11326)
!11332 = !DILocation(line: 58, column: 5, scope: !11330)
!11333 = !DILocation(line: 59, column: 7, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11326, file: !11261, line: 59, column: 7)
!11335 = !DILocation(line: 59, column: 7, scope: !11326)
!11336 = !DILocation(line: 60, column: 5, scope: !11334)
!11337 = !DILocation(line: 63, column: 7, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11326, file: !11261, line: 63, column: 7)
!11339 = !DILocation(line: 63, column: 7, scope: !11326)
!11340 = !DILocation(line: 64, column: 5, scope: !11338)
!11341 = !DILocation(line: 65, column: 7, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11326, file: !11261, line: 65, column: 7)
!11343 = !DILocation(line: 65, column: 7, scope: !11326)
!11344 = !DILocation(line: 66, column: 5, scope: !11342)
!11345 = !DILocation(line: 67, column: 7, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11326, file: !11261, line: 67, column: 7)
!11347 = !DILocation(line: 67, column: 7, scope: !11326)
!11348 = !DILocation(line: 68, column: 5, scope: !11346)
!11349 = !DILocation(line: 69, column: 7, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11326, file: !11261, line: 69, column: 7)
!11351 = !DILocation(line: 69, column: 7, scope: !11326)
!11352 = !DILocation(line: 70, column: 5, scope: !11350)
!11353 = !DILocation(line: 73, column: 7, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11326, file: !11261, line: 73, column: 7)
!11355 = !DILocation(line: 73, column: 7, scope: !11326)
!11356 = !DILocation(line: 74, column: 5, scope: !11354)
!11357 = !DILocation(line: 90, column: 3, scope: !11326)
!11358 = !DILocation(line: 91, column: 1, scope: !11326)
!11359 = distinct !DISubprogram(name: "filemodestring", scope: !11261, file: !11261, line: 166, type: !1756, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1751, retainedNodes: !143)
!11360 = !DILocalVariable(name: "statp", arg: 1, scope: !11359, file: !11261, line: 166, type: !1758)
!11361 = !DILocation(line: 166, column: 36, scope: !11359)
!11362 = !DILocalVariable(name: "str", arg: 2, scope: !11359, file: !11261, line: 166, type: !9)
!11363 = !DILocation(line: 166, column: 49, scope: !11359)
!11364 = !DILocation(line: 168, column: 12, scope: !11359)
!11365 = !DILocation(line: 168, column: 19, scope: !11359)
!11366 = !DILocation(line: 168, column: 28, scope: !11359)
!11367 = !DILocation(line: 168, column: 3, scope: !11359)
!11368 = !DILocation(line: 170, column: 7, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11359, file: !11261, line: 170, column: 7)
!11370 = !DILocation(line: 170, column: 7, scope: !11359)
!11371 = !DILocation(line: 171, column: 5, scope: !11369)
!11372 = !DILocation(line: 171, column: 12, scope: !11369)
!11373 = !DILocation(line: 174, column: 12, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11375, file: !11261, line: 174, column: 12)
!11375 = distinct !DILexicalBlock(scope: !11369, file: !11261, line: 172, column: 12)
!11376 = !DILocation(line: 174, column: 12, scope: !11375)
!11377 = !DILocation(line: 175, column: 5, scope: !11374)
!11378 = !DILocation(line: 175, column: 12, scope: !11374)
!11379 = !DILocation(line: 176, column: 12, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11374, file: !11261, line: 176, column: 12)
!11381 = !DILocation(line: 176, column: 12, scope: !11374)
!11382 = !DILocation(line: 177, column: 5, scope: !11380)
!11383 = !DILocation(line: 177, column: 12, scope: !11380)
!11384 = !DILocation(line: 180, column: 1, scope: !11359)
!11385 = distinct !DISubprogram(name: "file_name_concat", scope: !11386, file: !11386, line: 35, type: !1786, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1783, retainedNodes: !143)
!11386 = !DIFile(filename: "lib/filenamecat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11387 = !DILocalVariable(name: "dir", arg: 1, scope: !11385, file: !11386, line: 35, type: !115)
!11388 = !DILocation(line: 35, column: 31, scope: !11385)
!11389 = !DILocalVariable(name: "base", arg: 2, scope: !11385, file: !11386, line: 35, type: !115)
!11390 = !DILocation(line: 35, column: 48, scope: !11385)
!11391 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !11385, file: !11386, line: 35, type: !119)
!11392 = !DILocation(line: 35, column: 61, scope: !11385)
!11393 = !DILocalVariable(name: "p", scope: !11385, file: !11386, line: 37, type: !9)
!11394 = !DILocation(line: 37, column: 9, scope: !11385)
!11395 = !DILocation(line: 37, column: 32, scope: !11385)
!11396 = !DILocation(line: 37, column: 37, scope: !11385)
!11397 = !DILocation(line: 37, column: 43, scope: !11385)
!11398 = !DILocation(line: 37, column: 13, scope: !11385)
!11399 = !DILocation(line: 38, column: 7, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11385, file: !11386, line: 38, column: 7)
!11401 = !DILocation(line: 38, column: 9, scope: !11400)
!11402 = !DILocation(line: 38, column: 7, scope: !11385)
!11403 = !DILocation(line: 39, column: 5, scope: !11400)
!11404 = !DILocation(line: 40, column: 10, scope: !11385)
!11405 = !DILocation(line: 40, column: 3, scope: !11385)
!11406 = distinct !DISubprogram(name: "mfile_name_concat", scope: !11407, file: !11407, line: 47, type: !1786, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1788, retainedNodes: !143)
!11407 = !DIFile(filename: "lib/filenamecat-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11408 = !DILocalVariable(name: "dir", arg: 1, scope: !11406, file: !11407, line: 47, type: !115)
!11409 = !DILocation(line: 47, column: 32, scope: !11406)
!11410 = !DILocalVariable(name: "base", arg: 2, scope: !11406, file: !11407, line: 47, type: !115)
!11411 = !DILocation(line: 47, column: 49, scope: !11406)
!11412 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !11406, file: !11407, line: 47, type: !119)
!11413 = !DILocation(line: 47, column: 62, scope: !11406)
!11414 = !DILocalVariable(name: "dirbase", scope: !11406, file: !11407, line: 49, type: !115)
!11415 = !DILocation(line: 49, column: 15, scope: !11406)
!11416 = !DILocation(line: 49, column: 41, scope: !11406)
!11417 = !DILocation(line: 49, column: 25, scope: !11406)
!11418 = !DILocalVariable(name: "dirbaselen", scope: !11406, file: !11407, line: 50, type: !55)
!11419 = !DILocation(line: 50, column: 10, scope: !11406)
!11420 = !DILocation(line: 50, column: 33, scope: !11406)
!11421 = !DILocation(line: 50, column: 23, scope: !11406)
!11422 = !DILocalVariable(name: "dirlen", scope: !11406, file: !11407, line: 51, type: !55)
!11423 = !DILocation(line: 51, column: 10, scope: !11406)
!11424 = !DILocation(line: 51, column: 19, scope: !11406)
!11425 = !DILocation(line: 51, column: 29, scope: !11406)
!11426 = !DILocation(line: 51, column: 27, scope: !11406)
!11427 = !DILocation(line: 51, column: 35, scope: !11406)
!11428 = !DILocation(line: 51, column: 33, scope: !11406)
!11429 = !DILocalVariable(name: "baselen", scope: !11406, file: !11407, line: 52, type: !55)
!11430 = !DILocation(line: 52, column: 10, scope: !11406)
!11431 = !DILocation(line: 52, column: 28, scope: !11406)
!11432 = !DILocation(line: 52, column: 20, scope: !11406)
!11433 = !DILocalVariable(name: "sep", scope: !11406, file: !11407, line: 53, type: !10)
!11434 = !DILocation(line: 53, column: 8, scope: !11406)
!11435 = !DILocation(line: 54, column: 7, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11406, file: !11407, line: 54, column: 7)
!11437 = !DILocation(line: 54, column: 7, scope: !11406)
!11438 = !DILocation(line: 57, column: 13, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11440, file: !11407, line: 57, column: 11)
!11440 = distinct !DILexicalBlock(scope: !11436, file: !11407, line: 55, column: 5)
!11441 = !DILocation(line: 57, column: 39, scope: !11439)
!11442 = !DILocation(line: 57, column: 44, scope: !11439)
!11443 = !DILocation(line: 57, column: 11, scope: !11440)
!11444 = !DILocation(line: 58, column: 13, scope: !11439)
!11445 = !DILocation(line: 58, column: 9, scope: !11439)
!11446 = !DILocation(line: 59, column: 5, scope: !11440)
!11447 = !DILocation(line: 60, column: 12, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11436, file: !11407, line: 60, column: 12)
!11449 = !DILocation(line: 60, column: 12, scope: !11436)
!11450 = !DILocation(line: 67, column: 11, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11448, file: !11407, line: 61, column: 5)
!11452 = !DILocation(line: 68, column: 5, scope: !11451)
!11453 = !DILocalVariable(name: "p_concat", scope: !11406, file: !11407, line: 70, type: !9)
!11454 = !DILocation(line: 70, column: 9, scope: !11406)
!11455 = !DILocation(line: 70, column: 28, scope: !11406)
!11456 = !DILocation(line: 70, column: 38, scope: !11406)
!11457 = !DILocation(line: 70, column: 42, scope: !11406)
!11458 = !DILocation(line: 70, column: 37, scope: !11406)
!11459 = !DILocation(line: 70, column: 35, scope: !11406)
!11460 = !DILocation(line: 70, column: 54, scope: !11406)
!11461 = !DILocation(line: 70, column: 52, scope: !11406)
!11462 = !DILocation(line: 70, column: 62, scope: !11406)
!11463 = !DILocation(line: 70, column: 20, scope: !11406)
!11464 = !DILocalVariable(name: "p", scope: !11406, file: !11407, line: 71, type: !9)
!11465 = !DILocation(line: 71, column: 9, scope: !11406)
!11466 = !DILocation(line: 73, column: 7, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11406, file: !11407, line: 73, column: 7)
!11468 = !DILocation(line: 73, column: 16, scope: !11467)
!11469 = !DILocation(line: 73, column: 7, scope: !11406)
!11470 = !DILocation(line: 74, column: 5, scope: !11467)
!11471 = !DILocation(line: 76, column: 16, scope: !11406)
!11472 = !DILocation(line: 76, column: 26, scope: !11406)
!11473 = !DILocation(line: 76, column: 31, scope: !11406)
!11474 = !DILocation(line: 76, column: 7, scope: !11406)
!11475 = !DILocation(line: 76, column: 5, scope: !11406)
!11476 = !DILocation(line: 77, column: 8, scope: !11406)
!11477 = !DILocation(line: 77, column: 4, scope: !11406)
!11478 = !DILocation(line: 77, column: 6, scope: !11406)
!11479 = !DILocation(line: 78, column: 8, scope: !11406)
!11480 = !DILocation(line: 78, column: 12, scope: !11406)
!11481 = !DILocation(line: 78, column: 5, scope: !11406)
!11482 = !DILocation(line: 80, column: 7, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11406, file: !11407, line: 80, column: 7)
!11484 = !DILocation(line: 80, column: 7, scope: !11406)
!11485 = !DILocation(line: 81, column: 23, scope: !11483)
!11486 = !DILocation(line: 81, column: 6, scope: !11483)
!11487 = !DILocation(line: 81, column: 21, scope: !11483)
!11488 = !DILocation(line: 81, column: 5, scope: !11483)
!11489 = !DILocation(line: 83, column: 16, scope: !11406)
!11490 = !DILocation(line: 83, column: 19, scope: !11406)
!11491 = !DILocation(line: 83, column: 25, scope: !11406)
!11492 = !DILocation(line: 83, column: 7, scope: !11406)
!11493 = !DILocation(line: 83, column: 5, scope: !11406)
!11494 = !DILocation(line: 84, column: 4, scope: !11406)
!11495 = !DILocation(line: 84, column: 6, scope: !11406)
!11496 = !DILocation(line: 86, column: 10, scope: !11406)
!11497 = !DILocation(line: 86, column: 3, scope: !11406)
!11498 = !DILocation(line: 87, column: 1, scope: !11406)
!11499 = distinct !DISubprogram(name: "full_write", scope: !11500, file: !11500, line: 58, type: !1794, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1791, retainedNodes: !143)
!11500 = !DIFile(filename: "lib/full-write.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11501 = !DILocalVariable(name: "fd", arg: 1, scope: !11499, file: !11500, line: 58, type: !7)
!11502 = !DILocation(line: 58, column: 14, scope: !11499)
!11503 = !DILocalVariable(name: "buf", arg: 2, scope: !11499, file: !11500, line: 58, type: !425)
!11504 = !DILocation(line: 58, column: 30, scope: !11499)
!11505 = !DILocalVariable(name: "count", arg: 3, scope: !11499, file: !11500, line: 58, type: !55)
!11506 = !DILocation(line: 58, column: 42, scope: !11499)
!11507 = !DILocalVariable(name: "total", scope: !11499, file: !11500, line: 60, type: !55)
!11508 = !DILocation(line: 60, column: 10, scope: !11499)
!11509 = !DILocalVariable(name: "ptr", scope: !11499, file: !11500, line: 61, type: !115)
!11510 = !DILocation(line: 61, column: 15, scope: !11499)
!11511 = !DILocation(line: 61, column: 36, scope: !11499)
!11512 = !DILocation(line: 63, column: 3, scope: !11499)
!11513 = !DILocation(line: 63, column: 10, scope: !11499)
!11514 = !DILocation(line: 63, column: 16, scope: !11499)
!11515 = !DILocalVariable(name: "n_rw", scope: !11516, file: !11500, line: 65, type: !55)
!11516 = distinct !DILexicalBlock(scope: !11499, file: !11500, line: 64, column: 5)
!11517 = !DILocation(line: 65, column: 14, scope: !11516)
!11518 = !DILocation(line: 65, column: 30, scope: !11516)
!11519 = !DILocation(line: 65, column: 34, scope: !11516)
!11520 = !DILocation(line: 65, column: 39, scope: !11516)
!11521 = !DILocation(line: 65, column: 21, scope: !11516)
!11522 = !DILocation(line: 66, column: 11, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11516, file: !11500, line: 66, column: 11)
!11524 = !DILocation(line: 66, column: 16, scope: !11523)
!11525 = !DILocation(line: 66, column: 11, scope: !11516)
!11526 = !DILocation(line: 67, column: 9, scope: !11523)
!11527 = !DILocation(line: 68, column: 11, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11516, file: !11500, line: 68, column: 11)
!11529 = !DILocation(line: 68, column: 16, scope: !11528)
!11530 = !DILocation(line: 68, column: 11, scope: !11516)
!11531 = !DILocation(line: 70, column: 11, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11528, file: !11500, line: 69, column: 9)
!11533 = !DILocation(line: 70, column: 17, scope: !11532)
!11534 = !DILocation(line: 71, column: 11, scope: !11532)
!11535 = !DILocation(line: 73, column: 16, scope: !11516)
!11536 = !DILocation(line: 73, column: 13, scope: !11516)
!11537 = !DILocation(line: 74, column: 14, scope: !11516)
!11538 = !DILocation(line: 74, column: 11, scope: !11516)
!11539 = !DILocation(line: 75, column: 16, scope: !11516)
!11540 = !DILocation(line: 75, column: 13, scope: !11516)
!11541 = distinct !{!11541, !11512, !11542}
!11542 = !DILocation(line: 76, column: 5, scope: !11499)
!11543 = !DILocation(line: 78, column: 10, scope: !11499)
!11544 = !DILocation(line: 78, column: 3, scope: !11499)
!11545 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !756, file: !756, line: 150, type: !750, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!11546 = !DILocalVariable(name: "table", arg: 1, scope: !11545, file: !756, line: 150, type: !752)
!11547 = !DILocation(line: 150, column: 39, scope: !11545)
!11548 = !DILocation(line: 152, column: 10, scope: !11545)
!11549 = !DILocation(line: 152, column: 17, scope: !11545)
!11550 = !{!11551, !3180, i64 16}
!11551 = !{!"hash_table", !2996, i64 0, !2996, i64 8, !3180, i64 16, !3180, i64 24, !3180, i64 32, !2996, i64 40, !2996, i64 48, !2996, i64 56, !2996, i64 64, !2996, i64 72}
!11552 = !DILocation(line: 152, column: 3, scope: !11545)
!11553 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !756, file: !756, line: 158, type: !750, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!11554 = !DILocalVariable(name: "table", arg: 1, scope: !11553, file: !756, line: 158, type: !752)
!11555 = !DILocation(line: 158, column: 44, scope: !11553)
!11556 = !DILocation(line: 160, column: 10, scope: !11553)
!11557 = !DILocation(line: 160, column: 17, scope: !11553)
!11558 = !{!11551, !3180, i64 24}
!11559 = !DILocation(line: 160, column: 3, scope: !11553)
!11560 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !756, file: !756, line: 166, type: !750, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!11561 = !DILocalVariable(name: "table", arg: 1, scope: !11560, file: !756, line: 166, type: !752)
!11562 = !DILocation(line: 166, column: 39, scope: !11560)
!11563 = !DILocation(line: 168, column: 10, scope: !11560)
!11564 = !DILocation(line: 168, column: 17, scope: !11560)
!11565 = !{!11551, !3180, i64 32}
!11566 = !DILocation(line: 168, column: 3, scope: !11560)
!11567 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !756, file: !756, line: 174, type: !750, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!11568 = !DILocalVariable(name: "table", arg: 1, scope: !11567, file: !756, line: 174, type: !752)
!11569 = !DILocation(line: 174, column: 47, scope: !11567)
!11570 = !DILocalVariable(name: "bucket", scope: !11567, file: !756, line: 176, type: !765)
!11571 = !DILocation(line: 176, column: 28, scope: !11567)
!11572 = !DILocalVariable(name: "max_bucket_length", scope: !11567, file: !756, line: 177, type: !55)
!11573 = !DILocation(line: 177, column: 10, scope: !11567)
!11574 = !DILocation(line: 179, column: 17, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11567, file: !756, line: 179, column: 3)
!11576 = !DILocation(line: 179, column: 24, scope: !11575)
!11577 = !{!11551, !2996, i64 0}
!11578 = !DILocation(line: 179, column: 15, scope: !11575)
!11579 = !DILocation(line: 179, column: 8, scope: !11575)
!11580 = !DILocation(line: 179, column: 32, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11575, file: !756, line: 179, column: 3)
!11582 = !DILocation(line: 179, column: 41, scope: !11581)
!11583 = !DILocation(line: 179, column: 48, scope: !11581)
!11584 = !{!11551, !2996, i64 8}
!11585 = !DILocation(line: 179, column: 39, scope: !11581)
!11586 = !DILocation(line: 179, column: 3, scope: !11575)
!11587 = !DILocation(line: 181, column: 11, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11589, file: !756, line: 181, column: 11)
!11589 = distinct !DILexicalBlock(scope: !11581, file: !756, line: 180, column: 5)
!11590 = !DILocation(line: 181, column: 19, scope: !11588)
!11591 = !{!11592, !2996, i64 0}
!11592 = !{!"hash_entry", !2996, i64 0, !2996, i64 8}
!11593 = !DILocation(line: 181, column: 11, scope: !11589)
!11594 = !DILocalVariable(name: "cursor", scope: !11595, file: !756, line: 183, type: !765)
!11595 = distinct !DILexicalBlock(scope: !11588, file: !756, line: 182, column: 9)
!11596 = !DILocation(line: 183, column: 36, scope: !11595)
!11597 = !DILocation(line: 183, column: 45, scope: !11595)
!11598 = !DILocalVariable(name: "bucket_length", scope: !11595, file: !756, line: 184, type: !55)
!11599 = !DILocation(line: 184, column: 18, scope: !11595)
!11600 = !DILocation(line: 186, column: 11, scope: !11595)
!11601 = !DILocation(line: 186, column: 27, scope: !11595)
!11602 = !DILocation(line: 186, column: 35, scope: !11595)
!11603 = !{!11592, !2996, i64 8}
!11604 = !DILocation(line: 186, column: 25, scope: !11595)
!11605 = !DILocation(line: 186, column: 41, scope: !11595)
!11606 = !DILocation(line: 187, column: 26, scope: !11595)
!11607 = distinct !{!11607, !11600, !11606}
!11608 = !DILocation(line: 189, column: 15, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11595, file: !756, line: 189, column: 15)
!11610 = !DILocation(line: 189, column: 31, scope: !11609)
!11611 = !DILocation(line: 189, column: 29, scope: !11609)
!11612 = !DILocation(line: 189, column: 15, scope: !11595)
!11613 = !DILocation(line: 190, column: 33, scope: !11609)
!11614 = !DILocation(line: 190, column: 31, scope: !11609)
!11615 = !DILocation(line: 190, column: 13, scope: !11609)
!11616 = !DILocation(line: 191, column: 9, scope: !11595)
!11617 = !DILocation(line: 192, column: 5, scope: !11589)
!11618 = !DILocation(line: 179, column: 68, scope: !11581)
!11619 = !DILocation(line: 179, column: 3, scope: !11581)
!11620 = distinct !{!11620, !11586, !11621}
!11621 = !DILocation(line: 192, column: 5, scope: !11575)
!11622 = !DILocation(line: 194, column: 10, scope: !11567)
!11623 = !DILocation(line: 194, column: 3, scope: !11567)
!11624 = distinct !DISubprogram(name: "hash_table_ok", scope: !756, file: !756, line: 201, type: !792, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!11625 = !DILocalVariable(name: "table", arg: 1, scope: !11624, file: !756, line: 201, type: !752)
!11626 = !DILocation(line: 201, column: 34, scope: !11624)
!11627 = !DILocalVariable(name: "bucket", scope: !11624, file: !756, line: 203, type: !765)
!11628 = !DILocation(line: 203, column: 28, scope: !11624)
!11629 = !DILocalVariable(name: "n_buckets_used", scope: !11624, file: !756, line: 204, type: !55)
!11630 = !DILocation(line: 204, column: 10, scope: !11624)
!11631 = !DILocalVariable(name: "n_entries", scope: !11624, file: !756, line: 205, type: !55)
!11632 = !DILocation(line: 205, column: 10, scope: !11624)
!11633 = !DILocation(line: 207, column: 17, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11624, file: !756, line: 207, column: 3)
!11635 = !DILocation(line: 207, column: 24, scope: !11634)
!11636 = !DILocation(line: 207, column: 15, scope: !11634)
!11637 = !DILocation(line: 207, column: 8, scope: !11634)
!11638 = !DILocation(line: 207, column: 32, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11634, file: !756, line: 207, column: 3)
!11640 = !DILocation(line: 207, column: 41, scope: !11639)
!11641 = !DILocation(line: 207, column: 48, scope: !11639)
!11642 = !DILocation(line: 207, column: 39, scope: !11639)
!11643 = !DILocation(line: 207, column: 3, scope: !11634)
!11644 = !DILocation(line: 209, column: 11, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11646, file: !756, line: 209, column: 11)
!11646 = distinct !DILexicalBlock(scope: !11639, file: !756, line: 208, column: 5)
!11647 = !DILocation(line: 209, column: 19, scope: !11645)
!11648 = !DILocation(line: 209, column: 11, scope: !11646)
!11649 = !DILocalVariable(name: "cursor", scope: !11650, file: !756, line: 211, type: !765)
!11650 = distinct !DILexicalBlock(scope: !11645, file: !756, line: 210, column: 9)
!11651 = !DILocation(line: 211, column: 36, scope: !11650)
!11652 = !DILocation(line: 211, column: 45, scope: !11650)
!11653 = !DILocation(line: 214, column: 25, scope: !11650)
!11654 = !DILocation(line: 215, column: 20, scope: !11650)
!11655 = !DILocation(line: 218, column: 11, scope: !11650)
!11656 = !DILocation(line: 218, column: 27, scope: !11650)
!11657 = !DILocation(line: 218, column: 35, scope: !11650)
!11658 = !DILocation(line: 218, column: 25, scope: !11650)
!11659 = !DILocation(line: 218, column: 41, scope: !11650)
!11660 = !DILocation(line: 219, column: 22, scope: !11650)
!11661 = distinct !{!11661, !11655, !11660}
!11662 = !DILocation(line: 220, column: 9, scope: !11650)
!11663 = !DILocation(line: 221, column: 5, scope: !11646)
!11664 = !DILocation(line: 207, column: 68, scope: !11639)
!11665 = !DILocation(line: 207, column: 3, scope: !11639)
!11666 = distinct !{!11666, !11643, !11667}
!11667 = !DILocation(line: 221, column: 5, scope: !11634)
!11668 = !DILocation(line: 223, column: 7, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11624, file: !756, line: 223, column: 7)
!11670 = !DILocation(line: 223, column: 25, scope: !11669)
!11671 = !DILocation(line: 223, column: 32, scope: !11669)
!11672 = !DILocation(line: 223, column: 22, scope: !11669)
!11673 = !DILocation(line: 223, column: 47, scope: !11669)
!11674 = !DILocation(line: 223, column: 50, scope: !11669)
!11675 = !DILocation(line: 223, column: 63, scope: !11669)
!11676 = !DILocation(line: 223, column: 70, scope: !11669)
!11677 = !DILocation(line: 223, column: 60, scope: !11669)
!11678 = !DILocation(line: 223, column: 7, scope: !11624)
!11679 = !DILocation(line: 224, column: 5, scope: !11669)
!11680 = !DILocation(line: 226, column: 3, scope: !11624)
!11681 = !DILocation(line: 227, column: 1, scope: !11624)
!11682 = distinct !DISubprogram(name: "hash_print_statistics", scope: !756, file: !756, line: 230, type: !794, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!11683 = !DILocalVariable(name: "table", arg: 1, scope: !11682, file: !756, line: 230, type: !752)
!11684 = !DILocation(line: 230, column: 42, scope: !11682)
!11685 = !DILocalVariable(name: "stream", arg: 2, scope: !11682, file: !756, line: 230, type: !796)
!11686 = !DILocation(line: 230, column: 55, scope: !11682)
!11687 = !DILocalVariable(name: "n_entries", scope: !11682, file: !756, line: 232, type: !55)
!11688 = !DILocation(line: 232, column: 10, scope: !11682)
!11689 = !DILocation(line: 232, column: 42, scope: !11682)
!11690 = !DILocation(line: 232, column: 22, scope: !11682)
!11691 = !DILocalVariable(name: "n_buckets", scope: !11682, file: !756, line: 233, type: !55)
!11692 = !DILocation(line: 233, column: 10, scope: !11682)
!11693 = !DILocation(line: 233, column: 42, scope: !11682)
!11694 = !DILocation(line: 233, column: 22, scope: !11682)
!11695 = !DILocalVariable(name: "n_buckets_used", scope: !11682, file: !756, line: 234, type: !55)
!11696 = !DILocation(line: 234, column: 10, scope: !11682)
!11697 = !DILocation(line: 234, column: 52, scope: !11682)
!11698 = !DILocation(line: 234, column: 27, scope: !11682)
!11699 = !DILocalVariable(name: "max_bucket_length", scope: !11682, file: !756, line: 235, type: !55)
!11700 = !DILocation(line: 235, column: 10, scope: !11682)
!11701 = !DILocation(line: 235, column: 58, scope: !11682)
!11702 = !DILocation(line: 235, column: 30, scope: !11682)
!11703 = !DILocation(line: 237, column: 12, scope: !11682)
!11704 = !DILocation(line: 237, column: 68, scope: !11682)
!11705 = !DILocation(line: 237, column: 3, scope: !11682)
!11706 = !DILocation(line: 238, column: 12, scope: !11682)
!11707 = !DILocation(line: 238, column: 68, scope: !11682)
!11708 = !DILocation(line: 238, column: 3, scope: !11682)
!11709 = !DILocation(line: 239, column: 12, scope: !11682)
!11710 = !DILocation(line: 240, column: 32, scope: !11682)
!11711 = !DILocation(line: 241, column: 21, scope: !11682)
!11712 = !DILocation(line: 241, column: 19, scope: !11682)
!11713 = !DILocation(line: 241, column: 39, scope: !11682)
!11714 = !DILocation(line: 241, column: 37, scope: !11682)
!11715 = !DILocation(line: 239, column: 3, scope: !11682)
!11716 = !DILocation(line: 242, column: 12, scope: !11682)
!11717 = !DILocation(line: 243, column: 32, scope: !11682)
!11718 = !DILocation(line: 242, column: 3, scope: !11682)
!11719 = !DILocation(line: 244, column: 1, scope: !11682)
!11720 = distinct !DISubprogram(name: "hash_lookup", scope: !756, file: !756, line: 261, type: !830, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!11721 = !DILocalVariable(name: "table", arg: 1, scope: !11720, file: !756, line: 261, type: !752)
!11722 = !DILocation(line: 261, column: 32, scope: !11720)
!11723 = !DILocalVariable(name: "entry", arg: 2, scope: !11720, file: !756, line: 261, type: !425)
!11724 = !DILocation(line: 261, column: 51, scope: !11720)
!11725 = !DILocalVariable(name: "bucket", scope: !11720, file: !756, line: 263, type: !765)
!11726 = !DILocation(line: 263, column: 28, scope: !11720)
!11727 = !DILocation(line: 263, column: 50, scope: !11720)
!11728 = !DILocation(line: 263, column: 57, scope: !11720)
!11729 = !DILocation(line: 263, column: 37, scope: !11720)
!11730 = !DILocalVariable(name: "cursor", scope: !11720, file: !756, line: 264, type: !765)
!11731 = !DILocation(line: 264, column: 28, scope: !11720)
!11732 = !DILocation(line: 266, column: 7, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11720, file: !756, line: 266, column: 7)
!11734 = !DILocation(line: 266, column: 15, scope: !11733)
!11735 = !DILocation(line: 266, column: 20, scope: !11733)
!11736 = !DILocation(line: 266, column: 7, scope: !11720)
!11737 = !DILocation(line: 267, column: 5, scope: !11733)
!11738 = !DILocation(line: 269, column: 17, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11720, file: !756, line: 269, column: 3)
!11740 = !DILocation(line: 269, column: 15, scope: !11739)
!11741 = !DILocation(line: 269, column: 8, scope: !11739)
!11742 = !DILocation(line: 269, column: 25, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11739, file: !756, line: 269, column: 3)
!11744 = !DILocation(line: 269, column: 3, scope: !11739)
!11745 = !DILocation(line: 270, column: 9, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11743, file: !756, line: 270, column: 9)
!11747 = !DILocation(line: 270, column: 18, scope: !11746)
!11748 = !DILocation(line: 270, column: 26, scope: !11746)
!11749 = !DILocation(line: 270, column: 15, scope: !11746)
!11750 = !DILocation(line: 270, column: 31, scope: !11746)
!11751 = !DILocation(line: 270, column: 34, scope: !11746)
!11752 = !DILocation(line: 270, column: 41, scope: !11746)
!11753 = !{!11551, !2996, i64 56}
!11754 = !DILocation(line: 270, column: 53, scope: !11746)
!11755 = !DILocation(line: 270, column: 60, scope: !11746)
!11756 = !DILocation(line: 270, column: 68, scope: !11746)
!11757 = !DILocation(line: 270, column: 9, scope: !11743)
!11758 = !DILocation(line: 271, column: 14, scope: !11746)
!11759 = !DILocation(line: 271, column: 22, scope: !11746)
!11760 = !DILocation(line: 271, column: 7, scope: !11746)
!11761 = !DILocation(line: 270, column: 72, scope: !11746)
!11762 = !DILocation(line: 269, column: 42, scope: !11743)
!11763 = !DILocation(line: 269, column: 50, scope: !11743)
!11764 = !DILocation(line: 269, column: 40, scope: !11743)
!11765 = !DILocation(line: 269, column: 3, scope: !11743)
!11766 = distinct !{!11766, !11744, !11767}
!11767 = !DILocation(line: 271, column: 22, scope: !11739)
!11768 = !DILocation(line: 273, column: 3, scope: !11720)
!11769 = !DILocation(line: 274, column: 1, scope: !11720)
!11770 = distinct !DISubprogram(name: "safe_hasher", scope: !756, file: !756, line: 249, type: !860, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !747, retainedNodes: !143)
!11771 = !DILocalVariable(name: "table", arg: 1, scope: !11770, file: !756, line: 249, type: !752)
!11772 = !DILocation(line: 249, column: 32, scope: !11770)
!11773 = !DILocalVariable(name: "key", arg: 2, scope: !11770, file: !756, line: 249, type: !425)
!11774 = !DILocation(line: 249, column: 51, scope: !11770)
!11775 = !DILocalVariable(name: "n", scope: !11770, file: !756, line: 251, type: !55)
!11776 = !DILocation(line: 251, column: 10, scope: !11770)
!11777 = !DILocation(line: 251, column: 14, scope: !11770)
!11778 = !DILocation(line: 251, column: 21, scope: !11770)
!11779 = !{!11551, !2996, i64 48}
!11780 = !DILocation(line: 251, column: 29, scope: !11770)
!11781 = !DILocation(line: 251, column: 34, scope: !11770)
!11782 = !DILocation(line: 251, column: 41, scope: !11770)
!11783 = !DILocation(line: 252, column: 10, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11770, file: !756, line: 252, column: 7)
!11785 = !DILocation(line: 252, column: 14, scope: !11784)
!11786 = !DILocation(line: 252, column: 21, scope: !11784)
!11787 = !DILocation(line: 252, column: 12, scope: !11784)
!11788 = !DILocation(line: 252, column: 7, scope: !11770)
!11789 = !DILocation(line: 253, column: 5, scope: !11784)
!11790 = !DILocation(line: 254, column: 10, scope: !11770)
!11791 = !DILocation(line: 254, column: 17, scope: !11770)
!11792 = !DILocation(line: 254, column: 26, scope: !11770)
!11793 = !DILocation(line: 254, column: 24, scope: !11770)
!11794 = !DILocation(line: 254, column: 3, scope: !11770)
!11795 = distinct !DISubprogram(name: "hash_get_first", scope: !756, file: !756, line: 288, type: !832, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!11796 = !DILocalVariable(name: "table", arg: 1, scope: !11795, file: !756, line: 288, type: !752)
!11797 = !DILocation(line: 288, column: 35, scope: !11795)
!11798 = !DILocalVariable(name: "bucket", scope: !11795, file: !756, line: 290, type: !765)
!11799 = !DILocation(line: 290, column: 28, scope: !11795)
!11800 = !DILocation(line: 292, column: 7, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11795, file: !756, line: 292, column: 7)
!11802 = !DILocation(line: 292, column: 14, scope: !11801)
!11803 = !DILocation(line: 292, column: 24, scope: !11801)
!11804 = !DILocation(line: 292, column: 7, scope: !11795)
!11805 = !DILocation(line: 293, column: 5, scope: !11801)
!11806 = !DILocation(line: 295, column: 17, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11795, file: !756, line: 295, column: 3)
!11808 = !DILocation(line: 295, column: 24, scope: !11807)
!11809 = !DILocation(line: 295, column: 15, scope: !11807)
!11810 = !DILocation(line: 295, column: 8, scope: !11807)
!11811 = !DILocation(line: 296, column: 12, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11813, file: !756, line: 296, column: 9)
!11813 = distinct !DILexicalBlock(scope: !11807, file: !756, line: 295, column: 3)
!11814 = !DILocation(line: 296, column: 21, scope: !11812)
!11815 = !DILocation(line: 296, column: 28, scope: !11812)
!11816 = !DILocation(line: 296, column: 19, scope: !11812)
!11817 = !DILocation(line: 296, column: 9, scope: !11813)
!11818 = !DILocation(line: 297, column: 7, scope: !11812)
!11819 = !DILocation(line: 298, column: 14, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11812, file: !756, line: 298, column: 14)
!11821 = !DILocation(line: 298, column: 22, scope: !11820)
!11822 = !DILocation(line: 298, column: 14, scope: !11812)
!11823 = !DILocation(line: 299, column: 14, scope: !11820)
!11824 = !DILocation(line: 299, column: 22, scope: !11820)
!11825 = !DILocation(line: 299, column: 7, scope: !11820)
!11826 = !DILocation(line: 296, column: 40, scope: !11812)
!11827 = !DILocation(line: 295, column: 40, scope: !11813)
!11828 = !DILocation(line: 295, column: 3, scope: !11813)
!11829 = distinct !{!11829, !11830, !11831}
!11830 = !DILocation(line: 295, column: 3, scope: !11807)
!11831 = !DILocation(line: 299, column: 22, scope: !11807)
!11832 = !DILocation(line: 300, column: 1, scope: !11795)
!11833 = distinct !DISubprogram(name: "hash_get_next", scope: !756, file: !756, line: 307, type: !830, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!11834 = !DILocalVariable(name: "table", arg: 1, scope: !11833, file: !756, line: 307, type: !752)
!11835 = !DILocation(line: 307, column: 34, scope: !11833)
!11836 = !DILocalVariable(name: "entry", arg: 2, scope: !11833, file: !756, line: 307, type: !425)
!11837 = !DILocation(line: 307, column: 53, scope: !11833)
!11838 = !DILocalVariable(name: "bucket", scope: !11833, file: !756, line: 309, type: !765)
!11839 = !DILocation(line: 309, column: 28, scope: !11833)
!11840 = !DILocation(line: 309, column: 50, scope: !11833)
!11841 = !DILocation(line: 309, column: 57, scope: !11833)
!11842 = !DILocation(line: 309, column: 37, scope: !11833)
!11843 = !DILocalVariable(name: "cursor", scope: !11833, file: !756, line: 310, type: !765)
!11844 = !DILocation(line: 310, column: 28, scope: !11833)
!11845 = !DILocation(line: 313, column: 12, scope: !11833)
!11846 = !DILocation(line: 313, column: 10, scope: !11833)
!11847 = !DILocation(line: 314, column: 3, scope: !11833)
!11848 = !DILocation(line: 316, column: 11, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11850, file: !756, line: 316, column: 11)
!11850 = distinct !DILexicalBlock(scope: !11833, file: !756, line: 315, column: 5)
!11851 = !DILocation(line: 316, column: 19, scope: !11849)
!11852 = !DILocation(line: 316, column: 27, scope: !11849)
!11853 = !DILocation(line: 316, column: 24, scope: !11849)
!11854 = !DILocation(line: 316, column: 33, scope: !11849)
!11855 = !DILocation(line: 316, column: 36, scope: !11849)
!11856 = !DILocation(line: 316, column: 44, scope: !11849)
!11857 = !DILocation(line: 316, column: 11, scope: !11850)
!11858 = !DILocation(line: 317, column: 16, scope: !11849)
!11859 = !DILocation(line: 317, column: 24, scope: !11849)
!11860 = !DILocation(line: 317, column: 30, scope: !11849)
!11861 = !DILocation(line: 317, column: 9, scope: !11849)
!11862 = !DILocation(line: 318, column: 16, scope: !11850)
!11863 = !DILocation(line: 318, column: 24, scope: !11850)
!11864 = !DILocation(line: 318, column: 14, scope: !11850)
!11865 = !DILocation(line: 319, column: 5, scope: !11850)
!11866 = !DILocation(line: 320, column: 10, scope: !11833)
!11867 = !DILocation(line: 320, column: 17, scope: !11833)
!11868 = distinct !{!11868, !11847, !11869}
!11869 = !DILocation(line: 320, column: 24, scope: !11833)
!11870 = !DILocation(line: 323, column: 3, scope: !11833)
!11871 = !DILocation(line: 323, column: 10, scope: !11833)
!11872 = !DILocation(line: 323, column: 21, scope: !11833)
!11873 = !DILocation(line: 323, column: 28, scope: !11833)
!11874 = !DILocation(line: 323, column: 19, scope: !11833)
!11875 = !DILocation(line: 324, column: 9, scope: !11876)
!11876 = distinct !DILexicalBlock(scope: !11833, file: !756, line: 324, column: 9)
!11877 = !DILocation(line: 324, column: 17, scope: !11876)
!11878 = !DILocation(line: 324, column: 9, scope: !11833)
!11879 = !DILocation(line: 325, column: 14, scope: !11876)
!11880 = !DILocation(line: 325, column: 22, scope: !11876)
!11881 = !DILocation(line: 325, column: 7, scope: !11876)
!11882 = distinct !{!11882, !11870, !11883}
!11883 = !DILocation(line: 325, column: 22, scope: !11833)
!11884 = !DILocation(line: 328, column: 3, scope: !11833)
!11885 = !DILocation(line: 329, column: 1, scope: !11833)
!11886 = distinct !DISubprogram(name: "hash_get_entries", scope: !756, file: !756, line: 336, type: !834, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!11887 = !DILocalVariable(name: "table", arg: 1, scope: !11886, file: !756, line: 336, type: !752)
!11888 = !DILocation(line: 336, column: 37, scope: !11886)
!11889 = !DILocalVariable(name: "buffer", arg: 2, scope: !11886, file: !756, line: 336, type: !836)
!11890 = !DILocation(line: 336, column: 51, scope: !11886)
!11891 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !11886, file: !756, line: 337, type: !55)
!11892 = !DILocation(line: 337, column: 26, scope: !11886)
!11893 = !DILocalVariable(name: "counter", scope: !11886, file: !756, line: 339, type: !55)
!11894 = !DILocation(line: 339, column: 10, scope: !11886)
!11895 = !DILocalVariable(name: "bucket", scope: !11886, file: !756, line: 340, type: !765)
!11896 = !DILocation(line: 340, column: 28, scope: !11886)
!11897 = !DILocalVariable(name: "cursor", scope: !11886, file: !756, line: 341, type: !765)
!11898 = !DILocation(line: 341, column: 28, scope: !11886)
!11899 = !DILocation(line: 343, column: 17, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11886, file: !756, line: 343, column: 3)
!11901 = !DILocation(line: 343, column: 24, scope: !11900)
!11902 = !DILocation(line: 343, column: 15, scope: !11900)
!11903 = !DILocation(line: 343, column: 8, scope: !11900)
!11904 = !DILocation(line: 343, column: 32, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11900, file: !756, line: 343, column: 3)
!11906 = !DILocation(line: 343, column: 41, scope: !11905)
!11907 = !DILocation(line: 343, column: 48, scope: !11905)
!11908 = !DILocation(line: 343, column: 39, scope: !11905)
!11909 = !DILocation(line: 343, column: 3, scope: !11900)
!11910 = !DILocation(line: 345, column: 11, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11912, file: !756, line: 345, column: 11)
!11912 = distinct !DILexicalBlock(scope: !11905, file: !756, line: 344, column: 5)
!11913 = !DILocation(line: 345, column: 19, scope: !11911)
!11914 = !DILocation(line: 345, column: 11, scope: !11912)
!11915 = !DILocation(line: 347, column: 25, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11917, file: !756, line: 347, column: 11)
!11917 = distinct !DILexicalBlock(scope: !11911, file: !756, line: 346, column: 9)
!11918 = !DILocation(line: 347, column: 23, scope: !11916)
!11919 = !DILocation(line: 347, column: 16, scope: !11916)
!11920 = !DILocation(line: 347, column: 33, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11916, file: !756, line: 347, column: 11)
!11922 = !DILocation(line: 347, column: 11, scope: !11916)
!11923 = !DILocation(line: 349, column: 19, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11925, file: !756, line: 349, column: 19)
!11925 = distinct !DILexicalBlock(scope: !11921, file: !756, line: 348, column: 13)
!11926 = !DILocation(line: 349, column: 30, scope: !11924)
!11927 = !DILocation(line: 349, column: 27, scope: !11924)
!11928 = !DILocation(line: 349, column: 19, scope: !11925)
!11929 = !DILocation(line: 350, column: 24, scope: !11924)
!11930 = !DILocation(line: 350, column: 17, scope: !11924)
!11931 = !DILocation(line: 351, column: 35, scope: !11925)
!11932 = !DILocation(line: 351, column: 43, scope: !11925)
!11933 = !DILocation(line: 351, column: 15, scope: !11925)
!11934 = !DILocation(line: 351, column: 29, scope: !11925)
!11935 = !DILocation(line: 351, column: 33, scope: !11925)
!11936 = !DILocation(line: 352, column: 13, scope: !11925)
!11937 = !DILocation(line: 347, column: 50, scope: !11921)
!11938 = !DILocation(line: 347, column: 58, scope: !11921)
!11939 = !DILocation(line: 347, column: 48, scope: !11921)
!11940 = !DILocation(line: 347, column: 11, scope: !11921)
!11941 = distinct !{!11941, !11922, !11942}
!11942 = !DILocation(line: 352, column: 13, scope: !11916)
!11943 = !DILocation(line: 353, column: 9, scope: !11917)
!11944 = !DILocation(line: 354, column: 5, scope: !11912)
!11945 = !DILocation(line: 343, column: 68, scope: !11905)
!11946 = !DILocation(line: 343, column: 3, scope: !11905)
!11947 = distinct !{!11947, !11909, !11948}
!11948 = !DILocation(line: 354, column: 5, scope: !11900)
!11949 = !DILocation(line: 356, column: 10, scope: !11886)
!11950 = !DILocation(line: 356, column: 3, scope: !11886)
!11951 = !DILocation(line: 357, column: 1, scope: !11886)
!11952 = distinct !DISubprogram(name: "hash_do_for_each", scope: !756, file: !756, line: 368, type: !837, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!11953 = !DILocalVariable(name: "table", arg: 1, scope: !11952, file: !756, line: 368, type: !752)
!11954 = !DILocation(line: 368, column: 37, scope: !11952)
!11955 = !DILocalVariable(name: "processor", arg: 2, scope: !11952, file: !756, line: 368, type: !839)
!11956 = !DILocation(line: 368, column: 59, scope: !11952)
!11957 = !DILocalVariable(name: "processor_data", arg: 3, scope: !11952, file: !756, line: 369, type: !53)
!11958 = !DILocation(line: 369, column: 25, scope: !11952)
!11959 = !DILocalVariable(name: "counter", scope: !11952, file: !756, line: 371, type: !55)
!11960 = !DILocation(line: 371, column: 10, scope: !11952)
!11961 = !DILocalVariable(name: "bucket", scope: !11952, file: !756, line: 372, type: !765)
!11962 = !DILocation(line: 372, column: 28, scope: !11952)
!11963 = !DILocalVariable(name: "cursor", scope: !11952, file: !756, line: 373, type: !765)
!11964 = !DILocation(line: 373, column: 28, scope: !11952)
!11965 = !DILocation(line: 375, column: 17, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11952, file: !756, line: 375, column: 3)
!11967 = !DILocation(line: 375, column: 24, scope: !11966)
!11968 = !DILocation(line: 375, column: 15, scope: !11966)
!11969 = !DILocation(line: 375, column: 8, scope: !11966)
!11970 = !DILocation(line: 375, column: 32, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11966, file: !756, line: 375, column: 3)
!11972 = !DILocation(line: 375, column: 41, scope: !11971)
!11973 = !DILocation(line: 375, column: 48, scope: !11971)
!11974 = !DILocation(line: 375, column: 39, scope: !11971)
!11975 = !DILocation(line: 375, column: 3, scope: !11966)
!11976 = !DILocation(line: 377, column: 11, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11978, file: !756, line: 377, column: 11)
!11978 = distinct !DILexicalBlock(scope: !11971, file: !756, line: 376, column: 5)
!11979 = !DILocation(line: 377, column: 19, scope: !11977)
!11980 = !DILocation(line: 377, column: 11, scope: !11978)
!11981 = !DILocation(line: 379, column: 25, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11983, file: !756, line: 379, column: 11)
!11983 = distinct !DILexicalBlock(scope: !11977, file: !756, line: 378, column: 9)
!11984 = !DILocation(line: 379, column: 23, scope: !11982)
!11985 = !DILocation(line: 379, column: 16, scope: !11982)
!11986 = !DILocation(line: 379, column: 33, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11982, file: !756, line: 379, column: 11)
!11988 = !DILocation(line: 379, column: 11, scope: !11982)
!11989 = !DILocation(line: 381, column: 21, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11991, file: !756, line: 381, column: 19)
!11991 = distinct !DILexicalBlock(scope: !11987, file: !756, line: 380, column: 13)
!11992 = !DILocation(line: 381, column: 32, scope: !11990)
!11993 = !DILocation(line: 381, column: 40, scope: !11990)
!11994 = !DILocation(line: 381, column: 46, scope: !11990)
!11995 = !DILocation(line: 381, column: 19, scope: !11991)
!11996 = !DILocation(line: 382, column: 24, scope: !11990)
!11997 = !DILocation(line: 382, column: 17, scope: !11990)
!11998 = !DILocation(line: 383, column: 22, scope: !11991)
!11999 = !DILocation(line: 384, column: 13, scope: !11991)
!12000 = !DILocation(line: 379, column: 50, scope: !11987)
!12001 = !DILocation(line: 379, column: 58, scope: !11987)
!12002 = !DILocation(line: 379, column: 48, scope: !11987)
!12003 = !DILocation(line: 379, column: 11, scope: !11987)
!12004 = distinct !{!12004, !11988, !12005}
!12005 = !DILocation(line: 384, column: 13, scope: !11982)
!12006 = !DILocation(line: 385, column: 9, scope: !11983)
!12007 = !DILocation(line: 386, column: 5, scope: !11978)
!12008 = !DILocation(line: 375, column: 68, scope: !11971)
!12009 = !DILocation(line: 375, column: 3, scope: !11971)
!12010 = distinct !{!12010, !11975, !12011}
!12011 = !DILocation(line: 386, column: 5, scope: !11966)
!12012 = !DILocation(line: 388, column: 10, scope: !11952)
!12013 = !DILocation(line: 388, column: 3, scope: !11952)
!12014 = !DILocation(line: 389, column: 1, scope: !11952)
!12015 = distinct !DISubprogram(name: "hash_string", scope: !756, file: !756, line: 428, type: !843, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12016 = !DILocalVariable(name: "string", arg: 1, scope: !12015, file: !756, line: 428, type: !115)
!12017 = !DILocation(line: 428, column: 26, scope: !12015)
!12018 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !12015, file: !756, line: 428, type: !55)
!12019 = !DILocation(line: 428, column: 41, scope: !12015)
!12020 = !DILocalVariable(name: "value", scope: !12015, file: !756, line: 430, type: !55)
!12021 = !DILocation(line: 430, column: 10, scope: !12015)
!12022 = !DILocalVariable(name: "ch", scope: !12015, file: !756, line: 431, type: !466)
!12023 = !DILocation(line: 431, column: 17, scope: !12015)
!12024 = !DILocation(line: 433, column: 3, scope: !12015)
!12025 = !DILocation(line: 433, column: 17, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !12027, file: !756, line: 433, column: 3)
!12027 = distinct !DILexicalBlock(scope: !12015, file: !756, line: 433, column: 3)
!12028 = !DILocation(line: 433, column: 16, scope: !12026)
!12029 = !DILocation(line: 433, column: 14, scope: !12026)
!12030 = !DILocation(line: 433, column: 3, scope: !12027)
!12031 = !DILocation(line: 434, column: 14, scope: !12026)
!12032 = !DILocation(line: 434, column: 20, scope: !12026)
!12033 = !DILocation(line: 434, column: 27, scope: !12026)
!12034 = !DILocation(line: 434, column: 25, scope: !12026)
!12035 = !DILocation(line: 434, column: 33, scope: !12026)
!12036 = !DILocation(line: 434, column: 31, scope: !12026)
!12037 = !DILocation(line: 434, column: 11, scope: !12026)
!12038 = !DILocation(line: 434, column: 5, scope: !12026)
!12039 = !DILocation(line: 433, column: 32, scope: !12026)
!12040 = !DILocation(line: 433, column: 3, scope: !12026)
!12041 = distinct !{!12041, !12030, !12042}
!12042 = !DILocation(line: 434, column: 33, scope: !12027)
!12043 = !DILocation(line: 435, column: 10, scope: !12015)
!12044 = !DILocation(line: 435, column: 3, scope: !12015)
!12045 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !756, file: !756, line: 479, type: !845, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12046 = !DILocalVariable(name: "tuning", arg: 1, scope: !12045, file: !756, line: 479, type: !847)
!12047 = !DILocation(line: 479, column: 33, scope: !12045)
!12048 = !DILocation(line: 481, column: 4, scope: !12045)
!12049 = !DILocation(line: 481, column: 13, scope: !12045)
!12050 = !{i64 0, i64 4, !12051, i64 4, i64 4, !12051, i64 8, i64 4, !12051, i64 12, i64 4, !12051, i64 16, i64 1, !3106}
!12051 = !{!12052, !12052, i64 0}
!12052 = !{!"float", !2984, i64 0}
!12053 = !DILocation(line: 482, column: 1, scope: !12045)
!12054 = distinct !DISubprogram(name: "hash_initialize", scope: !756, file: !756, line: 594, type: !848, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12055 = !DILocalVariable(name: "candidate", arg: 1, scope: !12054, file: !756, line: 594, type: !55)
!12056 = !DILocation(line: 594, column: 25, scope: !12054)
!12057 = !DILocalVariable(name: "tuning", arg: 2, scope: !12054, file: !756, line: 594, type: !771)
!12058 = !DILocation(line: 594, column: 55, scope: !12054)
!12059 = !DILocalVariable(name: "hasher", arg: 3, scope: !12054, file: !756, line: 595, type: !783)
!12060 = !DILocation(line: 595, column: 30, scope: !12054)
!12061 = !DILocalVariable(name: "comparator", arg: 4, scope: !12054, file: !756, line: 595, type: !786)
!12062 = !DILocation(line: 595, column: 54, scope: !12054)
!12063 = !DILocalVariable(name: "data_freer", arg: 5, scope: !12054, file: !756, line: 596, type: !789)
!12064 = !DILocation(line: 596, column: 34, scope: !12054)
!12065 = !DILocalVariable(name: "table", scope: !12054, file: !756, line: 598, type: !850)
!12066 = !DILocation(line: 598, column: 15, scope: !12054)
!12067 = !DILocation(line: 600, column: 7, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12054, file: !756, line: 600, column: 7)
!12069 = !DILocation(line: 600, column: 14, scope: !12068)
!12070 = !DILocation(line: 600, column: 7, scope: !12054)
!12071 = !DILocation(line: 601, column: 12, scope: !12068)
!12072 = !DILocation(line: 601, column: 5, scope: !12068)
!12073 = !DILocation(line: 602, column: 7, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12054, file: !756, line: 602, column: 7)
!12075 = !DILocation(line: 602, column: 18, scope: !12074)
!12076 = !DILocation(line: 602, column: 7, scope: !12054)
!12077 = !DILocation(line: 603, column: 16, scope: !12074)
!12078 = !DILocation(line: 603, column: 5, scope: !12074)
!12079 = !DILocation(line: 605, column: 11, scope: !12054)
!12080 = !DILocation(line: 605, column: 9, scope: !12054)
!12081 = !DILocation(line: 606, column: 7, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12054, file: !756, line: 606, column: 7)
!12083 = !DILocation(line: 606, column: 13, scope: !12082)
!12084 = !DILocation(line: 606, column: 7, scope: !12054)
!12085 = !DILocation(line: 607, column: 5, scope: !12082)
!12086 = !DILocation(line: 609, column: 8, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12054, file: !756, line: 609, column: 7)
!12088 = !DILocation(line: 609, column: 7, scope: !12054)
!12089 = !DILocation(line: 610, column: 12, scope: !12087)
!12090 = !DILocation(line: 610, column: 5, scope: !12087)
!12091 = !DILocation(line: 611, column: 19, scope: !12054)
!12092 = !DILocation(line: 611, column: 3, scope: !12054)
!12093 = !DILocation(line: 611, column: 10, scope: !12054)
!12094 = !DILocation(line: 611, column: 17, scope: !12054)
!12095 = !{!11551, !2996, i64 40}
!12096 = !DILocation(line: 612, column: 22, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12054, file: !756, line: 612, column: 7)
!12098 = !DILocation(line: 612, column: 8, scope: !12097)
!12099 = !DILocation(line: 612, column: 7, scope: !12054)
!12100 = !DILocation(line: 619, column: 7, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12097, file: !756, line: 613, column: 5)
!12102 = !DILocation(line: 622, column: 43, scope: !12054)
!12103 = !DILocation(line: 622, column: 54, scope: !12054)
!12104 = !DILocation(line: 622, column: 22, scope: !12054)
!12105 = !DILocation(line: 622, column: 3, scope: !12054)
!12106 = !DILocation(line: 622, column: 10, scope: !12054)
!12107 = !DILocation(line: 622, column: 20, scope: !12054)
!12108 = !DILocation(line: 623, column: 8, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12054, file: !756, line: 623, column: 7)
!12110 = !DILocation(line: 623, column: 15, scope: !12109)
!12111 = !DILocation(line: 623, column: 7, scope: !12054)
!12112 = !DILocation(line: 624, column: 5, scope: !12109)
!12113 = !DILocation(line: 626, column: 27, scope: !12054)
!12114 = !DILocation(line: 626, column: 34, scope: !12054)
!12115 = !DILocation(line: 626, column: 19, scope: !12054)
!12116 = !DILocation(line: 626, column: 3, scope: !12054)
!12117 = !DILocation(line: 626, column: 10, scope: !12054)
!12118 = !DILocation(line: 626, column: 17, scope: !12054)
!12119 = !DILocation(line: 627, column: 7, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12054, file: !756, line: 627, column: 7)
!12121 = !DILocation(line: 627, column: 14, scope: !12120)
!12122 = !DILocation(line: 627, column: 21, scope: !12120)
!12123 = !DILocation(line: 627, column: 7, scope: !12054)
!12124 = !DILocation(line: 628, column: 5, scope: !12120)
!12125 = !DILocation(line: 629, column: 25, scope: !12054)
!12126 = !DILocation(line: 629, column: 32, scope: !12054)
!12127 = !DILocation(line: 629, column: 41, scope: !12054)
!12128 = !DILocation(line: 629, column: 48, scope: !12054)
!12129 = !DILocation(line: 629, column: 39, scope: !12054)
!12130 = !DILocation(line: 629, column: 3, scope: !12054)
!12131 = !DILocation(line: 629, column: 10, scope: !12054)
!12132 = !DILocation(line: 629, column: 23, scope: !12054)
!12133 = !DILocation(line: 630, column: 3, scope: !12054)
!12134 = !DILocation(line: 630, column: 10, scope: !12054)
!12135 = !DILocation(line: 630, column: 25, scope: !12054)
!12136 = !DILocation(line: 631, column: 3, scope: !12054)
!12137 = !DILocation(line: 631, column: 10, scope: !12054)
!12138 = !DILocation(line: 631, column: 20, scope: !12054)
!12139 = !DILocation(line: 633, column: 19, scope: !12054)
!12140 = !DILocation(line: 633, column: 3, scope: !12054)
!12141 = !DILocation(line: 633, column: 10, scope: !12054)
!12142 = !DILocation(line: 633, column: 17, scope: !12054)
!12143 = !DILocation(line: 634, column: 23, scope: !12054)
!12144 = !DILocation(line: 634, column: 3, scope: !12054)
!12145 = !DILocation(line: 634, column: 10, scope: !12054)
!12146 = !DILocation(line: 634, column: 21, scope: !12054)
!12147 = !DILocation(line: 635, column: 23, scope: !12054)
!12148 = !DILocation(line: 635, column: 3, scope: !12054)
!12149 = !DILocation(line: 635, column: 10, scope: !12054)
!12150 = !DILocation(line: 635, column: 21, scope: !12054)
!12151 = !{!11551, !2996, i64 64}
!12152 = !DILocation(line: 637, column: 3, scope: !12054)
!12153 = !DILocation(line: 637, column: 10, scope: !12054)
!12154 = !DILocation(line: 637, column: 26, scope: !12054)
!12155 = !{!11551, !2996, i64 72}
!12156 = !DILocation(line: 641, column: 10, scope: !12054)
!12157 = !DILocation(line: 641, column: 3, scope: !12054)
!12158 = !DILabel(scope: !12054, name: "fail", file: !756, line: 643)
!12159 = !DILocation(line: 643, column: 2, scope: !12054)
!12160 = !DILocation(line: 644, column: 9, scope: !12054)
!12161 = !DILocation(line: 644, column: 3, scope: !12054)
!12162 = !DILocation(line: 645, column: 3, scope: !12054)
!12163 = !DILocation(line: 646, column: 1, scope: !12054)
!12164 = distinct !DISubprogram(name: "raw_hasher", scope: !756, file: !756, line: 486, type: !547, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12165 = !DILocalVariable(name: "data", arg: 1, scope: !12164, file: !756, line: 486, type: !425)
!12166 = !DILocation(line: 486, column: 25, scope: !12164)
!12167 = !DILocalVariable(name: "n", arg: 2, scope: !12164, file: !756, line: 486, type: !55)
!12168 = !DILocation(line: 486, column: 38, scope: !12164)
!12169 = !DILocalVariable(name: "val", scope: !12164, file: !756, line: 493, type: !55)
!12170 = !DILocation(line: 493, column: 10, scope: !12164)
!12171 = !DILocation(line: 493, column: 34, scope: !12164)
!12172 = !DILocation(line: 493, column: 25, scope: !12164)
!12173 = !DILocation(line: 493, column: 16, scope: !12164)
!12174 = !DILocation(line: 494, column: 10, scope: !12164)
!12175 = !DILocation(line: 494, column: 16, scope: !12164)
!12176 = !DILocation(line: 494, column: 14, scope: !12164)
!12177 = !DILocation(line: 494, column: 3, scope: !12164)
!12178 = distinct !DISubprogram(name: "raw_comparator", scope: !756, file: !756, line: 499, type: !549, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12179 = !DILocalVariable(name: "a", arg: 1, scope: !12178, file: !756, line: 499, type: !425)
!12180 = !DILocation(line: 499, column: 29, scope: !12178)
!12181 = !DILocalVariable(name: "b", arg: 2, scope: !12178, file: !756, line: 499, type: !425)
!12182 = !DILocation(line: 499, column: 44, scope: !12178)
!12183 = !DILocation(line: 501, column: 10, scope: !12178)
!12184 = !DILocation(line: 501, column: 15, scope: !12178)
!12185 = !DILocation(line: 501, column: 12, scope: !12178)
!12186 = !DILocation(line: 501, column: 3, scope: !12178)
!12187 = distinct !DISubprogram(name: "check_tuning", scope: !756, file: !756, line: 512, type: !862, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12188 = !DILocalVariable(name: "table", arg: 1, scope: !12187, file: !756, line: 512, type: !850)
!12189 = !DILocation(line: 512, column: 27, scope: !12187)
!12190 = !DILocalVariable(name: "tuning", scope: !12187, file: !756, line: 514, type: !771)
!12191 = !DILocation(line: 514, column: 22, scope: !12187)
!12192 = !DILocation(line: 514, column: 31, scope: !12187)
!12193 = !DILocation(line: 514, column: 38, scope: !12187)
!12194 = !DILocalVariable(name: "epsilon", scope: !12187, file: !756, line: 515, type: !777)
!12195 = !DILocation(line: 515, column: 9, scope: !12187)
!12196 = !DILocation(line: 516, column: 7, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !12187, file: !756, line: 516, column: 7)
!12198 = !DILocation(line: 516, column: 14, scope: !12197)
!12199 = !DILocation(line: 516, column: 7, scope: !12187)
!12200 = !DILocation(line: 517, column: 5, scope: !12197)
!12201 = !DILocation(line: 524, column: 11, scope: !12187)
!12202 = !DILocation(line: 526, column: 7, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12187, file: !756, line: 526, column: 7)
!12204 = !DILocation(line: 526, column: 17, scope: !12203)
!12205 = !DILocation(line: 526, column: 25, scope: !12203)
!12206 = !{!12207, !12052, i64 8}
!12207 = !{!"hash_tuning", !12052, i64 0, !12052, i64 4, !12052, i64 8, !12052, i64 12, !3107, i64 16}
!12208 = !DILocation(line: 526, column: 15, scope: !12203)
!12209 = !DILocation(line: 527, column: 7, scope: !12203)
!12210 = !DILocation(line: 527, column: 10, scope: !12203)
!12211 = !DILocation(line: 527, column: 18, scope: !12203)
!12212 = !DILocation(line: 527, column: 41, scope: !12203)
!12213 = !DILocation(line: 527, column: 39, scope: !12203)
!12214 = !DILocation(line: 527, column: 35, scope: !12203)
!12215 = !DILocation(line: 528, column: 7, scope: !12203)
!12216 = !DILocation(line: 528, column: 14, scope: !12203)
!12217 = !DILocation(line: 528, column: 12, scope: !12203)
!12218 = !DILocation(line: 528, column: 24, scope: !12203)
!12219 = !DILocation(line: 528, column: 32, scope: !12203)
!12220 = !{!12207, !12052, i64 12}
!12221 = !DILocation(line: 528, column: 22, scope: !12203)
!12222 = !DILocation(line: 529, column: 7, scope: !12203)
!12223 = !DILocation(line: 529, column: 15, scope: !12203)
!12224 = !DILocation(line: 529, column: 23, scope: !12203)
!12225 = !{!12207, !12052, i64 0}
!12226 = !DILocation(line: 529, column: 12, scope: !12203)
!12227 = !DILocation(line: 530, column: 7, scope: !12203)
!12228 = !DILocation(line: 530, column: 10, scope: !12203)
!12229 = !DILocation(line: 530, column: 18, scope: !12203)
!12230 = !DILocation(line: 530, column: 37, scope: !12203)
!12231 = !DILocation(line: 530, column: 35, scope: !12203)
!12232 = !DILocation(line: 530, column: 47, scope: !12203)
!12233 = !DILocation(line: 530, column: 55, scope: !12203)
!12234 = !{!12207, !12052, i64 4}
!12235 = !DILocation(line: 530, column: 45, scope: !12203)
!12236 = !DILocation(line: 531, column: 7, scope: !12203)
!12237 = !DILocation(line: 531, column: 10, scope: !12203)
!12238 = !DILocation(line: 531, column: 18, scope: !12203)
!12239 = !DILocation(line: 531, column: 32, scope: !12203)
!12240 = !DILocation(line: 532, column: 7, scope: !12203)
!12241 = !DILocation(line: 532, column: 10, scope: !12203)
!12242 = !DILocation(line: 532, column: 18, scope: !12203)
!12243 = !DILocation(line: 532, column: 37, scope: !12203)
!12244 = !DILocation(line: 532, column: 35, scope: !12203)
!12245 = !DILocation(line: 532, column: 47, scope: !12203)
!12246 = !DILocation(line: 532, column: 55, scope: !12203)
!12247 = !DILocation(line: 532, column: 45, scope: !12203)
!12248 = !DILocation(line: 526, column: 7, scope: !12187)
!12249 = !DILocation(line: 533, column: 5, scope: !12203)
!12250 = !DILocation(line: 535, column: 3, scope: !12187)
!12251 = !DILocation(line: 535, column: 10, scope: !12187)
!12252 = !DILocation(line: 535, column: 17, scope: !12187)
!12253 = !DILocation(line: 536, column: 3, scope: !12187)
!12254 = !DILocation(line: 537, column: 1, scope: !12187)
!12255 = distinct !DISubprogram(name: "compute_bucket_size", scope: !756, file: !756, line: 544, type: !864, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12256 = !DILocalVariable(name: "candidate", arg: 1, scope: !12255, file: !756, line: 544, type: !55)
!12257 = !DILocation(line: 544, column: 29, scope: !12255)
!12258 = !DILocalVariable(name: "tuning", arg: 2, scope: !12255, file: !756, line: 544, type: !771)
!12259 = !DILocation(line: 544, column: 59, scope: !12255)
!12260 = !DILocation(line: 546, column: 8, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12255, file: !756, line: 546, column: 7)
!12262 = !DILocation(line: 546, column: 16, scope: !12261)
!12263 = !{!12207, !3107, i64 16}
!12264 = !DILocation(line: 546, column: 7, scope: !12255)
!12265 = !DILocalVariable(name: "new_candidate", scope: !12266, file: !756, line: 548, type: !777)
!12266 = distinct !DILexicalBlock(scope: !12261, file: !756, line: 547, column: 5)
!12267 = !DILocation(line: 548, column: 13, scope: !12266)
!12268 = !DILocation(line: 548, column: 29, scope: !12266)
!12269 = !DILocation(line: 548, column: 41, scope: !12266)
!12270 = !DILocation(line: 548, column: 49, scope: !12266)
!12271 = !DILocation(line: 548, column: 39, scope: !12266)
!12272 = !DILocation(line: 549, column: 23, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12266, file: !756, line: 549, column: 11)
!12274 = !DILocation(line: 549, column: 20, scope: !12273)
!12275 = !DILocation(line: 549, column: 11, scope: !12266)
!12276 = !DILocation(line: 550, column: 9, scope: !12273)
!12277 = !DILocation(line: 551, column: 19, scope: !12266)
!12278 = !DILocation(line: 551, column: 17, scope: !12266)
!12279 = !DILocation(line: 552, column: 5, scope: !12266)
!12280 = !DILocation(line: 553, column: 27, scope: !12255)
!12281 = !DILocation(line: 553, column: 15, scope: !12255)
!12282 = !DILocation(line: 553, column: 13, scope: !12255)
!12283 = !DILocation(line: 554, column: 7, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12255, file: !756, line: 554, column: 7)
!12285 = !DILocation(line: 554, column: 7, scope: !12255)
!12286 = !DILocation(line: 555, column: 5, scope: !12284)
!12287 = !DILocation(line: 556, column: 10, scope: !12255)
!12288 = !DILocation(line: 556, column: 3, scope: !12255)
!12289 = !DILocation(line: 557, column: 1, scope: !12255)
!12290 = distinct !DISubprogram(name: "next_prime", scope: !756, file: !756, line: 463, type: !866, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12291 = !DILocalVariable(name: "candidate", arg: 1, scope: !12290, file: !756, line: 463, type: !55)
!12292 = !DILocation(line: 463, column: 20, scope: !12290)
!12293 = !DILocation(line: 466, column: 7, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12290, file: !756, line: 466, column: 7)
!12295 = !DILocation(line: 466, column: 17, scope: !12294)
!12296 = !DILocation(line: 466, column: 7, scope: !12290)
!12297 = !DILocation(line: 467, column: 15, scope: !12294)
!12298 = !DILocation(line: 467, column: 5, scope: !12294)
!12299 = !DILocation(line: 470, column: 13, scope: !12290)
!12300 = !DILocation(line: 472, column: 3, scope: !12290)
!12301 = !DILocation(line: 472, column: 22, scope: !12290)
!12302 = !DILocation(line: 472, column: 19, scope: !12290)
!12303 = !DILocation(line: 472, column: 32, scope: !12290)
!12304 = !DILocation(line: 472, column: 46, scope: !12290)
!12305 = !DILocation(line: 472, column: 36, scope: !12290)
!12306 = !DILocation(line: 472, column: 35, scope: !12290)
!12307 = !DILocation(line: 0, scope: !12290)
!12308 = !DILocation(line: 473, column: 15, scope: !12290)
!12309 = distinct !{!12309, !12300, !12310}
!12310 = !DILocation(line: 473, column: 18, scope: !12290)
!12311 = !DILocation(line: 475, column: 10, scope: !12290)
!12312 = !DILocation(line: 475, column: 3, scope: !12290)
!12313 = distinct !DISubprogram(name: "is_prime", scope: !756, file: !756, line: 444, type: !868, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12314 = !DILocalVariable(name: "candidate", arg: 1, scope: !12313, file: !756, line: 444, type: !55)
!12315 = !DILocation(line: 444, column: 18, scope: !12313)
!12316 = !DILocalVariable(name: "divisor", scope: !12313, file: !756, line: 446, type: !55)
!12317 = !DILocation(line: 446, column: 10, scope: !12313)
!12318 = !DILocalVariable(name: "square", scope: !12313, file: !756, line: 447, type: !55)
!12319 = !DILocation(line: 447, column: 10, scope: !12313)
!12320 = !DILocation(line: 447, column: 19, scope: !12313)
!12321 = !DILocation(line: 447, column: 29, scope: !12313)
!12322 = !DILocation(line: 447, column: 27, scope: !12313)
!12323 = !DILocation(line: 449, column: 3, scope: !12313)
!12324 = !DILocation(line: 449, column: 10, scope: !12313)
!12325 = !DILocation(line: 449, column: 19, scope: !12313)
!12326 = !DILocation(line: 449, column: 17, scope: !12313)
!12327 = !DILocation(line: 449, column: 29, scope: !12313)
!12328 = !DILocation(line: 449, column: 33, scope: !12313)
!12329 = !DILocation(line: 449, column: 45, scope: !12313)
!12330 = !DILocation(line: 449, column: 43, scope: !12313)
!12331 = !DILocation(line: 0, scope: !12313)
!12332 = !DILocation(line: 451, column: 14, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12313, file: !756, line: 450, column: 5)
!12334 = !DILocation(line: 452, column: 21, scope: !12333)
!12335 = !DILocation(line: 452, column: 19, scope: !12333)
!12336 = !DILocation(line: 452, column: 14, scope: !12333)
!12337 = !DILocation(line: 453, column: 14, scope: !12333)
!12338 = distinct !{!12338, !12323, !12339}
!12339 = !DILocation(line: 454, column: 5, scope: !12313)
!12340 = !DILocation(line: 456, column: 11, scope: !12313)
!12341 = !DILocation(line: 456, column: 23, scope: !12313)
!12342 = !DILocation(line: 456, column: 21, scope: !12313)
!12343 = !DILocation(line: 456, column: 10, scope: !12313)
!12344 = !DILocation(line: 456, column: 3, scope: !12313)
!12345 = distinct !DISubprogram(name: "hash_clear", scope: !756, file: !756, line: 653, type: !851, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12346 = !DILocalVariable(name: "table", arg: 1, scope: !12345, file: !756, line: 653, type: !850)
!12347 = !DILocation(line: 653, column: 25, scope: !12345)
!12348 = !DILocalVariable(name: "bucket", scope: !12345, file: !756, line: 655, type: !759)
!12349 = !DILocation(line: 655, column: 22, scope: !12345)
!12350 = !DILocation(line: 657, column: 17, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12345, file: !756, line: 657, column: 3)
!12352 = !DILocation(line: 657, column: 24, scope: !12351)
!12353 = !DILocation(line: 657, column: 15, scope: !12351)
!12354 = !DILocation(line: 657, column: 8, scope: !12351)
!12355 = !DILocation(line: 657, column: 32, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12351, file: !756, line: 657, column: 3)
!12357 = !DILocation(line: 657, column: 41, scope: !12356)
!12358 = !DILocation(line: 657, column: 48, scope: !12356)
!12359 = !DILocation(line: 657, column: 39, scope: !12356)
!12360 = !DILocation(line: 657, column: 3, scope: !12351)
!12361 = !DILocation(line: 659, column: 11, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12363, file: !756, line: 659, column: 11)
!12363 = distinct !DILexicalBlock(scope: !12356, file: !756, line: 658, column: 5)
!12364 = !DILocation(line: 659, column: 19, scope: !12362)
!12365 = !DILocation(line: 659, column: 11, scope: !12363)
!12366 = !DILocalVariable(name: "cursor", scope: !12367, file: !756, line: 661, type: !759)
!12367 = distinct !DILexicalBlock(scope: !12362, file: !756, line: 660, column: 9)
!12368 = !DILocation(line: 661, column: 30, scope: !12367)
!12369 = !DILocalVariable(name: "next", scope: !12367, file: !756, line: 662, type: !759)
!12370 = !DILocation(line: 662, column: 30, scope: !12367)
!12371 = !DILocation(line: 665, column: 25, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12367, file: !756, line: 665, column: 11)
!12373 = !DILocation(line: 665, column: 33, scope: !12372)
!12374 = !DILocation(line: 665, column: 23, scope: !12372)
!12375 = !DILocation(line: 665, column: 16, scope: !12372)
!12376 = !DILocation(line: 665, column: 39, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12372, file: !756, line: 665, column: 11)
!12378 = !DILocation(line: 665, column: 11, scope: !12372)
!12379 = !DILocation(line: 667, column: 19, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12381, file: !756, line: 667, column: 19)
!12381 = distinct !DILexicalBlock(scope: !12377, file: !756, line: 666, column: 13)
!12382 = !DILocation(line: 667, column: 26, scope: !12380)
!12383 = !DILocation(line: 667, column: 19, scope: !12381)
!12384 = !DILocation(line: 668, column: 17, scope: !12380)
!12385 = !DILocation(line: 668, column: 24, scope: !12380)
!12386 = !DILocation(line: 668, column: 36, scope: !12380)
!12387 = !DILocation(line: 668, column: 44, scope: !12380)
!12388 = !DILocation(line: 669, column: 15, scope: !12381)
!12389 = !DILocation(line: 669, column: 23, scope: !12381)
!12390 = !DILocation(line: 669, column: 28, scope: !12381)
!12391 = !DILocation(line: 671, column: 22, scope: !12381)
!12392 = !DILocation(line: 671, column: 30, scope: !12381)
!12393 = !DILocation(line: 671, column: 20, scope: !12381)
!12394 = !DILocation(line: 674, column: 30, scope: !12381)
!12395 = !DILocation(line: 674, column: 37, scope: !12381)
!12396 = !DILocation(line: 674, column: 15, scope: !12381)
!12397 = !DILocation(line: 674, column: 23, scope: !12381)
!12398 = !DILocation(line: 674, column: 28, scope: !12381)
!12399 = !DILocation(line: 675, column: 40, scope: !12381)
!12400 = !DILocation(line: 675, column: 15, scope: !12381)
!12401 = !DILocation(line: 675, column: 22, scope: !12381)
!12402 = !DILocation(line: 675, column: 38, scope: !12381)
!12403 = !DILocation(line: 676, column: 13, scope: !12381)
!12404 = !DILocation(line: 665, column: 56, scope: !12377)
!12405 = !DILocation(line: 665, column: 54, scope: !12377)
!12406 = !DILocation(line: 665, column: 11, scope: !12377)
!12407 = distinct !{!12407, !12378, !12408}
!12408 = !DILocation(line: 676, column: 13, scope: !12372)
!12409 = !DILocation(line: 679, column: 15, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12367, file: !756, line: 679, column: 15)
!12411 = !DILocation(line: 679, column: 22, scope: !12410)
!12412 = !DILocation(line: 679, column: 15, scope: !12367)
!12413 = !DILocation(line: 680, column: 13, scope: !12410)
!12414 = !DILocation(line: 680, column: 20, scope: !12410)
!12415 = !DILocation(line: 680, column: 32, scope: !12410)
!12416 = !DILocation(line: 680, column: 40, scope: !12410)
!12417 = !DILocation(line: 681, column: 11, scope: !12367)
!12418 = !DILocation(line: 681, column: 19, scope: !12367)
!12419 = !DILocation(line: 681, column: 24, scope: !12367)
!12420 = !DILocation(line: 682, column: 11, scope: !12367)
!12421 = !DILocation(line: 682, column: 19, scope: !12367)
!12422 = !DILocation(line: 682, column: 24, scope: !12367)
!12423 = !DILocation(line: 683, column: 9, scope: !12367)
!12424 = !DILocation(line: 684, column: 5, scope: !12363)
!12425 = !DILocation(line: 657, column: 68, scope: !12356)
!12426 = !DILocation(line: 657, column: 3, scope: !12356)
!12427 = distinct !{!12427, !12360, !12428}
!12428 = !DILocation(line: 684, column: 5, scope: !12351)
!12429 = !DILocation(line: 686, column: 3, scope: !12345)
!12430 = !DILocation(line: 686, column: 10, scope: !12345)
!12431 = !DILocation(line: 686, column: 25, scope: !12345)
!12432 = !DILocation(line: 687, column: 3, scope: !12345)
!12433 = !DILocation(line: 687, column: 10, scope: !12345)
!12434 = !DILocation(line: 687, column: 20, scope: !12345)
!12435 = !DILocation(line: 688, column: 1, scope: !12345)
!12436 = distinct !DISubprogram(name: "hash_free", scope: !756, file: !756, line: 696, type: !851, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12437 = !DILocalVariable(name: "table", arg: 1, scope: !12436, file: !756, line: 696, type: !850)
!12438 = !DILocation(line: 696, column: 24, scope: !12436)
!12439 = !DILocalVariable(name: "bucket", scope: !12436, file: !756, line: 698, type: !759)
!12440 = !DILocation(line: 698, column: 22, scope: !12436)
!12441 = !DILocalVariable(name: "cursor", scope: !12436, file: !756, line: 699, type: !759)
!12442 = !DILocation(line: 699, column: 22, scope: !12436)
!12443 = !DILocalVariable(name: "next", scope: !12436, file: !756, line: 700, type: !759)
!12444 = !DILocation(line: 700, column: 22, scope: !12436)
!12445 = !DILocation(line: 703, column: 7, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12436, file: !756, line: 703, column: 7)
!12447 = !DILocation(line: 703, column: 14, scope: !12446)
!12448 = !DILocation(line: 703, column: 25, scope: !12446)
!12449 = !DILocation(line: 703, column: 28, scope: !12446)
!12450 = !DILocation(line: 703, column: 35, scope: !12446)
!12451 = !DILocation(line: 703, column: 7, scope: !12436)
!12452 = !DILocation(line: 705, column: 21, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12454, file: !756, line: 705, column: 7)
!12454 = distinct !DILexicalBlock(scope: !12446, file: !756, line: 704, column: 5)
!12455 = !DILocation(line: 705, column: 28, scope: !12453)
!12456 = !DILocation(line: 705, column: 19, scope: !12453)
!12457 = !DILocation(line: 705, column: 12, scope: !12453)
!12458 = !DILocation(line: 705, column: 36, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12453, file: !756, line: 705, column: 7)
!12460 = !DILocation(line: 705, column: 45, scope: !12459)
!12461 = !DILocation(line: 705, column: 52, scope: !12459)
!12462 = !DILocation(line: 705, column: 43, scope: !12459)
!12463 = !DILocation(line: 705, column: 7, scope: !12453)
!12464 = !DILocation(line: 707, column: 15, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12466, file: !756, line: 707, column: 15)
!12466 = distinct !DILexicalBlock(scope: !12459, file: !756, line: 706, column: 9)
!12467 = !DILocation(line: 707, column: 23, scope: !12465)
!12468 = !DILocation(line: 707, column: 15, scope: !12466)
!12469 = !DILocation(line: 709, column: 29, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12471, file: !756, line: 709, column: 15)
!12471 = distinct !DILexicalBlock(scope: !12465, file: !756, line: 708, column: 13)
!12472 = !DILocation(line: 709, column: 27, scope: !12470)
!12473 = !DILocation(line: 709, column: 20, scope: !12470)
!12474 = !DILocation(line: 709, column: 37, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12470, file: !756, line: 709, column: 15)
!12476 = !DILocation(line: 709, column: 15, scope: !12470)
!12477 = !DILocation(line: 710, column: 17, scope: !12475)
!12478 = !DILocation(line: 710, column: 24, scope: !12475)
!12479 = !DILocation(line: 710, column: 36, scope: !12475)
!12480 = !DILocation(line: 710, column: 44, scope: !12475)
!12481 = !DILocation(line: 709, column: 54, scope: !12475)
!12482 = !DILocation(line: 709, column: 62, scope: !12475)
!12483 = !DILocation(line: 709, column: 52, scope: !12475)
!12484 = !DILocation(line: 709, column: 15, scope: !12475)
!12485 = distinct !{!12485, !12476, !12486}
!12486 = !DILocation(line: 710, column: 48, scope: !12470)
!12487 = !DILocation(line: 711, column: 13, scope: !12471)
!12488 = !DILocation(line: 712, column: 9, scope: !12466)
!12489 = !DILocation(line: 705, column: 72, scope: !12459)
!12490 = !DILocation(line: 705, column: 7, scope: !12459)
!12491 = distinct !{!12491, !12463, !12492}
!12492 = !DILocation(line: 712, column: 9, scope: !12453)
!12493 = !DILocation(line: 713, column: 5, scope: !12454)
!12494 = !DILocation(line: 722, column: 17, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12436, file: !756, line: 722, column: 3)
!12496 = !DILocation(line: 722, column: 24, scope: !12495)
!12497 = !DILocation(line: 722, column: 15, scope: !12495)
!12498 = !DILocation(line: 722, column: 8, scope: !12495)
!12499 = !DILocation(line: 722, column: 32, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12495, file: !756, line: 722, column: 3)
!12501 = !DILocation(line: 722, column: 41, scope: !12500)
!12502 = !DILocation(line: 722, column: 48, scope: !12500)
!12503 = !DILocation(line: 722, column: 39, scope: !12500)
!12504 = !DILocation(line: 722, column: 3, scope: !12495)
!12505 = !DILocation(line: 724, column: 21, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12507, file: !756, line: 724, column: 7)
!12507 = distinct !DILexicalBlock(scope: !12500, file: !756, line: 723, column: 5)
!12508 = !DILocation(line: 724, column: 29, scope: !12506)
!12509 = !DILocation(line: 724, column: 19, scope: !12506)
!12510 = !DILocation(line: 724, column: 12, scope: !12506)
!12511 = !DILocation(line: 724, column: 35, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12506, file: !756, line: 724, column: 7)
!12513 = !DILocation(line: 724, column: 7, scope: !12506)
!12514 = !DILocation(line: 726, column: 18, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12512, file: !756, line: 725, column: 9)
!12516 = !DILocation(line: 726, column: 26, scope: !12515)
!12517 = !DILocation(line: 726, column: 16, scope: !12515)
!12518 = !DILocation(line: 727, column: 17, scope: !12515)
!12519 = !DILocation(line: 727, column: 11, scope: !12515)
!12520 = !DILocation(line: 728, column: 9, scope: !12515)
!12521 = !DILocation(line: 724, column: 52, scope: !12512)
!12522 = !DILocation(line: 724, column: 50, scope: !12512)
!12523 = !DILocation(line: 724, column: 7, scope: !12512)
!12524 = distinct !{!12524, !12513, !12525}
!12525 = !DILocation(line: 728, column: 9, scope: !12506)
!12526 = !DILocation(line: 729, column: 5, scope: !12507)
!12527 = !DILocation(line: 722, column: 68, scope: !12500)
!12528 = !DILocation(line: 722, column: 3, scope: !12500)
!12529 = distinct !{!12529, !12504, !12530}
!12530 = !DILocation(line: 729, column: 5, scope: !12495)
!12531 = !DILocation(line: 732, column: 17, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12436, file: !756, line: 732, column: 3)
!12533 = !DILocation(line: 732, column: 24, scope: !12532)
!12534 = !DILocation(line: 732, column: 15, scope: !12532)
!12535 = !DILocation(line: 732, column: 8, scope: !12532)
!12536 = !DILocation(line: 732, column: 41, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12532, file: !756, line: 732, column: 3)
!12538 = !DILocation(line: 732, column: 3, scope: !12532)
!12539 = !DILocation(line: 734, column: 14, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12537, file: !756, line: 733, column: 5)
!12541 = !DILocation(line: 734, column: 22, scope: !12540)
!12542 = !DILocation(line: 734, column: 12, scope: !12540)
!12543 = !DILocation(line: 735, column: 13, scope: !12540)
!12544 = !DILocation(line: 735, column: 7, scope: !12540)
!12545 = !DILocation(line: 736, column: 5, scope: !12540)
!12546 = !DILocation(line: 732, column: 58, scope: !12537)
!12547 = !DILocation(line: 732, column: 56, scope: !12537)
!12548 = !DILocation(line: 732, column: 3, scope: !12537)
!12549 = distinct !{!12549, !12538, !12550}
!12550 = !DILocation(line: 736, column: 5, scope: !12532)
!12551 = !DILocation(line: 741, column: 9, scope: !12436)
!12552 = !DILocation(line: 741, column: 16, scope: !12436)
!12553 = !DILocation(line: 741, column: 3, scope: !12436)
!12554 = !DILocation(line: 742, column: 9, scope: !12436)
!12555 = !DILocation(line: 742, column: 3, scope: !12436)
!12556 = !DILocation(line: 743, column: 1, scope: !12436)
!12557 = distinct !DISubprogram(name: "hash_rehash", scope: !756, file: !756, line: 943, type: !853, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12558 = !DILocalVariable(name: "table", arg: 1, scope: !12557, file: !756, line: 943, type: !850)
!12559 = !DILocation(line: 943, column: 26, scope: !12557)
!12560 = !DILocalVariable(name: "candidate", arg: 2, scope: !12557, file: !756, line: 943, type: !55)
!12561 = !DILocation(line: 943, column: 40, scope: !12557)
!12562 = !DILocalVariable(name: "storage", scope: !12557, file: !756, line: 945, type: !754)
!12563 = !DILocation(line: 945, column: 14, scope: !12557)
!12564 = !DILocalVariable(name: "new_table", scope: !12557, file: !756, line: 946, type: !850)
!12565 = !DILocation(line: 946, column: 15, scope: !12557)
!12566 = !DILocalVariable(name: "new_size", scope: !12557, file: !756, line: 947, type: !55)
!12567 = !DILocation(line: 947, column: 10, scope: !12557)
!12568 = !DILocation(line: 947, column: 42, scope: !12557)
!12569 = !DILocation(line: 947, column: 53, scope: !12557)
!12570 = !DILocation(line: 947, column: 60, scope: !12557)
!12571 = !DILocation(line: 947, column: 21, scope: !12557)
!12572 = !DILocation(line: 949, column: 8, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12557, file: !756, line: 949, column: 7)
!12574 = !DILocation(line: 949, column: 7, scope: !12557)
!12575 = !DILocation(line: 950, column: 5, scope: !12573)
!12576 = !DILocation(line: 951, column: 7, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12557, file: !756, line: 951, column: 7)
!12578 = !DILocation(line: 951, column: 19, scope: !12577)
!12579 = !DILocation(line: 951, column: 26, scope: !12577)
!12580 = !DILocation(line: 951, column: 16, scope: !12577)
!12581 = !DILocation(line: 951, column: 7, scope: !12557)
!12582 = !DILocation(line: 952, column: 5, scope: !12577)
!12583 = !DILocation(line: 953, column: 13, scope: !12557)
!12584 = !DILocation(line: 954, column: 31, scope: !12557)
!12585 = !DILocation(line: 954, column: 23, scope: !12557)
!12586 = !DILocation(line: 954, column: 3, scope: !12557)
!12587 = !DILocation(line: 954, column: 14, scope: !12557)
!12588 = !DILocation(line: 954, column: 21, scope: !12557)
!12589 = !DILocation(line: 955, column: 7, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12557, file: !756, line: 955, column: 7)
!12591 = !DILocation(line: 955, column: 18, scope: !12590)
!12592 = !DILocation(line: 955, column: 25, scope: !12590)
!12593 = !DILocation(line: 955, column: 7, scope: !12557)
!12594 = !DILocation(line: 956, column: 5, scope: !12590)
!12595 = !DILocation(line: 957, column: 26, scope: !12557)
!12596 = !DILocation(line: 957, column: 3, scope: !12557)
!12597 = !DILocation(line: 957, column: 14, scope: !12557)
!12598 = !DILocation(line: 957, column: 24, scope: !12557)
!12599 = !DILocation(line: 958, column: 29, scope: !12557)
!12600 = !DILocation(line: 958, column: 40, scope: !12557)
!12601 = !DILocation(line: 958, column: 49, scope: !12557)
!12602 = !DILocation(line: 958, column: 47, scope: !12557)
!12603 = !DILocation(line: 958, column: 3, scope: !12557)
!12604 = !DILocation(line: 958, column: 14, scope: !12557)
!12605 = !DILocation(line: 958, column: 27, scope: !12557)
!12606 = !DILocation(line: 959, column: 3, scope: !12557)
!12607 = !DILocation(line: 959, column: 14, scope: !12557)
!12608 = !DILocation(line: 959, column: 29, scope: !12557)
!12609 = !DILocation(line: 960, column: 3, scope: !12557)
!12610 = !DILocation(line: 960, column: 14, scope: !12557)
!12611 = !DILocation(line: 960, column: 24, scope: !12557)
!12612 = !DILocation(line: 961, column: 23, scope: !12557)
!12613 = !DILocation(line: 961, column: 30, scope: !12557)
!12614 = !DILocation(line: 961, column: 3, scope: !12557)
!12615 = !DILocation(line: 961, column: 14, scope: !12557)
!12616 = !DILocation(line: 961, column: 21, scope: !12557)
!12617 = !DILocation(line: 962, column: 23, scope: !12557)
!12618 = !DILocation(line: 962, column: 30, scope: !12557)
!12619 = !DILocation(line: 962, column: 3, scope: !12557)
!12620 = !DILocation(line: 962, column: 14, scope: !12557)
!12621 = !DILocation(line: 962, column: 21, scope: !12557)
!12622 = !DILocation(line: 963, column: 27, scope: !12557)
!12623 = !DILocation(line: 963, column: 34, scope: !12557)
!12624 = !DILocation(line: 963, column: 3, scope: !12557)
!12625 = !DILocation(line: 963, column: 14, scope: !12557)
!12626 = !DILocation(line: 963, column: 25, scope: !12557)
!12627 = !DILocation(line: 964, column: 27, scope: !12557)
!12628 = !DILocation(line: 964, column: 34, scope: !12557)
!12629 = !DILocation(line: 964, column: 3, scope: !12557)
!12630 = !DILocation(line: 964, column: 14, scope: !12557)
!12631 = !DILocation(line: 964, column: 25, scope: !12557)
!12632 = !DILocation(line: 984, column: 32, scope: !12557)
!12633 = !DILocation(line: 984, column: 39, scope: !12557)
!12634 = !DILocation(line: 984, column: 3, scope: !12557)
!12635 = !DILocation(line: 984, column: 14, scope: !12557)
!12636 = !DILocation(line: 984, column: 30, scope: !12557)
!12637 = !DILocation(line: 986, column: 25, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12557, file: !756, line: 986, column: 7)
!12639 = !DILocation(line: 986, column: 36, scope: !12638)
!12640 = !DILocation(line: 986, column: 7, scope: !12638)
!12641 = !DILocation(line: 986, column: 7, scope: !12557)
!12642 = !DILocation(line: 989, column: 13, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12638, file: !756, line: 987, column: 5)
!12644 = !DILocation(line: 989, column: 20, scope: !12643)
!12645 = !DILocation(line: 989, column: 7, scope: !12643)
!12646 = !DILocation(line: 990, column: 23, scope: !12643)
!12647 = !DILocation(line: 990, column: 34, scope: !12643)
!12648 = !DILocation(line: 990, column: 7, scope: !12643)
!12649 = !DILocation(line: 990, column: 14, scope: !12643)
!12650 = !DILocation(line: 990, column: 21, scope: !12643)
!12651 = !DILocation(line: 991, column: 29, scope: !12643)
!12652 = !DILocation(line: 991, column: 40, scope: !12643)
!12653 = !DILocation(line: 991, column: 7, scope: !12643)
!12654 = !DILocation(line: 991, column: 14, scope: !12643)
!12655 = !DILocation(line: 991, column: 27, scope: !12643)
!12656 = !DILocation(line: 992, column: 26, scope: !12643)
!12657 = !DILocation(line: 992, column: 37, scope: !12643)
!12658 = !DILocation(line: 992, column: 7, scope: !12643)
!12659 = !DILocation(line: 992, column: 14, scope: !12643)
!12660 = !DILocation(line: 992, column: 24, scope: !12643)
!12661 = !DILocation(line: 993, column: 31, scope: !12643)
!12662 = !DILocation(line: 993, column: 42, scope: !12643)
!12663 = !DILocation(line: 993, column: 7, scope: !12643)
!12664 = !DILocation(line: 993, column: 14, scope: !12643)
!12665 = !DILocation(line: 993, column: 29, scope: !12643)
!12666 = !DILocation(line: 994, column: 32, scope: !12643)
!12667 = !DILocation(line: 994, column: 43, scope: !12643)
!12668 = !DILocation(line: 994, column: 7, scope: !12643)
!12669 = !DILocation(line: 994, column: 14, scope: !12643)
!12670 = !DILocation(line: 994, column: 30, scope: !12643)
!12671 = !DILocation(line: 996, column: 7, scope: !12643)
!12672 = !DILocation(line: 1012, column: 28, scope: !12557)
!12673 = !DILocation(line: 1012, column: 39, scope: !12557)
!12674 = !DILocation(line: 1012, column: 3, scope: !12557)
!12675 = !DILocation(line: 1012, column: 10, scope: !12557)
!12676 = !DILocation(line: 1012, column: 26, scope: !12557)
!12677 = !DILocation(line: 1013, column: 28, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12557, file: !756, line: 1013, column: 7)
!12679 = !DILocation(line: 1013, column: 35, scope: !12678)
!12680 = !DILocation(line: 1013, column: 10, scope: !12678)
!12681 = !DILocation(line: 1014, column: 10, scope: !12678)
!12682 = !DILocation(line: 1014, column: 31, scope: !12678)
!12683 = !DILocation(line: 1014, column: 38, scope: !12678)
!12684 = !DILocation(line: 1014, column: 13, scope: !12678)
!12685 = !DILocation(line: 1013, column: 7, scope: !12557)
!12686 = !DILocation(line: 1015, column: 5, scope: !12678)
!12687 = !DILocation(line: 1017, column: 9, scope: !12557)
!12688 = !DILocation(line: 1017, column: 20, scope: !12557)
!12689 = !DILocation(line: 1017, column: 3, scope: !12557)
!12690 = !DILocation(line: 1018, column: 3, scope: !12557)
!12691 = !DILocation(line: 1019, column: 1, scope: !12557)
!12692 = distinct !DISubprogram(name: "transfer_entries", scope: !756, file: !756, line: 860, type: !870, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12693 = !DILocalVariable(name: "dst", arg: 1, scope: !12692, file: !756, line: 860, type: !850)
!12694 = !DILocation(line: 860, column: 31, scope: !12692)
!12695 = !DILocalVariable(name: "src", arg: 2, scope: !12692, file: !756, line: 860, type: !850)
!12696 = !DILocation(line: 860, column: 48, scope: !12692)
!12697 = !DILocalVariable(name: "safe", arg: 3, scope: !12692, file: !756, line: 860, type: !120)
!12698 = !DILocation(line: 860, column: 58, scope: !12692)
!12699 = !DILocalVariable(name: "bucket", scope: !12692, file: !756, line: 862, type: !759)
!12700 = !DILocation(line: 862, column: 22, scope: !12692)
!12701 = !DILocalVariable(name: "cursor", scope: !12692, file: !756, line: 863, type: !759)
!12702 = !DILocation(line: 863, column: 22, scope: !12692)
!12703 = !DILocalVariable(name: "next", scope: !12692, file: !756, line: 864, type: !759)
!12704 = !DILocation(line: 864, column: 22, scope: !12692)
!12705 = !DILocation(line: 865, column: 17, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12692, file: !756, line: 865, column: 3)
!12707 = !DILocation(line: 865, column: 22, scope: !12706)
!12708 = !DILocation(line: 865, column: 15, scope: !12706)
!12709 = !DILocation(line: 865, column: 8, scope: !12706)
!12710 = !DILocation(line: 865, column: 30, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12706, file: !756, line: 865, column: 3)
!12712 = !DILocation(line: 865, column: 39, scope: !12711)
!12713 = !DILocation(line: 865, column: 44, scope: !12711)
!12714 = !DILocation(line: 865, column: 37, scope: !12711)
!12715 = !DILocation(line: 865, column: 3, scope: !12706)
!12716 = !DILocation(line: 866, column: 9, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12711, file: !756, line: 866, column: 9)
!12718 = !DILocation(line: 866, column: 17, scope: !12717)
!12719 = !DILocation(line: 866, column: 9, scope: !12711)
!12720 = !DILocalVariable(name: "data", scope: !12721, file: !756, line: 868, type: !53)
!12721 = distinct !DILexicalBlock(scope: !12717, file: !756, line: 867, column: 7)
!12722 = !DILocation(line: 868, column: 15, scope: !12721)
!12723 = !DILocalVariable(name: "new_bucket", scope: !12721, file: !756, line: 869, type: !759)
!12724 = !DILocation(line: 869, column: 28, scope: !12721)
!12725 = !DILocation(line: 877, column: 23, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12721, file: !756, line: 877, column: 9)
!12727 = !DILocation(line: 877, column: 31, scope: !12726)
!12728 = !DILocation(line: 877, column: 21, scope: !12726)
!12729 = !DILocation(line: 877, column: 14, scope: !12726)
!12730 = !DILocation(line: 877, column: 37, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12726, file: !756, line: 877, column: 9)
!12732 = !DILocation(line: 877, column: 9, scope: !12726)
!12733 = !DILocation(line: 879, column: 20, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12731, file: !756, line: 878, column: 11)
!12735 = !DILocation(line: 879, column: 28, scope: !12734)
!12736 = !DILocation(line: 879, column: 18, scope: !12734)
!12737 = !DILocation(line: 880, column: 39, scope: !12734)
!12738 = !DILocation(line: 880, column: 44, scope: !12734)
!12739 = !DILocation(line: 880, column: 26, scope: !12734)
!12740 = !DILocation(line: 880, column: 24, scope: !12734)
!12741 = !DILocation(line: 882, column: 20, scope: !12734)
!12742 = !DILocation(line: 882, column: 28, scope: !12734)
!12743 = !DILocation(line: 882, column: 18, scope: !12734)
!12744 = !DILocation(line: 884, column: 17, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12734, file: !756, line: 884, column: 17)
!12746 = !DILocation(line: 884, column: 29, scope: !12745)
!12747 = !DILocation(line: 884, column: 17, scope: !12734)
!12748 = !DILocation(line: 888, column: 32, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12745, file: !756, line: 885, column: 15)
!12750 = !DILocation(line: 888, column: 44, scope: !12749)
!12751 = !DILocation(line: 888, column: 17, scope: !12749)
!12752 = !DILocation(line: 888, column: 25, scope: !12749)
!12753 = !DILocation(line: 888, column: 30, scope: !12749)
!12754 = !DILocation(line: 889, column: 36, scope: !12749)
!12755 = !DILocation(line: 889, column: 17, scope: !12749)
!12756 = !DILocation(line: 889, column: 29, scope: !12749)
!12757 = !DILocation(line: 889, column: 34, scope: !12749)
!12758 = !DILocation(line: 890, column: 15, scope: !12749)
!12759 = !DILocation(line: 895, column: 36, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12745, file: !756, line: 892, column: 15)
!12761 = !DILocation(line: 895, column: 17, scope: !12760)
!12762 = !DILocation(line: 895, column: 29, scope: !12760)
!12763 = !DILocation(line: 895, column: 34, scope: !12760)
!12764 = !DILocation(line: 896, column: 17, scope: !12760)
!12765 = !DILocation(line: 896, column: 22, scope: !12760)
!12766 = !DILocation(line: 896, column: 36, scope: !12760)
!12767 = !DILocation(line: 897, column: 29, scope: !12760)
!12768 = !DILocation(line: 897, column: 34, scope: !12760)
!12769 = !DILocation(line: 897, column: 17, scope: !12760)
!12770 = !DILocation(line: 899, column: 11, scope: !12734)
!12771 = !DILocation(line: 877, column: 54, scope: !12731)
!12772 = !DILocation(line: 877, column: 52, scope: !12731)
!12773 = !DILocation(line: 877, column: 9, scope: !12731)
!12774 = distinct !{!12774, !12732, !12775}
!12775 = !DILocation(line: 899, column: 11, scope: !12726)
!12776 = !DILocation(line: 903, column: 16, scope: !12721)
!12777 = !DILocation(line: 903, column: 24, scope: !12721)
!12778 = !DILocation(line: 903, column: 14, scope: !12721)
!12779 = !DILocation(line: 904, column: 9, scope: !12721)
!12780 = !DILocation(line: 904, column: 17, scope: !12721)
!12781 = !DILocation(line: 904, column: 22, scope: !12721)
!12782 = !DILocation(line: 905, column: 13, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12721, file: !756, line: 905, column: 13)
!12784 = !DILocation(line: 905, column: 13, scope: !12721)
!12785 = !DILocation(line: 906, column: 11, scope: !12783)
!12786 = !DILocation(line: 907, column: 35, scope: !12721)
!12787 = !DILocation(line: 907, column: 40, scope: !12721)
!12788 = !DILocation(line: 907, column: 22, scope: !12721)
!12789 = !DILocation(line: 907, column: 20, scope: !12721)
!12790 = !DILocation(line: 909, column: 13, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12721, file: !756, line: 909, column: 13)
!12792 = !DILocation(line: 909, column: 25, scope: !12791)
!12793 = !DILocation(line: 909, column: 13, scope: !12721)
!12794 = !DILocalVariable(name: "new_entry", scope: !12795, file: !756, line: 913, type: !759)
!12795 = distinct !DILexicalBlock(scope: !12791, file: !756, line: 910, column: 11)
!12796 = !DILocation(line: 913, column: 32, scope: !12795)
!12797 = !DILocation(line: 913, column: 60, scope: !12795)
!12798 = !DILocation(line: 913, column: 44, scope: !12795)
!12799 = !DILocation(line: 915, column: 17, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12795, file: !756, line: 915, column: 17)
!12801 = !DILocation(line: 915, column: 27, scope: !12800)
!12802 = !DILocation(line: 915, column: 17, scope: !12795)
!12803 = !DILocation(line: 916, column: 15, scope: !12800)
!12804 = !DILocation(line: 918, column: 31, scope: !12795)
!12805 = !DILocation(line: 918, column: 13, scope: !12795)
!12806 = !DILocation(line: 918, column: 24, scope: !12795)
!12807 = !DILocation(line: 918, column: 29, scope: !12795)
!12808 = !DILocation(line: 919, column: 31, scope: !12795)
!12809 = !DILocation(line: 919, column: 43, scope: !12795)
!12810 = !DILocation(line: 919, column: 13, scope: !12795)
!12811 = !DILocation(line: 919, column: 24, scope: !12795)
!12812 = !DILocation(line: 919, column: 29, scope: !12795)
!12813 = !DILocation(line: 920, column: 32, scope: !12795)
!12814 = !DILocation(line: 920, column: 13, scope: !12795)
!12815 = !DILocation(line: 920, column: 25, scope: !12795)
!12816 = !DILocation(line: 920, column: 30, scope: !12795)
!12817 = !DILocation(line: 921, column: 11, scope: !12795)
!12818 = !DILocation(line: 925, column: 32, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12791, file: !756, line: 923, column: 11)
!12820 = !DILocation(line: 925, column: 13, scope: !12819)
!12821 = !DILocation(line: 925, column: 25, scope: !12819)
!12822 = !DILocation(line: 925, column: 30, scope: !12819)
!12823 = !DILocation(line: 926, column: 13, scope: !12819)
!12824 = !DILocation(line: 926, column: 18, scope: !12819)
!12825 = !DILocation(line: 926, column: 32, scope: !12819)
!12826 = !DILocation(line: 928, column: 9, scope: !12721)
!12827 = !DILocation(line: 928, column: 17, scope: !12721)
!12828 = !DILocation(line: 928, column: 22, scope: !12721)
!12829 = !DILocation(line: 929, column: 9, scope: !12721)
!12830 = !DILocation(line: 929, column: 14, scope: !12721)
!12831 = !DILocation(line: 929, column: 28, scope: !12721)
!12832 = !DILocation(line: 930, column: 7, scope: !12721)
!12833 = !DILocation(line: 865, column: 64, scope: !12711)
!12834 = !DILocation(line: 865, column: 3, scope: !12711)
!12835 = distinct !{!12835, !12715, !12836}
!12836 = !DILocation(line: 930, column: 7, scope: !12706)
!12837 = !DILocation(line: 931, column: 3, scope: !12692)
!12838 = !DILocation(line: 932, column: 1, scope: !12692)
!12839 = distinct !DISubprogram(name: "free_entry", scope: !756, file: !756, line: 776, type: !872, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12840 = !DILocalVariable(name: "table", arg: 1, scope: !12839, file: !756, line: 776, type: !850)
!12841 = !DILocation(line: 776, column: 25, scope: !12839)
!12842 = !DILocalVariable(name: "entry", arg: 2, scope: !12839, file: !756, line: 776, type: !759)
!12843 = !DILocation(line: 776, column: 51, scope: !12839)
!12844 = !DILocation(line: 778, column: 3, scope: !12839)
!12845 = !DILocation(line: 778, column: 10, scope: !12839)
!12846 = !DILocation(line: 778, column: 15, scope: !12839)
!12847 = !DILocation(line: 779, column: 17, scope: !12839)
!12848 = !DILocation(line: 779, column: 24, scope: !12839)
!12849 = !DILocation(line: 779, column: 3, scope: !12839)
!12850 = !DILocation(line: 779, column: 10, scope: !12839)
!12851 = !DILocation(line: 779, column: 15, scope: !12839)
!12852 = !DILocation(line: 780, column: 28, scope: !12839)
!12853 = !DILocation(line: 780, column: 3, scope: !12839)
!12854 = !DILocation(line: 780, column: 10, scope: !12839)
!12855 = !DILocation(line: 780, column: 26, scope: !12839)
!12856 = !DILocation(line: 781, column: 1, scope: !12839)
!12857 = distinct !DISubprogram(name: "allocate_entry", scope: !756, file: !756, line: 751, type: !877, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12858 = !DILocalVariable(name: "table", arg: 1, scope: !12857, file: !756, line: 751, type: !850)
!12859 = !DILocation(line: 751, column: 29, scope: !12857)
!12860 = !DILocalVariable(name: "new", scope: !12857, file: !756, line: 753, type: !759)
!12861 = !DILocation(line: 753, column: 22, scope: !12857)
!12862 = !DILocation(line: 755, column: 7, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12857, file: !756, line: 755, column: 7)
!12864 = !DILocation(line: 755, column: 14, scope: !12863)
!12865 = !DILocation(line: 755, column: 7, scope: !12857)
!12866 = !DILocation(line: 757, column: 13, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12863, file: !756, line: 756, column: 5)
!12868 = !DILocation(line: 757, column: 20, scope: !12867)
!12869 = !DILocation(line: 757, column: 11, scope: !12867)
!12870 = !DILocation(line: 758, column: 32, scope: !12867)
!12871 = !DILocation(line: 758, column: 37, scope: !12867)
!12872 = !DILocation(line: 758, column: 7, scope: !12867)
!12873 = !DILocation(line: 758, column: 14, scope: !12867)
!12874 = !DILocation(line: 758, column: 30, scope: !12867)
!12875 = !DILocation(line: 759, column: 5, scope: !12867)
!12876 = !DILocation(line: 765, column: 13, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12863, file: !756, line: 761, column: 5)
!12878 = !DILocation(line: 765, column: 11, scope: !12877)
!12879 = !DILocation(line: 769, column: 10, scope: !12857)
!12880 = !DILocation(line: 769, column: 3, scope: !12857)
!12881 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !756, file: !756, line: 1038, type: !855, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!12882 = !DILocalVariable(name: "table", arg: 1, scope: !12881, file: !756, line: 1038, type: !850)
!12883 = !DILocation(line: 1038, column: 36, scope: !12881)
!12884 = !DILocalVariable(name: "entry", arg: 2, scope: !12881, file: !756, line: 1038, type: !425)
!12885 = !DILocation(line: 1038, column: 55, scope: !12881)
!12886 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !12881, file: !756, line: 1039, type: !857)
!12887 = !DILocation(line: 1039, column: 37, scope: !12881)
!12888 = !DILocalVariable(name: "data", scope: !12881, file: !756, line: 1041, type: !53)
!12889 = !DILocation(line: 1041, column: 9, scope: !12881)
!12890 = !DILocalVariable(name: "bucket", scope: !12881, file: !756, line: 1042, type: !759)
!12891 = !DILocation(line: 1042, column: 22, scope: !12881)
!12892 = !DILocation(line: 1047, column: 9, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12881, file: !756, line: 1047, column: 7)
!12894 = !DILocation(line: 1047, column: 7, scope: !12881)
!12895 = !DILocation(line: 1048, column: 5, scope: !12893)
!12896 = !DILocation(line: 1051, column: 32, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12881, file: !756, line: 1051, column: 7)
!12898 = !DILocation(line: 1051, column: 39, scope: !12897)
!12899 = !DILocation(line: 1051, column: 15, scope: !12897)
!12900 = !DILocation(line: 1051, column: 13, scope: !12897)
!12901 = !DILocation(line: 1051, column: 63, scope: !12897)
!12902 = !DILocation(line: 1051, column: 7, scope: !12881)
!12903 = !DILocation(line: 1053, column: 11, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12905, file: !756, line: 1053, column: 11)
!12905 = distinct !DILexicalBlock(scope: !12897, file: !756, line: 1052, column: 5)
!12906 = !DILocation(line: 1053, column: 11, scope: !12905)
!12907 = !DILocation(line: 1054, column: 24, scope: !12904)
!12908 = !DILocation(line: 1054, column: 10, scope: !12904)
!12909 = !DILocation(line: 1054, column: 22, scope: !12904)
!12910 = !DILocation(line: 1054, column: 9, scope: !12904)
!12911 = !DILocation(line: 1055, column: 7, scope: !12905)
!12912 = !DILocation(line: 1063, column: 7, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12881, file: !756, line: 1063, column: 7)
!12914 = !DILocation(line: 1063, column: 14, scope: !12913)
!12915 = !DILocation(line: 1064, column: 9, scope: !12913)
!12916 = !DILocation(line: 1064, column: 16, scope: !12913)
!12917 = !DILocation(line: 1064, column: 24, scope: !12913)
!12918 = !DILocation(line: 1064, column: 43, scope: !12913)
!12919 = !DILocation(line: 1064, column: 50, scope: !12913)
!12920 = !DILocation(line: 1064, column: 41, scope: !12913)
!12921 = !DILocation(line: 1064, column: 7, scope: !12913)
!12922 = !DILocation(line: 1063, column: 7, scope: !12881)
!12923 = !DILocation(line: 1068, column: 21, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12913, file: !756, line: 1065, column: 5)
!12925 = !DILocation(line: 1068, column: 7, scope: !12924)
!12926 = !DILocation(line: 1069, column: 11, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12924, file: !756, line: 1069, column: 11)
!12928 = !DILocation(line: 1069, column: 18, scope: !12927)
!12929 = !DILocation(line: 1070, column: 13, scope: !12927)
!12930 = !DILocation(line: 1070, column: 20, scope: !12927)
!12931 = !DILocation(line: 1070, column: 28, scope: !12927)
!12932 = !DILocation(line: 1070, column: 47, scope: !12927)
!12933 = !DILocation(line: 1070, column: 54, scope: !12927)
!12934 = !DILocation(line: 1070, column: 45, scope: !12927)
!12935 = !DILocation(line: 1070, column: 11, scope: !12927)
!12936 = !DILocation(line: 1069, column: 11, scope: !12924)
!12937 = !DILocalVariable(name: "tuning", scope: !12938, file: !756, line: 1072, type: !771)
!12938 = distinct !DILexicalBlock(scope: !12927, file: !756, line: 1071, column: 9)
!12939 = !DILocation(line: 1072, column: 30, scope: !12938)
!12940 = !DILocation(line: 1072, column: 39, scope: !12938)
!12941 = !DILocation(line: 1072, column: 46, scope: !12938)
!12942 = !DILocalVariable(name: "candidate", scope: !12938, file: !756, line: 1073, type: !777)
!12943 = !DILocation(line: 1073, column: 17, scope: !12938)
!12944 = !DILocation(line: 1074, column: 14, scope: !12938)
!12945 = !DILocation(line: 1074, column: 22, scope: !12938)
!12946 = !DILocation(line: 1075, column: 17, scope: !12938)
!12947 = !DILocation(line: 1075, column: 24, scope: !12938)
!12948 = !DILocation(line: 1075, column: 36, scope: !12938)
!12949 = !DILocation(line: 1075, column: 44, scope: !12938)
!12950 = !DILocation(line: 1075, column: 34, scope: !12938)
!12951 = !DILocation(line: 1076, column: 17, scope: !12938)
!12952 = !DILocation(line: 1076, column: 24, scope: !12938)
!12953 = !DILocation(line: 1076, column: 36, scope: !12938)
!12954 = !DILocation(line: 1076, column: 44, scope: !12938)
!12955 = !DILocation(line: 1076, column: 34, scope: !12938)
!12956 = !DILocation(line: 1077, column: 19, scope: !12938)
!12957 = !DILocation(line: 1077, column: 27, scope: !12938)
!12958 = !DILocation(line: 1077, column: 17, scope: !12938)
!12959 = !DILocation(line: 1079, column: 27, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12938, file: !756, line: 1079, column: 15)
!12961 = !DILocation(line: 1079, column: 24, scope: !12960)
!12962 = !DILocation(line: 1079, column: 15, scope: !12938)
!12963 = !DILocation(line: 1080, column: 13, scope: !12960)
!12964 = !DILocation(line: 1083, column: 29, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12938, file: !756, line: 1083, column: 15)
!12966 = !DILocation(line: 1083, column: 36, scope: !12965)
!12967 = !DILocation(line: 1083, column: 16, scope: !12965)
!12968 = !DILocation(line: 1083, column: 15, scope: !12938)
!12969 = !DILocation(line: 1084, column: 13, scope: !12965)
!12970 = !DILocation(line: 1087, column: 32, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12938, file: !756, line: 1087, column: 15)
!12972 = !DILocation(line: 1087, column: 39, scope: !12971)
!12973 = !DILocation(line: 1087, column: 15, scope: !12971)
!12974 = !DILocation(line: 1087, column: 62, scope: !12971)
!12975 = !DILocation(line: 1087, column: 15, scope: !12938)
!12976 = !DILocation(line: 1088, column: 13, scope: !12971)
!12977 = !DILocation(line: 1089, column: 9, scope: !12938)
!12978 = !DILocation(line: 1090, column: 5, scope: !12924)
!12979 = !DILocation(line: 1094, column: 7, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12881, file: !756, line: 1094, column: 7)
!12981 = !DILocation(line: 1094, column: 15, scope: !12980)
!12982 = !DILocation(line: 1094, column: 7, scope: !12881)
!12983 = !DILocalVariable(name: "new_entry", scope: !12984, file: !756, line: 1096, type: !759)
!12984 = distinct !DILexicalBlock(scope: !12980, file: !756, line: 1095, column: 5)
!12985 = !DILocation(line: 1096, column: 26, scope: !12984)
!12986 = !DILocation(line: 1096, column: 54, scope: !12984)
!12987 = !DILocation(line: 1096, column: 38, scope: !12984)
!12988 = !DILocation(line: 1098, column: 11, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12984, file: !756, line: 1098, column: 11)
!12990 = !DILocation(line: 1098, column: 21, scope: !12989)
!12991 = !DILocation(line: 1098, column: 11, scope: !12984)
!12992 = !DILocation(line: 1099, column: 9, scope: !12989)
!12993 = !DILocation(line: 1103, column: 34, scope: !12984)
!12994 = !DILocation(line: 1103, column: 7, scope: !12984)
!12995 = !DILocation(line: 1103, column: 18, scope: !12984)
!12996 = !DILocation(line: 1103, column: 23, scope: !12984)
!12997 = !DILocation(line: 1104, column: 25, scope: !12984)
!12998 = !DILocation(line: 1104, column: 33, scope: !12984)
!12999 = !DILocation(line: 1104, column: 7, scope: !12984)
!13000 = !DILocation(line: 1104, column: 18, scope: !12984)
!13001 = !DILocation(line: 1104, column: 23, scope: !12984)
!13002 = !DILocation(line: 1105, column: 22, scope: !12984)
!13003 = !DILocation(line: 1105, column: 7, scope: !12984)
!13004 = !DILocation(line: 1105, column: 15, scope: !12984)
!13005 = !DILocation(line: 1105, column: 20, scope: !12984)
!13006 = !DILocation(line: 1106, column: 7, scope: !12984)
!13007 = !DILocation(line: 1106, column: 14, scope: !12984)
!13008 = !DILocation(line: 1106, column: 23, scope: !12984)
!13009 = !DILocation(line: 1107, column: 7, scope: !12984)
!13010 = !DILocation(line: 1112, column: 27, scope: !12881)
!13011 = !DILocation(line: 1112, column: 3, scope: !12881)
!13012 = !DILocation(line: 1112, column: 11, scope: !12881)
!13013 = !DILocation(line: 1112, column: 16, scope: !12881)
!13014 = !DILocation(line: 1113, column: 3, scope: !12881)
!13015 = !DILocation(line: 1113, column: 10, scope: !12881)
!13016 = !DILocation(line: 1113, column: 19, scope: !12881)
!13017 = !DILocation(line: 1114, column: 3, scope: !12881)
!13018 = !DILocation(line: 1114, column: 10, scope: !12881)
!13019 = !DILocation(line: 1114, column: 24, scope: !12881)
!13020 = !DILocation(line: 1116, column: 3, scope: !12881)
!13021 = !DILocation(line: 1117, column: 1, scope: !12881)
!13022 = distinct !DISubprogram(name: "hash_find_entry", scope: !756, file: !756, line: 790, type: !874, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !747, retainedNodes: !143)
!13023 = !DILocalVariable(name: "table", arg: 1, scope: !13022, file: !756, line: 790, type: !850)
!13024 = !DILocation(line: 790, column: 30, scope: !13022)
!13025 = !DILocalVariable(name: "entry", arg: 2, scope: !13022, file: !756, line: 790, type: !425)
!13026 = !DILocation(line: 790, column: 49, scope: !13022)
!13027 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !13022, file: !756, line: 791, type: !876)
!13028 = !DILocation(line: 791, column: 38, scope: !13022)
!13029 = !DILocalVariable(name: "delete", arg: 4, scope: !13022, file: !756, line: 791, type: !120)
!13030 = !DILocation(line: 791, column: 56, scope: !13022)
!13031 = !DILocalVariable(name: "bucket", scope: !13022, file: !756, line: 793, type: !759)
!13032 = !DILocation(line: 793, column: 22, scope: !13022)
!13033 = !DILocation(line: 793, column: 44, scope: !13022)
!13034 = !DILocation(line: 793, column: 51, scope: !13022)
!13035 = !DILocation(line: 793, column: 31, scope: !13022)
!13036 = !DILocalVariable(name: "cursor", scope: !13022, file: !756, line: 794, type: !759)
!13037 = !DILocation(line: 794, column: 22, scope: !13022)
!13038 = !DILocation(line: 796, column: 18, scope: !13022)
!13039 = !DILocation(line: 796, column: 4, scope: !13022)
!13040 = !DILocation(line: 796, column: 16, scope: !13022)
!13041 = !DILocation(line: 799, column: 7, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13022, file: !756, line: 799, column: 7)
!13043 = !DILocation(line: 799, column: 15, scope: !13042)
!13044 = !DILocation(line: 799, column: 20, scope: !13042)
!13045 = !DILocation(line: 799, column: 7, scope: !13022)
!13046 = !DILocation(line: 800, column: 5, scope: !13042)
!13047 = !DILocation(line: 803, column: 7, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13022, file: !756, line: 803, column: 7)
!13049 = !DILocation(line: 803, column: 16, scope: !13048)
!13050 = !DILocation(line: 803, column: 24, scope: !13048)
!13051 = !DILocation(line: 803, column: 13, scope: !13048)
!13052 = !DILocation(line: 803, column: 29, scope: !13048)
!13053 = !DILocation(line: 803, column: 32, scope: !13048)
!13054 = !DILocation(line: 803, column: 39, scope: !13048)
!13055 = !DILocation(line: 803, column: 51, scope: !13048)
!13056 = !DILocation(line: 803, column: 58, scope: !13048)
!13057 = !DILocation(line: 803, column: 66, scope: !13048)
!13058 = !DILocation(line: 803, column: 7, scope: !13022)
!13059 = !DILocalVariable(name: "data", scope: !13060, file: !756, line: 805, type: !53)
!13060 = distinct !DILexicalBlock(scope: !13048, file: !756, line: 804, column: 5)
!13061 = !DILocation(line: 805, column: 13, scope: !13060)
!13062 = !DILocation(line: 805, column: 20, scope: !13060)
!13063 = !DILocation(line: 805, column: 28, scope: !13060)
!13064 = !DILocation(line: 807, column: 11, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13060, file: !756, line: 807, column: 11)
!13066 = !DILocation(line: 807, column: 11, scope: !13060)
!13067 = !DILocation(line: 809, column: 15, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13069, file: !756, line: 809, column: 15)
!13069 = distinct !DILexicalBlock(scope: !13065, file: !756, line: 808, column: 9)
!13070 = !DILocation(line: 809, column: 23, scope: !13068)
!13071 = !DILocation(line: 809, column: 15, scope: !13069)
!13072 = !DILocalVariable(name: "next", scope: !13073, file: !756, line: 811, type: !759)
!13073 = distinct !DILexicalBlock(scope: !13068, file: !756, line: 810, column: 13)
!13074 = !DILocation(line: 811, column: 34, scope: !13073)
!13075 = !DILocation(line: 811, column: 41, scope: !13073)
!13076 = !DILocation(line: 811, column: 49, scope: !13073)
!13077 = !DILocation(line: 815, column: 16, scope: !13073)
!13078 = !DILocation(line: 815, column: 26, scope: !13073)
!13079 = !DILocation(line: 815, column: 25, scope: !13073)
!13080 = !{i64 0, i64 8, !2995, i64 8, i64 8, !2995}
!13081 = !DILocation(line: 816, column: 27, scope: !13073)
!13082 = !DILocation(line: 816, column: 34, scope: !13073)
!13083 = !DILocation(line: 816, column: 15, scope: !13073)
!13084 = !DILocation(line: 817, column: 13, scope: !13073)
!13085 = !DILocation(line: 820, column: 15, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13068, file: !756, line: 819, column: 13)
!13087 = !DILocation(line: 820, column: 23, scope: !13086)
!13088 = !DILocation(line: 820, column: 28, scope: !13086)
!13089 = !DILocation(line: 822, column: 9, scope: !13069)
!13090 = !DILocation(line: 824, column: 14, scope: !13060)
!13091 = !DILocation(line: 824, column: 7, scope: !13060)
!13092 = !DILocation(line: 828, column: 17, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !13022, file: !756, line: 828, column: 3)
!13094 = !DILocation(line: 828, column: 15, scope: !13093)
!13095 = !DILocation(line: 828, column: 8, scope: !13093)
!13096 = !DILocation(line: 828, column: 25, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13093, file: !756, line: 828, column: 3)
!13098 = !DILocation(line: 828, column: 33, scope: !13097)
!13099 = !DILocation(line: 828, column: 3, scope: !13093)
!13100 = !DILocation(line: 830, column: 11, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13102, file: !756, line: 830, column: 11)
!13102 = distinct !DILexicalBlock(scope: !13097, file: !756, line: 829, column: 5)
!13103 = !DILocation(line: 830, column: 20, scope: !13101)
!13104 = !DILocation(line: 830, column: 28, scope: !13101)
!13105 = !DILocation(line: 830, column: 34, scope: !13101)
!13106 = !DILocation(line: 830, column: 17, scope: !13101)
!13107 = !DILocation(line: 831, column: 11, scope: !13101)
!13108 = !DILocation(line: 831, column: 14, scope: !13101)
!13109 = !DILocation(line: 831, column: 21, scope: !13101)
!13110 = !DILocation(line: 831, column: 33, scope: !13101)
!13111 = !DILocation(line: 831, column: 40, scope: !13101)
!13112 = !DILocation(line: 831, column: 48, scope: !13101)
!13113 = !DILocation(line: 831, column: 54, scope: !13101)
!13114 = !DILocation(line: 830, column: 11, scope: !13102)
!13115 = !DILocalVariable(name: "data", scope: !13116, file: !756, line: 833, type: !53)
!13116 = distinct !DILexicalBlock(scope: !13101, file: !756, line: 832, column: 9)
!13117 = !DILocation(line: 833, column: 17, scope: !13116)
!13118 = !DILocation(line: 833, column: 24, scope: !13116)
!13119 = !DILocation(line: 833, column: 32, scope: !13116)
!13120 = !DILocation(line: 833, column: 38, scope: !13116)
!13121 = !DILocation(line: 835, column: 15, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13116, file: !756, line: 835, column: 15)
!13123 = !DILocation(line: 835, column: 15, scope: !13116)
!13124 = !DILocalVariable(name: "next", scope: !13125, file: !756, line: 837, type: !759)
!13125 = distinct !DILexicalBlock(scope: !13122, file: !756, line: 836, column: 13)
!13126 = !DILocation(line: 837, column: 34, scope: !13125)
!13127 = !DILocation(line: 837, column: 41, scope: !13125)
!13128 = !DILocation(line: 837, column: 49, scope: !13125)
!13129 = !DILocation(line: 841, column: 30, scope: !13125)
!13130 = !DILocation(line: 841, column: 36, scope: !13125)
!13131 = !DILocation(line: 841, column: 15, scope: !13125)
!13132 = !DILocation(line: 841, column: 23, scope: !13125)
!13133 = !DILocation(line: 841, column: 28, scope: !13125)
!13134 = !DILocation(line: 842, column: 27, scope: !13125)
!13135 = !DILocation(line: 842, column: 34, scope: !13125)
!13136 = !DILocation(line: 842, column: 15, scope: !13125)
!13137 = !DILocation(line: 843, column: 13, scope: !13125)
!13138 = !DILocation(line: 845, column: 18, scope: !13116)
!13139 = !DILocation(line: 845, column: 11, scope: !13116)
!13140 = !DILocation(line: 847, column: 5, scope: !13102)
!13141 = !DILocation(line: 828, column: 48, scope: !13097)
!13142 = !DILocation(line: 828, column: 56, scope: !13097)
!13143 = !DILocation(line: 828, column: 46, scope: !13097)
!13144 = !DILocation(line: 828, column: 3, scope: !13097)
!13145 = distinct !{!13145, !13099, !13146}
!13146 = !DILocation(line: 847, column: 5, scope: !13093)
!13147 = !DILocation(line: 850, column: 3, scope: !13022)
!13148 = !DILocation(line: 851, column: 1, scope: !13022)
!13149 = distinct !DISubprogram(name: "hash_insert", scope: !756, file: !756, line: 1126, type: !858, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!13150 = !DILocalVariable(name: "table", arg: 1, scope: !13149, file: !756, line: 1126, type: !850)
!13151 = !DILocation(line: 1126, column: 26, scope: !13149)
!13152 = !DILocalVariable(name: "entry", arg: 2, scope: !13149, file: !756, line: 1126, type: !425)
!13153 = !DILocation(line: 1126, column: 45, scope: !13149)
!13154 = !DILocalVariable(name: "matched_ent", scope: !13149, file: !756, line: 1128, type: !425)
!13155 = !DILocation(line: 1128, column: 15, scope: !13149)
!13156 = !DILocalVariable(name: "err", scope: !13149, file: !756, line: 1129, type: !7)
!13157 = !DILocation(line: 1129, column: 7, scope: !13149)
!13158 = !DILocation(line: 1129, column: 36, scope: !13149)
!13159 = !DILocation(line: 1129, column: 43, scope: !13149)
!13160 = !DILocation(line: 1129, column: 13, scope: !13149)
!13161 = !DILocation(line: 1130, column: 11, scope: !13149)
!13162 = !DILocation(line: 1130, column: 15, scope: !13149)
!13163 = !DILocation(line: 1132, column: 23, scope: !13149)
!13164 = !DILocation(line: 1132, column: 27, scope: !13149)
!13165 = !DILocation(line: 1132, column: 34, scope: !13149)
!13166 = !DILocation(line: 1132, column: 48, scope: !13149)
!13167 = !DILocation(line: 1130, column: 3, scope: !13149)
!13168 = distinct !DISubprogram(name: "hash_delete", scope: !756, file: !756, line: 1140, type: !858, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !747, retainedNodes: !143)
!13169 = !DILocalVariable(name: "table", arg: 1, scope: !13168, file: !756, line: 1140, type: !850)
!13170 = !DILocation(line: 1140, column: 26, scope: !13168)
!13171 = !DILocalVariable(name: "entry", arg: 2, scope: !13168, file: !756, line: 1140, type: !425)
!13172 = !DILocation(line: 1140, column: 45, scope: !13168)
!13173 = !DILocalVariable(name: "data", scope: !13168, file: !756, line: 1142, type: !53)
!13174 = !DILocation(line: 1142, column: 9, scope: !13168)
!13175 = !DILocalVariable(name: "bucket", scope: !13168, file: !756, line: 1143, type: !759)
!13176 = !DILocation(line: 1143, column: 22, scope: !13168)
!13177 = !DILocation(line: 1145, column: 27, scope: !13168)
!13178 = !DILocation(line: 1145, column: 34, scope: !13168)
!13179 = !DILocation(line: 1145, column: 10, scope: !13168)
!13180 = !DILocation(line: 1145, column: 8, scope: !13168)
!13181 = !DILocation(line: 1146, column: 8, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13168, file: !756, line: 1146, column: 7)
!13183 = !DILocation(line: 1146, column: 7, scope: !13168)
!13184 = !DILocation(line: 1147, column: 5, scope: !13182)
!13185 = !DILocation(line: 1149, column: 3, scope: !13168)
!13186 = !DILocation(line: 1149, column: 10, scope: !13168)
!13187 = !DILocation(line: 1149, column: 19, scope: !13168)
!13188 = !DILocation(line: 1150, column: 8, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13168, file: !756, line: 1150, column: 7)
!13190 = !DILocation(line: 1150, column: 16, scope: !13189)
!13191 = !DILocation(line: 1150, column: 7, scope: !13168)
!13192 = !DILocation(line: 1152, column: 7, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13189, file: !756, line: 1151, column: 5)
!13194 = !DILocation(line: 1152, column: 14, scope: !13193)
!13195 = !DILocation(line: 1152, column: 28, scope: !13193)
!13196 = !DILocation(line: 1157, column: 11, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !13193, file: !756, line: 1157, column: 11)
!13198 = !DILocation(line: 1157, column: 18, scope: !13197)
!13199 = !DILocation(line: 1158, column: 13, scope: !13197)
!13200 = !DILocation(line: 1158, column: 20, scope: !13197)
!13201 = !DILocation(line: 1158, column: 28, scope: !13197)
!13202 = !DILocation(line: 1158, column: 47, scope: !13197)
!13203 = !DILocation(line: 1158, column: 54, scope: !13197)
!13204 = !DILocation(line: 1158, column: 45, scope: !13197)
!13205 = !DILocation(line: 1158, column: 11, scope: !13197)
!13206 = !DILocation(line: 1157, column: 11, scope: !13193)
!13207 = !DILocation(line: 1162, column: 25, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13197, file: !756, line: 1159, column: 9)
!13209 = !DILocation(line: 1162, column: 11, scope: !13208)
!13210 = !DILocation(line: 1163, column: 15, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13208, file: !756, line: 1163, column: 15)
!13212 = !DILocation(line: 1163, column: 22, scope: !13211)
!13213 = !DILocation(line: 1164, column: 17, scope: !13211)
!13214 = !DILocation(line: 1164, column: 24, scope: !13211)
!13215 = !DILocation(line: 1164, column: 32, scope: !13211)
!13216 = !DILocation(line: 1164, column: 51, scope: !13211)
!13217 = !DILocation(line: 1164, column: 58, scope: !13211)
!13218 = !DILocation(line: 1164, column: 49, scope: !13211)
!13219 = !DILocation(line: 1164, column: 15, scope: !13211)
!13220 = !DILocation(line: 1163, column: 15, scope: !13208)
!13221 = !DILocalVariable(name: "tuning", scope: !13222, file: !756, line: 1166, type: !771)
!13222 = distinct !DILexicalBlock(scope: !13211, file: !756, line: 1165, column: 13)
!13223 = !DILocation(line: 1166, column: 34, scope: !13222)
!13224 = !DILocation(line: 1166, column: 43, scope: !13222)
!13225 = !DILocation(line: 1166, column: 50, scope: !13222)
!13226 = !DILocalVariable(name: "candidate", scope: !13222, file: !756, line: 1167, type: !55)
!13227 = !DILocation(line: 1167, column: 22, scope: !13222)
!13228 = !DILocation(line: 1168, column: 18, scope: !13222)
!13229 = !DILocation(line: 1168, column: 26, scope: !13222)
!13230 = !DILocation(line: 1169, column: 20, scope: !13222)
!13231 = !DILocation(line: 1169, column: 27, scope: !13222)
!13232 = !DILocation(line: 1169, column: 39, scope: !13222)
!13233 = !DILocation(line: 1169, column: 47, scope: !13222)
!13234 = !DILocation(line: 1169, column: 37, scope: !13222)
!13235 = !DILocation(line: 1170, column: 21, scope: !13222)
!13236 = !DILocation(line: 1170, column: 28, scope: !13222)
!13237 = !DILocation(line: 1170, column: 40, scope: !13222)
!13238 = !DILocation(line: 1170, column: 48, scope: !13222)
!13239 = !DILocation(line: 1170, column: 38, scope: !13222)
!13240 = !DILocation(line: 1171, column: 23, scope: !13222)
!13241 = !DILocation(line: 1171, column: 31, scope: !13222)
!13242 = !DILocation(line: 1171, column: 21, scope: !13222)
!13243 = !DILocation(line: 1168, column: 17, scope: !13222)
!13244 = !DILocation(line: 1173, column: 33, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13222, file: !756, line: 1173, column: 19)
!13246 = !DILocation(line: 1173, column: 40, scope: !13245)
!13247 = !DILocation(line: 1173, column: 20, scope: !13245)
!13248 = !DILocation(line: 1173, column: 19, scope: !13222)
!13249 = !DILocalVariable(name: "cursor", scope: !13250, file: !756, line: 1181, type: !759)
!13250 = distinct !DILexicalBlock(scope: !13245, file: !756, line: 1174, column: 17)
!13251 = !DILocation(line: 1181, column: 38, scope: !13250)
!13252 = !DILocation(line: 1181, column: 47, scope: !13250)
!13253 = !DILocation(line: 1181, column: 54, scope: !13250)
!13254 = !DILocalVariable(name: "next", scope: !13250, file: !756, line: 1182, type: !759)
!13255 = !DILocation(line: 1182, column: 38, scope: !13250)
!13256 = !DILocation(line: 1183, column: 19, scope: !13250)
!13257 = !DILocation(line: 1183, column: 26, scope: !13250)
!13258 = !DILocation(line: 1185, column: 30, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13250, file: !756, line: 1184, column: 21)
!13260 = !DILocation(line: 1185, column: 38, scope: !13259)
!13261 = !DILocation(line: 1185, column: 28, scope: !13259)
!13262 = !DILocation(line: 1186, column: 29, scope: !13259)
!13263 = !DILocation(line: 1186, column: 23, scope: !13259)
!13264 = !DILocation(line: 1187, column: 32, scope: !13259)
!13265 = !DILocation(line: 1187, column: 30, scope: !13259)
!13266 = distinct !{!13266, !13256, !13267}
!13267 = !DILocation(line: 1188, column: 21, scope: !13250)
!13268 = !DILocation(line: 1189, column: 19, scope: !13250)
!13269 = !DILocation(line: 1189, column: 26, scope: !13250)
!13270 = !DILocation(line: 1189, column: 42, scope: !13250)
!13271 = !DILocation(line: 1191, column: 17, scope: !13250)
!13272 = !DILocation(line: 1192, column: 13, scope: !13222)
!13273 = !DILocation(line: 1193, column: 9, scope: !13208)
!13274 = !DILocation(line: 1194, column: 5, scope: !13193)
!13275 = !DILocation(line: 1196, column: 10, scope: !13168)
!13276 = !DILocation(line: 1196, column: 3, scope: !13168)
!13277 = !DILocation(line: 1197, column: 1, scope: !13168)
!13278 = distinct !DISubprogram(name: "triple_hash", scope: !13279, file: !13279, line: 34, type: !547, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1796, retainedNodes: !143)
!13279 = !DIFile(filename: "lib/hash-triple.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13280 = !DILocalVariable(name: "x", arg: 1, scope: !13278, file: !13279, line: 34, type: !425)
!13281 = !DILocation(line: 34, column: 26, scope: !13278)
!13282 = !DILocalVariable(name: "table_size", arg: 2, scope: !13278, file: !13279, line: 34, type: !55)
!13283 = !DILocation(line: 34, column: 36, scope: !13278)
!13284 = !DILocalVariable(name: "p", scope: !13278, file: !13279, line: 36, type: !1799)
!13285 = !DILocation(line: 36, column: 26, scope: !13278)
!13286 = !DILocation(line: 36, column: 30, scope: !13278)
!13287 = !DILocalVariable(name: "tmp", scope: !13278, file: !13279, line: 37, type: !55)
!13288 = !DILocation(line: 37, column: 10, scope: !13278)
!13289 = !DILocation(line: 37, column: 26, scope: !13278)
!13290 = !DILocation(line: 37, column: 29, scope: !13278)
!13291 = !DILocation(line: 37, column: 35, scope: !13278)
!13292 = !DILocation(line: 37, column: 16, scope: !13278)
!13293 = !DILocation(line: 40, column: 11, scope: !13278)
!13294 = !DILocation(line: 40, column: 17, scope: !13278)
!13295 = !DILocation(line: 40, column: 20, scope: !13278)
!13296 = !DILocation(line: 40, column: 15, scope: !13278)
!13297 = !DILocation(line: 40, column: 30, scope: !13278)
!13298 = !DILocation(line: 40, column: 28, scope: !13278)
!13299 = !DILocation(line: 40, column: 3, scope: !13278)
!13300 = distinct !DISubprogram(name: "triple_hash_no_name", scope: !13279, file: !13279, line: 45, type: !547, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1796, retainedNodes: !143)
!13301 = !DILocalVariable(name: "x", arg: 1, scope: !13300, file: !13279, line: 45, type: !425)
!13302 = !DILocation(line: 45, column: 34, scope: !13300)
!13303 = !DILocalVariable(name: "table_size", arg: 2, scope: !13300, file: !13279, line: 45, type: !55)
!13304 = !DILocation(line: 45, column: 44, scope: !13300)
!13305 = !DILocalVariable(name: "p", scope: !13300, file: !13279, line: 47, type: !1799)
!13306 = !DILocation(line: 47, column: 26, scope: !13300)
!13307 = !DILocation(line: 47, column: 30, scope: !13300)
!13308 = !DILocation(line: 50, column: 10, scope: !13300)
!13309 = !DILocation(line: 50, column: 13, scope: !13300)
!13310 = !DILocation(line: 50, column: 22, scope: !13300)
!13311 = !DILocation(line: 50, column: 20, scope: !13300)
!13312 = !DILocation(line: 50, column: 3, scope: !13300)
!13313 = distinct !DISubprogram(name: "triple_compare", scope: !13279, file: !13279, line: 55, type: !549, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1796, retainedNodes: !143)
!13314 = !DILocalVariable(name: "x", arg: 1, scope: !13313, file: !13279, line: 55, type: !425)
!13315 = !DILocation(line: 55, column: 29, scope: !13313)
!13316 = !DILocalVariable(name: "y", arg: 2, scope: !13313, file: !13279, line: 55, type: !425)
!13317 = !DILocation(line: 55, column: 44, scope: !13313)
!13318 = !DILocalVariable(name: "a", scope: !13313, file: !13279, line: 57, type: !1799)
!13319 = !DILocation(line: 57, column: 26, scope: !13313)
!13320 = !DILocation(line: 57, column: 30, scope: !13313)
!13321 = !DILocalVariable(name: "b", scope: !13313, file: !13279, line: 58, type: !1799)
!13322 = !DILocation(line: 58, column: 26, scope: !13313)
!13323 = !DILocation(line: 58, column: 30, scope: !13313)
!13324 = !DILocation(line: 59, column: 11, scope: !13313)
!13325 = !DILocation(line: 59, column: 31, scope: !13313)
!13326 = !DILocation(line: 59, column: 45, scope: !13313)
!13327 = !DILocation(line: 59, column: 48, scope: !13313)
!13328 = !DILocation(line: 59, column: 54, scope: !13313)
!13329 = !DILocation(line: 59, column: 57, scope: !13313)
!13330 = !DILocation(line: 59, column: 34, scope: !13313)
!13331 = !DILocation(line: 0, scope: !13313)
!13332 = !DILocation(line: 59, column: 10, scope: !13313)
!13333 = !DILocation(line: 59, column: 3, scope: !13313)
!13334 = distinct !DISubprogram(name: "triple_compare_ino_str", scope: !13279, file: !13279, line: 63, type: !549, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1796, retainedNodes: !143)
!13335 = !DILocalVariable(name: "x", arg: 1, scope: !13334, file: !13279, line: 63, type: !425)
!13336 = !DILocation(line: 63, column: 37, scope: !13334)
!13337 = !DILocalVariable(name: "y", arg: 2, scope: !13334, file: !13279, line: 63, type: !425)
!13338 = !DILocation(line: 63, column: 52, scope: !13334)
!13339 = !DILocalVariable(name: "a", scope: !13334, file: !13279, line: 65, type: !1799)
!13340 = !DILocation(line: 65, column: 26, scope: !13334)
!13341 = !DILocation(line: 65, column: 30, scope: !13334)
!13342 = !DILocalVariable(name: "b", scope: !13334, file: !13279, line: 66, type: !1799)
!13343 = !DILocation(line: 66, column: 26, scope: !13334)
!13344 = !DILocation(line: 66, column: 30, scope: !13334)
!13345 = !DILocation(line: 67, column: 11, scope: !13334)
!13346 = !DILocation(line: 67, column: 31, scope: !13334)
!13347 = !DILocation(line: 67, column: 34, scope: !13334)
!13348 = !DILocation(line: 0, scope: !13334)
!13349 = !DILocation(line: 67, column: 10, scope: !13334)
!13350 = !DILocation(line: 67, column: 3, scope: !13334)
!13351 = distinct !DISubprogram(name: "triple_free", scope: !13279, file: !13279, line: 72, type: !545, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1796, retainedNodes: !143)
!13352 = !DILocalVariable(name: "x", arg: 1, scope: !13351, file: !13279, line: 72, type: !53)
!13353 = !DILocation(line: 72, column: 20, scope: !13351)
!13354 = !DILocalVariable(name: "a", scope: !13351, file: !13279, line: 74, type: !1806)
!13355 = !DILocation(line: 74, column: 20, scope: !13351)
!13356 = !DILocation(line: 74, column: 24, scope: !13351)
!13357 = !DILocation(line: 75, column: 9, scope: !13351)
!13358 = !DILocation(line: 75, column: 12, scope: !13351)
!13359 = !DILocation(line: 75, column: 3, scope: !13351)
!13360 = !DILocation(line: 76, column: 9, scope: !13351)
!13361 = !DILocation(line: 76, column: 3, scope: !13351)
!13362 = !DILocation(line: 77, column: 1, scope: !13351)
!13363 = distinct !DISubprogram(name: "opendirat", scope: !13364, file: !13364, line: 36, type: !1810, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1807, retainedNodes: !143)
!13364 = !DIFile(filename: "lib/opendirat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13365 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !13363, file: !13364, line: 36, type: !7)
!13366 = !DILocation(line: 36, column: 16, scope: !13363)
!13367 = !DILocalVariable(name: "dir", arg: 2, scope: !13363, file: !13364, line: 36, type: !115)
!13368 = !DILocation(line: 36, column: 36, scope: !13363)
!13369 = !DILocalVariable(name: "extra_flags", arg: 3, scope: !13363, file: !13364, line: 36, type: !7)
!13370 = !DILocation(line: 36, column: 45, scope: !13363)
!13371 = !DILocalVariable(name: "pnew_fd", arg: 4, scope: !13363, file: !13364, line: 36, type: !129)
!13372 = !DILocation(line: 36, column: 63, scope: !13363)
!13373 = !DILocalVariable(name: "open_flags", scope: !13363, file: !13364, line: 38, type: !7)
!13374 = !DILocation(line: 38, column: 7, scope: !13363)
!13375 = !DILocation(line: 39, column: 36, scope: !13363)
!13376 = !DILocation(line: 39, column: 34, scope: !13363)
!13377 = !DILocalVariable(name: "new_fd", scope: !13363, file: !13364, line: 40, type: !7)
!13378 = !DILocation(line: 40, column: 7, scope: !13363)
!13379 = !DILocation(line: 40, column: 24, scope: !13363)
!13380 = !DILocation(line: 40, column: 32, scope: !13363)
!13381 = !DILocation(line: 40, column: 37, scope: !13363)
!13382 = !DILocation(line: 40, column: 16, scope: !13363)
!13383 = !DILocation(line: 42, column: 7, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13363, file: !13364, line: 42, column: 7)
!13385 = !DILocation(line: 42, column: 14, scope: !13384)
!13386 = !DILocation(line: 42, column: 7, scope: !13363)
!13387 = !DILocation(line: 43, column: 5, scope: !13384)
!13388 = !DILocalVariable(name: "dirp", scope: !13363, file: !13364, line: 44, type: !607)
!13389 = !DILocation(line: 44, column: 8, scope: !13363)
!13390 = !DILocation(line: 44, column: 26, scope: !13363)
!13391 = !DILocation(line: 44, column: 15, scope: !13363)
!13392 = !DILocation(line: 45, column: 7, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13363, file: !13364, line: 45, column: 7)
!13394 = !DILocation(line: 45, column: 7, scope: !13363)
!13395 = !DILocation(line: 46, column: 16, scope: !13393)
!13396 = !DILocation(line: 46, column: 6, scope: !13393)
!13397 = !DILocation(line: 46, column: 14, scope: !13393)
!13398 = !DILocation(line: 46, column: 5, scope: !13393)
!13399 = !DILocalVariable(name: "fdopendir_errno", scope: !13400, file: !13364, line: 49, type: !7)
!13400 = distinct !DILexicalBlock(scope: !13393, file: !13364, line: 48, column: 5)
!13401 = !DILocation(line: 49, column: 11, scope: !13400)
!13402 = !DILocation(line: 49, column: 29, scope: !13400)
!13403 = !DILocation(line: 50, column: 14, scope: !13400)
!13404 = !DILocation(line: 50, column: 7, scope: !13400)
!13405 = !DILocation(line: 51, column: 15, scope: !13400)
!13406 = !DILocation(line: 51, column: 7, scope: !13400)
!13407 = !DILocation(line: 51, column: 13, scope: !13400)
!13408 = !DILocation(line: 53, column: 10, scope: !13363)
!13409 = !DILocation(line: 53, column: 3, scope: !13363)
!13410 = !DILocation(line: 54, column: 1, scope: !13363)
!13411 = distinct !DISubprogram(name: "priv_set_remove_linkdir", scope: !13412, file: !13412, line: 51, type: !1815, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1812, retainedNodes: !143)
!13412 = !DIFile(filename: "./lib/priv-set.h", directory: "/home/mbarbar/software/coreutils-8.31")
!13413 = !DILocation(line: 53, column: 3, scope: !13411)
!13414 = distinct !DISubprogram(name: "priv_set_restore_linkdir", scope: !13412, file: !13412, line: 57, type: !1815, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1812, retainedNodes: !143)
!13415 = !DILocation(line: 59, column: 3, scope: !13414)
!13416 = distinct !DISubprogram(name: "set_program_name", scope: !920, file: !920, line: 39, type: !136, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !882, retainedNodes: !143)
!13417 = !DILocalVariable(name: "argv0", arg: 1, scope: !13416, file: !920, line: 39, type: !115)
!13418 = !DILocation(line: 39, column: 31, scope: !13416)
!13419 = !DILocalVariable(name: "slash", scope: !13416, file: !920, line: 46, type: !115)
!13420 = !DILocation(line: 46, column: 15, scope: !13416)
!13421 = !DILocalVariable(name: "base", scope: !13416, file: !920, line: 47, type: !115)
!13422 = !DILocation(line: 47, column: 15, scope: !13416)
!13423 = !DILocation(line: 51, column: 7, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13416, file: !920, line: 51, column: 7)
!13425 = !DILocation(line: 51, column: 13, scope: !13424)
!13426 = !DILocation(line: 51, column: 7, scope: !13416)
!13427 = !DILocation(line: 55, column: 14, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !13424, file: !920, line: 52, column: 5)
!13429 = !DILocation(line: 54, column: 7, scope: !13428)
!13430 = !DILocation(line: 56, column: 7, scope: !13428)
!13431 = !DILocation(line: 59, column: 20, scope: !13416)
!13432 = !DILocation(line: 59, column: 11, scope: !13416)
!13433 = !DILocation(line: 59, column: 9, scope: !13416)
!13434 = !DILocation(line: 60, column: 11, scope: !13416)
!13435 = !DILocation(line: 60, column: 17, scope: !13416)
!13436 = !DILocation(line: 60, column: 27, scope: !13416)
!13437 = !DILocation(line: 60, column: 33, scope: !13416)
!13438 = !DILocation(line: 60, column: 39, scope: !13416)
!13439 = !DILocation(line: 60, column: 8, scope: !13416)
!13440 = !DILocation(line: 61, column: 7, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13416, file: !920, line: 61, column: 7)
!13442 = !DILocation(line: 61, column: 14, scope: !13441)
!13443 = !DILocation(line: 61, column: 12, scope: !13441)
!13444 = !DILocation(line: 61, column: 20, scope: !13441)
!13445 = !DILocation(line: 61, column: 25, scope: !13441)
!13446 = !DILocation(line: 61, column: 37, scope: !13441)
!13447 = !DILocation(line: 61, column: 42, scope: !13441)
!13448 = !DILocation(line: 61, column: 28, scope: !13441)
!13449 = !DILocation(line: 61, column: 61, scope: !13441)
!13450 = !DILocation(line: 61, column: 7, scope: !13416)
!13451 = !DILocation(line: 63, column: 15, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13441, file: !920, line: 62, column: 5)
!13453 = !DILocation(line: 63, column: 13, scope: !13452)
!13454 = !DILocation(line: 64, column: 20, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13452, file: !920, line: 64, column: 11)
!13456 = !DILocation(line: 64, column: 11, scope: !13455)
!13457 = !DILocation(line: 64, column: 36, scope: !13455)
!13458 = !DILocation(line: 64, column: 11, scope: !13452)
!13459 = !DILocation(line: 66, column: 19, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13455, file: !920, line: 65, column: 9)
!13461 = !DILocation(line: 66, column: 24, scope: !13460)
!13462 = !DILocation(line: 66, column: 17, scope: !13460)
!13463 = !DILocation(line: 70, column: 52, scope: !13460)
!13464 = !DILocation(line: 70, column: 41, scope: !13460)
!13465 = !DILocation(line: 72, column: 9, scope: !13460)
!13466 = !DILocation(line: 73, column: 5, scope: !13452)
!13467 = !DILocation(line: 84, column: 18, scope: !13416)
!13468 = !DILocation(line: 84, column: 16, scope: !13416)
!13469 = !DILocation(line: 90, column: 38, scope: !13416)
!13470 = !DILocation(line: 90, column: 27, scope: !13416)
!13471 = !DILocation(line: 92, column: 1, scope: !13416)
!13472 = distinct !DISubprogram(name: "qcopy_acl", scope: !13473, file: !13473, line: 39, type: !1584, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1817, retainedNodes: !143)
!13473 = !DIFile(filename: "lib/qcopy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2533, line: 260, size: 256, elements: !13475)
!13475 = !{!13476, !13477, !13478, !13479}
!13476 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13474, file: !2533, line: 261, baseType: !160, size: 32)
!13477 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !13474, file: !2533, line: 264, baseType: !2521, size: 64, offset: 64)
!13478 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !13474, file: !2533, line: 266, baseType: !2521, size: 64, offset: 128)
!13479 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !13474, file: !2533, line: 268, baseType: !120, size: 8, offset: 192)
!13480 = !DILocalVariable(name: "src_name", arg: 1, scope: !13472, file: !13473, line: 39, type: !115)
!13481 = !DILocation(line: 39, column: 24, scope: !13472)
!13482 = !DILocalVariable(name: "source_desc", arg: 2, scope: !13472, file: !13473, line: 39, type: !7)
!13483 = !DILocation(line: 39, column: 38, scope: !13472)
!13484 = !DILocalVariable(name: "dst_name", arg: 3, scope: !13472, file: !13473, line: 39, type: !115)
!13485 = !DILocation(line: 39, column: 63, scope: !13472)
!13486 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !13472, file: !13473, line: 40, type: !7)
!13487 = !DILocation(line: 40, column: 16, scope: !13472)
!13488 = !DILocalVariable(name: "mode", arg: 5, scope: !13472, file: !13473, line: 40, type: !160)
!13489 = !DILocation(line: 40, column: 34, scope: !13472)
!13490 = !DILocalVariable(name: "ctx", scope: !13472, file: !13473, line: 42, type: !13474)
!13491 = !DILocation(line: 42, column: 29, scope: !13472)
!13492 = !DILocalVariable(name: "ret", scope: !13472, file: !13473, line: 43, type: !7)
!13493 = !DILocation(line: 43, column: 7, scope: !13472)
!13494 = !DILocation(line: 45, column: 26, scope: !13472)
!13495 = !DILocation(line: 45, column: 36, scope: !13472)
!13496 = !DILocation(line: 45, column: 49, scope: !13472)
!13497 = !DILocation(line: 45, column: 9, scope: !13472)
!13498 = !DILocation(line: 45, column: 7, scope: !13472)
!13499 = !DILocation(line: 46, column: 7, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13472, file: !13473, line: 46, column: 7)
!13501 = !DILocation(line: 46, column: 11, scope: !13500)
!13502 = !DILocation(line: 46, column: 7, scope: !13472)
!13503 = !DILocation(line: 47, column: 5, scope: !13500)
!13504 = !DILocation(line: 48, column: 32, scope: !13472)
!13505 = !DILocation(line: 48, column: 42, scope: !13472)
!13506 = !DILocation(line: 48, column: 9, scope: !13472)
!13507 = !DILocation(line: 48, column: 7, scope: !13472)
!13508 = !DILocation(line: 49, column: 3, scope: !13472)
!13509 = !DILocation(line: 50, column: 10, scope: !13472)
!13510 = !DILocation(line: 50, column: 3, scope: !13472)
!13511 = !DILocation(line: 51, column: 1, scope: !13472)
!13512 = distinct !DISubprogram(name: "qset_acl", scope: !13513, file: !13513, line: 39, type: !1589, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1819, retainedNodes: !143)
!13513 = !DIFile(filename: "lib/qset-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2533, line: 260, size: 256, elements: !13515)
!13515 = !{!13516, !13517, !13518, !13519}
!13516 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13514, file: !2533, line: 261, baseType: !160, size: 32)
!13517 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !13514, file: !2533, line: 264, baseType: !2521, size: 64, offset: 64)
!13518 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !13514, file: !2533, line: 266, baseType: !2521, size: 64, offset: 128)
!13519 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !13514, file: !2533, line: 268, baseType: !120, size: 8, offset: 192)
!13520 = !DILocalVariable(name: "name", arg: 1, scope: !13512, file: !13513, line: 39, type: !115)
!13521 = !DILocation(line: 39, column: 23, scope: !13512)
!13522 = !DILocalVariable(name: "desc", arg: 2, scope: !13512, file: !13513, line: 39, type: !7)
!13523 = !DILocation(line: 39, column: 33, scope: !13512)
!13524 = !DILocalVariable(name: "mode", arg: 3, scope: !13512, file: !13513, line: 39, type: !160)
!13525 = !DILocation(line: 39, column: 46, scope: !13512)
!13526 = !DILocalVariable(name: "ctx", scope: !13512, file: !13513, line: 41, type: !13514)
!13527 = !DILocation(line: 41, column: 29, scope: !13512)
!13528 = !DILocalVariable(name: "ret", scope: !13512, file: !13513, line: 42, type: !7)
!13529 = !DILocation(line: 42, column: 7, scope: !13512)
!13530 = !DILocation(line: 44, column: 3, scope: !13512)
!13531 = !DILocation(line: 45, column: 14, scope: !13512)
!13532 = !DILocation(line: 45, column: 7, scope: !13512)
!13533 = !DILocation(line: 45, column: 12, scope: !13512)
!13534 = !{!13535, !2983, i64 0}
!13535 = !{!"permission_context", !2983, i64 0, !2996, i64 8, !2996, i64 16, !3107, i64 24}
!13536 = !DILocation(line: 46, column: 32, scope: !13512)
!13537 = !DILocation(line: 46, column: 38, scope: !13512)
!13538 = !DILocation(line: 46, column: 9, scope: !13512)
!13539 = !DILocation(line: 46, column: 7, scope: !13512)
!13540 = !DILocation(line: 47, column: 3, scope: !13512)
!13541 = !DILocation(line: 48, column: 10, scope: !13512)
!13542 = !DILocation(line: 48, column: 3, scope: !13512)
!13543 = distinct !DISubprogram(name: "clone_quoting_options", scope: !952, file: !952, line: 122, type: !948, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!13544 = !DILocalVariable(name: "o", arg: 1, scope: !13543, file: !952, line: 122, type: !950)
!13545 = !DILocation(line: 122, column: 48, scope: !13543)
!13546 = !DILocalVariable(name: "e", scope: !13543, file: !952, line: 124, type: !7)
!13547 = !DILocation(line: 124, column: 7, scope: !13543)
!13548 = !DILocation(line: 124, column: 11, scope: !13543)
!13549 = !DILocalVariable(name: "p", scope: !13543, file: !952, line: 125, type: !950)
!13550 = !DILocation(line: 125, column: 27, scope: !13543)
!13551 = !DILocation(line: 125, column: 40, scope: !13543)
!13552 = !DILocation(line: 125, column: 44, scope: !13543)
!13553 = !DILocation(line: 125, column: 31, scope: !13543)
!13554 = !DILocation(line: 127, column: 11, scope: !13543)
!13555 = !DILocation(line: 127, column: 3, scope: !13543)
!13556 = !DILocation(line: 127, column: 9, scope: !13543)
!13557 = !DILocation(line: 128, column: 10, scope: !13543)
!13558 = !DILocation(line: 128, column: 3, scope: !13543)
!13559 = distinct !DISubprogram(name: "get_quoting_style", scope: !952, file: !952, line: 133, type: !960, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!13560 = !DILocalVariable(name: "o", arg: 1, scope: !13559, file: !952, line: 133, type: !962)
!13561 = !DILocation(line: 133, column: 50, scope: !13559)
!13562 = !DILocation(line: 135, column: 11, scope: !13559)
!13563 = !DILocation(line: 135, column: 15, scope: !13559)
!13564 = !DILocation(line: 135, column: 46, scope: !13559)
!13565 = !{!13566, !2984, i64 0}
!13566 = !{!"quoting_options", !2984, i64 0, !2983, i64 4, !2984, i64 8, !2996, i64 40, !2996, i64 48}
!13567 = !DILocation(line: 135, column: 3, scope: !13559)
!13568 = distinct !DISubprogram(name: "set_quoting_style", scope: !952, file: !952, line: 141, type: !964, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!13569 = !DILocalVariable(name: "o", arg: 1, scope: !13568, file: !952, line: 141, type: !950)
!13570 = !DILocation(line: 141, column: 44, scope: !13568)
!13571 = !DILocalVariable(name: "s", arg: 2, scope: !13568, file: !952, line: 141, type: !926)
!13572 = !DILocation(line: 141, column: 66, scope: !13568)
!13573 = !DILocation(line: 143, column: 47, scope: !13568)
!13574 = !DILocation(line: 143, column: 4, scope: !13568)
!13575 = !DILocation(line: 143, column: 8, scope: !13568)
!13576 = !DILocation(line: 143, column: 39, scope: !13568)
!13577 = !DILocation(line: 143, column: 45, scope: !13568)
!13578 = !DILocation(line: 144, column: 1, scope: !13568)
!13579 = distinct !DISubprogram(name: "set_char_quoting", scope: !952, file: !952, line: 152, type: !966, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!13580 = !DILocalVariable(name: "o", arg: 1, scope: !13579, file: !952, line: 152, type: !950)
!13581 = !DILocation(line: 152, column: 43, scope: !13579)
!13582 = !DILocalVariable(name: "c", arg: 2, scope: !13579, file: !952, line: 152, type: !10)
!13583 = !DILocation(line: 152, column: 51, scope: !13579)
!13584 = !DILocalVariable(name: "i", arg: 3, scope: !13579, file: !952, line: 152, type: !7)
!13585 = !DILocation(line: 152, column: 58, scope: !13579)
!13586 = !DILocalVariable(name: "uc", scope: !13579, file: !952, line: 154, type: !466)
!13587 = !DILocation(line: 154, column: 17, scope: !13579)
!13588 = !DILocation(line: 154, column: 22, scope: !13579)
!13589 = !DILocalVariable(name: "p", scope: !13579, file: !952, line: 155, type: !968)
!13590 = !DILocation(line: 155, column: 17, scope: !13579)
!13591 = !DILocation(line: 156, column: 6, scope: !13579)
!13592 = !DILocation(line: 156, column: 10, scope: !13579)
!13593 = !DILocation(line: 156, column: 41, scope: !13579)
!13594 = !DILocation(line: 156, column: 5, scope: !13579)
!13595 = !DILocation(line: 156, column: 59, scope: !13579)
!13596 = !DILocation(line: 156, column: 62, scope: !13579)
!13597 = !DILocation(line: 156, column: 57, scope: !13579)
!13598 = !DILocalVariable(name: "shift", scope: !13579, file: !952, line: 157, type: !7)
!13599 = !DILocation(line: 157, column: 7, scope: !13579)
!13600 = !DILocation(line: 157, column: 15, scope: !13579)
!13601 = !DILocation(line: 157, column: 18, scope: !13579)
!13602 = !DILocalVariable(name: "r", scope: !13579, file: !952, line: 158, type: !7)
!13603 = !DILocation(line: 158, column: 7, scope: !13579)
!13604 = !DILocation(line: 158, column: 13, scope: !13579)
!13605 = !DILocation(line: 158, column: 12, scope: !13579)
!13606 = !DILocation(line: 158, column: 18, scope: !13579)
!13607 = !DILocation(line: 158, column: 15, scope: !13579)
!13608 = !DILocation(line: 158, column: 25, scope: !13579)
!13609 = !DILocation(line: 159, column: 11, scope: !13579)
!13610 = !DILocation(line: 159, column: 13, scope: !13579)
!13611 = !DILocation(line: 159, column: 20, scope: !13579)
!13612 = !DILocation(line: 159, column: 18, scope: !13579)
!13613 = !DILocation(line: 159, column: 26, scope: !13579)
!13614 = !DILocation(line: 159, column: 23, scope: !13579)
!13615 = !DILocation(line: 159, column: 4, scope: !13579)
!13616 = !DILocation(line: 159, column: 6, scope: !13579)
!13617 = !DILocation(line: 160, column: 10, scope: !13579)
!13618 = !DILocation(line: 160, column: 3, scope: !13579)
!13619 = distinct !DISubprogram(name: "set_quoting_flags", scope: !952, file: !952, line: 168, type: !969, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!13620 = !DILocalVariable(name: "o", arg: 1, scope: !13619, file: !952, line: 168, type: !950)
!13621 = !DILocation(line: 168, column: 44, scope: !13619)
!13622 = !DILocalVariable(name: "i", arg: 2, scope: !13619, file: !952, line: 168, type: !7)
!13623 = !DILocation(line: 168, column: 51, scope: !13619)
!13624 = !DILocalVariable(name: "r", scope: !13619, file: !952, line: 170, type: !7)
!13625 = !DILocation(line: 170, column: 7, scope: !13619)
!13626 = !DILocation(line: 171, column: 8, scope: !13627)
!13627 = distinct !DILexicalBlock(scope: !13619, file: !952, line: 171, column: 7)
!13628 = !DILocation(line: 171, column: 7, scope: !13619)
!13629 = !DILocation(line: 172, column: 7, scope: !13627)
!13630 = !DILocation(line: 172, column: 5, scope: !13627)
!13631 = !DILocation(line: 173, column: 7, scope: !13619)
!13632 = !DILocation(line: 173, column: 10, scope: !13619)
!13633 = !{!13566, !2983, i64 4}
!13634 = !DILocation(line: 173, column: 5, scope: !13619)
!13635 = !DILocation(line: 174, column: 14, scope: !13619)
!13636 = !DILocation(line: 174, column: 3, scope: !13619)
!13637 = !DILocation(line: 174, column: 6, scope: !13619)
!13638 = !DILocation(line: 174, column: 12, scope: !13619)
!13639 = !DILocation(line: 175, column: 10, scope: !13619)
!13640 = !DILocation(line: 175, column: 3, scope: !13619)
!13641 = distinct !DISubprogram(name: "set_custom_quoting", scope: !952, file: !952, line: 179, type: !971, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!13642 = !DILocalVariable(name: "o", arg: 1, scope: !13641, file: !952, line: 179, type: !950)
!13643 = !DILocation(line: 179, column: 45, scope: !13641)
!13644 = !DILocalVariable(name: "left_quote", arg: 2, scope: !13641, file: !952, line: 180, type: !115)
!13645 = !DILocation(line: 180, column: 33, scope: !13641)
!13646 = !DILocalVariable(name: "right_quote", arg: 3, scope: !13641, file: !952, line: 180, type: !115)
!13647 = !DILocation(line: 180, column: 57, scope: !13641)
!13648 = !DILocation(line: 182, column: 8, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13641, file: !952, line: 182, column: 7)
!13650 = !DILocation(line: 182, column: 7, scope: !13641)
!13651 = !DILocation(line: 183, column: 7, scope: !13649)
!13652 = !DILocation(line: 183, column: 5, scope: !13649)
!13653 = !DILocation(line: 184, column: 3, scope: !13641)
!13654 = !DILocation(line: 184, column: 6, scope: !13641)
!13655 = !DILocation(line: 184, column: 12, scope: !13641)
!13656 = !DILocation(line: 185, column: 8, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13641, file: !952, line: 185, column: 7)
!13658 = !DILocation(line: 185, column: 19, scope: !13657)
!13659 = !DILocation(line: 185, column: 23, scope: !13657)
!13660 = !DILocation(line: 185, column: 7, scope: !13641)
!13661 = !DILocation(line: 186, column: 5, scope: !13657)
!13662 = !DILocation(line: 187, column: 19, scope: !13641)
!13663 = !DILocation(line: 187, column: 3, scope: !13641)
!13664 = !DILocation(line: 187, column: 6, scope: !13641)
!13665 = !DILocation(line: 187, column: 17, scope: !13641)
!13666 = !{!13566, !2996, i64 40}
!13667 = !DILocation(line: 188, column: 20, scope: !13641)
!13668 = !DILocation(line: 188, column: 3, scope: !13641)
!13669 = !DILocation(line: 188, column: 6, scope: !13641)
!13670 = !DILocation(line: 188, column: 18, scope: !13641)
!13671 = !{!13566, !2996, i64 48}
!13672 = !DILocation(line: 189, column: 1, scope: !13641)
!13673 = distinct !DISubprogram(name: "quotearg_buffer", scope: !952, file: !952, line: 784, type: !973, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!13674 = !DILocalVariable(name: "buffer", arg: 1, scope: !13673, file: !952, line: 784, type: !9)
!13675 = !DILocation(line: 784, column: 24, scope: !13673)
!13676 = !DILocalVariable(name: "buffersize", arg: 2, scope: !13673, file: !952, line: 784, type: !55)
!13677 = !DILocation(line: 784, column: 39, scope: !13673)
!13678 = !DILocalVariable(name: "arg", arg: 3, scope: !13673, file: !952, line: 785, type: !115)
!13679 = !DILocation(line: 785, column: 30, scope: !13673)
!13680 = !DILocalVariable(name: "argsize", arg: 4, scope: !13673, file: !952, line: 785, type: !55)
!13681 = !DILocation(line: 785, column: 42, scope: !13673)
!13682 = !DILocalVariable(name: "o", arg: 5, scope: !13673, file: !952, line: 786, type: !962)
!13683 = !DILocation(line: 786, column: 48, scope: !13673)
!13684 = !DILocalVariable(name: "p", scope: !13673, file: !952, line: 788, type: !962)
!13685 = !DILocation(line: 788, column: 33, scope: !13673)
!13686 = !DILocation(line: 788, column: 37, scope: !13673)
!13687 = !DILocation(line: 788, column: 41, scope: !13673)
!13688 = !DILocalVariable(name: "e", scope: !13673, file: !952, line: 789, type: !7)
!13689 = !DILocation(line: 789, column: 7, scope: !13673)
!13690 = !DILocation(line: 789, column: 11, scope: !13673)
!13691 = !DILocalVariable(name: "r", scope: !13673, file: !952, line: 790, type: !55)
!13692 = !DILocation(line: 790, column: 10, scope: !13673)
!13693 = !DILocation(line: 790, column: 40, scope: !13673)
!13694 = !DILocation(line: 790, column: 48, scope: !13673)
!13695 = !DILocation(line: 790, column: 60, scope: !13673)
!13696 = !DILocation(line: 790, column: 65, scope: !13673)
!13697 = !DILocation(line: 791, column: 40, scope: !13673)
!13698 = !DILocation(line: 791, column: 43, scope: !13673)
!13699 = !DILocation(line: 791, column: 50, scope: !13673)
!13700 = !DILocation(line: 791, column: 53, scope: !13673)
!13701 = !DILocation(line: 791, column: 60, scope: !13673)
!13702 = !DILocation(line: 791, column: 63, scope: !13673)
!13703 = !DILocation(line: 792, column: 40, scope: !13673)
!13704 = !DILocation(line: 792, column: 43, scope: !13673)
!13705 = !DILocation(line: 792, column: 55, scope: !13673)
!13706 = !DILocation(line: 792, column: 58, scope: !13673)
!13707 = !DILocation(line: 790, column: 14, scope: !13673)
!13708 = !DILocation(line: 793, column: 11, scope: !13673)
!13709 = !DILocation(line: 793, column: 3, scope: !13673)
!13710 = !DILocation(line: 793, column: 9, scope: !13673)
!13711 = !DILocation(line: 794, column: 10, scope: !13673)
!13712 = !DILocation(line: 794, column: 3, scope: !13673)
!13713 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !952, file: !952, line: 256, type: !1020, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !923, retainedNodes: !143)
!13714 = !DILocalVariable(name: "buffer", arg: 1, scope: !13713, file: !952, line: 256, type: !9)
!13715 = !DILocation(line: 256, column: 33, scope: !13713)
!13716 = !DILocalVariable(name: "buffersize", arg: 2, scope: !13713, file: !952, line: 256, type: !55)
!13717 = !DILocation(line: 256, column: 48, scope: !13713)
!13718 = !DILocalVariable(name: "arg", arg: 3, scope: !13713, file: !952, line: 257, type: !115)
!13719 = !DILocation(line: 257, column: 39, scope: !13713)
!13720 = !DILocalVariable(name: "argsize", arg: 4, scope: !13713, file: !952, line: 257, type: !55)
!13721 = !DILocation(line: 257, column: 51, scope: !13713)
!13722 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !13713, file: !952, line: 258, type: !926)
!13723 = !DILocation(line: 258, column: 46, scope: !13713)
!13724 = !DILocalVariable(name: "flags", arg: 6, scope: !13713, file: !952, line: 258, type: !7)
!13725 = !DILocation(line: 258, column: 65, scope: !13713)
!13726 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !13713, file: !952, line: 259, type: !1022)
!13727 = !DILocation(line: 259, column: 47, scope: !13713)
!13728 = !DILocalVariable(name: "left_quote", arg: 8, scope: !13713, file: !952, line: 260, type: !115)
!13729 = !DILocation(line: 260, column: 39, scope: !13713)
!13730 = !DILocalVariable(name: "right_quote", arg: 9, scope: !13713, file: !952, line: 261, type: !115)
!13731 = !DILocation(line: 261, column: 39, scope: !13713)
!13732 = !DILocalVariable(name: "i", scope: !13713, file: !952, line: 263, type: !55)
!13733 = !DILocation(line: 263, column: 10, scope: !13713)
!13734 = !DILocalVariable(name: "len", scope: !13713, file: !952, line: 264, type: !55)
!13735 = !DILocation(line: 264, column: 10, scope: !13713)
!13736 = !DILocalVariable(name: "orig_buffersize", scope: !13713, file: !952, line: 265, type: !55)
!13737 = !DILocation(line: 265, column: 10, scope: !13713)
!13738 = !DILocalVariable(name: "quote_string", scope: !13713, file: !952, line: 266, type: !115)
!13739 = !DILocation(line: 266, column: 15, scope: !13713)
!13740 = !DILocalVariable(name: "quote_string_len", scope: !13713, file: !952, line: 267, type: !55)
!13741 = !DILocation(line: 267, column: 10, scope: !13713)
!13742 = !DILocalVariable(name: "backslash_escapes", scope: !13713, file: !952, line: 268, type: !120)
!13743 = !DILocation(line: 268, column: 8, scope: !13713)
!13744 = !DILocalVariable(name: "unibyte_locale", scope: !13713, file: !952, line: 269, type: !120)
!13745 = !DILocation(line: 269, column: 8, scope: !13713)
!13746 = !DILocation(line: 269, column: 25, scope: !13713)
!13747 = !DILocation(line: 269, column: 36, scope: !13713)
!13748 = !DILocalVariable(name: "elide_outer_quotes", scope: !13713, file: !952, line: 270, type: !120)
!13749 = !DILocation(line: 270, column: 8, scope: !13713)
!13750 = !DILocation(line: 270, column: 30, scope: !13713)
!13751 = !DILocation(line: 270, column: 36, scope: !13713)
!13752 = !DILocation(line: 270, column: 61, scope: !13713)
!13753 = !DILocalVariable(name: "pending_shell_escape_end", scope: !13713, file: !952, line: 271, type: !120)
!13754 = !DILocation(line: 271, column: 8, scope: !13713)
!13755 = !DILocalVariable(name: "encountered_single_quote", scope: !13713, file: !952, line: 272, type: !120)
!13756 = !DILocation(line: 272, column: 8, scope: !13713)
!13757 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !13713, file: !952, line: 273, type: !120)
!13758 = !DILocation(line: 273, column: 8, scope: !13713)
!13759 = !DILocation(line: 273, column: 3, scope: !13713)
!13760 = !DILabel(scope: !13713, name: "process_input", file: !952, line: 314)
!13761 = !DILocation(line: 314, column: 2, scope: !13713)
!13762 = !DILocation(line: 316, column: 11, scope: !13713)
!13763 = !DILocation(line: 316, column: 3, scope: !13713)
!13764 = !DILocation(line: 319, column: 21, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13713, file: !952, line: 317, column: 5)
!13766 = !DILocation(line: 320, column: 26, scope: !13765)
!13767 = !DILocation(line: 321, column: 7, scope: !13765)
!13768 = !DILocation(line: 323, column: 12, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13765, file: !952, line: 323, column: 11)
!13770 = !DILocation(line: 323, column: 11, scope: !13765)
!13771 = !DILocation(line: 324, column: 9, scope: !13769)
!13772 = !DILocation(line: 324, column: 9, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13774, file: !952, line: 324, column: 9)
!13774 = distinct !DILexicalBlock(scope: !13769, file: !952, line: 324, column: 9)
!13775 = !DILocation(line: 324, column: 9, scope: !13774)
!13776 = !DILocation(line: 325, column: 25, scope: !13765)
!13777 = !DILocation(line: 326, column: 20, scope: !13765)
!13778 = !DILocation(line: 327, column: 24, scope: !13765)
!13779 = !DILocation(line: 328, column: 7, scope: !13765)
!13780 = !DILocation(line: 331, column: 25, scope: !13765)
!13781 = !DILocation(line: 332, column: 26, scope: !13765)
!13782 = !DILocation(line: 333, column: 7, scope: !13765)
!13783 = !DILocation(line: 339, column: 13, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13785, file: !952, line: 339, column: 13)
!13785 = distinct !DILexicalBlock(scope: !13765, file: !952, line: 338, column: 7)
!13786 = !DILocation(line: 339, column: 27, scope: !13784)
!13787 = !DILocation(line: 339, column: 13, scope: !13785)
!13788 = !DILocation(line: 362, column: 50, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13784, file: !952, line: 340, column: 11)
!13790 = !DILocation(line: 362, column: 26, scope: !13789)
!13791 = !DILocation(line: 362, column: 24, scope: !13789)
!13792 = !DILocation(line: 363, column: 51, scope: !13789)
!13793 = !DILocation(line: 363, column: 27, scope: !13789)
!13794 = !DILocation(line: 363, column: 25, scope: !13789)
!13795 = !DILocation(line: 364, column: 11, scope: !13789)
!13796 = !DILocation(line: 365, column: 14, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13785, file: !952, line: 365, column: 13)
!13798 = !DILocation(line: 365, column: 13, scope: !13785)
!13799 = !DILocation(line: 366, column: 31, scope: !13800)
!13800 = distinct !DILexicalBlock(scope: !13797, file: !952, line: 366, column: 11)
!13801 = !DILocation(line: 366, column: 29, scope: !13800)
!13802 = !DILocation(line: 366, column: 16, scope: !13800)
!13803 = !DILocation(line: 366, column: 44, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13800, file: !952, line: 366, column: 11)
!13805 = !DILocation(line: 366, column: 43, scope: !13804)
!13806 = !DILocation(line: 366, column: 11, scope: !13800)
!13807 = !DILocation(line: 367, column: 13, scope: !13804)
!13808 = !DILocation(line: 367, column: 13, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13810, file: !952, line: 367, column: 13)
!13810 = distinct !DILexicalBlock(scope: !13804, file: !952, line: 367, column: 13)
!13811 = !DILocation(line: 367, column: 13, scope: !13810)
!13812 = !DILocation(line: 366, column: 70, scope: !13804)
!13813 = !DILocation(line: 366, column: 11, scope: !13804)
!13814 = distinct !{!13814, !13806, !13815}
!13815 = !DILocation(line: 367, column: 13, scope: !13800)
!13816 = !DILocation(line: 368, column: 27, scope: !13785)
!13817 = !DILocation(line: 369, column: 24, scope: !13785)
!13818 = !DILocation(line: 369, column: 22, scope: !13785)
!13819 = !DILocation(line: 370, column: 36, scope: !13785)
!13820 = !DILocation(line: 370, column: 28, scope: !13785)
!13821 = !DILocation(line: 370, column: 26, scope: !13785)
!13822 = !DILocation(line: 372, column: 7, scope: !13765)
!13823 = !DILocation(line: 375, column: 25, scope: !13765)
!13824 = !DILocation(line: 376, column: 7, scope: !13765)
!13825 = !DILocation(line: 378, column: 26, scope: !13765)
!13826 = !DILocation(line: 379, column: 7, scope: !13765)
!13827 = !DILocation(line: 381, column: 12, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13765, file: !952, line: 381, column: 11)
!13829 = !DILocation(line: 381, column: 11, scope: !13765)
!13830 = !DILocation(line: 382, column: 27, scope: !13828)
!13831 = !DILocation(line: 382, column: 9, scope: !13828)
!13832 = !DILocation(line: 383, column: 7, scope: !13765)
!13833 = !DILocation(line: 385, column: 21, scope: !13765)
!13834 = !DILocation(line: 386, column: 12, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13765, file: !952, line: 386, column: 11)
!13836 = !DILocation(line: 386, column: 11, scope: !13765)
!13837 = !DILocation(line: 387, column: 9, scope: !13835)
!13838 = !DILocation(line: 387, column: 9, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13840, file: !952, line: 387, column: 9)
!13840 = distinct !DILexicalBlock(scope: !13835, file: !952, line: 387, column: 9)
!13841 = !DILocation(line: 387, column: 9, scope: !13840)
!13842 = !DILocation(line: 388, column: 20, scope: !13765)
!13843 = !DILocation(line: 389, column: 24, scope: !13765)
!13844 = !DILocation(line: 390, column: 7, scope: !13765)
!13845 = !DILocation(line: 393, column: 26, scope: !13765)
!13846 = !DILocation(line: 394, column: 7, scope: !13765)
!13847 = !DILocation(line: 397, column: 7, scope: !13765)
!13848 = !DILocation(line: 400, column: 10, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13713, file: !952, line: 400, column: 3)
!13850 = !DILocation(line: 400, column: 8, scope: !13849)
!13851 = !DILocation(line: 400, column: 19, scope: !13852)
!13852 = distinct !DILexicalBlock(scope: !13849, file: !952, line: 400, column: 3)
!13853 = !DILocation(line: 400, column: 27, scope: !13852)
!13854 = !DILocation(line: 400, column: 41, scope: !13852)
!13855 = !DILocation(line: 400, column: 45, scope: !13852)
!13856 = !DILocation(line: 400, column: 48, scope: !13852)
!13857 = !DILocation(line: 400, column: 58, scope: !13852)
!13858 = !DILocation(line: 400, column: 63, scope: !13852)
!13859 = !DILocation(line: 400, column: 60, scope: !13852)
!13860 = !DILocation(line: 400, column: 16, scope: !13852)
!13861 = !DILocation(line: 400, column: 3, scope: !13849)
!13862 = !DILocalVariable(name: "c", scope: !13863, file: !952, line: 402, type: !466)
!13863 = distinct !DILexicalBlock(scope: !13852, file: !952, line: 401, column: 5)
!13864 = !DILocation(line: 402, column: 21, scope: !13863)
!13865 = !DILocalVariable(name: "esc", scope: !13863, file: !952, line: 403, type: !466)
!13866 = !DILocation(line: 403, column: 21, scope: !13863)
!13867 = !DILocalVariable(name: "is_right_quote", scope: !13863, file: !952, line: 404, type: !120)
!13868 = !DILocation(line: 404, column: 12, scope: !13863)
!13869 = !DILocalVariable(name: "escaping", scope: !13863, file: !952, line: 405, type: !120)
!13870 = !DILocation(line: 405, column: 12, scope: !13863)
!13871 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !13863, file: !952, line: 406, type: !120)
!13872 = !DILocation(line: 406, column: 12, scope: !13863)
!13873 = !DILocation(line: 408, column: 11, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13863, file: !952, line: 408, column: 11)
!13875 = !DILocation(line: 409, column: 11, scope: !13874)
!13876 = !DILocation(line: 409, column: 14, scope: !13874)
!13877 = !DILocation(line: 409, column: 28, scope: !13874)
!13878 = !DILocation(line: 410, column: 11, scope: !13874)
!13879 = !DILocation(line: 410, column: 14, scope: !13874)
!13880 = !DILocation(line: 411, column: 11, scope: !13874)
!13881 = !DILocation(line: 411, column: 15, scope: !13874)
!13882 = !DILocation(line: 411, column: 19, scope: !13874)
!13883 = !DILocation(line: 411, column: 17, scope: !13874)
!13884 = !DILocation(line: 412, column: 19, scope: !13874)
!13885 = !DILocation(line: 412, column: 27, scope: !13874)
!13886 = !DILocation(line: 412, column: 39, scope: !13874)
!13887 = !DILocation(line: 412, column: 46, scope: !13874)
!13888 = !DILocation(line: 412, column: 44, scope: !13874)
!13889 = !DILocation(line: 416, column: 40, scope: !13874)
!13890 = !DILocation(line: 416, column: 32, scope: !13874)
!13891 = !DILocation(line: 416, column: 30, scope: !13874)
!13892 = !DILocation(line: 416, column: 48, scope: !13874)
!13893 = !DILocation(line: 412, column: 15, scope: !13874)
!13894 = !DILocation(line: 417, column: 11, scope: !13874)
!13895 = !DILocation(line: 417, column: 22, scope: !13874)
!13896 = !DILocation(line: 417, column: 28, scope: !13874)
!13897 = !DILocation(line: 417, column: 26, scope: !13874)
!13898 = !DILocation(line: 417, column: 31, scope: !13874)
!13899 = !DILocation(line: 417, column: 45, scope: !13874)
!13900 = !DILocation(line: 417, column: 14, scope: !13874)
!13901 = !DILocation(line: 417, column: 63, scope: !13874)
!13902 = !DILocation(line: 408, column: 11, scope: !13863)
!13903 = !DILocation(line: 419, column: 15, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13905, file: !952, line: 419, column: 15)
!13905 = distinct !DILexicalBlock(scope: !13874, file: !952, line: 418, column: 9)
!13906 = !DILocation(line: 419, column: 15, scope: !13905)
!13907 = !DILocation(line: 420, column: 13, scope: !13904)
!13908 = !DILocation(line: 421, column: 26, scope: !13905)
!13909 = !DILocation(line: 422, column: 9, scope: !13905)
!13910 = !DILocation(line: 424, column: 11, scope: !13863)
!13911 = !DILocation(line: 424, column: 15, scope: !13863)
!13912 = !DILocation(line: 424, column: 9, scope: !13863)
!13913 = !DILocation(line: 425, column: 15, scope: !13863)
!13914 = !DILocation(line: 425, column: 7, scope: !13863)
!13915 = !DILocation(line: 428, column: 15, scope: !13916)
!13916 = distinct !DILexicalBlock(scope: !13917, file: !952, line: 428, column: 15)
!13917 = distinct !DILexicalBlock(scope: !13863, file: !952, line: 426, column: 9)
!13918 = !DILocation(line: 428, column: 15, scope: !13917)
!13919 = !DILocation(line: 430, column: 15, scope: !13920)
!13920 = distinct !DILexicalBlock(scope: !13916, file: !952, line: 429, column: 13)
!13921 = !DILocation(line: 430, column: 15, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13923, file: !952, line: 430, column: 15)
!13923 = distinct !DILexicalBlock(scope: !13920, file: !952, line: 430, column: 15)
!13924 = !DILocation(line: 430, column: 15, scope: !13923)
!13925 = !DILocation(line: 430, column: 15, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13923, file: !952, line: 430, column: 15)
!13927 = !DILocation(line: 430, column: 15, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13926, file: !952, line: 430, column: 15)
!13929 = !DILocation(line: 430, column: 15, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13931, file: !952, line: 430, column: 15)
!13931 = distinct !DILexicalBlock(scope: !13928, file: !952, line: 430, column: 15)
!13932 = !DILocation(line: 430, column: 15, scope: !13931)
!13933 = !DILocation(line: 430, column: 15, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13935, file: !952, line: 430, column: 15)
!13935 = distinct !DILexicalBlock(scope: !13928, file: !952, line: 430, column: 15)
!13936 = !DILocation(line: 430, column: 15, scope: !13935)
!13937 = !DILocation(line: 430, column: 15, scope: !13938)
!13938 = distinct !DILexicalBlock(scope: !13939, file: !952, line: 430, column: 15)
!13939 = distinct !DILexicalBlock(scope: !13928, file: !952, line: 430, column: 15)
!13940 = !DILocation(line: 430, column: 15, scope: !13939)
!13941 = !DILocation(line: 430, column: 15, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13943, file: !952, line: 430, column: 15)
!13943 = distinct !DILexicalBlock(scope: !13923, file: !952, line: 430, column: 15)
!13944 = !DILocation(line: 430, column: 15, scope: !13943)
!13945 = !DILocation(line: 437, column: 19, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13920, file: !952, line: 437, column: 19)
!13947 = !DILocation(line: 437, column: 33, scope: !13946)
!13948 = !DILocation(line: 438, column: 19, scope: !13946)
!13949 = !DILocation(line: 438, column: 22, scope: !13946)
!13950 = !DILocation(line: 438, column: 24, scope: !13946)
!13951 = !DILocation(line: 438, column: 30, scope: !13946)
!13952 = !DILocation(line: 438, column: 28, scope: !13946)
!13953 = !DILocation(line: 438, column: 38, scope: !13946)
!13954 = !DILocation(line: 438, column: 48, scope: !13946)
!13955 = !DILocation(line: 438, column: 52, scope: !13946)
!13956 = !DILocation(line: 438, column: 54, scope: !13946)
!13957 = !DILocation(line: 438, column: 45, scope: !13946)
!13958 = !DILocation(line: 438, column: 59, scope: !13946)
!13959 = !DILocation(line: 438, column: 62, scope: !13946)
!13960 = !DILocation(line: 438, column: 66, scope: !13946)
!13961 = !DILocation(line: 438, column: 68, scope: !13946)
!13962 = !DILocation(line: 438, column: 73, scope: !13946)
!13963 = !DILocation(line: 437, column: 19, scope: !13920)
!13964 = !DILocation(line: 440, column: 19, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13946, file: !952, line: 439, column: 17)
!13966 = !DILocation(line: 440, column: 19, scope: !13967)
!13967 = distinct !DILexicalBlock(scope: !13968, file: !952, line: 440, column: 19)
!13968 = distinct !DILexicalBlock(scope: !13965, file: !952, line: 440, column: 19)
!13969 = !DILocation(line: 440, column: 19, scope: !13968)
!13970 = !DILocation(line: 441, column: 19, scope: !13965)
!13971 = !DILocation(line: 441, column: 19, scope: !13972)
!13972 = distinct !DILexicalBlock(scope: !13973, file: !952, line: 441, column: 19)
!13973 = distinct !DILexicalBlock(scope: !13965, file: !952, line: 441, column: 19)
!13974 = !DILocation(line: 441, column: 19, scope: !13973)
!13975 = !DILocation(line: 442, column: 17, scope: !13965)
!13976 = !DILocation(line: 443, column: 17, scope: !13920)
!13977 = !DILocation(line: 448, column: 13, scope: !13920)
!13978 = !DILocation(line: 449, column: 20, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13916, file: !952, line: 449, column: 20)
!13980 = !DILocation(line: 449, column: 26, scope: !13979)
!13981 = !DILocation(line: 449, column: 20, scope: !13916)
!13982 = !DILocation(line: 450, column: 13, scope: !13979)
!13983 = !DILocation(line: 451, column: 11, scope: !13917)
!13984 = !DILocation(line: 454, column: 19, scope: !13917)
!13985 = !DILocation(line: 454, column: 11, scope: !13917)
!13986 = !DILocation(line: 457, column: 19, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13988, file: !952, line: 457, column: 19)
!13988 = distinct !DILexicalBlock(scope: !13917, file: !952, line: 455, column: 13)
!13989 = !DILocation(line: 457, column: 19, scope: !13988)
!13990 = !DILocation(line: 458, column: 17, scope: !13987)
!13991 = !DILocation(line: 459, column: 15, scope: !13988)
!13992 = !DILocation(line: 462, column: 20, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !13988, file: !952, line: 462, column: 19)
!13994 = !DILocation(line: 462, column: 26, scope: !13993)
!13995 = !DILocation(line: 463, column: 19, scope: !13993)
!13996 = !DILocation(line: 463, column: 22, scope: !13993)
!13997 = !DILocation(line: 463, column: 24, scope: !13993)
!13998 = !DILocation(line: 463, column: 30, scope: !13993)
!13999 = !DILocation(line: 463, column: 28, scope: !13993)
!14000 = !DILocation(line: 463, column: 38, scope: !13993)
!14001 = !DILocation(line: 463, column: 41, scope: !13993)
!14002 = !DILocation(line: 463, column: 45, scope: !13993)
!14003 = !DILocation(line: 463, column: 47, scope: !13993)
!14004 = !DILocation(line: 463, column: 52, scope: !13993)
!14005 = !DILocation(line: 462, column: 19, scope: !13988)
!14006 = !DILocation(line: 464, column: 25, scope: !13993)
!14007 = !DILocation(line: 464, column: 29, scope: !13993)
!14008 = !DILocation(line: 464, column: 31, scope: !13993)
!14009 = !DILocation(line: 464, column: 17, scope: !13993)
!14010 = !DILocation(line: 471, column: 25, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !14012, file: !952, line: 471, column: 25)
!14012 = distinct !DILexicalBlock(scope: !13993, file: !952, line: 465, column: 19)
!14013 = !DILocation(line: 471, column: 25, scope: !14012)
!14014 = !DILocation(line: 472, column: 23, scope: !14011)
!14015 = !DILocation(line: 473, column: 25, scope: !14012)
!14016 = !DILocation(line: 473, column: 29, scope: !14012)
!14017 = !DILocation(line: 473, column: 31, scope: !14012)
!14018 = !DILocation(line: 473, column: 23, scope: !14012)
!14019 = !DILocation(line: 474, column: 23, scope: !14012)
!14020 = !DILocation(line: 475, column: 21, scope: !14012)
!14021 = !DILocation(line: 475, column: 21, scope: !14022)
!14022 = distinct !DILexicalBlock(scope: !14023, file: !952, line: 475, column: 21)
!14023 = distinct !DILexicalBlock(scope: !14012, file: !952, line: 475, column: 21)
!14024 = !DILocation(line: 475, column: 21, scope: !14023)
!14025 = !DILocation(line: 476, column: 21, scope: !14012)
!14026 = !DILocation(line: 476, column: 21, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14028, file: !952, line: 476, column: 21)
!14028 = distinct !DILexicalBlock(scope: !14012, file: !952, line: 476, column: 21)
!14029 = !DILocation(line: 476, column: 21, scope: !14028)
!14030 = !DILocation(line: 477, column: 21, scope: !14012)
!14031 = !DILocation(line: 477, column: 21, scope: !14032)
!14032 = distinct !DILexicalBlock(scope: !14033, file: !952, line: 477, column: 21)
!14033 = distinct !DILexicalBlock(scope: !14012, file: !952, line: 477, column: 21)
!14034 = !DILocation(line: 477, column: 21, scope: !14033)
!14035 = !DILocation(line: 478, column: 21, scope: !14012)
!14036 = !DILocation(line: 478, column: 21, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14038, file: !952, line: 478, column: 21)
!14038 = distinct !DILexicalBlock(scope: !14012, file: !952, line: 478, column: 21)
!14039 = !DILocation(line: 478, column: 21, scope: !14038)
!14040 = !DILocation(line: 479, column: 21, scope: !14012)
!14041 = !DILocation(line: 482, column: 21, scope: !14012)
!14042 = !DILocation(line: 483, column: 19, scope: !14012)
!14043 = !DILocation(line: 484, column: 15, scope: !13988)
!14044 = !DILocation(line: 487, column: 15, scope: !13988)
!14045 = !DILocation(line: 489, column: 11, scope: !13917)
!14046 = !DILocation(line: 491, column: 24, scope: !13917)
!14047 = !DILocation(line: 491, column: 31, scope: !13917)
!14048 = !DILocation(line: 492, column: 24, scope: !13917)
!14049 = !DILocation(line: 492, column: 31, scope: !13917)
!14050 = !DILocation(line: 493, column: 24, scope: !13917)
!14051 = !DILocation(line: 493, column: 31, scope: !13917)
!14052 = !DILocation(line: 494, column: 24, scope: !13917)
!14053 = !DILocation(line: 494, column: 31, scope: !13917)
!14054 = !DILocation(line: 495, column: 24, scope: !13917)
!14055 = !DILocation(line: 495, column: 31, scope: !13917)
!14056 = !DILocation(line: 496, column: 24, scope: !13917)
!14057 = !DILocation(line: 496, column: 31, scope: !13917)
!14058 = !DILocation(line: 497, column: 24, scope: !13917)
!14059 = !DILocation(line: 497, column: 31, scope: !13917)
!14060 = !DILocation(line: 498, column: 26, scope: !13917)
!14061 = !DILocation(line: 498, column: 24, scope: !13917)
!14062 = !DILocation(line: 500, column: 15, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !13917, file: !952, line: 500, column: 15)
!14064 = !DILocation(line: 500, column: 29, scope: !14063)
!14065 = !DILocation(line: 500, column: 15, scope: !13917)
!14066 = !DILocation(line: 502, column: 19, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14068, file: !952, line: 502, column: 19)
!14068 = distinct !DILexicalBlock(scope: !14063, file: !952, line: 501, column: 13)
!14069 = !DILocation(line: 502, column: 19, scope: !14068)
!14070 = !DILocation(line: 503, column: 17, scope: !14067)
!14071 = !DILocation(line: 504, column: 15, scope: !14068)
!14072 = !DILocation(line: 509, column: 15, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !13917, file: !952, line: 509, column: 15)
!14074 = !DILocation(line: 509, column: 33, scope: !14073)
!14075 = !DILocation(line: 509, column: 36, scope: !14073)
!14076 = !DILocation(line: 509, column: 55, scope: !14073)
!14077 = !DILocation(line: 509, column: 58, scope: !14073)
!14078 = !DILocation(line: 509, column: 15, scope: !13917)
!14079 = !DILocation(line: 510, column: 13, scope: !14073)
!14080 = !DILabel(scope: !13917, name: "c_and_shell_escape", file: !952, line: 512)
!14081 = !DILocation(line: 512, column: 9, scope: !13917)
!14082 = !DILocation(line: 513, column: 15, scope: !14083)
!14083 = distinct !DILexicalBlock(scope: !13917, file: !952, line: 513, column: 15)
!14084 = !DILocation(line: 513, column: 29, scope: !14083)
!14085 = !DILocation(line: 514, column: 15, scope: !14083)
!14086 = !DILocation(line: 514, column: 18, scope: !14083)
!14087 = !DILocation(line: 513, column: 15, scope: !13917)
!14088 = !DILocation(line: 515, column: 13, scope: !14083)
!14089 = !DILabel(scope: !13917, name: "c_escape", file: !952, line: 517)
!14090 = !DILocation(line: 517, column: 9, scope: !13917)
!14091 = !DILocation(line: 518, column: 15, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !13917, file: !952, line: 518, column: 15)
!14093 = !DILocation(line: 518, column: 15, scope: !13917)
!14094 = !DILocation(line: 520, column: 19, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !14092, file: !952, line: 519, column: 13)
!14096 = !DILocation(line: 520, column: 17, scope: !14095)
!14097 = !DILocation(line: 521, column: 15, scope: !14095)
!14098 = !DILocation(line: 523, column: 11, scope: !13917)
!14099 = !DILocation(line: 526, column: 18, scope: !14100)
!14100 = distinct !DILexicalBlock(scope: !13917, file: !952, line: 526, column: 15)
!14101 = !DILocation(line: 526, column: 26, scope: !14100)
!14102 = !DILocation(line: 526, column: 15, scope: !13917)
!14103 = !DILocation(line: 526, column: 40, scope: !14100)
!14104 = !DILocation(line: 526, column: 47, scope: !14100)
!14105 = !DILocation(line: 526, column: 57, scope: !14100)
!14106 = !DILocation(line: 526, column: 65, scope: !14100)
!14107 = !DILocation(line: 527, column: 13, scope: !14100)
!14108 = !DILocation(line: 528, column: 11, scope: !13917)
!14109 = !DILocation(line: 530, column: 15, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !13917, file: !952, line: 530, column: 15)
!14111 = !DILocation(line: 530, column: 17, scope: !14110)
!14112 = !DILocation(line: 530, column: 15, scope: !13917)
!14113 = !DILocation(line: 531, column: 13, scope: !14110)
!14114 = !DILocation(line: 532, column: 11, scope: !13917)
!14115 = !DILocation(line: 534, column: 36, scope: !13917)
!14116 = !DILocation(line: 535, column: 11, scope: !13917)
!14117 = !DILocation(line: 548, column: 15, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !13917, file: !952, line: 548, column: 15)
!14119 = !DILocation(line: 548, column: 29, scope: !14118)
!14120 = !DILocation(line: 549, column: 15, scope: !14118)
!14121 = !DILocation(line: 549, column: 18, scope: !14118)
!14122 = !DILocation(line: 548, column: 15, scope: !13917)
!14123 = !DILocation(line: 550, column: 13, scope: !14118)
!14124 = !DILocation(line: 551, column: 11, scope: !13917)
!14125 = !DILocation(line: 554, column: 36, scope: !13917)
!14126 = !DILocation(line: 555, column: 36, scope: !13917)
!14127 = !DILocation(line: 556, column: 15, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !13917, file: !952, line: 556, column: 15)
!14129 = !DILocation(line: 556, column: 29, scope: !14128)
!14130 = !DILocation(line: 556, column: 15, scope: !13917)
!14131 = !DILocation(line: 558, column: 19, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14133, file: !952, line: 558, column: 19)
!14133 = distinct !DILexicalBlock(scope: !14128, file: !952, line: 557, column: 13)
!14134 = !DILocation(line: 558, column: 19, scope: !14133)
!14135 = !DILocation(line: 559, column: 17, scope: !14132)
!14136 = !DILocation(line: 561, column: 19, scope: !14137)
!14137 = distinct !DILexicalBlock(scope: !14133, file: !952, line: 561, column: 19)
!14138 = !DILocation(line: 561, column: 30, scope: !14137)
!14139 = !DILocation(line: 561, column: 35, scope: !14137)
!14140 = !DILocation(line: 561, column: 19, scope: !14133)
!14141 = !DILocation(line: 566, column: 37, scope: !14142)
!14142 = distinct !DILexicalBlock(scope: !14137, file: !952, line: 562, column: 17)
!14143 = !DILocation(line: 566, column: 35, scope: !14142)
!14144 = !DILocation(line: 567, column: 30, scope: !14142)
!14145 = !DILocation(line: 568, column: 17, scope: !14142)
!14146 = !DILocation(line: 570, column: 15, scope: !14133)
!14147 = !DILocation(line: 570, column: 15, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14149, file: !952, line: 570, column: 15)
!14149 = distinct !DILexicalBlock(scope: !14133, file: !952, line: 570, column: 15)
!14150 = !DILocation(line: 570, column: 15, scope: !14149)
!14151 = !DILocation(line: 571, column: 15, scope: !14133)
!14152 = !DILocation(line: 571, column: 15, scope: !14153)
!14153 = distinct !DILexicalBlock(scope: !14154, file: !952, line: 571, column: 15)
!14154 = distinct !DILexicalBlock(scope: !14133, file: !952, line: 571, column: 15)
!14155 = !DILocation(line: 571, column: 15, scope: !14154)
!14156 = !DILocation(line: 572, column: 15, scope: !14133)
!14157 = !DILocation(line: 572, column: 15, scope: !14158)
!14158 = distinct !DILexicalBlock(scope: !14159, file: !952, line: 572, column: 15)
!14159 = distinct !DILexicalBlock(scope: !14133, file: !952, line: 572, column: 15)
!14160 = !DILocation(line: 572, column: 15, scope: !14159)
!14161 = !DILocation(line: 573, column: 40, scope: !14133)
!14162 = !DILocation(line: 574, column: 13, scope: !14133)
!14163 = !DILocation(line: 575, column: 11, scope: !13917)
!14164 = !DILocation(line: 599, column: 36, scope: !13917)
!14165 = !DILocation(line: 600, column: 11, scope: !13917)
!14166 = !DILocalVariable(name: "m", scope: !14167, file: !952, line: 610, type: !55)
!14167 = distinct !DILexicalBlock(scope: !13917, file: !952, line: 608, column: 11)
!14168 = !DILocation(line: 610, column: 20, scope: !14167)
!14169 = !DILocalVariable(name: "printable", scope: !14167, file: !952, line: 612, type: !120)
!14170 = !DILocation(line: 612, column: 18, scope: !14167)
!14171 = !DILocation(line: 614, column: 17, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14167, file: !952, line: 614, column: 17)
!14173 = !DILocation(line: 614, column: 17, scope: !14167)
!14174 = !DILocation(line: 616, column: 19, scope: !14175)
!14175 = distinct !DILexicalBlock(scope: !14172, file: !952, line: 615, column: 15)
!14176 = !DILocation(line: 617, column: 29, scope: !14175)
!14177 = !DILocation(line: 617, column: 41, scope: !14175)
!14178 = !DILocation(line: 617, column: 27, scope: !14175)
!14179 = !DILocation(line: 618, column: 15, scope: !14175)
!14180 = !DILocalVariable(name: "mbstate", scope: !14181, file: !952, line: 621, type: !1026)
!14181 = distinct !DILexicalBlock(scope: !14172, file: !952, line: 620, column: 15)
!14182 = !DILocation(line: 621, column: 27, scope: !14181)
!14183 = !DILocation(line: 622, column: 17, scope: !14181)
!14184 = !DILocation(line: 624, column: 19, scope: !14181)
!14185 = !DILocation(line: 625, column: 27, scope: !14181)
!14186 = !DILocation(line: 626, column: 21, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14181, file: !952, line: 626, column: 21)
!14188 = !DILocation(line: 626, column: 29, scope: !14187)
!14189 = !DILocation(line: 626, column: 21, scope: !14181)
!14190 = !DILocation(line: 627, column: 37, scope: !14187)
!14191 = !DILocation(line: 627, column: 29, scope: !14187)
!14192 = !DILocation(line: 627, column: 27, scope: !14187)
!14193 = !DILocation(line: 627, column: 19, scope: !14187)
!14194 = !DILocation(line: 629, column: 17, scope: !14181)
!14195 = !DILocalVariable(name: "w", scope: !14196, file: !952, line: 631, type: !1041)
!14196 = distinct !DILexicalBlock(scope: !14181, file: !952, line: 630, column: 19)
!14197 = !DILocation(line: 631, column: 29, scope: !14196)
!14198 = !DILocalVariable(name: "bytes", scope: !14196, file: !952, line: 632, type: !55)
!14199 = !DILocation(line: 632, column: 28, scope: !14196)
!14200 = !DILocation(line: 632, column: 50, scope: !14196)
!14201 = !DILocation(line: 632, column: 54, scope: !14196)
!14202 = !DILocation(line: 632, column: 58, scope: !14196)
!14203 = !DILocation(line: 632, column: 56, scope: !14196)
!14204 = !DILocation(line: 633, column: 45, scope: !14196)
!14205 = !DILocation(line: 633, column: 56, scope: !14196)
!14206 = !DILocation(line: 633, column: 60, scope: !14196)
!14207 = !DILocation(line: 633, column: 58, scope: !14196)
!14208 = !DILocation(line: 633, column: 53, scope: !14196)
!14209 = !DILocation(line: 632, column: 36, scope: !14196)
!14210 = !DILocation(line: 634, column: 25, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14196, file: !952, line: 634, column: 25)
!14212 = !DILocation(line: 634, column: 31, scope: !14211)
!14213 = !DILocation(line: 634, column: 25, scope: !14196)
!14214 = !DILocation(line: 635, column: 23, scope: !14211)
!14215 = !DILocation(line: 636, column: 30, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14211, file: !952, line: 636, column: 30)
!14217 = !DILocation(line: 636, column: 36, scope: !14216)
!14218 = !DILocation(line: 636, column: 30, scope: !14211)
!14219 = !DILocation(line: 638, column: 35, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14216, file: !952, line: 637, column: 23)
!14221 = !DILocation(line: 639, column: 25, scope: !14220)
!14222 = !DILocation(line: 641, column: 30, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14216, file: !952, line: 641, column: 30)
!14224 = !DILocation(line: 641, column: 36, scope: !14223)
!14225 = !DILocation(line: 641, column: 30, scope: !14216)
!14226 = !DILocation(line: 643, column: 35, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14223, file: !952, line: 642, column: 23)
!14228 = !DILocation(line: 644, column: 25, scope: !14227)
!14229 = !DILocation(line: 644, column: 32, scope: !14227)
!14230 = !DILocation(line: 644, column: 36, scope: !14227)
!14231 = !DILocation(line: 644, column: 34, scope: !14227)
!14232 = !DILocation(line: 644, column: 40, scope: !14227)
!14233 = !DILocation(line: 644, column: 38, scope: !14227)
!14234 = !DILocation(line: 644, column: 48, scope: !14227)
!14235 = !DILocation(line: 644, column: 51, scope: !14227)
!14236 = !DILocation(line: 644, column: 55, scope: !14227)
!14237 = !DILocation(line: 644, column: 59, scope: !14227)
!14238 = !DILocation(line: 644, column: 57, scope: !14227)
!14239 = !DILocation(line: 0, scope: !14227)
!14240 = !DILocation(line: 645, column: 28, scope: !14227)
!14241 = distinct !{!14241, !14228, !14240}
!14242 = !DILocation(line: 646, column: 25, scope: !14227)
!14243 = !DILocation(line: 654, column: 44, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14245, file: !952, line: 654, column: 29)
!14245 = distinct !DILexicalBlock(scope: !14223, file: !952, line: 649, column: 23)
!14246 = !DILocation(line: 655, column: 29, scope: !14244)
!14247 = !DILocation(line: 655, column: 32, scope: !14244)
!14248 = !DILocation(line: 655, column: 46, scope: !14244)
!14249 = !DILocation(line: 654, column: 29, scope: !14245)
!14250 = !DILocalVariable(name: "j", scope: !14251, file: !952, line: 657, type: !55)
!14251 = distinct !DILexicalBlock(scope: !14244, file: !952, line: 656, column: 27)
!14252 = !DILocation(line: 657, column: 36, scope: !14251)
!14253 = !DILocation(line: 658, column: 36, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !14251, file: !952, line: 658, column: 29)
!14255 = !DILocation(line: 658, column: 34, scope: !14254)
!14256 = !DILocation(line: 658, column: 41, scope: !14257)
!14257 = distinct !DILexicalBlock(scope: !14254, file: !952, line: 658, column: 29)
!14258 = !DILocation(line: 658, column: 45, scope: !14257)
!14259 = !DILocation(line: 658, column: 43, scope: !14257)
!14260 = !DILocation(line: 658, column: 29, scope: !14254)
!14261 = !DILocation(line: 659, column: 39, scope: !14257)
!14262 = !DILocation(line: 659, column: 43, scope: !14257)
!14263 = !DILocation(line: 659, column: 47, scope: !14257)
!14264 = !DILocation(line: 659, column: 45, scope: !14257)
!14265 = !DILocation(line: 659, column: 51, scope: !14257)
!14266 = !DILocation(line: 659, column: 49, scope: !14257)
!14267 = !DILocation(line: 659, column: 31, scope: !14257)
!14268 = !DILocation(line: 663, column: 35, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14257, file: !952, line: 660, column: 33)
!14270 = !DILocation(line: 666, column: 35, scope: !14269)
!14271 = !DILocation(line: 667, column: 33, scope: !14269)
!14272 = !DILocation(line: 658, column: 53, scope: !14257)
!14273 = !DILocation(line: 658, column: 29, scope: !14257)
!14274 = distinct !{!14274, !14260, !14275}
!14275 = !DILocation(line: 667, column: 33, scope: !14254)
!14276 = !DILocation(line: 668, column: 27, scope: !14251)
!14277 = !DILocation(line: 670, column: 41, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14245, file: !952, line: 670, column: 29)
!14279 = !DILocation(line: 670, column: 31, scope: !14278)
!14280 = !DILocation(line: 670, column: 29, scope: !14245)
!14281 = !DILocation(line: 671, column: 37, scope: !14278)
!14282 = !DILocation(line: 671, column: 27, scope: !14278)
!14283 = !DILocation(line: 672, column: 30, scope: !14245)
!14284 = !DILocation(line: 672, column: 27, scope: !14245)
!14285 = !DILocation(line: 674, column: 19, scope: !14196)
!14286 = !DILocation(line: 675, column: 26, scope: !14181)
!14287 = !DILocation(line: 675, column: 24, scope: !14181)
!14288 = distinct !{!14288, !14194, !14289}
!14289 = !DILocation(line: 675, column: 44, scope: !14181)
!14290 = !DILocation(line: 678, column: 40, scope: !14167)
!14291 = !DILocation(line: 678, column: 38, scope: !14167)
!14292 = !DILocation(line: 680, column: 21, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14167, file: !952, line: 680, column: 17)
!14294 = !DILocation(line: 680, column: 19, scope: !14293)
!14295 = !DILocation(line: 680, column: 23, scope: !14293)
!14296 = !DILocation(line: 680, column: 27, scope: !14293)
!14297 = !DILocation(line: 680, column: 45, scope: !14293)
!14298 = !DILocation(line: 680, column: 50, scope: !14293)
!14299 = !DILocation(line: 680, column: 17, scope: !14167)
!14300 = !DILocalVariable(name: "ilim", scope: !14301, file: !952, line: 684, type: !55)
!14301 = distinct !DILexicalBlock(scope: !14293, file: !952, line: 681, column: 15)
!14302 = !DILocation(line: 684, column: 24, scope: !14301)
!14303 = !DILocation(line: 684, column: 31, scope: !14301)
!14304 = !DILocation(line: 684, column: 35, scope: !14301)
!14305 = !DILocation(line: 684, column: 33, scope: !14301)
!14306 = !DILocation(line: 686, column: 17, scope: !14301)
!14307 = !DILocation(line: 688, column: 25, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !14309, file: !952, line: 688, column: 25)
!14309 = distinct !DILexicalBlock(scope: !14310, file: !952, line: 687, column: 19)
!14310 = distinct !DILexicalBlock(scope: !14311, file: !952, line: 686, column: 17)
!14311 = distinct !DILexicalBlock(scope: !14301, file: !952, line: 686, column: 17)
!14312 = !DILocation(line: 688, column: 43, scope: !14308)
!14313 = !DILocation(line: 688, column: 48, scope: !14308)
!14314 = !DILocation(line: 688, column: 25, scope: !14309)
!14315 = !DILocation(line: 690, column: 25, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !14308, file: !952, line: 689, column: 23)
!14317 = !DILocation(line: 690, column: 25, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14319, file: !952, line: 690, column: 25)
!14319 = distinct !DILexicalBlock(scope: !14316, file: !952, line: 690, column: 25)
!14320 = !DILocation(line: 690, column: 25, scope: !14319)
!14321 = !DILocation(line: 690, column: 25, scope: !14322)
!14322 = distinct !DILexicalBlock(scope: !14319, file: !952, line: 690, column: 25)
!14323 = !DILocation(line: 690, column: 25, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14322, file: !952, line: 690, column: 25)
!14325 = !DILocation(line: 690, column: 25, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14327, file: !952, line: 690, column: 25)
!14327 = distinct !DILexicalBlock(scope: !14324, file: !952, line: 690, column: 25)
!14328 = !DILocation(line: 690, column: 25, scope: !14327)
!14329 = !DILocation(line: 690, column: 25, scope: !14330)
!14330 = distinct !DILexicalBlock(scope: !14331, file: !952, line: 690, column: 25)
!14331 = distinct !DILexicalBlock(scope: !14324, file: !952, line: 690, column: 25)
!14332 = !DILocation(line: 690, column: 25, scope: !14331)
!14333 = !DILocation(line: 690, column: 25, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14335, file: !952, line: 690, column: 25)
!14335 = distinct !DILexicalBlock(scope: !14324, file: !952, line: 690, column: 25)
!14336 = !DILocation(line: 690, column: 25, scope: !14335)
!14337 = !DILocation(line: 690, column: 25, scope: !14338)
!14338 = distinct !DILexicalBlock(scope: !14339, file: !952, line: 690, column: 25)
!14339 = distinct !DILexicalBlock(scope: !14319, file: !952, line: 690, column: 25)
!14340 = !DILocation(line: 690, column: 25, scope: !14339)
!14341 = !DILocation(line: 691, column: 25, scope: !14316)
!14342 = !DILocation(line: 691, column: 25, scope: !14343)
!14343 = distinct !DILexicalBlock(scope: !14344, file: !952, line: 691, column: 25)
!14344 = distinct !DILexicalBlock(scope: !14316, file: !952, line: 691, column: 25)
!14345 = !DILocation(line: 691, column: 25, scope: !14344)
!14346 = !DILocation(line: 692, column: 25, scope: !14316)
!14347 = !DILocation(line: 692, column: 25, scope: !14348)
!14348 = distinct !DILexicalBlock(scope: !14349, file: !952, line: 692, column: 25)
!14349 = distinct !DILexicalBlock(scope: !14316, file: !952, line: 692, column: 25)
!14350 = !DILocation(line: 692, column: 25, scope: !14349)
!14351 = !DILocation(line: 693, column: 36, scope: !14316)
!14352 = !DILocation(line: 693, column: 38, scope: !14316)
!14353 = !DILocation(line: 693, column: 33, scope: !14316)
!14354 = !DILocation(line: 693, column: 29, scope: !14316)
!14355 = !DILocation(line: 693, column: 27, scope: !14316)
!14356 = !DILocation(line: 694, column: 23, scope: !14316)
!14357 = !DILocation(line: 695, column: 30, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14308, file: !952, line: 695, column: 30)
!14359 = !DILocation(line: 695, column: 30, scope: !14308)
!14360 = !DILocation(line: 697, column: 25, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14358, file: !952, line: 696, column: 23)
!14362 = !DILocation(line: 697, column: 25, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14364, file: !952, line: 697, column: 25)
!14364 = distinct !DILexicalBlock(scope: !14361, file: !952, line: 697, column: 25)
!14365 = !DILocation(line: 697, column: 25, scope: !14364)
!14366 = !DILocation(line: 698, column: 40, scope: !14361)
!14367 = !DILocation(line: 699, column: 23, scope: !14361)
!14368 = !DILocation(line: 700, column: 25, scope: !14369)
!14369 = distinct !DILexicalBlock(scope: !14309, file: !952, line: 700, column: 25)
!14370 = !DILocation(line: 700, column: 33, scope: !14369)
!14371 = !DILocation(line: 700, column: 35, scope: !14369)
!14372 = !DILocation(line: 700, column: 30, scope: !14369)
!14373 = !DILocation(line: 700, column: 25, scope: !14309)
!14374 = !DILocation(line: 701, column: 23, scope: !14369)
!14375 = !DILocation(line: 702, column: 21, scope: !14309)
!14376 = !DILocation(line: 702, column: 21, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14378, file: !952, line: 702, column: 21)
!14378 = distinct !DILexicalBlock(scope: !14309, file: !952, line: 702, column: 21)
!14379 = !DILocation(line: 702, column: 21, scope: !14378)
!14380 = !DILocation(line: 702, column: 21, scope: !14381)
!14381 = distinct !DILexicalBlock(scope: !14377, file: !952, line: 702, column: 21)
!14382 = !DILocation(line: 702, column: 21, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14384, file: !952, line: 702, column: 21)
!14384 = distinct !DILexicalBlock(scope: !14381, file: !952, line: 702, column: 21)
!14385 = !DILocation(line: 702, column: 21, scope: !14384)
!14386 = !DILocation(line: 702, column: 21, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14388, file: !952, line: 702, column: 21)
!14388 = distinct !DILexicalBlock(scope: !14381, file: !952, line: 702, column: 21)
!14389 = !DILocation(line: 702, column: 21, scope: !14388)
!14390 = !DILocation(line: 703, column: 21, scope: !14309)
!14391 = !DILocation(line: 703, column: 21, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14393, file: !952, line: 703, column: 21)
!14393 = distinct !DILexicalBlock(scope: !14309, file: !952, line: 703, column: 21)
!14394 = !DILocation(line: 703, column: 21, scope: !14393)
!14395 = !DILocation(line: 704, column: 25, scope: !14309)
!14396 = !DILocation(line: 704, column: 29, scope: !14309)
!14397 = !DILocation(line: 704, column: 23, scope: !14309)
!14398 = !DILocation(line: 686, column: 17, scope: !14310)
!14399 = distinct !{!14399, !14400, !14401}
!14400 = !DILocation(line: 686, column: 17, scope: !14311)
!14401 = !DILocation(line: 705, column: 19, scope: !14311)
!14402 = !DILocation(line: 707, column: 17, scope: !14301)
!14403 = !DILocation(line: 710, column: 9, scope: !13917)
!14404 = !DILocation(line: 712, column: 16, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !13863, file: !952, line: 712, column: 11)
!14406 = !DILocation(line: 712, column: 34, scope: !14405)
!14407 = !DILocation(line: 712, column: 37, scope: !14405)
!14408 = !DILocation(line: 712, column: 51, scope: !14405)
!14409 = !DILocation(line: 713, column: 15, scope: !14405)
!14410 = !DILocation(line: 713, column: 18, scope: !14405)
!14411 = !DILocation(line: 714, column: 14, scope: !14405)
!14412 = !DILocation(line: 714, column: 17, scope: !14405)
!14413 = !DILocation(line: 715, column: 14, scope: !14405)
!14414 = !DILocation(line: 715, column: 17, scope: !14405)
!14415 = !DILocation(line: 715, column: 33, scope: !14405)
!14416 = !DILocation(line: 715, column: 35, scope: !14405)
!14417 = !DILocation(line: 715, column: 51, scope: !14405)
!14418 = !DILocation(line: 715, column: 53, scope: !14405)
!14419 = !DILocation(line: 715, column: 47, scope: !14405)
!14420 = !DILocation(line: 715, column: 65, scope: !14405)
!14421 = !DILocation(line: 716, column: 11, scope: !14405)
!14422 = !DILocation(line: 716, column: 15, scope: !14405)
!14423 = !DILocation(line: 712, column: 11, scope: !13863)
!14424 = !DILocation(line: 717, column: 9, scope: !14405)
!14425 = !DILabel(scope: !13863, name: "store_escape", file: !952, line: 719)
!14426 = !DILocation(line: 719, column: 5, scope: !13863)
!14427 = !DILocation(line: 720, column: 7, scope: !13863)
!14428 = !DILocation(line: 720, column: 7, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14430, file: !952, line: 720, column: 7)
!14430 = distinct !DILexicalBlock(scope: !13863, file: !952, line: 720, column: 7)
!14431 = !DILocation(line: 720, column: 7, scope: !14430)
!14432 = !DILocation(line: 720, column: 7, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14430, file: !952, line: 720, column: 7)
!14434 = !DILocation(line: 720, column: 7, scope: !14435)
!14435 = distinct !DILexicalBlock(scope: !14433, file: !952, line: 720, column: 7)
!14436 = !DILocation(line: 720, column: 7, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14438, file: !952, line: 720, column: 7)
!14438 = distinct !DILexicalBlock(scope: !14435, file: !952, line: 720, column: 7)
!14439 = !DILocation(line: 720, column: 7, scope: !14438)
!14440 = !DILocation(line: 720, column: 7, scope: !14441)
!14441 = distinct !DILexicalBlock(scope: !14442, file: !952, line: 720, column: 7)
!14442 = distinct !DILexicalBlock(scope: !14435, file: !952, line: 720, column: 7)
!14443 = !DILocation(line: 720, column: 7, scope: !14442)
!14444 = !DILocation(line: 720, column: 7, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14446, file: !952, line: 720, column: 7)
!14446 = distinct !DILexicalBlock(scope: !14435, file: !952, line: 720, column: 7)
!14447 = !DILocation(line: 720, column: 7, scope: !14446)
!14448 = !DILocation(line: 720, column: 7, scope: !14449)
!14449 = distinct !DILexicalBlock(scope: !14450, file: !952, line: 720, column: 7)
!14450 = distinct !DILexicalBlock(scope: !14430, file: !952, line: 720, column: 7)
!14451 = !DILocation(line: 720, column: 7, scope: !14450)
!14452 = !DILabel(scope: !13863, name: "store_c", file: !952, line: 722)
!14453 = !DILocation(line: 722, column: 5, scope: !13863)
!14454 = !DILocation(line: 723, column: 7, scope: !13863)
!14455 = !DILocation(line: 723, column: 7, scope: !14456)
!14456 = distinct !DILexicalBlock(scope: !14457, file: !952, line: 723, column: 7)
!14457 = distinct !DILexicalBlock(scope: !13863, file: !952, line: 723, column: 7)
!14458 = !DILocation(line: 723, column: 7, scope: !14457)
!14459 = !DILocation(line: 723, column: 7, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14456, file: !952, line: 723, column: 7)
!14461 = !DILocation(line: 723, column: 7, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14463, file: !952, line: 723, column: 7)
!14463 = distinct !DILexicalBlock(scope: !14460, file: !952, line: 723, column: 7)
!14464 = !DILocation(line: 723, column: 7, scope: !14463)
!14465 = !DILocation(line: 723, column: 7, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14467, file: !952, line: 723, column: 7)
!14467 = distinct !DILexicalBlock(scope: !14460, file: !952, line: 723, column: 7)
!14468 = !DILocation(line: 723, column: 7, scope: !14467)
!14469 = !DILocation(line: 724, column: 7, scope: !13863)
!14470 = !DILocation(line: 724, column: 7, scope: !14471)
!14471 = distinct !DILexicalBlock(scope: !14472, file: !952, line: 724, column: 7)
!14472 = distinct !DILexicalBlock(scope: !13863, file: !952, line: 724, column: 7)
!14473 = !DILocation(line: 724, column: 7, scope: !14472)
!14474 = !DILocation(line: 726, column: 13, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !13863, file: !952, line: 726, column: 11)
!14476 = !DILocation(line: 726, column: 11, scope: !13863)
!14477 = !DILocation(line: 727, column: 38, scope: !14475)
!14478 = !DILocation(line: 727, column: 9, scope: !14475)
!14479 = !DILocation(line: 728, column: 5, scope: !13863)
!14480 = !DILocation(line: 400, column: 75, scope: !13852)
!14481 = !DILocation(line: 400, column: 3, scope: !13852)
!14482 = distinct !{!14482, !13861, !14483}
!14483 = !DILocation(line: 728, column: 5, scope: !13849)
!14484 = !DILocation(line: 730, column: 7, scope: !14485)
!14485 = distinct !DILexicalBlock(scope: !13713, file: !952, line: 730, column: 7)
!14486 = !DILocation(line: 730, column: 11, scope: !14485)
!14487 = !DILocation(line: 730, column: 16, scope: !14485)
!14488 = !DILocation(line: 730, column: 19, scope: !14485)
!14489 = !DILocation(line: 730, column: 33, scope: !14485)
!14490 = !DILocation(line: 731, column: 7, scope: !14485)
!14491 = !DILocation(line: 731, column: 10, scope: !14485)
!14492 = !DILocation(line: 730, column: 7, scope: !13713)
!14493 = !DILocation(line: 732, column: 5, scope: !14485)
!14494 = !DILocation(line: 738, column: 7, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !13713, file: !952, line: 738, column: 7)
!14496 = !DILocation(line: 738, column: 21, scope: !14495)
!14497 = !DILocation(line: 738, column: 51, scope: !14495)
!14498 = !DILocation(line: 738, column: 56, scope: !14495)
!14499 = !DILocation(line: 739, column: 7, scope: !14495)
!14500 = !DILocation(line: 739, column: 10, scope: !14495)
!14501 = !DILocation(line: 738, column: 7, scope: !13713)
!14502 = !DILocation(line: 741, column: 11, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14504, file: !952, line: 741, column: 11)
!14504 = distinct !DILexicalBlock(scope: !14495, file: !952, line: 740, column: 5)
!14505 = !DILocation(line: 741, column: 11, scope: !14504)
!14506 = !DILocation(line: 742, column: 42, scope: !14503)
!14507 = !DILocation(line: 742, column: 50, scope: !14503)
!14508 = !DILocation(line: 742, column: 67, scope: !14503)
!14509 = !DILocation(line: 742, column: 72, scope: !14503)
!14510 = !DILocation(line: 744, column: 42, scope: !14503)
!14511 = !DILocation(line: 744, column: 49, scope: !14503)
!14512 = !DILocation(line: 745, column: 42, scope: !14503)
!14513 = !DILocation(line: 745, column: 54, scope: !14503)
!14514 = !DILocation(line: 742, column: 16, scope: !14503)
!14515 = !DILocation(line: 742, column: 9, scope: !14503)
!14516 = !DILocation(line: 746, column: 18, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14503, file: !952, line: 746, column: 16)
!14518 = !DILocation(line: 746, column: 29, scope: !14517)
!14519 = !DILocation(line: 746, column: 32, scope: !14517)
!14520 = !DILocation(line: 746, column: 16, scope: !14503)
!14521 = !DILocation(line: 749, column: 24, scope: !14522)
!14522 = distinct !DILexicalBlock(scope: !14517, file: !952, line: 747, column: 9)
!14523 = !DILocation(line: 749, column: 22, scope: !14522)
!14524 = !DILocation(line: 750, column: 15, scope: !14522)
!14525 = !DILocation(line: 751, column: 11, scope: !14522)
!14526 = !DILocation(line: 753, column: 5, scope: !14504)
!14527 = !DILocation(line: 755, column: 7, scope: !14528)
!14528 = distinct !DILexicalBlock(scope: !13713, file: !952, line: 755, column: 7)
!14529 = !DILocation(line: 755, column: 20, scope: !14528)
!14530 = !DILocation(line: 755, column: 24, scope: !14528)
!14531 = !DILocation(line: 755, column: 7, scope: !13713)
!14532 = !DILocation(line: 756, column: 5, scope: !14528)
!14533 = !DILocation(line: 756, column: 13, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !14535, file: !952, line: 756, column: 5)
!14535 = distinct !DILexicalBlock(scope: !14528, file: !952, line: 756, column: 5)
!14536 = !DILocation(line: 756, column: 12, scope: !14534)
!14537 = !DILocation(line: 756, column: 5, scope: !14535)
!14538 = !DILocation(line: 757, column: 7, scope: !14534)
!14539 = !DILocation(line: 757, column: 7, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14541, file: !952, line: 757, column: 7)
!14541 = distinct !DILexicalBlock(scope: !14534, file: !952, line: 757, column: 7)
!14542 = !DILocation(line: 757, column: 7, scope: !14541)
!14543 = !DILocation(line: 756, column: 39, scope: !14534)
!14544 = !DILocation(line: 756, column: 5, scope: !14534)
!14545 = distinct !{!14545, !14537, !14546}
!14546 = !DILocation(line: 757, column: 7, scope: !14535)
!14547 = !DILocation(line: 759, column: 7, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !13713, file: !952, line: 759, column: 7)
!14549 = !DILocation(line: 759, column: 13, scope: !14548)
!14550 = !DILocation(line: 759, column: 11, scope: !14548)
!14551 = !DILocation(line: 759, column: 7, scope: !13713)
!14552 = !DILocation(line: 760, column: 5, scope: !14548)
!14553 = !DILocation(line: 760, column: 12, scope: !14548)
!14554 = !DILocation(line: 760, column: 17, scope: !14548)
!14555 = !DILocation(line: 761, column: 10, scope: !13713)
!14556 = !DILocation(line: 761, column: 3, scope: !13713)
!14557 = !DILabel(scope: !13713, name: "force_outer_quoting_style", file: !952, line: 763)
!14558 = !DILocation(line: 763, column: 2, scope: !13713)
!14559 = !DILocation(line: 766, column: 7, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !13713, file: !952, line: 766, column: 7)
!14561 = !DILocation(line: 766, column: 21, scope: !14560)
!14562 = !DILocation(line: 766, column: 51, scope: !14560)
!14563 = !DILocation(line: 766, column: 54, scope: !14560)
!14564 = !DILocation(line: 766, column: 7, scope: !13713)
!14565 = !DILocation(line: 767, column: 19, scope: !14560)
!14566 = !DILocation(line: 767, column: 5, scope: !14560)
!14567 = !DILocation(line: 768, column: 36, scope: !13713)
!14568 = !DILocation(line: 768, column: 44, scope: !13713)
!14569 = !DILocation(line: 768, column: 56, scope: !13713)
!14570 = !DILocation(line: 768, column: 61, scope: !13713)
!14571 = !DILocation(line: 769, column: 36, scope: !13713)
!14572 = !DILocation(line: 770, column: 36, scope: !13713)
!14573 = !DILocation(line: 770, column: 42, scope: !13713)
!14574 = !DILocation(line: 771, column: 36, scope: !13713)
!14575 = !DILocation(line: 771, column: 48, scope: !13713)
!14576 = !DILocation(line: 768, column: 10, scope: !13713)
!14577 = !DILocation(line: 768, column: 3, scope: !13713)
!14578 = !DILocation(line: 772, column: 1, scope: !13713)
!14579 = distinct !DISubprogram(name: "gettext_quote", scope: !952, file: !952, line: 207, type: !1042, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14580 = !DILocalVariable(name: "msgid", arg: 1, scope: !14579, file: !952, line: 207, type: !115)
!14581 = !DILocation(line: 207, column: 28, scope: !14579)
!14582 = !DILocalVariable(name: "s", arg: 2, scope: !14579, file: !952, line: 207, type: !926)
!14583 = !DILocation(line: 207, column: 54, scope: !14579)
!14584 = !DILocalVariable(name: "translation", scope: !14579, file: !952, line: 209, type: !115)
!14585 = !DILocation(line: 209, column: 15, scope: !14579)
!14586 = !DILocation(line: 209, column: 29, scope: !14579)
!14587 = !DILocalVariable(name: "locale_code", scope: !14579, file: !952, line: 210, type: !115)
!14588 = !DILocation(line: 210, column: 15, scope: !14579)
!14589 = !DILocation(line: 212, column: 7, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14579, file: !952, line: 212, column: 7)
!14591 = !DILocation(line: 212, column: 22, scope: !14590)
!14592 = !DILocation(line: 212, column: 19, scope: !14590)
!14593 = !DILocation(line: 212, column: 7, scope: !14579)
!14594 = !DILocation(line: 213, column: 12, scope: !14590)
!14595 = !DILocation(line: 213, column: 5, scope: !14590)
!14596 = !DILocation(line: 233, column: 17, scope: !14579)
!14597 = !DILocation(line: 233, column: 15, scope: !14579)
!14598 = !DILocation(line: 234, column: 7, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14579, file: !952, line: 234, column: 7)
!14600 = !DILocation(line: 234, column: 7, scope: !14579)
!14601 = !DILocation(line: 235, column: 12, scope: !14599)
!14602 = !DILocation(line: 235, column: 21, scope: !14599)
!14603 = !DILocation(line: 235, column: 5, scope: !14599)
!14604 = !DILocation(line: 236, column: 7, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14579, file: !952, line: 236, column: 7)
!14606 = !DILocation(line: 236, column: 7, scope: !14579)
!14607 = !DILocation(line: 237, column: 12, scope: !14605)
!14608 = !DILocation(line: 237, column: 21, scope: !14605)
!14609 = !DILocation(line: 237, column: 5, scope: !14605)
!14610 = !DILocation(line: 239, column: 11, scope: !14579)
!14611 = !DILocation(line: 239, column: 13, scope: !14579)
!14612 = !DILocation(line: 239, column: 3, scope: !14579)
!14613 = !DILocation(line: 240, column: 1, scope: !14579)
!14614 = distinct !DISubprogram(name: "quotearg_alloc", scope: !952, file: !952, line: 799, type: !975, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14615 = !DILocalVariable(name: "arg", arg: 1, scope: !14614, file: !952, line: 799, type: !115)
!14616 = !DILocation(line: 799, column: 29, scope: !14614)
!14617 = !DILocalVariable(name: "argsize", arg: 2, scope: !14614, file: !952, line: 799, type: !55)
!14618 = !DILocation(line: 799, column: 41, scope: !14614)
!14619 = !DILocalVariable(name: "o", arg: 3, scope: !14614, file: !952, line: 800, type: !962)
!14620 = !DILocation(line: 800, column: 47, scope: !14614)
!14621 = !DILocation(line: 802, column: 30, scope: !14614)
!14622 = !DILocation(line: 802, column: 35, scope: !14614)
!14623 = !DILocation(line: 802, column: 50, scope: !14614)
!14624 = !DILocation(line: 802, column: 10, scope: !14614)
!14625 = !DILocation(line: 802, column: 3, scope: !14614)
!14626 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !952, file: !952, line: 812, type: !977, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14627 = !DILocalVariable(name: "arg", arg: 1, scope: !14626, file: !952, line: 812, type: !115)
!14628 = !DILocation(line: 812, column: 33, scope: !14626)
!14629 = !DILocalVariable(name: "argsize", arg: 2, scope: !14626, file: !952, line: 812, type: !55)
!14630 = !DILocation(line: 812, column: 45, scope: !14626)
!14631 = !DILocalVariable(name: "size", arg: 3, scope: !14626, file: !952, line: 812, type: !626)
!14632 = !DILocation(line: 812, column: 62, scope: !14626)
!14633 = !DILocalVariable(name: "o", arg: 4, scope: !14626, file: !952, line: 813, type: !962)
!14634 = !DILocation(line: 813, column: 51, scope: !14626)
!14635 = !DILocalVariable(name: "p", scope: !14626, file: !952, line: 815, type: !962)
!14636 = !DILocation(line: 815, column: 33, scope: !14626)
!14637 = !DILocation(line: 815, column: 37, scope: !14626)
!14638 = !DILocation(line: 815, column: 41, scope: !14626)
!14639 = !DILocalVariable(name: "e", scope: !14626, file: !952, line: 816, type: !7)
!14640 = !DILocation(line: 816, column: 7, scope: !14626)
!14641 = !DILocation(line: 816, column: 11, scope: !14626)
!14642 = !DILocalVariable(name: "flags", scope: !14626, file: !952, line: 818, type: !7)
!14643 = !DILocation(line: 818, column: 7, scope: !14626)
!14644 = !DILocation(line: 818, column: 15, scope: !14626)
!14645 = !DILocation(line: 818, column: 18, scope: !14626)
!14646 = !DILocation(line: 818, column: 27, scope: !14626)
!14647 = !DILocation(line: 818, column: 24, scope: !14626)
!14648 = !DILocalVariable(name: "bufsize", scope: !14626, file: !952, line: 819, type: !55)
!14649 = !DILocation(line: 819, column: 10, scope: !14626)
!14650 = !DILocation(line: 819, column: 52, scope: !14626)
!14651 = !DILocation(line: 819, column: 57, scope: !14626)
!14652 = !DILocation(line: 819, column: 66, scope: !14626)
!14653 = !DILocation(line: 819, column: 69, scope: !14626)
!14654 = !DILocation(line: 820, column: 46, scope: !14626)
!14655 = !DILocation(line: 820, column: 53, scope: !14626)
!14656 = !DILocation(line: 820, column: 56, scope: !14626)
!14657 = !DILocation(line: 821, column: 46, scope: !14626)
!14658 = !DILocation(line: 821, column: 49, scope: !14626)
!14659 = !DILocation(line: 822, column: 46, scope: !14626)
!14660 = !DILocation(line: 822, column: 49, scope: !14626)
!14661 = !DILocation(line: 819, column: 20, scope: !14626)
!14662 = !DILocation(line: 822, column: 62, scope: !14626)
!14663 = !DILocalVariable(name: "buf", scope: !14626, file: !952, line: 823, type: !9)
!14664 = !DILocation(line: 823, column: 9, scope: !14626)
!14665 = !DILocation(line: 823, column: 27, scope: !14626)
!14666 = !DILocation(line: 823, column: 15, scope: !14626)
!14667 = !DILocation(line: 824, column: 29, scope: !14626)
!14668 = !DILocation(line: 824, column: 34, scope: !14626)
!14669 = !DILocation(line: 824, column: 43, scope: !14626)
!14670 = !DILocation(line: 824, column: 48, scope: !14626)
!14671 = !DILocation(line: 824, column: 57, scope: !14626)
!14672 = !DILocation(line: 824, column: 60, scope: !14626)
!14673 = !DILocation(line: 824, column: 67, scope: !14626)
!14674 = !DILocation(line: 825, column: 29, scope: !14626)
!14675 = !DILocation(line: 825, column: 32, scope: !14626)
!14676 = !DILocation(line: 826, column: 29, scope: !14626)
!14677 = !DILocation(line: 826, column: 32, scope: !14626)
!14678 = !DILocation(line: 826, column: 44, scope: !14626)
!14679 = !DILocation(line: 826, column: 47, scope: !14626)
!14680 = !DILocation(line: 824, column: 3, scope: !14626)
!14681 = !DILocation(line: 827, column: 11, scope: !14626)
!14682 = !DILocation(line: 827, column: 3, scope: !14626)
!14683 = !DILocation(line: 827, column: 9, scope: !14626)
!14684 = !DILocation(line: 828, column: 7, scope: !14685)
!14685 = distinct !DILexicalBlock(scope: !14626, file: !952, line: 828, column: 7)
!14686 = !DILocation(line: 828, column: 7, scope: !14626)
!14687 = !DILocation(line: 829, column: 13, scope: !14685)
!14688 = !DILocation(line: 829, column: 21, scope: !14685)
!14689 = !DILocation(line: 829, column: 6, scope: !14685)
!14690 = !DILocation(line: 829, column: 11, scope: !14685)
!14691 = !DILocation(line: 829, column: 5, scope: !14685)
!14692 = !DILocation(line: 830, column: 10, scope: !14626)
!14693 = !DILocation(line: 830, column: 3, scope: !14626)
!14694 = distinct !DISubprogram(name: "quotearg_free", scope: !952, file: !952, line: 848, type: !134, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14695 = !DILocalVariable(name: "sv", scope: !14694, file: !952, line: 850, type: !979)
!14696 = !DILocation(line: 850, column: 19, scope: !14694)
!14697 = !DILocation(line: 850, column: 24, scope: !14694)
!14698 = !DILocalVariable(name: "i", scope: !14694, file: !952, line: 851, type: !7)
!14699 = !DILocation(line: 851, column: 7, scope: !14694)
!14700 = !DILocation(line: 852, column: 10, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14694, file: !952, line: 852, column: 3)
!14702 = !DILocation(line: 852, column: 8, scope: !14701)
!14703 = !DILocation(line: 852, column: 15, scope: !14704)
!14704 = distinct !DILexicalBlock(scope: !14701, file: !952, line: 852, column: 3)
!14705 = !DILocation(line: 852, column: 19, scope: !14704)
!14706 = !DILocation(line: 852, column: 17, scope: !14704)
!14707 = !DILocation(line: 852, column: 3, scope: !14701)
!14708 = !DILocation(line: 853, column: 11, scope: !14704)
!14709 = !DILocation(line: 853, column: 14, scope: !14704)
!14710 = !DILocation(line: 853, column: 17, scope: !14704)
!14711 = !{!14712, !2996, i64 8}
!14712 = !{!"slotvec", !3180, i64 0, !2996, i64 8}
!14713 = !DILocation(line: 853, column: 5, scope: !14704)
!14714 = !DILocation(line: 852, column: 28, scope: !14704)
!14715 = !DILocation(line: 852, column: 3, scope: !14704)
!14716 = distinct !{!14716, !14707, !14717}
!14717 = !DILocation(line: 853, column: 20, scope: !14701)
!14718 = !DILocation(line: 854, column: 7, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !14694, file: !952, line: 854, column: 7)
!14720 = !DILocation(line: 854, column: 13, scope: !14719)
!14721 = !DILocation(line: 854, column: 17, scope: !14719)
!14722 = !DILocation(line: 854, column: 7, scope: !14694)
!14723 = !DILocation(line: 856, column: 13, scope: !14724)
!14724 = distinct !DILexicalBlock(scope: !14719, file: !952, line: 855, column: 5)
!14725 = !DILocation(line: 856, column: 19, scope: !14724)
!14726 = !DILocation(line: 856, column: 7, scope: !14724)
!14727 = !DILocation(line: 857, column: 21, scope: !14724)
!14728 = !{!14712, !3180, i64 0}
!14729 = !DILocation(line: 858, column: 20, scope: !14724)
!14730 = !DILocation(line: 859, column: 5, scope: !14724)
!14731 = !DILocation(line: 860, column: 7, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14694, file: !952, line: 860, column: 7)
!14733 = !DILocation(line: 860, column: 10, scope: !14732)
!14734 = !DILocation(line: 860, column: 7, scope: !14694)
!14735 = !DILocation(line: 862, column: 13, scope: !14736)
!14736 = distinct !DILexicalBlock(scope: !14732, file: !952, line: 861, column: 5)
!14737 = !DILocation(line: 862, column: 7, scope: !14736)
!14738 = !DILocation(line: 863, column: 15, scope: !14736)
!14739 = !DILocation(line: 864, column: 5, scope: !14736)
!14740 = !DILocation(line: 865, column: 10, scope: !14694)
!14741 = !DILocation(line: 866, column: 1, scope: !14694)
!14742 = distinct !DISubprogram(name: "quotearg_n", scope: !952, file: !952, line: 931, type: !984, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14743 = !DILocalVariable(name: "n", arg: 1, scope: !14742, file: !952, line: 931, type: !7)
!14744 = !DILocation(line: 931, column: 17, scope: !14742)
!14745 = !DILocalVariable(name: "arg", arg: 2, scope: !14742, file: !952, line: 931, type: !115)
!14746 = !DILocation(line: 931, column: 32, scope: !14742)
!14747 = !DILocation(line: 933, column: 30, scope: !14742)
!14748 = !DILocation(line: 933, column: 33, scope: !14742)
!14749 = !DILocation(line: 933, column: 10, scope: !14742)
!14750 = !DILocation(line: 933, column: 3, scope: !14742)
!14751 = distinct !DISubprogram(name: "quotearg_n_options", scope: !952, file: !952, line: 877, type: !1044, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14752 = !DILocalVariable(name: "n", arg: 1, scope: !14751, file: !952, line: 877, type: !7)
!14753 = !DILocation(line: 877, column: 25, scope: !14751)
!14754 = !DILocalVariable(name: "arg", arg: 2, scope: !14751, file: !952, line: 877, type: !115)
!14755 = !DILocation(line: 877, column: 40, scope: !14751)
!14756 = !DILocalVariable(name: "argsize", arg: 3, scope: !14751, file: !952, line: 877, type: !55)
!14757 = !DILocation(line: 877, column: 52, scope: !14751)
!14758 = !DILocalVariable(name: "options", arg: 4, scope: !14751, file: !952, line: 878, type: !962)
!14759 = !DILocation(line: 878, column: 51, scope: !14751)
!14760 = !DILocalVariable(name: "e", scope: !14751, file: !952, line: 880, type: !7)
!14761 = !DILocation(line: 880, column: 7, scope: !14751)
!14762 = !DILocation(line: 880, column: 11, scope: !14751)
!14763 = !DILocalVariable(name: "sv", scope: !14751, file: !952, line: 882, type: !979)
!14764 = !DILocation(line: 882, column: 19, scope: !14751)
!14765 = !DILocation(line: 882, column: 24, scope: !14751)
!14766 = !DILocation(line: 884, column: 7, scope: !14767)
!14767 = distinct !DILexicalBlock(scope: !14751, file: !952, line: 884, column: 7)
!14768 = !DILocation(line: 884, column: 9, scope: !14767)
!14769 = !DILocation(line: 884, column: 7, scope: !14751)
!14770 = !DILocation(line: 885, column: 5, scope: !14767)
!14771 = !DILocation(line: 887, column: 7, scope: !14772)
!14772 = distinct !DILexicalBlock(scope: !14751, file: !952, line: 887, column: 7)
!14773 = !DILocation(line: 887, column: 17, scope: !14772)
!14774 = !DILocation(line: 887, column: 14, scope: !14772)
!14775 = !DILocation(line: 887, column: 7, scope: !14751)
!14776 = !DILocalVariable(name: "preallocated", scope: !14777, file: !952, line: 889, type: !120)
!14777 = distinct !DILexicalBlock(scope: !14772, file: !952, line: 888, column: 5)
!14778 = !DILocation(line: 889, column: 12, scope: !14777)
!14779 = !DILocation(line: 889, column: 28, scope: !14777)
!14780 = !DILocation(line: 889, column: 31, scope: !14777)
!14781 = !DILocalVariable(name: "nmax", scope: !14777, file: !952, line: 890, type: !7)
!14782 = !DILocation(line: 890, column: 11, scope: !14777)
!14783 = !DILocation(line: 892, column: 11, scope: !14784)
!14784 = distinct !DILexicalBlock(scope: !14777, file: !952, line: 892, column: 11)
!14785 = !DILocation(line: 892, column: 18, scope: !14784)
!14786 = !DILocation(line: 892, column: 16, scope: !14784)
!14787 = !DILocation(line: 892, column: 11, scope: !14777)
!14788 = !DILocation(line: 893, column: 9, scope: !14784)
!14789 = !DILocation(line: 895, column: 32, scope: !14777)
!14790 = !DILocation(line: 895, column: 54, scope: !14777)
!14791 = !DILocation(line: 895, column: 59, scope: !14777)
!14792 = !DILocation(line: 895, column: 61, scope: !14777)
!14793 = !DILocation(line: 895, column: 58, scope: !14777)
!14794 = !DILocation(line: 895, column: 66, scope: !14777)
!14795 = !DILocation(line: 895, column: 22, scope: !14777)
!14796 = !DILocation(line: 895, column: 20, scope: !14777)
!14797 = !DILocation(line: 895, column: 15, scope: !14777)
!14798 = !DILocation(line: 896, column: 11, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14777, file: !952, line: 896, column: 11)
!14800 = !DILocation(line: 896, column: 11, scope: !14777)
!14801 = !DILocation(line: 897, column: 10, scope: !14799)
!14802 = !DILocation(line: 897, column: 15, scope: !14799)
!14803 = !{i64 0, i64 8, !3848, i64 8, i64 8, !2995}
!14804 = !DILocation(line: 897, column: 9, scope: !14799)
!14805 = !DILocation(line: 898, column: 15, scope: !14777)
!14806 = !DILocation(line: 898, column: 20, scope: !14777)
!14807 = !DILocation(line: 898, column: 18, scope: !14777)
!14808 = !DILocation(line: 898, column: 7, scope: !14777)
!14809 = !DILocation(line: 898, column: 32, scope: !14777)
!14810 = !DILocation(line: 898, column: 34, scope: !14777)
!14811 = !DILocation(line: 898, column: 40, scope: !14777)
!14812 = !DILocation(line: 898, column: 38, scope: !14777)
!14813 = !DILocation(line: 898, column: 31, scope: !14777)
!14814 = !DILocation(line: 898, column: 48, scope: !14777)
!14815 = !DILocation(line: 899, column: 16, scope: !14777)
!14816 = !DILocation(line: 899, column: 18, scope: !14777)
!14817 = !DILocation(line: 899, column: 14, scope: !14777)
!14818 = !DILocation(line: 900, column: 5, scope: !14777)
!14819 = !DILocalVariable(name: "size", scope: !14820, file: !952, line: 903, type: !55)
!14820 = distinct !DILexicalBlock(scope: !14751, file: !952, line: 902, column: 3)
!14821 = !DILocation(line: 903, column: 12, scope: !14820)
!14822 = !DILocation(line: 903, column: 19, scope: !14820)
!14823 = !DILocation(line: 903, column: 22, scope: !14820)
!14824 = !DILocation(line: 903, column: 25, scope: !14820)
!14825 = !DILocalVariable(name: "val", scope: !14820, file: !952, line: 904, type: !9)
!14826 = !DILocation(line: 904, column: 11, scope: !14820)
!14827 = !DILocation(line: 904, column: 17, scope: !14820)
!14828 = !DILocation(line: 904, column: 20, scope: !14820)
!14829 = !DILocation(line: 904, column: 23, scope: !14820)
!14830 = !DILocalVariable(name: "flags", scope: !14820, file: !952, line: 906, type: !7)
!14831 = !DILocation(line: 906, column: 9, scope: !14820)
!14832 = !DILocation(line: 906, column: 17, scope: !14820)
!14833 = !DILocation(line: 906, column: 26, scope: !14820)
!14834 = !DILocation(line: 906, column: 32, scope: !14820)
!14835 = !DILocalVariable(name: "qsize", scope: !14820, file: !952, line: 907, type: !55)
!14836 = !DILocation(line: 907, column: 12, scope: !14820)
!14837 = !DILocation(line: 907, column: 46, scope: !14820)
!14838 = !DILocation(line: 907, column: 51, scope: !14820)
!14839 = !DILocation(line: 907, column: 57, scope: !14820)
!14840 = !DILocation(line: 907, column: 62, scope: !14820)
!14841 = !DILocation(line: 908, column: 46, scope: !14820)
!14842 = !DILocation(line: 908, column: 55, scope: !14820)
!14843 = !DILocation(line: 908, column: 62, scope: !14820)
!14844 = !DILocation(line: 909, column: 46, scope: !14820)
!14845 = !DILocation(line: 909, column: 55, scope: !14820)
!14846 = !DILocation(line: 910, column: 46, scope: !14820)
!14847 = !DILocation(line: 910, column: 55, scope: !14820)
!14848 = !DILocation(line: 911, column: 46, scope: !14820)
!14849 = !DILocation(line: 911, column: 55, scope: !14820)
!14850 = !DILocation(line: 907, column: 20, scope: !14820)
!14851 = !DILocation(line: 913, column: 9, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14820, file: !952, line: 913, column: 9)
!14853 = !DILocation(line: 913, column: 17, scope: !14852)
!14854 = !DILocation(line: 913, column: 14, scope: !14852)
!14855 = !DILocation(line: 913, column: 9, scope: !14820)
!14856 = !DILocation(line: 915, column: 29, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14852, file: !952, line: 914, column: 7)
!14858 = !DILocation(line: 915, column: 35, scope: !14857)
!14859 = !DILocation(line: 915, column: 27, scope: !14857)
!14860 = !DILocation(line: 915, column: 9, scope: !14857)
!14861 = !DILocation(line: 915, column: 12, scope: !14857)
!14862 = !DILocation(line: 915, column: 15, scope: !14857)
!14863 = !DILocation(line: 915, column: 20, scope: !14857)
!14864 = !DILocation(line: 916, column: 13, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14857, file: !952, line: 916, column: 13)
!14866 = !DILocation(line: 916, column: 17, scope: !14865)
!14867 = !DILocation(line: 916, column: 13, scope: !14857)
!14868 = !DILocation(line: 917, column: 17, scope: !14865)
!14869 = !DILocation(line: 917, column: 11, scope: !14865)
!14870 = !DILocation(line: 918, column: 39, scope: !14857)
!14871 = !DILocation(line: 918, column: 27, scope: !14857)
!14872 = !DILocation(line: 918, column: 25, scope: !14857)
!14873 = !DILocation(line: 918, column: 9, scope: !14857)
!14874 = !DILocation(line: 918, column: 12, scope: !14857)
!14875 = !DILocation(line: 918, column: 15, scope: !14857)
!14876 = !DILocation(line: 918, column: 19, scope: !14857)
!14877 = !DILocation(line: 919, column: 35, scope: !14857)
!14878 = !DILocation(line: 919, column: 40, scope: !14857)
!14879 = !DILocation(line: 919, column: 46, scope: !14857)
!14880 = !DILocation(line: 919, column: 51, scope: !14857)
!14881 = !DILocation(line: 919, column: 60, scope: !14857)
!14882 = !DILocation(line: 919, column: 69, scope: !14857)
!14883 = !DILocation(line: 920, column: 35, scope: !14857)
!14884 = !DILocation(line: 920, column: 42, scope: !14857)
!14885 = !DILocation(line: 920, column: 51, scope: !14857)
!14886 = !DILocation(line: 921, column: 35, scope: !14857)
!14887 = !DILocation(line: 921, column: 44, scope: !14857)
!14888 = !DILocation(line: 922, column: 35, scope: !14857)
!14889 = !DILocation(line: 922, column: 44, scope: !14857)
!14890 = !DILocation(line: 919, column: 9, scope: !14857)
!14891 = !DILocation(line: 923, column: 7, scope: !14857)
!14892 = !DILocation(line: 925, column: 13, scope: !14820)
!14893 = !DILocation(line: 925, column: 5, scope: !14820)
!14894 = !DILocation(line: 925, column: 11, scope: !14820)
!14895 = !DILocation(line: 926, column: 12, scope: !14820)
!14896 = !DILocation(line: 926, column: 5, scope: !14820)
!14897 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !952, file: !952, line: 937, type: !986, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14898 = !DILocalVariable(name: "n", arg: 1, scope: !14897, file: !952, line: 937, type: !7)
!14899 = !DILocation(line: 937, column: 21, scope: !14897)
!14900 = !DILocalVariable(name: "arg", arg: 2, scope: !14897, file: !952, line: 937, type: !115)
!14901 = !DILocation(line: 937, column: 36, scope: !14897)
!14902 = !DILocalVariable(name: "argsize", arg: 3, scope: !14897, file: !952, line: 937, type: !55)
!14903 = !DILocation(line: 937, column: 48, scope: !14897)
!14904 = !DILocation(line: 939, column: 30, scope: !14897)
!14905 = !DILocation(line: 939, column: 33, scope: !14897)
!14906 = !DILocation(line: 939, column: 38, scope: !14897)
!14907 = !DILocation(line: 939, column: 10, scope: !14897)
!14908 = !DILocation(line: 939, column: 3, scope: !14897)
!14909 = distinct !DISubprogram(name: "quotearg", scope: !952, file: !952, line: 943, type: !988, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14910 = !DILocalVariable(name: "arg", arg: 1, scope: !14909, file: !952, line: 943, type: !115)
!14911 = !DILocation(line: 943, column: 23, scope: !14909)
!14912 = !DILocation(line: 945, column: 25, scope: !14909)
!14913 = !DILocation(line: 945, column: 10, scope: !14909)
!14914 = !DILocation(line: 945, column: 3, scope: !14909)
!14915 = distinct !DISubprogram(name: "quotearg_mem", scope: !952, file: !952, line: 949, type: !990, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14916 = !DILocalVariable(name: "arg", arg: 1, scope: !14915, file: !952, line: 949, type: !115)
!14917 = !DILocation(line: 949, column: 27, scope: !14915)
!14918 = !DILocalVariable(name: "argsize", arg: 2, scope: !14915, file: !952, line: 949, type: !55)
!14919 = !DILocation(line: 949, column: 39, scope: !14915)
!14920 = !DILocation(line: 951, column: 29, scope: !14915)
!14921 = !DILocation(line: 951, column: 34, scope: !14915)
!14922 = !DILocation(line: 951, column: 10, scope: !14915)
!14923 = !DILocation(line: 951, column: 3, scope: !14915)
!14924 = distinct !DISubprogram(name: "quotearg_n_style", scope: !952, file: !952, line: 955, type: !992, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14925 = !DILocalVariable(name: "n", arg: 1, scope: !14924, file: !952, line: 955, type: !7)
!14926 = !DILocation(line: 955, column: 23, scope: !14924)
!14927 = !DILocalVariable(name: "s", arg: 2, scope: !14924, file: !952, line: 955, type: !926)
!14928 = !DILocation(line: 955, column: 45, scope: !14924)
!14929 = !DILocalVariable(name: "arg", arg: 3, scope: !14924, file: !952, line: 955, type: !115)
!14930 = !DILocation(line: 955, column: 60, scope: !14924)
!14931 = !DILocalVariable(name: "o", scope: !14924, file: !952, line: 957, type: !963)
!14932 = !DILocation(line: 957, column: 32, scope: !14924)
!14933 = !DILocation(line: 957, column: 64, scope: !14924)
!14934 = !DILocation(line: 957, column: 36, scope: !14924)
!14935 = !DILocation(line: 958, column: 30, scope: !14924)
!14936 = !DILocation(line: 958, column: 33, scope: !14924)
!14937 = !DILocation(line: 958, column: 10, scope: !14924)
!14938 = !DILocation(line: 958, column: 3, scope: !14924)
!14939 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !952, file: !952, line: 193, type: !1046, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14940 = !DILocalVariable(name: "style", arg: 1, scope: !14939, file: !952, line: 193, type: !926)
!14941 = !DILocation(line: 193, column: 48, scope: !14939)
!14942 = !DILocalVariable(name: "o", scope: !14939, file: !952, line: 195, type: !951)
!14943 = !DILocation(line: 195, column: 26, scope: !14939)
!14944 = !DILocation(line: 196, column: 7, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14939, file: !952, line: 196, column: 7)
!14946 = !DILocation(line: 196, column: 13, scope: !14945)
!14947 = !DILocation(line: 196, column: 7, scope: !14939)
!14948 = !DILocation(line: 197, column: 5, scope: !14945)
!14949 = !DILocation(line: 198, column: 13, scope: !14939)
!14950 = !DILocation(line: 198, column: 5, scope: !14939)
!14951 = !DILocation(line: 198, column: 11, scope: !14939)
!14952 = !DILocation(line: 199, column: 3, scope: !14939)
!14953 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !952, file: !952, line: 962, type: !994, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14954 = !DILocalVariable(name: "n", arg: 1, scope: !14953, file: !952, line: 962, type: !7)
!14955 = !DILocation(line: 962, column: 27, scope: !14953)
!14956 = !DILocalVariable(name: "s", arg: 2, scope: !14953, file: !952, line: 962, type: !926)
!14957 = !DILocation(line: 962, column: 49, scope: !14953)
!14958 = !DILocalVariable(name: "arg", arg: 3, scope: !14953, file: !952, line: 963, type: !115)
!14959 = !DILocation(line: 963, column: 35, scope: !14953)
!14960 = !DILocalVariable(name: "argsize", arg: 4, scope: !14953, file: !952, line: 963, type: !55)
!14961 = !DILocation(line: 963, column: 47, scope: !14953)
!14962 = !DILocalVariable(name: "o", scope: !14953, file: !952, line: 965, type: !963)
!14963 = !DILocation(line: 965, column: 32, scope: !14953)
!14964 = !DILocation(line: 965, column: 64, scope: !14953)
!14965 = !DILocation(line: 965, column: 36, scope: !14953)
!14966 = !DILocation(line: 966, column: 30, scope: !14953)
!14967 = !DILocation(line: 966, column: 33, scope: !14953)
!14968 = !DILocation(line: 966, column: 38, scope: !14953)
!14969 = !DILocation(line: 966, column: 10, scope: !14953)
!14970 = !DILocation(line: 966, column: 3, scope: !14953)
!14971 = distinct !DISubprogram(name: "quotearg_style", scope: !952, file: !952, line: 970, type: !996, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14972 = !DILocalVariable(name: "s", arg: 1, scope: !14971, file: !952, line: 970, type: !926)
!14973 = !DILocation(line: 970, column: 36, scope: !14971)
!14974 = !DILocalVariable(name: "arg", arg: 2, scope: !14971, file: !952, line: 970, type: !115)
!14975 = !DILocation(line: 970, column: 51, scope: !14971)
!14976 = !DILocation(line: 972, column: 31, scope: !14971)
!14977 = !DILocation(line: 972, column: 34, scope: !14971)
!14978 = !DILocation(line: 972, column: 10, scope: !14971)
!14979 = !DILocation(line: 972, column: 3, scope: !14971)
!14980 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !952, file: !952, line: 976, type: !998, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14981 = !DILocalVariable(name: "s", arg: 1, scope: !14980, file: !952, line: 976, type: !926)
!14982 = !DILocation(line: 976, column: 40, scope: !14980)
!14983 = !DILocalVariable(name: "arg", arg: 2, scope: !14980, file: !952, line: 976, type: !115)
!14984 = !DILocation(line: 976, column: 55, scope: !14980)
!14985 = !DILocalVariable(name: "argsize", arg: 3, scope: !14980, file: !952, line: 976, type: !55)
!14986 = !DILocation(line: 976, column: 67, scope: !14980)
!14987 = !DILocation(line: 978, column: 35, scope: !14980)
!14988 = !DILocation(line: 978, column: 38, scope: !14980)
!14989 = !DILocation(line: 978, column: 43, scope: !14980)
!14990 = !DILocation(line: 978, column: 10, scope: !14980)
!14991 = !DILocation(line: 978, column: 3, scope: !14980)
!14992 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !952, file: !952, line: 982, type: !1000, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!14993 = !DILocalVariable(name: "arg", arg: 1, scope: !14992, file: !952, line: 982, type: !115)
!14994 = !DILocation(line: 982, column: 32, scope: !14992)
!14995 = !DILocalVariable(name: "argsize", arg: 2, scope: !14992, file: !952, line: 982, type: !55)
!14996 = !DILocation(line: 982, column: 44, scope: !14992)
!14997 = !DILocalVariable(name: "ch", arg: 3, scope: !14992, file: !952, line: 982, type: !10)
!14998 = !DILocation(line: 982, column: 58, scope: !14992)
!14999 = !DILocalVariable(name: "options", scope: !14992, file: !952, line: 984, type: !951)
!15000 = !DILocation(line: 984, column: 26, scope: !14992)
!15001 = !DILocation(line: 985, column: 13, scope: !14992)
!15002 = !{i64 0, i64 4, !3657, i64 4, i64 4, !2982, i64 8, i64 32, !3657, i64 40, i64 8, !2995, i64 48, i64 8, !2995}
!15003 = !DILocation(line: 986, column: 31, scope: !14992)
!15004 = !DILocation(line: 986, column: 3, scope: !14992)
!15005 = !DILocation(line: 987, column: 33, scope: !14992)
!15006 = !DILocation(line: 987, column: 38, scope: !14992)
!15007 = !DILocation(line: 987, column: 10, scope: !14992)
!15008 = !DILocation(line: 987, column: 3, scope: !14992)
!15009 = distinct !DISubprogram(name: "quotearg_char", scope: !952, file: !952, line: 991, type: !1002, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!15010 = !DILocalVariable(name: "arg", arg: 1, scope: !15009, file: !952, line: 991, type: !115)
!15011 = !DILocation(line: 991, column: 28, scope: !15009)
!15012 = !DILocalVariable(name: "ch", arg: 2, scope: !15009, file: !952, line: 991, type: !10)
!15013 = !DILocation(line: 991, column: 38, scope: !15009)
!15014 = !DILocation(line: 993, column: 29, scope: !15009)
!15015 = !DILocation(line: 993, column: 44, scope: !15009)
!15016 = !DILocation(line: 993, column: 10, scope: !15009)
!15017 = !DILocation(line: 993, column: 3, scope: !15009)
!15018 = distinct !DISubprogram(name: "quotearg_colon", scope: !952, file: !952, line: 997, type: !988, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!15019 = !DILocalVariable(name: "arg", arg: 1, scope: !15018, file: !952, line: 997, type: !115)
!15020 = !DILocation(line: 997, column: 29, scope: !15018)
!15021 = !DILocation(line: 999, column: 25, scope: !15018)
!15022 = !DILocation(line: 999, column: 10, scope: !15018)
!15023 = !DILocation(line: 999, column: 3, scope: !15018)
!15024 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !952, file: !952, line: 1003, type: !990, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!15025 = !DILocalVariable(name: "arg", arg: 1, scope: !15024, file: !952, line: 1003, type: !115)
!15026 = !DILocation(line: 1003, column: 33, scope: !15024)
!15027 = !DILocalVariable(name: "argsize", arg: 2, scope: !15024, file: !952, line: 1003, type: !55)
!15028 = !DILocation(line: 1003, column: 45, scope: !15024)
!15029 = !DILocation(line: 1005, column: 29, scope: !15024)
!15030 = !DILocation(line: 1005, column: 34, scope: !15024)
!15031 = !DILocation(line: 1005, column: 10, scope: !15024)
!15032 = !DILocation(line: 1005, column: 3, scope: !15024)
!15033 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !952, file: !952, line: 1009, type: !992, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!15034 = !DILocalVariable(name: "n", arg: 1, scope: !15033, file: !952, line: 1009, type: !7)
!15035 = !DILocation(line: 1009, column: 29, scope: !15033)
!15036 = !DILocalVariable(name: "s", arg: 2, scope: !15033, file: !952, line: 1009, type: !926)
!15037 = !DILocation(line: 1009, column: 51, scope: !15033)
!15038 = !DILocalVariable(name: "arg", arg: 3, scope: !15033, file: !952, line: 1009, type: !115)
!15039 = !DILocation(line: 1009, column: 66, scope: !15033)
!15040 = !DILocalVariable(name: "options", scope: !15033, file: !952, line: 1011, type: !951)
!15041 = !DILocation(line: 1011, column: 26, scope: !15033)
!15042 = !DILocation(line: 1012, column: 41, scope: !15033)
!15043 = !DILocation(line: 1012, column: 13, scope: !15033)
!15044 = !DILocation(line: 1013, column: 3, scope: !15033)
!15045 = !DILocation(line: 1014, column: 30, scope: !15033)
!15046 = !DILocation(line: 1014, column: 33, scope: !15033)
!15047 = !DILocation(line: 1014, column: 10, scope: !15033)
!15048 = !DILocation(line: 1014, column: 3, scope: !15033)
!15049 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !952, file: !952, line: 1018, type: !1004, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!15050 = !DILocalVariable(name: "n", arg: 1, scope: !15049, file: !952, line: 1018, type: !7)
!15051 = !DILocation(line: 1018, column: 24, scope: !15049)
!15052 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15049, file: !952, line: 1018, type: !115)
!15053 = !DILocation(line: 1018, column: 39, scope: !15049)
!15054 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15049, file: !952, line: 1019, type: !115)
!15055 = !DILocation(line: 1019, column: 32, scope: !15049)
!15056 = !DILocalVariable(name: "arg", arg: 4, scope: !15049, file: !952, line: 1019, type: !115)
!15057 = !DILocation(line: 1019, column: 57, scope: !15049)
!15058 = !DILocation(line: 1021, column: 33, scope: !15049)
!15059 = !DILocation(line: 1021, column: 36, scope: !15049)
!15060 = !DILocation(line: 1021, column: 48, scope: !15049)
!15061 = !DILocation(line: 1021, column: 61, scope: !15049)
!15062 = !DILocation(line: 1021, column: 10, scope: !15049)
!15063 = !DILocation(line: 1021, column: 3, scope: !15049)
!15064 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !952, file: !952, line: 1026, type: !1006, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!15065 = !DILocalVariable(name: "n", arg: 1, scope: !15064, file: !952, line: 1026, type: !7)
!15066 = !DILocation(line: 1026, column: 28, scope: !15064)
!15067 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15064, file: !952, line: 1026, type: !115)
!15068 = !DILocation(line: 1026, column: 43, scope: !15064)
!15069 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15064, file: !952, line: 1027, type: !115)
!15070 = !DILocation(line: 1027, column: 36, scope: !15064)
!15071 = !DILocalVariable(name: "arg", arg: 4, scope: !15064, file: !952, line: 1028, type: !115)
!15072 = !DILocation(line: 1028, column: 36, scope: !15064)
!15073 = !DILocalVariable(name: "argsize", arg: 5, scope: !15064, file: !952, line: 1028, type: !55)
!15074 = !DILocation(line: 1028, column: 48, scope: !15064)
!15075 = !DILocalVariable(name: "o", scope: !15064, file: !952, line: 1030, type: !951)
!15076 = !DILocation(line: 1030, column: 26, scope: !15064)
!15077 = !DILocation(line: 1030, column: 30, scope: !15064)
!15078 = !DILocation(line: 1031, column: 27, scope: !15064)
!15079 = !DILocation(line: 1031, column: 39, scope: !15064)
!15080 = !DILocation(line: 1031, column: 3, scope: !15064)
!15081 = !DILocation(line: 1032, column: 30, scope: !15064)
!15082 = !DILocation(line: 1032, column: 33, scope: !15064)
!15083 = !DILocation(line: 1032, column: 38, scope: !15064)
!15084 = !DILocation(line: 1032, column: 10, scope: !15064)
!15085 = !DILocation(line: 1032, column: 3, scope: !15064)
!15086 = distinct !DISubprogram(name: "quotearg_custom", scope: !952, file: !952, line: 1036, type: !1008, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!15087 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15086, file: !952, line: 1036, type: !115)
!15088 = !DILocation(line: 1036, column: 30, scope: !15086)
!15089 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15086, file: !952, line: 1036, type: !115)
!15090 = !DILocation(line: 1036, column: 54, scope: !15086)
!15091 = !DILocalVariable(name: "arg", arg: 3, scope: !15086, file: !952, line: 1037, type: !115)
!15092 = !DILocation(line: 1037, column: 30, scope: !15086)
!15093 = !DILocation(line: 1039, column: 32, scope: !15086)
!15094 = !DILocation(line: 1039, column: 44, scope: !15086)
!15095 = !DILocation(line: 1039, column: 57, scope: !15086)
!15096 = !DILocation(line: 1039, column: 10, scope: !15086)
!15097 = !DILocation(line: 1039, column: 3, scope: !15086)
!15098 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !952, file: !952, line: 1043, type: !1010, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!15099 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15098, file: !952, line: 1043, type: !115)
!15100 = !DILocation(line: 1043, column: 34, scope: !15098)
!15101 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15098, file: !952, line: 1043, type: !115)
!15102 = !DILocation(line: 1043, column: 58, scope: !15098)
!15103 = !DILocalVariable(name: "arg", arg: 3, scope: !15098, file: !952, line: 1044, type: !115)
!15104 = !DILocation(line: 1044, column: 34, scope: !15098)
!15105 = !DILocalVariable(name: "argsize", arg: 4, scope: !15098, file: !952, line: 1044, type: !55)
!15106 = !DILocation(line: 1044, column: 46, scope: !15098)
!15107 = !DILocation(line: 1046, column: 36, scope: !15098)
!15108 = !DILocation(line: 1046, column: 48, scope: !15098)
!15109 = !DILocation(line: 1046, column: 61, scope: !15098)
!15110 = !DILocation(line: 1047, column: 33, scope: !15098)
!15111 = !DILocation(line: 1046, column: 10, scope: !15098)
!15112 = !DILocation(line: 1046, column: 3, scope: !15098)
!15113 = distinct !DISubprogram(name: "quote_n_mem", scope: !952, file: !952, line: 1061, type: !1012, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!15114 = !DILocalVariable(name: "n", arg: 1, scope: !15113, file: !952, line: 1061, type: !7)
!15115 = !DILocation(line: 1061, column: 18, scope: !15113)
!15116 = !DILocalVariable(name: "arg", arg: 2, scope: !15113, file: !952, line: 1061, type: !115)
!15117 = !DILocation(line: 1061, column: 33, scope: !15113)
!15118 = !DILocalVariable(name: "argsize", arg: 3, scope: !15113, file: !952, line: 1061, type: !55)
!15119 = !DILocation(line: 1061, column: 45, scope: !15113)
!15120 = !DILocation(line: 1063, column: 30, scope: !15113)
!15121 = !DILocation(line: 1063, column: 33, scope: !15113)
!15122 = !DILocation(line: 1063, column: 38, scope: !15113)
!15123 = !DILocation(line: 1063, column: 10, scope: !15113)
!15124 = !DILocation(line: 1063, column: 3, scope: !15113)
!15125 = distinct !DISubprogram(name: "quote_mem", scope: !952, file: !952, line: 1067, type: !1014, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!15126 = !DILocalVariable(name: "arg", arg: 1, scope: !15125, file: !952, line: 1067, type: !115)
!15127 = !DILocation(line: 1067, column: 24, scope: !15125)
!15128 = !DILocalVariable(name: "argsize", arg: 2, scope: !15125, file: !952, line: 1067, type: !55)
!15129 = !DILocation(line: 1067, column: 36, scope: !15125)
!15130 = !DILocation(line: 1069, column: 26, scope: !15125)
!15131 = !DILocation(line: 1069, column: 31, scope: !15125)
!15132 = !DILocation(line: 1069, column: 10, scope: !15125)
!15133 = !DILocation(line: 1069, column: 3, scope: !15125)
!15134 = distinct !DISubprogram(name: "quote_n", scope: !952, file: !952, line: 1073, type: !1016, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!15135 = !DILocalVariable(name: "n", arg: 1, scope: !15134, file: !952, line: 1073, type: !7)
!15136 = !DILocation(line: 1073, column: 14, scope: !15134)
!15137 = !DILocalVariable(name: "arg", arg: 2, scope: !15134, file: !952, line: 1073, type: !115)
!15138 = !DILocation(line: 1073, column: 29, scope: !15134)
!15139 = !DILocation(line: 1075, column: 23, scope: !15134)
!15140 = !DILocation(line: 1075, column: 26, scope: !15134)
!15141 = !DILocation(line: 1075, column: 10, scope: !15134)
!15142 = !DILocation(line: 1075, column: 3, scope: !15134)
!15143 = distinct !DISubprogram(name: "quote", scope: !952, file: !952, line: 1079, type: !1018, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !923, retainedNodes: !143)
!15144 = !DILocalVariable(name: "arg", arg: 1, scope: !15143, file: !952, line: 1079, type: !115)
!15145 = !DILocation(line: 1079, column: 20, scope: !15143)
!15146 = !DILocation(line: 1081, column: 22, scope: !15143)
!15147 = !DILocation(line: 1081, column: 10, scope: !15143)
!15148 = !DILocation(line: 1081, column: 3, scope: !15143)
!15149 = distinct !DISubprogram(name: "renameatu", scope: !15150, file: !15150, line: 77, type: !1825, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1822, retainedNodes: !143)
!15150 = !DIFile(filename: "lib/renameatu.c", directory: "/home/mbarbar/software/coreutils-8.31")
!15151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !15152)
!15152 = !{!15153, !15154, !15155, !15156, !15157, !15158, !15159, !15160, !15161, !15162, !15163, !15164, !15169, !15170, !15171}
!15153 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15151, file: !318, line: 48, baseType: !231, size: 64)
!15154 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15151, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!15155 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15151, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!15156 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15151, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!15157 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15151, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!15158 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15151, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!15159 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15151, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!15160 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15151, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!15161 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15151, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!15162 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15151, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!15163 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15151, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!15164 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15151, file: !318, line: 91, baseType: !15165, size: 128, offset: 576)
!15165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !15166)
!15166 = !{!15167, !15168}
!15167 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15165, file: !338, line: 11, baseType: !341, size: 64)
!15168 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15165, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!15169 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15151, file: !318, line: 92, baseType: !15165, size: 128, offset: 704)
!15170 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15151, file: !318, line: 93, baseType: !15165, size: 128, offset: 832)
!15171 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15151, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!15172 = !DILocalVariable(name: "fd1", arg: 1, scope: !15149, file: !15150, line: 77, type: !7)
!15173 = !DILocation(line: 77, column: 16, scope: !15149)
!15174 = !DILocalVariable(name: "src", arg: 2, scope: !15149, file: !15150, line: 77, type: !115)
!15175 = !DILocation(line: 77, column: 33, scope: !15149)
!15176 = !DILocalVariable(name: "fd2", arg: 3, scope: !15149, file: !15150, line: 77, type: !7)
!15177 = !DILocation(line: 77, column: 42, scope: !15149)
!15178 = !DILocalVariable(name: "dst", arg: 4, scope: !15149, file: !15150, line: 77, type: !115)
!15179 = !DILocation(line: 77, column: 59, scope: !15149)
!15180 = !DILocalVariable(name: "flags", arg: 5, scope: !15149, file: !15150, line: 78, type: !70)
!15181 = !DILocation(line: 78, column: 25, scope: !15149)
!15182 = !DILocalVariable(name: "ret_val", scope: !15149, file: !15150, line: 80, type: !7)
!15183 = !DILocation(line: 80, column: 7, scope: !15149)
!15184 = !DILocalVariable(name: "err", scope: !15149, file: !15150, line: 81, type: !7)
!15185 = !DILocation(line: 81, column: 7, scope: !15149)
!15186 = !DILocation(line: 84, column: 24, scope: !15149)
!15187 = !DILocation(line: 84, column: 29, scope: !15149)
!15188 = !DILocation(line: 84, column: 34, scope: !15149)
!15189 = !DILocation(line: 84, column: 39, scope: !15149)
!15190 = !DILocation(line: 84, column: 44, scope: !15149)
!15191 = !DILocation(line: 84, column: 13, scope: !15149)
!15192 = !DILocation(line: 84, column: 11, scope: !15149)
!15193 = !DILocation(line: 85, column: 9, scope: !15149)
!15194 = !DILocation(line: 85, column: 7, scope: !15149)
!15195 = !DILocation(line: 99, column: 10, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15149, file: !15150, line: 99, column: 7)
!15197 = !DILocation(line: 99, column: 18, scope: !15196)
!15198 = !DILocation(line: 99, column: 22, scope: !15196)
!15199 = !DILocation(line: 99, column: 26, scope: !15196)
!15200 = !DILocation(line: 99, column: 30, scope: !15196)
!15201 = !DILocation(line: 99, column: 40, scope: !15196)
!15202 = !DILocation(line: 99, column: 43, scope: !15196)
!15203 = !DILocation(line: 99, column: 47, scope: !15196)
!15204 = !DILocation(line: 99, column: 57, scope: !15196)
!15205 = !DILocation(line: 99, column: 60, scope: !15196)
!15206 = !DILocation(line: 99, column: 64, scope: !15196)
!15207 = !DILocation(line: 99, column: 7, scope: !15149)
!15208 = !DILocation(line: 100, column: 12, scope: !15196)
!15209 = !DILocation(line: 100, column: 5, scope: !15196)
!15210 = !DILocalVariable(name: "src_len", scope: !15211, file: !15150, line: 104, type: !55)
!15211 = distinct !DILexicalBlock(scope: !15149, file: !15150, line: 103, column: 3)
!15212 = !DILocation(line: 104, column: 10, scope: !15211)
!15213 = !DILocalVariable(name: "dst_len", scope: !15211, file: !15150, line: 105, type: !55)
!15214 = !DILocation(line: 105, column: 10, scope: !15211)
!15215 = !DILocalVariable(name: "src_temp", scope: !15211, file: !15150, line: 106, type: !9)
!15216 = !DILocation(line: 106, column: 9, scope: !15211)
!15217 = !DILocation(line: 106, column: 29, scope: !15211)
!15218 = !DILocalVariable(name: "dst_temp", scope: !15211, file: !15150, line: 107, type: !9)
!15219 = !DILocation(line: 107, column: 9, scope: !15211)
!15220 = !DILocation(line: 107, column: 29, scope: !15211)
!15221 = !DILocalVariable(name: "src_slash", scope: !15211, file: !15150, line: 108, type: !120)
!15222 = !DILocation(line: 108, column: 8, scope: !15211)
!15223 = !DILocalVariable(name: "dst_slash", scope: !15211, file: !15150, line: 109, type: !120)
!15224 = !DILocation(line: 109, column: 8, scope: !15211)
!15225 = !DILocalVariable(name: "rename_errno", scope: !15211, file: !15150, line: 110, type: !7)
!15226 = !DILocation(line: 110, column: 7, scope: !15211)
!15227 = !DILocalVariable(name: "src_st", scope: !15211, file: !15150, line: 111, type: !15151)
!15228 = !DILocation(line: 111, column: 15, scope: !15211)
!15229 = !DILocalVariable(name: "dst_st", scope: !15211, file: !15150, line: 112, type: !15151)
!15230 = !DILocation(line: 112, column: 15, scope: !15211)
!15231 = !DILocalVariable(name: "dst_found_nonexistent", scope: !15211, file: !15150, line: 113, type: !120)
!15232 = !DILocation(line: 113, column: 8, scope: !15211)
!15233 = !DILocation(line: 115, column: 7, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15211, file: !15150, line: 115, column: 7)
!15235 = !DILocation(line: 115, column: 13, scope: !15234)
!15236 = !DILocation(line: 115, column: 7, scope: !15211)
!15237 = !DILocation(line: 118, column: 11, scope: !15238)
!15238 = distinct !DILexicalBlock(scope: !15239, file: !15150, line: 118, column: 11)
!15239 = distinct !DILexicalBlock(scope: !15234, file: !15150, line: 116, column: 5)
!15240 = !DILocation(line: 118, column: 17, scope: !15238)
!15241 = !DILocation(line: 118, column: 11, scope: !15239)
!15242 = !DILocation(line: 119, column: 16, scope: !15238)
!15243 = !DILocation(line: 119, column: 9, scope: !15238)
!15244 = !DILocation(line: 124, column: 24, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15246, file: !15150, line: 124, column: 15)
!15246 = distinct !DILexicalBlock(scope: !15238, file: !15150, line: 121, column: 9)
!15247 = !DILocation(line: 124, column: 29, scope: !15245)
!15248 = !DILocation(line: 124, column: 15, scope: !15245)
!15249 = !DILocation(line: 124, column: 43, scope: !15245)
!15250 = !DILocation(line: 124, column: 48, scope: !15245)
!15251 = !DILocation(line: 124, column: 51, scope: !15245)
!15252 = !DILocation(line: 124, column: 57, scope: !15245)
!15253 = !DILocation(line: 124, column: 15, scope: !15246)
!15254 = !DILocation(line: 125, column: 20, scope: !15245)
!15255 = !DILocation(line: 125, column: 13, scope: !15245)
!15256 = !DILocation(line: 126, column: 15, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15246, file: !15150, line: 126, column: 15)
!15258 = !DILocation(line: 126, column: 21, scope: !15257)
!15259 = !DILocation(line: 126, column: 15, scope: !15246)
!15260 = !DILocation(line: 127, column: 13, scope: !15257)
!15261 = !DILocation(line: 128, column: 33, scope: !15246)
!15262 = !DILocation(line: 130, column: 5, scope: !15239)
!15263 = !DILocation(line: 133, column: 21, scope: !15211)
!15264 = !DILocation(line: 133, column: 13, scope: !15211)
!15265 = !DILocation(line: 133, column: 11, scope: !15211)
!15266 = !DILocation(line: 134, column: 21, scope: !15211)
!15267 = !DILocation(line: 134, column: 13, scope: !15211)
!15268 = !DILocation(line: 134, column: 11, scope: !15211)
!15269 = !DILocation(line: 135, column: 8, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !15211, file: !15150, line: 135, column: 7)
!15271 = !DILocation(line: 135, column: 16, scope: !15270)
!15272 = !DILocation(line: 135, column: 20, scope: !15270)
!15273 = !DILocation(line: 135, column: 7, scope: !15211)
!15274 = !DILocation(line: 136, column: 22, scope: !15270)
!15275 = !DILocation(line: 136, column: 27, scope: !15270)
!15276 = !DILocation(line: 136, column: 32, scope: !15270)
!15277 = !DILocation(line: 136, column: 37, scope: !15270)
!15278 = !DILocation(line: 136, column: 12, scope: !15270)
!15279 = !DILocation(line: 136, column: 5, scope: !15270)
!15280 = !DILocation(line: 138, column: 15, scope: !15211)
!15281 = !DILocation(line: 138, column: 19, scope: !15211)
!15282 = !DILocation(line: 138, column: 27, scope: !15211)
!15283 = !DILocation(line: 138, column: 32, scope: !15211)
!15284 = !DILocation(line: 138, column: 13, scope: !15211)
!15285 = !DILocation(line: 139, column: 15, scope: !15211)
!15286 = !DILocation(line: 139, column: 19, scope: !15211)
!15287 = !DILocation(line: 139, column: 27, scope: !15211)
!15288 = !DILocation(line: 139, column: 32, scope: !15211)
!15289 = !DILocation(line: 139, column: 13, scope: !15211)
!15290 = !DILocation(line: 140, column: 8, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15211, file: !15150, line: 140, column: 7)
!15292 = !DILocation(line: 140, column: 18, scope: !15291)
!15293 = !DILocation(line: 140, column: 22, scope: !15291)
!15294 = !DILocation(line: 140, column: 7, scope: !15211)
!15295 = !DILocation(line: 141, column: 22, scope: !15291)
!15296 = !DILocation(line: 141, column: 27, scope: !15291)
!15297 = !DILocation(line: 141, column: 32, scope: !15291)
!15298 = !DILocation(line: 141, column: 37, scope: !15291)
!15299 = !DILocation(line: 141, column: 12, scope: !15291)
!15300 = !DILocation(line: 141, column: 5, scope: !15291)
!15301 = !DILocation(line: 147, column: 16, scope: !15302)
!15302 = distinct !DILexicalBlock(scope: !15211, file: !15150, line: 147, column: 7)
!15303 = !DILocation(line: 147, column: 21, scope: !15302)
!15304 = !DILocation(line: 147, column: 7, scope: !15302)
!15305 = !DILocation(line: 147, column: 7, scope: !15211)
!15306 = !DILocation(line: 148, column: 5, scope: !15302)
!15307 = !DILocation(line: 149, column: 7, scope: !15308)
!15308 = distinct !DILexicalBlock(scope: !15211, file: !15150, line: 149, column: 7)
!15309 = !DILocation(line: 149, column: 7, scope: !15211)
!15310 = !DILocation(line: 151, column: 12, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15312, file: !15150, line: 151, column: 11)
!15312 = distinct !DILexicalBlock(scope: !15308, file: !15150, line: 150, column: 5)
!15313 = !DILocation(line: 151, column: 11, scope: !15312)
!15314 = !DILocation(line: 152, column: 16, scope: !15311)
!15315 = !DILocation(line: 152, column: 9, scope: !15311)
!15316 = !DILocation(line: 153, column: 5, scope: !15312)
!15317 = !DILocation(line: 154, column: 21, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15308, file: !15150, line: 154, column: 12)
!15319 = !DILocation(line: 154, column: 26, scope: !15318)
!15320 = !DILocation(line: 154, column: 12, scope: !15318)
!15321 = !DILocation(line: 154, column: 12, scope: !15308)
!15322 = !DILocation(line: 156, column: 11, scope: !15323)
!15323 = distinct !DILexicalBlock(scope: !15324, file: !15150, line: 156, column: 11)
!15324 = distinct !DILexicalBlock(scope: !15318, file: !15150, line: 155, column: 5)
!15325 = !DILocation(line: 156, column: 17, scope: !15323)
!15326 = !DILocation(line: 156, column: 27, scope: !15323)
!15327 = !DILocation(line: 156, column: 31, scope: !15323)
!15328 = !DILocation(line: 156, column: 11, scope: !15324)
!15329 = !DILocation(line: 157, column: 9, scope: !15323)
!15330 = !DILocation(line: 158, column: 5, scope: !15324)
!15331 = !DILocation(line: 159, column: 13, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15318, file: !15150, line: 159, column: 12)
!15333 = !DILocation(line: 159, column: 12, scope: !15318)
!15334 = !DILocation(line: 160, column: 12, scope: !15332)
!15335 = !DILocation(line: 160, column: 5, scope: !15332)
!15336 = !DILocation(line: 161, column: 13, scope: !15337)
!15337 = distinct !DILexicalBlock(scope: !15332, file: !15150, line: 161, column: 12)
!15338 = !DILocation(line: 161, column: 12, scope: !15332)
!15339 = !DILocation(line: 162, column: 12, scope: !15337)
!15340 = !DILocation(line: 162, column: 5, scope: !15337)
!15341 = !DILocation(line: 214, column: 23, scope: !15211)
!15342 = !DILocation(line: 214, column: 28, scope: !15211)
!15343 = !DILocation(line: 214, column: 38, scope: !15211)
!15344 = !DILocation(line: 214, column: 43, scope: !15211)
!15345 = !DILocation(line: 214, column: 13, scope: !15211)
!15346 = !DILocation(line: 214, column: 11, scope: !15211)
!15347 = !DILocation(line: 215, column: 18, scope: !15211)
!15348 = !DILocation(line: 215, column: 16, scope: !15211)
!15349 = !DILocation(line: 216, column: 3, scope: !15211)
!15350 = !DILabel(scope: !15211, name: "out", file: !15150, line: 217)
!15351 = !DILocation(line: 217, column: 2, scope: !15211)
!15352 = !DILocation(line: 218, column: 7, scope: !15353)
!15353 = distinct !DILexicalBlock(scope: !15211, file: !15150, line: 218, column: 7)
!15354 = !DILocation(line: 218, column: 19, scope: !15353)
!15355 = !DILocation(line: 218, column: 16, scope: !15353)
!15356 = !DILocation(line: 218, column: 7, scope: !15211)
!15357 = !DILocation(line: 219, column: 11, scope: !15353)
!15358 = !DILocation(line: 219, column: 5, scope: !15353)
!15359 = !DILocation(line: 220, column: 7, scope: !15360)
!15360 = distinct !DILexicalBlock(scope: !15211, file: !15150, line: 220, column: 7)
!15361 = !DILocation(line: 220, column: 19, scope: !15360)
!15362 = !DILocation(line: 220, column: 16, scope: !15360)
!15363 = !DILocation(line: 220, column: 7, scope: !15211)
!15364 = !DILocation(line: 221, column: 11, scope: !15360)
!15365 = !DILocation(line: 221, column: 5, scope: !15360)
!15366 = !DILocation(line: 222, column: 11, scope: !15211)
!15367 = !DILocation(line: 222, column: 3, scope: !15211)
!15368 = !DILocation(line: 222, column: 9, scope: !15211)
!15369 = !DILocation(line: 223, column: 10, scope: !15211)
!15370 = !DILocation(line: 223, column: 3, scope: !15211)
!15371 = !DILocation(line: 233, column: 1, scope: !15149)
!15372 = distinct !DISubprogram(name: "errno_fail", scope: !15150, file: !15150, line: 33, type: !1827, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1822, retainedNodes: !143)
!15373 = !DILocalVariable(name: "e", arg: 1, scope: !15372, file: !15150, line: 33, type: !7)
!15374 = !DILocation(line: 33, column: 17, scope: !15372)
!15375 = !DILocation(line: 35, column: 11, scope: !15372)
!15376 = !DILocation(line: 35, column: 3, scope: !15372)
!15377 = !DILocation(line: 35, column: 9, scope: !15372)
!15378 = !DILocation(line: 36, column: 3, scope: !15372)
!15379 = distinct !DISubprogram(name: "get_root_dev_ino", scope: !15380, file: !15380, line: 29, type: !1832, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1829, retainedNodes: !143)
!15380 = !DIFile(filename: "lib/root-dev-ino.c", directory: "/home/mbarbar/software/coreutils-8.31")
!15381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !15382)
!15382 = !{!15383, !15384, !15385, !15386, !15387, !15388, !15389, !15390, !15391, !15392, !15393, !15394, !15399, !15400, !15401}
!15383 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15381, file: !318, line: 48, baseType: !231, size: 64)
!15384 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15381, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!15385 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15381, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!15386 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15381, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!15387 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15381, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!15388 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15381, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!15389 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15381, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!15390 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15381, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!15391 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15381, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!15392 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15381, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!15393 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15381, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!15394 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15381, file: !318, line: 91, baseType: !15395, size: 128, offset: 576)
!15395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !15396)
!15396 = !{!15397, !15398}
!15397 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15395, file: !338, line: 11, baseType: !341, size: 64)
!15398 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15395, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!15399 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15381, file: !318, line: 92, baseType: !15395, size: 128, offset: 704)
!15400 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15381, file: !318, line: 93, baseType: !15395, size: 128, offset: 832)
!15401 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15381, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!15402 = !DILocalVariable(name: "root_d_i", arg: 1, scope: !15379, file: !15380, line: 29, type: !1834)
!15403 = !DILocation(line: 29, column: 35, scope: !15379)
!15404 = !DILocalVariable(name: "statbuf", scope: !15379, file: !15380, line: 31, type: !15381)
!15405 = !DILocation(line: 31, column: 15, scope: !15379)
!15406 = !DILocation(line: 32, column: 7, scope: !15407)
!15407 = distinct !DILexicalBlock(scope: !15379, file: !15380, line: 32, column: 7)
!15408 = !DILocation(line: 32, column: 7, scope: !15379)
!15409 = !DILocation(line: 33, column: 5, scope: !15407)
!15410 = !DILocation(line: 34, column: 30, scope: !15379)
!15411 = !DILocation(line: 34, column: 3, scope: !15379)
!15412 = !DILocation(line: 34, column: 13, scope: !15379)
!15413 = !DILocation(line: 34, column: 20, scope: !15379)
!15414 = !DILocation(line: 35, column: 30, scope: !15379)
!15415 = !DILocation(line: 35, column: 3, scope: !15379)
!15416 = !DILocation(line: 35, column: 13, scope: !15379)
!15417 = !DILocation(line: 35, column: 20, scope: !15379)
!15418 = !DILocation(line: 36, column: 10, scope: !15379)
!15419 = !DILocation(line: 36, column: 3, scope: !15379)
!15420 = !DILocation(line: 37, column: 1, scope: !15379)
!15421 = distinct !DISubprogram(name: "safe_write", scope: !15422, file: !15422, line: 56, type: !1794, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1839, retainedNodes: !143)
!15422 = !DIFile(filename: "./lib/safe-read.c", directory: "/home/mbarbar/software/coreutils-8.31")
!15423 = !DILocalVariable(name: "fd", arg: 1, scope: !15421, file: !15422, line: 56, type: !7)
!15424 = !DILocation(line: 56, column: 14, scope: !15421)
!15425 = !DILocalVariable(name: "buf", arg: 2, scope: !15421, file: !15422, line: 56, type: !425)
!15426 = !DILocation(line: 56, column: 30, scope: !15421)
!15427 = !DILocalVariable(name: "count", arg: 3, scope: !15421, file: !15422, line: 56, type: !55)
!15428 = !DILocation(line: 56, column: 42, scope: !15421)
!15429 = !DILocation(line: 58, column: 3, scope: !15421)
!15430 = !DILocalVariable(name: "result", scope: !15431, file: !15422, line: 60, type: !606)
!15431 = distinct !DILexicalBlock(scope: !15432, file: !15422, line: 59, column: 5)
!15432 = distinct !DILexicalBlock(scope: !15433, file: !15422, line: 58, column: 3)
!15433 = distinct !DILexicalBlock(scope: !15421, file: !15422, line: 58, column: 3)
!15434 = !DILocation(line: 60, column: 15, scope: !15431)
!15435 = !DILocation(line: 60, column: 28, scope: !15431)
!15436 = !DILocation(line: 60, column: 32, scope: !15431)
!15437 = !DILocation(line: 60, column: 37, scope: !15431)
!15438 = !DILocation(line: 60, column: 24, scope: !15431)
!15439 = !DILocation(line: 62, column: 16, scope: !15440)
!15440 = distinct !DILexicalBlock(scope: !15431, file: !15422, line: 62, column: 11)
!15441 = !DILocation(line: 62, column: 13, scope: !15440)
!15442 = !DILocation(line: 62, column: 11, scope: !15431)
!15443 = !DILocation(line: 63, column: 16, scope: !15440)
!15444 = !DILocation(line: 63, column: 9, scope: !15440)
!15445 = !DILocation(line: 64, column: 16, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15440, file: !15422, line: 64, column: 16)
!15447 = !DILocation(line: 64, column: 16, scope: !15440)
!15448 = !DILocation(line: 65, column: 9, scope: !15446)
!15449 = distinct !{!15449, !15450, !15451}
!15450 = !DILocation(line: 58, column: 3, scope: !15433)
!15451 = !DILocation(line: 70, column: 5, scope: !15433)
!15452 = !DILocation(line: 66, column: 16, scope: !15453)
!15453 = distinct !DILexicalBlock(scope: !15446, file: !15422, line: 66, column: 16)
!15454 = !DILocation(line: 66, column: 22, scope: !15453)
!15455 = !DILocation(line: 66, column: 32, scope: !15453)
!15456 = !DILocation(line: 66, column: 53, scope: !15453)
!15457 = !DILocation(line: 66, column: 51, scope: !15453)
!15458 = !DILocation(line: 66, column: 16, scope: !15446)
!15459 = !DILocation(line: 67, column: 15, scope: !15453)
!15460 = !DILocation(line: 67, column: 9, scope: !15453)
!15461 = !DILocation(line: 69, column: 16, scope: !15453)
!15462 = !DILocation(line: 69, column: 9, scope: !15453)
!15463 = !DILocation(line: 58, column: 3, scope: !15432)
!15464 = !DILocation(line: 71, column: 1, scope: !15421)
!15465 = distinct !DISubprogram(name: "same_name", scope: !15466, file: !15466, line: 61, type: !1845, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !143)
!15466 = !DIFile(filename: "lib/same.c", directory: "/home/mbarbar/software/coreutils-8.31")
!15467 = !DILocalVariable(name: "source", arg: 1, scope: !15465, file: !15466, line: 61, type: !115)
!15468 = !DILocation(line: 61, column: 24, scope: !15465)
!15469 = !DILocalVariable(name: "dest", arg: 2, scope: !15465, file: !15466, line: 61, type: !115)
!15470 = !DILocation(line: 61, column: 44, scope: !15465)
!15471 = !DILocation(line: 63, column: 33, scope: !15465)
!15472 = !DILocation(line: 63, column: 51, scope: !15465)
!15473 = !DILocation(line: 63, column: 10, scope: !15465)
!15474 = !DILocation(line: 63, column: 3, scope: !15465)
!15475 = distinct !DISubprogram(name: "same_nameat", scope: !15466, file: !15466, line: 70, type: !1847, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !143)
!15476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !15477)
!15477 = !{!15478, !15479, !15480, !15481, !15482, !15483, !15484, !15485, !15486, !15487, !15488, !15489, !15494, !15495, !15496}
!15478 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15476, file: !318, line: 48, baseType: !231, size: 64)
!15479 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15476, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!15480 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15476, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!15481 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15476, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!15482 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15476, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!15483 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15476, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!15484 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15476, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!15485 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15476, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!15486 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15476, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!15487 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15476, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!15488 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15476, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!15489 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15476, file: !318, line: 91, baseType: !15490, size: 128, offset: 576)
!15490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !15491)
!15491 = !{!15492, !15493}
!15492 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15490, file: !338, line: 11, baseType: !341, size: 64)
!15493 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15490, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!15494 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15476, file: !318, line: 92, baseType: !15490, size: 128, offset: 704)
!15495 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15476, file: !318, line: 93, baseType: !15490, size: 128, offset: 832)
!15496 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15476, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!15497 = !DILocalVariable(name: "source_dfd", arg: 1, scope: !15475, file: !15466, line: 70, type: !7)
!15498 = !DILocation(line: 70, column: 18, scope: !15475)
!15499 = !DILocalVariable(name: "source", arg: 2, scope: !15475, file: !15466, line: 70, type: !115)
!15500 = !DILocation(line: 70, column: 42, scope: !15475)
!15501 = !DILocalVariable(name: "dest_dfd", arg: 3, scope: !15475, file: !15466, line: 71, type: !7)
!15502 = !DILocation(line: 71, column: 18, scope: !15475)
!15503 = !DILocalVariable(name: "dest", arg: 4, scope: !15475, file: !15466, line: 71, type: !115)
!15504 = !DILocation(line: 71, column: 40, scope: !15475)
!15505 = !DILocalVariable(name: "source_basename", scope: !15475, file: !15466, line: 74, type: !115)
!15506 = !DILocation(line: 74, column: 15, scope: !15475)
!15507 = !DILocation(line: 74, column: 49, scope: !15475)
!15508 = !DILocation(line: 74, column: 33, scope: !15475)
!15509 = !DILocalVariable(name: "dest_basename", scope: !15475, file: !15466, line: 75, type: !115)
!15510 = !DILocation(line: 75, column: 15, scope: !15475)
!15511 = !DILocation(line: 75, column: 47, scope: !15475)
!15512 = !DILocation(line: 75, column: 31, scope: !15475)
!15513 = !DILocalVariable(name: "source_baselen", scope: !15475, file: !15466, line: 76, type: !55)
!15514 = !DILocation(line: 76, column: 10, scope: !15475)
!15515 = !DILocation(line: 76, column: 37, scope: !15475)
!15516 = !DILocation(line: 76, column: 27, scope: !15475)
!15517 = !DILocalVariable(name: "dest_baselen", scope: !15475, file: !15466, line: 77, type: !55)
!15518 = !DILocation(line: 77, column: 10, scope: !15475)
!15519 = !DILocation(line: 77, column: 35, scope: !15475)
!15520 = !DILocation(line: 77, column: 25, scope: !15475)
!15521 = !DILocalVariable(name: "identical_basenames", scope: !15475, file: !15466, line: 78, type: !120)
!15522 = !DILocation(line: 78, column: 8, scope: !15475)
!15523 = !DILocation(line: 79, column: 6, scope: !15475)
!15524 = !DILocation(line: 79, column: 24, scope: !15475)
!15525 = !DILocation(line: 79, column: 21, scope: !15475)
!15526 = !DILocation(line: 80, column: 6, scope: !15475)
!15527 = !DILocation(line: 80, column: 17, scope: !15475)
!15528 = !DILocation(line: 80, column: 34, scope: !15475)
!15529 = !DILocation(line: 80, column: 49, scope: !15475)
!15530 = !DILocation(line: 80, column: 9, scope: !15475)
!15531 = !DILocation(line: 80, column: 63, scope: !15475)
!15532 = !DILocation(line: 0, scope: !15475)
!15533 = !DILocalVariable(name: "compare_dirs", scope: !15475, file: !15466, line: 81, type: !120)
!15534 = !DILocation(line: 81, column: 8, scope: !15475)
!15535 = !DILocation(line: 81, column: 23, scope: !15475)
!15536 = !DILocalVariable(name: "same", scope: !15475, file: !15466, line: 82, type: !120)
!15537 = !DILocation(line: 82, column: 8, scope: !15475)
!15538 = !DILocation(line: 92, column: 7, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15475, file: !15466, line: 92, column: 7)
!15540 = !DILocation(line: 92, column: 7, scope: !15475)
!15541 = !DILocalVariable(name: "source_dir_stats", scope: !15542, file: !15466, line: 94, type: !15476)
!15542 = distinct !DILexicalBlock(scope: !15539, file: !15466, line: 93, column: 5)
!15543 = !DILocation(line: 94, column: 19, scope: !15542)
!15544 = !DILocalVariable(name: "dest_dir_stats", scope: !15542, file: !15466, line: 95, type: !15476)
!15545 = !DILocation(line: 95, column: 19, scope: !15542)
!15546 = !DILocalVariable(name: "source_dirname", scope: !15542, file: !15466, line: 98, type: !9)
!15547 = !DILocation(line: 98, column: 13, scope: !15542)
!15548 = !DILocation(line: 98, column: 40, scope: !15542)
!15549 = !DILocation(line: 98, column: 30, scope: !15542)
!15550 = !DILocalVariable(name: "flags", scope: !15542, file: !15466, line: 99, type: !7)
!15551 = !DILocation(line: 99, column: 11, scope: !15542)
!15552 = !DILocation(line: 100, column: 20, scope: !15553)
!15553 = distinct !DILexicalBlock(scope: !15542, file: !15466, line: 100, column: 11)
!15554 = !DILocation(line: 100, column: 32, scope: !15553)
!15555 = !DILocation(line: 100, column: 67, scope: !15553)
!15556 = !DILocation(line: 100, column: 11, scope: !15553)
!15557 = !DILocation(line: 100, column: 74, scope: !15553)
!15558 = !DILocation(line: 100, column: 11, scope: !15542)
!15559 = !DILocation(line: 103, column: 21, scope: !15560)
!15560 = distinct !DILexicalBlock(scope: !15553, file: !15466, line: 101, column: 9)
!15561 = !DILocation(line: 103, column: 34, scope: !15560)
!15562 = !DILocation(line: 103, column: 11, scope: !15560)
!15563 = !DILocation(line: 104, column: 9, scope: !15560)
!15564 = !DILocation(line: 105, column: 13, scope: !15542)
!15565 = !DILocation(line: 105, column: 7, scope: !15542)
!15566 = !DILocalVariable(name: "dest_dirname", scope: !15542, file: !15466, line: 107, type: !9)
!15567 = !DILocation(line: 107, column: 13, scope: !15542)
!15568 = !DILocation(line: 107, column: 38, scope: !15542)
!15569 = !DILocation(line: 107, column: 28, scope: !15542)
!15570 = !DILocation(line: 137, column: 20, scope: !15571)
!15571 = distinct !DILexicalBlock(scope: !15542, file: !15466, line: 137, column: 11)
!15572 = !DILocation(line: 137, column: 30, scope: !15571)
!15573 = !DILocation(line: 137, column: 61, scope: !15571)
!15574 = !DILocation(line: 137, column: 11, scope: !15571)
!15575 = !DILocation(line: 137, column: 68, scope: !15571)
!15576 = !DILocation(line: 137, column: 11, scope: !15542)
!15577 = !DILocation(line: 140, column: 21, scope: !15578)
!15578 = distinct !DILexicalBlock(scope: !15571, file: !15466, line: 138, column: 9)
!15579 = !DILocation(line: 140, column: 34, scope: !15578)
!15580 = !DILocation(line: 140, column: 11, scope: !15578)
!15581 = !DILocation(line: 141, column: 9, scope: !15578)
!15582 = !DILocation(line: 142, column: 14, scope: !15542)
!15583 = !DILocation(line: 0, scope: !15542)
!15584 = !DILocation(line: 142, column: 12, scope: !15542)
!15585 = !DILocation(line: 145, column: 13, scope: !15542)
!15586 = !DILocation(line: 145, column: 7, scope: !15542)
!15587 = !DILocation(line: 146, column: 5, scope: !15542)
!15588 = !DILocation(line: 148, column: 10, scope: !15475)
!15589 = !DILocation(line: 148, column: 3, scope: !15475)
!15590 = distinct !DISubprogram(name: "streamsavedir", scope: !1080, file: !1080, line: 91, type: !1076, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1065, retainedNodes: !143)
!15591 = !DILocalVariable(name: "dirp", arg: 1, scope: !15590, file: !1080, line: 91, type: !607)
!15592 = !DILocation(line: 91, column: 21, scope: !15590)
!15593 = !DILocalVariable(name: "option", arg: 2, scope: !15590, file: !1080, line: 91, type: !1068)
!15594 = !DILocation(line: 91, column: 47, scope: !15590)
!15595 = !DILocalVariable(name: "name_space", scope: !15590, file: !1080, line: 93, type: !9)
!15596 = !DILocation(line: 93, column: 9, scope: !15590)
!15597 = !DILocalVariable(name: "allocated", scope: !15590, file: !1080, line: 94, type: !55)
!15598 = !DILocation(line: 94, column: 10, scope: !15590)
!15599 = !DILocalVariable(name: "entries", scope: !15590, file: !1080, line: 95, type: !1078)
!15600 = !DILocation(line: 95, column: 15, scope: !15590)
!15601 = !DILocalVariable(name: "entries_allocated", scope: !15590, file: !1080, line: 96, type: !55)
!15602 = !DILocation(line: 96, column: 10, scope: !15590)
!15603 = !DILocalVariable(name: "entries_used", scope: !15590, file: !1080, line: 97, type: !55)
!15604 = !DILocation(line: 97, column: 10, scope: !15590)
!15605 = !DILocalVariable(name: "used", scope: !15590, file: !1080, line: 98, type: !55)
!15606 = !DILocation(line: 98, column: 10, scope: !15590)
!15607 = !DILocalVariable(name: "readdir_errno", scope: !15590, file: !1080, line: 99, type: !7)
!15608 = !DILocation(line: 99, column: 7, scope: !15590)
!15609 = !DILocalVariable(name: "cmp", scope: !15590, file: !1080, line: 100, type: !1086)
!15610 = !DILocation(line: 100, column: 23, scope: !15590)
!15611 = !DILocation(line: 100, column: 55, scope: !15590)
!15612 = !DILocation(line: 100, column: 29, scope: !15590)
!15613 = !DILocation(line: 102, column: 7, scope: !15614)
!15614 = distinct !DILexicalBlock(scope: !15590, file: !1080, line: 102, column: 7)
!15615 = !DILocation(line: 102, column: 12, scope: !15614)
!15616 = !DILocation(line: 102, column: 7, scope: !15590)
!15617 = !DILocation(line: 103, column: 5, scope: !15614)
!15618 = !DILocation(line: 105, column: 3, scope: !15590)
!15619 = !DILocalVariable(name: "dp", scope: !15620, file: !1080, line: 107, type: !1092)
!15620 = distinct !DILexicalBlock(scope: !15621, file: !1080, line: 106, column: 5)
!15621 = distinct !DILexicalBlock(scope: !15622, file: !1080, line: 105, column: 3)
!15622 = distinct !DILexicalBlock(scope: !15590, file: !1080, line: 105, column: 3)
!15623 = !DILocation(line: 107, column: 28, scope: !15620)
!15624 = !DILocalVariable(name: "entry", scope: !15620, file: !1080, line: 108, type: !115)
!15625 = !DILocation(line: 108, column: 19, scope: !15620)
!15626 = !DILocation(line: 110, column: 7, scope: !15620)
!15627 = !DILocation(line: 110, column: 13, scope: !15620)
!15628 = !DILocation(line: 111, column: 21, scope: !15620)
!15629 = !DILocation(line: 111, column: 12, scope: !15620)
!15630 = !DILocation(line: 111, column: 10, scope: !15620)
!15631 = !DILocation(line: 112, column: 13, scope: !15632)
!15632 = distinct !DILexicalBlock(scope: !15620, file: !1080, line: 112, column: 11)
!15633 = !DILocation(line: 112, column: 11, scope: !15620)
!15634 = !DILocation(line: 113, column: 9, scope: !15632)
!15635 = !DILocation(line: 117, column: 15, scope: !15620)
!15636 = !DILocation(line: 117, column: 19, scope: !15620)
!15637 = !DILocation(line: 117, column: 13, scope: !15620)
!15638 = !DILocation(line: 118, column: 11, scope: !15639)
!15639 = distinct !DILexicalBlock(scope: !15620, file: !1080, line: 118, column: 11)
!15640 = !DILocation(line: 118, column: 17, scope: !15639)
!15641 = !DILocation(line: 118, column: 26, scope: !15639)
!15642 = !DILocation(line: 118, column: 39, scope: !15639)
!15643 = !DILocation(line: 118, column: 48, scope: !15639)
!15644 = !DILocation(line: 118, column: 64, scope: !15639)
!15645 = !DILocation(line: 118, column: 11, scope: !15620)
!15646 = !DILocalVariable(name: "entry_size", scope: !15647, file: !1080, line: 120, type: !55)
!15647 = distinct !DILexicalBlock(scope: !15639, file: !1080, line: 119, column: 9)
!15648 = !DILocation(line: 120, column: 18, scope: !15647)
!15649 = !DILocation(line: 120, column: 31, scope: !15647)
!15650 = !DILocation(line: 120, column: 52, scope: !15647)
!15651 = !DILocation(line: 121, column: 15, scope: !15652)
!15652 = distinct !DILexicalBlock(scope: !15647, file: !1080, line: 121, column: 15)
!15653 = !DILocation(line: 121, column: 15, scope: !15647)
!15654 = !DILocation(line: 123, column: 19, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15656, file: !1080, line: 123, column: 19)
!15656 = distinct !DILexicalBlock(scope: !15652, file: !1080, line: 122, column: 13)
!15657 = !DILocation(line: 123, column: 40, scope: !15655)
!15658 = !DILocation(line: 123, column: 37, scope: !15655)
!15659 = !DILocation(line: 123, column: 19, scope: !15656)
!15660 = !DILocalVariable(name: "n", scope: !15661, file: !1080, line: 125, type: !55)
!15661 = distinct !DILexicalBlock(scope: !15655, file: !1080, line: 124, column: 17)
!15662 = !DILocation(line: 125, column: 26, scope: !15661)
!15663 = !DILocation(line: 125, column: 30, scope: !15661)
!15664 = !DILocation(line: 126, column: 41, scope: !15661)
!15665 = !DILocation(line: 126, column: 29, scope: !15661)
!15666 = !DILocation(line: 126, column: 27, scope: !15661)
!15667 = !DILocation(line: 127, column: 39, scope: !15661)
!15668 = !DILocation(line: 127, column: 37, scope: !15661)
!15669 = !DILocation(line: 128, column: 17, scope: !15661)
!15670 = !DILocation(line: 129, column: 53, scope: !15656)
!15671 = !DILocation(line: 129, column: 44, scope: !15656)
!15672 = !DILocation(line: 129, column: 15, scope: !15656)
!15673 = !DILocation(line: 129, column: 23, scope: !15656)
!15674 = !DILocation(line: 129, column: 37, scope: !15656)
!15675 = !DILocation(line: 129, column: 42, scope: !15656)
!15676 = !{!15677, !2996, i64 0}
!15677 = !{!"", !2996, i64 0, !3180, i64 8}
!15678 = !DILocation(line: 131, column: 43, scope: !15656)
!15679 = !DILocation(line: 131, column: 47, scope: !15656)
!15680 = !{!15681, !3180, i64 0}
!15681 = !{!"dirent", !3180, i64 0, !3180, i64 8, !3811, i64 16, !2984, i64 18, !2984, i64 19}
!15682 = !DILocation(line: 131, column: 15, scope: !15656)
!15683 = !DILocation(line: 131, column: 23, scope: !15656)
!15684 = !DILocation(line: 131, column: 37, scope: !15656)
!15685 = !DILocation(line: 131, column: 41, scope: !15656)
!15686 = !{!15677, !3180, i64 8}
!15687 = !DILocation(line: 133, column: 27, scope: !15656)
!15688 = !DILocation(line: 134, column: 13, scope: !15656)
!15689 = !DILocation(line: 137, column: 19, scope: !15690)
!15690 = distinct !DILexicalBlock(scope: !15691, file: !1080, line: 137, column: 19)
!15691 = distinct !DILexicalBlock(scope: !15652, file: !1080, line: 136, column: 13)
!15692 = !DILocation(line: 137, column: 31, scope: !15690)
!15693 = !DILocation(line: 137, column: 29, scope: !15690)
!15694 = !DILocation(line: 137, column: 39, scope: !15690)
!15695 = !DILocation(line: 137, column: 36, scope: !15690)
!15696 = !DILocation(line: 137, column: 19, scope: !15691)
!15697 = !DILocalVariable(name: "n", scope: !15698, file: !1080, line: 139, type: !55)
!15698 = distinct !DILexicalBlock(scope: !15690, file: !1080, line: 138, column: 17)
!15699 = !DILocation(line: 139, column: 26, scope: !15698)
!15700 = !DILocation(line: 139, column: 30, scope: !15698)
!15701 = !DILocation(line: 139, column: 37, scope: !15698)
!15702 = !DILocation(line: 139, column: 35, scope: !15698)
!15703 = !DILocation(line: 140, column: 23, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15698, file: !1080, line: 140, column: 23)
!15705 = !DILocation(line: 140, column: 27, scope: !15704)
!15706 = !DILocation(line: 140, column: 25, scope: !15704)
!15707 = !DILocation(line: 140, column: 23, scope: !15698)
!15708 = !DILocation(line: 141, column: 21, scope: !15704)
!15709 = !DILocation(line: 142, column: 44, scope: !15698)
!15710 = !DILocation(line: 142, column: 32, scope: !15698)
!15711 = !DILocation(line: 142, column: 30, scope: !15698)
!15712 = !DILocation(line: 143, column: 31, scope: !15698)
!15713 = !DILocation(line: 143, column: 29, scope: !15698)
!15714 = !DILocation(line: 144, column: 17, scope: !15698)
!15715 = !DILocation(line: 145, column: 23, scope: !15691)
!15716 = !DILocation(line: 145, column: 36, scope: !15691)
!15717 = !DILocation(line: 145, column: 34, scope: !15691)
!15718 = !DILocation(line: 145, column: 42, scope: !15691)
!15719 = !DILocation(line: 145, column: 49, scope: !15691)
!15720 = !DILocation(line: 145, column: 15, scope: !15691)
!15721 = !DILocation(line: 147, column: 19, scope: !15647)
!15722 = !DILocation(line: 147, column: 16, scope: !15647)
!15723 = !DILocation(line: 148, column: 9, scope: !15647)
!15724 = !DILocation(line: 105, column: 3, scope: !15621)
!15725 = distinct !{!15725, !15726, !15727}
!15726 = !DILocation(line: 105, column: 3, scope: !15622)
!15727 = !DILocation(line: 149, column: 5, scope: !15622)
!15728 = !DILocation(line: 151, column: 19, scope: !15590)
!15729 = !DILocation(line: 151, column: 17, scope: !15590)
!15730 = !DILocation(line: 152, column: 7, scope: !15731)
!15731 = distinct !DILexicalBlock(scope: !15590, file: !1080, line: 152, column: 7)
!15732 = !DILocation(line: 152, column: 21, scope: !15731)
!15733 = !DILocation(line: 152, column: 7, scope: !15590)
!15734 = !DILocation(line: 154, column: 13, scope: !15735)
!15735 = distinct !DILexicalBlock(scope: !15731, file: !1080, line: 153, column: 5)
!15736 = !DILocation(line: 154, column: 7, scope: !15735)
!15737 = !DILocation(line: 155, column: 13, scope: !15735)
!15738 = !DILocation(line: 155, column: 7, scope: !15735)
!15739 = !DILocation(line: 156, column: 15, scope: !15735)
!15740 = !DILocation(line: 156, column: 7, scope: !15735)
!15741 = !DILocation(line: 156, column: 13, scope: !15735)
!15742 = !DILocation(line: 157, column: 7, scope: !15735)
!15743 = !DILocation(line: 160, column: 7, scope: !15744)
!15744 = distinct !DILexicalBlock(scope: !15590, file: !1080, line: 160, column: 7)
!15745 = !DILocation(line: 160, column: 7, scope: !15590)
!15746 = !DILocalVariable(name: "i", scope: !15747, file: !1080, line: 162, type: !55)
!15747 = distinct !DILexicalBlock(scope: !15744, file: !1080, line: 161, column: 5)
!15748 = !DILocation(line: 162, column: 14, scope: !15747)
!15749 = !DILocation(line: 164, column: 11, scope: !15750)
!15750 = distinct !DILexicalBlock(scope: !15747, file: !1080, line: 164, column: 11)
!15751 = !DILocation(line: 164, column: 11, scope: !15747)
!15752 = !DILocation(line: 165, column: 16, scope: !15750)
!15753 = !DILocation(line: 165, column: 25, scope: !15750)
!15754 = !DILocation(line: 165, column: 56, scope: !15750)
!15755 = !DILocation(line: 165, column: 9, scope: !15750)
!15756 = !DILocation(line: 166, column: 29, scope: !15747)
!15757 = !DILocation(line: 166, column: 34, scope: !15747)
!15758 = !DILocation(line: 166, column: 20, scope: !15747)
!15759 = !DILocation(line: 166, column: 18, scope: !15747)
!15760 = !DILocation(line: 167, column: 12, scope: !15747)
!15761 = !DILocation(line: 168, column: 14, scope: !15762)
!15762 = distinct !DILexicalBlock(scope: !15747, file: !1080, line: 168, column: 7)
!15763 = !DILocation(line: 168, column: 12, scope: !15762)
!15764 = !DILocation(line: 168, column: 19, scope: !15765)
!15765 = distinct !DILexicalBlock(scope: !15762, file: !1080, line: 168, column: 7)
!15766 = !DILocation(line: 168, column: 23, scope: !15765)
!15767 = !DILocation(line: 168, column: 21, scope: !15765)
!15768 = !DILocation(line: 168, column: 7, scope: !15762)
!15769 = !DILocalVariable(name: "dest", scope: !15770, file: !1080, line: 170, type: !9)
!15770 = distinct !DILexicalBlock(scope: !15765, file: !1080, line: 169, column: 9)
!15771 = !DILocation(line: 170, column: 17, scope: !15770)
!15772 = !DILocation(line: 170, column: 24, scope: !15770)
!15773 = !DILocation(line: 170, column: 37, scope: !15770)
!15774 = !DILocation(line: 170, column: 35, scope: !15770)
!15775 = !DILocation(line: 171, column: 27, scope: !15770)
!15776 = !DILocation(line: 171, column: 33, scope: !15770)
!15777 = !DILocation(line: 171, column: 41, scope: !15770)
!15778 = !DILocation(line: 171, column: 44, scope: !15770)
!15779 = !DILocation(line: 171, column: 19, scope: !15770)
!15780 = !DILocation(line: 171, column: 52, scope: !15770)
!15781 = !DILocation(line: 171, column: 50, scope: !15770)
!15782 = !DILocation(line: 171, column: 57, scope: !15770)
!15783 = !DILocation(line: 171, column: 16, scope: !15770)
!15784 = !DILocation(line: 172, column: 17, scope: !15770)
!15785 = !DILocation(line: 172, column: 25, scope: !15770)
!15786 = !DILocation(line: 172, column: 28, scope: !15770)
!15787 = !DILocation(line: 172, column: 11, scope: !15770)
!15788 = !DILocation(line: 173, column: 9, scope: !15770)
!15789 = !DILocation(line: 168, column: 38, scope: !15765)
!15790 = !DILocation(line: 168, column: 7, scope: !15765)
!15791 = distinct !{!15791, !15768, !15792}
!15792 = !DILocation(line: 173, column: 9, scope: !15762)
!15793 = !DILocation(line: 174, column: 13, scope: !15747)
!15794 = !DILocation(line: 174, column: 7, scope: !15747)
!15795 = !DILocation(line: 175, column: 5, scope: !15747)
!15796 = !DILocation(line: 176, column: 12, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15744, file: !1080, line: 176, column: 12)
!15798 = !DILocation(line: 176, column: 20, scope: !15797)
!15799 = !DILocation(line: 176, column: 17, scope: !15797)
!15800 = !DILocation(line: 176, column: 12, scope: !15744)
!15801 = !DILocation(line: 177, column: 28, scope: !15797)
!15802 = !DILocation(line: 177, column: 40, scope: !15797)
!15803 = !DILocation(line: 177, column: 45, scope: !15797)
!15804 = !DILocation(line: 177, column: 18, scope: !15797)
!15805 = !DILocation(line: 177, column: 16, scope: !15797)
!15806 = !DILocation(line: 177, column: 5, scope: !15797)
!15807 = !DILocation(line: 179, column: 3, scope: !15590)
!15808 = !DILocation(line: 179, column: 14, scope: !15590)
!15809 = !DILocation(line: 179, column: 20, scope: !15590)
!15810 = !DILocation(line: 180, column: 10, scope: !15590)
!15811 = !DILocation(line: 180, column: 3, scope: !15590)
!15812 = !DILocation(line: 181, column: 1, scope: !15590)
!15813 = distinct !DISubprogram(name: "direntry_cmp_name", scope: !1080, file: !1080, line: 51, type: !1088, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !143)
!15814 = !DILocalVariable(name: "a", arg: 1, scope: !15813, file: !1080, line: 51, type: !425)
!15815 = !DILocation(line: 51, column: 32, scope: !15813)
!15816 = !DILocalVariable(name: "b", arg: 2, scope: !15813, file: !1080, line: 51, type: !425)
!15817 = !DILocation(line: 51, column: 47, scope: !15813)
!15818 = !DILocalVariable(name: "dea", scope: !15813, file: !1080, line: 53, type: !1103)
!15819 = !DILocation(line: 53, column: 21, scope: !15813)
!15820 = !DILocation(line: 53, column: 27, scope: !15813)
!15821 = !DILocalVariable(name: "deb", scope: !15813, file: !1080, line: 54, type: !1103)
!15822 = !DILocation(line: 54, column: 21, scope: !15813)
!15823 = !DILocation(line: 54, column: 27, scope: !15813)
!15824 = !DILocation(line: 56, column: 18, scope: !15813)
!15825 = !DILocation(line: 56, column: 23, scope: !15813)
!15826 = !DILocation(line: 56, column: 29, scope: !15813)
!15827 = !DILocation(line: 56, column: 34, scope: !15813)
!15828 = !DILocation(line: 56, column: 10, scope: !15813)
!15829 = !DILocation(line: 56, column: 3, scope: !15813)
!15830 = distinct !DISubprogram(name: "direntry_cmp_inode", scope: !1080, file: !1080, line: 63, type: !1088, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !143)
!15831 = !DILocalVariable(name: "a", arg: 1, scope: !15830, file: !1080, line: 63, type: !425)
!15832 = !DILocation(line: 63, column: 33, scope: !15830)
!15833 = !DILocalVariable(name: "b", arg: 2, scope: !15830, file: !1080, line: 63, type: !425)
!15834 = !DILocation(line: 63, column: 48, scope: !15830)
!15835 = !DILocalVariable(name: "dea", scope: !15830, file: !1080, line: 65, type: !1103)
!15836 = !DILocation(line: 65, column: 21, scope: !15830)
!15837 = !DILocation(line: 65, column: 27, scope: !15830)
!15838 = !DILocalVariable(name: "deb", scope: !15830, file: !1080, line: 66, type: !1103)
!15839 = !DILocation(line: 66, column: 21, scope: !15830)
!15840 = !DILocation(line: 66, column: 27, scope: !15830)
!15841 = !DILocation(line: 68, column: 10, scope: !15830)
!15842 = !DILocation(line: 68, column: 15, scope: !15830)
!15843 = !DILocation(line: 68, column: 21, scope: !15830)
!15844 = !DILocation(line: 68, column: 26, scope: !15830)
!15845 = !DILocation(line: 68, column: 19, scope: !15830)
!15846 = !DILocation(line: 68, column: 37, scope: !15830)
!15847 = !DILocation(line: 68, column: 42, scope: !15830)
!15848 = !DILocation(line: 68, column: 48, scope: !15830)
!15849 = !DILocation(line: 68, column: 53, scope: !15830)
!15850 = !DILocation(line: 68, column: 46, scope: !15830)
!15851 = !DILocation(line: 68, column: 3, scope: !15830)
!15852 = distinct !DISubprogram(name: "savedir", scope: !1080, file: !1080, line: 189, type: !1101, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1065, retainedNodes: !143)
!15853 = !DILocalVariable(name: "dir", arg: 1, scope: !15852, file: !1080, line: 189, type: !115)
!15854 = !DILocation(line: 189, column: 22, scope: !15852)
!15855 = !DILocalVariable(name: "option", arg: 2, scope: !15852, file: !1080, line: 189, type: !1068)
!15856 = !DILocation(line: 189, column: 47, scope: !15852)
!15857 = !DILocalVariable(name: "dirp", scope: !15852, file: !1080, line: 191, type: !607)
!15858 = !DILocation(line: 191, column: 8, scope: !15852)
!15859 = !DILocation(line: 191, column: 24, scope: !15852)
!15860 = !DILocation(line: 191, column: 15, scope: !15852)
!15861 = !DILocation(line: 192, column: 9, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15852, file: !1080, line: 192, column: 7)
!15863 = !DILocation(line: 192, column: 7, scope: !15852)
!15864 = !DILocation(line: 193, column: 5, scope: !15862)
!15865 = !DILocalVariable(name: "name_space", scope: !15866, file: !1080, line: 196, type: !9)
!15866 = distinct !DILexicalBlock(scope: !15862, file: !1080, line: 195, column: 5)
!15867 = !DILocation(line: 196, column: 13, scope: !15866)
!15868 = !DILocation(line: 196, column: 41, scope: !15866)
!15869 = !DILocation(line: 196, column: 47, scope: !15866)
!15870 = !DILocation(line: 196, column: 26, scope: !15866)
!15871 = !DILocation(line: 197, column: 21, scope: !15872)
!15872 = distinct !DILexicalBlock(scope: !15866, file: !1080, line: 197, column: 11)
!15873 = !DILocation(line: 197, column: 11, scope: !15872)
!15874 = !DILocation(line: 197, column: 27, scope: !15872)
!15875 = !DILocation(line: 197, column: 11, scope: !15866)
!15876 = !DILocalVariable(name: "closedir_errno", scope: !15877, file: !1080, line: 199, type: !7)
!15877 = distinct !DILexicalBlock(scope: !15872, file: !1080, line: 198, column: 9)
!15878 = !DILocation(line: 199, column: 15, scope: !15877)
!15879 = !DILocation(line: 199, column: 32, scope: !15877)
!15880 = !DILocation(line: 200, column: 17, scope: !15877)
!15881 = !DILocation(line: 200, column: 11, scope: !15877)
!15882 = !DILocation(line: 201, column: 19, scope: !15877)
!15883 = !DILocation(line: 201, column: 11, scope: !15877)
!15884 = !DILocation(line: 201, column: 17, scope: !15877)
!15885 = !DILocation(line: 202, column: 11, scope: !15877)
!15886 = !DILocation(line: 204, column: 14, scope: !15866)
!15887 = !DILocation(line: 204, column: 7, scope: !15866)
!15888 = !DILocation(line: 206, column: 1, scope: !15852)
!15889 = distinct !DISubprogram(name: "getcon", scope: !1856, file: !1856, line: 87, type: !1852, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15890 = !DILocalVariable(name: "con", arg: 1, scope: !15889, file: !1856, line: 87, type: !1854)
!15891 = !DILocation(line: 87, column: 29, scope: !15889)
!15892 = !DILocation(line: 88, column: 5, scope: !15889)
!15893 = !DILocation(line: 88, column: 11, scope: !15889)
!15894 = !DILocation(line: 88, column: 22, scope: !15889)
!15895 = distinct !DISubprogram(name: "freecon", scope: !1856, file: !1856, line: 90, type: !1857, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15896 = !DILocalVariable(name: "con", arg: 1, scope: !15895, file: !1856, line: 90, type: !1855)
!15897 = !DILocation(line: 90, column: 29, scope: !15895)
!15898 = !DILocation(line: 90, column: 56, scope: !15895)
!15899 = distinct !DISubprogram(name: "getfscreatecon", scope: !1856, file: !1856, line: 93, type: !1852, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15900 = !DILocalVariable(name: "con", arg: 1, scope: !15899, file: !1856, line: 93, type: !1854)
!15901 = !DILocation(line: 93, column: 37, scope: !15899)
!15902 = !DILocation(line: 94, column: 5, scope: !15899)
!15903 = !DILocation(line: 94, column: 11, scope: !15899)
!15904 = !DILocation(line: 94, column: 22, scope: !15899)
!15905 = distinct !DISubprogram(name: "setfscreatecon", scope: !1856, file: !1856, line: 96, type: !1859, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15906 = !DILocalVariable(name: "con", arg: 1, scope: !15905, file: !1856, line: 96, type: !1855)
!15907 = !DILocation(line: 96, column: 36, scope: !15905)
!15908 = !DILocation(line: 97, column: 5, scope: !15905)
!15909 = !DILocation(line: 97, column: 11, scope: !15905)
!15910 = !DILocation(line: 97, column: 22, scope: !15905)
!15911 = distinct !DISubprogram(name: "matchpathcon", scope: !1856, file: !1856, line: 99, type: !1861, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15912 = !DILocalVariable(name: "file", arg: 1, scope: !15911, file: !1856, line: 99, type: !115)
!15913 = !DILocation(line: 99, column: 27, scope: !15911)
!15914 = !DILocalVariable(name: "m", arg: 2, scope: !15911, file: !1856, line: 100, type: !160)
!15915 = !DILocation(line: 100, column: 22, scope: !15911)
!15916 = !DILocalVariable(name: "con", arg: 3, scope: !15911, file: !1856, line: 101, type: !1854)
!15917 = !DILocation(line: 101, column: 23, scope: !15911)
!15918 = !DILocation(line: 102, column: 5, scope: !15911)
!15919 = !DILocation(line: 102, column: 11, scope: !15911)
!15920 = !DILocation(line: 102, column: 22, scope: !15911)
!15921 = distinct !DISubprogram(name: "getfilecon", scope: !1856, file: !1856, line: 104, type: !1863, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15922 = !DILocalVariable(name: "file", arg: 1, scope: !15921, file: !1856, line: 104, type: !115)
!15923 = !DILocation(line: 104, column: 25, scope: !15921)
!15924 = !DILocalVariable(name: "con", arg: 2, scope: !15921, file: !1856, line: 105, type: !1854)
!15925 = !DILocation(line: 105, column: 33, scope: !15921)
!15926 = !DILocation(line: 106, column: 5, scope: !15921)
!15927 = !DILocation(line: 106, column: 11, scope: !15921)
!15928 = !DILocation(line: 106, column: 22, scope: !15921)
!15929 = distinct !DISubprogram(name: "lgetfilecon", scope: !1856, file: !1856, line: 108, type: !1863, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15930 = !DILocalVariable(name: "file", arg: 1, scope: !15929, file: !1856, line: 108, type: !115)
!15931 = !DILocation(line: 108, column: 26, scope: !15929)
!15932 = !DILocalVariable(name: "con", arg: 2, scope: !15929, file: !1856, line: 109, type: !1854)
!15933 = !DILocation(line: 109, column: 34, scope: !15929)
!15934 = !DILocation(line: 110, column: 5, scope: !15929)
!15935 = !DILocation(line: 110, column: 11, scope: !15929)
!15936 = !DILocation(line: 110, column: 22, scope: !15929)
!15937 = distinct !DISubprogram(name: "fgetfilecon", scope: !1856, file: !1856, line: 112, type: !1865, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15938 = !DILocalVariable(name: "fd", arg: 1, scope: !15937, file: !1856, line: 112, type: !7)
!15939 = !DILocation(line: 112, column: 18, scope: !15937)
!15940 = !DILocalVariable(name: "con", arg: 2, scope: !15937, file: !1856, line: 112, type: !1854)
!15941 = !DILocation(line: 112, column: 42, scope: !15937)
!15942 = !DILocation(line: 113, column: 5, scope: !15937)
!15943 = !DILocation(line: 113, column: 11, scope: !15937)
!15944 = !DILocation(line: 113, column: 22, scope: !15937)
!15945 = distinct !DISubprogram(name: "setfilecon", scope: !1856, file: !1856, line: 115, type: !1867, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15946 = !DILocalVariable(name: "file", arg: 1, scope: !15945, file: !1856, line: 115, type: !115)
!15947 = !DILocation(line: 115, column: 25, scope: !15945)
!15948 = !DILocalVariable(name: "con", arg: 2, scope: !15945, file: !1856, line: 116, type: !1855)
!15949 = !DILocation(line: 116, column: 32, scope: !15945)
!15950 = !DILocation(line: 117, column: 5, scope: !15945)
!15951 = !DILocation(line: 117, column: 11, scope: !15945)
!15952 = !DILocation(line: 117, column: 22, scope: !15945)
!15953 = distinct !DISubprogram(name: "lsetfilecon", scope: !1856, file: !1856, line: 119, type: !1867, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15954 = !DILocalVariable(name: "file", arg: 1, scope: !15953, file: !1856, line: 119, type: !115)
!15955 = !DILocation(line: 119, column: 26, scope: !15953)
!15956 = !DILocalVariable(name: "con", arg: 2, scope: !15953, file: !1856, line: 120, type: !1855)
!15957 = !DILocation(line: 120, column: 33, scope: !15953)
!15958 = !DILocation(line: 121, column: 5, scope: !15953)
!15959 = !DILocation(line: 121, column: 11, scope: !15953)
!15960 = !DILocation(line: 121, column: 22, scope: !15953)
!15961 = distinct !DISubprogram(name: "fsetfilecon", scope: !1856, file: !1856, line: 123, type: !1869, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15962 = !DILocalVariable(name: "fd", arg: 1, scope: !15961, file: !1856, line: 123, type: !7)
!15963 = !DILocation(line: 123, column: 18, scope: !15961)
!15964 = !DILocalVariable(name: "con", arg: 2, scope: !15961, file: !1856, line: 124, type: !1855)
!15965 = !DILocation(line: 124, column: 33, scope: !15961)
!15966 = !DILocation(line: 125, column: 5, scope: !15961)
!15967 = !DILocation(line: 125, column: 11, scope: !15961)
!15968 = !DILocation(line: 125, column: 22, scope: !15961)
!15969 = distinct !DISubprogram(name: "security_check_context", scope: !1856, file: !1856, line: 128, type: !1859, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15970 = !DILocalVariable(name: "con", arg: 1, scope: !15969, file: !1856, line: 128, type: !1855)
!15971 = !DILocation(line: 128, column: 44, scope: !15969)
!15972 = !DILocation(line: 129, column: 5, scope: !15969)
!15973 = !DILocation(line: 129, column: 11, scope: !15969)
!15974 = !DILocation(line: 129, column: 22, scope: !15969)
!15975 = distinct !DISubprogram(name: "security_check_context_raw", scope: !1856, file: !1856, line: 131, type: !1859, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15976 = !DILocalVariable(name: "con", arg: 1, scope: !15975, file: !1856, line: 131, type: !1855)
!15977 = !DILocation(line: 131, column: 48, scope: !15975)
!15978 = !DILocation(line: 132, column: 5, scope: !15975)
!15979 = !DILocation(line: 132, column: 11, scope: !15975)
!15980 = !DILocation(line: 132, column: 22, scope: !15975)
!15981 = distinct !DISubprogram(name: "setexeccon", scope: !1856, file: !1856, line: 134, type: !1859, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15982 = !DILocalVariable(name: "con", arg: 1, scope: !15981, file: !1856, line: 134, type: !1855)
!15983 = !DILocation(line: 134, column: 32, scope: !15981)
!15984 = !DILocation(line: 135, column: 5, scope: !15981)
!15985 = !DILocation(line: 135, column: 11, scope: !15981)
!15986 = !DILocation(line: 135, column: 22, scope: !15981)
!15987 = distinct !DISubprogram(name: "security_compute_create", scope: !1856, file: !1856, line: 137, type: !1871, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!15988 = !DILocalVariable(name: "scon", arg: 1, scope: !15987, file: !1856, line: 137, type: !1855)
!15989 = !DILocation(line: 137, column: 45, scope: !15987)
!15990 = !DILocalVariable(name: "tcon", arg: 2, scope: !15987, file: !1856, line: 138, type: !1855)
!15991 = !DILocation(line: 138, column: 45, scope: !15987)
!15992 = !DILocalVariable(name: "tclass", arg: 3, scope: !15987, file: !1856, line: 139, type: !1873)
!15993 = !DILocation(line: 139, column: 43, scope: !15987)
!15994 = !DILocalVariable(name: "newcon", arg: 4, scope: !15987, file: !1856, line: 140, type: !1854)
!15995 = !DILocation(line: 140, column: 46, scope: !15987)
!15996 = !DILocation(line: 141, column: 5, scope: !15987)
!15997 = !DILocation(line: 141, column: 11, scope: !15987)
!15998 = !DILocation(line: 141, column: 22, scope: !15987)
!15999 = distinct !DISubprogram(name: "string_to_security_class", scope: !1856, file: !1856, line: 143, type: !1874, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!16000 = !DILocalVariable(name: "name", arg: 1, scope: !15999, file: !1856, line: 143, type: !115)
!16001 = !DILocation(line: 143, column: 39, scope: !15999)
!16002 = !DILocation(line: 144, column: 5, scope: !15999)
!16003 = !DILocation(line: 144, column: 11, scope: !15999)
!16004 = !DILocation(line: 144, column: 22, scope: !15999)
!16005 = distinct !DISubprogram(name: "matchpathcon_init_prefix", scope: !1856, file: !1856, line: 146, type: !1876, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1849, retainedNodes: !143)
!16006 = !DILocalVariable(name: "path", arg: 1, scope: !16005, file: !1856, line: 146, type: !115)
!16007 = !DILocation(line: 146, column: 39, scope: !16005)
!16008 = !DILocalVariable(name: "prefix", arg: 2, scope: !16005, file: !1856, line: 147, type: !115)
!16009 = !DILocation(line: 147, column: 39, scope: !16005)
!16010 = !DILocation(line: 148, column: 5, scope: !16005)
!16011 = !DILocation(line: 148, column: 11, scope: !16005)
!16012 = !DILocation(line: 148, column: 22, scope: !16005)
!16013 = distinct !DISubprogram(name: "get_stat_atime_ns", scope: !16014, file: !16014, line: 66, type: !1881, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1878, retainedNodes: !143)
!16014 = !DIFile(filename: "./lib/stat-time.h", directory: "/home/mbarbar/software/coreutils-8.31")
!16015 = !DILocalVariable(name: "st", arg: 1, scope: !16013, file: !16014, line: 66, type: !1883)
!16016 = !DILocation(line: 66, column: 39, scope: !16013)
!16017 = !DILocation(line: 69, column: 10, scope: !16013)
!16018 = !DILocation(line: 69, column: 38, scope: !16013)
!16019 = !{!3179, !3180, i64 80}
!16020 = !DILocation(line: 69, column: 3, scope: !16013)
!16021 = distinct !DISubprogram(name: "get_stat_ctime_ns", scope: !16014, file: !16014, line: 79, type: !1881, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1878, retainedNodes: !143)
!16022 = !DILocalVariable(name: "st", arg: 1, scope: !16021, file: !16014, line: 79, type: !1883)
!16023 = !DILocation(line: 79, column: 39, scope: !16021)
!16024 = !DILocation(line: 82, column: 10, scope: !16021)
!16025 = !DILocation(line: 82, column: 38, scope: !16021)
!16026 = !{!3179, !3180, i64 112}
!16027 = !DILocation(line: 82, column: 3, scope: !16021)
!16028 = distinct !DISubprogram(name: "get_stat_mtime_ns", scope: !16014, file: !16014, line: 92, type: !1881, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1878, retainedNodes: !143)
!16029 = !DILocalVariable(name: "st", arg: 1, scope: !16028, file: !16014, line: 92, type: !1883)
!16030 = !DILocation(line: 92, column: 39, scope: !16028)
!16031 = !DILocation(line: 95, column: 10, scope: !16028)
!16032 = !DILocation(line: 95, column: 38, scope: !16028)
!16033 = !{!3179, !3180, i64 96}
!16034 = !DILocation(line: 95, column: 3, scope: !16028)
!16035 = distinct !DISubprogram(name: "get_stat_birthtime_ns", scope: !16014, file: !16014, line: 105, type: !1881, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1878, retainedNodes: !143)
!16036 = !DILocalVariable(name: "st", arg: 1, scope: !16035, file: !16014, line: 105, type: !1883)
!16037 = !DILocation(line: 105, column: 43, scope: !16035)
!16038 = !DILocation(line: 112, column: 3, scope: !16035)
!16039 = distinct !DISubprogram(name: "get_stat_atime", scope: !16014, file: !16014, line: 118, type: !1906, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1878, retainedNodes: !143)
!16040 = !DILocalVariable(name: "st", arg: 1, scope: !16039, file: !16014, line: 118, type: !1883)
!16041 = !DILocation(line: 118, column: 36, scope: !16039)
!16042 = !DILocation(line: 121, column: 10, scope: !16039)
!16043 = !DILocation(line: 121, column: 3, scope: !16039)
!16044 = distinct !DISubprogram(name: "get_stat_ctime", scope: !16014, file: !16014, line: 132, type: !1906, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1878, retainedNodes: !143)
!16045 = !DILocalVariable(name: "st", arg: 1, scope: !16044, file: !16014, line: 132, type: !1883)
!16046 = !DILocation(line: 132, column: 36, scope: !16044)
!16047 = !DILocation(line: 135, column: 10, scope: !16044)
!16048 = !DILocation(line: 135, column: 3, scope: !16044)
!16049 = distinct !DISubprogram(name: "get_stat_mtime", scope: !16014, file: !16014, line: 146, type: !1906, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1878, retainedNodes: !143)
!16050 = !DILocalVariable(name: "st", arg: 1, scope: !16049, file: !16014, line: 146, type: !1883)
!16051 = !DILocation(line: 146, column: 36, scope: !16049)
!16052 = !DILocation(line: 149, column: 10, scope: !16049)
!16053 = !DILocation(line: 149, column: 3, scope: !16049)
!16054 = distinct !DISubprogram(name: "get_stat_birthtime", scope: !16014, file: !16014, line: 161, type: !1906, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1878, retainedNodes: !143)
!16055 = !DILocalVariable(name: "st", arg: 1, scope: !16054, file: !16014, line: 161, type: !1883)
!16056 = !DILocation(line: 161, column: 40, scope: !16054)
!16057 = !DILocalVariable(name: "t", scope: !16054, file: !16014, line: 163, type: !1899)
!16058 = !DILocation(line: 163, column: 19, scope: !16054)
!16059 = !DILocation(line: 183, column: 5, scope: !16054)
!16060 = !DILocation(line: 183, column: 12, scope: !16054)
!16061 = !{!3181, !3180, i64 0}
!16062 = !DILocation(line: 184, column: 5, scope: !16054)
!16063 = !DILocation(line: 184, column: 13, scope: !16054)
!16064 = !{!3181, !3180, i64 8}
!16065 = !DILocation(line: 202, column: 3, scope: !16054)
!16066 = distinct !DISubprogram(name: "stat_time_normalize", scope: !16014, file: !16014, line: 211, type: !1908, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1878, retainedNodes: !143)
!16067 = !DILocalVariable(name: "result", arg: 1, scope: !16066, file: !16014, line: 211, type: !7)
!16068 = !DILocation(line: 211, column: 26, scope: !16066)
!16069 = !DILocalVariable(name: "st", arg: 2, scope: !16066, file: !16014, line: 211, type: !1910)
!16070 = !DILocation(line: 211, column: 47, scope: !16066)
!16071 = !DILocation(line: 243, column: 10, scope: !16066)
!16072 = !DILocation(line: 243, column: 3, scope: !16066)
!16073 = distinct !DISubprogram(name: "statat", scope: !16074, file: !16074, line: 102, type: !1914, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1911, retainedNodes: !143)
!16074 = !DIFile(filename: "./lib/openat.h", directory: "/home/mbarbar/software/coreutils-8.31")
!16075 = !DILocalVariable(name: "fd", arg: 1, scope: !16073, file: !16074, line: 102, type: !7)
!16076 = !DILocation(line: 102, column: 13, scope: !16073)
!16077 = !DILocalVariable(name: "name", arg: 2, scope: !16073, file: !16074, line: 102, type: !115)
!16078 = !DILocation(line: 102, column: 29, scope: !16073)
!16079 = !DILocalVariable(name: "st", arg: 3, scope: !16073, file: !16074, line: 102, type: !1916)
!16080 = !DILocation(line: 102, column: 48, scope: !16073)
!16081 = !DILocation(line: 104, column: 19, scope: !16073)
!16082 = !DILocation(line: 104, column: 23, scope: !16073)
!16083 = !DILocation(line: 104, column: 29, scope: !16073)
!16084 = !DILocation(line: 104, column: 10, scope: !16073)
!16085 = !DILocation(line: 104, column: 3, scope: !16073)
!16086 = distinct !DISubprogram(name: "lstatat", scope: !16074, file: !16074, line: 108, type: !1914, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1911, retainedNodes: !143)
!16087 = !DILocalVariable(name: "fd", arg: 1, scope: !16086, file: !16074, line: 108, type: !7)
!16088 = !DILocation(line: 108, column: 14, scope: !16086)
!16089 = !DILocalVariable(name: "name", arg: 2, scope: !16086, file: !16074, line: 108, type: !115)
!16090 = !DILocation(line: 108, column: 30, scope: !16086)
!16091 = !DILocalVariable(name: "st", arg: 3, scope: !16086, file: !16074, line: 108, type: !1916)
!16092 = !DILocation(line: 108, column: 49, scope: !16086)
!16093 = !DILocation(line: 110, column: 19, scope: !16086)
!16094 = !DILocation(line: 110, column: 23, scope: !16086)
!16095 = !DILocation(line: 110, column: 29, scope: !16086)
!16096 = !DILocation(line: 110, column: 10, scope: !16086)
!16097 = !DILocation(line: 110, column: 3, scope: !16086)
!16098 = distinct !DISubprogram(name: "try_tempname_len", scope: !1129, file: !1129, line: 188, type: !1111, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1108, retainedNodes: !143)
!16099 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16098, file: !1129, line: 188, type: !9)
!16100 = !DILocation(line: 188, column: 25, scope: !16098)
!16101 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16098, file: !1129, line: 188, type: !7)
!16102 = !DILocation(line: 188, column: 35, scope: !16098)
!16103 = !DILocalVariable(name: "args", arg: 3, scope: !16098, file: !1129, line: 188, type: !53)
!16104 = !DILocation(line: 188, column: 52, scope: !16098)
!16105 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !16098, file: !1129, line: 189, type: !1113)
!16106 = !DILocation(line: 189, column: 25, scope: !16098)
!16107 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !16098, file: !1129, line: 189, type: !55)
!16108 = !DILocation(line: 189, column: 59, scope: !16098)
!16109 = !DILocalVariable(name: "len", scope: !16098, file: !1129, line: 191, type: !55)
!16110 = !DILocation(line: 191, column: 10, scope: !16098)
!16111 = !DILocalVariable(name: "XXXXXX", scope: !16098, file: !1129, line: 192, type: !9)
!16112 = !DILocation(line: 192, column: 9, scope: !16098)
!16113 = !DILocalVariable(name: "count", scope: !16098, file: !1129, line: 193, type: !70)
!16114 = !DILocation(line: 193, column: 16, scope: !16098)
!16115 = !DILocalVariable(name: "fd", scope: !16098, file: !1129, line: 194, type: !7)
!16116 = !DILocation(line: 194, column: 7, scope: !16098)
!16117 = !DILocalVariable(name: "save_errno", scope: !16098, file: !1129, line: 195, type: !7)
!16118 = !DILocation(line: 195, column: 7, scope: !16098)
!16119 = !DILocation(line: 195, column: 20, scope: !16098)
!16120 = !DILocalVariable(name: "rand_src", scope: !16098, file: !1129, line: 196, type: !1114)
!16121 = !DILocation(line: 196, column: 26, scope: !16098)
!16122 = !DILocalVariable(name: "attempts", scope: !16098, file: !1129, line: 212, type: !70)
!16123 = !DILocation(line: 212, column: 16, scope: !16098)
!16124 = !DILocation(line: 215, column: 17, scope: !16098)
!16125 = !DILocation(line: 215, column: 9, scope: !16098)
!16126 = !DILocation(line: 215, column: 7, scope: !16098)
!16127 = !DILocation(line: 216, column: 7, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16098, file: !1129, line: 216, column: 7)
!16129 = !DILocation(line: 216, column: 13, scope: !16128)
!16130 = !DILocation(line: 216, column: 28, scope: !16128)
!16131 = !DILocation(line: 216, column: 26, scope: !16128)
!16132 = !DILocation(line: 216, column: 11, scope: !16128)
!16133 = !DILocation(line: 217, column: 7, scope: !16128)
!16134 = !DILocation(line: 217, column: 29, scope: !16128)
!16135 = !DILocation(line: 217, column: 34, scope: !16128)
!16136 = !DILocation(line: 217, column: 40, scope: !16128)
!16137 = !DILocation(line: 217, column: 38, scope: !16128)
!16138 = !DILocation(line: 217, column: 55, scope: !16128)
!16139 = !DILocation(line: 217, column: 53, scope: !16128)
!16140 = !DILocation(line: 218, column: 28, scope: !16128)
!16141 = !DILocation(line: 217, column: 12, scope: !16128)
!16142 = !DILocation(line: 216, column: 7, scope: !16098)
!16143 = !DILocation(line: 220, column: 7, scope: !16144)
!16144 = distinct !DILexicalBlock(scope: !16128, file: !1129, line: 219, column: 5)
!16145 = !DILocation(line: 221, column: 7, scope: !16144)
!16146 = !DILocation(line: 225, column: 13, scope: !16098)
!16147 = !DILocation(line: 225, column: 18, scope: !16098)
!16148 = !DILocation(line: 225, column: 24, scope: !16098)
!16149 = !DILocation(line: 225, column: 22, scope: !16098)
!16150 = !DILocation(line: 225, column: 39, scope: !16098)
!16151 = !DILocation(line: 225, column: 37, scope: !16098)
!16152 = !DILocation(line: 225, column: 10, scope: !16098)
!16153 = !DILocation(line: 228, column: 37, scope: !16098)
!16154 = !DILocation(line: 228, column: 14, scope: !16098)
!16155 = !DILocation(line: 228, column: 12, scope: !16098)
!16156 = !DILocation(line: 229, column: 9, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !16098, file: !1129, line: 229, column: 7)
!16158 = !DILocation(line: 229, column: 7, scope: !16098)
!16159 = !DILocation(line: 230, column: 5, scope: !16157)
!16160 = !DILocation(line: 232, column: 14, scope: !16161)
!16161 = distinct !DILexicalBlock(scope: !16098, file: !1129, line: 232, column: 3)
!16162 = !DILocation(line: 232, column: 8, scope: !16161)
!16163 = !DILocation(line: 232, column: 19, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !16161, file: !1129, line: 232, column: 3)
!16165 = !DILocation(line: 232, column: 27, scope: !16164)
!16166 = !DILocation(line: 232, column: 25, scope: !16164)
!16167 = !DILocation(line: 232, column: 3, scope: !16161)
!16168 = !DILocalVariable(name: "i", scope: !16169, file: !1129, line: 234, type: !55)
!16169 = distinct !DILexicalBlock(scope: !16164, file: !1129, line: 233, column: 5)
!16170 = !DILocation(line: 234, column: 14, scope: !16169)
!16171 = !DILocation(line: 236, column: 14, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16169, file: !1129, line: 236, column: 7)
!16173 = !DILocation(line: 236, column: 12, scope: !16172)
!16174 = !DILocation(line: 236, column: 19, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16172, file: !1129, line: 236, column: 7)
!16176 = !DILocation(line: 236, column: 23, scope: !16175)
!16177 = !DILocation(line: 236, column: 21, scope: !16175)
!16178 = !DILocation(line: 236, column: 7, scope: !16172)
!16179 = !DILocation(line: 237, column: 45, scope: !16175)
!16180 = !DILocation(line: 237, column: 29, scope: !16175)
!16181 = !DILocation(line: 237, column: 21, scope: !16175)
!16182 = !DILocation(line: 237, column: 9, scope: !16175)
!16183 = !DILocation(line: 237, column: 16, scope: !16175)
!16184 = !DILocation(line: 237, column: 19, scope: !16175)
!16185 = !DILocation(line: 236, column: 38, scope: !16175)
!16186 = !DILocation(line: 236, column: 7, scope: !16175)
!16187 = distinct !{!16187, !16178, !16188}
!16188 = !DILocation(line: 237, column: 74, scope: !16172)
!16189 = !DILocation(line: 239, column: 12, scope: !16169)
!16190 = !DILocation(line: 239, column: 21, scope: !16169)
!16191 = !DILocation(line: 239, column: 27, scope: !16169)
!16192 = !DILocation(line: 239, column: 10, scope: !16169)
!16193 = !DILocation(line: 240, column: 11, scope: !16194)
!16194 = distinct !DILexicalBlock(scope: !16169, file: !1129, line: 240, column: 11)
!16195 = !DILocation(line: 240, column: 14, scope: !16194)
!16196 = !DILocation(line: 240, column: 11, scope: !16169)
!16197 = !DILocation(line: 242, column: 11, scope: !16198)
!16198 = distinct !DILexicalBlock(scope: !16194, file: !1129, line: 241, column: 9)
!16199 = !DILocation(line: 243, column: 11, scope: !16198)
!16200 = !DILocation(line: 245, column: 16, scope: !16201)
!16201 = distinct !DILexicalBlock(scope: !16194, file: !1129, line: 245, column: 16)
!16202 = !DILocation(line: 245, column: 22, scope: !16201)
!16203 = !DILocation(line: 245, column: 16, scope: !16194)
!16204 = !DILocation(line: 247, column: 14, scope: !16205)
!16205 = distinct !DILexicalBlock(scope: !16201, file: !1129, line: 246, column: 9)
!16206 = !DILocation(line: 248, column: 11, scope: !16205)
!16207 = !DILocation(line: 250, column: 5, scope: !16169)
!16208 = !DILocation(line: 232, column: 37, scope: !16164)
!16209 = !DILocation(line: 232, column: 3, scope: !16164)
!16210 = distinct !{!16210, !16167, !16211}
!16211 = !DILocation(line: 250, column: 5, scope: !16161)
!16212 = !DILocation(line: 252, column: 21, scope: !16098)
!16213 = !DILocation(line: 252, column: 3, scope: !16098)
!16214 = !DILocation(line: 255, column: 3, scope: !16098)
!16215 = !DILocation(line: 256, column: 3, scope: !16098)
!16216 = !DILabel(scope: !16098, name: "done", file: !1129, line: 258)
!16217 = !DILocation(line: 258, column: 2, scope: !16098)
!16218 = !DILocalVariable(name: "saved_errno", scope: !16219, file: !1129, line: 260, type: !7)
!16219 = distinct !DILexicalBlock(scope: !16098, file: !1129, line: 259, column: 3)
!16220 = !DILocation(line: 260, column: 9, scope: !16219)
!16221 = !DILocation(line: 260, column: 23, scope: !16219)
!16222 = !DILocation(line: 261, column: 23, scope: !16219)
!16223 = !DILocation(line: 261, column: 5, scope: !16219)
!16224 = !DILocation(line: 262, column: 5, scope: !16219)
!16225 = !DILocation(line: 264, column: 10, scope: !16098)
!16226 = !DILocation(line: 264, column: 3, scope: !16098)
!16227 = !DILocation(line: 265, column: 1, scope: !16098)
!16228 = distinct !DISubprogram(name: "check_x_suffix", scope: !1129, file: !1129, line: 178, type: !1126, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1108, retainedNodes: !143)
!16229 = !DILocalVariable(name: "s", arg: 1, scope: !16228, file: !1129, line: 178, type: !115)
!16230 = !DILocation(line: 178, column: 29, scope: !16228)
!16231 = !DILocalVariable(name: "len", arg: 2, scope: !16228, file: !1129, line: 178, type: !55)
!16232 = !DILocation(line: 178, column: 39, scope: !16228)
!16233 = !DILocation(line: 180, column: 10, scope: !16228)
!16234 = !DILocation(line: 180, column: 25, scope: !16228)
!16235 = !DILocation(line: 180, column: 17, scope: !16228)
!16236 = !DILocation(line: 180, column: 14, scope: !16228)
!16237 = !DILocation(line: 180, column: 3, scope: !16228)
!16238 = distinct !DISubprogram(name: "gen_tempname_len", scope: !1129, file: !1129, line: 307, type: !1120, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1108, retainedNodes: !143)
!16239 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16238, file: !1129, line: 307, type: !9)
!16240 = !DILocation(line: 307, column: 25, scope: !16238)
!16241 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16238, file: !1129, line: 307, type: !7)
!16242 = !DILocation(line: 307, column: 35, scope: !16238)
!16243 = !DILocalVariable(name: "flags", arg: 3, scope: !16238, file: !1129, line: 307, type: !7)
!16244 = !DILocation(line: 307, column: 50, scope: !16238)
!16245 = !DILocalVariable(name: "kind", arg: 4, scope: !16238, file: !1129, line: 307, type: !7)
!16246 = !DILocation(line: 307, column: 61, scope: !16238)
!16247 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !16238, file: !1129, line: 308, type: !55)
!16248 = !DILocation(line: 308, column: 26, scope: !16238)
!16249 = !DILocalVariable(name: "tryfunc", scope: !16238, file: !1129, line: 310, type: !1113)
!16250 = !DILocation(line: 310, column: 9, scope: !16238)
!16251 = !DILocation(line: 312, column: 11, scope: !16238)
!16252 = !DILocation(line: 312, column: 3, scope: !16238)
!16253 = !DILocation(line: 315, column: 15, scope: !16254)
!16254 = distinct !DILexicalBlock(scope: !16238, file: !1129, line: 313, column: 5)
!16255 = !DILocation(line: 316, column: 7, scope: !16254)
!16256 = !DILocation(line: 319, column: 15, scope: !16254)
!16257 = !DILocation(line: 320, column: 7, scope: !16254)
!16258 = !DILocation(line: 323, column: 15, scope: !16254)
!16259 = !DILocation(line: 324, column: 7, scope: !16254)
!16260 = !DILocation(line: 327, column: 7, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !16262, file: !1129, line: 327, column: 7)
!16262 = distinct !DILexicalBlock(scope: !16254, file: !1129, line: 327, column: 7)
!16263 = !DILocation(line: 330, column: 28, scope: !16238)
!16264 = !DILocation(line: 330, column: 34, scope: !16238)
!16265 = !DILocation(line: 330, column: 45, scope: !16238)
!16266 = !DILocation(line: 330, column: 53, scope: !16238)
!16267 = !DILocation(line: 330, column: 62, scope: !16238)
!16268 = !DILocation(line: 330, column: 10, scope: !16238)
!16269 = !DILocation(line: 330, column: 3, scope: !16238)
!16270 = distinct !DISubprogram(name: "try_file", scope: !1129, file: !1129, line: 268, type: !570, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1108, retainedNodes: !143)
!16271 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16270, file: !1129, line: 268, type: !9)
!16272 = !DILocation(line: 268, column: 17, scope: !16270)
!16273 = !DILocalVariable(name: "flags", arg: 2, scope: !16270, file: !1129, line: 268, type: !53)
!16274 = !DILocation(line: 268, column: 29, scope: !16270)
!16275 = !DILocalVariable(name: "openflags", scope: !16270, file: !1129, line: 270, type: !129)
!16276 = !DILocation(line: 270, column: 8, scope: !16270)
!16277 = !DILocation(line: 270, column: 20, scope: !16270)
!16278 = !DILocation(line: 271, column: 18, scope: !16270)
!16279 = !DILocation(line: 272, column: 20, scope: !16270)
!16280 = !DILocation(line: 272, column: 19, scope: !16270)
!16281 = !DILocation(line: 272, column: 30, scope: !16270)
!16282 = !DILocation(line: 273, column: 18, scope: !16270)
!16283 = !DILocation(line: 273, column: 27, scope: !16270)
!16284 = !DILocation(line: 273, column: 37, scope: !16270)
!16285 = !DILocation(line: 271, column: 10, scope: !16270)
!16286 = !DILocation(line: 271, column: 3, scope: !16270)
!16287 = distinct !DISubprogram(name: "try_dir", scope: !1129, file: !1129, line: 277, type: !570, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1108, retainedNodes: !143)
!16288 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16287, file: !1129, line: 277, type: !9)
!16289 = !DILocation(line: 277, column: 16, scope: !16287)
!16290 = !DILocalVariable(name: "flags", arg: 2, scope: !16287, file: !1129, line: 277, type: !53)
!16291 = !DILocation(line: 277, column: 28, scope: !16287)
!16292 = !DILocation(line: 279, column: 19, scope: !16287)
!16293 = !DILocation(line: 279, column: 10, scope: !16287)
!16294 = !DILocation(line: 279, column: 3, scope: !16287)
!16295 = distinct !DISubprogram(name: "try_nocreate", scope: !1129, file: !1129, line: 283, type: !570, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1108, retainedNodes: !143)
!16296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !16297)
!16297 = !{!16298, !16299, !16300, !16301, !16302, !16303, !16304, !16305, !16306, !16307, !16308, !16309, !16314, !16315, !16316}
!16298 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !16296, file: !318, line: 48, baseType: !231, size: 64)
!16299 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !16296, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!16300 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !16296, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!16301 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !16296, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!16302 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !16296, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!16303 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !16296, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!16304 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !16296, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!16305 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !16296, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!16306 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !16296, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!16307 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !16296, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!16308 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !16296, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!16309 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !16296, file: !318, line: 91, baseType: !16310, size: 128, offset: 576)
!16310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !16311)
!16311 = !{!16312, !16313}
!16312 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !16310, file: !338, line: 11, baseType: !341, size: 64)
!16313 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !16310, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!16314 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !16296, file: !318, line: 92, baseType: !16310, size: 128, offset: 704)
!16315 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !16296, file: !318, line: 93, baseType: !16310, size: 128, offset: 832)
!16316 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !16296, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!16317 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16295, file: !1129, line: 283, type: !9)
!16318 = !DILocation(line: 283, column: 21, scope: !16295)
!16319 = !DILocalVariable(name: "flags", arg: 2, scope: !16295, file: !1129, line: 283, type: !53)
!16320 = !DILocation(line: 283, column: 33, scope: !16295)
!16321 = !DILocalVariable(name: "st", scope: !16295, file: !1129, line: 285, type: !16296)
!16322 = !DILocation(line: 285, column: 17, scope: !16295)
!16323 = !DILocation(line: 287, column: 7, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16295, file: !1129, line: 287, column: 7)
!16325 = !DILocation(line: 287, column: 41, scope: !16324)
!16326 = !DILocation(line: 287, column: 46, scope: !16324)
!16327 = !DILocation(line: 287, column: 49, scope: !16324)
!16328 = !DILocation(line: 287, column: 55, scope: !16324)
!16329 = !DILocation(line: 287, column: 7, scope: !16295)
!16330 = !DILocation(line: 288, column: 5, scope: !16324)
!16331 = !DILocation(line: 289, column: 10, scope: !16295)
!16332 = !DILocation(line: 289, column: 16, scope: !16295)
!16333 = !DILocation(line: 289, column: 3, scope: !16295)
!16334 = distinct !DISubprogram(name: "gen_tempname", scope: !1129, file: !1129, line: 334, type: !1122, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1108, retainedNodes: !143)
!16335 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16334, file: !1129, line: 334, type: !9)
!16336 = !DILocation(line: 334, column: 23, scope: !16334)
!16337 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16334, file: !1129, line: 334, type: !7)
!16338 = !DILocation(line: 334, column: 33, scope: !16334)
!16339 = !DILocalVariable(name: "flags", arg: 3, scope: !16334, file: !1129, line: 334, type: !7)
!16340 = !DILocation(line: 334, column: 48, scope: !16334)
!16341 = !DILocalVariable(name: "kind", arg: 4, scope: !16334, file: !1129, line: 334, type: !7)
!16342 = !DILocation(line: 334, column: 59, scope: !16334)
!16343 = !DILocation(line: 336, column: 28, scope: !16334)
!16344 = !DILocation(line: 336, column: 34, scope: !16334)
!16345 = !DILocation(line: 336, column: 45, scope: !16334)
!16346 = !DILocation(line: 336, column: 52, scope: !16334)
!16347 = !DILocation(line: 336, column: 10, scope: !16334)
!16348 = !DILocation(line: 336, column: 3, scope: !16334)
!16349 = distinct !DISubprogram(name: "try_tempname", scope: !1129, file: !1129, line: 340, type: !1124, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1108, retainedNodes: !143)
!16350 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16349, file: !1129, line: 340, type: !9)
!16351 = !DILocation(line: 340, column: 23, scope: !16349)
!16352 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16349, file: !1129, line: 340, type: !7)
!16353 = !DILocation(line: 340, column: 33, scope: !16349)
!16354 = !DILocalVariable(name: "args", arg: 3, scope: !16349, file: !1129, line: 340, type: !53)
!16355 = !DILocation(line: 340, column: 50, scope: !16349)
!16356 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !16349, file: !1129, line: 341, type: !1113)
!16357 = !DILocation(line: 341, column: 23, scope: !16349)
!16358 = !DILocation(line: 343, column: 28, scope: !16349)
!16359 = !DILocation(line: 343, column: 34, scope: !16349)
!16360 = !DILocation(line: 343, column: 45, scope: !16349)
!16361 = !DILocation(line: 343, column: 51, scope: !16349)
!16362 = !DILocation(line: 343, column: 10, scope: !16349)
!16363 = !DILocation(line: 343, column: 3, scope: !16349)
!16364 = distinct !DISubprogram(name: "fd_safer", scope: !16365, file: !16365, line: 37, type: !1827, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !143)
!16365 = !DIFile(filename: "lib/fd-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!16366 = !DILocalVariable(name: "fd", arg: 1, scope: !16364, file: !16365, line: 37, type: !7)
!16367 = !DILocation(line: 37, column: 15, scope: !16364)
!16368 = !DILocation(line: 39, column: 23, scope: !16369)
!16369 = distinct !DILexicalBlock(scope: !16364, file: !16365, line: 39, column: 7)
!16370 = !DILocation(line: 39, column: 20, scope: !16369)
!16371 = !DILocation(line: 39, column: 26, scope: !16369)
!16372 = !DILocation(line: 39, column: 29, scope: !16369)
!16373 = !DILocation(line: 39, column: 32, scope: !16369)
!16374 = !DILocation(line: 39, column: 7, scope: !16364)
!16375 = !DILocalVariable(name: "f", scope: !16376, file: !16365, line: 41, type: !7)
!16376 = distinct !DILexicalBlock(scope: !16369, file: !16365, line: 40, column: 5)
!16377 = !DILocation(line: 41, column: 11, scope: !16376)
!16378 = !DILocation(line: 41, column: 26, scope: !16376)
!16379 = !DILocation(line: 41, column: 15, scope: !16376)
!16380 = !DILocalVariable(name: "e", scope: !16376, file: !16365, line: 42, type: !7)
!16381 = !DILocation(line: 42, column: 11, scope: !16376)
!16382 = !DILocation(line: 42, column: 15, scope: !16376)
!16383 = !DILocation(line: 43, column: 14, scope: !16376)
!16384 = !DILocation(line: 43, column: 7, scope: !16376)
!16385 = !DILocation(line: 44, column: 15, scope: !16376)
!16386 = !DILocation(line: 44, column: 7, scope: !16376)
!16387 = !DILocation(line: 44, column: 13, scope: !16376)
!16388 = !DILocation(line: 45, column: 12, scope: !16376)
!16389 = !DILocation(line: 45, column: 10, scope: !16376)
!16390 = !DILocation(line: 46, column: 5, scope: !16376)
!16391 = !DILocation(line: 48, column: 10, scope: !16364)
!16392 = !DILocation(line: 48, column: 3, scope: !16364)
!16393 = distinct !DISubprogram(name: "utimecmp", scope: !1133, file: !1133, line: 123, type: !1162, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1159, retainedNodes: !143)
!16394 = !DILocalVariable(name: "dst_name", arg: 1, scope: !16393, file: !1133, line: 123, type: !115)
!16395 = !DILocation(line: 123, column: 23, scope: !16393)
!16396 = !DILocalVariable(name: "dst_stat", arg: 2, scope: !16393, file: !1133, line: 124, type: !1136)
!16397 = !DILocation(line: 124, column: 30, scope: !16393)
!16398 = !DILocalVariable(name: "src_stat", arg: 3, scope: !16393, file: !1133, line: 125, type: !1136)
!16399 = !DILocation(line: 125, column: 30, scope: !16393)
!16400 = !DILocalVariable(name: "options", arg: 4, scope: !16393, file: !1133, line: 126, type: !7)
!16401 = !DILocation(line: 126, column: 15, scope: !16393)
!16402 = !DILocation(line: 128, column: 32, scope: !16393)
!16403 = !DILocation(line: 128, column: 42, scope: !16393)
!16404 = !DILocation(line: 128, column: 52, scope: !16393)
!16405 = !DILocation(line: 128, column: 62, scope: !16393)
!16406 = !DILocation(line: 128, column: 10, scope: !16393)
!16407 = !DILocation(line: 128, column: 3, scope: !16393)
!16408 = !DILocalVariable(name: "dfd", arg: 1, scope: !1132, file: !1133, line: 132, type: !7)
!16409 = !DILocation(line: 132, column: 17, scope: !1132)
!16410 = !DILocalVariable(name: "dst_name", arg: 2, scope: !1132, file: !1133, line: 132, type: !115)
!16411 = !DILocation(line: 132, column: 34, scope: !1132)
!16412 = !DILocalVariable(name: "dst_stat", arg: 3, scope: !1132, file: !1133, line: 133, type: !1136)
!16413 = !DILocation(line: 133, column: 32, scope: !1132)
!16414 = !DILocalVariable(name: "src_stat", arg: 4, scope: !1132, file: !1133, line: 134, type: !1136)
!16415 = !DILocation(line: 134, column: 32, scope: !1132)
!16416 = !DILocalVariable(name: "options", arg: 5, scope: !1132, file: !1133, line: 135, type: !7)
!16417 = !DILocation(line: 135, column: 17, scope: !1132)
!16418 = !DILocalVariable(name: "dst_s", scope: !1132, file: !1133, line: 153, type: !1164)
!16419 = !DILocation(line: 153, column: 10, scope: !1132)
!16420 = !DILocation(line: 153, column: 18, scope: !1132)
!16421 = !DILocation(line: 153, column: 28, scope: !1132)
!16422 = !{!3179, !3180, i64 88}
!16423 = !DILocalVariable(name: "src_s", scope: !1132, file: !1133, line: 154, type: !1164)
!16424 = !DILocation(line: 154, column: 10, scope: !1132)
!16425 = !DILocation(line: 154, column: 18, scope: !1132)
!16426 = !DILocation(line: 154, column: 28, scope: !1132)
!16427 = !DILocalVariable(name: "dst_ns", scope: !1132, file: !1133, line: 155, type: !7)
!16428 = !DILocation(line: 155, column: 7, scope: !1132)
!16429 = !DILocation(line: 155, column: 35, scope: !1132)
!16430 = !DILocation(line: 155, column: 16, scope: !1132)
!16431 = !DILocalVariable(name: "src_ns", scope: !1132, file: !1133, line: 156, type: !7)
!16432 = !DILocation(line: 156, column: 7, scope: !1132)
!16433 = !DILocation(line: 156, column: 35, scope: !1132)
!16434 = !DILocation(line: 156, column: 16, scope: !1132)
!16435 = !DILocation(line: 158, column: 7, scope: !16436)
!16436 = distinct !DILexicalBlock(scope: !1132, file: !1133, line: 158, column: 7)
!16437 = !DILocation(line: 158, column: 15, scope: !16436)
!16438 = !DILocation(line: 158, column: 7, scope: !1132)
!16439 = !DILocalVariable(name: "dst_res", scope: !16440, file: !1133, line: 167, type: !1166)
!16440 = distinct !DILexicalBlock(scope: !16436, file: !1133, line: 159, column: 5)
!16441 = !DILocation(line: 167, column: 22, scope: !16440)
!16442 = !DILocalVariable(name: "tmp_dst_res", scope: !16440, file: !1133, line: 168, type: !1167)
!16443 = !DILocation(line: 168, column: 21, scope: !16440)
!16444 = !DILocalVariable(name: "res", scope: !16440, file: !1133, line: 171, type: !7)
!16445 = !DILocation(line: 171, column: 11, scope: !16440)
!16446 = !DILocation(line: 176, column: 11, scope: !16447)
!16447 = distinct !DILexicalBlock(scope: !16440, file: !1133, line: 176, column: 11)
!16448 = !DILocation(line: 176, column: 20, scope: !16447)
!16449 = !DILocation(line: 176, column: 17, scope: !16447)
!16450 = !DILocation(line: 176, column: 26, scope: !16447)
!16451 = !DILocation(line: 176, column: 29, scope: !16447)
!16452 = !DILocation(line: 176, column: 39, scope: !16447)
!16453 = !DILocation(line: 176, column: 36, scope: !16447)
!16454 = !DILocation(line: 176, column: 11, scope: !16440)
!16455 = !DILocation(line: 177, column: 9, scope: !16447)
!16456 = !DILocation(line: 178, column: 11, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16440, file: !1133, line: 178, column: 11)
!16458 = !DILocation(line: 178, column: 20, scope: !16457)
!16459 = !DILocation(line: 178, column: 26, scope: !16457)
!16460 = !DILocation(line: 178, column: 17, scope: !16457)
!16461 = !DILocation(line: 178, column: 11, scope: !16440)
!16462 = !DILocation(line: 179, column: 9, scope: !16457)
!16463 = !DILocation(line: 180, column: 11, scope: !16464)
!16464 = distinct !DILexicalBlock(scope: !16440, file: !1133, line: 180, column: 11)
!16465 = !DILocation(line: 180, column: 20, scope: !16464)
!16466 = !DILocation(line: 180, column: 26, scope: !16464)
!16467 = !DILocation(line: 180, column: 17, scope: !16464)
!16468 = !DILocation(line: 180, column: 11, scope: !16440)
!16469 = !DILocation(line: 181, column: 9, scope: !16464)
!16470 = !DILocation(line: 185, column: 13, scope: !16471)
!16471 = distinct !DILexicalBlock(scope: !16440, file: !1133, line: 185, column: 11)
!16472 = !DILocation(line: 185, column: 11, scope: !16440)
!16473 = !DILocation(line: 186, column: 14, scope: !16471)
!16474 = !DILocation(line: 186, column: 12, scope: !16471)
!16475 = !DILocation(line: 186, column: 9, scope: !16471)
!16476 = !DILocation(line: 187, column: 11, scope: !16477)
!16477 = distinct !DILexicalBlock(scope: !16440, file: !1133, line: 187, column: 11)
!16478 = !DILocation(line: 187, column: 11, scope: !16440)
!16479 = !DILocation(line: 189, column: 17, scope: !16480)
!16480 = distinct !DILexicalBlock(scope: !16481, file: !1133, line: 189, column: 15)
!16481 = distinct !DILexicalBlock(scope: !16477, file: !1133, line: 188, column: 9)
!16482 = !DILocation(line: 189, column: 15, scope: !16481)
!16483 = !DILocation(line: 191, column: 29, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16480, file: !1133, line: 190, column: 13)
!16485 = !DILocation(line: 191, column: 27, scope: !16484)
!16486 = !DILocation(line: 192, column: 20, scope: !16487)
!16487 = distinct !DILexicalBlock(scope: !16484, file: !1133, line: 192, column: 19)
!16488 = !DILocation(line: 192, column: 19, scope: !16484)
!16489 = !DILocation(line: 193, column: 17, scope: !16487)
!16490 = !DILocation(line: 194, column: 15, scope: !16484)
!16491 = !DILocation(line: 194, column: 28, scope: !16484)
!16492 = !DILocation(line: 194, column: 39, scope: !16484)
!16493 = !{!16494, !2983, i64 8}
!16494 = !{!"fs_res", !3180, i64 0, !2983, i64 8, !3107, i64 12}
!16495 = !DILocation(line: 195, column: 15, scope: !16484)
!16496 = !DILocation(line: 195, column: 28, scope: !16484)
!16497 = !DILocation(line: 195, column: 34, scope: !16484)
!16498 = !{!16494, !3107, i64 12}
!16499 = !DILocation(line: 196, column: 13, scope: !16484)
!16500 = !DILocation(line: 197, column: 30, scope: !16481)
!16501 = !DILocation(line: 197, column: 40, scope: !16481)
!16502 = !DILocation(line: 197, column: 11, scope: !16481)
!16503 = !DILocation(line: 197, column: 24, scope: !16481)
!16504 = !DILocation(line: 197, column: 28, scope: !16481)
!16505 = !{!16494, !3180, i64 0}
!16506 = !DILocation(line: 198, column: 34, scope: !16481)
!16507 = !DILocation(line: 198, column: 38, scope: !16481)
!16508 = !DILocation(line: 198, column: 21, scope: !16481)
!16509 = !DILocation(line: 198, column: 19, scope: !16481)
!16510 = !DILocation(line: 199, column: 17, scope: !16511)
!16511 = distinct !DILexicalBlock(scope: !16481, file: !1133, line: 199, column: 15)
!16512 = !DILocation(line: 199, column: 15, scope: !16481)
!16513 = !DILocation(line: 200, column: 13, scope: !16511)
!16514 = !DILocation(line: 202, column: 15, scope: !16515)
!16515 = distinct !DILexicalBlock(scope: !16481, file: !1133, line: 202, column: 15)
!16516 = !DILocation(line: 202, column: 26, scope: !16515)
!16517 = !DILocation(line: 202, column: 23, scope: !16515)
!16518 = !DILocation(line: 202, column: 15, scope: !16481)
!16519 = !DILocation(line: 206, column: 27, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16515, file: !1133, line: 203, column: 13)
!16521 = !DILocation(line: 207, column: 13, scope: !16520)
!16522 = !DILocation(line: 208, column: 9, scope: !16481)
!16523 = !DILocation(line: 210, column: 9, scope: !16477)
!16524 = !DILabel(scope: !16525, name: "low_memory", file: !1133, line: 211)
!16525 = distinct !DILexicalBlock(scope: !16477, file: !1133, line: 210, column: 9)
!16526 = !DILocation(line: 211, column: 9, scope: !16525)
!16527 = !DILocation(line: 212, column: 15, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !16525, file: !1133, line: 212, column: 15)
!16529 = !DILocation(line: 212, column: 15, scope: !16525)
!16530 = !DILocation(line: 214, column: 33, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16528, file: !1133, line: 213, column: 13)
!16532 = !DILocation(line: 214, column: 43, scope: !16531)
!16533 = !DILocation(line: 214, column: 27, scope: !16531)
!16534 = !DILocation(line: 214, column: 31, scope: !16531)
!16535 = !DILocation(line: 215, column: 38, scope: !16531)
!16536 = !DILocation(line: 215, column: 42, scope: !16531)
!16537 = !DILocation(line: 215, column: 25, scope: !16531)
!16538 = !DILocation(line: 215, column: 23, scope: !16531)
!16539 = !DILocation(line: 216, column: 13, scope: !16531)
!16540 = !DILocation(line: 217, column: 16, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16525, file: !1133, line: 217, column: 15)
!16542 = !DILocation(line: 217, column: 15, scope: !16525)
!16543 = !DILocation(line: 219, column: 23, scope: !16544)
!16544 = distinct !DILexicalBlock(scope: !16541, file: !1133, line: 218, column: 13)
!16545 = !DILocation(line: 220, column: 15, scope: !16544)
!16546 = !DILocation(line: 220, column: 24, scope: !16544)
!16547 = !DILocation(line: 220, column: 35, scope: !16544)
!16548 = !DILocation(line: 221, column: 15, scope: !16544)
!16549 = !DILocation(line: 221, column: 24, scope: !16544)
!16550 = !DILocation(line: 221, column: 30, scope: !16544)
!16551 = !DILocation(line: 222, column: 13, scope: !16544)
!16552 = !DILocation(line: 225, column: 13, scope: !16440)
!16553 = !DILocation(line: 225, column: 22, scope: !16440)
!16554 = !DILocation(line: 225, column: 11, scope: !16440)
!16555 = !DILocation(line: 257, column: 13, scope: !16556)
!16556 = distinct !DILexicalBlock(scope: !16440, file: !1133, line: 257, column: 11)
!16557 = !DILocation(line: 257, column: 22, scope: !16556)
!16558 = !DILocation(line: 257, column: 11, scope: !16440)
!16559 = !DILocalVariable(name: "dst_a_s", scope: !16560, file: !1133, line: 262, type: !1164)
!16560 = distinct !DILexicalBlock(scope: !16556, file: !1133, line: 258, column: 9)
!16561 = !DILocation(line: 262, column: 18, scope: !16560)
!16562 = !DILocation(line: 262, column: 28, scope: !16560)
!16563 = !DILocation(line: 262, column: 38, scope: !16560)
!16564 = !{!3179, !3180, i64 72}
!16565 = !DILocalVariable(name: "dst_c_s", scope: !16560, file: !1133, line: 263, type: !1164)
!16566 = !DILocation(line: 263, column: 18, scope: !16560)
!16567 = !DILocation(line: 263, column: 28, scope: !16560)
!16568 = !DILocation(line: 263, column: 38, scope: !16560)
!16569 = !{!3179, !3180, i64 104}
!16570 = !DILocalVariable(name: "dst_m_s", scope: !16560, file: !1133, line: 264, type: !1164)
!16571 = !DILocation(line: 264, column: 18, scope: !16560)
!16572 = !DILocation(line: 264, column: 28, scope: !16560)
!16573 = !DILocalVariable(name: "dst_a_ns", scope: !16560, file: !1133, line: 265, type: !7)
!16574 = !DILocation(line: 265, column: 15, scope: !16560)
!16575 = !DILocation(line: 265, column: 45, scope: !16560)
!16576 = !DILocation(line: 265, column: 26, scope: !16560)
!16577 = !DILocalVariable(name: "dst_c_ns", scope: !16560, file: !1133, line: 266, type: !7)
!16578 = !DILocation(line: 266, column: 15, scope: !16560)
!16579 = !DILocation(line: 266, column: 45, scope: !16560)
!16580 = !DILocation(line: 266, column: 26, scope: !16560)
!16581 = !DILocalVariable(name: "dst_m_ns", scope: !16560, file: !1133, line: 267, type: !7)
!16582 = !DILocation(line: 267, column: 15, scope: !16560)
!16583 = !DILocation(line: 267, column: 26, scope: !16560)
!16584 = !DILocalVariable(name: "odd_second", scope: !16585, file: !1133, line: 276, type: !120)
!16585 = distinct !DILexicalBlock(scope: !16560, file: !1133, line: 275, column: 11)
!16586 = !DILocation(line: 276, column: 18, scope: !16585)
!16587 = !DILocation(line: 276, column: 32, scope: !16585)
!16588 = !DILocation(line: 276, column: 42, scope: !16585)
!16589 = !DILocation(line: 276, column: 40, scope: !16585)
!16590 = !DILocation(line: 276, column: 52, scope: !16585)
!16591 = !DILocation(line: 276, column: 50, scope: !16585)
!16592 = !DILocation(line: 276, column: 61, scope: !16585)
!16593 = !DILocation(line: 276, column: 31, scope: !16585)
!16594 = !DILocalVariable(name: "a", scope: !16595, file: !1133, line: 285, type: !7)
!16595 = distinct !DILexicalBlock(scope: !16596, file: !1133, line: 284, column: 15)
!16596 = distinct !DILexicalBlock(scope: !16585, file: !1133, line: 278, column: 17)
!16597 = !DILocation(line: 285, column: 21, scope: !16595)
!16598 = !DILocation(line: 285, column: 25, scope: !16595)
!16599 = !DILocalVariable(name: "c", scope: !16595, file: !1133, line: 286, type: !7)
!16600 = !DILocation(line: 286, column: 21, scope: !16595)
!16601 = !DILocation(line: 286, column: 25, scope: !16595)
!16602 = !DILocalVariable(name: "m", scope: !16595, file: !1133, line: 287, type: !7)
!16603 = !DILocation(line: 287, column: 21, scope: !16595)
!16604 = !DILocation(line: 287, column: 25, scope: !16595)
!16605 = !DILocalVariable(name: "SR10", scope: !16595, file: !1133, line: 291, type: !7)
!16606 = !DILocation(line: 291, column: 21, scope: !16595)
!16607 = !DILocation(line: 291, column: 54, scope: !16595)
!16608 = !DILocation(line: 293, column: 22, scope: !16609)
!16609 = distinct !DILexicalBlock(scope: !16595, file: !1133, line: 293, column: 21)
!16610 = !DILocation(line: 293, column: 26, scope: !16609)
!16611 = !DILocation(line: 293, column: 24, scope: !16609)
!16612 = !DILocation(line: 293, column: 33, scope: !16609)
!16613 = !DILocation(line: 293, column: 37, scope: !16609)
!16614 = !DILocation(line: 293, column: 35, scope: !16609)
!16615 = !DILocation(line: 293, column: 31, scope: !16609)
!16616 = !DILocation(line: 293, column: 44, scope: !16609)
!16617 = !DILocation(line: 293, column: 48, scope: !16609)
!16618 = !DILocation(line: 293, column: 46, scope: !16609)
!16619 = !DILocation(line: 293, column: 42, scope: !16609)
!16620 = !DILocation(line: 293, column: 54, scope: !16609)
!16621 = !DILocation(line: 293, column: 21, scope: !16595)
!16622 = !DILocation(line: 294, column: 23, scope: !16609)
!16623 = !DILocation(line: 294, column: 19, scope: !16609)
!16624 = !DILocation(line: 296, column: 30, scope: !16625)
!16625 = distinct !DILexicalBlock(scope: !16609, file: !1133, line: 296, column: 19)
!16626 = !DILocation(line: 296, column: 28, scope: !16625)
!16627 = !DILocation(line: 296, column: 41, scope: !16625)
!16628 = !DILocation(line: 296, column: 38, scope: !16625)
!16629 = !DILocation(line: 296, column: 52, scope: !16625)
!16630 = !DILocation(line: 296, column: 49, scope: !16625)
!16631 = !DILocation(line: 296, column: 63, scope: !16625)
!16632 = !DILocation(line: 296, column: 60, scope: !16625)
!16633 = !DILocation(line: 296, column: 24, scope: !16625)
!16634 = !DILocation(line: 297, column: 25, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16625, file: !1133, line: 296, column: 19)
!16636 = !DILocation(line: 297, column: 31, scope: !16635)
!16637 = !DILocation(line: 297, column: 40, scope: !16635)
!16638 = !DILocation(line: 297, column: 29, scope: !16635)
!16639 = !DILocation(line: 298, column: 25, scope: !16635)
!16640 = !DILocation(line: 298, column: 29, scope: !16635)
!16641 = !DILocation(line: 298, column: 31, scope: !16635)
!16642 = !DILocation(line: 298, column: 38, scope: !16635)
!16643 = !DILocation(line: 298, column: 40, scope: !16635)
!16644 = !DILocation(line: 298, column: 36, scope: !16635)
!16645 = !DILocation(line: 298, column: 47, scope: !16635)
!16646 = !DILocation(line: 298, column: 49, scope: !16635)
!16647 = !DILocation(line: 298, column: 45, scope: !16635)
!16648 = !DILocation(line: 298, column: 55, scope: !16635)
!16649 = !DILocation(line: 0, scope: !16635)
!16650 = !DILocation(line: 296, column: 19, scope: !16625)
!16651 = !DILocation(line: 300, column: 25, scope: !16652)
!16652 = distinct !DILexicalBlock(scope: !16635, file: !1133, line: 300, column: 25)
!16653 = !DILocation(line: 300, column: 29, scope: !16652)
!16654 = !DILocation(line: 300, column: 25, scope: !16635)
!16655 = !DILocation(line: 302, column: 31, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !16657, file: !1133, line: 302, column: 29)
!16657 = distinct !DILexicalBlock(scope: !16652, file: !1133, line: 301, column: 23)
!16658 = !DILocation(line: 302, column: 29, scope: !16657)
!16659 = !DILocation(line: 303, column: 31, scope: !16656)
!16660 = !DILocation(line: 303, column: 27, scope: !16656)
!16661 = !DILocation(line: 304, column: 25, scope: !16657)
!16662 = !DILocation(line: 300, column: 32, scope: !16652)
!16663 = !DILocation(line: 299, column: 28, scope: !16635)
!16664 = !DILocation(line: 299, column: 37, scope: !16635)
!16665 = !DILocation(line: 299, column: 46, scope: !16635)
!16666 = !DILocation(line: 299, column: 55, scope: !16635)
!16667 = !DILocation(line: 296, column: 19, scope: !16635)
!16668 = distinct !{!16668, !16650, !16669}
!16669 = !DILocation(line: 305, column: 23, scope: !16625)
!16670 = !DILocation(line: 308, column: 35, scope: !16585)
!16671 = !DILocation(line: 308, column: 13, scope: !16585)
!16672 = !DILocation(line: 308, column: 22, scope: !16585)
!16673 = !DILocation(line: 308, column: 33, scope: !16585)
!16674 = !DILocation(line: 311, column: 36, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16560, file: !1133, line: 311, column: 15)
!16676 = !DILocation(line: 311, column: 34, scope: !16675)
!16677 = !DILocation(line: 311, column: 15, scope: !16560)
!16678 = !DILocalVariable(name: "timespec", scope: !16679, file: !1133, line: 313, type: !1172)
!16679 = distinct !DILexicalBlock(scope: !16675, file: !1133, line: 312, column: 13)
!16680 = !DILocation(line: 313, column: 31, scope: !16679)
!16681 = !DILocalVariable(name: "dst_status", scope: !16679, file: !1133, line: 314, type: !1138)
!16682 = !DILocation(line: 314, column: 27, scope: !16679)
!16683 = !DILocation(line: 318, column: 25, scope: !16679)
!16684 = !DILocation(line: 318, column: 32, scope: !16679)
!16685 = !DILocation(line: 318, column: 22, scope: !16679)
!16686 = !DILocalVariable(name: "s", scope: !16687, file: !1133, line: 324, type: !1164)
!16687 = distinct !DILexicalBlock(scope: !16679, file: !1133, line: 323, column: 15)
!16688 = !DILocation(line: 324, column: 24, scope: !16687)
!16689 = !DILocation(line: 324, column: 28, scope: !16687)
!16690 = !DILocation(line: 324, column: 39, scope: !16687)
!16691 = !DILocation(line: 324, column: 43, scope: !16687)
!16692 = !DILocation(line: 324, column: 36, scope: !16687)
!16693 = !DILocation(line: 324, column: 34, scope: !16687)
!16694 = !DILocation(line: 325, column: 21, scope: !16695)
!16695 = distinct !DILexicalBlock(scope: !16687, file: !1133, line: 325, column: 21)
!16696 = !DILocation(line: 325, column: 29, scope: !16695)
!16697 = !DILocation(line: 325, column: 27, scope: !16695)
!16698 = !DILocation(line: 325, column: 35, scope: !16695)
!16699 = !DILocation(line: 325, column: 39, scope: !16695)
!16700 = !DILocation(line: 325, column: 48, scope: !16695)
!16701 = !DILocation(line: 325, column: 45, scope: !16695)
!16702 = !DILocation(line: 325, column: 54, scope: !16695)
!16703 = !DILocation(line: 325, column: 57, scope: !16695)
!16704 = !DILocation(line: 325, column: 67, scope: !16695)
!16705 = !DILocation(line: 325, column: 64, scope: !16695)
!16706 = !DILocation(line: 325, column: 21, scope: !16687)
!16707 = !DILocation(line: 326, column: 19, scope: !16695)
!16708 = !DILocation(line: 327, column: 21, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16687, file: !1133, line: 327, column: 21)
!16710 = !DILocation(line: 327, column: 29, scope: !16709)
!16711 = !DILocation(line: 327, column: 27, scope: !16709)
!16712 = !DILocation(line: 328, column: 21, scope: !16709)
!16713 = !DILocation(line: 328, column: 25, scope: !16709)
!16714 = !DILocation(line: 328, column: 34, scope: !16709)
!16715 = !DILocation(line: 328, column: 31, scope: !16709)
!16716 = !DILocation(line: 328, column: 36, scope: !16709)
!16717 = !DILocation(line: 328, column: 39, scope: !16709)
!16718 = !DILocation(line: 328, column: 48, scope: !16709)
!16719 = !DILocation(line: 328, column: 57, scope: !16709)
!16720 = !DILocation(line: 328, column: 66, scope: !16709)
!16721 = !DILocation(line: 328, column: 64, scope: !16709)
!16722 = !DILocation(line: 328, column: 55, scope: !16709)
!16723 = !DILocation(line: 328, column: 46, scope: !16709)
!16724 = !DILocation(line: 327, column: 21, scope: !16687)
!16725 = !DILocation(line: 329, column: 19, scope: !16709)
!16726 = !DILocation(line: 338, column: 36, scope: !16679)
!16727 = !DILocation(line: 338, column: 15, scope: !16679)
!16728 = !DILocation(line: 338, column: 27, scope: !16679)
!16729 = !DILocation(line: 338, column: 34, scope: !16679)
!16730 = !DILocation(line: 339, column: 37, scope: !16679)
!16731 = !DILocation(line: 339, column: 15, scope: !16679)
!16732 = !DILocation(line: 339, column: 27, scope: !16679)
!16733 = !DILocation(line: 339, column: 35, scope: !16679)
!16734 = !DILocation(line: 340, column: 36, scope: !16679)
!16735 = !DILocation(line: 340, column: 47, scope: !16679)
!16736 = !DILocation(line: 340, column: 51, scope: !16679)
!16737 = !DILocation(line: 340, column: 46, scope: !16679)
!16738 = !DILocation(line: 340, column: 44, scope: !16679)
!16739 = !DILocation(line: 340, column: 15, scope: !16679)
!16740 = !DILocation(line: 340, column: 27, scope: !16679)
!16741 = !DILocation(line: 340, column: 34, scope: !16679)
!16742 = !DILocation(line: 341, column: 37, scope: !16679)
!16743 = !DILocation(line: 341, column: 48, scope: !16679)
!16744 = !DILocation(line: 341, column: 52, scope: !16679)
!16745 = !DILocation(line: 341, column: 46, scope: !16679)
!16746 = !DILocation(line: 341, column: 15, scope: !16679)
!16747 = !DILocation(line: 341, column: 27, scope: !16679)
!16748 = !DILocation(line: 341, column: 35, scope: !16679)
!16749 = !DILocation(line: 343, column: 30, scope: !16750)
!16750 = distinct !DILexicalBlock(scope: !16679, file: !1133, line: 343, column: 19)
!16751 = !DILocation(line: 343, column: 35, scope: !16750)
!16752 = !DILocation(line: 343, column: 45, scope: !16750)
!16753 = !DILocation(line: 343, column: 19, scope: !16750)
!16754 = !DILocation(line: 343, column: 19, scope: !16679)
!16755 = !DILocation(line: 344, column: 17, scope: !16750)
!16756 = !DILocalVariable(name: "stat_result", scope: !16757, file: !1133, line: 348, type: !7)
!16757 = distinct !DILexicalBlock(scope: !16679, file: !1133, line: 347, column: 15)
!16758 = !DILocation(line: 348, column: 21, scope: !16757)
!16759 = !DILocation(line: 349, column: 30, scope: !16757)
!16760 = !DILocation(line: 349, column: 35, scope: !16757)
!16761 = !DILocation(line: 349, column: 21, scope: !16757)
!16762 = !DILocation(line: 351, column: 21, scope: !16763)
!16763 = distinct !DILexicalBlock(scope: !16757, file: !1133, line: 351, column: 21)
!16764 = !DILocation(line: 352, column: 35, scope: !16763)
!16765 = !DILocation(line: 352, column: 46, scope: !16763)
!16766 = !DILocation(line: 352, column: 44, scope: !16763)
!16767 = !DILocation(line: 352, column: 21, scope: !16763)
!16768 = !DILocation(line: 353, column: 24, scope: !16763)
!16769 = !DILocation(line: 353, column: 58, scope: !16763)
!16770 = !DILocation(line: 353, column: 56, scope: !16763)
!16771 = !DILocation(line: 353, column: 21, scope: !16763)
!16772 = !DILocation(line: 351, column: 21, scope: !16757)
!16773 = !DILocation(line: 357, column: 42, scope: !16774)
!16774 = distinct !DILexicalBlock(scope: !16763, file: !1133, line: 354, column: 19)
!16775 = !DILocation(line: 357, column: 21, scope: !16774)
!16776 = !DILocation(line: 357, column: 33, scope: !16774)
!16777 = !DILocation(line: 357, column: 40, scope: !16774)
!16778 = !DILocation(line: 358, column: 43, scope: !16774)
!16779 = !DILocation(line: 358, column: 21, scope: !16774)
!16780 = !DILocation(line: 358, column: 33, scope: !16774)
!16781 = !DILocation(line: 358, column: 41, scope: !16774)
!16782 = !DILocation(line: 359, column: 32, scope: !16774)
!16783 = !DILocation(line: 359, column: 37, scope: !16774)
!16784 = !DILocation(line: 359, column: 47, scope: !16774)
!16785 = !DILocation(line: 359, column: 21, scope: !16774)
!16786 = !DILocation(line: 360, column: 19, scope: !16774)
!16787 = !DILocation(line: 362, column: 21, scope: !16788)
!16788 = distinct !DILexicalBlock(scope: !16757, file: !1133, line: 362, column: 21)
!16789 = !DILocation(line: 362, column: 33, scope: !16788)
!16790 = !DILocation(line: 362, column: 21, scope: !16757)
!16791 = !DILocation(line: 363, column: 19, scope: !16788)
!16792 = !DILocalVariable(name: "old_res", scope: !16793, file: !1133, line: 369, type: !7)
!16793 = distinct !DILexicalBlock(scope: !16679, file: !1133, line: 368, column: 15)
!16794 = !DILocation(line: 369, column: 21, scope: !16793)
!16795 = !DILocation(line: 369, column: 31, scope: !16793)
!16796 = !DILocalVariable(name: "a", scope: !16793, file: !1133, line: 370, type: !7)
!16797 = !DILocation(line: 370, column: 21, scope: !16793)
!16798 = !DILocation(line: 370, column: 48, scope: !16793)
!16799 = !DILocation(line: 370, column: 57, scope: !16793)
!16800 = !DILocation(line: 370, column: 34, scope: !16793)
!16801 = !DILocation(line: 371, column: 28, scope: !16793)
!16802 = !DILocation(line: 371, column: 26, scope: !16793)
!16803 = !DILocation(line: 370, column: 25, scope: !16793)
!16804 = !DILocation(line: 373, column: 21, scope: !16793)
!16805 = !DILocation(line: 375, column: 27, scope: !16806)
!16806 = distinct !DILexicalBlock(scope: !16793, file: !1133, line: 375, column: 17)
!16807 = !DILocation(line: 375, column: 24, scope: !16806)
!16808 = !DILocation(line: 375, column: 22, scope: !16806)
!16809 = !DILocation(line: 375, column: 32, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16806, file: !1133, line: 375, column: 17)
!16811 = !DILocation(line: 375, column: 34, scope: !16810)
!16812 = !DILocation(line: 375, column: 39, scope: !16810)
!16813 = !DILocation(line: 375, column: 17, scope: !16806)
!16814 = !DILocation(line: 377, column: 25, scope: !16815)
!16815 = distinct !DILexicalBlock(scope: !16816, file: !1133, line: 377, column: 25)
!16816 = distinct !DILexicalBlock(scope: !16810, file: !1133, line: 376, column: 19)
!16817 = !DILocation(line: 377, column: 29, scope: !16815)
!16818 = !DILocation(line: 377, column: 25, scope: !16816)
!16819 = !DILocation(line: 379, column: 29, scope: !16820)
!16820 = distinct !DILexicalBlock(scope: !16815, file: !1133, line: 378, column: 23)
!16821 = !DILocation(line: 380, column: 25, scope: !16820)
!16822 = !DILocation(line: 382, column: 25, scope: !16816)
!16823 = !DILocation(line: 383, column: 25, scope: !16824)
!16824 = distinct !DILexicalBlock(scope: !16816, file: !1133, line: 383, column: 25)
!16825 = !DILocation(line: 383, column: 32, scope: !16824)
!16826 = !DILocation(line: 383, column: 29, scope: !16824)
!16827 = !DILocation(line: 383, column: 25, scope: !16816)
!16828 = !DILocation(line: 384, column: 23, scope: !16824)
!16829 = !DILocation(line: 385, column: 19, scope: !16816)
!16830 = !DILocation(line: 375, column: 47, scope: !16810)
!16831 = !DILocation(line: 375, column: 17, scope: !16810)
!16832 = distinct !{!16832, !16813, !16833}
!16833 = !DILocation(line: 385, column: 19, scope: !16806)
!16834 = !DILocation(line: 387, column: 13, scope: !16679)
!16835 = !DILocation(line: 389, column: 33, scope: !16560)
!16836 = !DILocation(line: 389, column: 11, scope: !16560)
!16837 = !DILocation(line: 389, column: 20, scope: !16560)
!16838 = !DILocation(line: 389, column: 31, scope: !16560)
!16839 = !DILocation(line: 390, column: 11, scope: !16560)
!16840 = !DILocation(line: 390, column: 20, scope: !16560)
!16841 = !DILocation(line: 390, column: 26, scope: !16560)
!16842 = !DILocation(line: 391, column: 9, scope: !16560)
!16843 = !DILocation(line: 394, column: 19, scope: !16440)
!16844 = !DILocation(line: 394, column: 23, scope: !16440)
!16845 = !DILocation(line: 394, column: 16, scope: !16440)
!16846 = !DILocation(line: 394, column: 13, scope: !16440)
!16847 = !DILocation(line: 395, column: 17, scope: !16440)
!16848 = !DILocation(line: 395, column: 26, scope: !16440)
!16849 = !DILocation(line: 395, column: 24, scope: !16440)
!16850 = !DILocation(line: 395, column: 14, scope: !16440)
!16851 = !DILocation(line: 396, column: 5, scope: !16440)
!16852 = !DILocation(line: 399, column: 11, scope: !1132)
!16853 = !DILocation(line: 399, column: 19, scope: !1132)
!16854 = !DILocation(line: 399, column: 17, scope: !1132)
!16855 = !DILocation(line: 400, column: 13, scope: !1132)
!16856 = !DILocation(line: 400, column: 21, scope: !1132)
!16857 = !DILocation(line: 400, column: 19, scope: !1132)
!16858 = !DILocation(line: 401, column: 13, scope: !1132)
!16859 = !DILocation(line: 401, column: 22, scope: !1132)
!16860 = !DILocation(line: 401, column: 20, scope: !1132)
!16861 = !DILocation(line: 402, column: 13, scope: !1132)
!16862 = !DILocation(line: 402, column: 22, scope: !1132)
!16863 = !DILocation(line: 402, column: 20, scope: !1132)
!16864 = !DILocation(line: 399, column: 3, scope: !1132)
!16865 = !DILocation(line: 403, column: 1, scope: !1132)
!16866 = distinct !DISubprogram(name: "dev_info_hash", scope: !1133, file: !1133, line: 85, type: !547, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1159, retainedNodes: !143)
!16867 = !DILocalVariable(name: "x", arg: 1, scope: !16866, file: !1133, line: 85, type: !425)
!16868 = !DILocation(line: 85, column: 28, scope: !16866)
!16869 = !DILocalVariable(name: "table_size", arg: 2, scope: !16866, file: !1133, line: 85, type: !55)
!16870 = !DILocation(line: 85, column: 38, scope: !16866)
!16871 = !DILocalVariable(name: "p", scope: !16866, file: !1133, line: 87, type: !1173)
!16872 = !DILocation(line: 87, column: 24, scope: !16866)
!16873 = !DILocation(line: 87, column: 28, scope: !16866)
!16874 = !DILocation(line: 96, column: 10, scope: !16866)
!16875 = !DILocation(line: 96, column: 13, scope: !16866)
!16876 = !DILocation(line: 96, column: 19, scope: !16866)
!16877 = !DILocation(line: 96, column: 17, scope: !16866)
!16878 = !DILocation(line: 96, column: 3, scope: !16866)
!16879 = distinct !DISubprogram(name: "dev_info_compare", scope: !1133, file: !1133, line: 101, type: !549, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1159, retainedNodes: !143)
!16880 = !DILocalVariable(name: "x", arg: 1, scope: !16879, file: !1133, line: 101, type: !425)
!16881 = !DILocation(line: 101, column: 31, scope: !16879)
!16882 = !DILocalVariable(name: "y", arg: 2, scope: !16879, file: !1133, line: 101, type: !425)
!16883 = !DILocation(line: 101, column: 46, scope: !16879)
!16884 = !DILocalVariable(name: "a", scope: !16879, file: !1133, line: 103, type: !1173)
!16885 = !DILocation(line: 103, column: 24, scope: !16879)
!16886 = !DILocation(line: 103, column: 28, scope: !16879)
!16887 = !DILocalVariable(name: "b", scope: !16879, file: !1133, line: 104, type: !1173)
!16888 = !DILocation(line: 104, column: 24, scope: !16879)
!16889 = !DILocation(line: 104, column: 28, scope: !16879)
!16890 = !DILocation(line: 105, column: 10, scope: !16879)
!16891 = !DILocation(line: 105, column: 13, scope: !16879)
!16892 = !DILocation(line: 105, column: 20, scope: !16879)
!16893 = !DILocation(line: 105, column: 23, scope: !16879)
!16894 = !DILocation(line: 105, column: 17, scope: !16879)
!16895 = !DILocation(line: 105, column: 3, scope: !16879)
!16896 = distinct !DISubprogram(name: "lutimensat", scope: !16897, file: !16897, line: 42, type: !1183, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1180, retainedNodes: !143)
!16897 = !DIFile(filename: "./lib/utimens.h", directory: "/home/mbarbar/software/coreutils-8.31")
!16898 = !DILocalVariable(name: "dir", arg: 1, scope: !16896, file: !16897, line: 42, type: !7)
!16899 = !DILocation(line: 42, column: 17, scope: !16896)
!16900 = !DILocalVariable(name: "file", arg: 2, scope: !16896, file: !16897, line: 42, type: !115)
!16901 = !DILocation(line: 42, column: 34, scope: !16896)
!16902 = !DILocalVariable(name: "times", arg: 3, scope: !16896, file: !16897, line: 42, type: !1185)
!16903 = !DILocation(line: 42, column: 62, scope: !16896)
!16904 = !DILocation(line: 44, column: 21, scope: !16896)
!16905 = !DILocation(line: 44, column: 26, scope: !16896)
!16906 = !DILocation(line: 44, column: 32, scope: !16896)
!16907 = !DILocation(line: 44, column: 10, scope: !16896)
!16908 = !DILocation(line: 44, column: 3, scope: !16896)
!16909 = distinct !DISubprogram(name: "fdutimens", scope: !1230, file: !1230, line: 170, type: !1183, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1180, retainedNodes: !143)
!16910 = !DILocalVariable(name: "fd", arg: 1, scope: !16909, file: !1230, line: 170, type: !7)
!16911 = !DILocation(line: 170, column: 16, scope: !16909)
!16912 = !DILocalVariable(name: "file", arg: 2, scope: !16909, file: !1230, line: 170, type: !115)
!16913 = !DILocation(line: 170, column: 32, scope: !16909)
!16914 = !DILocalVariable(name: "timespec", arg: 3, scope: !16909, file: !1230, line: 170, type: !1185)
!16915 = !DILocation(line: 170, column: 60, scope: !16909)
!16916 = !DILocalVariable(name: "adjusted_timespec", scope: !16909, file: !1230, line: 172, type: !1191)
!16917 = !DILocation(line: 172, column: 19, scope: !16909)
!16918 = !DILocalVariable(name: "ts", scope: !16909, file: !1230, line: 173, type: !1192)
!16919 = !DILocation(line: 173, column: 20, scope: !16909)
!16920 = !DILocation(line: 173, column: 25, scope: !16909)
!16921 = !DILocation(line: 173, column: 36, scope: !16909)
!16922 = !DILocalVariable(name: "adjustment_needed", scope: !16909, file: !1230, line: 174, type: !7)
!16923 = !DILocation(line: 174, column: 7, scope: !16909)
!16924 = !DILocalVariable(name: "st", scope: !16909, file: !1230, line: 175, type: !1209)
!16925 = !DILocation(line: 175, column: 15, scope: !16909)
!16926 = !DILocation(line: 177, column: 7, scope: !16927)
!16927 = distinct !DILexicalBlock(scope: !16909, file: !1230, line: 177, column: 7)
!16928 = !DILocation(line: 177, column: 7, scope: !16909)
!16929 = !DILocation(line: 179, column: 7, scope: !16930)
!16930 = distinct !DILexicalBlock(scope: !16927, file: !1230, line: 178, column: 5)
!16931 = !DILocation(line: 179, column: 30, scope: !16930)
!16932 = !DILocation(line: 180, column: 7, scope: !16930)
!16933 = !DILocation(line: 180, column: 30, scope: !16930)
!16934 = !DILocation(line: 181, column: 46, scope: !16930)
!16935 = !DILocation(line: 181, column: 27, scope: !16930)
!16936 = !DILocation(line: 181, column: 25, scope: !16930)
!16937 = !DILocation(line: 182, column: 5, scope: !16930)
!16938 = !DILocation(line: 183, column: 7, scope: !16939)
!16939 = distinct !DILexicalBlock(scope: !16909, file: !1230, line: 183, column: 7)
!16940 = !DILocation(line: 183, column: 25, scope: !16939)
!16941 = !DILocation(line: 183, column: 7, scope: !16909)
!16942 = !DILocation(line: 184, column: 5, scope: !16939)
!16943 = !DILocation(line: 189, column: 7, scope: !16944)
!16944 = distinct !DILexicalBlock(scope: !16909, file: !1230, line: 189, column: 7)
!16945 = !DILocation(line: 189, column: 10, scope: !16944)
!16946 = !DILocation(line: 189, column: 14, scope: !16944)
!16947 = !DILocation(line: 189, column: 18, scope: !16944)
!16948 = !DILocation(line: 189, column: 7, scope: !16909)
!16949 = !DILocation(line: 191, column: 7, scope: !16950)
!16950 = distinct !DILexicalBlock(scope: !16944, file: !1230, line: 190, column: 5)
!16951 = !DILocation(line: 191, column: 13, scope: !16950)
!16952 = !DILocation(line: 192, column: 7, scope: !16950)
!16953 = !DILocation(line: 218, column: 12, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16909, file: !1230, line: 218, column: 7)
!16955 = !DILocation(line: 218, column: 9, scope: !16954)
!16956 = !DILocation(line: 218, column: 7, scope: !16909)
!16957 = !DILocalVariable(name: "result", scope: !16958, file: !1230, line: 220, type: !7)
!16958 = distinct !DILexicalBlock(scope: !16954, file: !1230, line: 219, column: 5)
!16959 = !DILocation(line: 220, column: 11, scope: !16958)
!16960 = !DILocation(line: 234, column: 11, scope: !16961)
!16961 = distinct !DILexicalBlock(scope: !16958, file: !1230, line: 234, column: 11)
!16962 = !DILocation(line: 234, column: 29, scope: !16961)
!16963 = !DILocation(line: 234, column: 11, scope: !16958)
!16964 = !DILocation(line: 236, column: 15, scope: !16965)
!16965 = distinct !DILexicalBlock(scope: !16966, file: !1230, line: 236, column: 15)
!16966 = distinct !DILexicalBlock(scope: !16961, file: !1230, line: 235, column: 9)
!16967 = !DILocation(line: 236, column: 18, scope: !16965)
!16968 = !DILocation(line: 236, column: 15, scope: !16966)
!16969 = !DILocation(line: 236, column: 30, scope: !16965)
!16970 = !DILocation(line: 236, column: 24, scope: !16965)
!16971 = !DILocation(line: 236, column: 50, scope: !16965)
!16972 = !DILocation(line: 236, column: 43, scope: !16965)
!16973 = !DILocation(line: 237, column: 13, scope: !16965)
!16974 = !DILocation(line: 238, column: 15, scope: !16975)
!16975 = distinct !DILexicalBlock(scope: !16966, file: !1230, line: 238, column: 15)
!16976 = !DILocation(line: 238, column: 21, scope: !16975)
!16977 = !DILocation(line: 238, column: 29, scope: !16975)
!16978 = !DILocation(line: 238, column: 15, scope: !16966)
!16979 = !DILocation(line: 239, column: 13, scope: !16975)
!16980 = !DILocation(line: 239, column: 21, scope: !16975)
!16981 = !DILocation(line: 240, column: 20, scope: !16982)
!16982 = distinct !DILexicalBlock(scope: !16975, file: !1230, line: 240, column: 20)
!16983 = !DILocation(line: 240, column: 26, scope: !16982)
!16984 = !DILocation(line: 240, column: 34, scope: !16982)
!16985 = !DILocation(line: 240, column: 20, scope: !16975)
!16986 = !DILocation(line: 241, column: 13, scope: !16982)
!16987 = !DILocation(line: 241, column: 21, scope: !16982)
!16988 = !DILocation(line: 243, column: 28, scope: !16966)
!16989 = !DILocation(line: 244, column: 9, scope: !16966)
!16990 = !DILocation(line: 247, column: 11, scope: !16991)
!16991 = distinct !DILexicalBlock(scope: !16958, file: !1230, line: 247, column: 11)
!16992 = !DILocation(line: 247, column: 14, scope: !16991)
!16993 = !DILocation(line: 247, column: 11, scope: !16958)
!16994 = !DILocation(line: 249, column: 41, scope: !16995)
!16995 = distinct !DILexicalBlock(scope: !16991, file: !1230, line: 248, column: 9)
!16996 = !DILocation(line: 249, column: 47, scope: !16995)
!16997 = !DILocation(line: 249, column: 20, scope: !16995)
!16998 = !DILocation(line: 249, column: 18, scope: !16995)
!16999 = !DILocation(line: 258, column: 19, scope: !17000)
!17000 = distinct !DILexicalBlock(scope: !16995, file: !1230, line: 258, column: 15)
!17001 = !DILocation(line: 258, column: 17, scope: !17000)
!17002 = !DILocation(line: 258, column: 15, scope: !16995)
!17003 = !DILocation(line: 259, column: 13, scope: !17000)
!17004 = !DILocation(line: 259, column: 19, scope: !17000)
!17005 = !DILocation(line: 261, column: 15, scope: !17006)
!17006 = distinct !DILexicalBlock(scope: !16995, file: !1230, line: 261, column: 15)
!17007 = !DILocation(line: 261, column: 22, scope: !17006)
!17008 = !DILocation(line: 261, column: 27, scope: !17006)
!17009 = !DILocation(line: 261, column: 30, scope: !17006)
!17010 = !DILocation(line: 261, column: 36, scope: !17006)
!17011 = !DILocation(line: 261, column: 15, scope: !16995)
!17012 = !DILocation(line: 263, column: 38, scope: !17013)
!17013 = distinct !DILexicalBlock(scope: !17006, file: !1230, line: 262, column: 13)
!17014 = !DILocation(line: 264, column: 22, scope: !17013)
!17015 = !DILocation(line: 264, column: 15, scope: !17013)
!17016 = !DILocation(line: 266, column: 9, scope: !16995)
!17017 = !DILocation(line: 269, column: 16, scope: !17018)
!17018 = distinct !DILexicalBlock(scope: !16958, file: !1230, line: 269, column: 11)
!17019 = !DILocation(line: 269, column: 13, scope: !17018)
!17020 = !DILocation(line: 269, column: 11, scope: !16958)
!17021 = !DILocation(line: 271, column: 30, scope: !17022)
!17022 = distinct !DILexicalBlock(scope: !17018, file: !1230, line: 270, column: 9)
!17023 = !DILocation(line: 271, column: 34, scope: !17022)
!17024 = !DILocation(line: 271, column: 20, scope: !17022)
!17025 = !DILocation(line: 271, column: 18, scope: !17022)
!17026 = !DILocation(line: 274, column: 19, scope: !17027)
!17027 = distinct !DILexicalBlock(scope: !17022, file: !1230, line: 274, column: 15)
!17028 = !DILocation(line: 274, column: 17, scope: !17027)
!17029 = !DILocation(line: 274, column: 15, scope: !17022)
!17030 = !DILocation(line: 275, column: 13, scope: !17027)
!17031 = !DILocation(line: 275, column: 19, scope: !17027)
!17032 = !DILocation(line: 277, column: 15, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !17022, file: !1230, line: 277, column: 15)
!17034 = !DILocation(line: 277, column: 22, scope: !17033)
!17035 = !DILocation(line: 277, column: 27, scope: !17033)
!17036 = !DILocation(line: 277, column: 30, scope: !17033)
!17037 = !DILocation(line: 277, column: 36, scope: !17033)
!17038 = !DILocation(line: 277, column: 15, scope: !17022)
!17039 = !DILocation(line: 279, column: 38, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !17033, file: !1230, line: 278, column: 13)
!17041 = !DILocation(line: 280, column: 22, scope: !17040)
!17042 = !DILocation(line: 280, column: 15, scope: !17040)
!17043 = !DILocation(line: 282, column: 9, scope: !17022)
!17044 = !DILocation(line: 284, column: 5, scope: !16958)
!17045 = !DILocation(line: 285, column: 26, scope: !16909)
!17046 = !DILocation(line: 286, column: 27, scope: !16909)
!17047 = !DILocation(line: 377, column: 7, scope: !17048)
!17048 = distinct !DILexicalBlock(scope: !16909, file: !1230, line: 377, column: 7)
!17049 = !DILocation(line: 377, column: 7, scope: !16909)
!17050 = !DILocation(line: 379, column: 11, scope: !17051)
!17051 = distinct !DILexicalBlock(scope: !17052, file: !1230, line: 379, column: 11)
!17052 = distinct !DILexicalBlock(scope: !17048, file: !1230, line: 378, column: 5)
!17053 = !DILocation(line: 379, column: 29, scope: !17051)
!17054 = !DILocation(line: 380, column: 11, scope: !17051)
!17055 = !DILocation(line: 380, column: 15, scope: !17051)
!17056 = !DILocation(line: 380, column: 18, scope: !17051)
!17057 = !DILocation(line: 379, column: 11, scope: !17052)
!17058 = !DILocation(line: 380, column: 30, scope: !17051)
!17059 = !DILocation(line: 380, column: 24, scope: !17051)
!17060 = !DILocation(line: 380, column: 50, scope: !17051)
!17061 = !DILocation(line: 380, column: 43, scope: !17051)
!17062 = !DILocation(line: 381, column: 9, scope: !17051)
!17063 = !DILocation(line: 382, column: 11, scope: !17064)
!17064 = distinct !DILexicalBlock(scope: !17052, file: !1230, line: 382, column: 11)
!17065 = !DILocation(line: 382, column: 14, scope: !17064)
!17066 = !DILocation(line: 382, column: 17, scope: !17064)
!17067 = !DILocation(line: 382, column: 11, scope: !17052)
!17068 = !DILocation(line: 383, column: 9, scope: !17064)
!17069 = !DILocation(line: 384, column: 5, scope: !17052)
!17070 = !DILocalVariable(name: "timeval", scope: !17071, file: !1230, line: 388, type: !1193)
!17071 = distinct !DILexicalBlock(scope: !16909, file: !1230, line: 386, column: 3)
!17072 = !DILocation(line: 388, column: 20, scope: !17071)
!17073 = !DILocalVariable(name: "t", scope: !17071, file: !1230, line: 389, type: !1200)
!17074 = !DILocation(line: 389, column: 21, scope: !17071)
!17075 = !DILocation(line: 390, column: 9, scope: !17076)
!17076 = distinct !DILexicalBlock(scope: !17071, file: !1230, line: 390, column: 9)
!17077 = !DILocation(line: 390, column: 9, scope: !17071)
!17078 = !DILocation(line: 392, column: 29, scope: !17079)
!17079 = distinct !DILexicalBlock(scope: !17076, file: !1230, line: 391, column: 7)
!17080 = !DILocation(line: 392, column: 35, scope: !17079)
!17081 = !DILocation(line: 392, column: 9, scope: !17079)
!17082 = !DILocation(line: 392, column: 20, scope: !17079)
!17083 = !DILocation(line: 392, column: 27, scope: !17079)
!17084 = !{!17085, !3180, i64 0}
!17085 = !{!"timeval", !3180, i64 0, !3180, i64 8}
!17086 = !DILocation(line: 393, column: 30, scope: !17079)
!17087 = !DILocation(line: 393, column: 36, scope: !17079)
!17088 = !DILocation(line: 393, column: 44, scope: !17079)
!17089 = !DILocation(line: 393, column: 9, scope: !17079)
!17090 = !DILocation(line: 393, column: 20, scope: !17079)
!17091 = !DILocation(line: 393, column: 28, scope: !17079)
!17092 = !{!17085, !3180, i64 8}
!17093 = !DILocation(line: 394, column: 29, scope: !17079)
!17094 = !DILocation(line: 394, column: 35, scope: !17079)
!17095 = !DILocation(line: 394, column: 9, scope: !17079)
!17096 = !DILocation(line: 394, column: 20, scope: !17079)
!17097 = !DILocation(line: 394, column: 27, scope: !17079)
!17098 = !DILocation(line: 395, column: 30, scope: !17079)
!17099 = !DILocation(line: 395, column: 36, scope: !17079)
!17100 = !DILocation(line: 395, column: 44, scope: !17079)
!17101 = !DILocation(line: 395, column: 9, scope: !17079)
!17102 = !DILocation(line: 395, column: 20, scope: !17079)
!17103 = !DILocation(line: 395, column: 28, scope: !17079)
!17104 = !DILocation(line: 396, column: 13, scope: !17079)
!17105 = !DILocation(line: 396, column: 11, scope: !17079)
!17106 = !DILocation(line: 397, column: 7, scope: !17079)
!17107 = !DILocation(line: 399, column: 9, scope: !17076)
!17108 = !DILocation(line: 401, column: 9, scope: !17109)
!17109 = distinct !DILexicalBlock(scope: !17071, file: !1230, line: 401, column: 9)
!17110 = !DILocation(line: 401, column: 12, scope: !17109)
!17111 = !DILocation(line: 401, column: 9, scope: !17071)
!17112 = !DILocation(line: 404, column: 37, scope: !17113)
!17113 = distinct !DILexicalBlock(scope: !17109, file: !1230, line: 402, column: 7)
!17114 = !DILocation(line: 404, column: 43, scope: !17113)
!17115 = !DILocation(line: 404, column: 16, scope: !17113)
!17116 = !DILocation(line: 404, column: 9, scope: !17113)
!17117 = !DILocation(line: 425, column: 13, scope: !17118)
!17118 = distinct !DILexicalBlock(scope: !17119, file: !1230, line: 425, column: 13)
!17119 = distinct !DILexicalBlock(scope: !17109, file: !1230, line: 408, column: 7)
!17120 = !DILocation(line: 425, column: 29, scope: !17118)
!17121 = !DILocation(line: 425, column: 13, scope: !17119)
!17122 = !DILocation(line: 433, column: 17, scope: !17123)
!17123 = distinct !DILexicalBlock(scope: !17124, file: !1230, line: 433, column: 17)
!17124 = distinct !DILexicalBlock(scope: !17118, file: !1230, line: 426, column: 11)
!17125 = !DILocation(line: 433, column: 17, scope: !17124)
!17126 = !DILocalVariable(name: "abig", scope: !17127, file: !1230, line: 435, type: !120)
!17127 = distinct !DILexicalBlock(scope: !17123, file: !1230, line: 434, column: 15)
!17128 = !DILocation(line: 435, column: 22, scope: !17127)
!17129 = !DILocation(line: 435, column: 39, scope: !17127)
!17130 = !DILocation(line: 435, column: 44, scope: !17127)
!17131 = !DILocation(line: 435, column: 36, scope: !17127)
!17132 = !DILocalVariable(name: "mbig", scope: !17127, file: !1230, line: 436, type: !120)
!17133 = !DILocation(line: 436, column: 22, scope: !17127)
!17134 = !DILocation(line: 436, column: 39, scope: !17127)
!17135 = !DILocation(line: 436, column: 44, scope: !17127)
!17136 = !DILocation(line: 436, column: 36, scope: !17127)
!17137 = !DILocation(line: 437, column: 22, scope: !17138)
!17138 = distinct !DILexicalBlock(scope: !17127, file: !1230, line: 437, column: 21)
!17139 = !DILocation(line: 437, column: 29, scope: !17138)
!17140 = !DILocation(line: 437, column: 27, scope: !17138)
!17141 = !DILocation(line: 437, column: 35, scope: !17138)
!17142 = !DILocation(line: 437, column: 45, scope: !17138)
!17143 = !DILocation(line: 437, column: 38, scope: !17138)
!17144 = !DILocation(line: 437, column: 54, scope: !17138)
!17145 = !DILocation(line: 437, column: 21, scope: !17127)
!17146 = !DILocalVariable(name: "adiff", scope: !17147, file: !1230, line: 441, type: !1164)
!17147 = distinct !DILexicalBlock(scope: !17138, file: !1230, line: 438, column: 19)
!17148 = !DILocation(line: 441, column: 28, scope: !17147)
!17149 = !DILocation(line: 441, column: 39, scope: !17147)
!17150 = !DILocation(line: 441, column: 50, scope: !17147)
!17151 = !DILocation(line: 441, column: 55, scope: !17147)
!17152 = !DILocation(line: 441, column: 48, scope: !17147)
!17153 = !DILocalVariable(name: "mdiff", scope: !17147, file: !1230, line: 442, type: !1164)
!17154 = !DILocation(line: 442, column: 28, scope: !17147)
!17155 = !DILocation(line: 442, column: 39, scope: !17147)
!17156 = !DILocation(line: 442, column: 50, scope: !17147)
!17157 = !DILocation(line: 442, column: 55, scope: !17147)
!17158 = !DILocation(line: 442, column: 48, scope: !17147)
!17159 = !DILocalVariable(name: "tt", scope: !17147, file: !1230, line: 444, type: !1200)
!17160 = !DILocation(line: 444, column: 37, scope: !17147)
!17161 = !DILocalVariable(name: "truncated_timeval", scope: !17147, file: !1230, line: 445, type: !1193)
!17162 = !DILocation(line: 445, column: 36, scope: !17147)
!17163 = !DILocation(line: 446, column: 21, scope: !17147)
!17164 = !DILocation(line: 446, column: 44, scope: !17147)
!17165 = !DILocation(line: 447, column: 21, scope: !17147)
!17166 = !DILocation(line: 447, column: 44, scope: !17147)
!17167 = !DILocation(line: 448, column: 25, scope: !17168)
!17168 = distinct !DILexicalBlock(scope: !17147, file: !1230, line: 448, column: 25)
!17169 = !DILocation(line: 448, column: 30, scope: !17168)
!17170 = !DILocation(line: 448, column: 33, scope: !17168)
!17171 = !DILocation(line: 448, column: 39, scope: !17168)
!17172 = !DILocation(line: 448, column: 44, scope: !17168)
!17173 = !DILocation(line: 448, column: 47, scope: !17168)
!17174 = !DILocation(line: 448, column: 71, scope: !17168)
!17175 = !DILocation(line: 448, column: 25, scope: !17147)
!17176 = !DILocation(line: 450, column: 30, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17168, file: !1230, line: 449, column: 23)
!17178 = !DILocation(line: 450, column: 28, scope: !17177)
!17179 = !DILocation(line: 451, column: 25, scope: !17177)
!17180 = !DILocation(line: 451, column: 31, scope: !17177)
!17181 = !DILocation(line: 451, column: 39, scope: !17177)
!17182 = !DILocation(line: 452, column: 23, scope: !17177)
!17183 = !DILocation(line: 453, column: 25, scope: !17184)
!17184 = distinct !DILexicalBlock(scope: !17147, file: !1230, line: 453, column: 25)
!17185 = !DILocation(line: 453, column: 30, scope: !17184)
!17186 = !DILocation(line: 453, column: 33, scope: !17184)
!17187 = !DILocation(line: 453, column: 39, scope: !17184)
!17188 = !DILocation(line: 453, column: 44, scope: !17184)
!17189 = !DILocation(line: 453, column: 47, scope: !17184)
!17190 = !DILocation(line: 453, column: 71, scope: !17184)
!17191 = !DILocation(line: 453, column: 25, scope: !17147)
!17192 = !DILocation(line: 455, column: 30, scope: !17193)
!17193 = distinct !DILexicalBlock(scope: !17184, file: !1230, line: 454, column: 23)
!17194 = !DILocation(line: 455, column: 28, scope: !17193)
!17195 = !DILocation(line: 456, column: 25, scope: !17193)
!17196 = !DILocation(line: 456, column: 31, scope: !17193)
!17197 = !DILocation(line: 456, column: 39, scope: !17193)
!17198 = !DILocation(line: 457, column: 23, scope: !17193)
!17199 = !DILocation(line: 458, column: 25, scope: !17200)
!17200 = distinct !DILexicalBlock(scope: !17147, file: !1230, line: 458, column: 25)
!17201 = !DILocation(line: 458, column: 25, scope: !17147)
!17202 = !DILocation(line: 459, column: 23, scope: !17200)
!17203 = !DILocation(line: 460, column: 19, scope: !17147)
!17204 = !DILocation(line: 461, column: 15, scope: !17127)
!17205 = !DILocation(line: 464, column: 13, scope: !17124)
!17206 = !DILocation(line: 470, column: 10, scope: !17207)
!17207 = distinct !DILexicalBlock(scope: !17071, file: !1230, line: 470, column: 9)
!17208 = !DILocation(line: 470, column: 9, scope: !17071)
!17209 = !DILocation(line: 476, column: 9, scope: !17210)
!17210 = distinct !DILexicalBlock(scope: !17207, file: !1230, line: 471, column: 7)
!17211 = !DILocation(line: 482, column: 20, scope: !17071)
!17212 = !DILocation(line: 482, column: 26, scope: !17071)
!17213 = !DILocation(line: 482, column: 12, scope: !17071)
!17214 = !DILocation(line: 482, column: 5, scope: !17071)
!17215 = !DILocation(line: 500, column: 1, scope: !16909)
!17216 = distinct !DISubprogram(name: "validate_timespec", scope: !1230, file: !1230, line: 87, type: !1203, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1180, retainedNodes: !143)
!17217 = !DILocalVariable(name: "timespec", arg: 1, scope: !17216, file: !1230, line: 87, type: !1192)
!17218 = !DILocation(line: 87, column: 36, scope: !17216)
!17219 = !DILocalVariable(name: "result", scope: !17216, file: !1230, line: 89, type: !7)
!17220 = !DILocation(line: 89, column: 7, scope: !17216)
!17221 = !DILocalVariable(name: "utime_omit_count", scope: !17216, file: !1230, line: 90, type: !7)
!17222 = !DILocation(line: 90, column: 7, scope: !17216)
!17223 = !DILocation(line: 91, column: 8, scope: !17224)
!17224 = distinct !DILexicalBlock(scope: !17216, file: !1230, line: 91, column: 7)
!17225 = !DILocation(line: 91, column: 20, scope: !17224)
!17226 = !DILocation(line: 91, column: 28, scope: !17224)
!17227 = !DILocation(line: 92, column: 8, scope: !17224)
!17228 = !DILocation(line: 92, column: 11, scope: !17224)
!17229 = !DILocation(line: 92, column: 23, scope: !17224)
!17230 = !DILocation(line: 92, column: 31, scope: !17224)
!17231 = !DILocation(line: 93, column: 8, scope: !17224)
!17232 = !DILocation(line: 93, column: 19, scope: !17224)
!17233 = !DILocation(line: 93, column: 31, scope: !17224)
!17234 = !DILocation(line: 93, column: 16, scope: !17224)
!17235 = !DILocation(line: 94, column: 14, scope: !17224)
!17236 = !DILocation(line: 94, column: 17, scope: !17224)
!17237 = !DILocation(line: 94, column: 29, scope: !17224)
!17238 = !DILocation(line: 94, column: 37, scope: !17224)
!17239 = !DILocation(line: 95, column: 7, scope: !17224)
!17240 = !DILocation(line: 95, column: 11, scope: !17224)
!17241 = !DILocation(line: 95, column: 23, scope: !17224)
!17242 = !DILocation(line: 95, column: 31, scope: !17224)
!17243 = !DILocation(line: 96, column: 11, scope: !17224)
!17244 = !DILocation(line: 96, column: 14, scope: !17224)
!17245 = !DILocation(line: 96, column: 26, scope: !17224)
!17246 = !DILocation(line: 96, column: 34, scope: !17224)
!17247 = !DILocation(line: 97, column: 11, scope: !17224)
!17248 = !DILocation(line: 97, column: 22, scope: !17224)
!17249 = !DILocation(line: 97, column: 34, scope: !17224)
!17250 = !DILocation(line: 97, column: 19, scope: !17224)
!17251 = !DILocation(line: 98, column: 17, scope: !17224)
!17252 = !DILocation(line: 98, column: 20, scope: !17224)
!17253 = !DILocation(line: 98, column: 32, scope: !17224)
!17254 = !DILocation(line: 98, column: 40, scope: !17224)
!17255 = !DILocation(line: 91, column: 7, scope: !17216)
!17256 = !DILocation(line: 100, column: 7, scope: !17257)
!17257 = distinct !DILexicalBlock(scope: !17224, file: !1230, line: 99, column: 5)
!17258 = !DILocation(line: 100, column: 13, scope: !17257)
!17259 = !DILocation(line: 101, column: 7, scope: !17257)
!17260 = !DILocation(line: 107, column: 7, scope: !17261)
!17261 = distinct !DILexicalBlock(scope: !17216, file: !1230, line: 107, column: 7)
!17262 = !DILocation(line: 107, column: 19, scope: !17261)
!17263 = !DILocation(line: 107, column: 27, scope: !17261)
!17264 = !DILocation(line: 108, column: 7, scope: !17261)
!17265 = !DILocation(line: 108, column: 10, scope: !17261)
!17266 = !DILocation(line: 108, column: 22, scope: !17261)
!17267 = !DILocation(line: 108, column: 30, scope: !17261)
!17268 = !DILocation(line: 107, column: 7, scope: !17216)
!17269 = !DILocation(line: 110, column: 7, scope: !17270)
!17270 = distinct !DILexicalBlock(scope: !17261, file: !1230, line: 109, column: 5)
!17271 = !DILocation(line: 110, column: 19, scope: !17270)
!17272 = !DILocation(line: 110, column: 26, scope: !17270)
!17273 = !DILocation(line: 111, column: 14, scope: !17270)
!17274 = !DILocation(line: 112, column: 11, scope: !17275)
!17275 = distinct !DILexicalBlock(scope: !17270, file: !1230, line: 112, column: 11)
!17276 = !DILocation(line: 112, column: 23, scope: !17275)
!17277 = !DILocation(line: 112, column: 31, scope: !17275)
!17278 = !DILocation(line: 112, column: 11, scope: !17270)
!17279 = !DILocation(line: 113, column: 25, scope: !17275)
!17280 = !DILocation(line: 113, column: 9, scope: !17275)
!17281 = !DILocation(line: 114, column: 5, scope: !17270)
!17282 = !DILocation(line: 115, column: 7, scope: !17283)
!17283 = distinct !DILexicalBlock(scope: !17216, file: !1230, line: 115, column: 7)
!17284 = !DILocation(line: 115, column: 19, scope: !17283)
!17285 = !DILocation(line: 115, column: 27, scope: !17283)
!17286 = !DILocation(line: 116, column: 7, scope: !17283)
!17287 = !DILocation(line: 116, column: 10, scope: !17283)
!17288 = !DILocation(line: 116, column: 22, scope: !17283)
!17289 = !DILocation(line: 116, column: 30, scope: !17283)
!17290 = !DILocation(line: 115, column: 7, scope: !17216)
!17291 = !DILocation(line: 118, column: 7, scope: !17292)
!17292 = distinct !DILexicalBlock(scope: !17283, file: !1230, line: 117, column: 5)
!17293 = !DILocation(line: 118, column: 19, scope: !17292)
!17294 = !DILocation(line: 118, column: 26, scope: !17292)
!17295 = !DILocation(line: 119, column: 14, scope: !17292)
!17296 = !DILocation(line: 120, column: 11, scope: !17297)
!17297 = distinct !DILexicalBlock(scope: !17292, file: !1230, line: 120, column: 11)
!17298 = !DILocation(line: 120, column: 23, scope: !17297)
!17299 = !DILocation(line: 120, column: 31, scope: !17297)
!17300 = !DILocation(line: 120, column: 11, scope: !17292)
!17301 = !DILocation(line: 121, column: 25, scope: !17297)
!17302 = !DILocation(line: 121, column: 9, scope: !17297)
!17303 = !DILocation(line: 122, column: 5, scope: !17292)
!17304 = !DILocation(line: 123, column: 10, scope: !17216)
!17305 = !DILocation(line: 123, column: 20, scope: !17216)
!17306 = !DILocation(line: 123, column: 37, scope: !17216)
!17307 = !DILocation(line: 123, column: 17, scope: !17216)
!17308 = !DILocation(line: 123, column: 3, scope: !17216)
!17309 = !DILocation(line: 124, column: 1, scope: !17216)
!17310 = distinct !DISubprogram(name: "update_timespec", scope: !1230, file: !1230, line: 133, type: !1205, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1180, retainedNodes: !143)
!17311 = !DILocalVariable(name: "statbuf", arg: 1, scope: !17310, file: !1230, line: 133, type: !1207)
!17312 = !DILocation(line: 133, column: 37, scope: !17310)
!17313 = !DILocalVariable(name: "ts", arg: 2, scope: !17310, file: !1230, line: 133, type: !1226)
!17314 = !DILocation(line: 133, column: 63, scope: !17310)
!17315 = !DILocalVariable(name: "timespec", scope: !17310, file: !1230, line: 135, type: !1192)
!17316 = !DILocation(line: 135, column: 20, scope: !17310)
!17317 = !DILocation(line: 135, column: 32, scope: !17310)
!17318 = !DILocation(line: 135, column: 31, scope: !17310)
!17319 = !DILocation(line: 136, column: 7, scope: !17320)
!17320 = distinct !DILexicalBlock(scope: !17310, file: !1230, line: 136, column: 7)
!17321 = !DILocation(line: 136, column: 19, scope: !17320)
!17322 = !DILocation(line: 136, column: 27, scope: !17320)
!17323 = !DILocation(line: 137, column: 7, scope: !17320)
!17324 = !DILocation(line: 137, column: 10, scope: !17320)
!17325 = !DILocation(line: 137, column: 22, scope: !17320)
!17326 = !DILocation(line: 137, column: 30, scope: !17320)
!17327 = !DILocation(line: 136, column: 7, scope: !17310)
!17328 = !DILocation(line: 138, column: 5, scope: !17320)
!17329 = !DILocation(line: 139, column: 7, scope: !17330)
!17330 = distinct !DILexicalBlock(scope: !17310, file: !1230, line: 139, column: 7)
!17331 = !DILocation(line: 139, column: 19, scope: !17330)
!17332 = !DILocation(line: 139, column: 27, scope: !17330)
!17333 = !DILocation(line: 140, column: 7, scope: !17330)
!17334 = !DILocation(line: 140, column: 10, scope: !17330)
!17335 = !DILocation(line: 140, column: 22, scope: !17330)
!17336 = !DILocation(line: 140, column: 30, scope: !17330)
!17337 = !DILocation(line: 139, column: 7, scope: !17310)
!17338 = !DILocation(line: 142, column: 8, scope: !17339)
!17339 = distinct !DILexicalBlock(scope: !17330, file: !1230, line: 141, column: 5)
!17340 = !DILocation(line: 142, column: 11, scope: !17339)
!17341 = !DILocation(line: 143, column: 7, scope: !17339)
!17342 = !DILocation(line: 146, column: 7, scope: !17343)
!17343 = distinct !DILexicalBlock(scope: !17310, file: !1230, line: 146, column: 7)
!17344 = !DILocation(line: 146, column: 19, scope: !17343)
!17345 = !DILocation(line: 146, column: 27, scope: !17343)
!17346 = !DILocation(line: 146, column: 7, scope: !17310)
!17347 = !DILocation(line: 147, column: 5, scope: !17343)
!17348 = !DILocation(line: 147, column: 35, scope: !17343)
!17349 = !DILocation(line: 147, column: 19, scope: !17343)
!17350 = !DILocation(line: 148, column: 12, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17343, file: !1230, line: 148, column: 12)
!17352 = !DILocation(line: 148, column: 24, scope: !17351)
!17353 = !DILocation(line: 148, column: 32, scope: !17351)
!17354 = !DILocation(line: 148, column: 12, scope: !17343)
!17355 = !DILocation(line: 149, column: 15, scope: !17351)
!17356 = !DILocation(line: 149, column: 5, scope: !17351)
!17357 = !DILocation(line: 151, column: 7, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17310, file: !1230, line: 151, column: 7)
!17359 = !DILocation(line: 151, column: 19, scope: !17358)
!17360 = !DILocation(line: 151, column: 27, scope: !17358)
!17361 = !DILocation(line: 151, column: 7, scope: !17310)
!17362 = !DILocation(line: 152, column: 5, scope: !17358)
!17363 = !DILocation(line: 152, column: 35, scope: !17358)
!17364 = !DILocation(line: 152, column: 19, scope: !17358)
!17365 = !DILocation(line: 153, column: 12, scope: !17366)
!17366 = distinct !DILexicalBlock(scope: !17358, file: !1230, line: 153, column: 12)
!17367 = !DILocation(line: 153, column: 24, scope: !17366)
!17368 = !DILocation(line: 153, column: 32, scope: !17366)
!17369 = !DILocation(line: 153, column: 12, scope: !17358)
!17370 = !DILocation(line: 154, column: 15, scope: !17366)
!17371 = !DILocation(line: 154, column: 5, scope: !17366)
!17372 = !DILocation(line: 156, column: 3, scope: !17310)
!17373 = !DILocation(line: 157, column: 1, scope: !17310)
!17374 = distinct !DISubprogram(name: "utimens", scope: !1230, file: !1230, line: 505, type: !1201, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1180, retainedNodes: !143)
!17375 = !DILocalVariable(name: "file", arg: 1, scope: !17374, file: !1230, line: 505, type: !115)
!17376 = !DILocation(line: 505, column: 22, scope: !17374)
!17377 = !DILocalVariable(name: "timespec", arg: 2, scope: !17374, file: !1230, line: 505, type: !1185)
!17378 = !DILocation(line: 505, column: 50, scope: !17374)
!17379 = !DILocation(line: 507, column: 25, scope: !17374)
!17380 = !DILocation(line: 507, column: 31, scope: !17374)
!17381 = !DILocation(line: 507, column: 10, scope: !17374)
!17382 = !DILocation(line: 507, column: 3, scope: !17374)
!17383 = distinct !DISubprogram(name: "lutimens", scope: !1230, file: !1230, line: 515, type: !1201, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1180, retainedNodes: !143)
!17384 = !DILocalVariable(name: "file", arg: 1, scope: !17383, file: !1230, line: 515, type: !115)
!17385 = !DILocation(line: 515, column: 23, scope: !17383)
!17386 = !DILocalVariable(name: "timespec", arg: 2, scope: !17383, file: !1230, line: 515, type: !1185)
!17387 = !DILocation(line: 515, column: 51, scope: !17383)
!17388 = !DILocalVariable(name: "adjusted_timespec", scope: !17383, file: !1230, line: 517, type: !1191)
!17389 = !DILocation(line: 517, column: 19, scope: !17383)
!17390 = !DILocalVariable(name: "ts", scope: !17383, file: !1230, line: 518, type: !1192)
!17391 = !DILocation(line: 518, column: 20, scope: !17383)
!17392 = !DILocation(line: 518, column: 25, scope: !17383)
!17393 = !DILocation(line: 518, column: 36, scope: !17383)
!17394 = !DILocalVariable(name: "adjustment_needed", scope: !17383, file: !1230, line: 519, type: !7)
!17395 = !DILocation(line: 519, column: 7, scope: !17383)
!17396 = !DILocalVariable(name: "st", scope: !17383, file: !1230, line: 520, type: !1209)
!17397 = !DILocation(line: 520, column: 15, scope: !17383)
!17398 = !DILocation(line: 522, column: 7, scope: !17399)
!17399 = distinct !DILexicalBlock(scope: !17383, file: !1230, line: 522, column: 7)
!17400 = !DILocation(line: 522, column: 7, scope: !17383)
!17401 = !DILocation(line: 524, column: 7, scope: !17402)
!17402 = distinct !DILexicalBlock(scope: !17399, file: !1230, line: 523, column: 5)
!17403 = !DILocation(line: 524, column: 30, scope: !17402)
!17404 = !DILocation(line: 525, column: 7, scope: !17402)
!17405 = !DILocation(line: 525, column: 30, scope: !17402)
!17406 = !DILocation(line: 526, column: 46, scope: !17402)
!17407 = !DILocation(line: 526, column: 27, scope: !17402)
!17408 = !DILocation(line: 526, column: 25, scope: !17402)
!17409 = !DILocation(line: 527, column: 5, scope: !17402)
!17410 = !DILocation(line: 528, column: 7, scope: !17411)
!17411 = distinct !DILexicalBlock(scope: !17383, file: !1230, line: 528, column: 7)
!17412 = !DILocation(line: 528, column: 25, scope: !17411)
!17413 = !DILocation(line: 528, column: 7, scope: !17383)
!17414 = !DILocation(line: 529, column: 5, scope: !17411)
!17415 = !DILocation(line: 537, column: 12, scope: !17416)
!17416 = distinct !DILexicalBlock(scope: !17383, file: !1230, line: 537, column: 7)
!17417 = !DILocation(line: 537, column: 9, scope: !17416)
!17418 = !DILocation(line: 537, column: 7, scope: !17383)
!17419 = !DILocalVariable(name: "result", scope: !17420, file: !1230, line: 539, type: !7)
!17420 = distinct !DILexicalBlock(scope: !17416, file: !1230, line: 538, column: 5)
!17421 = !DILocation(line: 539, column: 11, scope: !17420)
!17422 = !DILocation(line: 553, column: 11, scope: !17423)
!17423 = distinct !DILexicalBlock(scope: !17420, file: !1230, line: 553, column: 11)
!17424 = !DILocation(line: 553, column: 29, scope: !17423)
!17425 = !DILocation(line: 553, column: 11, scope: !17420)
!17426 = !DILocation(line: 555, column: 22, scope: !17427)
!17427 = distinct !DILexicalBlock(scope: !17428, file: !1230, line: 555, column: 15)
!17428 = distinct !DILexicalBlock(scope: !17423, file: !1230, line: 554, column: 9)
!17429 = !DILocation(line: 555, column: 15, scope: !17427)
!17430 = !DILocation(line: 555, column: 15, scope: !17428)
!17431 = !DILocation(line: 556, column: 13, scope: !17427)
!17432 = !DILocation(line: 557, column: 15, scope: !17433)
!17433 = distinct !DILexicalBlock(scope: !17428, file: !1230, line: 557, column: 15)
!17434 = !DILocation(line: 557, column: 21, scope: !17433)
!17435 = !DILocation(line: 557, column: 29, scope: !17433)
!17436 = !DILocation(line: 557, column: 15, scope: !17428)
!17437 = !DILocation(line: 558, column: 13, scope: !17433)
!17438 = !DILocation(line: 558, column: 21, scope: !17433)
!17439 = !DILocation(line: 559, column: 20, scope: !17440)
!17440 = distinct !DILexicalBlock(scope: !17433, file: !1230, line: 559, column: 20)
!17441 = !DILocation(line: 559, column: 26, scope: !17440)
!17442 = !DILocation(line: 559, column: 34, scope: !17440)
!17443 = !DILocation(line: 559, column: 20, scope: !17433)
!17444 = !DILocation(line: 560, column: 13, scope: !17440)
!17445 = !DILocation(line: 560, column: 21, scope: !17440)
!17446 = !DILocation(line: 562, column: 28, scope: !17428)
!17447 = !DILocation(line: 563, column: 9, scope: !17428)
!17448 = !DILocation(line: 565, column: 37, scope: !17420)
!17449 = !DILocation(line: 565, column: 43, scope: !17420)
!17450 = !DILocation(line: 565, column: 16, scope: !17420)
!17451 = !DILocation(line: 565, column: 14, scope: !17420)
!17452 = !DILocation(line: 574, column: 15, scope: !17453)
!17453 = distinct !DILexicalBlock(scope: !17420, file: !1230, line: 574, column: 11)
!17454 = !DILocation(line: 574, column: 13, scope: !17453)
!17455 = !DILocation(line: 574, column: 11, scope: !17420)
!17456 = !DILocation(line: 575, column: 9, scope: !17453)
!17457 = !DILocation(line: 575, column: 15, scope: !17453)
!17458 = !DILocation(line: 577, column: 11, scope: !17459)
!17459 = distinct !DILexicalBlock(scope: !17420, file: !1230, line: 577, column: 11)
!17460 = !DILocation(line: 577, column: 18, scope: !17459)
!17461 = !DILocation(line: 577, column: 23, scope: !17459)
!17462 = !DILocation(line: 577, column: 26, scope: !17459)
!17463 = !DILocation(line: 577, column: 32, scope: !17459)
!17464 = !DILocation(line: 577, column: 11, scope: !17420)
!17465 = !DILocation(line: 579, column: 34, scope: !17466)
!17466 = distinct !DILexicalBlock(scope: !17459, file: !1230, line: 578, column: 9)
!17467 = !DILocation(line: 580, column: 35, scope: !17466)
!17468 = !DILocation(line: 581, column: 18, scope: !17466)
!17469 = !DILocation(line: 581, column: 11, scope: !17466)
!17470 = !DILocation(line: 583, column: 5, scope: !17420)
!17471 = !DILocation(line: 584, column: 27, scope: !17383)
!17472 = !DILocation(line: 591, column: 7, scope: !17473)
!17473 = distinct !DILexicalBlock(scope: !17383, file: !1230, line: 591, column: 7)
!17474 = !DILocation(line: 591, column: 7, scope: !17383)
!17475 = !DILocation(line: 593, column: 11, scope: !17476)
!17476 = distinct !DILexicalBlock(scope: !17477, file: !1230, line: 593, column: 11)
!17477 = distinct !DILexicalBlock(scope: !17473, file: !1230, line: 592, column: 5)
!17478 = !DILocation(line: 593, column: 29, scope: !17476)
!17479 = !DILocation(line: 593, column: 34, scope: !17476)
!17480 = !DILocation(line: 593, column: 44, scope: !17476)
!17481 = !DILocation(line: 593, column: 37, scope: !17476)
!17482 = !DILocation(line: 593, column: 11, scope: !17477)
!17483 = !DILocation(line: 594, column: 9, scope: !17476)
!17484 = !DILocation(line: 595, column: 11, scope: !17485)
!17485 = distinct !DILexicalBlock(scope: !17477, file: !1230, line: 595, column: 11)
!17486 = !DILocation(line: 595, column: 14, scope: !17485)
!17487 = !DILocation(line: 595, column: 17, scope: !17485)
!17488 = !DILocation(line: 595, column: 11, scope: !17477)
!17489 = !DILocation(line: 596, column: 9, scope: !17485)
!17490 = !DILocation(line: 597, column: 5, scope: !17477)
!17491 = !DILocation(line: 624, column: 9, scope: !17492)
!17492 = distinct !DILexicalBlock(scope: !17383, file: !1230, line: 624, column: 7)
!17493 = !DILocation(line: 624, column: 54, scope: !17492)
!17494 = !DILocation(line: 624, column: 64, scope: !17492)
!17495 = !DILocation(line: 624, column: 57, scope: !17492)
!17496 = !DILocation(line: 624, column: 7, scope: !17383)
!17497 = !DILocation(line: 625, column: 5, scope: !17492)
!17498 = !DILocation(line: 626, column: 8, scope: !17499)
!17499 = distinct !DILexicalBlock(scope: !17383, file: !1230, line: 626, column: 7)
!17500 = !DILocation(line: 626, column: 7, scope: !17383)
!17501 = !DILocation(line: 627, column: 27, scope: !17499)
!17502 = !DILocation(line: 627, column: 33, scope: !17499)
!17503 = !DILocation(line: 627, column: 12, scope: !17499)
!17504 = !DILocation(line: 627, column: 5, scope: !17499)
!17505 = !DILocation(line: 628, column: 3, scope: !17383)
!17506 = !DILocation(line: 628, column: 9, scope: !17383)
!17507 = !DILocation(line: 629, column: 3, scope: !17383)
!17508 = !DILocation(line: 630, column: 1, scope: !17383)
!17509 = distinct !DISubprogram(name: "verror", scope: !17510, file: !17510, line: 43, type: !1944, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1941, retainedNodes: !143)
!17510 = !DIFile(filename: "lib/verror.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17511 = !DILocalVariable(name: "status", arg: 1, scope: !17509, file: !17510, line: 43, type: !7)
!17512 = !DILocation(line: 43, column: 13, scope: !17509)
!17513 = !DILocalVariable(name: "errnum", arg: 2, scope: !17509, file: !17510, line: 43, type: !7)
!17514 = !DILocation(line: 43, column: 25, scope: !17509)
!17515 = !DILocalVariable(name: "format", arg: 3, scope: !17509, file: !17510, line: 43, type: !115)
!17516 = !DILocation(line: 43, column: 45, scope: !17509)
!17517 = !DILocalVariable(name: "args", arg: 4, scope: !17509, file: !17510, line: 43, type: !1946)
!17518 = !DILocation(line: 43, column: 61, scope: !17509)
!17519 = !DILocation(line: 45, column: 19, scope: !17509)
!17520 = !DILocation(line: 45, column: 27, scope: !17509)
!17521 = !DILocation(line: 45, column: 44, scope: !17509)
!17522 = !DILocation(line: 45, column: 52, scope: !17509)
!17523 = !DILocation(line: 45, column: 3, scope: !17509)
!17524 = !DILocation(line: 46, column: 1, scope: !17509)
!17525 = distinct !DISubprogram(name: "verror_at_line", scope: !17510, file: !17510, line: 55, type: !1953, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1941, retainedNodes: !143)
!17526 = !DILocalVariable(name: "status", arg: 1, scope: !17525, file: !17510, line: 55, type: !7)
!17527 = !DILocation(line: 55, column: 21, scope: !17525)
!17528 = !DILocalVariable(name: "errnum", arg: 2, scope: !17525, file: !17510, line: 55, type: !7)
!17529 = !DILocation(line: 55, column: 33, scope: !17525)
!17530 = !DILocalVariable(name: "file", arg: 3, scope: !17525, file: !17510, line: 55, type: !115)
!17531 = !DILocation(line: 55, column: 53, scope: !17525)
!17532 = !DILocalVariable(name: "line_number", arg: 4, scope: !17525, file: !17510, line: 56, type: !70)
!17533 = !DILocation(line: 56, column: 30, scope: !17525)
!17534 = !DILocalVariable(name: "format", arg: 5, scope: !17525, file: !17510, line: 56, type: !115)
!17535 = !DILocation(line: 56, column: 55, scope: !17525)
!17536 = !DILocalVariable(name: "args", arg: 6, scope: !17525, file: !17510, line: 56, type: !1946)
!17537 = !DILocation(line: 56, column: 71, scope: !17525)
!17538 = !DILocalVariable(name: "message", scope: !17525, file: !17510, line: 58, type: !9)
!17539 = !DILocation(line: 58, column: 9, scope: !17525)
!17540 = !DILocation(line: 58, column: 31, scope: !17525)
!17541 = !DILocation(line: 58, column: 39, scope: !17525)
!17542 = !DILocation(line: 58, column: 19, scope: !17525)
!17543 = !DILocation(line: 59, column: 7, scope: !17544)
!17544 = distinct !DILexicalBlock(scope: !17525, file: !17510, line: 59, column: 7)
!17545 = !DILocation(line: 59, column: 7, scope: !17525)
!17546 = !DILocation(line: 64, column: 11, scope: !17547)
!17547 = distinct !DILexicalBlock(scope: !17548, file: !17510, line: 64, column: 11)
!17548 = distinct !DILexicalBlock(scope: !17544, file: !17510, line: 60, column: 5)
!17549 = !DILocation(line: 64, column: 11, scope: !17548)
!17550 = !DILocation(line: 65, column: 24, scope: !17547)
!17551 = !DILocation(line: 65, column: 32, scope: !17547)
!17552 = !DILocation(line: 65, column: 40, scope: !17547)
!17553 = !DILocation(line: 65, column: 46, scope: !17547)
!17554 = !DILocation(line: 65, column: 65, scope: !17547)
!17555 = !DILocation(line: 65, column: 9, scope: !17547)
!17556 = !DILocation(line: 67, column: 16, scope: !17547)
!17557 = !DILocation(line: 67, column: 24, scope: !17547)
!17558 = !DILocation(line: 67, column: 38, scope: !17547)
!17559 = !DILocation(line: 67, column: 9, scope: !17547)
!17560 = !DILocation(line: 68, column: 5, scope: !17548)
!17561 = !DILocation(line: 73, column: 17, scope: !17562)
!17562 = distinct !DILexicalBlock(scope: !17544, file: !17510, line: 70, column: 5)
!17563 = !DILocation(line: 73, column: 24, scope: !17562)
!17564 = !DILocation(line: 73, column: 7, scope: !17562)
!17565 = !DILocation(line: 74, column: 7, scope: !17562)
!17566 = !DILocation(line: 76, column: 9, scope: !17525)
!17567 = !DILocation(line: 76, column: 3, scope: !17525)
!17568 = !DILocation(line: 77, column: 1, scope: !17525)
!17569 = distinct !DISubprogram(name: "version_etc_arn", scope: !17570, file: !17570, line: 61, type: !1958, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1955, retainedNodes: !143)
!17570 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17571 = !DILocalVariable(name: "stream", arg: 1, scope: !17569, file: !17570, line: 61, type: !1960)
!17572 = !DILocation(line: 61, column: 24, scope: !17569)
!17573 = !DILocalVariable(name: "command_name", arg: 2, scope: !17569, file: !17570, line: 62, type: !115)
!17574 = !DILocation(line: 62, column: 30, scope: !17569)
!17575 = !DILocalVariable(name: "package", arg: 3, scope: !17569, file: !17570, line: 62, type: !115)
!17576 = !DILocation(line: 62, column: 56, scope: !17569)
!17577 = !DILocalVariable(name: "version", arg: 4, scope: !17569, file: !17570, line: 63, type: !115)
!17578 = !DILocation(line: 63, column: 30, scope: !17569)
!17579 = !DILocalVariable(name: "authors", arg: 5, scope: !17569, file: !17570, line: 64, type: !1260)
!17580 = !DILocation(line: 64, column: 39, scope: !17569)
!17581 = !DILocalVariable(name: "n_authors", arg: 6, scope: !17569, file: !17570, line: 64, type: !55)
!17582 = !DILocation(line: 64, column: 55, scope: !17569)
!17583 = !DILocation(line: 66, column: 7, scope: !17584)
!17584 = distinct !DILexicalBlock(scope: !17569, file: !17570, line: 66, column: 7)
!17585 = !DILocation(line: 66, column: 7, scope: !17569)
!17586 = !DILocation(line: 67, column: 14, scope: !17584)
!17587 = !DILocation(line: 67, column: 38, scope: !17584)
!17588 = !DILocation(line: 67, column: 52, scope: !17584)
!17589 = !DILocation(line: 67, column: 61, scope: !17584)
!17590 = !DILocation(line: 67, column: 5, scope: !17584)
!17591 = !DILocation(line: 69, column: 14, scope: !17584)
!17592 = !DILocation(line: 69, column: 33, scope: !17584)
!17593 = !DILocation(line: 69, column: 42, scope: !17584)
!17594 = !DILocation(line: 69, column: 5, scope: !17584)
!17595 = !DILocation(line: 83, column: 12, scope: !17569)
!17596 = !DILocation(line: 83, column: 43, scope: !17569)
!17597 = !DILocation(line: 83, column: 3, scope: !17569)
!17598 = !DILocation(line: 85, column: 3, scope: !17569)
!17599 = !DILocation(line: 94, column: 11, scope: !17569)
!17600 = !DILocation(line: 94, column: 3, scope: !17569)
!17601 = !DILocation(line: 99, column: 7, scope: !17602)
!17602 = distinct !DILexicalBlock(scope: !17569, file: !17570, line: 95, column: 5)
!17603 = !DILocation(line: 102, column: 16, scope: !17602)
!17604 = !DILocation(line: 102, column: 24, scope: !17602)
!17605 = !DILocation(line: 102, column: 47, scope: !17602)
!17606 = !DILocation(line: 102, column: 7, scope: !17602)
!17607 = !DILocation(line: 103, column: 7, scope: !17602)
!17608 = !DILocation(line: 106, column: 16, scope: !17602)
!17609 = !DILocation(line: 106, column: 24, scope: !17602)
!17610 = !DILocation(line: 106, column: 54, scope: !17602)
!17611 = !DILocation(line: 106, column: 66, scope: !17602)
!17612 = !DILocation(line: 106, column: 7, scope: !17602)
!17613 = !DILocation(line: 107, column: 7, scope: !17602)
!17614 = !DILocation(line: 110, column: 16, scope: !17602)
!17615 = !DILocation(line: 110, column: 24, scope: !17602)
!17616 = !DILocation(line: 111, column: 16, scope: !17602)
!17617 = !DILocation(line: 111, column: 28, scope: !17602)
!17618 = !DILocation(line: 111, column: 40, scope: !17602)
!17619 = !DILocation(line: 110, column: 7, scope: !17602)
!17620 = !DILocation(line: 112, column: 7, scope: !17602)
!17621 = !DILocation(line: 117, column: 16, scope: !17602)
!17622 = !DILocation(line: 117, column: 24, scope: !17602)
!17623 = !DILocation(line: 118, column: 16, scope: !17602)
!17624 = !DILocation(line: 118, column: 28, scope: !17602)
!17625 = !DILocation(line: 118, column: 40, scope: !17602)
!17626 = !DILocation(line: 118, column: 52, scope: !17602)
!17627 = !DILocation(line: 117, column: 7, scope: !17602)
!17628 = !DILocation(line: 119, column: 7, scope: !17602)
!17629 = !DILocation(line: 124, column: 16, scope: !17602)
!17630 = !DILocation(line: 124, column: 24, scope: !17602)
!17631 = !DILocation(line: 125, column: 16, scope: !17602)
!17632 = !DILocation(line: 125, column: 28, scope: !17602)
!17633 = !DILocation(line: 125, column: 40, scope: !17602)
!17634 = !DILocation(line: 125, column: 52, scope: !17602)
!17635 = !DILocation(line: 125, column: 64, scope: !17602)
!17636 = !DILocation(line: 124, column: 7, scope: !17602)
!17637 = !DILocation(line: 126, column: 7, scope: !17602)
!17638 = !DILocation(line: 131, column: 16, scope: !17602)
!17639 = !DILocation(line: 131, column: 24, scope: !17602)
!17640 = !DILocation(line: 132, column: 16, scope: !17602)
!17641 = !DILocation(line: 132, column: 28, scope: !17602)
!17642 = !DILocation(line: 132, column: 40, scope: !17602)
!17643 = !DILocation(line: 132, column: 52, scope: !17602)
!17644 = !DILocation(line: 132, column: 64, scope: !17602)
!17645 = !DILocation(line: 133, column: 16, scope: !17602)
!17646 = !DILocation(line: 131, column: 7, scope: !17602)
!17647 = !DILocation(line: 134, column: 7, scope: !17602)
!17648 = !DILocation(line: 139, column: 16, scope: !17602)
!17649 = !DILocation(line: 139, column: 24, scope: !17602)
!17650 = !DILocation(line: 140, column: 16, scope: !17602)
!17651 = !DILocation(line: 140, column: 28, scope: !17602)
!17652 = !DILocation(line: 140, column: 40, scope: !17602)
!17653 = !DILocation(line: 140, column: 52, scope: !17602)
!17654 = !DILocation(line: 140, column: 64, scope: !17602)
!17655 = !DILocation(line: 141, column: 16, scope: !17602)
!17656 = !DILocation(line: 141, column: 28, scope: !17602)
!17657 = !DILocation(line: 139, column: 7, scope: !17602)
!17658 = !DILocation(line: 142, column: 7, scope: !17602)
!17659 = !DILocation(line: 147, column: 16, scope: !17602)
!17660 = !DILocation(line: 147, column: 24, scope: !17602)
!17661 = !DILocation(line: 149, column: 17, scope: !17602)
!17662 = !DILocation(line: 149, column: 29, scope: !17602)
!17663 = !DILocation(line: 149, column: 41, scope: !17602)
!17664 = !DILocation(line: 149, column: 53, scope: !17602)
!17665 = !DILocation(line: 149, column: 65, scope: !17602)
!17666 = !DILocation(line: 150, column: 17, scope: !17602)
!17667 = !DILocation(line: 150, column: 29, scope: !17602)
!17668 = !DILocation(line: 150, column: 41, scope: !17602)
!17669 = !DILocation(line: 147, column: 7, scope: !17602)
!17670 = !DILocation(line: 151, column: 7, scope: !17602)
!17671 = !DILocation(line: 156, column: 16, scope: !17602)
!17672 = !DILocation(line: 156, column: 24, scope: !17602)
!17673 = !DILocation(line: 158, column: 16, scope: !17602)
!17674 = !DILocation(line: 158, column: 28, scope: !17602)
!17675 = !DILocation(line: 158, column: 40, scope: !17602)
!17676 = !DILocation(line: 158, column: 52, scope: !17602)
!17677 = !DILocation(line: 158, column: 64, scope: !17602)
!17678 = !DILocation(line: 159, column: 16, scope: !17602)
!17679 = !DILocation(line: 159, column: 28, scope: !17602)
!17680 = !DILocation(line: 159, column: 40, scope: !17602)
!17681 = !DILocation(line: 159, column: 52, scope: !17602)
!17682 = !DILocation(line: 156, column: 7, scope: !17602)
!17683 = !DILocation(line: 160, column: 7, scope: !17602)
!17684 = !DILocation(line: 167, column: 16, scope: !17602)
!17685 = !DILocation(line: 167, column: 24, scope: !17602)
!17686 = !DILocation(line: 169, column: 17, scope: !17602)
!17687 = !DILocation(line: 169, column: 29, scope: !17602)
!17688 = !DILocation(line: 169, column: 41, scope: !17602)
!17689 = !DILocation(line: 169, column: 53, scope: !17602)
!17690 = !DILocation(line: 169, column: 65, scope: !17602)
!17691 = !DILocation(line: 170, column: 17, scope: !17602)
!17692 = !DILocation(line: 170, column: 29, scope: !17602)
!17693 = !DILocation(line: 170, column: 41, scope: !17602)
!17694 = !DILocation(line: 170, column: 53, scope: !17602)
!17695 = !DILocation(line: 167, column: 7, scope: !17602)
!17696 = !DILocation(line: 171, column: 7, scope: !17602)
!17697 = !DILocation(line: 173, column: 1, scope: !17569)
!17698 = distinct !DISubprogram(name: "version_etc_ar", scope: !17570, file: !17570, line: 180, type: !1995, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1955, retainedNodes: !143)
!17699 = !DILocalVariable(name: "stream", arg: 1, scope: !17698, file: !17570, line: 180, type: !1960)
!17700 = !DILocation(line: 180, column: 23, scope: !17698)
!17701 = !DILocalVariable(name: "command_name", arg: 2, scope: !17698, file: !17570, line: 181, type: !115)
!17702 = !DILocation(line: 181, column: 29, scope: !17698)
!17703 = !DILocalVariable(name: "package", arg: 3, scope: !17698, file: !17570, line: 181, type: !115)
!17704 = !DILocation(line: 181, column: 55, scope: !17698)
!17705 = !DILocalVariable(name: "version", arg: 4, scope: !17698, file: !17570, line: 182, type: !115)
!17706 = !DILocation(line: 182, column: 29, scope: !17698)
!17707 = !DILocalVariable(name: "authors", arg: 5, scope: !17698, file: !17570, line: 182, type: !1260)
!17708 = !DILocation(line: 182, column: 59, scope: !17698)
!17709 = !DILocalVariable(name: "n_authors", scope: !17698, file: !17570, line: 184, type: !55)
!17710 = !DILocation(line: 184, column: 10, scope: !17698)
!17711 = !DILocation(line: 186, column: 18, scope: !17712)
!17712 = distinct !DILexicalBlock(scope: !17698, file: !17570, line: 186, column: 3)
!17713 = !DILocation(line: 186, column: 8, scope: !17712)
!17714 = !DILocation(line: 186, column: 23, scope: !17715)
!17715 = distinct !DILexicalBlock(scope: !17712, file: !17570, line: 186, column: 3)
!17716 = !DILocation(line: 186, column: 31, scope: !17715)
!17717 = !DILocation(line: 186, column: 3, scope: !17712)
!17718 = !DILocation(line: 186, column: 52, scope: !17715)
!17719 = !DILocation(line: 186, column: 3, scope: !17715)
!17720 = distinct !{!17720, !17717, !17721}
!17721 = !DILocation(line: 187, column: 5, scope: !17712)
!17722 = !DILocation(line: 188, column: 20, scope: !17698)
!17723 = !DILocation(line: 188, column: 28, scope: !17698)
!17724 = !DILocation(line: 188, column: 42, scope: !17698)
!17725 = !DILocation(line: 188, column: 51, scope: !17698)
!17726 = !DILocation(line: 188, column: 60, scope: !17698)
!17727 = !DILocation(line: 188, column: 69, scope: !17698)
!17728 = !DILocation(line: 188, column: 3, scope: !17698)
!17729 = !DILocation(line: 189, column: 1, scope: !17698)
!17730 = distinct !DISubprogram(name: "version_etc_va", scope: !17570, file: !17570, line: 196, type: !1997, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1955, retainedNodes: !143)
!17731 = !DILocalVariable(name: "stream", arg: 1, scope: !17730, file: !17570, line: 196, type: !1960)
!17732 = !DILocation(line: 196, column: 23, scope: !17730)
!17733 = !DILocalVariable(name: "command_name", arg: 2, scope: !17730, file: !17570, line: 197, type: !115)
!17734 = !DILocation(line: 197, column: 29, scope: !17730)
!17735 = !DILocalVariable(name: "package", arg: 3, scope: !17730, file: !17570, line: 197, type: !115)
!17736 = !DILocation(line: 197, column: 55, scope: !17730)
!17737 = !DILocalVariable(name: "version", arg: 4, scope: !17730, file: !17570, line: 198, type: !115)
!17738 = !DILocation(line: 198, column: 29, scope: !17730)
!17739 = !DILocalVariable(name: "authors", arg: 5, scope: !17730, file: !17570, line: 198, type: !1999)
!17740 = !DILocation(line: 198, column: 46, scope: !17730)
!17741 = !DILocalVariable(name: "n_authors", scope: !17730, file: !17570, line: 200, type: !55)
!17742 = !DILocation(line: 200, column: 10, scope: !17730)
!17743 = !DILocalVariable(name: "authtab", scope: !17730, file: !17570, line: 201, type: !2006)
!17744 = !DILocation(line: 201, column: 15, scope: !17730)
!17745 = !DILocation(line: 203, column: 18, scope: !17746)
!17746 = distinct !DILexicalBlock(scope: !17730, file: !17570, line: 203, column: 3)
!17747 = !DILocation(line: 203, column: 8, scope: !17746)
!17748 = !DILocation(line: 204, column: 8, scope: !17749)
!17749 = distinct !DILexicalBlock(scope: !17746, file: !17570, line: 203, column: 3)
!17750 = !DILocation(line: 204, column: 18, scope: !17749)
!17751 = !DILocation(line: 205, column: 10, scope: !17749)
!17752 = !DILocation(line: 205, column: 35, scope: !17749)
!17753 = !DILocation(line: 205, column: 22, scope: !17749)
!17754 = !DILocation(line: 205, column: 14, scope: !17749)
!17755 = !DILocation(line: 205, column: 33, scope: !17749)
!17756 = !DILocation(line: 205, column: 67, scope: !17749)
!17757 = !DILocation(line: 0, scope: !17749)
!17758 = !DILocation(line: 203, column: 3, scope: !17746)
!17759 = !DILocation(line: 206, column: 17, scope: !17749)
!17760 = !DILocation(line: 203, column: 3, scope: !17749)
!17761 = distinct !{!17761, !17758, !17762}
!17762 = !DILocation(line: 207, column: 5, scope: !17746)
!17763 = !DILocation(line: 208, column: 20, scope: !17730)
!17764 = !DILocation(line: 208, column: 28, scope: !17730)
!17765 = !DILocation(line: 208, column: 42, scope: !17730)
!17766 = !DILocation(line: 208, column: 51, scope: !17730)
!17767 = !DILocation(line: 209, column: 20, scope: !17730)
!17768 = !DILocation(line: 209, column: 29, scope: !17730)
!17769 = !DILocation(line: 208, column: 3, scope: !17730)
!17770 = !DILocation(line: 210, column: 1, scope: !17730)
!17771 = distinct !DISubprogram(name: "version_etc", scope: !17570, file: !17570, line: 227, type: !17772, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1955, retainedNodes: !143)
!17772 = !DISubroutineType(types: !17773)
!17773 = !{null, !1960, !115, !115, !115, null}
!17774 = !DILocalVariable(name: "stream", arg: 1, scope: !17771, file: !17570, line: 227, type: !1960)
!17775 = !DILocation(line: 227, column: 20, scope: !17771)
!17776 = !DILocalVariable(name: "command_name", arg: 2, scope: !17771, file: !17570, line: 228, type: !115)
!17777 = !DILocation(line: 228, column: 26, scope: !17771)
!17778 = !DILocalVariable(name: "package", arg: 3, scope: !17771, file: !17570, line: 228, type: !115)
!17779 = !DILocation(line: 228, column: 52, scope: !17771)
!17780 = !DILocalVariable(name: "version", arg: 4, scope: !17771, file: !17570, line: 229, type: !115)
!17781 = !DILocation(line: 229, column: 26, scope: !17771)
!17782 = !DILocalVariable(name: "authors", scope: !17771, file: !17570, line: 231, type: !2009)
!17783 = !DILocation(line: 231, column: 11, scope: !17771)
!17784 = !DILocation(line: 233, column: 3, scope: !17771)
!17785 = !DILocation(line: 234, column: 19, scope: !17771)
!17786 = !DILocation(line: 234, column: 27, scope: !17771)
!17787 = !DILocation(line: 234, column: 41, scope: !17771)
!17788 = !DILocation(line: 234, column: 50, scope: !17771)
!17789 = !DILocation(line: 234, column: 59, scope: !17771)
!17790 = !DILocation(line: 234, column: 3, scope: !17771)
!17791 = !DILocation(line: 235, column: 3, scope: !17771)
!17792 = !DILocation(line: 236, column: 1, scope: !17771)
!17793 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !17570, file: !17570, line: 239, type: !134, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1955, retainedNodes: !143)
!17794 = !DILocation(line: 245, column: 11, scope: !17793)
!17795 = !DILocation(line: 245, column: 3, scope: !17793)
!17796 = !DILocation(line: 251, column: 11, scope: !17793)
!17797 = !DILocation(line: 251, column: 3, scope: !17793)
!17798 = !DILocation(line: 256, column: 3, scope: !17793)
!17799 = !DILocation(line: 258, column: 1, scope: !17793)
!17800 = !DILocation(line: 37, column: 9, scope: !17801)
!17801 = distinct !DILexicalBlock(scope: !1243, file: !1244, line: 37, column: 7)
!17802 = !DILocation(line: 37, column: 7, scope: !1243)
!17803 = !DILocalVariable(name: "can", scope: !17804, file: !1244, line: 39, type: !120)
!17804 = distinct !DILexicalBlock(scope: !17801, file: !1244, line: 38, column: 5)
!17805 = !DILocation(line: 39, column: 12, scope: !17804)
!17806 = !DILocation(line: 44, column: 14, scope: !17804)
!17807 = !DILocation(line: 44, column: 25, scope: !17804)
!17808 = !DILocation(line: 44, column: 11, scope: !17804)
!17809 = !DILocation(line: 46, column: 19, scope: !17804)
!17810 = !DILocation(line: 46, column: 17, scope: !17804)
!17811 = !DILocation(line: 47, column: 19, scope: !17804)
!17812 = !DILocation(line: 48, column: 5, scope: !17804)
!17813 = !DILocation(line: 50, column: 10, scope: !1243)
!17814 = !DILocation(line: 50, column: 3, scope: !1243)
!17815 = distinct !DISubprogram(name: "xnmalloc", scope: !17816, file: !17816, line: 99, type: !2016, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2013, retainedNodes: !143)
!17816 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mbarbar/software/coreutils-8.31")
!17817 = !DILocalVariable(name: "n", arg: 1, scope: !17815, file: !17816, line: 99, type: !55)
!17818 = !DILocation(line: 99, column: 18, scope: !17815)
!17819 = !DILocalVariable(name: "s", arg: 2, scope: !17815, file: !17816, line: 99, type: !55)
!17820 = !DILocation(line: 99, column: 28, scope: !17815)
!17821 = !DILocation(line: 101, column: 7, scope: !17822)
!17822 = distinct !DILexicalBlock(scope: !17815, file: !17816, line: 101, column: 7)
!17823 = !DILocation(line: 101, column: 7, scope: !17815)
!17824 = !DILocation(line: 102, column: 5, scope: !17822)
!17825 = !DILocation(line: 103, column: 19, scope: !17815)
!17826 = !DILocation(line: 103, column: 23, scope: !17815)
!17827 = !DILocation(line: 103, column: 21, scope: !17815)
!17828 = !DILocation(line: 103, column: 10, scope: !17815)
!17829 = !DILocation(line: 103, column: 3, scope: !17815)
!17830 = distinct !DISubprogram(name: "xmalloc", scope: !17831, file: !17831, line: 39, type: !2024, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2013, retainedNodes: !143)
!17831 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17832 = !DILocalVariable(name: "n", arg: 1, scope: !17830, file: !17831, line: 39, type: !55)
!17833 = !DILocation(line: 39, column: 17, scope: !17830)
!17834 = !DILocalVariable(name: "p", scope: !17830, file: !17831, line: 41, type: !53)
!17835 = !DILocation(line: 41, column: 9, scope: !17830)
!17836 = !DILocation(line: 41, column: 21, scope: !17830)
!17837 = !DILocation(line: 41, column: 13, scope: !17830)
!17838 = !DILocation(line: 42, column: 8, scope: !17839)
!17839 = distinct !DILexicalBlock(scope: !17830, file: !17831, line: 42, column: 7)
!17840 = !DILocation(line: 42, column: 10, scope: !17839)
!17841 = !DILocation(line: 42, column: 13, scope: !17839)
!17842 = !DILocation(line: 42, column: 15, scope: !17839)
!17843 = !DILocation(line: 42, column: 7, scope: !17830)
!17844 = !DILocation(line: 43, column: 5, scope: !17839)
!17845 = !DILocation(line: 44, column: 10, scope: !17830)
!17846 = !DILocation(line: 44, column: 3, scope: !17830)
!17847 = distinct !DISubprogram(name: "xnrealloc", scope: !17816, file: !17816, line: 112, type: !2018, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2013, retainedNodes: !143)
!17848 = !DILocalVariable(name: "p", arg: 1, scope: !17847, file: !17816, line: 112, type: !53)
!17849 = !DILocation(line: 112, column: 18, scope: !17847)
!17850 = !DILocalVariable(name: "n", arg: 2, scope: !17847, file: !17816, line: 112, type: !55)
!17851 = !DILocation(line: 112, column: 28, scope: !17847)
!17852 = !DILocalVariable(name: "s", arg: 3, scope: !17847, file: !17816, line: 112, type: !55)
!17853 = !DILocation(line: 112, column: 38, scope: !17847)
!17854 = !DILocation(line: 114, column: 7, scope: !17855)
!17855 = distinct !DILexicalBlock(scope: !17847, file: !17816, line: 114, column: 7)
!17856 = !DILocation(line: 114, column: 7, scope: !17847)
!17857 = !DILocation(line: 115, column: 5, scope: !17855)
!17858 = !DILocation(line: 116, column: 20, scope: !17847)
!17859 = !DILocation(line: 116, column: 23, scope: !17847)
!17860 = !DILocation(line: 116, column: 27, scope: !17847)
!17861 = !DILocation(line: 116, column: 25, scope: !17847)
!17862 = !DILocation(line: 116, column: 10, scope: !17847)
!17863 = !DILocation(line: 116, column: 3, scope: !17847)
!17864 = distinct !DISubprogram(name: "xrealloc", scope: !17831, file: !17831, line: 51, type: !2026, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2013, retainedNodes: !143)
!17865 = !DILocalVariable(name: "p", arg: 1, scope: !17864, file: !17831, line: 51, type: !53)
!17866 = !DILocation(line: 51, column: 17, scope: !17864)
!17867 = !DILocalVariable(name: "n", arg: 2, scope: !17864, file: !17831, line: 51, type: !55)
!17868 = !DILocation(line: 51, column: 27, scope: !17864)
!17869 = !DILocation(line: 53, column: 8, scope: !17870)
!17870 = distinct !DILexicalBlock(scope: !17864, file: !17831, line: 53, column: 7)
!17871 = !DILocation(line: 53, column: 10, scope: !17870)
!17872 = !DILocation(line: 53, column: 13, scope: !17870)
!17873 = !DILocation(line: 53, column: 7, scope: !17864)
!17874 = !DILocation(line: 57, column: 13, scope: !17875)
!17875 = distinct !DILexicalBlock(scope: !17870, file: !17831, line: 54, column: 5)
!17876 = !DILocation(line: 57, column: 7, scope: !17875)
!17877 = !DILocation(line: 58, column: 7, scope: !17875)
!17878 = !DILocation(line: 61, column: 16, scope: !17864)
!17879 = !DILocation(line: 61, column: 19, scope: !17864)
!17880 = !DILocation(line: 61, column: 7, scope: !17864)
!17881 = !DILocation(line: 61, column: 5, scope: !17864)
!17882 = !DILocation(line: 62, column: 8, scope: !17883)
!17883 = distinct !DILexicalBlock(scope: !17864, file: !17831, line: 62, column: 7)
!17884 = !DILocation(line: 62, column: 10, scope: !17883)
!17885 = !DILocation(line: 62, column: 13, scope: !17883)
!17886 = !DILocation(line: 62, column: 7, scope: !17864)
!17887 = !DILocation(line: 63, column: 5, scope: !17883)
!17888 = !DILocation(line: 64, column: 10, scope: !17864)
!17889 = !DILocation(line: 64, column: 3, scope: !17864)
!17890 = !DILocation(line: 65, column: 1, scope: !17864)
!17891 = distinct !DISubprogram(name: "x2nrealloc", scope: !17816, file: !17816, line: 174, type: !2020, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2013, retainedNodes: !143)
!17892 = !DILocalVariable(name: "p", arg: 1, scope: !17891, file: !17816, line: 174, type: !53)
!17893 = !DILocation(line: 174, column: 19, scope: !17891)
!17894 = !DILocalVariable(name: "pn", arg: 2, scope: !17891, file: !17816, line: 174, type: !626)
!17895 = !DILocation(line: 174, column: 30, scope: !17891)
!17896 = !DILocalVariable(name: "s", arg: 3, scope: !17891, file: !17816, line: 174, type: !55)
!17897 = !DILocation(line: 174, column: 41, scope: !17891)
!17898 = !DILocalVariable(name: "n", scope: !17891, file: !17816, line: 176, type: !55)
!17899 = !DILocation(line: 176, column: 10, scope: !17891)
!17900 = !DILocation(line: 176, column: 15, scope: !17891)
!17901 = !DILocation(line: 176, column: 14, scope: !17891)
!17902 = !DILocation(line: 178, column: 9, scope: !17903)
!17903 = distinct !DILexicalBlock(scope: !17891, file: !17816, line: 178, column: 7)
!17904 = !DILocation(line: 178, column: 7, scope: !17891)
!17905 = !DILocation(line: 180, column: 13, scope: !17906)
!17906 = distinct !DILexicalBlock(scope: !17907, file: !17816, line: 180, column: 11)
!17907 = distinct !DILexicalBlock(scope: !17903, file: !17816, line: 179, column: 5)
!17908 = !DILocation(line: 180, column: 11, scope: !17907)
!17909 = !DILocation(line: 188, column: 32, scope: !17910)
!17910 = distinct !DILexicalBlock(scope: !17906, file: !17816, line: 181, column: 9)
!17911 = !DILocation(line: 188, column: 30, scope: !17910)
!17912 = !DILocation(line: 188, column: 13, scope: !17910)
!17913 = !DILocation(line: 189, column: 17, scope: !17910)
!17914 = !DILocation(line: 189, column: 16, scope: !17910)
!17915 = !DILocation(line: 189, column: 13, scope: !17910)
!17916 = !DILocation(line: 190, column: 9, scope: !17910)
!17917 = !DILocation(line: 191, column: 11, scope: !17918)
!17918 = distinct !DILexicalBlock(scope: !17907, file: !17816, line: 191, column: 11)
!17919 = !DILocation(line: 191, column: 11, scope: !17907)
!17920 = !DILocation(line: 192, column: 9, scope: !17918)
!17921 = !DILocation(line: 193, column: 5, scope: !17907)
!17922 = !DILocation(line: 200, column: 71, scope: !17923)
!17923 = distinct !DILexicalBlock(scope: !17924, file: !17816, line: 200, column: 11)
!17924 = distinct !DILexicalBlock(scope: !17903, file: !17816, line: 195, column: 5)
!17925 = !DILocation(line: 200, column: 69, scope: !17923)
!17926 = !DILocation(line: 201, column: 14, scope: !17923)
!17927 = !DILocation(line: 201, column: 11, scope: !17923)
!17928 = !DILocation(line: 200, column: 11, scope: !17924)
!17929 = !DILocation(line: 202, column: 9, scope: !17923)
!17930 = !DILocation(line: 203, column: 12, scope: !17924)
!17931 = !DILocation(line: 203, column: 14, scope: !17924)
!17932 = !DILocation(line: 203, column: 18, scope: !17924)
!17933 = !DILocation(line: 203, column: 9, scope: !17924)
!17934 = !DILocation(line: 206, column: 9, scope: !17891)
!17935 = !DILocation(line: 206, column: 4, scope: !17891)
!17936 = !DILocation(line: 206, column: 7, scope: !17891)
!17937 = !DILocation(line: 207, column: 20, scope: !17891)
!17938 = !DILocation(line: 207, column: 23, scope: !17891)
!17939 = !DILocation(line: 207, column: 27, scope: !17891)
!17940 = !DILocation(line: 207, column: 25, scope: !17891)
!17941 = !DILocation(line: 207, column: 10, scope: !17891)
!17942 = !DILocation(line: 207, column: 3, scope: !17891)
!17943 = distinct !DISubprogram(name: "xcharalloc", scope: !17816, file: !17816, line: 216, type: !2022, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2013, retainedNodes: !143)
!17944 = !DILocalVariable(name: "n", arg: 1, scope: !17943, file: !17816, line: 216, type: !55)
!17945 = !DILocation(line: 216, column: 20, scope: !17943)
!17946 = !DILocation(line: 218, column: 10, scope: !17943)
!17947 = !DILocation(line: 218, column: 3, scope: !17943)
!17948 = distinct !DISubprogram(name: "x2realloc", scope: !17831, file: !17831, line: 74, type: !2028, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2013, retainedNodes: !143)
!17949 = !DILocalVariable(name: "p", arg: 1, scope: !17948, file: !17831, line: 74, type: !53)
!17950 = !DILocation(line: 74, column: 18, scope: !17948)
!17951 = !DILocalVariable(name: "pn", arg: 2, scope: !17948, file: !17831, line: 74, type: !626)
!17952 = !DILocation(line: 74, column: 29, scope: !17948)
!17953 = !DILocation(line: 76, column: 22, scope: !17948)
!17954 = !DILocation(line: 76, column: 25, scope: !17948)
!17955 = !DILocation(line: 76, column: 10, scope: !17948)
!17956 = !DILocation(line: 76, column: 3, scope: !17948)
!17957 = distinct !DISubprogram(name: "xzalloc", scope: !17831, file: !17831, line: 84, type: !2024, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2013, retainedNodes: !143)
!17958 = !DILocalVariable(name: "s", arg: 1, scope: !17957, file: !17831, line: 84, type: !55)
!17959 = !DILocation(line: 84, column: 17, scope: !17957)
!17960 = !DILocation(line: 86, column: 27, scope: !17957)
!17961 = !DILocation(line: 86, column: 18, scope: !17957)
!17962 = !DILocation(line: 86, column: 34, scope: !17957)
!17963 = !DILocation(line: 86, column: 10, scope: !17957)
!17964 = !DILocation(line: 86, column: 3, scope: !17957)
!17965 = distinct !DISubprogram(name: "xcalloc", scope: !17831, file: !17831, line: 93, type: !2016, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2013, retainedNodes: !143)
!17966 = !DILocalVariable(name: "n", arg: 1, scope: !17965, file: !17831, line: 93, type: !55)
!17967 = !DILocation(line: 93, column: 17, scope: !17965)
!17968 = !DILocalVariable(name: "s", arg: 2, scope: !17965, file: !17831, line: 93, type: !55)
!17969 = !DILocation(line: 93, column: 27, scope: !17965)
!17970 = !DILocalVariable(name: "p", scope: !17965, file: !17831, line: 95, type: !53)
!17971 = !DILocation(line: 95, column: 9, scope: !17965)
!17972 = !DILocation(line: 100, column: 7, scope: !17973)
!17973 = distinct !DILexicalBlock(scope: !17965, file: !17831, line: 100, column: 7)
!17974 = !DILocation(line: 101, column: 7, scope: !17973)
!17975 = !DILocation(line: 101, column: 26, scope: !17973)
!17976 = !DILocation(line: 101, column: 29, scope: !17973)
!17977 = !DILocation(line: 101, column: 18, scope: !17973)
!17978 = !DILocation(line: 101, column: 16, scope: !17973)
!17979 = !DILocation(line: 100, column: 7, scope: !17965)
!17980 = !DILocation(line: 102, column: 5, scope: !17973)
!17981 = !DILocation(line: 103, column: 10, scope: !17965)
!17982 = !DILocation(line: 103, column: 3, scope: !17965)
!17983 = distinct !DISubprogram(name: "xmemdup", scope: !17831, file: !17831, line: 111, type: !423, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2013, retainedNodes: !143)
!17984 = !DILocalVariable(name: "p", arg: 1, scope: !17983, file: !17831, line: 111, type: !425)
!17985 = !DILocation(line: 111, column: 22, scope: !17983)
!17986 = !DILocalVariable(name: "s", arg: 2, scope: !17983, file: !17831, line: 111, type: !55)
!17987 = !DILocation(line: 111, column: 32, scope: !17983)
!17988 = !DILocation(line: 113, column: 27, scope: !17983)
!17989 = !DILocation(line: 113, column: 18, scope: !17983)
!17990 = !DILocation(line: 113, column: 31, scope: !17983)
!17991 = !DILocation(line: 113, column: 34, scope: !17983)
!17992 = !DILocation(line: 113, column: 10, scope: !17983)
!17993 = !DILocation(line: 113, column: 3, scope: !17983)
!17994 = distinct !DISubprogram(name: "xstrdup", scope: !17831, file: !17831, line: 119, type: !988, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2013, retainedNodes: !143)
!17995 = !DILocalVariable(name: "string", arg: 1, scope: !17994, file: !17831, line: 119, type: !115)
!17996 = !DILocation(line: 119, column: 22, scope: !17994)
!17997 = !DILocation(line: 121, column: 19, scope: !17994)
!17998 = !DILocation(line: 121, column: 35, scope: !17994)
!17999 = !DILocation(line: 121, column: 27, scope: !17994)
!18000 = !DILocation(line: 121, column: 43, scope: !17994)
!18001 = !DILocation(line: 121, column: 10, scope: !17994)
!18002 = !DILocation(line: 121, column: 3, scope: !17994)
!18003 = distinct !DISubprogram(name: "xalloc_die", scope: !18004, file: !18004, line: 32, type: !134, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2030, retainedNodes: !143)
!18004 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18005 = !DILocation(line: 34, column: 10, scope: !18003)
!18006 = !DILocation(line: 34, column: 33, scope: !18003)
!18007 = !DILocation(line: 34, column: 3, scope: !18003)
!18008 = !DILocation(line: 40, column: 3, scope: !18003)
!18009 = distinct !DISubprogram(name: "xfts_open", scope: !18010, file: !18010, line: 33, type: !2036, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2033, retainedNodes: !143)
!18010 = !DIFile(filename: "lib/xfts.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18011 = !DILocalVariable(name: "argv", arg: 1, scope: !18009, file: !18010, line: 33, type: !1337)
!18012 = !DILocation(line: 33, column: 26, scope: !18009)
!18013 = !DILocalVariable(name: "options", arg: 2, scope: !18009, file: !18010, line: 33, type: !7)
!18014 = !DILocation(line: 33, column: 36, scope: !18009)
!18015 = !DILocalVariable(name: "compar", arg: 3, scope: !18009, file: !18010, line: 34, type: !2120)
!18016 = !DILocation(line: 34, column: 18, scope: !18009)
!18017 = !DILocalVariable(name: "fts", scope: !18009, file: !18010, line: 36, type: !2038)
!18018 = !DILocation(line: 36, column: 8, scope: !18009)
!18019 = !DILocation(line: 36, column: 24, scope: !18009)
!18020 = !DILocation(line: 36, column: 30, scope: !18009)
!18021 = !DILocation(line: 36, column: 38, scope: !18009)
!18022 = !DILocation(line: 36, column: 51, scope: !18009)
!18023 = !DILocation(line: 36, column: 14, scope: !18009)
!18024 = !DILocation(line: 37, column: 7, scope: !18025)
!18025 = distinct !DILexicalBlock(scope: !18009, file: !18010, line: 37, column: 7)
!18026 = !DILocation(line: 37, column: 11, scope: !18025)
!18027 = !DILocation(line: 37, column: 7, scope: !18009)
!18028 = !DILocation(line: 41, column: 7, scope: !18029)
!18029 = distinct !DILexicalBlock(scope: !18030, file: !18010, line: 41, column: 7)
!18030 = distinct !DILexicalBlock(scope: !18031, file: !18010, line: 41, column: 7)
!18031 = distinct !DILexicalBlock(scope: !18025, file: !18010, line: 38, column: 5)
!18032 = !DILocation(line: 41, column: 7, scope: !18030)
!18033 = !DILocation(line: 42, column: 7, scope: !18031)
!18034 = !DILocation(line: 45, column: 10, scope: !18009)
!18035 = !DILocation(line: 45, column: 3, scope: !18009)
!18036 = distinct !DISubprogram(name: "cycle_warning_required", scope: !18010, file: !18010, line: 56, type: !2127, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2033, retainedNodes: !143)
!18037 = !DILocalVariable(name: "fts", arg: 1, scope: !18036, file: !18010, line: 56, type: !2129)
!18038 = !DILocation(line: 56, column: 36, scope: !18036)
!18039 = !DILocalVariable(name: "ent", arg: 2, scope: !18036, file: !18010, line: 56, type: !2124)
!18040 = !DILocation(line: 56, column: 55, scope: !18036)
!18041 = !DILocation(line: 62, column: 12, scope: !18036)
!18042 = !{!3824, !2983, i64 72}
!18043 = !DILocation(line: 62, column: 38, scope: !18036)
!18044 = !DILocation(line: 62, column: 42, scope: !18036)
!18045 = !DILocation(line: 63, column: 11, scope: !18036)
!18046 = !DILocation(line: 63, column: 15, scope: !18036)
!18047 = !DILocation(line: 63, column: 41, scope: !18036)
!18048 = !DILocation(line: 63, column: 44, scope: !18036)
!18049 = !DILocation(line: 64, column: 15, scope: !18036)
!18050 = !DILocation(line: 64, column: 18, scope: !18036)
!18051 = !DILocation(line: 64, column: 23, scope: !18036)
!18052 = !DILocation(line: 64, column: 33, scope: !18036)
!18053 = !DILocation(line: 0, scope: !18036)
!18054 = !DILocation(line: 62, column: 3, scope: !18036)
!18055 = distinct !DISubprogram(name: "xvasprintf", scope: !18056, file: !18056, line: 76, type: !2134, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2131, retainedNodes: !143)
!18056 = !DIFile(filename: "lib/xvasprintf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18057 = !DILocalVariable(name: "format", arg: 1, scope: !18055, file: !18056, line: 76, type: !115)
!18058 = !DILocation(line: 76, column: 25, scope: !18055)
!18059 = !DILocalVariable(name: "args", arg: 2, scope: !18055, file: !18056, line: 76, type: !2136)
!18060 = !DILocation(line: 76, column: 41, scope: !18055)
!18061 = !DILocalVariable(name: "result", scope: !18055, file: !18056, line: 78, type: !9)
!18062 = !DILocation(line: 78, column: 9, scope: !18055)
!18063 = !DILocalVariable(name: "argcount", scope: !18064, file: !18056, line: 84, type: !55)
!18064 = distinct !DILexicalBlock(scope: !18055, file: !18056, line: 83, column: 3)
!18065 = !DILocation(line: 84, column: 12, scope: !18064)
!18066 = !DILocalVariable(name: "f", scope: !18064, file: !18056, line: 85, type: !115)
!18067 = !DILocation(line: 85, column: 17, scope: !18064)
!18068 = !DILocation(line: 87, column: 14, scope: !18069)
!18069 = distinct !DILexicalBlock(scope: !18064, file: !18056, line: 87, column: 5)
!18070 = !DILocation(line: 87, column: 12, scope: !18069)
!18071 = !DILocation(line: 87, column: 10, scope: !18069)
!18072 = !DILocation(line: 89, column: 14, scope: !18073)
!18073 = distinct !DILexicalBlock(scope: !18074, file: !18056, line: 89, column: 13)
!18074 = distinct !DILexicalBlock(scope: !18075, file: !18056, line: 88, column: 7)
!18075 = distinct !DILexicalBlock(scope: !18069, file: !18056, line: 87, column: 5)
!18076 = !DILocation(line: 89, column: 13, scope: !18073)
!18077 = !DILocation(line: 89, column: 16, scope: !18073)
!18078 = !DILocation(line: 89, column: 13, scope: !18074)
!18079 = !DILocation(line: 91, column: 27, scope: !18073)
!18080 = !DILocation(line: 91, column: 37, scope: !18073)
!18081 = !DILocation(line: 91, column: 18, scope: !18073)
!18082 = !DILocation(line: 91, column: 11, scope: !18073)
!18083 = !DILocation(line: 92, column: 14, scope: !18084)
!18084 = distinct !DILexicalBlock(scope: !18074, file: !18056, line: 92, column: 13)
!18085 = !DILocation(line: 92, column: 13, scope: !18084)
!18086 = !DILocation(line: 92, column: 16, scope: !18084)
!18087 = !DILocation(line: 92, column: 13, scope: !18074)
!18088 = !DILocation(line: 93, column: 11, scope: !18084)
!18089 = !DILocation(line: 94, column: 10, scope: !18074)
!18090 = !DILocation(line: 95, column: 14, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !18074, file: !18056, line: 95, column: 13)
!18092 = !DILocation(line: 95, column: 13, scope: !18091)
!18093 = !DILocation(line: 95, column: 16, scope: !18091)
!18094 = !DILocation(line: 95, column: 13, scope: !18074)
!18095 = !DILocation(line: 96, column: 11, scope: !18091)
!18096 = !DILocation(line: 97, column: 10, scope: !18074)
!18097 = !DILocation(line: 98, column: 17, scope: !18074)
!18098 = !DILocation(line: 87, column: 5, scope: !18075)
!18099 = distinct !{!18099, !18100, !18101}
!18100 = !DILocation(line: 87, column: 5, scope: !18069)
!18101 = !DILocation(line: 99, column: 7, scope: !18069)
!18102 = !DILocation(line: 102, column: 27, scope: !18103)
!18103 = distinct !DILexicalBlock(scope: !18055, file: !18056, line: 102, column: 7)
!18104 = !DILocation(line: 102, column: 35, scope: !18103)
!18105 = !DILocation(line: 102, column: 7, scope: !18103)
!18106 = !DILocation(line: 102, column: 41, scope: !18103)
!18107 = !DILocation(line: 102, column: 7, scope: !18055)
!18108 = !DILocation(line: 104, column: 11, scope: !18109)
!18109 = distinct !DILexicalBlock(scope: !18110, file: !18056, line: 104, column: 11)
!18110 = distinct !DILexicalBlock(scope: !18103, file: !18056, line: 103, column: 5)
!18111 = !DILocation(line: 104, column: 17, scope: !18109)
!18112 = !DILocation(line: 104, column: 11, scope: !18110)
!18113 = !DILocation(line: 105, column: 9, scope: !18109)
!18114 = !DILocation(line: 106, column: 7, scope: !18110)
!18115 = !DILocation(line: 109, column: 10, scope: !18055)
!18116 = !DILocation(line: 109, column: 3, scope: !18055)
!18117 = !DILocation(line: 110, column: 1, scope: !18055)
!18118 = distinct !DISubprogram(name: "xstrcat", scope: !18056, file: !18056, line: 33, type: !2143, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2131, retainedNodes: !143)
!18119 = !DILocalVariable(name: "argcount", arg: 1, scope: !18118, file: !18056, line: 33, type: !55)
!18120 = !DILocation(line: 33, column: 17, scope: !18118)
!18121 = !DILocalVariable(name: "args", arg: 2, scope: !18118, file: !18056, line: 33, type: !2136)
!18122 = !DILocation(line: 33, column: 35, scope: !18118)
!18123 = !DILocalVariable(name: "result", scope: !18118, file: !18056, line: 35, type: !9)
!18124 = !DILocation(line: 35, column: 9, scope: !18118)
!18125 = !DILocalVariable(name: "ap", scope: !18118, file: !18056, line: 36, type: !2145)
!18126 = !DILocation(line: 36, column: 11, scope: !18118)
!18127 = !DILocalVariable(name: "totalsize", scope: !18118, file: !18056, line: 37, type: !55)
!18128 = !DILocation(line: 37, column: 10, scope: !18118)
!18129 = !DILocalVariable(name: "i", scope: !18118, file: !18056, line: 38, type: !55)
!18130 = !DILocation(line: 38, column: 10, scope: !18118)
!18131 = !DILocalVariable(name: "p", scope: !18118, file: !18056, line: 39, type: !9)
!18132 = !DILocation(line: 39, column: 9, scope: !18118)
!18133 = !DILocation(line: 42, column: 13, scope: !18118)
!18134 = !DILocation(line: 43, column: 3, scope: !18118)
!18135 = !DILocation(line: 44, column: 12, scope: !18136)
!18136 = distinct !DILexicalBlock(scope: !18118, file: !18056, line: 44, column: 3)
!18137 = !DILocation(line: 44, column: 10, scope: !18136)
!18138 = !DILocation(line: 44, column: 8, scope: !18136)
!18139 = !DILocation(line: 44, column: 22, scope: !18140)
!18140 = distinct !DILexicalBlock(scope: !18136, file: !18056, line: 44, column: 3)
!18141 = !DILocation(line: 44, column: 24, scope: !18140)
!18142 = !DILocation(line: 44, column: 3, scope: !18136)
!18143 = !DILocalVariable(name: "next", scope: !18144, file: !18056, line: 46, type: !115)
!18144 = distinct !DILexicalBlock(scope: !18140, file: !18056, line: 45, column: 5)
!18145 = !DILocation(line: 46, column: 19, scope: !18144)
!18146 = !DILocation(line: 46, column: 26, scope: !18144)
!18147 = !DILocation(line: 47, column: 25, scope: !18144)
!18148 = !DILocation(line: 47, column: 44, scope: !18144)
!18149 = !DILocation(line: 47, column: 36, scope: !18144)
!18150 = !DILocation(line: 47, column: 19, scope: !18144)
!18151 = !DILocation(line: 47, column: 17, scope: !18144)
!18152 = !DILocation(line: 48, column: 5, scope: !18144)
!18153 = !DILocation(line: 44, column: 30, scope: !18140)
!18154 = !DILocation(line: 44, column: 3, scope: !18140)
!18155 = distinct !{!18155, !18142, !18156}
!18156 = !DILocation(line: 48, column: 5, scope: !18136)
!18157 = !DILocation(line: 49, column: 3, scope: !18118)
!18158 = !DILocation(line: 54, column: 7, scope: !18159)
!18159 = distinct !DILexicalBlock(scope: !18118, file: !18056, line: 54, column: 7)
!18160 = !DILocation(line: 54, column: 17, scope: !18159)
!18161 = !DILocation(line: 54, column: 29, scope: !18159)
!18162 = !DILocation(line: 54, column: 32, scope: !18159)
!18163 = !DILocation(line: 54, column: 42, scope: !18159)
!18164 = !DILocation(line: 54, column: 7, scope: !18118)
!18165 = !DILocation(line: 56, column: 7, scope: !18166)
!18166 = distinct !DILexicalBlock(scope: !18159, file: !18056, line: 55, column: 5)
!18167 = !DILocation(line: 56, column: 13, scope: !18166)
!18168 = !DILocation(line: 57, column: 7, scope: !18166)
!18169 = !DILocation(line: 61, column: 12, scope: !18118)
!18170 = !DILocation(line: 61, column: 10, scope: !18118)
!18171 = !DILocation(line: 62, column: 7, scope: !18118)
!18172 = !DILocation(line: 62, column: 5, scope: !18118)
!18173 = !DILocation(line: 63, column: 12, scope: !18174)
!18174 = distinct !DILexicalBlock(scope: !18118, file: !18056, line: 63, column: 3)
!18175 = !DILocation(line: 63, column: 10, scope: !18174)
!18176 = !DILocation(line: 63, column: 8, scope: !18174)
!18177 = !DILocation(line: 63, column: 22, scope: !18178)
!18178 = distinct !DILexicalBlock(scope: !18174, file: !18056, line: 63, column: 3)
!18179 = !DILocation(line: 63, column: 24, scope: !18178)
!18180 = !DILocation(line: 63, column: 3, scope: !18174)
!18181 = !DILocalVariable(name: "next", scope: !18182, file: !18056, line: 65, type: !115)
!18182 = distinct !DILexicalBlock(scope: !18178, file: !18056, line: 64, column: 5)
!18183 = !DILocation(line: 65, column: 19, scope: !18182)
!18184 = !DILocation(line: 65, column: 26, scope: !18182)
!18185 = !DILocalVariable(name: "len", scope: !18182, file: !18056, line: 66, type: !55)
!18186 = !DILocation(line: 66, column: 14, scope: !18182)
!18187 = !DILocation(line: 66, column: 28, scope: !18182)
!18188 = !DILocation(line: 66, column: 20, scope: !18182)
!18189 = !DILocation(line: 67, column: 15, scope: !18182)
!18190 = !DILocation(line: 67, column: 18, scope: !18182)
!18191 = !DILocation(line: 67, column: 24, scope: !18182)
!18192 = !DILocation(line: 67, column: 7, scope: !18182)
!18193 = !DILocation(line: 68, column: 12, scope: !18182)
!18194 = !DILocation(line: 68, column: 9, scope: !18182)
!18195 = !DILocation(line: 69, column: 5, scope: !18182)
!18196 = !DILocation(line: 63, column: 30, scope: !18178)
!18197 = !DILocation(line: 63, column: 3, scope: !18178)
!18198 = distinct !{!18198, !18180, !18199}
!18199 = !DILocation(line: 69, column: 5, scope: !18174)
!18200 = !DILocation(line: 70, column: 4, scope: !18118)
!18201 = !DILocation(line: 70, column: 6, scope: !18118)
!18202 = !DILocation(line: 72, column: 10, scope: !18118)
!18203 = !DILocation(line: 72, column: 3, scope: !18118)
!18204 = !DILocation(line: 73, column: 1, scope: !18118)
!18205 = distinct !DISubprogram(name: "yesno", scope: !18206, file: !18206, line: 32, type: !1245, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2149, retainedNodes: !143)
!18206 = !DIFile(filename: "lib/yesno.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18207 = !DILocalVariable(name: "yes", scope: !18205, file: !18206, line: 34, type: !120)
!18208 = !DILocation(line: 34, column: 8, scope: !18205)
!18209 = !DILocalVariable(name: "response", scope: !18205, file: !18206, line: 37, type: !9)
!18210 = !DILocation(line: 37, column: 9, scope: !18205)
!18211 = !DILocalVariable(name: "response_size", scope: !18205, file: !18206, line: 38, type: !55)
!18212 = !DILocation(line: 38, column: 10, scope: !18205)
!18213 = !DILocalVariable(name: "response_len", scope: !18205, file: !18206, line: 39, type: !606)
!18214 = !DILocation(line: 39, column: 11, scope: !18205)
!18215 = !DILocation(line: 39, column: 62, scope: !18205)
!18216 = !DILocation(line: 39, column: 26, scope: !18205)
!18217 = !DILocation(line: 41, column: 7, scope: !18218)
!18218 = distinct !DILexicalBlock(scope: !18205, file: !18206, line: 41, column: 7)
!18219 = !DILocation(line: 41, column: 20, scope: !18218)
!18220 = !DILocation(line: 41, column: 7, scope: !18205)
!18221 = !DILocation(line: 42, column: 9, scope: !18218)
!18222 = !DILocation(line: 42, column: 5, scope: !18218)
!18223 = !DILocation(line: 47, column: 11, scope: !18224)
!18224 = distinct !DILexicalBlock(scope: !18225, file: !18206, line: 47, column: 11)
!18225 = distinct !DILexicalBlock(scope: !18218, file: !18206, line: 44, column: 5)
!18226 = !DILocation(line: 47, column: 20, scope: !18224)
!18227 = !DILocation(line: 47, column: 33, scope: !18224)
!18228 = !DILocation(line: 47, column: 38, scope: !18224)
!18229 = !DILocation(line: 47, column: 11, scope: !18225)
!18230 = !DILocation(line: 48, column: 9, scope: !18224)
!18231 = !DILocation(line: 48, column: 18, scope: !18224)
!18232 = !DILocation(line: 48, column: 31, scope: !18224)
!18233 = !DILocation(line: 48, column: 36, scope: !18224)
!18234 = !DILocation(line: 49, column: 27, scope: !18225)
!18235 = !DILocation(line: 49, column: 18, scope: !18225)
!18236 = !DILocation(line: 49, column: 16, scope: !18225)
!18237 = !DILocation(line: 49, column: 11, scope: !18225)
!18238 = !DILocation(line: 52, column: 9, scope: !18205)
!18239 = !DILocation(line: 52, column: 3, scope: !18205)
!18240 = !DILocation(line: 62, column: 10, scope: !18205)
!18241 = !DILocation(line: 62, column: 3, scope: !18205)
!18242 = distinct !DISubprogram(name: "rpl_fflush", scope: !18243, file: !18243, line: 129, type: !2189, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2186, retainedNodes: !143)
!18243 = !DIFile(filename: "lib/fflush.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18244 = !DILocalVariable(name: "stream", arg: 1, scope: !18242, file: !18243, line: 129, type: !2191)
!18245 = !DILocation(line: 129, column: 19, scope: !18242)
!18246 = !DILocation(line: 150, column: 7, scope: !18247)
!18247 = distinct !DILexicalBlock(scope: !18242, file: !18243, line: 150, column: 7)
!18248 = !DILocation(line: 150, column: 14, scope: !18247)
!18249 = !DILocation(line: 150, column: 22, scope: !18247)
!18250 = !DILocation(line: 150, column: 27, scope: !18247)
!18251 = !DILocation(line: 150, column: 7, scope: !18242)
!18252 = !DILocation(line: 151, column: 20, scope: !18247)
!18253 = !DILocation(line: 151, column: 12, scope: !18247)
!18254 = !DILocation(line: 151, column: 5, scope: !18247)
!18255 = !DILocation(line: 156, column: 44, scope: !18242)
!18256 = !DILocation(line: 156, column: 3, scope: !18242)
!18257 = !DILocation(line: 158, column: 18, scope: !18242)
!18258 = !DILocation(line: 158, column: 10, scope: !18242)
!18259 = !DILocation(line: 158, column: 3, scope: !18242)
!18260 = !DILocation(line: 232, column: 1, scope: !18242)
!18261 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !18243, file: !18243, line: 41, type: !2225, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2186, retainedNodes: !143)
!18262 = !DILocalVariable(name: "fp", arg: 1, scope: !18261, file: !18243, line: 41, type: !2191)
!18263 = !DILocation(line: 41, column: 48, scope: !18261)
!18264 = !DILocation(line: 43, column: 7, scope: !18265)
!18265 = distinct !DILexicalBlock(scope: !18261, file: !18243, line: 43, column: 7)
!18266 = !DILocation(line: 43, column: 11, scope: !18265)
!18267 = !{!18268, !2983, i64 0}
!18268 = !{!"_IO_FILE", !2983, i64 0, !2996, i64 8, !2996, i64 16, !2996, i64 24, !2996, i64 32, !2996, i64 40, !2996, i64 48, !2996, i64 56, !2996, i64 64, !2996, i64 72, !2996, i64 80, !2996, i64 88, !2996, i64 96, !2996, i64 104, !2983, i64 112, !2983, i64 116, !3180, i64 120, !3811, i64 128, !2984, i64 130, !2984, i64 131, !2996, i64 136, !3180, i64 144, !2996, i64 152, !2996, i64 160, !2996, i64 168, !2996, i64 176, !3180, i64 184, !2983, i64 192, !2984, i64 196}
!18269 = !DILocation(line: 43, column: 18, scope: !18265)
!18270 = !DILocation(line: 43, column: 7, scope: !18261)
!18271 = !DILocation(line: 45, column: 13, scope: !18265)
!18272 = !DILocation(line: 45, column: 5, scope: !18265)
!18273 = !DILocation(line: 46, column: 1, scope: !18261)
!18274 = distinct !DISubprogram(name: "freadahead", scope: !18275, file: !18275, line: 34, type: !2230, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2227, retainedNodes: !143)
!18275 = !DIFile(filename: "lib/freadahead.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18276 = !DILocalVariable(name: "fp", arg: 1, scope: !18274, file: !18275, line: 34, type: !2232)
!18277 = !DILocation(line: 34, column: 19, scope: !18274)
!18278 = !DILocation(line: 38, column: 7, scope: !18279)
!18279 = distinct !DILexicalBlock(scope: !18274, file: !18275, line: 38, column: 7)
!18280 = !DILocation(line: 38, column: 11, scope: !18279)
!18281 = !{!18268, !2996, i64 40}
!18282 = !DILocation(line: 38, column: 27, scope: !18279)
!18283 = !DILocation(line: 38, column: 31, scope: !18279)
!18284 = !{!18268, !2996, i64 32}
!18285 = !DILocation(line: 38, column: 25, scope: !18279)
!18286 = !DILocation(line: 38, column: 7, scope: !18274)
!18287 = !DILocation(line: 39, column: 5, scope: !18279)
!18288 = !DILocation(line: 40, column: 11, scope: !18274)
!18289 = !DILocation(line: 40, column: 15, scope: !18274)
!18290 = !{!18268, !2996, i64 16}
!18291 = !DILocation(line: 40, column: 30, scope: !18274)
!18292 = !DILocation(line: 40, column: 34, scope: !18274)
!18293 = !{!18268, !2996, i64 8}
!18294 = !DILocation(line: 40, column: 28, scope: !18274)
!18295 = !DILocation(line: 41, column: 13, scope: !18274)
!18296 = !DILocation(line: 41, column: 17, scope: !18274)
!18297 = !DILocation(line: 41, column: 24, scope: !18274)
!18298 = !DILocation(line: 41, column: 42, scope: !18274)
!18299 = !DILocation(line: 41, column: 46, scope: !18274)
!18300 = !{!18268, !2996, i64 88}
!18301 = !DILocation(line: 41, column: 61, scope: !18274)
!18302 = !DILocation(line: 41, column: 65, scope: !18274)
!18303 = !{!18268, !2996, i64 72}
!18304 = !DILocation(line: 41, column: 59, scope: !18274)
!18305 = !DILocation(line: 41, column: 10, scope: !18274)
!18306 = !DILocation(line: 40, column: 3, scope: !18274)
!18307 = !DILocation(line: 103, column: 1, scope: !18274)
!18308 = distinct !DISubprogram(name: "rpl_fseeko", scope: !18309, file: !18309, line: 28, type: !2269, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2266, retainedNodes: !143)
!18309 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18310 = !DILocalVariable(name: "fp", arg: 1, scope: !18308, file: !18309, line: 28, type: !2271)
!18311 = !DILocation(line: 28, column: 15, scope: !18308)
!18312 = !DILocalVariable(name: "offset", arg: 2, scope: !18308, file: !18309, line: 28, type: !248)
!18313 = !DILocation(line: 28, column: 25, scope: !18308)
!18314 = !DILocalVariable(name: "whence", arg: 3, scope: !18308, file: !18309, line: 28, type: !7)
!18315 = !DILocation(line: 28, column: 37, scope: !18308)
!18316 = !DILocation(line: 52, column: 7, scope: !18317)
!18317 = distinct !DILexicalBlock(scope: !18308, file: !18309, line: 52, column: 7)
!18318 = !DILocation(line: 52, column: 11, scope: !18317)
!18319 = !DILocation(line: 52, column: 27, scope: !18317)
!18320 = !DILocation(line: 52, column: 31, scope: !18317)
!18321 = !DILocation(line: 52, column: 24, scope: !18317)
!18322 = !DILocation(line: 53, column: 7, scope: !18317)
!18323 = !DILocation(line: 53, column: 10, scope: !18317)
!18324 = !DILocation(line: 53, column: 14, scope: !18317)
!18325 = !DILocation(line: 53, column: 31, scope: !18317)
!18326 = !DILocation(line: 53, column: 35, scope: !18317)
!18327 = !DILocation(line: 53, column: 28, scope: !18317)
!18328 = !DILocation(line: 54, column: 7, scope: !18317)
!18329 = !DILocation(line: 54, column: 10, scope: !18317)
!18330 = !DILocation(line: 54, column: 14, scope: !18317)
!18331 = !DILocation(line: 54, column: 28, scope: !18317)
!18332 = !DILocation(line: 52, column: 7, scope: !18308)
!18333 = !DILocalVariable(name: "pos", scope: !18334, file: !18309, line: 117, type: !248)
!18334 = distinct !DILexicalBlock(scope: !18317, file: !18309, line: 113, column: 5)
!18335 = !DILocation(line: 117, column: 13, scope: !18334)
!18336 = !DILocation(line: 117, column: 34, scope: !18334)
!18337 = !DILocation(line: 117, column: 26, scope: !18334)
!18338 = !DILocation(line: 117, column: 39, scope: !18334)
!18339 = !DILocation(line: 117, column: 47, scope: !18334)
!18340 = !DILocation(line: 117, column: 19, scope: !18334)
!18341 = !DILocation(line: 118, column: 11, scope: !18342)
!18342 = distinct !DILexicalBlock(scope: !18334, file: !18309, line: 118, column: 11)
!18343 = !DILocation(line: 118, column: 15, scope: !18342)
!18344 = !DILocation(line: 118, column: 11, scope: !18334)
!18345 = !DILocation(line: 124, column: 11, scope: !18346)
!18346 = distinct !DILexicalBlock(scope: !18342, file: !18309, line: 119, column: 9)
!18347 = !DILocation(line: 129, column: 7, scope: !18334)
!18348 = !DILocation(line: 129, column: 11, scope: !18334)
!18349 = !DILocation(line: 129, column: 18, scope: !18334)
!18350 = !DILocation(line: 130, column: 21, scope: !18334)
!18351 = !DILocation(line: 130, column: 7, scope: !18334)
!18352 = !DILocation(line: 130, column: 11, scope: !18334)
!18353 = !DILocation(line: 130, column: 19, scope: !18334)
!18354 = !{!18268, !3180, i64 144}
!18355 = !DILocation(line: 161, column: 7, scope: !18334)
!18356 = !DILocation(line: 163, column: 18, scope: !18308)
!18357 = !DILocation(line: 163, column: 22, scope: !18308)
!18358 = !DILocation(line: 163, column: 30, scope: !18308)
!18359 = !DILocation(line: 163, column: 10, scope: !18308)
!18360 = !DILocation(line: 163, column: 3, scope: !18308)
!18361 = !DILocation(line: 164, column: 1, scope: !18308)
!18362 = distinct !DISubprogram(name: "rpl_fts_open", scope: !2309, file: !2309, line: 358, type: !2412, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!18363 = !DILocalVariable(name: "argv", arg: 1, scope: !18362, file: !2309, line: 358, type: !1337)
!18364 = !DILocation(line: 358, column: 25, scope: !18362)
!18365 = !DILocalVariable(name: "options", arg: 2, scope: !18362, file: !2309, line: 359, type: !7)
!18366 = !DILocation(line: 359, column: 24, scope: !18362)
!18367 = !DILocalVariable(name: "compar", arg: 3, scope: !18362, file: !2309, line: 360, type: !2414)
!18368 = !DILocation(line: 360, column: 17, scope: !18362)
!18369 = !DILocalVariable(name: "sp", scope: !18362, file: !2309, line: 362, type: !2334)
!18370 = !DILocation(line: 362, column: 23, scope: !18362)
!18371 = !DILocalVariable(name: "p", scope: !18362, file: !2309, line: 363, type: !2417)
!18372 = !DILocation(line: 363, column: 26, scope: !18362)
!18373 = !DILocalVariable(name: "root", scope: !18362, file: !2309, line: 363, type: !2417)
!18374 = !DILocation(line: 363, column: 30, scope: !18362)
!18375 = !DILocalVariable(name: "nitems", scope: !18362, file: !2309, line: 364, type: !55)
!18376 = !DILocation(line: 364, column: 25, scope: !18362)
!18377 = !DILocalVariable(name: "parent", scope: !18362, file: !2309, line: 365, type: !2417)
!18378 = !DILocation(line: 365, column: 17, scope: !18362)
!18379 = !DILocalVariable(name: "tmp", scope: !18362, file: !2309, line: 366, type: !2417)
!18380 = !DILocation(line: 366, column: 17, scope: !18362)
!18381 = !DILocalVariable(name: "defer_stat", scope: !18362, file: !2309, line: 367, type: !120)
!18382 = !DILocation(line: 367, column: 14, scope: !18362)
!18383 = !DILocation(line: 370, column: 13, scope: !18384)
!18384 = distinct !DILexicalBlock(scope: !18362, file: !2309, line: 370, column: 13)
!18385 = !DILocation(line: 370, column: 21, scope: !18384)
!18386 = !DILocation(line: 370, column: 13, scope: !18362)
!18387 = !DILocation(line: 371, column: 17, scope: !18388)
!18388 = distinct !DILexicalBlock(scope: !18384, file: !2309, line: 370, column: 40)
!18389 = !DILocation(line: 372, column: 17, scope: !18388)
!18390 = !DILocation(line: 374, column: 14, scope: !18391)
!18391 = distinct !DILexicalBlock(scope: !18362, file: !2309, line: 374, column: 13)
!18392 = !DILocation(line: 374, column: 22, scope: !18391)
!18393 = !DILocation(line: 374, column: 37, scope: !18391)
!18394 = !DILocation(line: 374, column: 41, scope: !18391)
!18395 = !DILocation(line: 374, column: 49, scope: !18391)
!18396 = !DILocation(line: 374, column: 13, scope: !18362)
!18397 = !DILocation(line: 375, column: 17, scope: !18398)
!18398 = distinct !DILexicalBlock(scope: !18391, file: !2309, line: 374, column: 63)
!18399 = !DILocation(line: 376, column: 17, scope: !18398)
!18400 = !DILocation(line: 378, column: 17, scope: !18401)
!18401 = distinct !DILexicalBlock(scope: !18362, file: !2309, line: 378, column: 14)
!18402 = !DILocation(line: 378, column: 25, scope: !18401)
!18403 = !DILocation(line: 378, column: 14, scope: !18362)
!18404 = !DILocation(line: 379, column: 17, scope: !18405)
!18405 = distinct !DILexicalBlock(scope: !18401, file: !2309, line: 378, column: 58)
!18406 = !DILocation(line: 380, column: 17, scope: !18405)
!18407 = !DILocation(line: 384, column: 19, scope: !18408)
!18408 = distinct !DILexicalBlock(scope: !18362, file: !2309, line: 384, column: 13)
!18409 = !DILocation(line: 384, column: 17, scope: !18408)
!18410 = !DILocation(line: 384, column: 40, scope: !18408)
!18411 = !DILocation(line: 384, column: 13, scope: !18362)
!18412 = !DILocation(line: 385, column: 17, scope: !18408)
!18413 = !DILocation(line: 386, column: 16, scope: !18362)
!18414 = !DILocation(line: 386, column: 9, scope: !18362)
!18415 = !DILocation(line: 387, column: 26, scope: !18362)
!18416 = !DILocation(line: 387, column: 9, scope: !18362)
!18417 = !DILocation(line: 387, column: 13, scope: !18362)
!18418 = !DILocation(line: 387, column: 24, scope: !18362)
!18419 = !{!3824, !2996, i64 64}
!18420 = !DILocation(line: 388, column: 27, scope: !18362)
!18421 = !DILocation(line: 388, column: 9, scope: !18362)
!18422 = !DILocation(line: 388, column: 13, scope: !18362)
!18423 = !DILocation(line: 388, column: 25, scope: !18362)
!18424 = !DILocation(line: 391, column: 13, scope: !18425)
!18425 = distinct !DILexicalBlock(scope: !18362, file: !2309, line: 391, column: 13)
!18426 = !DILocation(line: 391, column: 13, scope: !18362)
!18427 = !DILocation(line: 392, column: 17, scope: !18428)
!18428 = distinct !DILexicalBlock(scope: !18425, file: !2309, line: 391, column: 33)
!18429 = !DILocation(line: 393, column: 17, scope: !18428)
!18430 = !DILocation(line: 394, column: 9, scope: !18428)
!18431 = !DILocation(line: 397, column: 9, scope: !18362)
!18432 = !DILocation(line: 397, column: 13, scope: !18362)
!18433 = !DILocation(line: 397, column: 24, scope: !18362)
!18434 = !DILocation(line: 398, column: 14, scope: !18435)
!18435 = distinct !DILexicalBlock(scope: !18362, file: !2309, line: 398, column: 14)
!18436 = !DILocation(line: 398, column: 31, scope: !18435)
!18437 = !DILocation(line: 398, column: 14, scope: !18362)
!18438 = !DILocalVariable(name: "fd", scope: !18439, file: !2309, line: 404, type: !7)
!18439 = distinct !DILexicalBlock(scope: !18435, file: !2309, line: 399, column: 11)
!18440 = !DILocation(line: 404, column: 17, scope: !18439)
!18441 = !DILocation(line: 404, column: 22, scope: !18439)
!18442 = !DILocation(line: 405, column: 17, scope: !18443)
!18443 = distinct !DILexicalBlock(scope: !18439, file: !2309, line: 405, column: 17)
!18444 = !DILocation(line: 405, column: 20, scope: !18443)
!18445 = !DILocation(line: 405, column: 17, scope: !18439)
!18446 = !DILocation(line: 423, column: 15, scope: !18447)
!18447 = distinct !DILexicalBlock(scope: !18443, file: !2309, line: 406, column: 15)
!18448 = !DILocation(line: 426, column: 24, scope: !18449)
!18449 = distinct !DILexicalBlock(scope: !18443, file: !2309, line: 425, column: 15)
!18450 = !DILocation(line: 426, column: 17, scope: !18449)
!18451 = !DILocation(line: 428, column: 11, scope: !18439)
!18452 = !DILocalVariable(name: "maxarglen", scope: !18453, file: !2309, line: 438, type: !55)
!18453 = distinct !DILexicalBlock(scope: !18362, file: !2309, line: 437, column: 9)
!18454 = !DILocation(line: 438, column: 18, scope: !18453)
!18455 = !DILocation(line: 438, column: 44, scope: !18453)
!18456 = !DILocation(line: 438, column: 30, scope: !18453)
!18457 = !DILocation(line: 439, column: 28, scope: !18458)
!18458 = distinct !DILexicalBlock(scope: !18453, file: !2309, line: 439, column: 15)
!18459 = !DILocation(line: 439, column: 32, scope: !18458)
!18460 = !DILocation(line: 439, column: 17, scope: !18458)
!18461 = !DILocation(line: 439, column: 15, scope: !18453)
!18462 = !DILocation(line: 440, column: 19, scope: !18458)
!18463 = !DILocation(line: 444, column: 14, scope: !18464)
!18464 = distinct !DILexicalBlock(scope: !18362, file: !2309, line: 444, column: 13)
!18465 = !DILocation(line: 444, column: 13, scope: !18464)
!18466 = !DILocation(line: 444, column: 19, scope: !18464)
!18467 = !DILocation(line: 444, column: 13, scope: !18362)
!18468 = !DILocation(line: 445, column: 41, scope: !18469)
!18469 = distinct !DILexicalBlock(scope: !18470, file: !2309, line: 445, column: 21)
!18470 = distinct !DILexicalBlock(scope: !18464, file: !2309, line: 444, column: 28)
!18471 = !DILocation(line: 445, column: 31, scope: !18469)
!18472 = !DILocation(line: 445, column: 29, scope: !18469)
!18473 = !DILocation(line: 445, column: 53, scope: !18469)
!18474 = !DILocation(line: 445, column: 21, scope: !18470)
!18475 = !DILocation(line: 446, column: 25, scope: !18469)
!18476 = !DILocation(line: 447, column: 17, scope: !18470)
!18477 = !DILocation(line: 447, column: 25, scope: !18470)
!18478 = !DILocation(line: 447, column: 35, scope: !18470)
!18479 = !DILocation(line: 448, column: 17, scope: !18470)
!18480 = !DILocation(line: 448, column: 25, scope: !18470)
!18481 = !DILocation(line: 448, column: 46, scope: !18470)
!18482 = !DILocation(line: 449, column: 11, scope: !18470)
!18483 = !DILocation(line: 462, column: 23, scope: !18362)
!18484 = !DILocation(line: 462, column: 30, scope: !18362)
!18485 = !DILocation(line: 462, column: 38, scope: !18362)
!18486 = !DILocation(line: 462, column: 41, scope: !18362)
!18487 = !DILocation(line: 462, column: 20, scope: !18362)
!18488 = !DILocation(line: 465, column: 19, scope: !18489)
!18489 = distinct !DILexicalBlock(scope: !18362, file: !2309, line: 465, column: 9)
!18490 = !DILocation(line: 465, column: 34, scope: !18489)
!18491 = !DILocation(line: 465, column: 14, scope: !18489)
!18492 = !DILocation(line: 465, column: 40, scope: !18493)
!18493 = distinct !DILexicalBlock(scope: !18489, file: !2309, line: 465, column: 9)
!18494 = !DILocation(line: 465, column: 39, scope: !18493)
!18495 = !DILocation(line: 465, column: 45, scope: !18493)
!18496 = !DILocation(line: 465, column: 9, scope: !18489)
!18497 = !DILocalVariable(name: "len", scope: !18498, file: !2309, line: 467, type: !55)
!18498 = distinct !DILexicalBlock(scope: !18493, file: !2309, line: 465, column: 72)
!18499 = !DILocation(line: 467, column: 24, scope: !18498)
!18500 = !DILocation(line: 467, column: 38, scope: !18498)
!18501 = !DILocation(line: 467, column: 37, scope: !18498)
!18502 = !DILocation(line: 467, column: 30, scope: !18498)
!18503 = !DILocation(line: 469, column: 25, scope: !18504)
!18504 = distinct !DILexicalBlock(scope: !18498, file: !2309, line: 469, column: 22)
!18505 = !DILocation(line: 469, column: 33, scope: !18504)
!18506 = !DILocation(line: 469, column: 22, scope: !18498)
!18507 = !DILocalVariable(name: "v", scope: !18508, file: !2309, line: 473, type: !115)
!18508 = distinct !DILexicalBlock(scope: !18504, file: !2309, line: 470, column: 19)
!18509 = !DILocation(line: 473, column: 33, scope: !18508)
!18510 = !DILocation(line: 473, column: 38, scope: !18508)
!18511 = !DILocation(line: 473, column: 37, scope: !18508)
!18512 = !DILocation(line: 474, column: 29, scope: !18513)
!18513 = distinct !DILexicalBlock(scope: !18508, file: !2309, line: 474, column: 25)
!18514 = !DILocation(line: 474, column: 27, scope: !18513)
!18515 = !DILocation(line: 474, column: 33, scope: !18513)
!18516 = !DILocation(line: 474, column: 36, scope: !18513)
!18517 = !DILocation(line: 474, column: 38, scope: !18513)
!18518 = !DILocation(line: 474, column: 42, scope: !18513)
!18519 = !DILocation(line: 474, column: 47, scope: !18513)
!18520 = !DILocation(line: 474, column: 25, scope: !18508)
!18521 = !DILocation(line: 475, column: 23, scope: !18513)
!18522 = !DILocation(line: 475, column: 34, scope: !18513)
!18523 = !DILocation(line: 475, column: 32, scope: !18513)
!18524 = !DILocation(line: 475, column: 38, scope: !18513)
!18525 = !DILocation(line: 475, column: 41, scope: !18513)
!18526 = !DILocation(line: 475, column: 43, scope: !18513)
!18527 = !DILocation(line: 475, column: 47, scope: !18513)
!18528 = !DILocation(line: 475, column: 52, scope: !18513)
!18529 = !DILocation(line: 0, scope: !18513)
!18530 = !DILocation(line: 476, column: 25, scope: !18513)
!18531 = distinct !{!18531, !18521, !18532}
!18532 = !DILocation(line: 476, column: 27, scope: !18513)
!18533 = !DILocation(line: 477, column: 19, scope: !18508)
!18534 = !DILocation(line: 479, column: 36, scope: !18535)
!18535 = distinct !DILexicalBlock(scope: !18498, file: !2309, line: 479, column: 21)
!18536 = !DILocation(line: 479, column: 41, scope: !18535)
!18537 = !DILocation(line: 479, column: 40, scope: !18535)
!18538 = !DILocation(line: 479, column: 47, scope: !18535)
!18539 = !DILocation(line: 479, column: 26, scope: !18535)
!18540 = !DILocation(line: 479, column: 24, scope: !18535)
!18541 = !DILocation(line: 479, column: 53, scope: !18535)
!18542 = !DILocation(line: 479, column: 21, scope: !18498)
!18543 = !DILocation(line: 480, column: 25, scope: !18535)
!18544 = !DILocation(line: 481, column: 17, scope: !18498)
!18545 = !DILocation(line: 481, column: 20, scope: !18498)
!18546 = !DILocation(line: 481, column: 30, scope: !18498)
!18547 = !DILocation(line: 482, column: 33, scope: !18498)
!18548 = !DILocation(line: 482, column: 17, scope: !18498)
!18549 = !DILocation(line: 482, column: 20, scope: !18498)
!18550 = !DILocation(line: 482, column: 31, scope: !18498)
!18551 = !DILocation(line: 483, column: 34, scope: !18498)
!18552 = !DILocation(line: 483, column: 37, scope: !18498)
!18553 = !DILocation(line: 483, column: 17, scope: !18498)
!18554 = !DILocation(line: 483, column: 20, scope: !18498)
!18555 = !DILocation(line: 483, column: 32, scope: !18498)
!18556 = !DILocation(line: 487, column: 21, scope: !18557)
!18557 = distinct !DILexicalBlock(scope: !18498, file: !2309, line: 487, column: 21)
!18558 = !DILocation(line: 487, column: 32, scope: !18557)
!18559 = !DILocation(line: 487, column: 35, scope: !18557)
!18560 = !DILocation(line: 487, column: 40, scope: !18557)
!18561 = !DILocation(line: 487, column: 21, scope: !18498)
!18562 = !DILocation(line: 488, column: 25, scope: !18563)
!18563 = distinct !DILexicalBlock(scope: !18557, file: !2309, line: 487, column: 49)
!18564 = !DILocation(line: 488, column: 28, scope: !18563)
!18565 = !DILocation(line: 488, column: 37, scope: !18563)
!18566 = !DILocation(line: 489, column: 47, scope: !18563)
!18567 = !DILocation(line: 489, column: 25, scope: !18563)
!18568 = !DILocation(line: 490, column: 17, scope: !18563)
!18569 = !DILocation(line: 491, column: 48, scope: !18570)
!18570 = distinct !DILexicalBlock(scope: !18557, file: !2309, line: 490, column: 24)
!18571 = !DILocation(line: 491, column: 52, scope: !18570)
!18572 = !DILocation(line: 491, column: 39, scope: !18570)
!18573 = !DILocation(line: 491, column: 25, scope: !18570)
!18574 = !DILocation(line: 491, column: 28, scope: !18570)
!18575 = !DILocation(line: 491, column: 37, scope: !18570)
!18576 = !DILocation(line: 498, column: 21, scope: !18577)
!18577 = distinct !DILexicalBlock(scope: !18498, file: !2309, line: 498, column: 21)
!18578 = !DILocation(line: 498, column: 21, scope: !18498)
!18579 = !DILocation(line: 499, column: 39, scope: !18580)
!18580 = distinct !DILexicalBlock(scope: !18577, file: !2309, line: 498, column: 29)
!18581 = !DILocation(line: 499, column: 25, scope: !18580)
!18582 = !DILocation(line: 499, column: 28, scope: !18580)
!18583 = !DILocation(line: 499, column: 37, scope: !18580)
!18584 = !DILocation(line: 500, column: 32, scope: !18580)
!18585 = !DILocation(line: 500, column: 30, scope: !18580)
!18586 = !DILocation(line: 501, column: 17, scope: !18580)
!18587 = !DILocation(line: 502, column: 25, scope: !18588)
!18588 = distinct !DILexicalBlock(scope: !18577, file: !2309, line: 501, column: 24)
!18589 = !DILocation(line: 502, column: 28, scope: !18588)
!18590 = !DILocation(line: 502, column: 37, scope: !18588)
!18591 = !DILocation(line: 503, column: 29, scope: !18592)
!18592 = distinct !DILexicalBlock(scope: !18588, file: !2309, line: 503, column: 29)
!18593 = !DILocation(line: 503, column: 34, scope: !18592)
!18594 = !DILocation(line: 503, column: 29, scope: !18588)
!18595 = !DILocation(line: 504, column: 46, scope: !18592)
!18596 = !DILocation(line: 504, column: 44, scope: !18592)
!18597 = !DILocation(line: 504, column: 37, scope: !18592)
!18598 = !DILocation(line: 504, column: 33, scope: !18592)
!18599 = !DILocation(line: 506, column: 49, scope: !18600)
!18600 = distinct !DILexicalBlock(scope: !18592, file: !2309, line: 505, column: 30)
!18601 = !DILocation(line: 506, column: 33, scope: !18600)
!18602 = !DILocation(line: 506, column: 38, scope: !18600)
!18603 = !DILocation(line: 506, column: 47, scope: !18600)
!18604 = !DILocation(line: 507, column: 39, scope: !18600)
!18605 = !DILocation(line: 507, column: 37, scope: !18600)
!18606 = !DILocation(line: 510, column: 9, scope: !18498)
!18607 = !DILocation(line: 465, column: 54, scope: !18493)
!18608 = !DILocation(line: 465, column: 62, scope: !18493)
!18609 = !DILocation(line: 465, column: 9, scope: !18493)
!18610 = distinct !{!18610, !18496, !18611}
!18611 = !DILocation(line: 510, column: 9, scope: !18489)
!18612 = !DILocation(line: 511, column: 13, scope: !18613)
!18613 = distinct !DILexicalBlock(scope: !18362, file: !2309, line: 511, column: 13)
!18614 = !DILocation(line: 511, column: 20, scope: !18613)
!18615 = !DILocation(line: 511, column: 23, scope: !18613)
!18616 = !DILocation(line: 511, column: 30, scope: !18613)
!18617 = !DILocation(line: 511, column: 13, scope: !18362)
!18618 = !DILocation(line: 512, column: 33, scope: !18613)
!18619 = !DILocation(line: 512, column: 37, scope: !18613)
!18620 = !DILocation(line: 512, column: 43, scope: !18613)
!18621 = !DILocation(line: 512, column: 24, scope: !18613)
!18622 = !DILocation(line: 512, column: 22, scope: !18613)
!18623 = !DILocation(line: 512, column: 17, scope: !18613)
!18624 = !DILocation(line: 519, column: 38, scope: !18625)
!18625 = distinct !DILexicalBlock(scope: !18362, file: !2309, line: 519, column: 13)
!18626 = !DILocation(line: 519, column: 28, scope: !18625)
!18627 = !DILocation(line: 519, column: 14, scope: !18625)
!18628 = !DILocation(line: 519, column: 18, scope: !18625)
!18629 = !DILocation(line: 519, column: 26, scope: !18625)
!18630 = !{!3824, !2996, i64 0}
!18631 = !DILocation(line: 519, column: 50, scope: !18625)
!18632 = !DILocation(line: 519, column: 13, scope: !18362)
!18633 = !DILocation(line: 520, column: 17, scope: !18625)
!18634 = !DILocation(line: 521, column: 33, scope: !18362)
!18635 = !DILocation(line: 521, column: 9, scope: !18362)
!18636 = !DILocation(line: 521, column: 13, scope: !18362)
!18637 = !DILocation(line: 521, column: 22, scope: !18362)
!18638 = !DILocation(line: 521, column: 31, scope: !18362)
!18639 = !DILocation(line: 522, column: 9, scope: !18362)
!18640 = !DILocation(line: 522, column: 13, scope: !18362)
!18641 = !DILocation(line: 522, column: 22, scope: !18362)
!18642 = !DILocation(line: 522, column: 31, scope: !18362)
!18643 = !DILocation(line: 523, column: 9, scope: !18362)
!18644 = !DILocation(line: 523, column: 13, scope: !18362)
!18645 = !DILocation(line: 523, column: 22, scope: !18362)
!18646 = !DILocation(line: 523, column: 32, scope: !18362)
!18647 = !DILocation(line: 524, column: 26, scope: !18648)
!18648 = distinct !DILexicalBlock(scope: !18362, file: !2309, line: 524, column: 13)
!18649 = !DILocation(line: 524, column: 15, scope: !18648)
!18650 = !DILocation(line: 524, column: 13, scope: !18362)
!18651 = !DILocation(line: 525, column: 17, scope: !18648)
!18652 = !DILocation(line: 534, column: 14, scope: !18653)
!18653 = distinct !DILexicalBlock(scope: !18362, file: !2309, line: 534, column: 13)
!18654 = !DILocation(line: 534, column: 33, scope: !18653)
!18655 = !DILocation(line: 534, column: 37, scope: !18653)
!18656 = !DILocation(line: 535, column: 13, scope: !18653)
!18657 = !DILocation(line: 535, column: 40, scope: !18653)
!18658 = !DILocation(line: 535, column: 31, scope: !18653)
!18659 = !DILocation(line: 535, column: 17, scope: !18653)
!18660 = !DILocation(line: 535, column: 21, scope: !18653)
!18661 = !DILocation(line: 535, column: 29, scope: !18653)
!18662 = !{!3824, !2983, i64 40}
!18663 = !DILocation(line: 535, column: 50, scope: !18653)
!18664 = !DILocation(line: 534, column: 13, scope: !18362)
!18665 = !DILocation(line: 536, column: 17, scope: !18653)
!18666 = !DILocation(line: 538, column: 23, scope: !18362)
!18667 = !DILocation(line: 538, column: 27, scope: !18362)
!18668 = !DILocation(line: 538, column: 9, scope: !18362)
!18669 = !DILocation(line: 539, column: 17, scope: !18362)
!18670 = !DILocation(line: 539, column: 9, scope: !18362)
!18671 = !DILabel(scope: !18362, name: "mem3", file: !2309, line: 541)
!18672 = !DILocation(line: 541, column: 1, scope: !18362)
!18673 = !DILocation(line: 541, column: 19, scope: !18362)
!18674 = !DILocation(line: 541, column: 9, scope: !18362)
!18675 = !DILocation(line: 542, column: 14, scope: !18362)
!18676 = !DILocation(line: 542, column: 9, scope: !18362)
!18677 = !DILabel(scope: !18362, name: "mem2", file: !2309, line: 543)
!18678 = !DILocation(line: 543, column: 1, scope: !18362)
!18679 = !DILocation(line: 543, column: 14, scope: !18362)
!18680 = !DILocation(line: 543, column: 18, scope: !18362)
!18681 = !{!3824, !2996, i64 32}
!18682 = !DILocation(line: 543, column: 9, scope: !18362)
!18683 = !DILabel(scope: !18362, name: "mem1", file: !2309, line: 544)
!18684 = !DILocation(line: 544, column: 1, scope: !18362)
!18685 = !DILocation(line: 544, column: 14, scope: !18362)
!18686 = !DILocation(line: 544, column: 9, scope: !18362)
!18687 = !DILocation(line: 545, column: 9, scope: !18362)
!18688 = !DILocation(line: 546, column: 1, scope: !18362)
!18689 = distinct !DISubprogram(name: "fts_maxarglen", scope: !2309, file: !2309, line: 2022, type: !2495, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!18690 = !DILocalVariable(name: "argv", arg: 1, scope: !18689, file: !2309, line: 2022, type: !1337)
!18691 = !DILocation(line: 2022, column: 30, scope: !18689)
!18692 = !DILocalVariable(name: "len", scope: !18689, file: !2309, line: 2024, type: !55)
!18693 = !DILocation(line: 2024, column: 16, scope: !18689)
!18694 = !DILocalVariable(name: "max", scope: !18689, file: !2309, line: 2024, type: !55)
!18695 = !DILocation(line: 2024, column: 21, scope: !18689)
!18696 = !DILocation(line: 2026, column: 18, scope: !18697)
!18697 = distinct !DILexicalBlock(scope: !18689, file: !2309, line: 2026, column: 9)
!18698 = !DILocation(line: 2026, column: 14, scope: !18697)
!18699 = !DILocation(line: 2026, column: 24, scope: !18700)
!18700 = distinct !DILexicalBlock(scope: !18697, file: !2309, line: 2026, column: 9)
!18701 = !DILocation(line: 2026, column: 23, scope: !18700)
!18702 = !DILocation(line: 2026, column: 9, scope: !18697)
!18703 = !DILocation(line: 2027, column: 36, scope: !18704)
!18704 = distinct !DILexicalBlock(scope: !18700, file: !2309, line: 2027, column: 21)
!18705 = !DILocation(line: 2027, column: 35, scope: !18704)
!18706 = !DILocation(line: 2027, column: 28, scope: !18704)
!18707 = !DILocation(line: 2027, column: 26, scope: !18704)
!18708 = !DILocation(line: 2027, column: 45, scope: !18704)
!18709 = !DILocation(line: 2027, column: 43, scope: !18704)
!18710 = !DILocation(line: 2027, column: 21, scope: !18700)
!18711 = !DILocation(line: 2028, column: 31, scope: !18704)
!18712 = !DILocation(line: 2028, column: 29, scope: !18704)
!18713 = !DILocation(line: 2028, column: 25, scope: !18704)
!18714 = !DILocation(line: 2026, column: 30, scope: !18700)
!18715 = !DILocation(line: 2026, column: 9, scope: !18700)
!18716 = distinct !{!18716, !18702, !18717}
!18717 = !DILocation(line: 2028, column: 31, scope: !18697)
!18718 = !DILocation(line: 2029, column: 17, scope: !18689)
!18719 = !DILocation(line: 2029, column: 21, scope: !18689)
!18720 = !DILocation(line: 2029, column: 9, scope: !18689)
!18721 = distinct !DISubprogram(name: "fts_palloc", scope: !2309, file: !2309, line: 1966, type: !2493, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!18722 = !DILocalVariable(name: "sp", arg: 1, scope: !18721, file: !2309, line: 1966, type: !2334)
!18723 = !DILocation(line: 1966, column: 18, scope: !18721)
!18724 = !DILocalVariable(name: "more", arg: 2, scope: !18721, file: !2309, line: 1966, type: !55)
!18725 = !DILocation(line: 1966, column: 29, scope: !18721)
!18726 = !DILocalVariable(name: "p", scope: !18721, file: !2309, line: 1968, type: !9)
!18727 = !DILocation(line: 1968, column: 15, scope: !18721)
!18728 = !DILocalVariable(name: "new_len", scope: !18721, file: !2309, line: 1969, type: !55)
!18729 = !DILocation(line: 1969, column: 16, scope: !18721)
!18730 = !DILocation(line: 1969, column: 26, scope: !18721)
!18731 = !DILocation(line: 1969, column: 30, scope: !18721)
!18732 = !{!3824, !3180, i64 48}
!18733 = !DILocation(line: 1969, column: 44, scope: !18721)
!18734 = !DILocation(line: 1969, column: 42, scope: !18721)
!18735 = !DILocation(line: 1969, column: 49, scope: !18721)
!18736 = !DILocation(line: 1974, column: 13, scope: !18737)
!18737 = distinct !DILexicalBlock(scope: !18721, file: !2309, line: 1974, column: 13)
!18738 = !DILocation(line: 1974, column: 23, scope: !18737)
!18739 = !DILocation(line: 1974, column: 27, scope: !18737)
!18740 = !DILocation(line: 1974, column: 21, scope: !18737)
!18741 = !DILocation(line: 1974, column: 13, scope: !18721)
!18742 = !DILocation(line: 1975, column: 22, scope: !18743)
!18743 = distinct !DILexicalBlock(scope: !18737, file: !2309, line: 1974, column: 40)
!18744 = !DILocation(line: 1975, column: 26, scope: !18743)
!18745 = !DILocation(line: 1975, column: 17, scope: !18743)
!18746 = !DILocation(line: 1976, column: 17, scope: !18743)
!18747 = !DILocation(line: 1976, column: 21, scope: !18743)
!18748 = !DILocation(line: 1976, column: 30, scope: !18743)
!18749 = !DILocation(line: 1977, column: 17, scope: !18743)
!18750 = !DILocation(line: 1978, column: 17, scope: !18743)
!18751 = !DILocation(line: 1980, column: 27, scope: !18721)
!18752 = !DILocation(line: 1980, column: 9, scope: !18721)
!18753 = !DILocation(line: 1980, column: 13, scope: !18721)
!18754 = !DILocation(line: 1980, column: 25, scope: !18721)
!18755 = !DILocation(line: 1981, column: 21, scope: !18721)
!18756 = !DILocation(line: 1981, column: 25, scope: !18721)
!18757 = !DILocation(line: 1981, column: 35, scope: !18721)
!18758 = !DILocation(line: 1981, column: 39, scope: !18721)
!18759 = !DILocation(line: 1981, column: 13, scope: !18721)
!18760 = !DILocation(line: 1981, column: 11, scope: !18721)
!18761 = !DILocation(line: 1982, column: 13, scope: !18762)
!18762 = distinct !DILexicalBlock(scope: !18721, file: !2309, line: 1982, column: 13)
!18763 = !DILocation(line: 1982, column: 15, scope: !18762)
!18764 = !DILocation(line: 1982, column: 13, scope: !18721)
!18765 = !DILocation(line: 1983, column: 22, scope: !18766)
!18766 = distinct !DILexicalBlock(scope: !18762, file: !2309, line: 1982, column: 24)
!18767 = !DILocation(line: 1983, column: 26, scope: !18766)
!18768 = !DILocation(line: 1983, column: 17, scope: !18766)
!18769 = !DILocation(line: 1984, column: 17, scope: !18766)
!18770 = !DILocation(line: 1984, column: 21, scope: !18766)
!18771 = !DILocation(line: 1984, column: 30, scope: !18766)
!18772 = !DILocation(line: 1985, column: 17, scope: !18766)
!18773 = !DILocation(line: 1987, column: 24, scope: !18721)
!18774 = !DILocation(line: 1987, column: 9, scope: !18721)
!18775 = !DILocation(line: 1987, column: 13, scope: !18721)
!18776 = !DILocation(line: 1987, column: 22, scope: !18721)
!18777 = !DILocation(line: 1988, column: 9, scope: !18721)
!18778 = !DILocation(line: 1989, column: 1, scope: !18721)
!18779 = distinct !DISubprogram(name: "fts_alloc", scope: !2309, file: !2309, line: 1913, type: !2489, scopeLine: 1914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!18780 = !DILocalVariable(name: "sp", arg: 1, scope: !18779, file: !2309, line: 1913, type: !2334)
!18781 = !DILocation(line: 1913, column: 17, scope: !18779)
!18782 = !DILocalVariable(name: "name", arg: 2, scope: !18779, file: !2309, line: 1913, type: !115)
!18783 = !DILocation(line: 1913, column: 33, scope: !18779)
!18784 = !DILocalVariable(name: "namelen", arg: 3, scope: !18779, file: !2309, line: 1913, type: !55)
!18785 = !DILocation(line: 1913, column: 55, scope: !18779)
!18786 = !DILocalVariable(name: "p", scope: !18779, file: !2309, line: 1915, type: !2417)
!18787 = !DILocation(line: 1915, column: 26, scope: !18779)
!18788 = !DILocalVariable(name: "len", scope: !18779, file: !2309, line: 1916, type: !55)
!18789 = !DILocation(line: 1916, column: 16, scope: !18779)
!18790 = !DILocation(line: 1922, column: 15, scope: !18779)
!18791 = !DILocation(line: 1922, column: 13, scope: !18779)
!18792 = !DILocation(line: 1923, column: 25, scope: !18793)
!18793 = distinct !DILexicalBlock(scope: !18779, file: !2309, line: 1923, column: 13)
!18794 = !DILocation(line: 1923, column: 18, scope: !18793)
!18795 = !DILocation(line: 1923, column: 16, scope: !18793)
!18796 = !DILocation(line: 1923, column: 31, scope: !18793)
!18797 = !DILocation(line: 1923, column: 13, scope: !18779)
!18798 = !DILocation(line: 1924, column: 17, scope: !18793)
!18799 = !DILocation(line: 1927, column: 16, scope: !18779)
!18800 = !DILocation(line: 1927, column: 19, scope: !18779)
!18801 = !DILocation(line: 1927, column: 9, scope: !18779)
!18802 = !DILocation(line: 1927, column: 29, scope: !18779)
!18803 = !DILocation(line: 1927, column: 35, scope: !18779)
!18804 = !DILocation(line: 1928, column: 9, scope: !18779)
!18805 = !DILocation(line: 1928, column: 12, scope: !18779)
!18806 = !DILocation(line: 1928, column: 21, scope: !18779)
!18807 = !DILocation(line: 1928, column: 30, scope: !18779)
!18808 = !DILocation(line: 1930, column: 26, scope: !18779)
!18809 = !DILocation(line: 1930, column: 9, scope: !18779)
!18810 = !DILocation(line: 1930, column: 12, scope: !18779)
!18811 = !DILocation(line: 1930, column: 24, scope: !18779)
!18812 = !DILocation(line: 1931, column: 22, scope: !18779)
!18813 = !DILocation(line: 1931, column: 9, scope: !18779)
!18814 = !DILocation(line: 1931, column: 12, scope: !18779)
!18815 = !DILocation(line: 1931, column: 20, scope: !18779)
!18816 = !DILocation(line: 1932, column: 23, scope: !18779)
!18817 = !DILocation(line: 1932, column: 27, scope: !18779)
!18818 = !DILocation(line: 1932, column: 9, scope: !18779)
!18819 = !DILocation(line: 1932, column: 12, scope: !18779)
!18820 = !DILocation(line: 1932, column: 21, scope: !18779)
!18821 = !DILocation(line: 1933, column: 9, scope: !18779)
!18822 = !DILocation(line: 1933, column: 12, scope: !18779)
!18823 = !DILocation(line: 1933, column: 22, scope: !18779)
!18824 = !DILocation(line: 1934, column: 9, scope: !18779)
!18825 = !DILocation(line: 1934, column: 12, scope: !18779)
!18826 = !DILocation(line: 1934, column: 21, scope: !18779)
!18827 = !DILocation(line: 1935, column: 9, scope: !18779)
!18828 = !DILocation(line: 1935, column: 12, scope: !18779)
!18829 = !DILocation(line: 1935, column: 22, scope: !18779)
!18830 = !DILocation(line: 1936, column: 9, scope: !18779)
!18831 = !DILocation(line: 1936, column: 12, scope: !18779)
!18832 = !DILocation(line: 1936, column: 22, scope: !18779)
!18833 = !DILocation(line: 1937, column: 9, scope: !18779)
!18834 = !DILocation(line: 1937, column: 12, scope: !18779)
!18835 = !DILocation(line: 1937, column: 23, scope: !18779)
!18836 = !DILocation(line: 1938, column: 9, scope: !18779)
!18837 = !DILocation(line: 1938, column: 12, scope: !18779)
!18838 = !DILocation(line: 1938, column: 24, scope: !18779)
!18839 = !DILocation(line: 1939, column: 17, scope: !18779)
!18840 = !DILocation(line: 1939, column: 9, scope: !18779)
!18841 = !DILocation(line: 1940, column: 1, scope: !18779)
!18842 = distinct !DISubprogram(name: "fts_set_stat_required", scope: !2309, file: !2309, line: 290, type: !2426, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!18843 = !DILocalVariable(name: "p", arg: 1, scope: !18842, file: !2309, line: 290, type: !2417)
!18844 = !DILocation(line: 290, column: 32, scope: !18842)
!18845 = !DILocalVariable(name: "required", arg: 2, scope: !18842, file: !2309, line: 290, type: !120)
!18846 = !DILocation(line: 290, column: 40, scope: !18842)
!18847 = !DILocation(line: 292, column: 3, scope: !18842)
!18848 = !DILocation(line: 292, column: 3, scope: !18849)
!18849 = distinct !DILexicalBlock(scope: !18850, file: !2309, line: 292, column: 3)
!18850 = distinct !DILexicalBlock(scope: !18842, file: !2309, line: 292, column: 3)
!18851 = !DILocation(line: 292, column: 3, scope: !18850)
!18852 = !DILocation(line: 293, column: 28, scope: !18842)
!18853 = !DILocation(line: 293, column: 27, scope: !18842)
!18854 = !DILocation(line: 293, column: 3, scope: !18842)
!18855 = !DILocation(line: 293, column: 6, scope: !18842)
!18856 = !DILocation(line: 293, column: 17, scope: !18842)
!18857 = !DILocation(line: 293, column: 25, scope: !18842)
!18858 = !DILocation(line: 296, column: 1, scope: !18842)
!18859 = distinct !DISubprogram(name: "fts_stat", scope: !2309, file: !2309, line: 1799, type: !2484, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!18860 = !DILocalVariable(name: "sp", arg: 1, scope: !18859, file: !2309, line: 1799, type: !2334)
!18861 = !DILocation(line: 1799, column: 15, scope: !18859)
!18862 = !DILocalVariable(name: "p", arg: 2, scope: !18859, file: !2309, line: 1799, type: !2417)
!18863 = !DILocation(line: 1799, column: 36, scope: !18859)
!18864 = !DILocalVariable(name: "follow", arg: 3, scope: !18859, file: !2309, line: 1799, type: !120)
!18865 = !DILocation(line: 1799, column: 44, scope: !18859)
!18866 = !DILocalVariable(name: "sbp", scope: !18859, file: !2309, line: 1801, type: !2481)
!18867 = !DILocation(line: 1801, column: 22, scope: !18859)
!18868 = !DILocation(line: 1801, column: 28, scope: !18859)
!18869 = !DILocation(line: 1801, column: 31, scope: !18859)
!18870 = !DILocation(line: 1803, column: 13, scope: !18871)
!18871 = distinct !DILexicalBlock(scope: !18859, file: !2309, line: 1803, column: 13)
!18872 = !DILocation(line: 1803, column: 16, scope: !18871)
!18873 = !DILocation(line: 1803, column: 26, scope: !18871)
!18874 = !DILocation(line: 1803, column: 43, scope: !18871)
!18875 = !DILocation(line: 1803, column: 46, scope: !18871)
!18876 = !DILocation(line: 1803, column: 13, scope: !18859)
!18877 = !DILocation(line: 1804, column: 24, scope: !18871)
!18878 = !DILocation(line: 1804, column: 17, scope: !18871)
!18879 = !DILocation(line: 1811, column: 13, scope: !18880)
!18880 = distinct !DILexicalBlock(scope: !18859, file: !2309, line: 1811, column: 13)
!18881 = !DILocation(line: 1811, column: 32, scope: !18880)
!18882 = !DILocation(line: 1811, column: 35, scope: !18880)
!18883 = !DILocation(line: 1811, column: 13, scope: !18859)
!18884 = !DILocation(line: 1812, column: 26, scope: !18885)
!18885 = distinct !DILexicalBlock(scope: !18886, file: !2309, line: 1812, column: 21)
!18886 = distinct !DILexicalBlock(scope: !18880, file: !2309, line: 1811, column: 43)
!18887 = !DILocation(line: 1812, column: 29, scope: !18885)
!18888 = !DILocation(line: 1812, column: 42, scope: !18885)
!18889 = !DILocation(line: 1812, column: 21, scope: !18885)
!18890 = !DILocation(line: 1812, column: 21, scope: !18886)
!18891 = !DILocation(line: 1813, column: 29, scope: !18892)
!18892 = distinct !DILexicalBlock(scope: !18893, file: !2309, line: 1813, column: 29)
!18893 = distinct !DILexicalBlock(scope: !18885, file: !2309, line: 1812, column: 48)
!18894 = !DILocation(line: 1813, column: 35, scope: !18892)
!18895 = !DILocation(line: 1814, column: 29, scope: !18892)
!18896 = !DILocation(line: 1814, column: 38, scope: !18892)
!18897 = !DILocation(line: 1814, column: 41, scope: !18892)
!18898 = !DILocation(line: 1814, column: 54, scope: !18892)
!18899 = !DILocation(line: 1814, column: 32, scope: !18892)
!18900 = !DILocation(line: 1814, column: 59, scope: !18892)
!18901 = !DILocation(line: 1813, column: 29, scope: !18893)
!18902 = !DILocation(line: 1815, column: 33, scope: !18903)
!18903 = distinct !DILexicalBlock(scope: !18892, file: !2309, line: 1814, column: 65)
!18904 = !DILocation(line: 1816, column: 33, scope: !18903)
!18905 = !DILocation(line: 1818, column: 40, scope: !18893)
!18906 = !DILocation(line: 1818, column: 25, scope: !18893)
!18907 = !DILocation(line: 1818, column: 28, scope: !18893)
!18908 = !DILocation(line: 1818, column: 38, scope: !18893)
!18909 = !DILocation(line: 1819, column: 25, scope: !18893)
!18910 = !DILocation(line: 1821, column: 9, scope: !18886)
!18911 = !DILocation(line: 1821, column: 28, scope: !18912)
!18912 = distinct !DILexicalBlock(scope: !18880, file: !2309, line: 1821, column: 20)
!18913 = !DILocation(line: 1821, column: 32, scope: !18912)
!18914 = !DILocation(line: 1821, column: 44, scope: !18912)
!18915 = !DILocation(line: 1821, column: 47, scope: !18912)
!18916 = !DILocation(line: 1821, column: 60, scope: !18912)
!18917 = !DILocation(line: 1821, column: 20, scope: !18912)
!18918 = !DILocation(line: 1821, column: 20, scope: !18880)
!18919 = !DILocation(line: 1823, column: 32, scope: !18920)
!18920 = distinct !DILexicalBlock(scope: !18912, file: !2309, line: 1822, column: 50)
!18921 = !DILocation(line: 1823, column: 17, scope: !18920)
!18922 = !DILocation(line: 1823, column: 20, scope: !18920)
!18923 = !DILocation(line: 1823, column: 30, scope: !18920)
!18924 = !DILabel(scope: !18920, name: "err", file: !2309, line: 1824)
!18925 = !DILocation(line: 1824, column: 1, scope: !18920)
!18926 = !DILocation(line: 1824, column: 24, scope: !18920)
!18927 = !DILocation(line: 1824, column: 17, scope: !18920)
!18928 = !DILocation(line: 1825, column: 17, scope: !18920)
!18929 = !DILocation(line: 1828, column: 13, scope: !18930)
!18930 = distinct !DILexicalBlock(scope: !18859, file: !2309, line: 1828, column: 13)
!18931 = !DILocation(line: 1828, column: 13, scope: !18859)
!18932 = !DILocation(line: 1830, column: 23, scope: !18933)
!18933 = distinct !DILexicalBlock(scope: !18930, file: !2309, line: 1828, column: 36)
!18934 = !DILocation(line: 1830, column: 28, scope: !18933)
!18935 = !DILocation(line: 1830, column: 37, scope: !18933)
!18936 = !DILocation(line: 1831, column: 23, scope: !18933)
!18937 = !DILocation(line: 1831, column: 26, scope: !18933)
!18938 = !DILocation(line: 1831, column: 29, scope: !18933)
!18939 = !DILocation(line: 1831, column: 39, scope: !18933)
!18940 = !DILocation(line: 1830, column: 22, scope: !18933)
!18941 = !DILocation(line: 1833, column: 24, scope: !18933)
!18942 = !DILocation(line: 1833, column: 29, scope: !18933)
!18943 = !DILocation(line: 1833, column: 41, scope: !18933)
!18944 = !DILocation(line: 1833, column: 40, scope: !18933)
!18945 = !DILocation(line: 1833, column: 38, scope: !18933)
!18946 = !DILocation(line: 1829, column: 17, scope: !18933)
!18947 = !DILocation(line: 1829, column: 20, scope: !18933)
!18948 = !DILocation(line: 1830, column: 19, scope: !18933)
!18949 = !DILocation(line: 1834, column: 21, scope: !18950)
!18950 = distinct !DILexicalBlock(scope: !18933, file: !2309, line: 1834, column: 21)
!18951 = !DILocation(line: 1834, column: 21, scope: !18933)
!18952 = !DILocation(line: 1836, column: 33, scope: !18953)
!18953 = distinct !DILexicalBlock(scope: !18950, file: !2309, line: 1834, column: 41)
!18954 = !DILocation(line: 1836, column: 36, scope: !18953)
!18955 = !DILocation(line: 1836, column: 46, scope: !18953)
!18956 = !DILocation(line: 1836, column: 32, scope: !18953)
!18957 = !DILocation(line: 1836, column: 25, scope: !18953)
!18958 = !DILocation(line: 1839, column: 17, scope: !18933)
!18959 = !DILocation(line: 1841, column: 13, scope: !18960)
!18960 = distinct !DILexicalBlock(scope: !18859, file: !2309, line: 1841, column: 13)
!18961 = !DILocation(line: 1841, column: 13, scope: !18859)
!18962 = !DILocation(line: 1842, column: 17, scope: !18960)
!18963 = !DILocation(line: 1843, column: 13, scope: !18964)
!18964 = distinct !DILexicalBlock(scope: !18859, file: !2309, line: 1843, column: 13)
!18965 = !DILocation(line: 1843, column: 13, scope: !18859)
!18966 = !DILocation(line: 1844, column: 17, scope: !18964)
!18967 = !DILocation(line: 1845, column: 9, scope: !18859)
!18968 = !DILocation(line: 1846, column: 1, scope: !18859)
!18969 = distinct !DISubprogram(name: "fts_sort", scope: !2309, file: !2309, line: 1863, type: !2486, scopeLine: 1864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!18970 = !DILocalVariable(name: "sp", arg: 1, scope: !18969, file: !2309, line: 1863, type: !2334)
!18971 = !DILocation(line: 1863, column: 16, scope: !18969)
!18972 = !DILocalVariable(name: "head", arg: 2, scope: !18969, file: !2309, line: 1863, type: !2417)
!18973 = !DILocation(line: 1863, column: 28, scope: !18969)
!18974 = !DILocalVariable(name: "nitems", arg: 3, scope: !18969, file: !2309, line: 1863, type: !55)
!18975 = !DILocation(line: 1863, column: 50, scope: !18969)
!18976 = !DILocalVariable(name: "ap", scope: !18969, file: !2309, line: 1865, type: !2488)
!18977 = !DILocation(line: 1865, column: 27, scope: !18969)
!18978 = !DILocalVariable(name: "p", scope: !18969, file: !2309, line: 1865, type: !2417)
!18979 = !DILocation(line: 1865, column: 32, scope: !18969)
!18980 = !DILocalVariable(name: "dummy", scope: !18969, file: !2309, line: 1874, type: !2417)
!18981 = !DILocation(line: 1874, column: 17, scope: !18969)
!18982 = !DILocalVariable(name: "compare", scope: !18969, file: !2309, line: 1875, type: !1087)
!18983 = !DILocation(line: 1875, column: 15, scope: !18969)
!18984 = !DILocation(line: 1877, column: 16, scope: !18969)
!18985 = !DILocation(line: 1877, column: 48, scope: !18969)
!18986 = !DILocation(line: 1877, column: 37, scope: !18969)
!18987 = !DILocation(line: 1877, column: 34, scope: !18969)
!18988 = !DILocation(line: 1876, column: 12, scope: !18969)
!18989 = !DILocation(line: 1878, column: 53, scope: !18969)
!18990 = !DILocation(line: 1878, column: 57, scope: !18969)
!18991 = !DILocation(line: 1878, column: 14, scope: !18969)
!18992 = !DILocation(line: 1888, column: 13, scope: !18993)
!18993 = distinct !DILexicalBlock(scope: !18969, file: !2309, line: 1888, column: 13)
!18994 = !DILocation(line: 1888, column: 22, scope: !18993)
!18995 = !DILocation(line: 1888, column: 26, scope: !18993)
!18996 = !{!3824, !3180, i64 56}
!18997 = !DILocation(line: 1888, column: 20, scope: !18993)
!18998 = !DILocation(line: 1888, column: 13, scope: !18969)
!18999 = !DILocalVariable(name: "a", scope: !19000, file: !2309, line: 1889, type: !2488)
!19000 = distinct !DILexicalBlock(scope: !18993, file: !2309, line: 1888, column: 38)
!19001 = !DILocation(line: 1889, column: 26, scope: !19000)
!19002 = !DILocation(line: 1891, column: 34, scope: !19000)
!19003 = !DILocation(line: 1891, column: 41, scope: !19000)
!19004 = !DILocation(line: 1891, column: 17, scope: !19000)
!19005 = !DILocation(line: 1891, column: 21, scope: !19000)
!19006 = !DILocation(line: 1891, column: 32, scope: !19000)
!19007 = !DILocation(line: 1892, column: 44, scope: !19008)
!19008 = distinct !DILexicalBlock(scope: !19000, file: !2309, line: 1892, column: 21)
!19009 = !DILocation(line: 1892, column: 48, scope: !19008)
!19010 = !DILocation(line: 1892, column: 42, scope: !19008)
!19011 = !DILocation(line: 1893, column: 21, scope: !19008)
!19012 = !DILocation(line: 1893, column: 40, scope: !19008)
!19013 = !DILocation(line: 1893, column: 44, scope: !19008)
!19014 = !{!3824, !2996, i64 16}
!19015 = !DILocation(line: 1894, column: 40, scope: !19008)
!19016 = !DILocation(line: 1894, column: 44, scope: !19008)
!19017 = !DILocation(line: 1894, column: 55, scope: !19008)
!19018 = !DILocation(line: 1893, column: 31, scope: !19008)
!19019 = !DILocation(line: 1893, column: 29, scope: !19008)
!19020 = !DILocation(line: 1892, column: 21, scope: !19000)
!19021 = !DILocation(line: 1895, column: 30, scope: !19022)
!19022 = distinct !DILexicalBlock(scope: !19008, file: !2309, line: 1894, column: 70)
!19023 = !DILocation(line: 1895, column: 34, scope: !19022)
!19024 = !DILocation(line: 1895, column: 25, scope: !19022)
!19025 = !DILocation(line: 1896, column: 25, scope: !19022)
!19026 = !DILocation(line: 1896, column: 29, scope: !19022)
!19027 = !DILocation(line: 1896, column: 39, scope: !19022)
!19028 = !DILocation(line: 1897, column: 25, scope: !19022)
!19029 = !DILocation(line: 1897, column: 29, scope: !19022)
!19030 = !DILocation(line: 1897, column: 40, scope: !19022)
!19031 = !DILocation(line: 1898, column: 33, scope: !19022)
!19032 = !DILocation(line: 1898, column: 25, scope: !19022)
!19033 = !DILocation(line: 1900, column: 33, scope: !19000)
!19034 = !DILocation(line: 1900, column: 17, scope: !19000)
!19035 = !DILocation(line: 1900, column: 21, scope: !19000)
!19036 = !DILocation(line: 1900, column: 31, scope: !19000)
!19037 = !DILocation(line: 1901, column: 9, scope: !19000)
!19038 = !DILocation(line: 1902, column: 19, scope: !19039)
!19039 = distinct !DILexicalBlock(scope: !18969, file: !2309, line: 1902, column: 9)
!19040 = !DILocation(line: 1902, column: 23, scope: !19039)
!19041 = !DILocation(line: 1902, column: 17, scope: !19039)
!19042 = !DILocation(line: 1902, column: 38, scope: !19039)
!19043 = !DILocation(line: 1902, column: 36, scope: !19039)
!19044 = !DILocation(line: 1902, column: 14, scope: !19039)
!19045 = !DILocation(line: 1902, column: 44, scope: !19046)
!19046 = distinct !DILexicalBlock(scope: !19039, file: !2309, line: 1902, column: 9)
!19047 = !DILocation(line: 1902, column: 9, scope: !19039)
!19048 = !DILocation(line: 1903, column: 25, scope: !19046)
!19049 = !DILocation(line: 1903, column: 20, scope: !19046)
!19050 = !DILocation(line: 1903, column: 23, scope: !19046)
!19051 = !DILocation(line: 1903, column: 17, scope: !19046)
!19052 = !DILocation(line: 1902, column: 51, scope: !19046)
!19053 = !DILocation(line: 1902, column: 54, scope: !19046)
!19054 = !DILocation(line: 1902, column: 49, scope: !19046)
!19055 = !DILocation(line: 1902, column: 9, scope: !19046)
!19056 = distinct !{!19056, !19047, !19057}
!19057 = !DILocation(line: 1903, column: 25, scope: !19039)
!19058 = !DILocation(line: 1904, column: 23, scope: !18969)
!19059 = !DILocation(line: 1904, column: 27, scope: !18969)
!19060 = !DILocation(line: 1904, column: 15, scope: !18969)
!19061 = !DILocation(line: 1904, column: 38, scope: !18969)
!19062 = !DILocation(line: 1904, column: 64, scope: !18969)
!19063 = !DILocation(line: 1904, column: 9, scope: !18969)
!19064 = !DILocation(line: 1905, column: 28, scope: !19065)
!19065 = distinct !DILexicalBlock(scope: !18969, file: !2309, line: 1905, column: 9)
!19066 = !DILocation(line: 1905, column: 32, scope: !19065)
!19067 = !DILocation(line: 1905, column: 26, scope: !19065)
!19068 = !DILocation(line: 1905, column: 21, scope: !19065)
!19069 = !DILocation(line: 1905, column: 19, scope: !19065)
!19070 = !DILocation(line: 1905, column: 14, scope: !19065)
!19071 = !DILocation(line: 1905, column: 44, scope: !19072)
!19072 = distinct !DILexicalBlock(scope: !19065, file: !2309, line: 1905, column: 9)
!19073 = !DILocation(line: 1905, column: 9, scope: !19065)
!19074 = !DILocation(line: 1906, column: 35, scope: !19072)
!19075 = !DILocation(line: 1906, column: 17, scope: !19072)
!19076 = !DILocation(line: 1906, column: 24, scope: !19072)
!19077 = !DILocation(line: 1906, column: 33, scope: !19072)
!19078 = !DILocation(line: 1905, column: 54, scope: !19072)
!19079 = !DILocation(line: 1905, column: 9, scope: !19072)
!19080 = distinct !{!19080, !19073, !19081}
!19081 = !DILocation(line: 1906, column: 39, scope: !19065)
!19082 = !DILocation(line: 1907, column: 9, scope: !18969)
!19083 = !DILocation(line: 1907, column: 16, scope: !18969)
!19084 = !DILocation(line: 1907, column: 25, scope: !18969)
!19085 = !DILocation(line: 1908, column: 17, scope: !18969)
!19086 = !DILocation(line: 1908, column: 9, scope: !18969)
!19087 = !DILocation(line: 1909, column: 1, scope: !18969)
!19088 = distinct !DISubprogram(name: "setup_dir", scope: !2433, file: !2433, line: 50, type: !2428, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!19089 = !DILocalVariable(name: "fts", arg: 1, scope: !19088, file: !2433, line: 50, type: !2334)
!19090 = !DILocation(line: 50, column: 17, scope: !19088)
!19091 = !DILocation(line: 52, column: 7, scope: !19092)
!19092 = distinct !DILexicalBlock(scope: !19088, file: !2433, line: 52, column: 7)
!19093 = !DILocation(line: 52, column: 12, scope: !19092)
!19094 = !DILocation(line: 52, column: 24, scope: !19092)
!19095 = !DILocation(line: 52, column: 7, scope: !19088)
!19096 = !DILocation(line: 55, column: 27, scope: !19097)
!19097 = distinct !DILexicalBlock(scope: !19092, file: !2433, line: 53, column: 5)
!19098 = !DILocation(line: 55, column: 7, scope: !19097)
!19099 = !DILocation(line: 55, column: 12, scope: !19097)
!19100 = !DILocation(line: 55, column: 22, scope: !19097)
!19101 = !DILocation(line: 55, column: 25, scope: !19097)
!19102 = !DILocation(line: 57, column: 13, scope: !19103)
!19103 = distinct !DILexicalBlock(scope: !19097, file: !2433, line: 57, column: 11)
!19104 = !DILocation(line: 57, column: 18, scope: !19103)
!19105 = !DILocation(line: 57, column: 28, scope: !19103)
!19106 = !DILocation(line: 57, column: 11, scope: !19097)
!19107 = !DILocation(line: 58, column: 9, scope: !19103)
!19108 = !DILocation(line: 59, column: 5, scope: !19097)
!19109 = !DILocation(line: 62, column: 30, scope: !19110)
!19110 = distinct !DILexicalBlock(scope: !19092, file: !2433, line: 61, column: 5)
!19111 = !DILocation(line: 62, column: 7, scope: !19110)
!19112 = !DILocation(line: 62, column: 12, scope: !19110)
!19113 = !DILocation(line: 62, column: 22, scope: !19110)
!19114 = !DILocation(line: 62, column: 28, scope: !19110)
!19115 = !DILocation(line: 63, column: 13, scope: !19116)
!19116 = distinct !DILexicalBlock(scope: !19110, file: !2433, line: 63, column: 11)
!19117 = !DILocation(line: 63, column: 18, scope: !19116)
!19118 = !DILocation(line: 63, column: 28, scope: !19116)
!19119 = !DILocation(line: 63, column: 11, scope: !19110)
!19120 = !DILocation(line: 64, column: 9, scope: !19116)
!19121 = !DILocation(line: 65, column: 25, scope: !19110)
!19122 = !DILocation(line: 65, column: 30, scope: !19110)
!19123 = !DILocation(line: 65, column: 40, scope: !19110)
!19124 = !DILocation(line: 65, column: 7, scope: !19110)
!19125 = !DILocation(line: 68, column: 3, scope: !19088)
!19126 = !DILocation(line: 69, column: 1, scope: !19088)
!19127 = distinct !DISubprogram(name: "diropen", scope: !2309, file: !2309, line: 346, type: !2438, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!19128 = !DILocalVariable(name: "sp", arg: 1, scope: !19127, file: !2309, line: 346, type: !2440)
!19129 = !DILocation(line: 346, column: 21, scope: !19127)
!19130 = !DILocalVariable(name: "dir", arg: 2, scope: !19127, file: !2309, line: 346, type: !115)
!19131 = !DILocation(line: 346, column: 37, scope: !19127)
!19132 = !DILocalVariable(name: "open_flags", scope: !19127, file: !2309, line: 348, type: !7)
!19133 = !DILocation(line: 348, column: 7, scope: !19127)
!19134 = !DILocation(line: 349, column: 24, scope: !19127)
!19135 = !DILocation(line: 349, column: 21, scope: !19127)
!19136 = !DILocalVariable(name: "fd", scope: !19127, file: !2309, line: 351, type: !7)
!19137 = !DILocation(line: 351, column: 7, scope: !19127)
!19138 = !DILocation(line: 351, column: 13, scope: !19127)
!19139 = !DILocation(line: 352, column: 23, scope: !19127)
!19140 = !DILocation(line: 352, column: 27, scope: !19127)
!19141 = !DILocation(line: 352, column: 39, scope: !19127)
!19142 = !DILocation(line: 352, column: 44, scope: !19127)
!19143 = !DILocation(line: 352, column: 15, scope: !19127)
!19144 = !DILocation(line: 353, column: 21, scope: !19127)
!19145 = !DILocation(line: 353, column: 26, scope: !19127)
!19146 = !DILocation(line: 353, column: 15, scope: !19127)
!19147 = !DILocation(line: 354, column: 10, scope: !19127)
!19148 = !DILocation(line: 354, column: 3, scope: !19127)
!19149 = distinct !DISubprogram(name: "fts_lfree", scope: !2309, file: !2309, line: 1944, type: !2491, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!19150 = !DILocalVariable(name: "head", arg: 1, scope: !19149, file: !2309, line: 1944, type: !2417)
!19151 = !DILocation(line: 1944, column: 29, scope: !19149)
!19152 = !DILocalVariable(name: "p", scope: !19149, file: !2309, line: 1946, type: !2417)
!19153 = !DILocation(line: 1946, column: 26, scope: !19149)
!19154 = !DILocation(line: 1949, column: 9, scope: !19149)
!19155 = !DILocation(line: 1949, column: 21, scope: !19149)
!19156 = !DILocation(line: 1949, column: 19, scope: !19149)
!19157 = !DILocation(line: 1950, column: 24, scope: !19158)
!19158 = distinct !DILexicalBlock(scope: !19149, file: !2309, line: 1949, column: 28)
!19159 = !DILocation(line: 1950, column: 30, scope: !19158)
!19160 = !DILocation(line: 1950, column: 22, scope: !19158)
!19161 = !DILocation(line: 1951, column: 21, scope: !19162)
!19162 = distinct !DILexicalBlock(scope: !19158, file: !2309, line: 1951, column: 21)
!19163 = !DILocation(line: 1951, column: 24, scope: !19162)
!19164 = !DILocation(line: 1951, column: 21, scope: !19158)
!19165 = !DILocation(line: 1952, column: 35, scope: !19162)
!19166 = !DILocation(line: 1952, column: 38, scope: !19162)
!19167 = !DILocation(line: 1952, column: 25, scope: !19162)
!19168 = !DILocation(line: 1953, column: 22, scope: !19158)
!19169 = !DILocation(line: 1953, column: 17, scope: !19158)
!19170 = distinct !{!19170, !19154, !19171}
!19171 = !DILocation(line: 1954, column: 9, scope: !19149)
!19172 = !DILocation(line: 1955, column: 1, scope: !19149)
!19173 = distinct !DISubprogram(name: "AD_hash", scope: !2433, file: !2433, line: 41, type: !547, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!19174 = !DILocalVariable(name: "x", arg: 1, scope: !19173, file: !2433, line: 41, type: !425)
!19175 = !DILocation(line: 41, column: 22, scope: !19173)
!19176 = !DILocalVariable(name: "table_size", arg: 2, scope: !19173, file: !2433, line: 41, type: !55)
!19177 = !DILocation(line: 41, column: 32, scope: !19173)
!19178 = !DILocalVariable(name: "ax", scope: !19173, file: !2433, line: 43, type: !2430)
!19179 = !DILocation(line: 43, column: 28, scope: !19173)
!19180 = !DILocation(line: 43, column: 33, scope: !19173)
!19181 = !DILocation(line: 44, column: 22, scope: !19173)
!19182 = !DILocation(line: 44, column: 26, scope: !19173)
!19183 = !{!19184, !3180, i64 8}
!19184 = !{!"Active_dir", !3180, i64 0, !3180, i64 8, !2996, i64 16}
!19185 = !DILocation(line: 44, column: 32, scope: !19173)
!19186 = !DILocation(line: 44, column: 30, scope: !19173)
!19187 = !DILocation(line: 44, column: 3, scope: !19173)
!19188 = distinct !DISubprogram(name: "AD_compare", scope: !2433, file: !2433, line: 32, type: !549, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!19189 = !DILocalVariable(name: "x", arg: 1, scope: !19188, file: !2433, line: 32, type: !425)
!19190 = !DILocation(line: 32, column: 25, scope: !19188)
!19191 = !DILocalVariable(name: "y", arg: 2, scope: !19188, file: !2433, line: 32, type: !425)
!19192 = !DILocation(line: 32, column: 40, scope: !19188)
!19193 = !DILocalVariable(name: "ax", scope: !19188, file: !2433, line: 34, type: !2430)
!19194 = !DILocation(line: 34, column: 28, scope: !19188)
!19195 = !DILocation(line: 34, column: 33, scope: !19188)
!19196 = !DILocalVariable(name: "ay", scope: !19188, file: !2433, line: 35, type: !2430)
!19197 = !DILocation(line: 35, column: 28, scope: !19188)
!19198 = !DILocation(line: 35, column: 33, scope: !19188)
!19199 = !DILocation(line: 36, column: 10, scope: !19188)
!19200 = !DILocation(line: 36, column: 14, scope: !19188)
!19201 = !DILocation(line: 36, column: 21, scope: !19188)
!19202 = !DILocation(line: 36, column: 25, scope: !19188)
!19203 = !DILocation(line: 36, column: 18, scope: !19188)
!19204 = !DILocation(line: 37, column: 7, scope: !19188)
!19205 = !DILocation(line: 37, column: 10, scope: !19188)
!19206 = !DILocation(line: 37, column: 14, scope: !19188)
!19207 = !{!19184, !3180, i64 0}
!19208 = !DILocation(line: 37, column: 21, scope: !19188)
!19209 = !DILocation(line: 37, column: 25, scope: !19188)
!19210 = !DILocation(line: 37, column: 18, scope: !19188)
!19211 = !DILocation(line: 0, scope: !19188)
!19212 = !DILocation(line: 36, column: 3, scope: !19188)
!19213 = distinct !DISubprogram(name: "fts_compar", scope: !2309, file: !2309, line: 1849, type: !1088, scopeLine: 1850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!19214 = !DILocalVariable(name: "a", arg: 1, scope: !19213, file: !2309, line: 1849, type: !425)
!19215 = !DILocation(line: 1849, column: 25, scope: !19213)
!19216 = !DILocalVariable(name: "b", arg: 2, scope: !19213, file: !2309, line: 1849, type: !425)
!19217 = !DILocation(line: 1849, column: 40, scope: !19213)
!19218 = !DILocalVariable(name: "pa", scope: !19213, file: !2309, line: 1856, type: !2315)
!19219 = !DILocation(line: 1856, column: 18, scope: !19213)
!19220 = !DILocation(line: 1856, column: 41, scope: !19213)
!19221 = !DILocation(line: 1856, column: 23, scope: !19213)
!19222 = !DILocalVariable(name: "pb", scope: !19213, file: !2309, line: 1857, type: !2315)
!19223 = !DILocation(line: 1857, column: 18, scope: !19213)
!19224 = !DILocation(line: 1857, column: 41, scope: !19213)
!19225 = !DILocation(line: 1857, column: 23, scope: !19213)
!19226 = !DILocation(line: 1858, column: 10, scope: !19213)
!19227 = !DILocation(line: 1858, column: 17, scope: !19213)
!19228 = !DILocation(line: 1858, column: 26, scope: !19213)
!19229 = !DILocation(line: 1858, column: 38, scope: !19213)
!19230 = !DILocation(line: 1858, column: 42, scope: !19213)
!19231 = !DILocation(line: 1858, column: 3, scope: !19213)
!19232 = distinct !DISubprogram(name: "rpl_fts_close", scope: !2309, file: !2309, line: 573, type: !2418, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!19233 = !DILocalVariable(name: "sp", arg: 1, scope: !19232, file: !2309, line: 573, type: !2334)
!19234 = !DILocation(line: 573, column: 17, scope: !19232)
!19235 = !DILocalVariable(name: "freep", scope: !19232, file: !2309, line: 575, type: !2417)
!19236 = !DILocation(line: 575, column: 26, scope: !19232)
!19237 = !DILocalVariable(name: "p", scope: !19232, file: !2309, line: 575, type: !2417)
!19238 = !DILocation(line: 575, column: 34, scope: !19232)
!19239 = !DILocalVariable(name: "saved_errno", scope: !19232, file: !2309, line: 576, type: !7)
!19240 = !DILocation(line: 576, column: 13, scope: !19232)
!19241 = !DILocation(line: 583, column: 13, scope: !19242)
!19242 = distinct !DILexicalBlock(scope: !19232, file: !2309, line: 583, column: 13)
!19243 = !DILocation(line: 583, column: 17, scope: !19242)
!19244 = !DILocation(line: 583, column: 13, scope: !19232)
!19245 = !DILocation(line: 584, column: 26, scope: !19246)
!19246 = distinct !DILexicalBlock(scope: !19247, file: !2309, line: 584, column: 17)
!19247 = distinct !DILexicalBlock(scope: !19242, file: !2309, line: 583, column: 26)
!19248 = !DILocation(line: 584, column: 30, scope: !19246)
!19249 = !DILocation(line: 584, column: 24, scope: !19246)
!19250 = !DILocation(line: 584, column: 22, scope: !19246)
!19251 = !DILocation(line: 584, column: 39, scope: !19252)
!19252 = distinct !DILexicalBlock(scope: !19246, file: !2309, line: 584, column: 17)
!19253 = !DILocation(line: 584, column: 42, scope: !19252)
!19254 = !DILocation(line: 584, column: 52, scope: !19252)
!19255 = !DILocation(line: 584, column: 17, scope: !19246)
!19256 = !DILocation(line: 585, column: 33, scope: !19257)
!19257 = distinct !DILexicalBlock(scope: !19252, file: !2309, line: 584, column: 71)
!19258 = !DILocation(line: 585, column: 31, scope: !19257)
!19259 = !DILocation(line: 586, column: 29, scope: !19257)
!19260 = !DILocation(line: 586, column: 32, scope: !19257)
!19261 = !DILocation(line: 586, column: 41, scope: !19257)
!19262 = !DILocation(line: 586, column: 51, scope: !19257)
!19263 = !DILocation(line: 586, column: 54, scope: !19257)
!19264 = !DILocation(line: 586, column: 65, scope: !19257)
!19265 = !DILocation(line: 586, column: 68, scope: !19257)
!19266 = !DILocation(line: 586, column: 27, scope: !19257)
!19267 = !DILocation(line: 587, column: 30, scope: !19257)
!19268 = !DILocation(line: 587, column: 25, scope: !19257)
!19269 = !DILocation(line: 584, column: 17, scope: !19252)
!19270 = distinct !{!19270, !19255, !19271}
!19271 = !DILocation(line: 588, column: 17, scope: !19246)
!19272 = !DILocation(line: 589, column: 22, scope: !19247)
!19273 = !DILocation(line: 589, column: 17, scope: !19247)
!19274 = !DILocation(line: 590, column: 9, scope: !19247)
!19275 = !DILocation(line: 593, column: 13, scope: !19276)
!19276 = distinct !DILexicalBlock(scope: !19232, file: !2309, line: 593, column: 13)
!19277 = !DILocation(line: 593, column: 17, scope: !19276)
!19278 = !{!3824, !2996, i64 8}
!19279 = !DILocation(line: 593, column: 13, scope: !19232)
!19280 = !DILocation(line: 594, column: 27, scope: !19276)
!19281 = !DILocation(line: 594, column: 31, scope: !19276)
!19282 = !DILocation(line: 594, column: 17, scope: !19276)
!19283 = !DILocation(line: 595, column: 14, scope: !19232)
!19284 = !DILocation(line: 595, column: 18, scope: !19232)
!19285 = !DILocation(line: 595, column: 9, scope: !19232)
!19286 = !DILocation(line: 596, column: 14, scope: !19232)
!19287 = !DILocation(line: 596, column: 18, scope: !19232)
!19288 = !DILocation(line: 596, column: 9, scope: !19232)
!19289 = !DILocation(line: 598, column: 13, scope: !19290)
!19290 = distinct !DILexicalBlock(scope: !19232, file: !2309, line: 598, column: 13)
!19291 = !DILocation(line: 598, column: 13, scope: !19232)
!19292 = !DILocation(line: 600, column: 22, scope: !19293)
!19293 = distinct !DILexicalBlock(scope: !19294, file: !2309, line: 600, column: 17)
!19294 = distinct !DILexicalBlock(scope: !19290, file: !2309, line: 599, column: 11)
!19295 = !DILocation(line: 600, column: 26, scope: !19293)
!19296 = !DILocation(line: 600, column: 19, scope: !19293)
!19297 = !DILocation(line: 600, column: 17, scope: !19294)
!19298 = !DILocation(line: 601, column: 26, scope: !19299)
!19299 = distinct !DILexicalBlock(scope: !19293, file: !2309, line: 601, column: 19)
!19300 = !DILocation(line: 601, column: 30, scope: !19299)
!19301 = !DILocation(line: 601, column: 19, scope: !19299)
!19302 = !DILocation(line: 601, column: 19, scope: !19293)
!19303 = !DILocation(line: 602, column: 31, scope: !19299)
!19304 = !DILocation(line: 602, column: 29, scope: !19299)
!19305 = !DILocation(line: 602, column: 17, scope: !19299)
!19306 = !DILocation(line: 601, column: 40, scope: !19299)
!19307 = !DILocation(line: 603, column: 11, scope: !19294)
!19308 = !DILocation(line: 604, column: 19, scope: !19309)
!19309 = distinct !DILexicalBlock(scope: !19290, file: !2309, line: 604, column: 18)
!19310 = !DILocation(line: 604, column: 18, scope: !19290)
!19311 = !DILocation(line: 607, column: 24, scope: !19312)
!19312 = distinct !DILexicalBlock(scope: !19313, file: !2309, line: 607, column: 17)
!19313 = distinct !DILexicalBlock(scope: !19309, file: !2309, line: 605, column: 11)
!19314 = !DILocation(line: 607, column: 28, scope: !19312)
!19315 = !DILocation(line: 607, column: 17, scope: !19312)
!19316 = !DILocation(line: 607, column: 17, scope: !19313)
!19317 = !DILocation(line: 608, column: 29, scope: !19312)
!19318 = !DILocation(line: 608, column: 27, scope: !19312)
!19319 = !DILocation(line: 608, column: 15, scope: !19312)
!19320 = !DILocation(line: 612, column: 24, scope: !19321)
!19321 = distinct !DILexicalBlock(scope: !19313, file: !2309, line: 612, column: 17)
!19322 = !DILocation(line: 612, column: 28, scope: !19321)
!19323 = !DILocation(line: 612, column: 17, scope: !19321)
!19324 = !DILocation(line: 612, column: 17, scope: !19313)
!19325 = !DILocation(line: 613, column: 19, scope: !19326)
!19326 = distinct !DILexicalBlock(scope: !19321, file: !2309, line: 613, column: 19)
!19327 = !DILocation(line: 613, column: 31, scope: !19326)
!19328 = !DILocation(line: 613, column: 19, scope: !19321)
!19329 = !DILocation(line: 614, column: 31, scope: !19326)
!19330 = !DILocation(line: 614, column: 29, scope: !19326)
!19331 = !DILocation(line: 614, column: 17, scope: !19326)
!19332 = !DILocation(line: 613, column: 34, scope: !19326)
!19333 = !DILocation(line: 615, column: 11, scope: !19313)
!19334 = !DILocation(line: 617, column: 25, scope: !19232)
!19335 = !DILocation(line: 617, column: 29, scope: !19232)
!19336 = !DILocation(line: 617, column: 9, scope: !19232)
!19337 = !DILocation(line: 619, column: 13, scope: !19338)
!19338 = distinct !DILexicalBlock(scope: !19232, file: !2309, line: 619, column: 13)
!19339 = !DILocation(line: 619, column: 17, scope: !19338)
!19340 = !{!3824, !2996, i64 80}
!19341 = !DILocation(line: 619, column: 13, scope: !19232)
!19342 = !DILocation(line: 620, column: 22, scope: !19338)
!19343 = !DILocation(line: 620, column: 26, scope: !19338)
!19344 = !DILocation(line: 620, column: 11, scope: !19338)
!19345 = !DILocation(line: 622, column: 19, scope: !19232)
!19346 = !DILocation(line: 622, column: 9, scope: !19232)
!19347 = !DILocation(line: 625, column: 14, scope: !19232)
!19348 = !DILocation(line: 625, column: 9, scope: !19232)
!19349 = !DILocation(line: 628, column: 13, scope: !19350)
!19350 = distinct !DILexicalBlock(scope: !19232, file: !2309, line: 628, column: 13)
!19351 = !DILocation(line: 628, column: 13, scope: !19232)
!19352 = !DILocation(line: 629, column: 17, scope: !19353)
!19353 = distinct !DILexicalBlock(scope: !19350, file: !2309, line: 628, column: 26)
!19354 = !DILocation(line: 630, column: 17, scope: !19353)
!19355 = !DILocation(line: 633, column: 9, scope: !19232)
!19356 = !DILocation(line: 634, column: 1, scope: !19232)
!19357 = distinct !DISubprogram(name: "fd_ring_clear", scope: !2309, file: !2309, line: 276, type: !2442, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!19358 = !DILocalVariable(name: "fd_ring", arg: 1, scope: !19357, file: !2309, line: 276, type: !2444)
!19359 = !DILocation(line: 276, column: 24, scope: !19357)
!19360 = !DILocation(line: 278, column: 3, scope: !19357)
!19361 = !DILocation(line: 278, column: 27, scope: !19357)
!19362 = !DILocation(line: 278, column: 13, scope: !19357)
!19363 = !DILocation(line: 278, column: 11, scope: !19357)
!19364 = !DILocalVariable(name: "fd", scope: !19365, file: !2309, line: 280, type: !7)
!19365 = distinct !DILexicalBlock(scope: !19357, file: !2309, line: 279, column: 5)
!19366 = !DILocation(line: 280, column: 11, scope: !19365)
!19367 = !DILocation(line: 280, column: 28, scope: !19365)
!19368 = !DILocation(line: 280, column: 16, scope: !19365)
!19369 = !DILocation(line: 281, column: 16, scope: !19370)
!19370 = distinct !DILexicalBlock(scope: !19365, file: !2309, line: 281, column: 11)
!19371 = !DILocation(line: 281, column: 13, scope: !19370)
!19372 = !DILocation(line: 281, column: 11, scope: !19365)
!19373 = !DILocation(line: 282, column: 16, scope: !19370)
!19374 = !DILocation(line: 282, column: 9, scope: !19370)
!19375 = distinct !{!19375, !19360, !19376}
!19376 = !DILocation(line: 283, column: 5, scope: !19357)
!19377 = !DILocation(line: 284, column: 1, scope: !19357)
!19378 = distinct !DISubprogram(name: "free_dir", scope: !2433, file: !2433, line: 151, type: !2445, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!19379 = !DILocalVariable(name: "sp", arg: 1, scope: !19378, file: !2433, line: 151, type: !2334)
!19380 = !DILocation(line: 151, column: 16, scope: !19378)
!19381 = !DILocation(line: 153, column: 7, scope: !19382)
!19382 = distinct !DILexicalBlock(scope: !19378, file: !2433, line: 153, column: 7)
!19383 = !DILocation(line: 153, column: 11, scope: !19382)
!19384 = !DILocation(line: 153, column: 23, scope: !19382)
!19385 = !DILocation(line: 153, column: 7, scope: !19378)
!19386 = !DILocation(line: 155, column: 11, scope: !19387)
!19387 = distinct !DILexicalBlock(scope: !19388, file: !2433, line: 155, column: 11)
!19388 = distinct !DILexicalBlock(scope: !19382, file: !2433, line: 154, column: 5)
!19389 = !DILocation(line: 155, column: 15, scope: !19387)
!19390 = !DILocation(line: 155, column: 25, scope: !19387)
!19391 = !DILocation(line: 155, column: 11, scope: !19388)
!19392 = !DILocation(line: 156, column: 20, scope: !19387)
!19393 = !DILocation(line: 156, column: 24, scope: !19387)
!19394 = !DILocation(line: 156, column: 34, scope: !19387)
!19395 = !DILocation(line: 156, column: 9, scope: !19387)
!19396 = !DILocation(line: 157, column: 5, scope: !19388)
!19397 = !DILocation(line: 159, column: 11, scope: !19382)
!19398 = !DILocation(line: 159, column: 15, scope: !19382)
!19399 = !DILocation(line: 159, column: 25, scope: !19382)
!19400 = !DILocation(line: 159, column: 5, scope: !19382)
!19401 = !DILocation(line: 160, column: 1, scope: !19378)
!19402 = distinct !DISubprogram(name: "rpl_fts_read", scope: !2309, file: !2309, line: 852, type: !2420, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!19403 = !DILocalVariable(name: "sp", arg: 1, scope: !19402, file: !2309, line: 852, type: !2334)
!19404 = !DILocation(line: 852, column: 25, scope: !19402)
!19405 = !DILocalVariable(name: "p", scope: !19402, file: !2309, line: 854, type: !2417)
!19406 = !DILocation(line: 854, column: 26, scope: !19402)
!19407 = !DILocalVariable(name: "tmp", scope: !19402, file: !2309, line: 854, type: !2417)
!19408 = !DILocation(line: 854, column: 30, scope: !19402)
!19409 = !DILocalVariable(name: "instr", scope: !19402, file: !2309, line: 855, type: !33)
!19410 = !DILocation(line: 855, column: 37, scope: !19402)
!19411 = !DILocalVariable(name: "t", scope: !19402, file: !2309, line: 856, type: !9)
!19412 = !DILocation(line: 856, column: 24, scope: !19402)
!19413 = !DILocation(line: 859, column: 13, scope: !19414)
!19414 = distinct !DILexicalBlock(scope: !19402, file: !2309, line: 859, column: 13)
!19415 = !DILocation(line: 859, column: 17, scope: !19414)
!19416 = !DILocation(line: 859, column: 25, scope: !19414)
!19417 = !DILocation(line: 859, column: 33, scope: !19414)
!19418 = !DILocation(line: 859, column: 36, scope: !19414)
!19419 = !DILocation(line: 859, column: 13, scope: !19402)
!19420 = !DILocation(line: 860, column: 17, scope: !19414)
!19421 = !DILocation(line: 863, column: 13, scope: !19402)
!19422 = !DILocation(line: 863, column: 17, scope: !19402)
!19423 = !DILocation(line: 863, column: 11, scope: !19402)
!19424 = !DILocation(line: 866, column: 17, scope: !19402)
!19425 = !DILocation(line: 866, column: 20, scope: !19402)
!19426 = !DILocation(line: 866, column: 15, scope: !19402)
!19427 = !DILocation(line: 867, column: 9, scope: !19402)
!19428 = !DILocation(line: 867, column: 12, scope: !19402)
!19429 = !DILocation(line: 867, column: 22, scope: !19402)
!19430 = !DILocation(line: 870, column: 13, scope: !19431)
!19431 = distinct !DILexicalBlock(scope: !19402, file: !2309, line: 870, column: 13)
!19432 = !DILocation(line: 870, column: 19, scope: !19431)
!19433 = !DILocation(line: 870, column: 13, scope: !19402)
!19434 = !DILocation(line: 871, column: 40, scope: !19435)
!19435 = distinct !DILexicalBlock(scope: !19431, file: !2309, line: 870, column: 33)
!19436 = !DILocation(line: 871, column: 44, scope: !19435)
!19437 = !DILocation(line: 871, column: 31, scope: !19435)
!19438 = !DILocation(line: 871, column: 17, scope: !19435)
!19439 = !DILocation(line: 871, column: 20, scope: !19435)
!19440 = !DILocation(line: 871, column: 29, scope: !19435)
!19441 = !DILocation(line: 872, column: 25, scope: !19435)
!19442 = !DILocation(line: 872, column: 17, scope: !19435)
!19443 = !DILocation(line: 883, column: 13, scope: !19444)
!19444 = distinct !DILexicalBlock(scope: !19402, file: !2309, line: 883, column: 13)
!19445 = !DILocation(line: 883, column: 19, scope: !19444)
!19446 = !DILocation(line: 883, column: 33, scope: !19444)
!19447 = !DILocation(line: 884, column: 14, scope: !19444)
!19448 = !DILocation(line: 884, column: 17, scope: !19444)
!19449 = !DILocation(line: 884, column: 26, scope: !19444)
!19450 = !DILocation(line: 884, column: 36, scope: !19444)
!19451 = !DILocation(line: 884, column: 39, scope: !19444)
!19452 = !DILocation(line: 884, column: 42, scope: !19444)
!19453 = !DILocation(line: 884, column: 51, scope: !19444)
!19454 = !DILocation(line: 883, column: 13, scope: !19402)
!19455 = !DILocation(line: 885, column: 40, scope: !19456)
!19456 = distinct !DILexicalBlock(scope: !19444, file: !2309, line: 884, column: 67)
!19457 = !DILocation(line: 885, column: 44, scope: !19456)
!19458 = !DILocation(line: 885, column: 31, scope: !19456)
!19459 = !DILocation(line: 885, column: 17, scope: !19456)
!19460 = !DILocation(line: 885, column: 20, scope: !19456)
!19461 = !DILocation(line: 885, column: 29, scope: !19456)
!19462 = !DILocation(line: 886, column: 21, scope: !19463)
!19463 = distinct !DILexicalBlock(scope: !19456, file: !2309, line: 886, column: 21)
!19464 = !DILocation(line: 886, column: 24, scope: !19463)
!19465 = !DILocation(line: 886, column: 33, scope: !19463)
!19466 = !DILocation(line: 886, column: 42, scope: !19463)
!19467 = !DILocation(line: 886, column: 46, scope: !19463)
!19468 = !DILocation(line: 886, column: 21, scope: !19456)
!19469 = !DILocation(line: 887, column: 54, scope: !19470)
!19470 = distinct !DILexicalBlock(scope: !19471, file: !2309, line: 887, column: 29)
!19471 = distinct !DILexicalBlock(scope: !19463, file: !2309, line: 886, column: 66)
!19472 = !DILocation(line: 887, column: 45, scope: !19470)
!19473 = !DILocation(line: 887, column: 30, scope: !19470)
!19474 = !DILocation(line: 887, column: 33, scope: !19470)
!19475 = !DILocation(line: 887, column: 43, scope: !19470)
!19476 = !DILocation(line: 887, column: 64, scope: !19470)
!19477 = !DILocation(line: 887, column: 29, scope: !19471)
!19478 = !DILocation(line: 888, column: 48, scope: !19479)
!19479 = distinct !DILexicalBlock(scope: !19470, file: !2309, line: 887, column: 69)
!19480 = !DILocation(line: 888, column: 33, scope: !19479)
!19481 = !DILocation(line: 888, column: 36, scope: !19479)
!19482 = !DILocation(line: 888, column: 46, scope: !19479)
!19483 = !DILocation(line: 889, column: 33, scope: !19479)
!19484 = !DILocation(line: 889, column: 36, scope: !19479)
!19485 = !DILocation(line: 889, column: 45, scope: !19479)
!19486 = !DILocation(line: 890, column: 25, scope: !19479)
!19487 = !DILocation(line: 891, column: 33, scope: !19470)
!19488 = !DILocation(line: 891, column: 36, scope: !19470)
!19489 = !DILocation(line: 891, column: 46, scope: !19470)
!19490 = !DILocation(line: 892, column: 17, scope: !19471)
!19491 = !DILocation(line: 893, column: 17, scope: !19456)
!19492 = !DILocation(line: 897, column: 13, scope: !19493)
!19493 = distinct !DILexicalBlock(scope: !19402, file: !2309, line: 897, column: 13)
!19494 = !DILocation(line: 897, column: 16, scope: !19493)
!19495 = !DILocation(line: 897, column: 25, scope: !19493)
!19496 = !DILocation(line: 897, column: 13, scope: !19402)
!19497 = !DILocation(line: 899, column: 21, scope: !19498)
!19498 = distinct !DILexicalBlock(scope: !19499, file: !2309, line: 899, column: 21)
!19499 = distinct !DILexicalBlock(scope: !19493, file: !2309, line: 897, column: 35)
!19500 = !DILocation(line: 899, column: 27, scope: !19498)
!19501 = !DILocation(line: 899, column: 39, scope: !19498)
!19502 = !DILocation(line: 900, column: 22, scope: !19498)
!19503 = !DILocation(line: 900, column: 38, scope: !19498)
!19504 = !DILocation(line: 900, column: 41, scope: !19498)
!19505 = !DILocation(line: 900, column: 44, scope: !19498)
!19506 = !DILocation(line: 900, column: 55, scope: !19498)
!19507 = !DILocation(line: 900, column: 65, scope: !19498)
!19508 = !DILocation(line: 900, column: 69, scope: !19498)
!19509 = !DILocation(line: 900, column: 62, scope: !19498)
!19510 = !DILocation(line: 899, column: 21, scope: !19499)
!19511 = !DILocation(line: 901, column: 29, scope: !19512)
!19512 = distinct !DILexicalBlock(scope: !19513, file: !2309, line: 901, column: 29)
!19513 = distinct !DILexicalBlock(scope: !19498, file: !2309, line: 900, column: 79)
!19514 = !DILocation(line: 901, column: 32, scope: !19512)
!19515 = !DILocation(line: 901, column: 42, scope: !19512)
!19516 = !DILocation(line: 901, column: 29, scope: !19513)
!19517 = !DILocation(line: 902, column: 45, scope: !19512)
!19518 = !DILocation(line: 902, column: 48, scope: !19512)
!19519 = !DILocation(line: 902, column: 39, scope: !19512)
!19520 = !DILocation(line: 902, column: 33, scope: !19512)
!19521 = !DILocation(line: 903, column: 29, scope: !19522)
!19522 = distinct !DILexicalBlock(scope: !19513, file: !2309, line: 903, column: 29)
!19523 = !DILocation(line: 903, column: 33, scope: !19522)
!19524 = !DILocation(line: 903, column: 29, scope: !19513)
!19525 = !DILocation(line: 904, column: 43, scope: !19526)
!19526 = distinct !DILexicalBlock(scope: !19522, file: !2309, line: 903, column: 44)
!19527 = !DILocation(line: 904, column: 47, scope: !19526)
!19528 = !DILocation(line: 904, column: 33, scope: !19526)
!19529 = !DILocation(line: 905, column: 33, scope: !19526)
!19530 = !DILocation(line: 905, column: 37, scope: !19526)
!19531 = !DILocation(line: 905, column: 47, scope: !19526)
!19532 = !DILocation(line: 906, column: 25, scope: !19526)
!19533 = !DILocation(line: 907, column: 25, scope: !19513)
!19534 = !DILocation(line: 907, column: 28, scope: !19513)
!19535 = !DILocation(line: 907, column: 37, scope: !19513)
!19536 = !DILocation(line: 908, column: 25, scope: !19513)
!19537 = !DILocation(line: 908, column: 25, scope: !19538)
!19538 = distinct !DILexicalBlock(scope: !19513, file: !2309, line: 908, column: 25)
!19539 = !DILocation(line: 909, column: 33, scope: !19513)
!19540 = !DILocation(line: 909, column: 25, scope: !19513)
!19541 = !DILocation(line: 913, column: 21, scope: !19542)
!19542 = distinct !DILexicalBlock(scope: !19499, file: !2309, line: 913, column: 21)
!19543 = !DILocation(line: 913, column: 25, scope: !19542)
!19544 = !DILocation(line: 913, column: 35, scope: !19542)
!19545 = !DILocation(line: 913, column: 43, scope: !19542)
!19546 = !DILocation(line: 913, column: 46, scope: !19542)
!19547 = !DILocation(line: 913, column: 21, scope: !19499)
!19548 = !DILocation(line: 914, column: 25, scope: !19549)
!19549 = distinct !DILexicalBlock(scope: !19542, file: !2309, line: 913, column: 67)
!19550 = !DILocation(line: 915, column: 35, scope: !19549)
!19551 = !DILocation(line: 915, column: 39, scope: !19549)
!19552 = !DILocation(line: 915, column: 25, scope: !19549)
!19553 = !DILocation(line: 916, column: 25, scope: !19549)
!19554 = !DILocation(line: 916, column: 29, scope: !19549)
!19555 = !DILocation(line: 916, column: 39, scope: !19549)
!19556 = !DILocation(line: 917, column: 17, scope: !19549)
!19557 = !DILocation(line: 931, column: 21, scope: !19558)
!19558 = distinct !DILexicalBlock(scope: !19499, file: !2309, line: 931, column: 21)
!19559 = !DILocation(line: 931, column: 25, scope: !19558)
!19560 = !DILocation(line: 931, column: 35, scope: !19558)
!19561 = !DILocation(line: 931, column: 21, scope: !19499)
!19562 = !DILocation(line: 932, column: 48, scope: !19563)
!19563 = distinct !DILexicalBlock(scope: !19564, file: !2309, line: 932, column: 29)
!19564 = distinct !DILexicalBlock(scope: !19558, file: !2309, line: 931, column: 44)
!19565 = !DILocation(line: 932, column: 52, scope: !19563)
!19566 = !DILocation(line: 932, column: 59, scope: !19563)
!19567 = !DILocation(line: 932, column: 62, scope: !19563)
!19568 = !DILocation(line: 932, column: 29, scope: !19563)
!19569 = !DILocation(line: 932, column: 29, scope: !19564)
!19570 = !DILocation(line: 933, column: 48, scope: !19571)
!19571 = distinct !DILexicalBlock(scope: !19563, file: !2309, line: 932, column: 76)
!19572 = !DILocation(line: 933, column: 33, scope: !19571)
!19573 = !DILocation(line: 933, column: 36, scope: !19571)
!19574 = !DILocation(line: 933, column: 46, scope: !19571)
!19575 = !DILocation(line: 934, column: 33, scope: !19571)
!19576 = !DILocation(line: 934, column: 36, scope: !19571)
!19577 = !DILocation(line: 934, column: 46, scope: !19571)
!19578 = !DILocation(line: 935, column: 42, scope: !19579)
!19579 = distinct !DILexicalBlock(scope: !19571, file: !2309, line: 935, column: 33)
!19580 = !DILocation(line: 935, column: 46, scope: !19579)
!19581 = !DILocation(line: 935, column: 40, scope: !19579)
!19582 = !DILocation(line: 935, column: 38, scope: !19579)
!19583 = !DILocation(line: 935, column: 57, scope: !19584)
!19584 = distinct !DILexicalBlock(scope: !19579, file: !2309, line: 935, column: 33)
!19585 = !DILocation(line: 935, column: 59, scope: !19584)
!19586 = !DILocation(line: 935, column: 33, scope: !19579)
!19587 = !DILocation(line: 938, column: 45, scope: !19584)
!19588 = !DILocation(line: 938, column: 48, scope: !19584)
!19589 = !DILocation(line: 938, column: 60, scope: !19584)
!19590 = !DILocation(line: 937, column: 41, scope: !19584)
!19591 = !DILocation(line: 937, column: 44, scope: !19584)
!19592 = !DILocation(line: 937, column: 56, scope: !19584)
!19593 = !DILocation(line: 936, column: 42, scope: !19584)
!19594 = !DILocation(line: 936, column: 45, scope: !19584)
!19595 = !DILocation(line: 936, column: 40, scope: !19584)
!19596 = !DILocation(line: 935, column: 33, scope: !19584)
!19597 = distinct !{!19597, !19586, !19598}
!19598 = !DILocation(line: 938, column: 60, scope: !19579)
!19599 = !DILocation(line: 939, column: 25, scope: !19571)
!19600 = !DILocation(line: 940, column: 17, scope: !19564)
!19601 = !DILocation(line: 940, column: 55, scope: !19602)
!19602 = distinct !DILexicalBlock(scope: !19558, file: !2309, line: 940, column: 28)
!19603 = !DILocation(line: 940, column: 45, scope: !19602)
!19604 = !DILocation(line: 940, column: 29, scope: !19602)
!19605 = !DILocation(line: 940, column: 33, scope: !19602)
!19606 = !DILocation(line: 940, column: 43, scope: !19602)
!19607 = !DILocation(line: 940, column: 67, scope: !19602)
!19608 = !DILocation(line: 940, column: 28, scope: !19558)
!19609 = !DILocation(line: 941, column: 29, scope: !19610)
!19610 = distinct !DILexicalBlock(scope: !19611, file: !2309, line: 941, column: 29)
!19611 = distinct !DILexicalBlock(scope: !19602, file: !2309, line: 940, column: 76)
!19612 = !DILocation(line: 941, column: 29, scope: !19611)
!19613 = !DILocation(line: 942, column: 33, scope: !19610)
!19614 = !DILocation(line: 946, column: 29, scope: !19615)
!19615 = distinct !DILexicalBlock(scope: !19611, file: !2309, line: 946, column: 29)
!19616 = !DILocation(line: 946, column: 32, scope: !19615)
!19617 = !DILocation(line: 946, column: 42, scope: !19615)
!19618 = !DILocation(line: 946, column: 45, scope: !19615)
!19619 = !DILocation(line: 946, column: 48, scope: !19615)
!19620 = !DILocation(line: 946, column: 57, scope: !19615)
!19621 = !DILocation(line: 946, column: 29, scope: !19611)
!19622 = !DILocation(line: 947, column: 33, scope: !19615)
!19623 = !DILocation(line: 947, column: 36, scope: !19615)
!19624 = !DILocation(line: 947, column: 45, scope: !19615)
!19625 = !DILocation(line: 948, column: 25, scope: !19611)
!19626 = !DILocation(line: 948, column: 25, scope: !19627)
!19627 = distinct !DILexicalBlock(scope: !19611, file: !2309, line: 948, column: 25)
!19628 = !DILocation(line: 949, column: 33, scope: !19611)
!19629 = !DILocation(line: 949, column: 25, scope: !19611)
!19630 = !DILocation(line: 951, column: 21, scope: !19499)
!19631 = !DILocation(line: 951, column: 25, scope: !19499)
!19632 = !DILocation(line: 951, column: 19, scope: !19499)
!19633 = !DILocation(line: 952, column: 17, scope: !19499)
!19634 = !DILocation(line: 952, column: 21, scope: !19499)
!19635 = !DILocation(line: 952, column: 31, scope: !19499)
!19636 = !DILocation(line: 953, column: 17, scope: !19499)
!19637 = !DILocation(line: 897, column: 28, scope: !19493)
!19638 = !DILabel(scope: !19402, name: "next", file: !2309, line: 957)
!19639 = !DILocation(line: 957, column: 1, scope: !19402)
!19640 = !DILocation(line: 957, column: 15, scope: !19402)
!19641 = !DILocation(line: 957, column: 13, scope: !19402)
!19642 = !DILocation(line: 962, column: 13, scope: !19643)
!19643 = distinct !DILexicalBlock(scope: !19402, file: !2309, line: 962, column: 13)
!19644 = !DILocation(line: 962, column: 16, scope: !19643)
!19645 = !DILocation(line: 962, column: 25, scope: !19643)
!19646 = !DILocation(line: 962, column: 33, scope: !19643)
!19647 = !DILocation(line: 962, column: 36, scope: !19643)
!19648 = !DILocation(line: 962, column: 39, scope: !19643)
!19649 = !DILocation(line: 962, column: 51, scope: !19643)
!19650 = !DILocation(line: 962, column: 13, scope: !19402)
!19651 = !DILocation(line: 964, column: 17, scope: !19652)
!19652 = distinct !DILexicalBlock(scope: !19643, file: !2309, line: 963, column: 11)
!19653 = !DILocation(line: 964, column: 22, scope: !19652)
!19654 = !DILocation(line: 964, column: 15, scope: !19652)
!19655 = !DILocation(line: 965, column: 27, scope: !19652)
!19656 = !DILocation(line: 965, column: 13, scope: !19652)
!19657 = !DILocation(line: 965, column: 17, scope: !19652)
!19658 = !DILocation(line: 965, column: 25, scope: !19652)
!19659 = !DILocation(line: 966, column: 13, scope: !19652)
!19660 = !DILocation(line: 966, column: 17, scope: !19652)
!19661 = !DILocation(line: 966, column: 26, scope: !19652)
!19662 = !DILocation(line: 966, column: 29, scope: !19652)
!19663 = !DILocation(line: 966, column: 42, scope: !19652)
!19664 = !DILocation(line: 968, column: 33, scope: !19665)
!19665 = distinct !DILexicalBlock(scope: !19652, file: !2309, line: 968, column: 17)
!19666 = !DILocation(line: 968, column: 22, scope: !19665)
!19667 = !DILocation(line: 968, column: 20, scope: !19665)
!19668 = !DILocation(line: 968, column: 45, scope: !19665)
!19669 = !DILocation(line: 968, column: 17, scope: !19652)
!19670 = !DILocation(line: 970, column: 21, scope: !19671)
!19671 = distinct !DILexicalBlock(scope: !19672, file: !2309, line: 970, column: 21)
!19672 = distinct !DILexicalBlock(scope: !19665, file: !2309, line: 969, column: 15)
!19673 = !DILocation(line: 970, column: 21, scope: !19672)
!19674 = !DILocation(line: 971, column: 19, scope: !19671)
!19675 = !DILocation(line: 972, column: 17, scope: !19672)
!19676 = !DILocation(line: 975, column: 18, scope: !19652)
!19677 = !DILocation(line: 975, column: 13, scope: !19652)
!19678 = !DILocation(line: 976, column: 13, scope: !19652)
!19679 = !DILocation(line: 979, column: 18, scope: !19680)
!19680 = distinct !DILexicalBlock(scope: !19402, file: !2309, line: 979, column: 13)
!19681 = !DILocation(line: 979, column: 21, scope: !19680)
!19682 = !DILocation(line: 979, column: 16, scope: !19680)
!19683 = !DILocation(line: 979, column: 31, scope: !19680)
!19684 = !DILocation(line: 979, column: 13, scope: !19402)
!19685 = !DILocation(line: 980, column: 31, scope: !19686)
!19686 = distinct !DILexicalBlock(scope: !19680, file: !2309, line: 979, column: 40)
!19687 = !DILocation(line: 980, column: 17, scope: !19686)
!19688 = !DILocation(line: 980, column: 21, scope: !19686)
!19689 = !DILocation(line: 980, column: 29, scope: !19686)
!19690 = !DILocation(line: 981, column: 22, scope: !19686)
!19691 = !DILocation(line: 981, column: 17, scope: !19686)
!19692 = !DILocation(line: 988, column: 21, scope: !19693)
!19693 = distinct !DILexicalBlock(scope: !19686, file: !2309, line: 988, column: 21)
!19694 = !DILocation(line: 988, column: 24, scope: !19693)
!19695 = !DILocation(line: 988, column: 34, scope: !19693)
!19696 = !DILocation(line: 988, column: 21, scope: !19686)
!19697 = !DILocation(line: 989, column: 49, scope: !19698)
!19698 = distinct !DILexicalBlock(scope: !19699, file: !2309, line: 989, column: 29)
!19699 = distinct !DILexicalBlock(scope: !19693, file: !2309, line: 988, column: 52)
!19700 = !DILocation(line: 989, column: 29, scope: !19698)
!19701 = !DILocation(line: 989, column: 29, scope: !19699)
!19702 = !DILocation(line: 990, column: 33, scope: !19703)
!19703 = distinct !DILexicalBlock(scope: !19698, file: !2309, line: 989, column: 54)
!19704 = !DILocation(line: 991, column: 33, scope: !19703)
!19705 = !DILocation(line: 993, column: 34, scope: !19699)
!19706 = !DILocation(line: 993, column: 25, scope: !19699)
!19707 = !DILocation(line: 994, column: 34, scope: !19699)
!19708 = !DILocation(line: 994, column: 38, scope: !19699)
!19709 = !DILocation(line: 994, column: 25, scope: !19699)
!19710 = !DILocation(line: 995, column: 35, scope: !19699)
!19711 = !DILocation(line: 995, column: 25, scope: !19699)
!19712 = !DILocation(line: 996, column: 25, scope: !19699)
!19713 = !DILocation(line: 1004, column: 21, scope: !19714)
!19714 = distinct !DILexicalBlock(scope: !19686, file: !2309, line: 1004, column: 21)
!19715 = !DILocation(line: 1004, column: 24, scope: !19714)
!19716 = !DILocation(line: 1004, column: 34, scope: !19714)
!19717 = !DILocation(line: 1004, column: 21, scope: !19686)
!19718 = !DILocation(line: 1005, column: 25, scope: !19714)
!19719 = !DILocation(line: 1006, column: 21, scope: !19720)
!19720 = distinct !DILexicalBlock(scope: !19686, file: !2309, line: 1006, column: 21)
!19721 = !DILocation(line: 1006, column: 24, scope: !19720)
!19722 = !DILocation(line: 1006, column: 34, scope: !19720)
!19723 = !DILocation(line: 1006, column: 21, scope: !19686)
!19724 = !DILocation(line: 1007, column: 48, scope: !19725)
!19725 = distinct !DILexicalBlock(scope: !19720, file: !2309, line: 1006, column: 49)
!19726 = !DILocation(line: 1007, column: 52, scope: !19725)
!19727 = !DILocation(line: 1007, column: 39, scope: !19725)
!19728 = !DILocation(line: 1007, column: 25, scope: !19725)
!19729 = !DILocation(line: 1007, column: 28, scope: !19725)
!19730 = !DILocation(line: 1007, column: 37, scope: !19725)
!19731 = !DILocation(line: 1008, column: 29, scope: !19732)
!19732 = distinct !DILexicalBlock(scope: !19725, file: !2309, line: 1008, column: 29)
!19733 = !DILocation(line: 1008, column: 32, scope: !19732)
!19734 = !DILocation(line: 1008, column: 41, scope: !19732)
!19735 = !DILocation(line: 1008, column: 50, scope: !19732)
!19736 = !DILocation(line: 1008, column: 54, scope: !19732)
!19737 = !DILocation(line: 1008, column: 29, scope: !19725)
!19738 = !DILocation(line: 1009, column: 62, scope: !19739)
!19739 = distinct !DILexicalBlock(scope: !19740, file: !2309, line: 1009, column: 37)
!19740 = distinct !DILexicalBlock(scope: !19732, file: !2309, line: 1008, column: 74)
!19741 = !DILocation(line: 1009, column: 53, scope: !19739)
!19742 = !DILocation(line: 1009, column: 38, scope: !19739)
!19743 = !DILocation(line: 1009, column: 41, scope: !19739)
!19744 = !DILocation(line: 1009, column: 51, scope: !19739)
!19745 = !DILocation(line: 1009, column: 72, scope: !19739)
!19746 = !DILocation(line: 1009, column: 37, scope: !19740)
!19747 = !DILocation(line: 1010, column: 56, scope: !19748)
!19748 = distinct !DILexicalBlock(scope: !19739, file: !2309, line: 1009, column: 77)
!19749 = !DILocation(line: 1010, column: 41, scope: !19748)
!19750 = !DILocation(line: 1010, column: 44, scope: !19748)
!19751 = !DILocation(line: 1010, column: 54, scope: !19748)
!19752 = !DILocation(line: 1011, column: 41, scope: !19748)
!19753 = !DILocation(line: 1011, column: 44, scope: !19748)
!19754 = !DILocation(line: 1011, column: 53, scope: !19748)
!19755 = !DILocation(line: 1012, column: 33, scope: !19748)
!19756 = !DILocation(line: 1013, column: 41, scope: !19739)
!19757 = !DILocation(line: 1013, column: 44, scope: !19739)
!19758 = !DILocation(line: 1013, column: 54, scope: !19739)
!19759 = !DILocation(line: 1014, column: 25, scope: !19740)
!19760 = !DILocation(line: 1015, column: 25, scope: !19725)
!19761 = !DILocation(line: 1015, column: 28, scope: !19725)
!19762 = !DILocation(line: 1015, column: 38, scope: !19725)
!19763 = !DILocation(line: 1016, column: 17, scope: !19725)
!19764 = !DILocation(line: 1006, column: 37, scope: !19720)
!19765 = !DILabel(scope: !19686, name: "name", file: !2309, line: 1018)
!19766 = !DILocation(line: 1018, column: 1, scope: !19686)
!19767 = !DILocation(line: 1018, column: 21, scope: !19686)
!19768 = !DILocation(line: 1018, column: 25, scope: !19686)
!19769 = !DILocation(line: 1018, column: 36, scope: !19686)
!19770 = !DILocation(line: 1018, column: 34, scope: !19686)
!19771 = !DILocation(line: 1018, column: 19, scope: !19686)
!19772 = !DILocation(line: 1019, column: 19, scope: !19686)
!19773 = !DILocation(line: 1019, column: 22, scope: !19686)
!19774 = !DILocation(line: 1020, column: 25, scope: !19686)
!19775 = !DILocation(line: 1020, column: 28, scope: !19686)
!19776 = !DILocation(line: 1020, column: 31, scope: !19686)
!19777 = !DILocation(line: 1020, column: 17, scope: !19686)
!19778 = !DILocation(line: 1020, column: 41, scope: !19686)
!19779 = !DILocation(line: 1020, column: 44, scope: !19686)
!19780 = !DILocation(line: 1020, column: 56, scope: !19686)
!19781 = !DILabel(scope: !19686, name: "check_for_dir", file: !2309, line: 1021)
!19782 = !DILocation(line: 1021, column: 1, scope: !19686)
!19783 = !DILocation(line: 1022, column: 31, scope: !19686)
!19784 = !DILocation(line: 1022, column: 17, scope: !19686)
!19785 = !DILocation(line: 1022, column: 21, scope: !19686)
!19786 = !DILocation(line: 1022, column: 29, scope: !19686)
!19787 = !DILocation(line: 1023, column: 21, scope: !19788)
!19788 = distinct !DILexicalBlock(scope: !19686, file: !2309, line: 1023, column: 21)
!19789 = !DILocation(line: 1023, column: 24, scope: !19788)
!19790 = !DILocation(line: 1023, column: 33, scope: !19788)
!19791 = !DILocation(line: 1023, column: 21, scope: !19686)
!19792 = !DILocation(line: 1025, column: 25, scope: !19793)
!19793 = distinct !DILexicalBlock(scope: !19794, file: !2309, line: 1025, column: 25)
!19794 = distinct !DILexicalBlock(scope: !19788, file: !2309, line: 1024, column: 19)
!19795 = !DILocation(line: 1025, column: 28, scope: !19793)
!19796 = !DILocation(line: 1025, column: 39, scope: !19793)
!19797 = !DILocation(line: 1025, column: 47, scope: !19793)
!19798 = !DILocation(line: 1025, column: 25, scope: !19794)
!19799 = !DILocalVariable(name: "parent", scope: !19800, file: !2309, line: 1027, type: !2417)
!19800 = distinct !DILexicalBlock(scope: !19793, file: !2309, line: 1026, column: 23)
!19801 = !DILocation(line: 1027, column: 33, scope: !19800)
!19802 = !DILocation(line: 1027, column: 42, scope: !19800)
!19803 = !DILocation(line: 1027, column: 45, scope: !19800)
!19804 = !DILocation(line: 1028, column: 29, scope: !19805)
!19805 = distinct !DILexicalBlock(scope: !19800, file: !2309, line: 1028, column: 29)
!19806 = !DILocation(line: 1028, column: 37, scope: !19805)
!19807 = !DILocation(line: 1028, column: 58, scope: !19805)
!19808 = !DILocation(line: 1029, column: 29, scope: !19805)
!19809 = !DILocation(line: 1029, column: 32, scope: !19805)
!19810 = !DILocation(line: 1030, column: 29, scope: !19805)
!19811 = !DILocation(line: 1030, column: 32, scope: !19805)
!19812 = !DILocation(line: 1031, column: 29, scope: !19805)
!19813 = !DILocation(line: 1031, column: 52, scope: !19805)
!19814 = !DILocation(line: 1031, column: 60, scope: !19805)
!19815 = !DILocation(line: 1031, column: 64, scope: !19805)
!19816 = !DILocation(line: 1031, column: 33, scope: !19805)
!19817 = !DILocation(line: 1032, column: 33, scope: !19805)
!19818 = !DILocation(line: 1028, column: 29, scope: !19800)
!19819 = !DILocation(line: 1035, column: 27, scope: !19820)
!19820 = distinct !DILexicalBlock(scope: !19805, file: !2309, line: 1033, column: 27)
!19821 = !DILocation(line: 1038, column: 52, scope: !19822)
!19822 = distinct !DILexicalBlock(scope: !19805, file: !2309, line: 1037, column: 27)
!19823 = !DILocation(line: 1038, column: 56, scope: !19822)
!19824 = !DILocation(line: 1038, column: 43, scope: !19822)
!19825 = !DILocation(line: 1038, column: 29, scope: !19822)
!19826 = !DILocation(line: 1038, column: 32, scope: !19822)
!19827 = !DILocation(line: 1038, column: 41, scope: !19822)
!19828 = !DILocation(line: 1039, column: 33, scope: !19829)
!19829 = distinct !DILexicalBlock(scope: !19822, file: !2309, line: 1039, column: 33)
!19830 = !DILocation(line: 1040, column: 33, scope: !19829)
!19831 = !DILocation(line: 1040, column: 36, scope: !19829)
!19832 = !DILocation(line: 1040, column: 39, scope: !19829)
!19833 = !DILocation(line: 1040, column: 49, scope: !19829)
!19834 = !DILocation(line: 1041, column: 33, scope: !19829)
!19835 = !DILocation(line: 1041, column: 40, scope: !19829)
!19836 = !DILocation(line: 1041, column: 48, scope: !19829)
!19837 = !DILocation(line: 1041, column: 38, scope: !19829)
!19838 = !DILocation(line: 1042, column: 33, scope: !19829)
!19839 = !DILocation(line: 1042, column: 36, scope: !19829)
!19840 = !DILocation(line: 1042, column: 44, scope: !19829)
!19841 = !DILocation(line: 1042, column: 65, scope: !19829)
!19842 = !DILocation(line: 1039, column: 33, scope: !19822)
!19843 = !DILocation(line: 1043, column: 35, scope: !19829)
!19844 = !DILocation(line: 1043, column: 43, scope: !19829)
!19845 = !DILocation(line: 1043, column: 63, scope: !19829)
!19846 = !DILocation(line: 1045, column: 23, scope: !19800)
!19847 = !DILocation(line: 1047, column: 23, scope: !19793)
!19848 = !DILocation(line: 1047, column: 23, scope: !19849)
!19849 = distinct !DILexicalBlock(scope: !19850, file: !2309, line: 1047, column: 23)
!19850 = distinct !DILexicalBlock(scope: !19793, file: !2309, line: 1047, column: 23)
!19851 = !DILocation(line: 1047, column: 23, scope: !19850)
!19852 = !DILocation(line: 1048, column: 19, scope: !19794)
!19853 = !DILocation(line: 1050, column: 21, scope: !19854)
!19854 = distinct !DILexicalBlock(scope: !19686, file: !2309, line: 1050, column: 21)
!19855 = !DILocation(line: 1050, column: 24, scope: !19854)
!19856 = !DILocation(line: 1050, column: 33, scope: !19854)
!19857 = !DILocation(line: 1050, column: 21, scope: !19686)
!19858 = !DILocation(line: 1055, column: 25, scope: !19859)
!19859 = distinct !DILexicalBlock(scope: !19860, file: !2309, line: 1055, column: 25)
!19860 = distinct !DILexicalBlock(scope: !19854, file: !2309, line: 1051, column: 19)
!19861 = !DILocation(line: 1055, column: 28, scope: !19859)
!19862 = !DILocation(line: 1055, column: 38, scope: !19859)
!19863 = !DILocation(line: 1055, column: 25, scope: !19860)
!19864 = !DILocation(line: 1056, column: 37, scope: !19859)
!19865 = !DILocation(line: 1056, column: 40, scope: !19859)
!19866 = !DILocation(line: 1056, column: 51, scope: !19859)
!19867 = !DILocation(line: 1056, column: 23, scope: !19859)
!19868 = !DILocation(line: 1056, column: 27, scope: !19859)
!19869 = !DILocation(line: 1056, column: 35, scope: !19859)
!19870 = !DILocation(line: 1058, column: 38, scope: !19871)
!19871 = distinct !DILexicalBlock(scope: !19860, file: !2309, line: 1058, column: 25)
!19872 = !DILocation(line: 1058, column: 42, scope: !19871)
!19873 = !DILocation(line: 1058, column: 27, scope: !19871)
!19874 = !DILocation(line: 1058, column: 25, scope: !19860)
!19875 = !DILocation(line: 1060, column: 25, scope: !19876)
!19876 = distinct !DILexicalBlock(scope: !19871, file: !2309, line: 1059, column: 23)
!19877 = !DILocation(line: 1061, column: 25, scope: !19876)
!19878 = !DILocation(line: 1063, column: 19, scope: !19860)
!19879 = !DILocation(line: 1064, column: 24, scope: !19686)
!19880 = !DILocation(line: 1064, column: 17, scope: !19686)
!19881 = !DILocation(line: 979, column: 34, scope: !19680)
!19882 = !DILabel(scope: !19402, name: "cd_dot_dot", file: !2309, line: 1066)
!19883 = !DILocation(line: 1066, column: 1, scope: !19402)
!19884 = !DILocation(line: 1069, column: 13, scope: !19402)
!19885 = !DILocation(line: 1069, column: 18, scope: !19402)
!19886 = !DILocation(line: 1069, column: 11, scope: !19402)
!19887 = !DILocation(line: 1070, column: 23, scope: !19402)
!19888 = !DILocation(line: 1070, column: 9, scope: !19402)
!19889 = !DILocation(line: 1070, column: 13, scope: !19402)
!19890 = !DILocation(line: 1070, column: 21, scope: !19402)
!19891 = !DILocation(line: 1071, column: 14, scope: !19402)
!19892 = !DILocation(line: 1071, column: 9, scope: !19402)
!19893 = !DILocation(line: 1073, column: 13, scope: !19894)
!19894 = distinct !DILexicalBlock(scope: !19402, file: !2309, line: 1073, column: 13)
!19895 = !DILocation(line: 1073, column: 16, scope: !19894)
!19896 = !DILocation(line: 1073, column: 26, scope: !19894)
!19897 = !DILocation(line: 1073, column: 13, scope: !19402)
!19898 = !DILocation(line: 1078, column: 22, scope: !19899)
!19899 = distinct !DILexicalBlock(scope: !19894, file: !2309, line: 1073, column: 50)
!19900 = !DILocation(line: 1078, column: 17, scope: !19899)
!19901 = !DILocation(line: 1079, column: 17, scope: !19899)
!19902 = !DILocation(line: 1080, column: 25, scope: !19899)
!19903 = !DILocation(line: 1080, column: 29, scope: !19899)
!19904 = !DILocation(line: 1080, column: 37, scope: !19899)
!19905 = !DILocation(line: 1080, column: 17, scope: !19899)
!19906 = !DILocation(line: 1083, column: 9, scope: !19402)
!19907 = !DILocation(line: 1083, column: 9, scope: !19908)
!19908 = distinct !DILexicalBlock(scope: !19909, file: !2309, line: 1083, column: 9)
!19909 = distinct !DILexicalBlock(scope: !19402, file: !2309, line: 1083, column: 9)
!19910 = !DILocation(line: 1083, column: 9, scope: !19909)
!19911 = !DILocation(line: 1086, column: 9, scope: !19402)
!19912 = !DILocation(line: 1086, column: 13, scope: !19402)
!19913 = !DILocation(line: 1086, column: 22, scope: !19402)
!19914 = !DILocation(line: 1086, column: 25, scope: !19402)
!19915 = !DILocation(line: 1086, column: 38, scope: !19402)
!19916 = !DILocation(line: 1094, column: 13, scope: !19917)
!19917 = distinct !DILexicalBlock(scope: !19402, file: !2309, line: 1094, column: 13)
!19918 = !DILocation(line: 1094, column: 16, scope: !19917)
!19919 = !DILocation(line: 1094, column: 26, scope: !19917)
!19920 = !DILocation(line: 1094, column: 13, scope: !19402)
!19921 = !DILocation(line: 1095, column: 41, scope: !19922)
!19922 = distinct !DILexicalBlock(scope: !19923, file: !2309, line: 1095, column: 21)
!19923 = distinct !DILexicalBlock(scope: !19917, file: !2309, line: 1094, column: 44)
!19924 = !DILocation(line: 1095, column: 21, scope: !19922)
!19925 = !DILocation(line: 1095, column: 21, scope: !19923)
!19926 = !DILocation(line: 1096, column: 40, scope: !19927)
!19927 = distinct !DILexicalBlock(scope: !19922, file: !2309, line: 1095, column: 46)
!19928 = !DILocation(line: 1096, column: 25, scope: !19927)
!19929 = !DILocation(line: 1096, column: 28, scope: !19927)
!19930 = !DILocation(line: 1096, column: 38, scope: !19927)
!19931 = !DILocation(line: 1097, column: 25, scope: !19927)
!19932 = !DILocation(line: 1098, column: 17, scope: !19927)
!19933 = !DILocation(line: 1099, column: 9, scope: !19923)
!19934 = !DILocation(line: 1099, column: 20, scope: !19935)
!19935 = distinct !DILexicalBlock(scope: !19917, file: !2309, line: 1099, column: 20)
!19936 = !DILocation(line: 1099, column: 23, scope: !19935)
!19937 = !DILocation(line: 1099, column: 33, scope: !19935)
!19938 = !DILocation(line: 1099, column: 20, scope: !19917)
!19939 = !DILocation(line: 1100, column: 21, scope: !19940)
!19940 = distinct !DILexicalBlock(scope: !19941, file: !2309, line: 1100, column: 21)
!19941 = distinct !DILexicalBlock(scope: !19935, file: !2309, line: 1099, column: 50)
!19942 = !DILocation(line: 1100, column: 21, scope: !19941)
!19943 = !DILocation(line: 1101, column: 40, scope: !19944)
!19944 = distinct !DILexicalBlock(scope: !19940, file: !2309, line: 1100, column: 47)
!19945 = !DILocation(line: 1101, column: 25, scope: !19944)
!19946 = !DILocation(line: 1101, column: 28, scope: !19944)
!19947 = !DILocation(line: 1101, column: 38, scope: !19944)
!19948 = !DILocation(line: 1102, column: 25, scope: !19944)
!19949 = !DILocation(line: 1103, column: 17, scope: !19944)
!19950 = !DILocation(line: 1104, column: 29, scope: !19941)
!19951 = !DILocation(line: 1104, column: 32, scope: !19941)
!19952 = !DILocation(line: 1104, column: 23, scope: !19941)
!19953 = !DILocation(line: 1105, column: 9, scope: !19941)
!19954 = !DILocation(line: 1105, column: 22, scope: !19955)
!19955 = distinct !DILexicalBlock(scope: !19935, file: !2309, line: 1105, column: 20)
!19956 = !DILocation(line: 1105, column: 25, scope: !19955)
!19957 = !DILocation(line: 1105, column: 35, scope: !19955)
!19958 = !DILocation(line: 1105, column: 52, scope: !19955)
!19959 = !DILocation(line: 1106, column: 39, scope: !19955)
!19960 = !DILocation(line: 1106, column: 43, scope: !19955)
!19961 = !DILocation(line: 1106, column: 46, scope: !19955)
!19962 = !DILocation(line: 1106, column: 20, scope: !19955)
!19963 = !DILocation(line: 1105, column: 20, scope: !19935)
!19964 = !DILocation(line: 1107, column: 32, scope: !19965)
!19965 = distinct !DILexicalBlock(scope: !19955, file: !2309, line: 1106, column: 69)
!19966 = !DILocation(line: 1107, column: 17, scope: !19965)
!19967 = !DILocation(line: 1107, column: 20, scope: !19965)
!19968 = !DILocation(line: 1107, column: 30, scope: !19965)
!19969 = !DILocation(line: 1108, column: 17, scope: !19965)
!19970 = !DILocation(line: 1109, column: 9, scope: !19965)
!19971 = !DILocation(line: 1114, column: 13, scope: !19972)
!19972 = distinct !DILexicalBlock(scope: !19402, file: !2309, line: 1114, column: 13)
!19973 = !DILocation(line: 1114, column: 16, scope: !19972)
!19974 = !DILocation(line: 1114, column: 25, scope: !19972)
!19975 = !DILocation(line: 1114, column: 13, scope: !19402)
!19976 = !DILocation(line: 1115, column: 31, scope: !19977)
!19977 = distinct !DILexicalBlock(scope: !19972, file: !2309, line: 1114, column: 36)
!19978 = !DILocation(line: 1115, column: 34, scope: !19977)
!19979 = !DILocation(line: 1115, column: 17, scope: !19977)
!19980 = !DILocation(line: 1115, column: 20, scope: !19977)
!19981 = !DILocation(line: 1115, column: 29, scope: !19977)
!19982 = !DILocation(line: 1116, column: 21, scope: !19983)
!19983 = distinct !DILexicalBlock(scope: !19977, file: !2309, line: 1116, column: 21)
!19984 = !DILocation(line: 1116, column: 24, scope: !19983)
!19985 = !DILocation(line: 1116, column: 34, scope: !19983)
!19986 = !DILocation(line: 1116, column: 21, scope: !19977)
!19987 = !DILocation(line: 1117, column: 25, scope: !19983)
!19988 = !DILocation(line: 1117, column: 25, scope: !19989)
!19989 = distinct !DILexicalBlock(scope: !19983, file: !2309, line: 1117, column: 25)
!19990 = !DILocation(line: 1118, column: 9, scope: !19977)
!19991 = !DILocation(line: 1119, column: 16, scope: !19402)
!19992 = !DILocation(line: 1119, column: 41, scope: !19402)
!19993 = !DILocation(line: 1119, column: 9, scope: !19402)
!19994 = !DILocation(line: 1120, column: 1, scope: !19402)
!19995 = distinct !DISubprogram(name: "leave_dir", scope: !2433, file: !2433, line: 125, type: !2447, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!19996 = !DILocalVariable(name: "fts", arg: 1, scope: !19995, file: !2433, line: 125, type: !2334)
!19997 = !DILocation(line: 125, column: 17, scope: !19995)
!19998 = !DILocalVariable(name: "ent", arg: 2, scope: !19995, file: !2433, line: 125, type: !2417)
!19999 = !DILocation(line: 125, column: 30, scope: !19995)
!20000 = !DILocalVariable(name: "st", scope: !19995, file: !2433, line: 127, type: !2449)
!20001 = !DILocation(line: 127, column: 22, scope: !19995)
!20002 = !DILocation(line: 127, column: 27, scope: !19995)
!20003 = !DILocation(line: 127, column: 32, scope: !19995)
!20004 = !DILocation(line: 128, column: 7, scope: !20005)
!20005 = distinct !DILexicalBlock(scope: !19995, file: !2433, line: 128, column: 7)
!20006 = !DILocation(line: 128, column: 12, scope: !20005)
!20007 = !DILocation(line: 128, column: 24, scope: !20005)
!20008 = !DILocation(line: 128, column: 7, scope: !19995)
!20009 = !DILocalVariable(name: "obj", scope: !20010, file: !2433, line: 130, type: !2432)
!20010 = distinct !DILexicalBlock(scope: !20005, file: !2433, line: 129, column: 5)
!20011 = !DILocation(line: 130, column: 25, scope: !20010)
!20012 = !DILocalVariable(name: "found", scope: !20010, file: !2433, line: 131, type: !53)
!20013 = !DILocation(line: 131, column: 13, scope: !20010)
!20014 = !DILocation(line: 132, column: 17, scope: !20010)
!20015 = !DILocation(line: 132, column: 21, scope: !20010)
!20016 = !DILocation(line: 132, column: 11, scope: !20010)
!20017 = !DILocation(line: 132, column: 15, scope: !20010)
!20018 = !DILocation(line: 133, column: 17, scope: !20010)
!20019 = !DILocation(line: 133, column: 21, scope: !20010)
!20020 = !DILocation(line: 133, column: 11, scope: !20010)
!20021 = !DILocation(line: 133, column: 15, scope: !20010)
!20022 = !DILocation(line: 134, column: 28, scope: !20010)
!20023 = !DILocation(line: 134, column: 33, scope: !20010)
!20024 = !DILocation(line: 134, column: 43, scope: !20010)
!20025 = !DILocation(line: 134, column: 47, scope: !20010)
!20026 = !DILocation(line: 134, column: 15, scope: !20010)
!20027 = !DILocation(line: 134, column: 13, scope: !20010)
!20028 = !DILocation(line: 135, column: 12, scope: !20029)
!20029 = distinct !DILexicalBlock(scope: !20010, file: !2433, line: 135, column: 11)
!20030 = !DILocation(line: 135, column: 11, scope: !20010)
!20031 = !DILocation(line: 136, column: 9, scope: !20029)
!20032 = !DILocation(line: 137, column: 13, scope: !20010)
!20033 = !DILocation(line: 137, column: 7, scope: !20010)
!20034 = !DILocation(line: 138, column: 5, scope: !20010)
!20035 = !DILocalVariable(name: "parent", scope: !20036, file: !2433, line: 141, type: !2417)
!20036 = distinct !DILexicalBlock(scope: !20005, file: !2433, line: 140, column: 5)
!20037 = !DILocation(line: 141, column: 15, scope: !20036)
!20038 = !DILocation(line: 141, column: 24, scope: !20036)
!20039 = !DILocation(line: 141, column: 29, scope: !20036)
!20040 = !DILocation(line: 142, column: 11, scope: !20041)
!20041 = distinct !DILexicalBlock(scope: !20036, file: !2433, line: 142, column: 11)
!20042 = !DILocation(line: 142, column: 18, scope: !20041)
!20043 = !DILocation(line: 142, column: 26, scope: !20041)
!20044 = !DILocation(line: 142, column: 34, scope: !20041)
!20045 = !DILocation(line: 142, column: 42, scope: !20041)
!20046 = !DILocation(line: 142, column: 31, scope: !20041)
!20047 = !DILocation(line: 142, column: 11, scope: !20036)
!20048 = !DILocation(line: 143, column: 9, scope: !20041)
!20049 = !DILocation(line: 143, column: 9, scope: !20050)
!20050 = distinct !DILexicalBlock(scope: !20051, file: !2433, line: 143, column: 9)
!20051 = distinct !DILexicalBlock(scope: !20041, file: !2433, line: 143, column: 9)
!20052 = !{!20053, !3180, i64 16}
!20053 = !{!"cycle_check_state", !3872, i64 0, !3180, i64 16, !2983, i64 24}
!20054 = !DILocation(line: 143, column: 9, scope: !20051)
!20055 = !DILocation(line: 143, column: 9, scope: !20056)
!20056 = distinct !DILexicalBlock(scope: !20051, file: !2433, line: 143, column: 9)
!20057 = !{!20053, !3180, i64 0}
!20058 = !{!20053, !3180, i64 8}
!20059 = !DILocation(line: 143, column: 9, scope: !20060)
!20060 = distinct !DILexicalBlock(scope: !20056, file: !2433, line: 143, column: 9)
!20061 = !DILocation(line: 146, column: 1, scope: !19995)
!20062 = distinct !DISubprogram(name: "fts_safe_changedir", scope: !2309, file: !2309, line: 2043, type: !2497, scopeLine: 2044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!20063 = !DILocalVariable(name: "sp", arg: 1, scope: !20062, file: !2309, line: 2043, type: !2334)
!20064 = !DILocation(line: 2043, column: 26, scope: !20062)
!20065 = !DILocalVariable(name: "p", arg: 2, scope: !20062, file: !2309, line: 2043, type: !2417)
!20066 = !DILocation(line: 2043, column: 38, scope: !20062)
!20067 = !DILocalVariable(name: "fd", arg: 3, scope: !20062, file: !2309, line: 2043, type: !7)
!20068 = !DILocation(line: 2043, column: 45, scope: !20062)
!20069 = !DILocalVariable(name: "dir", arg: 4, scope: !20062, file: !2309, line: 2043, type: !115)
!20070 = !DILocation(line: 2043, column: 61, scope: !20062)
!20071 = !DILocalVariable(name: "ret", scope: !20062, file: !2309, line: 2045, type: !7)
!20072 = !DILocation(line: 2045, column: 13, scope: !20062)
!20073 = !DILocalVariable(name: "is_dotdot", scope: !20062, file: !2309, line: 2046, type: !120)
!20074 = !DILocation(line: 2046, column: 14, scope: !20062)
!20075 = !DILocation(line: 2046, column: 26, scope: !20062)
!20076 = !DILocation(line: 2046, column: 30, scope: !20062)
!20077 = !DILocation(line: 2046, column: 33, scope: !20062)
!20078 = !DILocation(line: 0, scope: !20062)
!20079 = !DILocalVariable(name: "newfd", scope: !20062, file: !2309, line: 2047, type: !7)
!20080 = !DILocation(line: 2047, column: 13, scope: !20062)
!20081 = !DILocation(line: 2053, column: 13, scope: !20082)
!20082 = distinct !DILexicalBlock(scope: !20062, file: !2309, line: 2053, column: 13)
!20083 = !DILocation(line: 2053, column: 13, scope: !20062)
!20084 = !DILocation(line: 2055, column: 17, scope: !20085)
!20085 = distinct !DILexicalBlock(scope: !20086, file: !2309, line: 2055, column: 17)
!20086 = distinct !DILexicalBlock(scope: !20082, file: !2309, line: 2054, column: 11)
!20087 = !DILocation(line: 2055, column: 35, scope: !20085)
!20088 = !DILocation(line: 2055, column: 43, scope: !20085)
!20089 = !DILocation(line: 2055, column: 40, scope: !20085)
!20090 = !DILocation(line: 2055, column: 17, scope: !20086)
!20091 = !DILocation(line: 2056, column: 22, scope: !20085)
!20092 = !DILocation(line: 2056, column: 15, scope: !20085)
!20093 = !DILocation(line: 2057, column: 13, scope: !20086)
!20094 = !DILocation(line: 2060, column: 13, scope: !20095)
!20095 = distinct !DILexicalBlock(scope: !20062, file: !2309, line: 2060, column: 13)
!20096 = !DILocation(line: 2060, column: 16, scope: !20095)
!20097 = !DILocation(line: 2060, column: 20, scope: !20095)
!20098 = !DILocation(line: 2060, column: 23, scope: !20095)
!20099 = !DILocation(line: 2060, column: 33, scope: !20095)
!20100 = !DILocation(line: 2060, column: 36, scope: !20095)
!20101 = !DILocation(line: 2060, column: 13, scope: !20062)
!20102 = !DILocation(line: 2067, column: 35, scope: !20103)
!20103 = distinct !DILexicalBlock(scope: !20104, file: !2309, line: 2067, column: 18)
!20104 = distinct !DILexicalBlock(scope: !20095, file: !2309, line: 2061, column: 11)
!20105 = !DILocation(line: 2067, column: 39, scope: !20103)
!20106 = !DILocation(line: 2067, column: 20, scope: !20103)
!20107 = !DILocation(line: 2067, column: 18, scope: !20104)
!20108 = !DILocalVariable(name: "parent_fd", scope: !20109, file: !2309, line: 2069, type: !7)
!20109 = distinct !DILexicalBlock(scope: !20103, file: !2309, line: 2068, column: 15)
!20110 = !DILocation(line: 2069, column: 21, scope: !20109)
!20111 = !DILocation(line: 2071, column: 42, scope: !20109)
!20112 = !DILocation(line: 2071, column: 46, scope: !20109)
!20113 = !DILocation(line: 2071, column: 29, scope: !20109)
!20114 = !DILocation(line: 2071, column: 27, scope: !20109)
!20115 = !DILocation(line: 2072, column: 27, scope: !20109)
!20116 = !DILocation(line: 2073, column: 26, scope: !20117)
!20117 = distinct !DILexicalBlock(scope: !20109, file: !2309, line: 2073, column: 21)
!20118 = !DILocation(line: 2073, column: 23, scope: !20117)
!20119 = !DILocation(line: 2073, column: 21, scope: !20109)
!20120 = !DILocation(line: 2075, column: 26, scope: !20121)
!20121 = distinct !DILexicalBlock(scope: !20117, file: !2309, line: 2074, column: 19)
!20122 = !DILocation(line: 2075, column: 24, scope: !20121)
!20123 = !DILocation(line: 2076, column: 25, scope: !20121)
!20124 = !DILocation(line: 2077, column: 19, scope: !20121)
!20125 = !DILocation(line: 2078, column: 15, scope: !20109)
!20126 = !DILocation(line: 2079, column: 11, scope: !20104)
!20127 = !DILocation(line: 2081, column: 17, scope: !20062)
!20128 = !DILocation(line: 2081, column: 15, scope: !20062)
!20129 = !DILocation(line: 2082, column: 13, scope: !20130)
!20130 = distinct !DILexicalBlock(scope: !20062, file: !2309, line: 2082, column: 13)
!20131 = !DILocation(line: 2082, column: 16, scope: !20130)
!20132 = !DILocation(line: 2082, column: 20, scope: !20130)
!20133 = !DILocation(line: 2082, column: 41, scope: !20130)
!20134 = !DILocation(line: 2082, column: 45, scope: !20130)
!20135 = !DILocation(line: 2082, column: 32, scope: !20130)
!20136 = !DILocation(line: 2082, column: 30, scope: !20130)
!20137 = !DILocation(line: 2082, column: 51, scope: !20130)
!20138 = !DILocation(line: 2082, column: 13, scope: !20062)
!20139 = !DILocation(line: 2083, column: 11, scope: !20130)
!20140 = !DILocation(line: 2092, column: 13, scope: !20141)
!20141 = distinct !DILexicalBlock(scope: !20062, file: !2309, line: 2092, column: 13)
!20142 = !DILocation(line: 2093, column: 13, scope: !20141)
!20143 = !DILocation(line: 2093, column: 17, scope: !20141)
!20144 = !DILocation(line: 2093, column: 21, scope: !20141)
!20145 = !DILocation(line: 2093, column: 24, scope: !20141)
!20146 = !DILocation(line: 2092, column: 13, scope: !20062)
!20147 = !DILocalVariable(name: "sb", scope: !20148, file: !2309, line: 2095, type: !2390)
!20148 = distinct !DILexicalBlock(scope: !20141, file: !2309, line: 2094, column: 11)
!20149 = !DILocation(line: 2095, column: 25, scope: !20148)
!20150 = !DILocation(line: 2096, column: 23, scope: !20151)
!20151 = distinct !DILexicalBlock(scope: !20148, file: !2309, line: 2096, column: 17)
!20152 = !DILocation(line: 2096, column: 17, scope: !20151)
!20153 = !DILocation(line: 2096, column: 17, scope: !20148)
!20154 = !DILocation(line: 2098, column: 21, scope: !20155)
!20155 = distinct !DILexicalBlock(scope: !20151, file: !2309, line: 2097, column: 15)
!20156 = !DILocation(line: 2099, column: 17, scope: !20155)
!20157 = !DILocation(line: 2101, column: 17, scope: !20158)
!20158 = distinct !DILexicalBlock(scope: !20148, file: !2309, line: 2101, column: 17)
!20159 = !DILocation(line: 2101, column: 20, scope: !20158)
!20160 = !DILocation(line: 2101, column: 31, scope: !20158)
!20161 = !DILocation(line: 2101, column: 44, scope: !20158)
!20162 = !DILocation(line: 2101, column: 38, scope: !20158)
!20163 = !DILocation(line: 2102, column: 17, scope: !20158)
!20164 = !DILocation(line: 2102, column: 20, scope: !20158)
!20165 = !DILocation(line: 2102, column: 23, scope: !20158)
!20166 = !DILocation(line: 2102, column: 34, scope: !20158)
!20167 = !DILocation(line: 2102, column: 47, scope: !20158)
!20168 = !DILocation(line: 2102, column: 41, scope: !20158)
!20169 = !DILocation(line: 2101, column: 17, scope: !20148)
!20170 = !DILocation(line: 2104, column: 17, scope: !20171)
!20171 = distinct !DILexicalBlock(scope: !20158, file: !2309, line: 2103, column: 15)
!20172 = !DILocation(line: 2105, column: 21, scope: !20171)
!20173 = !DILocation(line: 2106, column: 17, scope: !20171)
!20174 = !DILocation(line: 2108, column: 11, scope: !20148)
!20175 = !DILocation(line: 2110, column: 13, scope: !20176)
!20176 = distinct !DILexicalBlock(scope: !20062, file: !2309, line: 2110, column: 13)
!20177 = !DILocation(line: 2110, column: 13, scope: !20062)
!20178 = !DILocation(line: 2112, column: 29, scope: !20179)
!20179 = distinct !DILexicalBlock(scope: !20176, file: !2309, line: 2111, column: 11)
!20180 = !DILocation(line: 2112, column: 33, scope: !20179)
!20181 = !DILocation(line: 2112, column: 42, scope: !20179)
!20182 = !DILocation(line: 2112, column: 40, scope: !20179)
!20183 = !DILocation(line: 2112, column: 13, scope: !20179)
!20184 = !DILocation(line: 2113, column: 13, scope: !20179)
!20185 = !DILocation(line: 2116, column: 22, scope: !20062)
!20186 = !DILocation(line: 2116, column: 15, scope: !20062)
!20187 = !DILocation(line: 2116, column: 13, scope: !20062)
!20188 = !DILocation(line: 2116, column: 9, scope: !20062)
!20189 = !DILabel(scope: !20062, name: "bail", file: !2309, line: 2117)
!20190 = !DILocation(line: 2117, column: 1, scope: !20062)
!20191 = !DILocation(line: 2118, column: 13, scope: !20192)
!20192 = distinct !DILexicalBlock(scope: !20062, file: !2309, line: 2118, column: 13)
!20193 = !DILocation(line: 2118, column: 16, scope: !20192)
!20194 = !DILocation(line: 2118, column: 13, scope: !20062)
!20195 = !DILocalVariable(name: "oerrno", scope: !20196, file: !2309, line: 2120, type: !7)
!20196 = distinct !DILexicalBlock(scope: !20192, file: !2309, line: 2119, column: 11)
!20197 = !DILocation(line: 2120, column: 17, scope: !20196)
!20198 = !DILocation(line: 2120, column: 26, scope: !20196)
!20199 = !DILocation(line: 2121, column: 25, scope: !20196)
!20200 = !DILocation(line: 2121, column: 19, scope: !20196)
!20201 = !DILocation(line: 2122, column: 13, scope: !20196)
!20202 = !DILocation(line: 2123, column: 11, scope: !20196)
!20203 = !DILocation(line: 2124, column: 16, scope: !20062)
!20204 = !DILocation(line: 2124, column: 9, scope: !20062)
!20205 = !DILocation(line: 2125, column: 1, scope: !20062)
!20206 = distinct !DISubprogram(name: "fts_build", scope: !2309, file: !2309, line: 1300, type: !2424, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!20207 = !DILocalVariable(name: "sp", arg: 1, scope: !20206, file: !2309, line: 1300, type: !2334)
!20208 = !DILocation(line: 1300, column: 26, scope: !20206)
!20209 = !DILocalVariable(name: "type", arg: 2, scope: !20206, file: !2309, line: 1300, type: !7)
!20210 = !DILocation(line: 1300, column: 34, scope: !20206)
!20211 = !DILocalVariable(name: "p", scope: !20206, file: !2309, line: 1302, type: !2417)
!20212 = !DILocation(line: 1302, column: 26, scope: !20206)
!20213 = !DILocalVariable(name: "head", scope: !20206, file: !2309, line: 1302, type: !2417)
!20214 = !DILocation(line: 1302, column: 30, scope: !20206)
!20215 = !DILocalVariable(name: "nitems", scope: !20206, file: !2309, line: 1303, type: !55)
!20216 = !DILocation(line: 1303, column: 25, scope: !20206)
!20217 = !DILocalVariable(name: "tail", scope: !20206, file: !2309, line: 1304, type: !2417)
!20218 = !DILocation(line: 1304, column: 17, scope: !20206)
!20219 = !DILocalVariable(name: "oldaddr", scope: !20206, file: !2309, line: 1305, type: !53)
!20220 = !DILocation(line: 1305, column: 15, scope: !20206)
!20221 = !DILocalVariable(name: "saved_errno", scope: !20206, file: !2309, line: 1306, type: !7)
!20222 = !DILocation(line: 1306, column: 13, scope: !20206)
!20223 = !DILocalVariable(name: "descend", scope: !20206, file: !2309, line: 1307, type: !120)
!20224 = !DILocation(line: 1307, column: 14, scope: !20206)
!20225 = !DILocalVariable(name: "doadjust", scope: !20206, file: !2309, line: 1308, type: !120)
!20226 = !DILocation(line: 1308, column: 14, scope: !20206)
!20227 = !DILocalVariable(name: "level", scope: !20206, file: !2309, line: 1309, type: !566)
!20228 = !DILocation(line: 1309, column: 19, scope: !20206)
!20229 = !DILocalVariable(name: "len", scope: !20206, file: !2309, line: 1310, type: !55)
!20230 = !DILocation(line: 1310, column: 16, scope: !20206)
!20231 = !DILocalVariable(name: "maxlen", scope: !20206, file: !2309, line: 1310, type: !55)
!20232 = !DILocation(line: 1310, column: 21, scope: !20206)
!20233 = !DILocalVariable(name: "new_len", scope: !20206, file: !2309, line: 1310, type: !55)
!20234 = !DILocation(line: 1310, column: 29, scope: !20206)
!20235 = !DILocalVariable(name: "cp", scope: !20206, file: !2309, line: 1311, type: !9)
!20236 = !DILocation(line: 1311, column: 15, scope: !20206)
!20237 = !DILocalVariable(name: "dir_fd", scope: !20206, file: !2309, line: 1312, type: !7)
!20238 = !DILocation(line: 1312, column: 13, scope: !20206)
!20239 = !DILocalVariable(name: "cur", scope: !20206, file: !2309, line: 1313, type: !2417)
!20240 = !DILocation(line: 1313, column: 17, scope: !20206)
!20241 = !DILocation(line: 1313, column: 23, scope: !20206)
!20242 = !DILocation(line: 1313, column: 27, scope: !20206)
!20243 = !DILocalVariable(name: "continue_readdir", scope: !20206, file: !2309, line: 1314, type: !120)
!20244 = !DILocation(line: 1314, column: 14, scope: !20206)
!20245 = !DILocation(line: 1314, column: 35, scope: !20206)
!20246 = !DILocation(line: 1314, column: 40, scope: !20206)
!20247 = !DILocation(line: 1314, column: 34, scope: !20206)
!20248 = !DILocation(line: 1314, column: 33, scope: !20206)
!20249 = !DILocalVariable(name: "sort_by_inode", scope: !20206, file: !2309, line: 1315, type: !120)
!20250 = !DILocation(line: 1315, column: 14, scope: !20206)
!20251 = !DILocalVariable(name: "max_entries", scope: !20206, file: !2309, line: 1316, type: !55)
!20252 = !DILocation(line: 1316, column: 16, scope: !20206)
!20253 = !DILocation(line: 1321, column: 13, scope: !20254)
!20254 = distinct !DILexicalBlock(scope: !20206, file: !2309, line: 1321, column: 13)
!20255 = !DILocation(line: 1321, column: 13, scope: !20206)
!20256 = !DILocalVariable(name: "dp", scope: !20257, file: !2309, line: 1323, type: !607)
!20257 = distinct !DILexicalBlock(scope: !20254, file: !2309, line: 1322, column: 11)
!20258 = !DILocation(line: 1323, column: 18, scope: !20257)
!20259 = !DILocation(line: 1323, column: 23, scope: !20257)
!20260 = !DILocation(line: 1323, column: 28, scope: !20257)
!20261 = !DILocation(line: 1324, column: 29, scope: !20257)
!20262 = !DILocation(line: 1324, column: 22, scope: !20257)
!20263 = !DILocation(line: 1324, column: 20, scope: !20257)
!20264 = !DILocation(line: 1325, column: 17, scope: !20265)
!20265 = distinct !DILexicalBlock(scope: !20257, file: !2309, line: 1325, column: 17)
!20266 = !DILocation(line: 1325, column: 24, scope: !20265)
!20267 = !DILocation(line: 1325, column: 17, scope: !20257)
!20268 = !DILocation(line: 1327, column: 17, scope: !20269)
!20269 = distinct !DILexicalBlock(scope: !20265, file: !2309, line: 1326, column: 15)
!20270 = !DILocation(line: 1327, column: 17, scope: !20271)
!20271 = distinct !DILexicalBlock(scope: !20269, file: !2309, line: 1327, column: 17)
!20272 = !DILocation(line: 1328, column: 21, scope: !20273)
!20273 = distinct !DILexicalBlock(scope: !20269, file: !2309, line: 1328, column: 21)
!20274 = !DILocation(line: 1328, column: 26, scope: !20273)
!20275 = !DILocation(line: 1328, column: 21, scope: !20269)
!20276 = !DILocation(line: 1330, column: 21, scope: !20277)
!20277 = distinct !DILexicalBlock(scope: !20273, file: !2309, line: 1329, column: 19)
!20278 = !DILocation(line: 1330, column: 26, scope: !20277)
!20279 = !DILocation(line: 1330, column: 35, scope: !20277)
!20280 = !DILocation(line: 1331, column: 38, scope: !20277)
!20281 = !DILocation(line: 1331, column: 21, scope: !20277)
!20282 = !DILocation(line: 1331, column: 26, scope: !20277)
!20283 = !DILocation(line: 1331, column: 36, scope: !20277)
!20284 = !DILocation(line: 1332, column: 19, scope: !20277)
!20285 = !DILocation(line: 1333, column: 17, scope: !20269)
!20286 = !DILocation(line: 1335, column: 11, scope: !20257)
!20287 = !DILocation(line: 1340, column: 34, scope: !20288)
!20288 = distinct !DILexicalBlock(scope: !20289, file: !2309, line: 1340, column: 17)
!20289 = distinct !DILexicalBlock(scope: !20254, file: !2309, line: 1337, column: 11)
!20290 = !DILocation(line: 0, scope: !20288)
!20291 = !DILocation(line: 1340, column: 18, scope: !20288)
!20292 = !DILocation(line: 1340, column: 23, scope: !20288)
!20293 = !DILocation(line: 1340, column: 32, scope: !20288)
!20294 = !DILocation(line: 1340, column: 74, scope: !20288)
!20295 = !DILocation(line: 1340, column: 17, scope: !20289)
!20296 = !DILocation(line: 1342, column: 21, scope: !20297)
!20297 = distinct !DILexicalBlock(scope: !20298, file: !2309, line: 1342, column: 21)
!20298 = distinct !DILexicalBlock(scope: !20288, file: !2309, line: 1341, column: 15)
!20299 = !DILocation(line: 1342, column: 26, scope: !20297)
!20300 = !DILocation(line: 1342, column: 21, scope: !20298)
!20301 = !DILocation(line: 1344, column: 21, scope: !20302)
!20302 = distinct !DILexicalBlock(scope: !20297, file: !2309, line: 1343, column: 19)
!20303 = !DILocation(line: 1344, column: 26, scope: !20302)
!20304 = !DILocation(line: 1344, column: 35, scope: !20302)
!20305 = !DILocation(line: 1345, column: 38, scope: !20302)
!20306 = !DILocation(line: 1345, column: 21, scope: !20302)
!20307 = !DILocation(line: 1345, column: 26, scope: !20302)
!20308 = !DILocation(line: 1345, column: 36, scope: !20302)
!20309 = !DILocation(line: 1346, column: 19, scope: !20302)
!20310 = !DILocation(line: 1347, column: 17, scope: !20298)
!20311 = !DILocation(line: 1352, column: 17, scope: !20312)
!20312 = distinct !DILexicalBlock(scope: !20289, file: !2309, line: 1352, column: 17)
!20313 = !DILocation(line: 1352, column: 22, scope: !20312)
!20314 = !DILocation(line: 1352, column: 31, scope: !20312)
!20315 = !DILocation(line: 1352, column: 17, scope: !20289)
!20316 = !DILocation(line: 1353, column: 40, scope: !20312)
!20317 = !DILocation(line: 1353, column: 44, scope: !20312)
!20318 = !DILocation(line: 1353, column: 31, scope: !20312)
!20319 = !DILocation(line: 1353, column: 15, scope: !20312)
!20320 = !DILocation(line: 1353, column: 20, scope: !20312)
!20321 = !DILocation(line: 1353, column: 29, scope: !20312)
!20322 = !DILocation(line: 1354, column: 22, scope: !20323)
!20323 = distinct !DILexicalBlock(scope: !20312, file: !2309, line: 1354, column: 22)
!20324 = !DILocation(line: 1354, column: 26, scope: !20323)
!20325 = !DILocation(line: 1354, column: 38, scope: !20323)
!20326 = !DILocation(line: 1354, column: 22, scope: !20312)
!20327 = !DILocation(line: 1361, column: 17, scope: !20328)
!20328 = distinct !DILexicalBlock(scope: !20323, file: !2309, line: 1355, column: 15)
!20329 = !DILocation(line: 1361, column: 17, scope: !20330)
!20330 = distinct !DILexicalBlock(scope: !20328, file: !2309, line: 1361, column: 17)
!20331 = !DILocation(line: 1362, column: 27, scope: !20328)
!20332 = !DILocation(line: 1362, column: 31, scope: !20328)
!20333 = !DILocation(line: 1362, column: 17, scope: !20328)
!20334 = !DILocation(line: 1363, column: 34, scope: !20335)
!20335 = distinct !DILexicalBlock(scope: !20328, file: !2309, line: 1363, column: 21)
!20336 = !DILocation(line: 1363, column: 38, scope: !20335)
!20337 = !DILocation(line: 1363, column: 23, scope: !20335)
!20338 = !DILocation(line: 1363, column: 21, scope: !20328)
!20339 = !DILocation(line: 1365, column: 21, scope: !20340)
!20340 = distinct !DILexicalBlock(scope: !20335, file: !2309, line: 1364, column: 19)
!20341 = !DILocation(line: 1366, column: 21, scope: !20340)
!20342 = !DILocation(line: 1368, column: 15, scope: !20328)
!20343 = !DILocation(line: 1378, column: 23, scope: !20206)
!20344 = !DILocation(line: 1378, column: 27, scope: !20206)
!20345 = !DILocation(line: 1378, column: 21, scope: !20206)
!20346 = !DILocation(line: 1395, column: 13, scope: !20347)
!20347 = distinct !DILexicalBlock(scope: !20206, file: !2309, line: 1395, column: 13)
!20348 = !DILocation(line: 1395, column: 13, scope: !20206)
!20349 = !DILocation(line: 1399, column: 21, scope: !20350)
!20350 = distinct !DILexicalBlock(scope: !20347, file: !2309, line: 1396, column: 11)
!20351 = !DILocation(line: 1400, column: 11, scope: !20350)
!20352 = !DILocation(line: 1405, column: 24, scope: !20353)
!20353 = distinct !DILexicalBlock(scope: !20347, file: !2309, line: 1402, column: 11)
!20354 = !DILocation(line: 1405, column: 29, scope: !20353)
!20355 = !DILocation(line: 1406, column: 24, scope: !20353)
!20356 = !DILocation(line: 1406, column: 30, scope: !20353)
!20357 = !DILocation(line: 1406, column: 49, scope: !20353)
!20358 = !DILocation(line: 1406, column: 52, scope: !20353)
!20359 = !DILocation(line: 1407, column: 30, scope: !20353)
!20360 = !DILocation(line: 1407, column: 35, scope: !20353)
!20361 = !DILocation(line: 1408, column: 30, scope: !20353)
!20362 = !DILocation(line: 1408, column: 33, scope: !20353)
!20363 = !DILocation(line: 1408, column: 38, scope: !20353)
!20364 = !DILocation(line: 1408, column: 49, scope: !20353)
!20365 = !DILocation(line: 1408, column: 58, scope: !20353)
!20366 = !DILocation(line: 1409, column: 30, scope: !20353)
!20367 = !DILocation(line: 1409, column: 53, scope: !20353)
!20368 = !DILocation(line: 1409, column: 58, scope: !20353)
!20369 = !DILocation(line: 1409, column: 34, scope: !20353)
!20370 = !DILocation(line: 1410, column: 34, scope: !20353)
!20371 = !DILocation(line: 0, scope: !20353)
!20372 = !DILocation(line: 1406, column: 27, scope: !20353)
!20373 = !DILocation(line: 1405, column: 21, scope: !20353)
!20374 = !DILocation(line: 1411, column: 17, scope: !20375)
!20375 = distinct !DILexicalBlock(scope: !20353, file: !2309, line: 1411, column: 17)
!20376 = !DILocation(line: 1411, column: 25, scope: !20375)
!20377 = !DILocation(line: 1411, column: 28, scope: !20375)
!20378 = !DILocation(line: 1411, column: 33, scope: !20375)
!20379 = !DILocation(line: 1411, column: 17, scope: !20353)
!20380 = !DILocation(line: 1413, column: 21, scope: !20381)
!20381 = distinct !DILexicalBlock(scope: !20382, file: !2309, line: 1413, column: 21)
!20382 = distinct !DILexicalBlock(scope: !20375, file: !2309, line: 1412, column: 15)
!20383 = !DILocation(line: 1413, column: 21, scope: !20382)
!20384 = !DILocation(line: 1414, column: 35, scope: !20381)
!20385 = !DILocation(line: 1414, column: 28, scope: !20381)
!20386 = !DILocation(line: 1414, column: 26, scope: !20381)
!20387 = !DILocation(line: 1414, column: 19, scope: !20381)
!20388 = !DILocation(line: 1415, column: 21, scope: !20389)
!20389 = distinct !DILexicalBlock(scope: !20382, file: !2309, line: 1415, column: 21)
!20390 = !DILocation(line: 1415, column: 28, scope: !20389)
!20391 = !DILocation(line: 1415, column: 32, scope: !20389)
!20392 = !DILocation(line: 1415, column: 54, scope: !20389)
!20393 = !DILocation(line: 1415, column: 58, scope: !20389)
!20394 = !DILocation(line: 1415, column: 63, scope: !20389)
!20395 = !DILocation(line: 1415, column: 35, scope: !20389)
!20396 = !DILocation(line: 1415, column: 21, scope: !20382)
!20397 = !DILocation(line: 1416, column: 29, scope: !20398)
!20398 = distinct !DILexicalBlock(scope: !20399, file: !2309, line: 1416, column: 29)
!20399 = distinct !DILexicalBlock(scope: !20389, file: !2309, line: 1415, column: 78)
!20400 = !DILocation(line: 1416, column: 37, scope: !20398)
!20401 = !DILocation(line: 1416, column: 40, scope: !20398)
!20402 = !DILocation(line: 1416, column: 45, scope: !20398)
!20403 = !DILocation(line: 1416, column: 29, scope: !20399)
!20404 = !DILocation(line: 1417, column: 50, scope: !20398)
!20405 = !DILocation(line: 1417, column: 33, scope: !20398)
!20406 = !DILocation(line: 1417, column: 38, scope: !20398)
!20407 = !DILocation(line: 1417, column: 48, scope: !20398)
!20408 = !DILocation(line: 1418, column: 25, scope: !20399)
!20409 = !DILocation(line: 1418, column: 30, scope: !20399)
!20410 = !DILocation(line: 1418, column: 40, scope: !20399)
!20411 = !DILocation(line: 1419, column: 33, scope: !20399)
!20412 = !DILocation(line: 1420, column: 25, scope: !20399)
!20413 = !DILocation(line: 1420, column: 25, scope: !20414)
!20414 = distinct !DILexicalBlock(scope: !20399, file: !2309, line: 1420, column: 25)
!20415 = !DILocation(line: 1421, column: 29, scope: !20416)
!20416 = distinct !DILexicalBlock(scope: !20399, file: !2309, line: 1421, column: 29)
!20417 = !DILocation(line: 1421, column: 46, scope: !20416)
!20418 = !DILocation(line: 1421, column: 54, scope: !20416)
!20419 = !DILocation(line: 1421, column: 51, scope: !20416)
!20420 = !DILocation(line: 1421, column: 29, scope: !20399)
!20421 = !DILocation(line: 1422, column: 40, scope: !20416)
!20422 = !DILocation(line: 1422, column: 33, scope: !20416)
!20423 = !DILocation(line: 1423, column: 25, scope: !20399)
!20424 = !DILocation(line: 1423, column: 30, scope: !20399)
!20425 = !DILocation(line: 1423, column: 39, scope: !20399)
!20426 = !DILocation(line: 1424, column: 17, scope: !20399)
!20427 = !DILocation(line: 1425, column: 33, scope: !20389)
!20428 = !DILocation(line: 1426, column: 15, scope: !20382)
!20429 = !DILocation(line: 1439, column: 15, scope: !20206)
!20430 = !DILocation(line: 1439, column: 13, scope: !20206)
!20431 = !DILocation(line: 1440, column: 13, scope: !20432)
!20432 = distinct !DILexicalBlock(scope: !20206, file: !2309, line: 1440, column: 13)
!20433 = !DILocation(line: 1440, column: 13, scope: !20206)
!20434 = !DILocation(line: 1441, column: 22, scope: !20435)
!20435 = distinct !DILexicalBlock(scope: !20432, file: !2309, line: 1440, column: 33)
!20436 = !DILocation(line: 1441, column: 26, scope: !20435)
!20437 = !DILocation(line: 1441, column: 37, scope: !20435)
!20438 = !DILocation(line: 1441, column: 35, scope: !20435)
!20439 = !DILocation(line: 1441, column: 20, scope: !20435)
!20440 = !DILocation(line: 1442, column: 20, scope: !20435)
!20441 = !DILocation(line: 1442, column: 23, scope: !20435)
!20442 = !DILocation(line: 1443, column: 9, scope: !20435)
!20443 = !DILocation(line: 1445, column: 20, scope: !20444)
!20444 = distinct !DILexicalBlock(scope: !20432, file: !2309, line: 1443, column: 16)
!20445 = !DILocation(line: 1447, column: 12, scope: !20206)
!20446 = !DILocation(line: 1448, column: 18, scope: !20206)
!20447 = !DILocation(line: 1448, column: 22, scope: !20206)
!20448 = !DILocation(line: 1448, column: 36, scope: !20206)
!20449 = !DILocation(line: 1448, column: 34, scope: !20206)
!20450 = !DILocation(line: 1448, column: 16, scope: !20206)
!20451 = !DILocation(line: 1450, column: 17, scope: !20206)
!20452 = !DILocation(line: 1450, column: 22, scope: !20206)
!20453 = !DILocation(line: 1450, column: 32, scope: !20206)
!20454 = !DILocation(line: 1450, column: 15, scope: !20206)
!20455 = !DILocation(line: 1453, column: 18, scope: !20206)
!20456 = !DILocation(line: 1454, column: 14, scope: !20206)
!20457 = !DILocation(line: 1455, column: 14, scope: !20206)
!20458 = !DILocation(line: 1456, column: 16, scope: !20206)
!20459 = !DILocation(line: 1457, column: 9, scope: !20206)
!20460 = !DILocation(line: 1457, column: 16, scope: !20206)
!20461 = !DILocation(line: 1457, column: 21, scope: !20206)
!20462 = !DILocalVariable(name: "d_namelen", scope: !20463, file: !2309, line: 1458, type: !55)
!20463 = distinct !DILexicalBlock(scope: !20206, file: !2309, line: 1457, column: 31)
!20464 = !DILocation(line: 1458, column: 24, scope: !20463)
!20465 = !DILocation(line: 1459, column: 17, scope: !20463)
!20466 = !DILocalVariable(name: "dp", scope: !20463, file: !2309, line: 1460, type: !2471)
!20467 = !DILocation(line: 1460, column: 32, scope: !20463)
!20468 = !DILocation(line: 1460, column: 45, scope: !20463)
!20469 = !DILocation(line: 1460, column: 50, scope: !20463)
!20470 = !DILocation(line: 1460, column: 37, scope: !20463)
!20471 = !DILocation(line: 1461, column: 21, scope: !20472)
!20472 = distinct !DILexicalBlock(scope: !20463, file: !2309, line: 1461, column: 21)
!20473 = !DILocation(line: 1461, column: 24, scope: !20472)
!20474 = !DILocation(line: 1461, column: 21, scope: !20463)
!20475 = !DILocation(line: 1462, column: 29, scope: !20476)
!20476 = distinct !DILexicalBlock(scope: !20477, file: !2309, line: 1462, column: 29)
!20477 = distinct !DILexicalBlock(scope: !20472, file: !2309, line: 1461, column: 33)
!20478 = !DILocation(line: 1462, column: 29, scope: !20477)
!20479 = !DILocation(line: 1463, column: 50, scope: !20480)
!20480 = distinct !DILexicalBlock(scope: !20476, file: !2309, line: 1462, column: 36)
!20481 = !DILocation(line: 1463, column: 33, scope: !20480)
!20482 = !DILocation(line: 1463, column: 38, scope: !20480)
!20483 = !DILocation(line: 1463, column: 48, scope: !20480)
!20484 = !DILocation(line: 1466, column: 50, scope: !20480)
!20485 = !DILocation(line: 1466, column: 67, scope: !20480)
!20486 = !DILocation(line: 1466, column: 70, scope: !20480)
!20487 = !DILocation(line: 1466, column: 49, scope: !20480)
!20488 = !DILocation(line: 1466, column: 33, scope: !20480)
!20489 = !DILocation(line: 1466, column: 38, scope: !20480)
!20490 = !DILocation(line: 1466, column: 47, scope: !20480)
!20491 = !DILocation(line: 1468, column: 25, scope: !20480)
!20492 = !DILocation(line: 1469, column: 25, scope: !20477)
!20493 = !DILocation(line: 1471, column: 22, scope: !20494)
!20494 = distinct !DILexicalBlock(scope: !20463, file: !2309, line: 1471, column: 21)
!20495 = !DILocation(line: 1471, column: 40, scope: !20494)
!20496 = !DILocation(line: 1471, column: 43, scope: !20494)
!20497 = !DILocation(line: 1471, column: 21, scope: !20463)
!20498 = !DILocation(line: 1472, column: 25, scope: !20494)
!20499 = distinct !{!20499, !20459, !20500}
!20500 = !DILocation(line: 1590, column: 9, scope: !20206)
!20501 = !DILocation(line: 1474, column: 29, scope: !20463)
!20502 = !DILocation(line: 1474, column: 27, scope: !20463)
!20503 = !DILocation(line: 1475, column: 32, scope: !20463)
!20504 = !DILocation(line: 1475, column: 36, scope: !20463)
!20505 = !DILocation(line: 1475, column: 40, scope: !20463)
!20506 = !DILocation(line: 1475, column: 48, scope: !20463)
!20507 = !DILocation(line: 1475, column: 21, scope: !20463)
!20508 = !DILocation(line: 1475, column: 19, scope: !20463)
!20509 = !DILocation(line: 1476, column: 22, scope: !20510)
!20510 = distinct !DILexicalBlock(scope: !20463, file: !2309, line: 1476, column: 21)
!20511 = !DILocation(line: 1476, column: 21, scope: !20463)
!20512 = !DILocation(line: 1477, column: 25, scope: !20510)
!20513 = !DILocation(line: 1478, column: 21, scope: !20514)
!20514 = distinct !DILexicalBlock(scope: !20463, file: !2309, line: 1478, column: 21)
!20515 = !DILocation(line: 1478, column: 34, scope: !20514)
!20516 = !DILocation(line: 1478, column: 31, scope: !20514)
!20517 = !DILocation(line: 1478, column: 21, scope: !20463)
!20518 = !DILocation(line: 1480, column: 35, scope: !20519)
!20519 = distinct !DILexicalBlock(scope: !20514, file: !2309, line: 1478, column: 42)
!20520 = !DILocation(line: 1480, column: 39, scope: !20519)
!20521 = !DILocation(line: 1480, column: 33, scope: !20519)
!20522 = !DILocation(line: 1481, column: 42, scope: !20523)
!20523 = distinct !DILexicalBlock(scope: !20519, file: !2309, line: 1481, column: 29)
!20524 = !DILocation(line: 1481, column: 46, scope: !20523)
!20525 = !DILocation(line: 1481, column: 58, scope: !20523)
!20526 = !DILocation(line: 1481, column: 56, scope: !20523)
!20527 = !DILocation(line: 1481, column: 62, scope: !20523)
!20528 = !DILocation(line: 1481, column: 31, scope: !20523)
!20529 = !DILocation(line: 1481, column: 29, scope: !20519)
!20530 = !DILocation(line: 1481, column: 68, scope: !20523)
!20531 = !DILabel(scope: !20532, name: "mem1", file: !2309, line: 1487)
!20532 = distinct !DILexicalBlock(scope: !20523, file: !2309, line: 1481, column: 68)
!20533 = !DILocation(line: 1487, column: 1, scope: !20532)
!20534 = !DILocation(line: 1487, column: 47, scope: !20532)
!20535 = !DILocation(line: 1487, column: 45, scope: !20532)
!20536 = !DILocation(line: 1488, column: 38, scope: !20532)
!20537 = !DILocation(line: 1488, column: 33, scope: !20532)
!20538 = !DILocation(line: 1489, column: 43, scope: !20532)
!20539 = !DILocation(line: 1489, column: 33, scope: !20532)
!20540 = !DILocation(line: 1490, column: 33, scope: !20532)
!20541 = !DILocation(line: 1490, column: 33, scope: !20542)
!20542 = distinct !DILexicalBlock(scope: !20532, file: !2309, line: 1490, column: 33)
!20543 = !DILocation(line: 1491, column: 33, scope: !20532)
!20544 = !DILocation(line: 1491, column: 38, scope: !20532)
!20545 = !DILocation(line: 1491, column: 47, scope: !20532)
!20546 = !DILocation(line: 1492, column: 33, scope: !20532)
!20547 = !DILocation(line: 1493, column: 33, scope: !20532)
!20548 = !DILocation(line: 1494, column: 33, scope: !20532)
!20549 = !DILocation(line: 1497, column: 29, scope: !20550)
!20550 = distinct !DILexicalBlock(scope: !20519, file: !2309, line: 1497, column: 29)
!20551 = !DILocation(line: 1497, column: 40, scope: !20550)
!20552 = !DILocation(line: 1497, column: 44, scope: !20550)
!20553 = !DILocation(line: 1497, column: 37, scope: !20550)
!20554 = !DILocation(line: 1497, column: 29, scope: !20519)
!20555 = !DILocation(line: 1498, column: 42, scope: !20556)
!20556 = distinct !DILexicalBlock(scope: !20550, file: !2309, line: 1497, column: 54)
!20557 = !DILocation(line: 1499, column: 37, scope: !20558)
!20558 = distinct !DILexicalBlock(scope: !20556, file: !2309, line: 1499, column: 37)
!20559 = !DILocation(line: 1499, column: 37, scope: !20556)
!20560 = !DILocation(line: 1500, column: 46, scope: !20558)
!20561 = !DILocation(line: 1500, column: 50, scope: !20558)
!20562 = !DILocation(line: 1500, column: 61, scope: !20558)
!20563 = !DILocation(line: 1500, column: 59, scope: !20558)
!20564 = !DILocation(line: 1500, column: 44, scope: !20558)
!20565 = !DILocation(line: 1500, column: 41, scope: !20558)
!20566 = !DILocation(line: 1501, column: 25, scope: !20556)
!20567 = !DILocation(line: 1502, column: 34, scope: !20519)
!20568 = !DILocation(line: 1502, column: 38, scope: !20519)
!20569 = !DILocation(line: 1502, column: 52, scope: !20519)
!20570 = !DILocation(line: 1502, column: 50, scope: !20519)
!20571 = !DILocation(line: 1502, column: 32, scope: !20519)
!20572 = !DILocation(line: 1503, column: 17, scope: !20519)
!20573 = !DILocation(line: 1505, column: 27, scope: !20463)
!20574 = !DILocation(line: 1505, column: 33, scope: !20463)
!20575 = !DILocation(line: 1505, column: 31, scope: !20463)
!20576 = !DILocation(line: 1505, column: 25, scope: !20463)
!20577 = !DILocation(line: 1506, column: 21, scope: !20578)
!20578 = distinct !DILexicalBlock(scope: !20463, file: !2309, line: 1506, column: 21)
!20579 = !DILocation(line: 1506, column: 31, scope: !20578)
!20580 = !DILocation(line: 1506, column: 29, scope: !20578)
!20581 = !DILocation(line: 1506, column: 21, scope: !20463)
!20582 = !DILocation(line: 1513, column: 30, scope: !20583)
!20583 = distinct !DILexicalBlock(scope: !20578, file: !2309, line: 1506, column: 36)
!20584 = !DILocation(line: 1513, column: 25, scope: !20583)
!20585 = !DILocation(line: 1514, column: 35, scope: !20583)
!20586 = !DILocation(line: 1514, column: 25, scope: !20583)
!20587 = !DILocation(line: 1515, column: 25, scope: !20583)
!20588 = !DILocation(line: 1515, column: 25, scope: !20589)
!20589 = distinct !DILexicalBlock(scope: !20583, file: !2309, line: 1515, column: 25)
!20590 = !DILocation(line: 1516, column: 25, scope: !20583)
!20591 = !DILocation(line: 1516, column: 30, scope: !20583)
!20592 = !DILocation(line: 1516, column: 39, scope: !20583)
!20593 = !DILocation(line: 1517, column: 25, scope: !20583)
!20594 = !DILocation(line: 1518, column: 25, scope: !20583)
!20595 = !DILocation(line: 1519, column: 25, scope: !20583)
!20596 = !DILocation(line: 1521, column: 32, scope: !20463)
!20597 = !DILocation(line: 1521, column: 17, scope: !20463)
!20598 = !DILocation(line: 1521, column: 20, scope: !20463)
!20599 = !DILocation(line: 1521, column: 30, scope: !20463)
!20600 = !DILocation(line: 1522, column: 33, scope: !20463)
!20601 = !DILocation(line: 1522, column: 37, scope: !20463)
!20602 = !DILocation(line: 1522, column: 17, scope: !20463)
!20603 = !DILocation(line: 1522, column: 20, scope: !20463)
!20604 = !DILocation(line: 1522, column: 31, scope: !20463)
!20605 = !DILocation(line: 1523, column: 34, scope: !20463)
!20606 = !DILocation(line: 1523, column: 17, scope: !20463)
!20607 = !DILocation(line: 1523, column: 20, scope: !20463)
!20608 = !DILocation(line: 1523, column: 32, scope: !20463)
!20609 = !DILocation(line: 1527, column: 40, scope: !20463)
!20610 = !DILocation(line: 1527, column: 17, scope: !20463)
!20611 = !DILocation(line: 1527, column: 20, scope: !20463)
!20612 = !DILocation(line: 1527, column: 31, scope: !20463)
!20613 = !DILocation(line: 1527, column: 38, scope: !20463)
!20614 = !DILocation(line: 1530, column: 21, scope: !20615)
!20615 = distinct !DILexicalBlock(scope: !20463, file: !2309, line: 1530, column: 21)
!20616 = !DILocation(line: 1530, column: 21, scope: !20463)
!20617 = !DILocation(line: 1531, column: 42, scope: !20618)
!20618 = distinct !DILexicalBlock(scope: !20615, file: !2309, line: 1530, column: 41)
!20619 = !DILocation(line: 1531, column: 45, scope: !20618)
!20620 = !DILocation(line: 1531, column: 25, scope: !20618)
!20621 = !DILocation(line: 1531, column: 28, scope: !20618)
!20622 = !DILocation(line: 1531, column: 40, scope: !20618)
!20623 = !DILocation(line: 1532, column: 33, scope: !20618)
!20624 = !DILocation(line: 1532, column: 37, scope: !20618)
!20625 = !DILocation(line: 1532, column: 40, scope: !20618)
!20626 = !DILocation(line: 1532, column: 25, scope: !20618)
!20627 = !DILocation(line: 1532, column: 50, scope: !20618)
!20628 = !DILocation(line: 1532, column: 53, scope: !20618)
!20629 = !DILocation(line: 1532, column: 65, scope: !20618)
!20630 = !DILocation(line: 1533, column: 17, scope: !20618)
!20631 = !DILocation(line: 1534, column: 42, scope: !20615)
!20632 = !DILocation(line: 1534, column: 45, scope: !20615)
!20633 = !DILocation(line: 1534, column: 25, scope: !20615)
!20634 = !DILocation(line: 1534, column: 28, scope: !20615)
!20635 = !DILocation(line: 1534, column: 40, scope: !20615)
!20636 = !DILocation(line: 1536, column: 21, scope: !20637)
!20637 = distinct !DILexicalBlock(scope: !20463, file: !2309, line: 1536, column: 21)
!20638 = !DILocation(line: 1536, column: 25, scope: !20637)
!20639 = !DILocation(line: 1536, column: 36, scope: !20637)
!20640 = !DILocation(line: 1536, column: 44, scope: !20637)
!20641 = !DILocation(line: 1536, column: 47, scope: !20637)
!20642 = !DILocation(line: 1536, column: 21, scope: !20463)
!20643 = !DILocalVariable(name: "skip_stat", scope: !20644, file: !2309, line: 1549, type: !120)
!20644 = distinct !DILexicalBlock(scope: !20637, file: !2309, line: 1536, column: 70)
!20645 = !DILocation(line: 1549, column: 30, scope: !20644)
!20646 = !DILocation(line: 1549, column: 43, scope: !20644)
!20647 = !DILocation(line: 1550, column: 43, scope: !20644)
!20648 = !DILocation(line: 1550, column: 46, scope: !20644)
!20649 = !DILocation(line: 1551, column: 43, scope: !20644)
!20650 = !DILocation(line: 1551, column: 46, scope: !20644)
!20651 = !{!15681, !2984, i64 18}
!20652 = !DILocation(line: 1552, column: 43, scope: !20644)
!20653 = !DILocation(line: 1552, column: 48, scope: !20644)
!20654 = !DILocation(line: 1552, column: 46, scope: !20644)
!20655 = !DILocation(line: 0, scope: !20644)
!20656 = !DILocation(line: 1553, column: 25, scope: !20644)
!20657 = !DILocation(line: 1553, column: 28, scope: !20644)
!20658 = !DILocation(line: 1553, column: 37, scope: !20644)
!20659 = !DILocation(line: 1556, column: 40, scope: !20644)
!20660 = !DILocation(line: 1556, column: 43, scope: !20644)
!20661 = !DILocation(line: 1556, column: 54, scope: !20644)
!20662 = !DILocation(line: 1556, column: 25, scope: !20644)
!20663 = !DILocation(line: 1557, column: 47, scope: !20644)
!20664 = !DILocation(line: 1557, column: 51, scope: !20644)
!20665 = !DILocation(line: 1557, column: 50, scope: !20644)
!20666 = !DILocation(line: 1557, column: 25, scope: !20644)
!20667 = !DILocation(line: 1558, column: 17, scope: !20644)
!20668 = !DILocation(line: 1559, column: 48, scope: !20669)
!20669 = distinct !DILexicalBlock(scope: !20637, file: !2309, line: 1558, column: 24)
!20670 = !DILocation(line: 1559, column: 52, scope: !20669)
!20671 = !DILocation(line: 1559, column: 39, scope: !20669)
!20672 = !DILocation(line: 1559, column: 25, scope: !20669)
!20673 = !DILocation(line: 1559, column: 28, scope: !20669)
!20674 = !DILocation(line: 1559, column: 37, scope: !20669)
!20675 = !DILocation(line: 1563, column: 17, scope: !20463)
!20676 = !DILocation(line: 1563, column: 20, scope: !20463)
!20677 = !DILocation(line: 1563, column: 29, scope: !20463)
!20678 = !DILocation(line: 1564, column: 21, scope: !20679)
!20679 = distinct !DILexicalBlock(scope: !20463, file: !2309, line: 1564, column: 21)
!20680 = !DILocation(line: 1564, column: 26, scope: !20679)
!20681 = !DILocation(line: 1564, column: 21, scope: !20463)
!20682 = !DILocation(line: 1565, column: 39, scope: !20679)
!20683 = !DILocation(line: 1565, column: 37, scope: !20679)
!20684 = !DILocation(line: 1565, column: 30, scope: !20679)
!20685 = !DILocation(line: 1565, column: 25, scope: !20679)
!20686 = !DILocation(line: 1567, column: 42, scope: !20687)
!20687 = distinct !DILexicalBlock(scope: !20679, file: !2309, line: 1566, column: 22)
!20688 = !DILocation(line: 1567, column: 25, scope: !20687)
!20689 = !DILocation(line: 1567, column: 31, scope: !20687)
!20690 = !DILocation(line: 1567, column: 40, scope: !20687)
!20691 = !DILocation(line: 1568, column: 32, scope: !20687)
!20692 = !DILocation(line: 1568, column: 30, scope: !20687)
!20693 = !DILocation(line: 1579, column: 21, scope: !20694)
!20694 = distinct !DILexicalBlock(scope: !20463, file: !2309, line: 1579, column: 21)
!20695 = !DILocation(line: 1579, column: 28, scope: !20694)
!20696 = !DILocation(line: 1580, column: 21, scope: !20694)
!20697 = !DILocation(line: 1580, column: 25, scope: !20694)
!20698 = !DILocation(line: 1580, column: 29, scope: !20694)
!20699 = !DILocation(line: 1579, column: 21, scope: !20463)
!20700 = !DILocation(line: 1581, column: 68, scope: !20694)
!20701 = !DILocation(line: 1581, column: 73, scope: !20694)
!20702 = !DILocation(line: 1581, column: 35, scope: !20694)
!20703 = !DILocation(line: 1581, column: 33, scope: !20694)
!20704 = !DILocation(line: 1581, column: 19, scope: !20694)
!20705 = !DILocation(line: 1583, column: 17, scope: !20463)
!20706 = !DILocation(line: 1584, column: 21, scope: !20707)
!20707 = distinct !DILexicalBlock(scope: !20463, file: !2309, line: 1584, column: 21)
!20708 = !DILocation(line: 1584, column: 36, scope: !20707)
!20709 = !DILocation(line: 1584, column: 33, scope: !20707)
!20710 = !DILocation(line: 1584, column: 21, scope: !20463)
!20711 = !DILocation(line: 1588, column: 25, scope: !20712)
!20712 = distinct !DILexicalBlock(scope: !20707, file: !2309, line: 1584, column: 44)
!20713 = !DILocation(line: 1592, column: 13, scope: !20714)
!20714 = distinct !DILexicalBlock(scope: !20206, file: !2309, line: 1592, column: 13)
!20715 = !DILocation(line: 1592, column: 18, scope: !20714)
!20716 = !DILocation(line: 1592, column: 13, scope: !20206)
!20717 = !DILocation(line: 1593, column: 17, scope: !20714)
!20718 = !DILocation(line: 1593, column: 17, scope: !20719)
!20719 = distinct !DILexicalBlock(scope: !20714, file: !2309, line: 1593, column: 17)
!20720 = !DILabel(scope: !20206, name: "break_without_closedir", file: !2309, line: 1595)
!20721 = !DILocation(line: 1595, column: 2, scope: !20206)
!20722 = !DILocation(line: 1601, column: 13, scope: !20723)
!20723 = distinct !DILexicalBlock(scope: !20206, file: !2309, line: 1601, column: 13)
!20724 = !DILocation(line: 1601, column: 13, scope: !20206)
!20725 = !DILocation(line: 1602, column: 29, scope: !20723)
!20726 = !DILocation(line: 1602, column: 33, scope: !20723)
!20727 = !DILocation(line: 1602, column: 17, scope: !20723)
!20728 = !DILocation(line: 1608, column: 13, scope: !20729)
!20729 = distinct !DILexicalBlock(scope: !20206, file: !2309, line: 1608, column: 13)
!20730 = !DILocation(line: 1608, column: 13, scope: !20206)
!20731 = !DILocation(line: 1609, column: 21, scope: !20732)
!20732 = distinct !DILexicalBlock(scope: !20733, file: !2309, line: 1609, column: 21)
!20733 = distinct !DILexicalBlock(scope: !20729, file: !2309, line: 1608, column: 33)
!20734 = !DILocation(line: 1609, column: 28, scope: !20732)
!20735 = !DILocation(line: 1609, column: 32, scope: !20732)
!20736 = !DILocation(line: 1609, column: 25, scope: !20732)
!20737 = !DILocation(line: 1609, column: 44, scope: !20732)
!20738 = !DILocation(line: 1609, column: 47, scope: !20732)
!20739 = !DILocation(line: 1609, column: 54, scope: !20732)
!20740 = !DILocation(line: 1609, column: 21, scope: !20733)
!20741 = !DILocation(line: 1610, column: 25, scope: !20732)
!20742 = !DILocation(line: 1611, column: 18, scope: !20733)
!20743 = !DILocation(line: 1611, column: 21, scope: !20733)
!20744 = !DILocation(line: 1612, column: 9, scope: !20733)
!20745 = !DILocation(line: 1621, column: 14, scope: !20746)
!20746 = distinct !DILexicalBlock(scope: !20206, file: !2309, line: 1621, column: 13)
!20747 = !DILocation(line: 1621, column: 31, scope: !20746)
!20748 = !DILocation(line: 1621, column: 34, scope: !20746)
!20749 = !DILocation(line: 1621, column: 42, scope: !20746)
!20750 = !DILocation(line: 1621, column: 46, scope: !20746)
!20751 = !DILocation(line: 1621, column: 51, scope: !20746)
!20752 = !DILocation(line: 1621, column: 61, scope: !20746)
!20753 = !DILocation(line: 1621, column: 65, scope: !20746)
!20754 = !DILocation(line: 1621, column: 73, scope: !20746)
!20755 = !DILocation(line: 1622, column: 14, scope: !20746)
!20756 = !DILocation(line: 1622, column: 19, scope: !20746)
!20757 = !DILocation(line: 1622, column: 29, scope: !20746)
!20758 = !DILocation(line: 1621, column: 13, scope: !20206)
!20759 = !DILocation(line: 1623, column: 36, scope: !20746)
!20760 = !DILocation(line: 1623, column: 16, scope: !20746)
!20761 = !DILocation(line: 1624, column: 35, scope: !20746)
!20762 = !DILocation(line: 1624, column: 39, scope: !20746)
!20763 = !DILocation(line: 1624, column: 44, scope: !20746)
!20764 = !DILocation(line: 1624, column: 16, scope: !20746)
!20765 = !DILocation(line: 1625, column: 17, scope: !20766)
!20766 = distinct !DILexicalBlock(scope: !20746, file: !2309, line: 1624, column: 68)
!20767 = !DILocation(line: 1625, column: 22, scope: !20766)
!20768 = !DILocation(line: 1625, column: 31, scope: !20766)
!20769 = !DILocation(line: 1626, column: 17, scope: !20766)
!20770 = !DILocation(line: 1627, column: 27, scope: !20766)
!20771 = !DILocation(line: 1627, column: 17, scope: !20766)
!20772 = !DILocation(line: 1628, column: 17, scope: !20766)
!20773 = !DILocation(line: 1632, column: 14, scope: !20774)
!20774 = distinct !DILexicalBlock(scope: !20206, file: !2309, line: 1632, column: 13)
!20775 = !DILocation(line: 1632, column: 13, scope: !20206)
!20776 = !DILocation(line: 1633, column: 21, scope: !20777)
!20777 = distinct !DILexicalBlock(scope: !20778, file: !2309, line: 1633, column: 21)
!20778 = distinct !DILexicalBlock(scope: !20774, file: !2309, line: 1632, column: 22)
!20779 = !DILocation(line: 1633, column: 26, scope: !20777)
!20780 = !DILocation(line: 1634, column: 21, scope: !20777)
!20781 = !DILocation(line: 1634, column: 24, scope: !20777)
!20782 = !DILocation(line: 1634, column: 29, scope: !20777)
!20783 = !DILocation(line: 1634, column: 38, scope: !20777)
!20784 = !DILocation(line: 1634, column: 49, scope: !20777)
!20785 = !DILocation(line: 1634, column: 52, scope: !20777)
!20786 = !DILocation(line: 1634, column: 57, scope: !20777)
!20787 = !DILocation(line: 1634, column: 66, scope: !20777)
!20788 = !DILocation(line: 1633, column: 21, scope: !20778)
!20789 = !DILocation(line: 1635, column: 25, scope: !20777)
!20790 = !DILocation(line: 1635, column: 30, scope: !20777)
!20791 = !DILocation(line: 1635, column: 39, scope: !20777)
!20792 = !DILocation(line: 1636, column: 27, scope: !20778)
!20793 = !DILocation(line: 1636, column: 17, scope: !20778)
!20794 = !DILocation(line: 1637, column: 17, scope: !20778)
!20795 = !DILocation(line: 1640, column: 13, scope: !20796)
!20796 = distinct !DILexicalBlock(scope: !20206, file: !2309, line: 1640, column: 13)
!20797 = !DILocation(line: 1640, column: 13, scope: !20206)
!20798 = !DILocation(line: 1641, column: 17, scope: !20799)
!20799 = distinct !DILexicalBlock(scope: !20796, file: !2309, line: 1640, column: 28)
!20800 = !DILocation(line: 1641, column: 21, scope: !20799)
!20801 = !DILocation(line: 1641, column: 32, scope: !20799)
!20802 = !DILocation(line: 1642, column: 34, scope: !20799)
!20803 = !DILocation(line: 1642, column: 38, scope: !20799)
!20804 = !DILocation(line: 1642, column: 44, scope: !20799)
!20805 = !DILocation(line: 1642, column: 24, scope: !20799)
!20806 = !DILocation(line: 1642, column: 22, scope: !20799)
!20807 = !DILocation(line: 1643, column: 17, scope: !20799)
!20808 = !DILocation(line: 1643, column: 21, scope: !20799)
!20809 = !DILocation(line: 1643, column: 32, scope: !20799)
!20810 = !DILocation(line: 1644, column: 9, scope: !20799)
!20811 = !DILocation(line: 1647, column: 13, scope: !20812)
!20812 = distinct !DILexicalBlock(scope: !20206, file: !2309, line: 1647, column: 13)
!20813 = !DILocation(line: 1647, column: 17, scope: !20812)
!20814 = !DILocation(line: 1647, column: 28, scope: !20812)
!20815 = !DILocation(line: 1647, column: 31, scope: !20812)
!20816 = !DILocation(line: 1647, column: 38, scope: !20812)
!20817 = !DILocation(line: 1647, column: 13, scope: !20206)
!20818 = !DILocation(line: 1648, column: 33, scope: !20812)
!20819 = !DILocation(line: 1648, column: 37, scope: !20812)
!20820 = !DILocation(line: 1648, column: 43, scope: !20812)
!20821 = !DILocation(line: 1648, column: 24, scope: !20812)
!20822 = !DILocation(line: 1648, column: 22, scope: !20812)
!20823 = !DILocation(line: 1648, column: 17, scope: !20812)
!20824 = !DILocation(line: 1649, column: 17, scope: !20206)
!20825 = !DILocation(line: 1649, column: 9, scope: !20206)
!20826 = !DILocation(line: 1650, column: 1, scope: !20206)
!20827 = distinct !DISubprogram(name: "restore_initial_cwd", scope: !2309, file: !2309, line: 333, type: !2418, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!20828 = !DILocalVariable(name: "sp", arg: 1, scope: !20827, file: !2309, line: 333, type: !2334)
!20829 = !DILocation(line: 333, column: 27, scope: !20827)
!20830 = !DILocalVariable(name: "fail", scope: !20827, file: !2309, line: 335, type: !7)
!20831 = !DILocation(line: 335, column: 7, scope: !20827)
!20832 = !DILocation(line: 335, column: 14, scope: !20827)
!20833 = !DILocation(line: 0, scope: !20827)
!20834 = !DILocation(line: 336, column: 20, scope: !20827)
!20835 = !DILocation(line: 336, column: 24, scope: !20827)
!20836 = !DILocation(line: 336, column: 3, scope: !20827)
!20837 = !DILocation(line: 337, column: 10, scope: !20827)
!20838 = !DILocation(line: 337, column: 3, scope: !20827)
!20839 = distinct !DISubprogram(name: "fts_load", scope: !2309, file: !2309, line: 550, type: !2447, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!20840 = !DILocalVariable(name: "sp", arg: 1, scope: !20839, file: !2309, line: 550, type: !2334)
!20841 = !DILocation(line: 550, column: 16, scope: !20839)
!20842 = !DILocalVariable(name: "p", arg: 2, scope: !20839, file: !2309, line: 550, type: !2417)
!20843 = !DILocation(line: 550, column: 37, scope: !20839)
!20844 = !DILocalVariable(name: "len", scope: !20839, file: !2309, line: 552, type: !55)
!20845 = !DILocation(line: 552, column: 25, scope: !20839)
!20846 = !DILocalVariable(name: "cp", scope: !20839, file: !2309, line: 553, type: !9)
!20847 = !DILocation(line: 553, column: 24, scope: !20839)
!20848 = !DILocation(line: 562, column: 32, scope: !20839)
!20849 = !DILocation(line: 562, column: 35, scope: !20839)
!20850 = !DILocation(line: 562, column: 15, scope: !20839)
!20851 = !DILocation(line: 562, column: 18, scope: !20839)
!20852 = !DILocation(line: 562, column: 30, scope: !20839)
!20853 = !DILocation(line: 562, column: 13, scope: !20839)
!20854 = !DILocation(line: 563, column: 17, scope: !20839)
!20855 = !DILocation(line: 563, column: 21, scope: !20839)
!20856 = !DILocation(line: 563, column: 31, scope: !20839)
!20857 = !DILocation(line: 563, column: 34, scope: !20839)
!20858 = !DILocation(line: 563, column: 9, scope: !20839)
!20859 = !DILocation(line: 563, column: 44, scope: !20839)
!20860 = !DILocation(line: 563, column: 48, scope: !20839)
!20861 = !DILocation(line: 564, column: 27, scope: !20862)
!20862 = distinct !DILexicalBlock(scope: !20839, file: !2309, line: 564, column: 13)
!20863 = !DILocation(line: 564, column: 30, scope: !20862)
!20864 = !DILocation(line: 564, column: 19, scope: !20862)
!20865 = !DILocation(line: 564, column: 17, scope: !20862)
!20866 = !DILocation(line: 564, column: 46, scope: !20862)
!20867 = !DILocation(line: 564, column: 50, scope: !20862)
!20868 = !DILocation(line: 564, column: 56, scope: !20862)
!20869 = !DILocation(line: 564, column: 59, scope: !20862)
!20870 = !DILocation(line: 564, column: 53, scope: !20862)
!20871 = !DILocation(line: 564, column: 68, scope: !20862)
!20872 = !DILocation(line: 564, column: 71, scope: !20862)
!20873 = !DILocation(line: 564, column: 13, scope: !20839)
!20874 = !DILocation(line: 565, column: 30, scope: !20875)
!20875 = distinct !DILexicalBlock(scope: !20862, file: !2309, line: 564, column: 79)
!20876 = !DILocation(line: 565, column: 23, scope: !20875)
!20877 = !DILocation(line: 565, column: 21, scope: !20875)
!20878 = !DILocation(line: 566, column: 25, scope: !20875)
!20879 = !DILocation(line: 566, column: 28, scope: !20875)
!20880 = !DILocation(line: 566, column: 17, scope: !20875)
!20881 = !DILocation(line: 566, column: 38, scope: !20875)
!20882 = !DILocation(line: 566, column: 42, scope: !20875)
!20883 = !DILocation(line: 566, column: 46, scope: !20875)
!20884 = !DILocation(line: 567, column: 34, scope: !20875)
!20885 = !DILocation(line: 567, column: 17, scope: !20875)
!20886 = !DILocation(line: 567, column: 20, scope: !20875)
!20887 = !DILocation(line: 567, column: 32, scope: !20875)
!20888 = !DILocation(line: 568, column: 9, scope: !20875)
!20889 = !DILocation(line: 569, column: 40, scope: !20839)
!20890 = !DILocation(line: 569, column: 44, scope: !20839)
!20891 = !DILocation(line: 569, column: 26, scope: !20839)
!20892 = !DILocation(line: 569, column: 29, scope: !20839)
!20893 = !DILocation(line: 569, column: 38, scope: !20839)
!20894 = !DILocation(line: 569, column: 9, scope: !20839)
!20895 = !DILocation(line: 569, column: 12, scope: !20839)
!20896 = !DILocation(line: 569, column: 24, scope: !20839)
!20897 = !DILocation(line: 570, column: 1, scope: !20839)
!20898 = distinct !DISubprogram(name: "leaf_optimization", scope: !2309, file: !2309, line: 792, type: !2451, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!20899 = !DILocalVariable(name: "p", arg: 1, scope: !20898, file: !2309, line: 792, type: !2316)
!20900 = !DILocation(line: 792, column: 34, scope: !20898)
!20901 = !DILocalVariable(name: "dir_fd", arg: 2, scope: !20898, file: !2309, line: 792, type: !7)
!20902 = !DILocation(line: 792, column: 41, scope: !20898)
!20903 = !DILocation(line: 794, column: 28, scope: !20898)
!20904 = !DILocation(line: 794, column: 31, scope: !20898)
!20905 = !DILocation(line: 794, column: 11, scope: !20898)
!20906 = !DILocation(line: 794, column: 3, scope: !20898)
!20907 = !DILocation(line: 800, column: 7, scope: !20908)
!20908 = distinct !DILexicalBlock(scope: !20898, file: !2309, line: 795, column: 5)
!20909 = !DILocation(line: 804, column: 7, scope: !20908)
!20910 = !DILocation(line: 808, column: 7, scope: !20908)
!20911 = !DILocation(line: 812, column: 7, scope: !20908)
!20912 = !DILocation(line: 818, column: 7, scope: !20908)
!20913 = !DILocation(line: 822, column: 7, scope: !20908)
!20914 = !DILocation(line: 825, column: 7, scope: !20908)
!20915 = !DILocation(line: 827, column: 1, scope: !20898)
!20916 = distinct !DISubprogram(name: "enter_dir", scope: !2433, file: !2433, line: 74, type: !2466, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!20917 = !DILocalVariable(name: "fts", arg: 1, scope: !20916, file: !2433, line: 74, type: !2334)
!20918 = !DILocation(line: 74, column: 17, scope: !20916)
!20919 = !DILocalVariable(name: "ent", arg: 2, scope: !20916, file: !2433, line: 74, type: !2417)
!20920 = !DILocation(line: 74, column: 30, scope: !20916)
!20921 = !DILocation(line: 76, column: 7, scope: !20922)
!20922 = distinct !DILexicalBlock(scope: !20916, file: !2433, line: 76, column: 7)
!20923 = !DILocation(line: 76, column: 12, scope: !20922)
!20924 = !DILocation(line: 76, column: 24, scope: !20922)
!20925 = !DILocation(line: 76, column: 7, scope: !20916)
!20926 = !DILocalVariable(name: "st", scope: !20927, file: !2433, line: 78, type: !2449)
!20927 = distinct !DILexicalBlock(scope: !20922, file: !2433, line: 77, column: 5)
!20928 = !DILocation(line: 78, column: 26, scope: !20927)
!20929 = !DILocation(line: 78, column: 31, scope: !20927)
!20930 = !DILocation(line: 78, column: 36, scope: !20927)
!20931 = !DILocalVariable(name: "ad", scope: !20927, file: !2433, line: 79, type: !2468)
!20932 = !DILocation(line: 79, column: 26, scope: !20927)
!20933 = !DILocation(line: 79, column: 31, scope: !20927)
!20934 = !DILocalVariable(name: "ad_from_table", scope: !20927, file: !2433, line: 80, type: !2468)
!20935 = !DILocation(line: 80, column: 26, scope: !20927)
!20936 = !DILocation(line: 82, column: 12, scope: !20937)
!20937 = distinct !DILexicalBlock(scope: !20927, file: !2433, line: 82, column: 11)
!20938 = !DILocation(line: 82, column: 11, scope: !20927)
!20939 = !DILocation(line: 83, column: 9, scope: !20937)
!20940 = !DILocation(line: 85, column: 17, scope: !20927)
!20941 = !DILocation(line: 85, column: 21, scope: !20927)
!20942 = !DILocation(line: 85, column: 7, scope: !20927)
!20943 = !DILocation(line: 85, column: 11, scope: !20927)
!20944 = !DILocation(line: 85, column: 15, scope: !20927)
!20945 = !DILocation(line: 86, column: 17, scope: !20927)
!20946 = !DILocation(line: 86, column: 21, scope: !20927)
!20947 = !DILocation(line: 86, column: 7, scope: !20927)
!20948 = !DILocation(line: 86, column: 11, scope: !20927)
!20949 = !DILocation(line: 86, column: 15, scope: !20927)
!20950 = !DILocation(line: 87, column: 21, scope: !20927)
!20951 = !DILocation(line: 87, column: 7, scope: !20927)
!20952 = !DILocation(line: 87, column: 11, scope: !20927)
!20953 = !DILocation(line: 87, column: 19, scope: !20927)
!20954 = !{!19184, !2996, i64 16}
!20955 = !DILocation(line: 92, column: 36, scope: !20927)
!20956 = !DILocation(line: 92, column: 41, scope: !20927)
!20957 = !DILocation(line: 92, column: 51, scope: !20927)
!20958 = !DILocation(line: 92, column: 55, scope: !20927)
!20959 = !DILocation(line: 92, column: 23, scope: !20927)
!20960 = !DILocation(line: 92, column: 21, scope: !20927)
!20961 = !DILocation(line: 94, column: 11, scope: !20962)
!20962 = distinct !DILexicalBlock(scope: !20927, file: !2433, line: 94, column: 11)
!20963 = !DILocation(line: 94, column: 28, scope: !20962)
!20964 = !DILocation(line: 94, column: 25, scope: !20962)
!20965 = !DILocation(line: 94, column: 11, scope: !20927)
!20966 = !DILocation(line: 96, column: 17, scope: !20967)
!20967 = distinct !DILexicalBlock(scope: !20962, file: !2433, line: 95, column: 9)
!20968 = !DILocation(line: 96, column: 11, scope: !20967)
!20969 = !DILocation(line: 97, column: 16, scope: !20970)
!20970 = distinct !DILexicalBlock(scope: !20967, file: !2433, line: 97, column: 15)
!20971 = !DILocation(line: 97, column: 15, scope: !20967)
!20972 = !DILocation(line: 98, column: 13, scope: !20970)
!20973 = !DILocation(line: 102, column: 28, scope: !20967)
!20974 = !DILocation(line: 102, column: 43, scope: !20967)
!20975 = !DILocation(line: 102, column: 11, scope: !20967)
!20976 = !DILocation(line: 102, column: 16, scope: !20967)
!20977 = !DILocation(line: 102, column: 26, scope: !20967)
!20978 = !DILocation(line: 103, column: 11, scope: !20967)
!20979 = !DILocation(line: 103, column: 16, scope: !20967)
!20980 = !DILocation(line: 103, column: 25, scope: !20967)
!20981 = !DILocation(line: 104, column: 9, scope: !20967)
!20982 = !DILocation(line: 105, column: 5, scope: !20927)
!20983 = !DILocation(line: 108, column: 24, scope: !20984)
!20984 = distinct !DILexicalBlock(scope: !20985, file: !2433, line: 108, column: 11)
!20985 = distinct !DILexicalBlock(scope: !20922, file: !2433, line: 107, column: 5)
!20986 = !DILocation(line: 108, column: 29, scope: !20984)
!20987 = !DILocation(line: 108, column: 39, scope: !20984)
!20988 = !DILocation(line: 108, column: 46, scope: !20984)
!20989 = !DILocation(line: 108, column: 51, scope: !20984)
!20990 = !DILocation(line: 108, column: 11, scope: !20984)
!20991 = !DILocation(line: 108, column: 11, scope: !20985)
!20992 = !DILocation(line: 114, column: 28, scope: !20993)
!20993 = distinct !DILexicalBlock(scope: !20984, file: !2433, line: 109, column: 9)
!20994 = !DILocation(line: 114, column: 11, scope: !20993)
!20995 = !DILocation(line: 114, column: 16, scope: !20993)
!20996 = !DILocation(line: 114, column: 26, scope: !20993)
!20997 = !DILocation(line: 115, column: 11, scope: !20993)
!20998 = !DILocation(line: 115, column: 16, scope: !20993)
!20999 = !DILocation(line: 115, column: 25, scope: !20993)
!21000 = !DILocation(line: 116, column: 9, scope: !20993)
!21001 = !DILocation(line: 119, column: 3, scope: !20916)
!21002 = !DILocation(line: 120, column: 1, scope: !20916)
!21003 = distinct !DISubprogram(name: "cwd_advance_fd", scope: !2309, file: !2309, line: 305, type: !2469, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!21004 = !DILocalVariable(name: "sp", arg: 1, scope: !21003, file: !2309, line: 305, type: !2334)
!21005 = !DILocation(line: 305, column: 22, scope: !21003)
!21006 = !DILocalVariable(name: "fd", arg: 2, scope: !21003, file: !2309, line: 305, type: !7)
!21007 = !DILocation(line: 305, column: 30, scope: !21003)
!21008 = !DILocalVariable(name: "chdir_down_one", arg: 3, scope: !21003, file: !2309, line: 305, type: !120)
!21009 = !DILocation(line: 305, column: 39, scope: !21003)
!21010 = !DILocalVariable(name: "old", scope: !21003, file: !2309, line: 307, type: !7)
!21011 = !DILocation(line: 307, column: 7, scope: !21003)
!21012 = !DILocation(line: 307, column: 13, scope: !21003)
!21013 = !DILocation(line: 307, column: 17, scope: !21003)
!21014 = !DILocation(line: 308, column: 3, scope: !21003)
!21015 = !DILocation(line: 308, column: 3, scope: !21016)
!21016 = distinct !DILexicalBlock(scope: !21017, file: !2309, line: 308, column: 3)
!21017 = distinct !DILexicalBlock(scope: !21003, file: !2309, line: 308, column: 3)
!21018 = !DILocation(line: 308, column: 3, scope: !21017)
!21019 = !DILocation(line: 310, column: 7, scope: !21020)
!21020 = distinct !DILexicalBlock(scope: !21003, file: !2309, line: 310, column: 7)
!21021 = !DILocation(line: 310, column: 7, scope: !21003)
!21022 = !DILocalVariable(name: "prev_fd_in_slot", scope: !21023, file: !2309, line: 314, type: !7)
!21023 = distinct !DILexicalBlock(scope: !21020, file: !2309, line: 311, column: 5)
!21024 = !DILocation(line: 314, column: 11, scope: !21023)
!21025 = !DILocation(line: 314, column: 43, scope: !21023)
!21026 = !DILocation(line: 314, column: 47, scope: !21023)
!21027 = !DILocation(line: 314, column: 60, scope: !21023)
!21028 = !DILocation(line: 314, column: 29, scope: !21023)
!21029 = !DILocation(line: 316, column: 16, scope: !21030)
!21030 = distinct !DILexicalBlock(scope: !21023, file: !2309, line: 316, column: 11)
!21031 = !DILocation(line: 316, column: 13, scope: !21030)
!21032 = !DILocation(line: 316, column: 11, scope: !21023)
!21033 = !DILocation(line: 317, column: 16, scope: !21030)
!21034 = !DILocation(line: 317, column: 9, scope: !21030)
!21035 = !DILocation(line: 318, column: 5, scope: !21023)
!21036 = !DILocation(line: 319, column: 15, scope: !21037)
!21037 = distinct !DILexicalBlock(scope: !21020, file: !2309, line: 319, column: 13)
!21038 = !DILocation(line: 319, column: 13, scope: !21020)
!21039 = !DILocation(line: 321, column: 16, scope: !21040)
!21040 = distinct !DILexicalBlock(scope: !21041, file: !2309, line: 321, column: 11)
!21041 = distinct !DILexicalBlock(scope: !21037, file: !2309, line: 320, column: 5)
!21042 = !DILocation(line: 321, column: 13, scope: !21040)
!21043 = !DILocation(line: 321, column: 11, scope: !21041)
!21044 = !DILocation(line: 322, column: 16, scope: !21040)
!21045 = !DILocation(line: 322, column: 9, scope: !21040)
!21046 = !DILocation(line: 323, column: 5, scope: !21041)
!21047 = !DILocation(line: 325, column: 20, scope: !21003)
!21048 = !DILocation(line: 325, column: 3, scope: !21003)
!21049 = !DILocation(line: 325, column: 7, scope: !21003)
!21050 = !DILocation(line: 325, column: 18, scope: !21003)
!21051 = !DILocation(line: 326, column: 1, scope: !21003)
!21052 = distinct !DISubprogram(name: "filesystem_type", scope: !2309, file: !2309, line: 709, type: !2453, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!21053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statfs", file: !21054, line: 24, size: 960, elements: !21055)
!21054 = !DIFile(filename: "/usr/include/bits/statfs.h", directory: "")
!21055 = !{!21056, !21057, !21058, !21060, !21061, !21062, !21064, !21065, !21071, !21072, !21073, !21074}
!21056 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !21053, file: !21054, line: 26, baseType: !2456, size: 64)
!21057 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !21053, file: !21054, line: 27, baseType: !2456, size: 64, offset: 64)
!21058 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !21053, file: !21054, line: 29, baseType: !21059, size: 64, offset: 128)
!21059 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt_t", file: !30, line: 183, baseType: !57)
!21060 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !21053, file: !21054, line: 30, baseType: !21059, size: 64, offset: 192)
!21061 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !21053, file: !21054, line: 31, baseType: !21059, size: 64, offset: 256)
!21062 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !21053, file: !21054, line: 32, baseType: !21063, size: 64, offset: 320)
!21063 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt_t", file: !30, line: 187, baseType: !57)
!21064 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !21053, file: !21054, line: 33, baseType: !21063, size: 64, offset: 384)
!21065 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !21053, file: !21054, line: 41, baseType: !21066, size: 64, offset: 448)
!21066 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsid_t", file: !30, line: 155, baseType: !21067)
!21067 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !30, line: 155, size: 64, elements: !21068)
!21068 = !{!21069}
!21069 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !21067, file: !30, line: 155, baseType: !21070, size: 64)
!21070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !209)
!21071 = !DIDerivedType(tag: DW_TAG_member, name: "f_namelen", scope: !21053, file: !21054, line: 42, baseType: !2456, size: 64, offset: 512)
!21072 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !21053, file: !21054, line: 43, baseType: !2456, size: 64, offset: 576)
!21073 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !21053, file: !21054, line: 44, baseType: !2456, size: 64, offset: 640)
!21074 = !DIDerivedType(tag: DW_TAG_member, name: "f_spare", scope: !21053, file: !21054, line: 45, baseType: !21075, size: 256, offset: 704)
!21075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2456, size: 256, elements: !1039)
!21076 = !DILocalVariable(name: "p", arg: 1, scope: !21052, file: !2309, line: 709, type: !2316)
!21077 = !DILocation(line: 709, column: 32, scope: !21052)
!21078 = !DILocalVariable(name: "fd", arg: 2, scope: !21052, file: !2309, line: 709, type: !7)
!21079 = !DILocation(line: 709, column: 39, scope: !21052)
!21080 = !DILocalVariable(name: "sp", scope: !21052, file: !2309, line: 711, type: !2334)
!21081 = !DILocation(line: 711, column: 8, scope: !21052)
!21082 = !DILocation(line: 711, column: 13, scope: !21052)
!21083 = !DILocation(line: 711, column: 16, scope: !21052)
!21084 = !DILocalVariable(name: "h", scope: !21052, file: !2309, line: 712, type: !2457)
!21085 = !DILocation(line: 712, column: 15, scope: !21052)
!21086 = !DILocation(line: 712, column: 19, scope: !21052)
!21087 = !DILocation(line: 712, column: 23, scope: !21052)
!21088 = !DILocalVariable(name: "ent", scope: !21052, file: !2309, line: 713, type: !2459)
!21089 = !DILocation(line: 713, column: 20, scope: !21052)
!21090 = !DILocalVariable(name: "fs_buf", scope: !21052, file: !2309, line: 714, type: !21053)
!21091 = !DILocation(line: 714, column: 17, scope: !21052)
!21092 = !DILocation(line: 718, column: 8, scope: !21093)
!21093 = distinct !DILexicalBlock(scope: !21052, file: !2309, line: 718, column: 7)
!21094 = !DILocation(line: 718, column: 7, scope: !21052)
!21095 = !DILocation(line: 719, column: 5, scope: !21093)
!21096 = !DILocation(line: 721, column: 9, scope: !21097)
!21097 = distinct !DILexicalBlock(scope: !21052, file: !2309, line: 721, column: 7)
!21098 = !DILocation(line: 721, column: 7, scope: !21052)
!21099 = !DILocation(line: 723, column: 9, scope: !21097)
!21100 = !DILocation(line: 722, column: 9, scope: !21097)
!21101 = !DILocation(line: 722, column: 13, scope: !21097)
!21102 = !DILocation(line: 723, column: 7, scope: !21097)
!21103 = !DILocation(line: 722, column: 7, scope: !21097)
!21104 = !DILocation(line: 722, column: 5, scope: !21097)
!21105 = !DILocation(line: 725, column: 7, scope: !21106)
!21106 = distinct !DILexicalBlock(scope: !21052, file: !2309, line: 725, column: 7)
!21107 = !DILocation(line: 725, column: 7, scope: !21052)
!21108 = !DILocalVariable(name: "tmp", scope: !21109, file: !2309, line: 727, type: !2460)
!21109 = distinct !DILexicalBlock(scope: !21106, file: !2309, line: 726, column: 5)
!21110 = !DILocation(line: 727, column: 23, scope: !21109)
!21111 = !DILocation(line: 728, column: 20, scope: !21109)
!21112 = !DILocation(line: 728, column: 23, scope: !21109)
!21113 = !DILocation(line: 728, column: 34, scope: !21109)
!21114 = !DILocation(line: 728, column: 11, scope: !21109)
!21115 = !DILocation(line: 728, column: 18, scope: !21109)
!21116 = !{!21117, !3180, i64 0}
!21117 = !{!"dev_type", !3180, i64 0, !3180, i64 8}
!21118 = !DILocation(line: 729, column: 26, scope: !21109)
!21119 = !DILocation(line: 729, column: 29, scope: !21109)
!21120 = !DILocation(line: 729, column: 13, scope: !21109)
!21121 = !DILocation(line: 729, column: 11, scope: !21109)
!21122 = !DILocation(line: 730, column: 11, scope: !21123)
!21123 = distinct !DILexicalBlock(scope: !21109, file: !2309, line: 730, column: 11)
!21124 = !DILocation(line: 730, column: 11, scope: !21109)
!21125 = !DILocation(line: 731, column: 16, scope: !21123)
!21126 = !DILocation(line: 731, column: 21, scope: !21123)
!21127 = !{!21117, !3180, i64 8}
!21128 = !DILocation(line: 731, column: 9, scope: !21123)
!21129 = !DILocation(line: 732, column: 5, scope: !21109)
!21130 = !DILocation(line: 735, column: 7, scope: !21131)
!21131 = distinct !DILexicalBlock(scope: !21052, file: !2309, line: 735, column: 7)
!21132 = !DILocation(line: 735, column: 10, scope: !21131)
!21133 = !DILocation(line: 735, column: 14, scope: !21131)
!21134 = !DILocation(line: 735, column: 26, scope: !21131)
!21135 = !DILocation(line: 735, column: 17, scope: !21131)
!21136 = !DILocation(line: 735, column: 39, scope: !21131)
!21137 = !DILocation(line: 735, column: 7, scope: !21052)
!21138 = !DILocation(line: 736, column: 5, scope: !21131)
!21139 = !DILocation(line: 738, column: 7, scope: !21140)
!21140 = distinct !DILexicalBlock(scope: !21052, file: !2309, line: 738, column: 7)
!21141 = !DILocation(line: 738, column: 7, scope: !21052)
!21142 = !DILocalVariable(name: "t2", scope: !21143, file: !2309, line: 740, type: !2459)
!21143 = distinct !DILexicalBlock(scope: !21140, file: !2309, line: 739, column: 5)
!21144 = !DILocation(line: 740, column: 24, scope: !21143)
!21145 = !DILocation(line: 740, column: 29, scope: !21143)
!21146 = !DILocation(line: 741, column: 11, scope: !21147)
!21147 = distinct !DILexicalBlock(scope: !21143, file: !2309, line: 741, column: 11)
!21148 = !DILocation(line: 741, column: 11, scope: !21143)
!21149 = !DILocation(line: 743, column: 24, scope: !21150)
!21150 = distinct !DILexicalBlock(scope: !21147, file: !2309, line: 742, column: 9)
!21151 = !DILocation(line: 743, column: 27, scope: !21150)
!21152 = !DILocation(line: 743, column: 38, scope: !21150)
!21153 = !DILocation(line: 743, column: 11, scope: !21150)
!21154 = !DILocation(line: 743, column: 15, scope: !21150)
!21155 = !DILocation(line: 743, column: 22, scope: !21150)
!21156 = !DILocation(line: 744, column: 31, scope: !21150)
!21157 = !{!21158, !3180, i64 0}
!21158 = !{!"statfs", !3180, i64 0, !3180, i64 8, !3180, i64 16, !3180, i64 24, !3180, i64 32, !3180, i64 40, !3180, i64 48, !21159, i64 56, !3180, i64 64, !3180, i64 72, !3180, i64 80, !2984, i64 88}
!21159 = !{!"", !2984, i64 0}
!21160 = !DILocation(line: 744, column: 11, scope: !21150)
!21161 = !DILocation(line: 744, column: 15, scope: !21150)
!21162 = !DILocation(line: 744, column: 22, scope: !21150)
!21163 = !DILocation(line: 746, column: 30, scope: !21150)
!21164 = !DILocation(line: 746, column: 33, scope: !21150)
!21165 = !DILocation(line: 746, column: 17, scope: !21150)
!21166 = !DILocation(line: 746, column: 15, scope: !21150)
!21167 = !DILocation(line: 747, column: 15, scope: !21168)
!21168 = distinct !DILexicalBlock(scope: !21150, file: !2309, line: 747, column: 15)
!21169 = !DILocation(line: 747, column: 15, scope: !21150)
!21170 = !DILocation(line: 748, column: 13, scope: !21168)
!21171 = !DILocation(line: 748, column: 13, scope: !21172)
!21172 = distinct !DILexicalBlock(scope: !21173, file: !2309, line: 748, column: 13)
!21173 = distinct !DILexicalBlock(scope: !21168, file: !2309, line: 748, column: 13)
!21174 = !DILocation(line: 748, column: 13, scope: !21173)
!21175 = !DILocation(line: 750, column: 19, scope: !21168)
!21176 = !DILocation(line: 750, column: 13, scope: !21168)
!21177 = !DILocation(line: 751, column: 9, scope: !21150)
!21178 = !DILocation(line: 752, column: 5, scope: !21143)
!21179 = !DILocation(line: 754, column: 17, scope: !21052)
!21180 = !DILocation(line: 754, column: 3, scope: !21052)
!21181 = !DILocation(line: 755, column: 1, scope: !21052)
!21182 = distinct !DISubprogram(name: "dev_type_hash", scope: !2309, file: !2309, line: 689, type: !547, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!21183 = !DILocalVariable(name: "x", arg: 1, scope: !21182, file: !2309, line: 689, type: !425)
!21184 = !DILocation(line: 689, column: 28, scope: !21182)
!21185 = !DILocalVariable(name: "table_size", arg: 2, scope: !21182, file: !2309, line: 689, type: !55)
!21186 = !DILocation(line: 689, column: 38, scope: !21182)
!21187 = !DILocalVariable(name: "ax", scope: !21182, file: !2309, line: 691, type: !2464)
!21188 = !DILocation(line: 691, column: 26, scope: !21182)
!21189 = !DILocation(line: 691, column: 31, scope: !21182)
!21190 = !DILocalVariable(name: "dev", scope: !21182, file: !2309, line: 692, type: !456)
!21191 = !DILocation(line: 692, column: 13, scope: !21182)
!21192 = !DILocation(line: 692, column: 19, scope: !21182)
!21193 = !DILocation(line: 692, column: 23, scope: !21182)
!21194 = !DILocation(line: 693, column: 10, scope: !21182)
!21195 = !DILocation(line: 693, column: 16, scope: !21182)
!21196 = !DILocation(line: 693, column: 14, scope: !21182)
!21197 = !DILocation(line: 693, column: 3, scope: !21182)
!21198 = distinct !DISubprogram(name: "dev_type_compare", scope: !2309, file: !2309, line: 697, type: !549, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!21199 = !DILocalVariable(name: "x", arg: 1, scope: !21198, file: !2309, line: 697, type: !425)
!21200 = !DILocation(line: 697, column: 31, scope: !21198)
!21201 = !DILocalVariable(name: "y", arg: 2, scope: !21198, file: !2309, line: 697, type: !425)
!21202 = !DILocation(line: 697, column: 46, scope: !21198)
!21203 = !DILocalVariable(name: "ax", scope: !21198, file: !2309, line: 699, type: !2464)
!21204 = !DILocation(line: 699, column: 26, scope: !21198)
!21205 = !DILocation(line: 699, column: 31, scope: !21198)
!21206 = !DILocalVariable(name: "ay", scope: !21198, file: !2309, line: 700, type: !2464)
!21207 = !DILocation(line: 700, column: 26, scope: !21198)
!21208 = !DILocation(line: 700, column: 31, scope: !21198)
!21209 = !DILocation(line: 701, column: 10, scope: !21198)
!21210 = !DILocation(line: 701, column: 14, scope: !21198)
!21211 = !DILocation(line: 701, column: 24, scope: !21198)
!21212 = !DILocation(line: 701, column: 28, scope: !21198)
!21213 = !DILocation(line: 701, column: 21, scope: !21198)
!21214 = !DILocation(line: 701, column: 3, scope: !21198)
!21215 = distinct !DISubprogram(name: "set_stat_type", scope: !2309, file: !2309, line: 1234, type: !2479, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!21216 = !DILocalVariable(name: "st", arg: 1, scope: !21215, file: !2309, line: 1234, type: !2481)
!21217 = !DILocation(line: 1234, column: 29, scope: !21215)
!21218 = !DILocalVariable(name: "dtype", arg: 2, scope: !21215, file: !2309, line: 1234, type: !70)
!21219 = !DILocation(line: 1234, column: 46, scope: !21215)
!21220 = !DILocalVariable(name: "type", scope: !21215, file: !2309, line: 1236, type: !160)
!21221 = !DILocation(line: 1236, column: 10, scope: !21215)
!21222 = !DILocation(line: 1237, column: 11, scope: !21215)
!21223 = !DILocation(line: 1237, column: 3, scope: !21215)
!21224 = !DILocation(line: 1240, column: 12, scope: !21225)
!21225 = distinct !DILexicalBlock(scope: !21215, file: !2309, line: 1238, column: 5)
!21226 = !DILocation(line: 1241, column: 7, scope: !21225)
!21227 = !DILocation(line: 1243, column: 12, scope: !21225)
!21228 = !DILocation(line: 1244, column: 7, scope: !21225)
!21229 = !DILocation(line: 1246, column: 12, scope: !21225)
!21230 = !DILocation(line: 1247, column: 7, scope: !21225)
!21231 = !DILocation(line: 1249, column: 12, scope: !21225)
!21232 = !DILocation(line: 1250, column: 7, scope: !21225)
!21233 = !DILocation(line: 1252, column: 12, scope: !21225)
!21234 = !DILocation(line: 1253, column: 7, scope: !21225)
!21235 = !DILocation(line: 1255, column: 12, scope: !21225)
!21236 = !DILocation(line: 1256, column: 7, scope: !21225)
!21237 = !DILocation(line: 1258, column: 12, scope: !21225)
!21238 = !DILocation(line: 1259, column: 7, scope: !21225)
!21239 = !DILocation(line: 1261, column: 12, scope: !21225)
!21240 = !DILocation(line: 1262, column: 5, scope: !21225)
!21241 = !DILocation(line: 1263, column: 17, scope: !21215)
!21242 = !DILocation(line: 1263, column: 3, scope: !21215)
!21243 = !DILocation(line: 1263, column: 7, scope: !21215)
!21244 = !DILocation(line: 1263, column: 15, scope: !21215)
!21245 = !DILocation(line: 1264, column: 1, scope: !21215)
!21246 = distinct !DISubprogram(name: "dirent_inode_sort_may_be_useful", scope: !2309, file: !2309, line: 762, type: !2482, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!21247 = !DILocalVariable(name: "p", arg: 1, scope: !21246, file: !2309, line: 762, type: !2316)
!21248 = !DILocation(line: 762, column: 48, scope: !21246)
!21249 = !DILocalVariable(name: "dir_fd", arg: 2, scope: !21246, file: !2309, line: 762, type: !7)
!21250 = !DILocation(line: 762, column: 55, scope: !21246)
!21251 = !DILocation(line: 770, column: 28, scope: !21246)
!21252 = !DILocation(line: 770, column: 31, scope: !21246)
!21253 = !DILocation(line: 770, column: 11, scope: !21246)
!21254 = !DILocation(line: 770, column: 3, scope: !21246)
!21255 = !DILocation(line: 777, column: 7, scope: !21256)
!21256 = distinct !DILexicalBlock(scope: !21246, file: !2309, line: 771, column: 5)
!21257 = !DILocation(line: 780, column: 7, scope: !21256)
!21258 = !DILocation(line: 782, column: 1, scope: !21246)
!21259 = distinct !DISubprogram(name: "fts_padjust", scope: !2309, file: !2309, line: 1997, type: !2447, scopeLine: 1998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!21260 = !DILocalVariable(name: "sp", arg: 1, scope: !21259, file: !2309, line: 1997, type: !2334)
!21261 = !DILocation(line: 1997, column: 19, scope: !21259)
!21262 = !DILocalVariable(name: "head", arg: 2, scope: !21259, file: !2309, line: 1997, type: !2417)
!21263 = !DILocation(line: 1997, column: 31, scope: !21259)
!21264 = !DILocalVariable(name: "p", scope: !21259, file: !2309, line: 1999, type: !2417)
!21265 = !DILocation(line: 1999, column: 17, scope: !21259)
!21266 = !DILocalVariable(name: "addr", scope: !21259, file: !2309, line: 2000, type: !9)
!21267 = !DILocation(line: 2000, column: 15, scope: !21259)
!21268 = !DILocation(line: 2000, column: 22, scope: !21259)
!21269 = !DILocation(line: 2000, column: 26, scope: !21259)
!21270 = !DILocation(line: 2010, column: 18, scope: !21271)
!21271 = distinct !DILexicalBlock(scope: !21259, file: !2309, line: 2010, column: 9)
!21272 = !DILocation(line: 2010, column: 22, scope: !21271)
!21273 = !DILocation(line: 2010, column: 16, scope: !21271)
!21274 = !DILocation(line: 2010, column: 14, scope: !21271)
!21275 = !DILocation(line: 2010, column: 33, scope: !21276)
!21276 = distinct !DILexicalBlock(scope: !21271, file: !2309, line: 2010, column: 9)
!21277 = !DILocation(line: 2010, column: 9, scope: !21271)
!21278 = !DILocation(line: 2011, column: 17, scope: !21276)
!21279 = !DILocation(line: 2011, column: 17, scope: !21280)
!21280 = distinct !DILexicalBlock(scope: !21281, file: !2309, line: 2011, column: 17)
!21281 = distinct !DILexicalBlock(scope: !21276, file: !2309, line: 2011, column: 17)
!21282 = !DILocation(line: 2011, column: 17, scope: !21281)
!21283 = !DILocation(line: 2011, column: 17, scope: !21284)
!21284 = distinct !DILexicalBlock(scope: !21280, file: !2309, line: 2011, column: 17)
!21285 = !DILocation(line: 2010, column: 40, scope: !21276)
!21286 = !DILocation(line: 2010, column: 43, scope: !21276)
!21287 = !DILocation(line: 2010, column: 38, scope: !21276)
!21288 = !DILocation(line: 2010, column: 9, scope: !21276)
!21289 = distinct !{!21289, !21277, !21290}
!21290 = !DILocation(line: 2011, column: 17, scope: !21271)
!21291 = !DILocation(line: 2014, column: 18, scope: !21292)
!21292 = distinct !DILexicalBlock(scope: !21259, file: !2309, line: 2014, column: 9)
!21293 = !DILocation(line: 2014, column: 16, scope: !21292)
!21294 = !DILocation(line: 2014, column: 14, scope: !21292)
!21295 = !DILocation(line: 2014, column: 24, scope: !21296)
!21296 = distinct !DILexicalBlock(scope: !21292, file: !2309, line: 2014, column: 9)
!21297 = !DILocation(line: 2014, column: 27, scope: !21296)
!21298 = !DILocation(line: 2014, column: 37, scope: !21296)
!21299 = !DILocation(line: 2014, column: 9, scope: !21292)
!21300 = !DILocation(line: 2015, column: 17, scope: !21301)
!21301 = distinct !DILexicalBlock(scope: !21296, file: !2309, line: 2014, column: 56)
!21302 = !DILocation(line: 2015, column: 17, scope: !21303)
!21303 = distinct !DILexicalBlock(scope: !21304, file: !2309, line: 2015, column: 17)
!21304 = distinct !DILexicalBlock(scope: !21301, file: !2309, line: 2015, column: 17)
!21305 = !DILocation(line: 2015, column: 17, scope: !21304)
!21306 = !DILocation(line: 2015, column: 17, scope: !21307)
!21307 = distinct !DILexicalBlock(scope: !21303, file: !2309, line: 2015, column: 17)
!21308 = !DILocation(line: 2016, column: 21, scope: !21301)
!21309 = !DILocation(line: 2016, column: 24, scope: !21301)
!21310 = !DILocation(line: 2016, column: 35, scope: !21301)
!21311 = !DILocation(line: 2016, column: 38, scope: !21301)
!21312 = !DILocation(line: 2016, column: 49, scope: !21301)
!21313 = !DILocation(line: 2016, column: 52, scope: !21301)
!21314 = !DILocation(line: 2016, column: 19, scope: !21301)
!21315 = !DILocation(line: 2014, column: 9, scope: !21296)
!21316 = distinct !{!21316, !21299, !21317}
!21317 = !DILocation(line: 2017, column: 9, scope: !21292)
!21318 = !DILocation(line: 2018, column: 1, scope: !21259)
!21319 = distinct !DISubprogram(name: "fts_compare_ino", scope: !2309, file: !2309, line: 1225, type: !2350, scopeLine: 1226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!21320 = !DILocalVariable(name: "a", arg: 1, scope: !21319, file: !2309, line: 1225, type: !2352)
!21321 = !DILocation(line: 1225, column: 41, scope: !21319)
!21322 = !DILocalVariable(name: "b", arg: 2, scope: !21319, file: !2309, line: 1225, type: !2352)
!21323 = !DILocation(line: 1225, column: 67, scope: !21319)
!21324 = !DILocation(line: 1227, column: 11, scope: !21319)
!21325 = !DILocation(line: 1227, column: 17, scope: !21319)
!21326 = !DILocation(line: 1227, column: 28, scope: !21319)
!21327 = !DILocation(line: 1227, column: 37, scope: !21319)
!21328 = !DILocation(line: 1227, column: 43, scope: !21319)
!21329 = !DILocation(line: 1227, column: 54, scope: !21319)
!21330 = !DILocation(line: 1227, column: 35, scope: !21319)
!21331 = !DILocation(line: 1228, column: 13, scope: !21319)
!21332 = !DILocation(line: 1228, column: 19, scope: !21319)
!21333 = !DILocation(line: 1228, column: 30, scope: !21319)
!21334 = !DILocation(line: 1228, column: 39, scope: !21319)
!21335 = !DILocation(line: 1228, column: 45, scope: !21319)
!21336 = !DILocation(line: 1228, column: 56, scope: !21319)
!21337 = !DILocation(line: 1228, column: 37, scope: !21319)
!21338 = !DILocation(line: 1227, column: 3, scope: !21319)
!21339 = distinct !DISubprogram(name: "rpl_fts_set", scope: !2309, file: !2309, line: 1130, type: !2422, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!21340 = !DILocalVariable(name: "sp", arg: 1, scope: !21339, file: !2309, line: 1130, type: !2334)
!21341 = !DILocation(line: 1130, column: 14, scope: !21339)
!21342 = !DILocalVariable(name: "p", arg: 2, scope: !21339, file: !2309, line: 1130, type: !2417)
!21343 = !DILocation(line: 1130, column: 37, scope: !21339)
!21344 = !DILocalVariable(name: "instr", arg: 3, scope: !21339, file: !2309, line: 1130, type: !7)
!21345 = !DILocation(line: 1130, column: 44, scope: !21339)
!21346 = !DILocation(line: 1132, column: 13, scope: !21347)
!21347 = distinct !DILexicalBlock(scope: !21339, file: !2309, line: 1132, column: 13)
!21348 = !DILocation(line: 1132, column: 19, scope: !21347)
!21349 = !DILocation(line: 1132, column: 24, scope: !21347)
!21350 = !DILocation(line: 1132, column: 27, scope: !21347)
!21351 = !DILocation(line: 1132, column: 33, scope: !21347)
!21352 = !DILocation(line: 1132, column: 46, scope: !21347)
!21353 = !DILocation(line: 1132, column: 49, scope: !21347)
!21354 = !DILocation(line: 1132, column: 55, scope: !21347)
!21355 = !DILocation(line: 1132, column: 69, scope: !21347)
!21356 = !DILocation(line: 1133, column: 13, scope: !21347)
!21357 = !DILocation(line: 1133, column: 19, scope: !21347)
!21358 = !DILocation(line: 1133, column: 34, scope: !21347)
!21359 = !DILocation(line: 1133, column: 37, scope: !21347)
!21360 = !DILocation(line: 1133, column: 43, scope: !21347)
!21361 = !DILocation(line: 1132, column: 13, scope: !21339)
!21362 = !DILocation(line: 1134, column: 17, scope: !21363)
!21363 = distinct !DILexicalBlock(scope: !21347, file: !2309, line: 1133, column: 56)
!21364 = !DILocation(line: 1135, column: 17, scope: !21363)
!21365 = !DILocation(line: 1137, column: 24, scope: !21339)
!21366 = !DILocation(line: 1137, column: 9, scope: !21339)
!21367 = !DILocation(line: 1137, column: 12, scope: !21339)
!21368 = !DILocation(line: 1137, column: 22, scope: !21339)
!21369 = !DILocation(line: 1138, column: 9, scope: !21339)
!21370 = !DILocation(line: 1139, column: 1, scope: !21339)
!21371 = distinct !DISubprogram(name: "rpl_fts_children", scope: !2309, file: !2309, line: 1142, type: !2424, scopeLine: 1143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2305, retainedNodes: !143)
!21372 = !DILocalVariable(name: "sp", arg: 1, scope: !21371, file: !2309, line: 1142, type: !2334)
!21373 = !DILocation(line: 1142, column: 29, scope: !21371)
!21374 = !DILocalVariable(name: "instr", arg: 2, scope: !21371, file: !2309, line: 1142, type: !7)
!21375 = !DILocation(line: 1142, column: 37, scope: !21371)
!21376 = !DILocalVariable(name: "p", scope: !21371, file: !2309, line: 1144, type: !2417)
!21377 = !DILocation(line: 1144, column: 26, scope: !21371)
!21378 = !DILocalVariable(name: "fd", scope: !21371, file: !2309, line: 1145, type: !7)
!21379 = !DILocation(line: 1145, column: 13, scope: !21371)
!21380 = !DILocation(line: 1147, column: 13, scope: !21381)
!21381 = distinct !DILexicalBlock(scope: !21371, file: !2309, line: 1147, column: 13)
!21382 = !DILocation(line: 1147, column: 19, scope: !21381)
!21383 = !DILocation(line: 1147, column: 24, scope: !21381)
!21384 = !DILocation(line: 1147, column: 27, scope: !21381)
!21385 = !DILocation(line: 1147, column: 33, scope: !21381)
!21386 = !DILocation(line: 1147, column: 13, scope: !21371)
!21387 = !DILocation(line: 1148, column: 17, scope: !21388)
!21388 = distinct !DILexicalBlock(scope: !21381, file: !2309, line: 1147, column: 50)
!21389 = !DILocation(line: 1149, column: 17, scope: !21388)
!21390 = !DILocation(line: 1153, column: 13, scope: !21371)
!21391 = !DILocation(line: 1153, column: 17, scope: !21371)
!21392 = !DILocation(line: 1153, column: 11, scope: !21371)
!21393 = !DILocation(line: 1159, column: 9, scope: !21371)
!21394 = !DILocation(line: 1162, column: 13, scope: !21395)
!21395 = distinct !DILexicalBlock(scope: !21371, file: !2309, line: 1162, column: 13)
!21396 = !DILocation(line: 1162, column: 13, scope: !21371)
!21397 = !DILocation(line: 1163, column: 17, scope: !21395)
!21398 = !DILocation(line: 1166, column: 13, scope: !21399)
!21399 = distinct !DILexicalBlock(scope: !21371, file: !2309, line: 1166, column: 13)
!21400 = !DILocation(line: 1166, column: 16, scope: !21399)
!21401 = !DILocation(line: 1166, column: 25, scope: !21399)
!21402 = !DILocation(line: 1166, column: 13, scope: !21371)
!21403 = !DILocation(line: 1167, column: 25, scope: !21399)
!21404 = !DILocation(line: 1167, column: 28, scope: !21399)
!21405 = !DILocation(line: 1167, column: 17, scope: !21399)
!21406 = !DILocation(line: 1174, column: 13, scope: !21407)
!21407 = distinct !DILexicalBlock(scope: !21371, file: !2309, line: 1174, column: 13)
!21408 = !DILocation(line: 1174, column: 16, scope: !21407)
!21409 = !DILocation(line: 1174, column: 25, scope: !21407)
!21410 = !DILocation(line: 1174, column: 13, scope: !21371)
!21411 = !DILocation(line: 1175, column: 17, scope: !21407)
!21412 = !DILocation(line: 1178, column: 13, scope: !21413)
!21413 = distinct !DILexicalBlock(scope: !21371, file: !2309, line: 1178, column: 13)
!21414 = !DILocation(line: 1178, column: 17, scope: !21413)
!21415 = !DILocation(line: 1178, column: 27, scope: !21413)
!21416 = !DILocation(line: 1178, column: 13, scope: !21371)
!21417 = !DILocation(line: 1179, column: 27, scope: !21413)
!21418 = !DILocation(line: 1179, column: 31, scope: !21413)
!21419 = !DILocation(line: 1179, column: 17, scope: !21413)
!21420 = !DILocation(line: 1181, column: 13, scope: !21421)
!21421 = distinct !DILexicalBlock(scope: !21371, file: !2309, line: 1181, column: 13)
!21422 = !DILocation(line: 1181, column: 19, scope: !21421)
!21423 = !DILocation(line: 1181, column: 13, scope: !21371)
!21424 = !DILocation(line: 1182, column: 17, scope: !21425)
!21425 = distinct !DILexicalBlock(scope: !21421, file: !2309, line: 1181, column: 36)
!21426 = !DILocation(line: 1183, column: 23, scope: !21425)
!21427 = !DILocation(line: 1184, column: 9, scope: !21425)
!21428 = !DILocation(line: 1185, column: 23, scope: !21421)
!21429 = !DILocation(line: 1194, column: 13, scope: !21430)
!21430 = distinct !DILexicalBlock(scope: !21371, file: !2309, line: 1194, column: 13)
!21431 = !DILocation(line: 1194, column: 16, scope: !21430)
!21432 = !DILocation(line: 1194, column: 26, scope: !21430)
!21433 = !DILocation(line: 1194, column: 43, scope: !21430)
!21434 = !DILocation(line: 1194, column: 46, scope: !21430)
!21435 = !DILocation(line: 1194, column: 49, scope: !21430)
!21436 = !DILocation(line: 1194, column: 64, scope: !21430)
!21437 = !DILocation(line: 1194, column: 71, scope: !21430)
!21438 = !DILocation(line: 1195, column: 13, scope: !21430)
!21439 = !DILocation(line: 1194, column: 13, scope: !21371)
!21440 = !DILocation(line: 1196, column: 51, scope: !21430)
!21441 = !DILocation(line: 1196, column: 55, scope: !21430)
!21442 = !DILocation(line: 1196, column: 41, scope: !21430)
!21443 = !DILocation(line: 1196, column: 25, scope: !21430)
!21444 = !DILocation(line: 1196, column: 29, scope: !21430)
!21445 = !DILocation(line: 1196, column: 39, scope: !21430)
!21446 = !DILocation(line: 1196, column: 17, scope: !21430)
!21447 = !DILocation(line: 1198, column: 28, scope: !21448)
!21448 = distinct !DILexicalBlock(scope: !21371, file: !2309, line: 1198, column: 13)
!21449 = !DILocation(line: 1198, column: 19, scope: !21448)
!21450 = !DILocation(line: 1198, column: 17, scope: !21448)
!21451 = !DILocation(line: 1198, column: 38, scope: !21448)
!21452 = !DILocation(line: 1198, column: 13, scope: !21371)
!21453 = !DILocation(line: 1199, column: 25, scope: !21448)
!21454 = !DILocation(line: 1199, column: 29, scope: !21448)
!21455 = !DILocation(line: 1199, column: 39, scope: !21448)
!21456 = !DILocation(line: 1199, column: 17, scope: !21448)
!21457 = !DILocation(line: 1200, column: 35, scope: !21371)
!21458 = !DILocation(line: 1200, column: 39, scope: !21371)
!21459 = !DILocation(line: 1200, column: 25, scope: !21371)
!21460 = !DILocation(line: 1200, column: 9, scope: !21371)
!21461 = !DILocation(line: 1200, column: 13, scope: !21371)
!21462 = !DILocation(line: 1200, column: 23, scope: !21371)
!21463 = !DILocation(line: 1201, column: 13, scope: !21464)
!21464 = distinct !DILexicalBlock(scope: !21371, file: !2309, line: 1201, column: 13)
!21465 = !DILocation(line: 1201, column: 13, scope: !21371)
!21466 = !DILocation(line: 1203, column: 29, scope: !21467)
!21467 = distinct !DILexicalBlock(scope: !21464, file: !2309, line: 1202, column: 11)
!21468 = !DILocation(line: 1203, column: 33, scope: !21467)
!21469 = !DILocation(line: 1203, column: 13, scope: !21467)
!21470 = !DILocation(line: 1204, column: 11, scope: !21467)
!21471 = !DILocation(line: 1207, column: 24, scope: !21472)
!21472 = distinct !DILexicalBlock(scope: !21473, file: !2309, line: 1207, column: 17)
!21473 = distinct !DILexicalBlock(scope: !21464, file: !2309, line: 1206, column: 11)
!21474 = !DILocation(line: 1207, column: 17, scope: !21472)
!21475 = !DILocation(line: 1207, column: 17, scope: !21473)
!21476 = !DILocalVariable(name: "saved_errno", scope: !21477, file: !2309, line: 1209, type: !7)
!21477 = distinct !DILexicalBlock(scope: !21472, file: !2309, line: 1208, column: 15)
!21478 = !DILocation(line: 1209, column: 21, scope: !21477)
!21479 = !DILocation(line: 1209, column: 35, scope: !21477)
!21480 = !DILocation(line: 1210, column: 24, scope: !21477)
!21481 = !DILocation(line: 1210, column: 17, scope: !21477)
!21482 = !DILocation(line: 1211, column: 17, scope: !21477)
!21483 = !DILocation(line: 1212, column: 17, scope: !21477)
!21484 = !DILocation(line: 1214, column: 20, scope: !21473)
!21485 = !DILocation(line: 1214, column: 13, scope: !21473)
!21486 = !DILocation(line: 1216, column: 17, scope: !21371)
!21487 = !DILocation(line: 1216, column: 21, scope: !21371)
!21488 = !DILocation(line: 1216, column: 9, scope: !21371)
!21489 = !DILocation(line: 1217, column: 1, scope: !21371)
!21490 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !21491, file: !21491, line: 385, type: !2502, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2499, retainedNodes: !143)
!21491 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21492 = !DILocalVariable(name: "pwc", arg: 1, scope: !21490, file: !21491, line: 385, type: !2504)
!21493 = !DILocation(line: 385, column: 23, scope: !21490)
!21494 = !DILocalVariable(name: "s", arg: 2, scope: !21490, file: !21491, line: 385, type: !115)
!21495 = !DILocation(line: 385, column: 40, scope: !21490)
!21496 = !DILocalVariable(name: "n", arg: 3, scope: !21490, file: !21491, line: 385, type: !55)
!21497 = !DILocation(line: 385, column: 50, scope: !21490)
!21498 = !DILocalVariable(name: "ps", arg: 4, scope: !21490, file: !21491, line: 385, type: !2505)
!21499 = !DILocation(line: 385, column: 64, scope: !21490)
!21500 = !DILocalVariable(name: "ret", scope: !21490, file: !21491, line: 387, type: !55)
!21501 = !DILocation(line: 387, column: 10, scope: !21490)
!21502 = !DILocalVariable(name: "wc", scope: !21490, file: !21491, line: 388, type: !1041)
!21503 = !DILocation(line: 388, column: 11, scope: !21490)
!21504 = !DILocation(line: 404, column: 9, scope: !21505)
!21505 = distinct !DILexicalBlock(scope: !21490, file: !21491, line: 404, column: 7)
!21506 = !DILocation(line: 404, column: 7, scope: !21490)
!21507 = !DILocation(line: 405, column: 9, scope: !21505)
!21508 = !DILocation(line: 405, column: 5, scope: !21505)
!21509 = !DILocation(line: 439, column: 18, scope: !21490)
!21510 = !DILocation(line: 439, column: 23, scope: !21490)
!21511 = !DILocation(line: 439, column: 26, scope: !21490)
!21512 = !DILocation(line: 439, column: 29, scope: !21490)
!21513 = !DILocation(line: 439, column: 9, scope: !21490)
!21514 = !DILocation(line: 439, column: 7, scope: !21490)
!21515 = !DILocation(line: 447, column: 22, scope: !21516)
!21516 = distinct !DILexicalBlock(scope: !21490, file: !21491, line: 447, column: 7)
!21517 = !DILocation(line: 447, column: 19, scope: !21516)
!21518 = !DILocation(line: 447, column: 26, scope: !21516)
!21519 = !DILocation(line: 447, column: 29, scope: !21516)
!21520 = !DILocation(line: 447, column: 31, scope: !21516)
!21521 = !DILocation(line: 447, column: 36, scope: !21516)
!21522 = !DILocation(line: 447, column: 41, scope: !21516)
!21523 = !DILocation(line: 447, column: 7, scope: !21490)
!21524 = !DILocalVariable(name: "uc", scope: !21525, file: !21491, line: 449, type: !466)
!21525 = distinct !DILexicalBlock(scope: !21516, file: !21491, line: 448, column: 5)
!21526 = !DILocation(line: 449, column: 21, scope: !21525)
!21527 = !DILocation(line: 449, column: 27, scope: !21525)
!21528 = !DILocation(line: 449, column: 26, scope: !21525)
!21529 = !DILocation(line: 450, column: 14, scope: !21525)
!21530 = !DILocation(line: 450, column: 8, scope: !21525)
!21531 = !DILocation(line: 450, column: 12, scope: !21525)
!21532 = !DILocation(line: 451, column: 7, scope: !21525)
!21533 = !DILocation(line: 455, column: 10, scope: !21490)
!21534 = !DILocation(line: 455, column: 3, scope: !21490)
!21535 = !DILocation(line: 456, column: 1, scope: !21490)
!21536 = distinct !DISubprogram(name: "acl_access_nontrivial", scope: !21537, file: !21537, line: 47, type: !2519, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2516, retainedNodes: !143)
!21537 = !DIFile(filename: "lib/acl-internal.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21538 = !DILocalVariable(name: "acl", arg: 1, scope: !21536, file: !21537, line: 47, type: !2521)
!21539 = !DILocation(line: 47, column: 30, scope: !21536)
!21540 = !DILocalVariable(name: "ace", scope: !21536, file: !21537, line: 56, type: !2525)
!21541 = !DILocation(line: 56, column: 15, scope: !21536)
!21542 = !DILocalVariable(name: "got_one", scope: !21536, file: !21537, line: 57, type: !7)
!21543 = !DILocation(line: 57, column: 7, scope: !21536)
!21544 = !DILocation(line: 59, column: 33, scope: !21545)
!21545 = distinct !DILexicalBlock(scope: !21536, file: !21537, line: 59, column: 3)
!21546 = !DILocation(line: 59, column: 18, scope: !21545)
!21547 = !DILocation(line: 59, column: 16, scope: !21545)
!21548 = !DILocation(line: 59, column: 8, scope: !21545)
!21549 = !DILocation(line: 60, column: 8, scope: !21550)
!21550 = distinct !DILexicalBlock(scope: !21545, file: !21537, line: 59, column: 3)
!21551 = !DILocation(line: 60, column: 16, scope: !21550)
!21552 = !DILocation(line: 59, column: 3, scope: !21545)
!21553 = !DILocalVariable(name: "tag", scope: !21554, file: !21537, line: 63, type: !2528)
!21554 = distinct !DILexicalBlock(scope: !21550, file: !21537, line: 62, column: 5)
!21555 = !DILocation(line: 63, column: 17, scope: !21554)
!21556 = !DILocation(line: 64, column: 29, scope: !21557)
!21557 = distinct !DILexicalBlock(scope: !21554, file: !21537, line: 64, column: 11)
!21558 = !DILocation(line: 64, column: 11, scope: !21557)
!21559 = !DILocation(line: 64, column: 40, scope: !21557)
!21560 = !DILocation(line: 64, column: 11, scope: !21554)
!21561 = !DILocation(line: 65, column: 9, scope: !21557)
!21562 = !DILocation(line: 66, column: 13, scope: !21563)
!21563 = distinct !DILexicalBlock(scope: !21554, file: !21537, line: 66, column: 11)
!21564 = !DILocation(line: 66, column: 17, scope: !21563)
!21565 = !DILocation(line: 66, column: 33, scope: !21563)
!21566 = !DILocation(line: 66, column: 36, scope: !21563)
!21567 = !DILocation(line: 66, column: 40, scope: !21563)
!21568 = !DILocation(line: 66, column: 57, scope: !21563)
!21569 = !DILocation(line: 66, column: 60, scope: !21563)
!21570 = !DILocation(line: 66, column: 64, scope: !21563)
!21571 = !DILocation(line: 66, column: 11, scope: !21554)
!21572 = !DILocation(line: 67, column: 9, scope: !21563)
!21573 = !DILocation(line: 68, column: 5, scope: !21554)
!21574 = !DILocation(line: 61, column: 33, scope: !21550)
!21575 = !DILocation(line: 61, column: 18, scope: !21550)
!21576 = !DILocation(line: 61, column: 16, scope: !21550)
!21577 = !DILocation(line: 59, column: 3, scope: !21550)
!21578 = distinct !{!21578, !21552, !21579}
!21579 = !DILocation(line: 68, column: 5, scope: !21545)
!21580 = !DILocation(line: 69, column: 10, scope: !21536)
!21581 = !DILocation(line: 69, column: 3, scope: !21536)
!21582 = !DILocation(line: 116, column: 1, scope: !21536)
!21583 = distinct !DISubprogram(name: "acl_default_nontrivial", scope: !21537, file: !21537, line: 119, type: !2519, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2516, retainedNodes: !143)
!21584 = !DILocalVariable(name: "acl", arg: 1, scope: !21583, file: !21537, line: 119, type: !2521)
!21585 = !DILocation(line: 119, column: 31, scope: !21583)
!21586 = !DILocation(line: 122, column: 24, scope: !21583)
!21587 = !DILocation(line: 122, column: 11, scope: !21583)
!21588 = !DILocation(line: 122, column: 29, scope: !21583)
!21589 = !DILocation(line: 122, column: 3, scope: !21583)
!21590 = distinct !DISubprogram(name: "free_permission_context", scope: !21537, file: !21537, line: 479, type: !2529, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2516, retainedNodes: !143)
!21591 = !DILocalVariable(name: "ctx", arg: 1, scope: !21590, file: !21537, line: 479, type: !2531)
!21592 = !DILocation(line: 479, column: 53, scope: !21590)
!21593 = !DILocation(line: 483, column: 7, scope: !21594)
!21594 = distinct !DILexicalBlock(scope: !21590, file: !21537, line: 483, column: 7)
!21595 = !DILocation(line: 483, column: 12, scope: !21594)
!21596 = !{!13535, !2996, i64 8}
!21597 = !DILocation(line: 483, column: 7, scope: !21590)
!21598 = !DILocation(line: 484, column: 15, scope: !21594)
!21599 = !DILocation(line: 484, column: 20, scope: !21594)
!21600 = !DILocation(line: 484, column: 5, scope: !21594)
!21601 = !DILocation(line: 486, column: 7, scope: !21602)
!21602 = distinct !DILexicalBlock(scope: !21590, file: !21537, line: 486, column: 7)
!21603 = !DILocation(line: 486, column: 12, scope: !21602)
!21604 = !{!13535, !2996, i64 16}
!21605 = !DILocation(line: 486, column: 7, scope: !21590)
!21606 = !DILocation(line: 487, column: 15, scope: !21602)
!21607 = !DILocation(line: 487, column: 20, scope: !21602)
!21608 = !DILocation(line: 487, column: 5, scope: !21602)
!21609 = !DILocation(line: 507, column: 1, scope: !21590)
!21610 = distinct !DISubprogram(name: "get_permissions", scope: !21611, file: !21611, line: 33, type: !2542, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2539, retainedNodes: !143)
!21611 = !DIFile(filename: "lib/get-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21612 = !DILocalVariable(name: "name", arg: 1, scope: !21610, file: !21611, line: 33, type: !115)
!21613 = !DILocation(line: 33, column: 30, scope: !21610)
!21614 = !DILocalVariable(name: "desc", arg: 2, scope: !21610, file: !21611, line: 33, type: !7)
!21615 = !DILocation(line: 33, column: 40, scope: !21610)
!21616 = !DILocalVariable(name: "mode", arg: 3, scope: !21610, file: !21611, line: 33, type: !160)
!21617 = !DILocation(line: 33, column: 53, scope: !21610)
!21618 = !DILocalVariable(name: "ctx", arg: 4, scope: !21610, file: !21611, line: 34, type: !2544)
!21619 = !DILocation(line: 34, column: 45, scope: !21610)
!21620 = !DILocation(line: 36, column: 11, scope: !21610)
!21621 = !DILocation(line: 36, column: 3, scope: !21610)
!21622 = !DILocation(line: 37, column: 15, scope: !21610)
!21623 = !DILocation(line: 37, column: 3, scope: !21610)
!21624 = !DILocation(line: 37, column: 8, scope: !21610)
!21625 = !DILocation(line: 37, column: 13, scope: !21610)
!21626 = !DILocation(line: 45, column: 26, scope: !21627)
!21627 = distinct !DILexicalBlock(scope: !21610, file: !21611, line: 45, column: 7)
!21628 = !DILocation(line: 45, column: 31, scope: !21627)
!21629 = !DILocation(line: 45, column: 7, scope: !21610)
!21630 = !DILocation(line: 46, column: 28, scope: !21627)
!21631 = !DILocation(line: 46, column: 16, scope: !21627)
!21632 = !DILocation(line: 46, column: 5, scope: !21627)
!21633 = !DILocation(line: 46, column: 10, scope: !21627)
!21634 = !DILocation(line: 46, column: 14, scope: !21627)
!21635 = !DILocation(line: 48, column: 30, scope: !21627)
!21636 = !DILocation(line: 48, column: 16, scope: !21627)
!21637 = !DILocation(line: 48, column: 5, scope: !21627)
!21638 = !DILocation(line: 48, column: 10, scope: !21627)
!21639 = !DILocation(line: 48, column: 14, scope: !21627)
!21640 = !DILocation(line: 49, column: 7, scope: !21641)
!21641 = distinct !DILexicalBlock(scope: !21610, file: !21611, line: 49, column: 7)
!21642 = !DILocation(line: 49, column: 12, scope: !21641)
!21643 = !DILocation(line: 49, column: 16, scope: !21641)
!21644 = !DILocation(line: 49, column: 7, scope: !21610)
!21645 = !DILocation(line: 50, column: 29, scope: !21641)
!21646 = !DILocation(line: 50, column: 12, scope: !21641)
!21647 = !DILocation(line: 50, column: 5, scope: !21641)
!21648 = !DILocation(line: 56, column: 7, scope: !21649)
!21649 = distinct !DILexicalBlock(scope: !21610, file: !21611, line: 56, column: 7)
!21650 = !DILocation(line: 56, column: 7, scope: !21610)
!21651 = !DILocation(line: 58, column: 40, scope: !21652)
!21652 = distinct !DILexicalBlock(scope: !21649, file: !21611, line: 57, column: 5)
!21653 = !DILocation(line: 58, column: 26, scope: !21652)
!21654 = !DILocation(line: 58, column: 7, scope: !21652)
!21655 = !DILocation(line: 58, column: 12, scope: !21652)
!21656 = !DILocation(line: 58, column: 24, scope: !21652)
!21657 = !DILocation(line: 59, column: 11, scope: !21658)
!21658 = distinct !DILexicalBlock(scope: !21652, file: !21611, line: 59, column: 11)
!21659 = !DILocation(line: 59, column: 16, scope: !21658)
!21660 = !DILocation(line: 59, column: 28, scope: !21658)
!21661 = !DILocation(line: 59, column: 11, scope: !21652)
!21662 = !DILocation(line: 60, column: 9, scope: !21658)
!21663 = !DILocation(line: 61, column: 5, scope: !21652)
!21664 = !DILocation(line: 289, column: 3, scope: !21610)
!21665 = !DILocation(line: 291, column: 1, scope: !21610)
!21666 = distinct !DISubprogram(name: "chmod_or_fchmod", scope: !21667, file: !21667, line: 760, type: !1589, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2551, retainedNodes: !143)
!21667 = !DIFile(filename: "lib/set-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21668 = !DILocalVariable(name: "name", arg: 1, scope: !21666, file: !21667, line: 760, type: !115)
!21669 = !DILocation(line: 760, column: 30, scope: !21666)
!21670 = !DILocalVariable(name: "desc", arg: 2, scope: !21666, file: !21667, line: 760, type: !7)
!21671 = !DILocation(line: 760, column: 40, scope: !21666)
!21672 = !DILocalVariable(name: "mode", arg: 3, scope: !21666, file: !21667, line: 760, type: !160)
!21673 = !DILocation(line: 760, column: 53, scope: !21666)
!21674 = !DILocation(line: 762, column: 22, scope: !21675)
!21675 = distinct !DILexicalBlock(scope: !21666, file: !21667, line: 762, column: 7)
!21676 = !DILocation(line: 762, column: 27, scope: !21675)
!21677 = !DILocation(line: 762, column: 7, scope: !21666)
!21678 = !DILocation(line: 763, column: 20, scope: !21675)
!21679 = !DILocation(line: 763, column: 26, scope: !21675)
!21680 = !DILocation(line: 763, column: 12, scope: !21675)
!21681 = !DILocation(line: 763, column: 5, scope: !21675)
!21682 = !DILocation(line: 765, column: 19, scope: !21675)
!21683 = !DILocation(line: 765, column: 25, scope: !21675)
!21684 = !DILocation(line: 765, column: 12, scope: !21675)
!21685 = !DILocation(line: 765, column: 5, scope: !21675)
!21686 = !DILocation(line: 766, column: 1, scope: !21666)
!21687 = distinct !DISubprogram(name: "set_permissions", scope: !21667, file: !21667, line: 776, type: !2554, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2551, retainedNodes: !143)
!21688 = !DILocalVariable(name: "ctx", arg: 1, scope: !21687, file: !21667, line: 776, type: !2556)
!21689 = !DILocation(line: 776, column: 45, scope: !21687)
!21690 = !DILocalVariable(name: "name", arg: 2, scope: !21687, file: !21667, line: 776, type: !115)
!21691 = !DILocation(line: 776, column: 62, scope: !21687)
!21692 = !DILocalVariable(name: "desc", arg: 3, scope: !21687, file: !21667, line: 776, type: !7)
!21693 = !DILocation(line: 776, column: 72, scope: !21687)
!21694 = !DILocalVariable(name: "acls_set", scope: !21687, file: !21667, line: 778, type: !120)
!21695 = !DILocation(line: 778, column: 8, scope: !21687)
!21696 = !DILocalVariable(name: "early_chmod", scope: !21687, file: !21667, line: 779, type: !120)
!21697 = !DILocation(line: 779, column: 8, scope: !21687)
!21698 = !DILocalVariable(name: "must_chmod", scope: !21687, file: !21667, line: 780, type: !120)
!21699 = !DILocation(line: 780, column: 8, scope: !21687)
!21700 = !DILocalVariable(name: "ret", scope: !21687, file: !21667, line: 781, type: !7)
!21701 = !DILocation(line: 781, column: 7, scope: !21687)
!21702 = !DILocation(line: 796, column: 40, scope: !21687)
!21703 = !DILocation(line: 796, column: 45, scope: !21687)
!21704 = !DILocation(line: 796, column: 50, scope: !21687)
!21705 = !DILocation(line: 796, column: 36, scope: !21687)
!21706 = !DILocation(line: 796, column: 15, scope: !21687)
!21707 = !DILocation(line: 804, column: 7, scope: !21708)
!21708 = distinct !DILexicalBlock(scope: !21687, file: !21667, line: 804, column: 7)
!21709 = !DILocation(line: 804, column: 7, scope: !21687)
!21710 = !DILocation(line: 806, column: 30, scope: !21711)
!21711 = distinct !DILexicalBlock(scope: !21708, file: !21667, line: 805, column: 5)
!21712 = !DILocation(line: 806, column: 36, scope: !21711)
!21713 = !DILocation(line: 806, column: 42, scope: !21711)
!21714 = !DILocation(line: 806, column: 47, scope: !21711)
!21715 = !DILocation(line: 806, column: 13, scope: !21711)
!21716 = !DILocation(line: 806, column: 11, scope: !21711)
!21717 = !DILocation(line: 807, column: 11, scope: !21718)
!21718 = distinct !DILexicalBlock(scope: !21711, file: !21667, line: 807, column: 11)
!21719 = !DILocation(line: 807, column: 15, scope: !21718)
!21720 = !DILocation(line: 807, column: 11, scope: !21711)
!21721 = !DILocation(line: 808, column: 9, scope: !21718)
!21722 = !DILocation(line: 809, column: 5, scope: !21711)
!21723 = !DILocation(line: 812, column: 19, scope: !21687)
!21724 = !DILocation(line: 812, column: 24, scope: !21687)
!21725 = !DILocation(line: 812, column: 30, scope: !21687)
!21726 = !DILocation(line: 812, column: 9, scope: !21687)
!21727 = !DILocation(line: 812, column: 7, scope: !21687)
!21728 = !DILocation(line: 813, column: 9, scope: !21729)
!21729 = distinct !DILexicalBlock(scope: !21687, file: !21667, line: 813, column: 7)
!21730 = !DILocation(line: 813, column: 7, scope: !21687)
!21731 = !DILocalVariable(name: "saved_errno", scope: !21732, file: !21667, line: 815, type: !7)
!21732 = distinct !DILexicalBlock(scope: !21729, file: !21667, line: 814, column: 5)
!21733 = !DILocation(line: 815, column: 11, scope: !21732)
!21734 = !DILocation(line: 815, column: 25, scope: !21732)
!21735 = !DILocation(line: 815, column: 31, scope: !21732)
!21736 = !DILocation(line: 821, column: 23, scope: !21732)
!21737 = !DILocation(line: 821, column: 28, scope: !21732)
!21738 = !DILocation(line: 821, column: 34, scope: !21732)
!21739 = !DILocation(line: 821, column: 13, scope: !21732)
!21740 = !DILocation(line: 821, column: 11, scope: !21732)
!21741 = !DILocation(line: 822, column: 13, scope: !21742)
!21742 = distinct !DILexicalBlock(scope: !21732, file: !21667, line: 822, column: 11)
!21743 = !DILocation(line: 822, column: 11, scope: !21732)
!21744 = !DILocation(line: 823, column: 20, scope: !21742)
!21745 = !DILocation(line: 823, column: 9, scope: !21742)
!21746 = !DILocation(line: 825, column: 11, scope: !21747)
!21747 = distinct !DILexicalBlock(scope: !21732, file: !21667, line: 825, column: 11)
!21748 = !DILocation(line: 825, column: 11, scope: !21732)
!21749 = !DILocation(line: 827, column: 19, scope: !21750)
!21750 = distinct !DILexicalBlock(scope: !21747, file: !21667, line: 826, column: 9)
!21751 = !DILocation(line: 827, column: 11, scope: !21750)
!21752 = !DILocation(line: 827, column: 17, scope: !21750)
!21753 = !DILocation(line: 828, column: 15, scope: !21750)
!21754 = !DILocation(line: 829, column: 9, scope: !21750)
!21755 = !DILocation(line: 830, column: 5, scope: !21732)
!21756 = !DILocation(line: 833, column: 7, scope: !21757)
!21757 = distinct !DILexicalBlock(scope: !21687, file: !21667, line: 833, column: 7)
!21758 = !DILocation(line: 833, column: 18, scope: !21757)
!21759 = !DILocation(line: 833, column: 23, scope: !21757)
!21760 = !DILocation(line: 833, column: 7, scope: !21687)
!21761 = !DILocalVariable(name: "saved_errno", scope: !21762, file: !21667, line: 835, type: !7)
!21762 = distinct !DILexicalBlock(scope: !21757, file: !21667, line: 834, column: 5)
!21763 = !DILocation(line: 835, column: 11, scope: !21762)
!21764 = !DILocation(line: 835, column: 25, scope: !21762)
!21765 = !DILocation(line: 835, column: 31, scope: !21762)
!21766 = !DILocation(line: 837, column: 30, scope: !21762)
!21767 = !DILocation(line: 837, column: 36, scope: !21762)
!21768 = !DILocation(line: 837, column: 42, scope: !21762)
!21769 = !DILocation(line: 837, column: 47, scope: !21762)
!21770 = !DILocation(line: 837, column: 13, scope: !21762)
!21771 = !DILocation(line: 837, column: 11, scope: !21762)
!21772 = !DILocation(line: 839, column: 11, scope: !21773)
!21773 = distinct !DILexicalBlock(scope: !21762, file: !21667, line: 839, column: 11)
!21774 = !DILocation(line: 839, column: 11, scope: !21762)
!21775 = !DILocation(line: 841, column: 19, scope: !21776)
!21776 = distinct !DILexicalBlock(scope: !21773, file: !21667, line: 840, column: 9)
!21777 = !DILocation(line: 841, column: 11, scope: !21776)
!21778 = !DILocation(line: 841, column: 17, scope: !21776)
!21779 = !DILocation(line: 842, column: 15, scope: !21776)
!21780 = !DILocation(line: 843, column: 9, scope: !21776)
!21781 = !DILocation(line: 844, column: 5, scope: !21762)
!21782 = !DILocation(line: 846, column: 10, scope: !21687)
!21783 = !DILocation(line: 846, column: 3, scope: !21687)
!21784 = !DILocation(line: 847, column: 1, scope: !21687)
!21785 = distinct !DISubprogram(name: "set_acls", scope: !21667, file: !21667, line: 485, type: !2563, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2551, retainedNodes: !143)
!21786 = !DILocalVariable(name: "ctx", arg: 1, scope: !21785, file: !21667, line: 485, type: !2556)
!21787 = !DILocation(line: 485, column: 38, scope: !21785)
!21788 = !DILocalVariable(name: "name", arg: 2, scope: !21785, file: !21667, line: 485, type: !115)
!21789 = !DILocation(line: 485, column: 55, scope: !21785)
!21790 = !DILocalVariable(name: "desc", arg: 3, scope: !21785, file: !21667, line: 485, type: !7)
!21791 = !DILocation(line: 485, column: 65, scope: !21785)
!21792 = !DILocalVariable(name: "from_mode", arg: 4, scope: !21785, file: !21667, line: 486, type: !7)
!21793 = !DILocation(line: 486, column: 15, scope: !21785)
!21794 = !DILocalVariable(name: "must_chmod", arg: 5, scope: !21785, file: !21667, line: 486, type: !302)
!21795 = !DILocation(line: 486, column: 32, scope: !21785)
!21796 = !DILocalVariable(name: "acls_set", arg: 6, scope: !21785, file: !21667, line: 486, type: !302)
!21797 = !DILocation(line: 486, column: 50, scope: !21785)
!21798 = !DILocalVariable(name: "ret", scope: !21785, file: !21667, line: 488, type: !7)
!21799 = !DILocation(line: 488, column: 7, scope: !21785)
!21800 = !DILocation(line: 503, column: 9, scope: !21801)
!21801 = distinct !DILexicalBlock(scope: !21785, file: !21667, line: 503, column: 7)
!21802 = !DILocation(line: 503, column: 14, scope: !21801)
!21803 = !{!13535, !3107, i64 24}
!21804 = !DILocation(line: 503, column: 7, scope: !21785)
!21805 = !DILocation(line: 505, column: 11, scope: !21806)
!21806 = distinct !DILexicalBlock(scope: !21807, file: !21667, line: 505, column: 11)
!21807 = distinct !DILexicalBlock(scope: !21801, file: !21667, line: 504, column: 5)
!21808 = !DILocation(line: 505, column: 15, scope: !21806)
!21809 = !DILocation(line: 505, column: 20, scope: !21806)
!21810 = !DILocation(line: 505, column: 23, scope: !21806)
!21811 = !DILocation(line: 505, column: 11, scope: !21807)
!21812 = !DILocation(line: 507, column: 15, scope: !21813)
!21813 = distinct !DILexicalBlock(scope: !21814, file: !21667, line: 507, column: 15)
!21814 = distinct !DILexicalBlock(scope: !21806, file: !21667, line: 506, column: 9)
!21815 = !DILocation(line: 507, column: 20, scope: !21813)
!21816 = !DILocation(line: 507, column: 15, scope: !21814)
!21817 = !DILocation(line: 508, column: 23, scope: !21813)
!21818 = !DILocation(line: 508, column: 28, scope: !21813)
!21819 = !DILocation(line: 508, column: 13, scope: !21813)
!21820 = !DILocation(line: 509, column: 37, scope: !21814)
!21821 = !DILocation(line: 509, column: 42, scope: !21814)
!21822 = !DILocation(line: 509, column: 22, scope: !21814)
!21823 = !DILocation(line: 509, column: 11, scope: !21814)
!21824 = !DILocation(line: 509, column: 16, scope: !21814)
!21825 = !DILocation(line: 509, column: 20, scope: !21814)
!21826 = !DILocation(line: 510, column: 15, scope: !21827)
!21827 = distinct !DILexicalBlock(scope: !21814, file: !21667, line: 510, column: 15)
!21828 = !DILocation(line: 510, column: 20, scope: !21827)
!21829 = !DILocation(line: 510, column: 24, scope: !21827)
!21830 = !DILocation(line: 510, column: 15, scope: !21814)
!21831 = !DILocation(line: 511, column: 17, scope: !21827)
!21832 = !DILocation(line: 511, column: 13, scope: !21827)
!21833 = !DILocation(line: 512, column: 9, scope: !21814)
!21834 = !DILocation(line: 514, column: 11, scope: !21835)
!21835 = distinct !DILexicalBlock(scope: !21807, file: !21667, line: 514, column: 11)
!21836 = !DILocation(line: 514, column: 15, scope: !21835)
!21837 = !DILocation(line: 514, column: 20, scope: !21835)
!21838 = !DILocation(line: 514, column: 23, scope: !21835)
!21839 = !DILocation(line: 514, column: 28, scope: !21835)
!21840 = !DILocation(line: 514, column: 11, scope: !21807)
!21841 = !DILocation(line: 516, column: 34, scope: !21842)
!21842 = distinct !DILexicalBlock(scope: !21843, file: !21667, line: 516, column: 15)
!21843 = distinct !DILexicalBlock(scope: !21835, file: !21667, line: 515, column: 9)
!21844 = !DILocation(line: 516, column: 39, scope: !21842)
!21845 = !DILocation(line: 516, column: 15, scope: !21843)
!21846 = !DILocation(line: 517, column: 31, scope: !21842)
!21847 = !DILocation(line: 517, column: 37, scope: !21842)
!21848 = !DILocation(line: 517, column: 42, scope: !21842)
!21849 = !DILocation(line: 517, column: 19, scope: !21842)
!21850 = !DILocation(line: 517, column: 17, scope: !21842)
!21851 = !DILocation(line: 517, column: 13, scope: !21842)
!21852 = !DILocation(line: 519, column: 33, scope: !21842)
!21853 = !DILocation(line: 519, column: 56, scope: !21842)
!21854 = !DILocation(line: 519, column: 61, scope: !21842)
!21855 = !DILocation(line: 519, column: 19, scope: !21842)
!21856 = !DILocation(line: 519, column: 17, scope: !21842)
!21857 = !DILocation(line: 520, column: 15, scope: !21858)
!21858 = distinct !DILexicalBlock(scope: !21843, file: !21667, line: 520, column: 15)
!21859 = !DILocation(line: 520, column: 19, scope: !21858)
!21860 = !DILocation(line: 520, column: 15, scope: !21843)
!21861 = !DILocation(line: 522, column: 38, scope: !21862)
!21862 = distinct !DILexicalBlock(scope: !21863, file: !21667, line: 522, column: 19)
!21863 = distinct !DILexicalBlock(scope: !21858, file: !21667, line: 521, column: 13)
!21864 = !DILocation(line: 522, column: 21, scope: !21862)
!21865 = !DILocation(line: 522, column: 19, scope: !21863)
!21866 = !DILocation(line: 524, column: 19, scope: !21867)
!21867 = distinct !DILexicalBlock(scope: !21862, file: !21667, line: 523, column: 17)
!21868 = !DILocation(line: 524, column: 24, scope: !21867)
!21869 = !DILocation(line: 524, column: 43, scope: !21867)
!21870 = !DILocation(line: 525, column: 23, scope: !21871)
!21871 = distinct !DILexicalBlock(scope: !21867, file: !21667, line: 525, column: 23)
!21872 = !DILocation(line: 525, column: 33, scope: !21871)
!21873 = !DILocation(line: 525, column: 59, scope: !21871)
!21874 = !DILocation(line: 525, column: 64, scope: !21871)
!21875 = !DILocation(line: 525, column: 36, scope: !21871)
!21876 = !DILocation(line: 525, column: 69, scope: !21871)
!21877 = !DILocation(line: 525, column: 23, scope: !21867)
!21878 = !DILocation(line: 526, column: 25, scope: !21871)
!21879 = !DILocation(line: 526, column: 21, scope: !21871)
!21880 = !DILocation(line: 527, column: 17, scope: !21867)
!21881 = !DILocation(line: 528, column: 13, scope: !21863)
!21882 = !DILocation(line: 531, column: 16, scope: !21883)
!21883 = distinct !DILexicalBlock(scope: !21858, file: !21667, line: 530, column: 13)
!21884 = !DILocation(line: 531, column: 25, scope: !21883)
!21885 = !DILocation(line: 532, column: 19, scope: !21886)
!21886 = distinct !DILexicalBlock(scope: !21883, file: !21667, line: 532, column: 19)
!21887 = !DILocation(line: 532, column: 19, scope: !21883)
!21888 = !DILocation(line: 534, column: 25, scope: !21889)
!21889 = distinct !DILexicalBlock(scope: !21890, file: !21667, line: 534, column: 23)
!21890 = distinct !DILexicalBlock(scope: !21886, file: !21667, line: 533, column: 17)
!21891 = !DILocation(line: 534, column: 35, scope: !21889)
!21892 = !DILocation(line: 534, column: 38, scope: !21889)
!21893 = !DILocation(line: 534, column: 43, scope: !21889)
!21894 = !DILocation(line: 534, column: 55, scope: !21889)
!21895 = !DILocation(line: 535, column: 47, scope: !21889)
!21896 = !DILocation(line: 535, column: 52, scope: !21889)
!21897 = !DILocation(line: 535, column: 23, scope: !21889)
!21898 = !DILocation(line: 534, column: 23, scope: !21890)
!21899 = !DILocation(line: 536, column: 41, scope: !21889)
!21900 = !DILocation(line: 537, column: 41, scope: !21889)
!21901 = !DILocation(line: 537, column: 46, scope: !21889)
!21902 = !DILocation(line: 536, column: 27, scope: !21889)
!21903 = !DILocation(line: 536, column: 25, scope: !21889)
!21904 = !DILocation(line: 536, column: 21, scope: !21889)
!21905 = !DILocation(line: 539, column: 48, scope: !21889)
!21906 = !DILocation(line: 539, column: 27, scope: !21889)
!21907 = !DILocation(line: 539, column: 25, scope: !21889)
!21908 = !DILocation(line: 540, column: 17, scope: !21890)
!21909 = !DILocation(line: 542, column: 9, scope: !21843)
!21910 = !DILocation(line: 543, column: 5, scope: !21807)
!21911 = !DILocation(line: 749, column: 10, scope: !21785)
!21912 = !DILocation(line: 749, column: 3, scope: !21785)
!21913 = distinct !DISubprogram(name: "__argmatch_die", scope: !1304, file: !1304, line: 62, type: !134, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1255, retainedNodes: !143)
!21914 = !DILocation(line: 64, column: 3, scope: !21913)
!21915 = !DILocation(line: 65, column: 1, scope: !21913)
!21916 = distinct !DISubprogram(name: "argmatch", scope: !1304, file: !1304, line: 84, type: !1258, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1255, retainedNodes: !143)
!21917 = !DILocalVariable(name: "arg", arg: 1, scope: !21916, file: !1304, line: 84, type: !115)
!21918 = !DILocation(line: 84, column: 23, scope: !21916)
!21919 = !DILocalVariable(name: "arglist", arg: 2, scope: !21916, file: !1304, line: 84, type: !1260)
!21920 = !DILocation(line: 84, column: 47, scope: !21916)
!21921 = !DILocalVariable(name: "vallist", arg: 3, scope: !21916, file: !1304, line: 85, type: !115)
!21922 = !DILocation(line: 85, column: 23, scope: !21916)
!21923 = !DILocalVariable(name: "valsize", arg: 4, scope: !21916, file: !1304, line: 85, type: !55)
!21924 = !DILocation(line: 85, column: 39, scope: !21916)
!21925 = !DILocalVariable(name: "i", scope: !21916, file: !1304, line: 87, type: !55)
!21926 = !DILocation(line: 87, column: 10, scope: !21916)
!21927 = !DILocalVariable(name: "arglen", scope: !21916, file: !1304, line: 88, type: !55)
!21928 = !DILocation(line: 88, column: 10, scope: !21916)
!21929 = !DILocalVariable(name: "matchind", scope: !21916, file: !1304, line: 89, type: !566)
!21930 = !DILocation(line: 89, column: 13, scope: !21916)
!21931 = !DILocalVariable(name: "ambiguous", scope: !21916, file: !1304, line: 90, type: !120)
!21932 = !DILocation(line: 90, column: 8, scope: !21916)
!21933 = !DILocation(line: 92, column: 20, scope: !21916)
!21934 = !DILocation(line: 92, column: 12, scope: !21916)
!21935 = !DILocation(line: 92, column: 10, scope: !21916)
!21936 = !DILocation(line: 95, column: 10, scope: !21937)
!21937 = distinct !DILexicalBlock(scope: !21916, file: !1304, line: 95, column: 3)
!21938 = !DILocation(line: 95, column: 8, scope: !21937)
!21939 = !DILocation(line: 95, column: 15, scope: !21940)
!21940 = distinct !DILexicalBlock(scope: !21937, file: !1304, line: 95, column: 3)
!21941 = !DILocation(line: 95, column: 23, scope: !21940)
!21942 = !DILocation(line: 95, column: 3, scope: !21937)
!21943 = !DILocation(line: 97, column: 21, scope: !21944)
!21944 = distinct !DILexicalBlock(scope: !21945, file: !1304, line: 97, column: 11)
!21945 = distinct !DILexicalBlock(scope: !21940, file: !1304, line: 96, column: 5)
!21946 = !DILocation(line: 97, column: 29, scope: !21944)
!21947 = !DILocation(line: 97, column: 33, scope: !21944)
!21948 = !DILocation(line: 97, column: 38, scope: !21944)
!21949 = !DILocation(line: 97, column: 12, scope: !21944)
!21950 = !DILocation(line: 97, column: 11, scope: !21945)
!21951 = !DILocation(line: 99, column: 23, scope: !21952)
!21952 = distinct !DILexicalBlock(scope: !21953, file: !1304, line: 99, column: 15)
!21953 = distinct !DILexicalBlock(scope: !21944, file: !1304, line: 98, column: 9)
!21954 = !DILocation(line: 99, column: 31, scope: !21952)
!21955 = !DILocation(line: 99, column: 15, scope: !21952)
!21956 = !DILocation(line: 99, column: 38, scope: !21952)
!21957 = !DILocation(line: 99, column: 35, scope: !21952)
!21958 = !DILocation(line: 99, column: 15, scope: !21953)
!21959 = !DILocation(line: 101, column: 20, scope: !21952)
!21960 = !DILocation(line: 101, column: 13, scope: !21952)
!21961 = !DILocation(line: 102, column: 20, scope: !21962)
!21962 = distinct !DILexicalBlock(scope: !21952, file: !1304, line: 102, column: 20)
!21963 = !DILocation(line: 102, column: 29, scope: !21962)
!21964 = !DILocation(line: 102, column: 20, scope: !21952)
!21965 = !DILocation(line: 104, column: 24, scope: !21962)
!21966 = !DILocation(line: 104, column: 22, scope: !21962)
!21967 = !DILocation(line: 104, column: 13, scope: !21962)
!21968 = !DILocation(line: 108, column: 19, scope: !21969)
!21969 = distinct !DILexicalBlock(scope: !21970, file: !1304, line: 108, column: 19)
!21970 = distinct !DILexicalBlock(scope: !21962, file: !1304, line: 106, column: 13)
!21971 = !DILocation(line: 108, column: 27, scope: !21969)
!21972 = !DILocation(line: 109, column: 19, scope: !21969)
!21973 = !DILocation(line: 109, column: 30, scope: !21969)
!21974 = !DILocation(line: 109, column: 40, scope: !21969)
!21975 = !DILocation(line: 109, column: 50, scope: !21969)
!21976 = !DILocation(line: 109, column: 48, scope: !21969)
!21977 = !DILocation(line: 109, column: 38, scope: !21969)
!21978 = !DILocation(line: 110, column: 30, scope: !21969)
!21979 = !DILocation(line: 110, column: 40, scope: !21969)
!21980 = !DILocation(line: 110, column: 50, scope: !21969)
!21981 = !DILocation(line: 110, column: 48, scope: !21969)
!21982 = !DILocation(line: 110, column: 38, scope: !21969)
!21983 = !DILocation(line: 110, column: 53, scope: !21969)
!21984 = !DILocation(line: 109, column: 22, scope: !21969)
!21985 = !DILocation(line: 108, column: 19, scope: !21970)
!21986 = !DILocation(line: 114, column: 29, scope: !21987)
!21987 = distinct !DILexicalBlock(scope: !21969, file: !1304, line: 111, column: 17)
!21988 = !DILocation(line: 115, column: 17, scope: !21987)
!21989 = !DILocation(line: 117, column: 9, scope: !21953)
!21990 = !DILocation(line: 118, column: 5, scope: !21945)
!21991 = !DILocation(line: 95, column: 28, scope: !21940)
!21992 = !DILocation(line: 95, column: 3, scope: !21940)
!21993 = distinct !{!21993, !21942, !21994}
!21994 = !DILocation(line: 118, column: 5, scope: !21937)
!21995 = !DILocation(line: 119, column: 7, scope: !21996)
!21996 = distinct !DILexicalBlock(scope: !21916, file: !1304, line: 119, column: 7)
!21997 = !DILocation(line: 119, column: 7, scope: !21916)
!21998 = !DILocation(line: 120, column: 5, scope: !21996)
!21999 = !DILocation(line: 122, column: 12, scope: !21996)
!22000 = !DILocation(line: 122, column: 5, scope: !21996)
!22001 = !DILocation(line: 123, column: 1, scope: !21916)
!22002 = distinct !DISubprogram(name: "argmatch_invalid", scope: !1304, file: !1304, line: 131, type: !1261, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1255, retainedNodes: !143)
!22003 = !DILocalVariable(name: "context", arg: 1, scope: !22002, file: !1304, line: 131, type: !115)
!22004 = !DILocation(line: 131, column: 31, scope: !22002)
!22005 = !DILocalVariable(name: "value", arg: 2, scope: !22002, file: !1304, line: 131, type: !115)
!22006 = !DILocation(line: 131, column: 52, scope: !22002)
!22007 = !DILocalVariable(name: "problem", arg: 3, scope: !22002, file: !1304, line: 131, type: !566)
!22008 = !DILocation(line: 131, column: 69, scope: !22002)
!22009 = !DILocalVariable(name: "format", scope: !22002, file: !1304, line: 133, type: !115)
!22010 = !DILocation(line: 133, column: 15, scope: !22002)
!22011 = !DILocation(line: 133, column: 25, scope: !22002)
!22012 = !DILocation(line: 133, column: 33, scope: !22002)
!22013 = !DILocation(line: 134, column: 27, scope: !22002)
!22014 = !DILocation(line: 135, column: 27, scope: !22002)
!22015 = !DILocation(line: 137, column: 16, scope: !22002)
!22016 = !DILocation(line: 137, column: 69, scope: !22002)
!22017 = !DILocation(line: 137, column: 24, scope: !22002)
!22018 = !DILocation(line: 138, column: 22, scope: !22002)
!22019 = !DILocation(line: 138, column: 10, scope: !22002)
!22020 = !DILocation(line: 137, column: 3, scope: !22002)
!22021 = !DILocation(line: 139, column: 1, scope: !22002)
!22022 = distinct !DISubprogram(name: "argmatch_valid", scope: !1304, file: !1304, line: 146, type: !1263, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1255, retainedNodes: !143)
!22023 = !DILocalVariable(name: "arglist", arg: 1, scope: !22022, file: !1304, line: 146, type: !1260)
!22024 = !DILocation(line: 146, column: 36, scope: !22022)
!22025 = !DILocalVariable(name: "vallist", arg: 2, scope: !22022, file: !1304, line: 147, type: !115)
!22026 = !DILocation(line: 147, column: 29, scope: !22022)
!22027 = !DILocalVariable(name: "valsize", arg: 3, scope: !22022, file: !1304, line: 147, type: !55)
!22028 = !DILocation(line: 147, column: 45, scope: !22022)
!22029 = !DILocalVariable(name: "i", scope: !22022, file: !1304, line: 149, type: !55)
!22030 = !DILocation(line: 149, column: 10, scope: !22022)
!22031 = !DILocalVariable(name: "last_val", scope: !22022, file: !1304, line: 150, type: !115)
!22032 = !DILocation(line: 150, column: 15, scope: !22022)
!22033 = !DILocation(line: 154, column: 3, scope: !22022)
!22034 = !DILocation(line: 155, column: 10, scope: !22035)
!22035 = distinct !DILexicalBlock(scope: !22022, file: !1304, line: 155, column: 3)
!22036 = !DILocation(line: 155, column: 8, scope: !22035)
!22037 = !DILocation(line: 155, column: 15, scope: !22038)
!22038 = distinct !DILexicalBlock(scope: !22035, file: !1304, line: 155, column: 3)
!22039 = !DILocation(line: 155, column: 23, scope: !22038)
!22040 = !DILocation(line: 155, column: 3, scope: !22035)
!22041 = !DILocation(line: 156, column: 10, scope: !22042)
!22042 = distinct !DILexicalBlock(scope: !22038, file: !1304, line: 156, column: 9)
!22043 = !DILocation(line: 156, column: 12, scope: !22042)
!22044 = !DILocation(line: 157, column: 9, scope: !22042)
!22045 = !DILocation(line: 157, column: 20, scope: !22042)
!22046 = !DILocation(line: 157, column: 30, scope: !22042)
!22047 = !DILocation(line: 157, column: 40, scope: !22042)
!22048 = !DILocation(line: 157, column: 50, scope: !22042)
!22049 = !DILocation(line: 157, column: 48, scope: !22042)
!22050 = !DILocation(line: 157, column: 38, scope: !22042)
!22051 = !DILocation(line: 157, column: 53, scope: !22042)
!22052 = !DILocation(line: 157, column: 12, scope: !22042)
!22053 = !DILocation(line: 156, column: 9, scope: !22038)
!22054 = !DILocation(line: 159, column: 18, scope: !22055)
!22055 = distinct !DILexicalBlock(scope: !22042, file: !1304, line: 158, column: 7)
!22056 = !DILocation(line: 159, column: 45, scope: !22055)
!22057 = !DILocation(line: 159, column: 53, scope: !22055)
!22058 = !DILocation(line: 159, column: 38, scope: !22055)
!22059 = !DILocation(line: 159, column: 9, scope: !22055)
!22060 = !DILocation(line: 160, column: 20, scope: !22055)
!22061 = !DILocation(line: 160, column: 30, scope: !22055)
!22062 = !DILocation(line: 160, column: 40, scope: !22055)
!22063 = !DILocation(line: 160, column: 38, scope: !22055)
!22064 = !DILocation(line: 160, column: 28, scope: !22055)
!22065 = !DILocation(line: 160, column: 18, scope: !22055)
!22066 = !DILocation(line: 161, column: 7, scope: !22055)
!22067 = !DILocation(line: 164, column: 18, scope: !22068)
!22068 = distinct !DILexicalBlock(scope: !22042, file: !1304, line: 163, column: 7)
!22069 = !DILocation(line: 164, column: 41, scope: !22068)
!22070 = !DILocation(line: 164, column: 49, scope: !22068)
!22071 = !DILocation(line: 164, column: 34, scope: !22068)
!22072 = !DILocation(line: 164, column: 9, scope: !22068)
!22073 = !DILocation(line: 157, column: 60, scope: !22042)
!22074 = !DILocation(line: 155, column: 28, scope: !22038)
!22075 = !DILocation(line: 155, column: 3, scope: !22038)
!22076 = distinct !{!22076, !22040, !22077}
!22077 = !DILocation(line: 165, column: 7, scope: !22035)
!22078 = !DILocation(line: 166, column: 3, scope: !22022)
!22079 = !DILocation(line: 167, column: 1, scope: !22022)
!22080 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !1304, file: !1304, line: 176, type: !1299, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1255, retainedNodes: !143)
!22081 = !DILocalVariable(name: "context", arg: 1, scope: !22080, file: !1304, line: 176, type: !115)
!22082 = !DILocation(line: 176, column: 35, scope: !22080)
!22083 = !DILocalVariable(name: "arg", arg: 2, scope: !22080, file: !1304, line: 177, type: !115)
!22084 = !DILocation(line: 177, column: 35, scope: !22080)
!22085 = !DILocalVariable(name: "arglist", arg: 3, scope: !22080, file: !1304, line: 177, type: !1260)
!22086 = !DILocation(line: 177, column: 59, scope: !22080)
!22087 = !DILocalVariable(name: "vallist", arg: 4, scope: !22080, file: !1304, line: 178, type: !115)
!22088 = !DILocation(line: 178, column: 35, scope: !22080)
!22089 = !DILocalVariable(name: "valsize", arg: 5, scope: !22080, file: !1304, line: 178, type: !55)
!22090 = !DILocation(line: 178, column: 51, scope: !22080)
!22091 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !22080, file: !1304, line: 179, type: !644)
!22092 = !DILocation(line: 179, column: 40, scope: !22080)
!22093 = !DILocalVariable(name: "res", scope: !22080, file: !1304, line: 181, type: !566)
!22094 = !DILocation(line: 181, column: 13, scope: !22080)
!22095 = !DILocation(line: 181, column: 29, scope: !22080)
!22096 = !DILocation(line: 181, column: 34, scope: !22080)
!22097 = !DILocation(line: 181, column: 43, scope: !22080)
!22098 = !DILocation(line: 181, column: 52, scope: !22080)
!22099 = !DILocation(line: 181, column: 19, scope: !22080)
!22100 = !DILocation(line: 182, column: 7, scope: !22101)
!22101 = distinct !DILexicalBlock(scope: !22080, file: !1304, line: 182, column: 7)
!22102 = !DILocation(line: 182, column: 11, scope: !22101)
!22103 = !DILocation(line: 182, column: 7, scope: !22080)
!22104 = !DILocation(line: 184, column: 12, scope: !22101)
!22105 = !DILocation(line: 184, column: 5, scope: !22101)
!22106 = !DILocation(line: 187, column: 21, scope: !22080)
!22107 = !DILocation(line: 187, column: 30, scope: !22080)
!22108 = !DILocation(line: 187, column: 35, scope: !22080)
!22109 = !DILocation(line: 187, column: 3, scope: !22080)
!22110 = !DILocation(line: 188, column: 19, scope: !22080)
!22111 = !DILocation(line: 188, column: 28, scope: !22080)
!22112 = !DILocation(line: 188, column: 37, scope: !22080)
!22113 = !DILocation(line: 188, column: 3, scope: !22080)
!22114 = !DILocation(line: 189, column: 5, scope: !22080)
!22115 = !DILocation(line: 189, column: 3, scope: !22080)
!22116 = !DILocation(line: 191, column: 3, scope: !22080)
!22117 = !DILocation(line: 192, column: 1, scope: !22080)
!22118 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !1304, file: !1304, line: 197, type: !1301, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1255, retainedNodes: !143)
!22119 = !DILocalVariable(name: "value", arg: 1, scope: !22118, file: !1304, line: 197, type: !115)
!22120 = !DILocation(line: 197, column: 35, scope: !22118)
!22121 = !DILocalVariable(name: "arglist", arg: 2, scope: !22118, file: !1304, line: 198, type: !1260)
!22122 = !DILocation(line: 198, column: 42, scope: !22118)
!22123 = !DILocalVariable(name: "vallist", arg: 3, scope: !22118, file: !1304, line: 199, type: !115)
!22124 = !DILocation(line: 199, column: 35, scope: !22118)
!22125 = !DILocalVariable(name: "valsize", arg: 4, scope: !22118, file: !1304, line: 199, type: !55)
!22126 = !DILocation(line: 199, column: 51, scope: !22118)
!22127 = !DILocalVariable(name: "i", scope: !22118, file: !1304, line: 201, type: !55)
!22128 = !DILocation(line: 201, column: 10, scope: !22118)
!22129 = !DILocation(line: 203, column: 10, scope: !22130)
!22130 = distinct !DILexicalBlock(scope: !22118, file: !1304, line: 203, column: 3)
!22131 = !DILocation(line: 203, column: 8, scope: !22130)
!22132 = !DILocation(line: 203, column: 15, scope: !22133)
!22133 = distinct !DILexicalBlock(scope: !22130, file: !1304, line: 203, column: 3)
!22134 = !DILocation(line: 203, column: 23, scope: !22133)
!22135 = !DILocation(line: 203, column: 3, scope: !22130)
!22136 = !DILocation(line: 204, column: 18, scope: !22137)
!22137 = distinct !DILexicalBlock(scope: !22133, file: !1304, line: 204, column: 9)
!22138 = !DILocation(line: 204, column: 25, scope: !22137)
!22139 = !DILocation(line: 204, column: 35, scope: !22137)
!22140 = !DILocation(line: 204, column: 45, scope: !22137)
!22141 = !DILocation(line: 204, column: 43, scope: !22137)
!22142 = !DILocation(line: 204, column: 33, scope: !22137)
!22143 = !DILocation(line: 204, column: 48, scope: !22137)
!22144 = !DILocation(line: 204, column: 10, scope: !22137)
!22145 = !DILocation(line: 204, column: 9, scope: !22133)
!22146 = !DILocation(line: 205, column: 14, scope: !22137)
!22147 = !DILocation(line: 205, column: 22, scope: !22137)
!22148 = !DILocation(line: 205, column: 7, scope: !22137)
!22149 = !DILocation(line: 204, column: 55, scope: !22137)
!22150 = !DILocation(line: 203, column: 28, scope: !22133)
!22151 = !DILocation(line: 203, column: 3, scope: !22133)
!22152 = distinct !{!22152, !22135, !22153}
!22153 = !DILocation(line: 205, column: 23, scope: !22130)
!22154 = !DILocation(line: 206, column: 3, scope: !22118)
!22155 = !DILocation(line: 207, column: 1, scope: !22118)
!22156 = distinct !DISubprogram(name: "rotl64", scope: !22157, file: !22157, line: 39, type: !2568, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2565, retainedNodes: !143)
!22157 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mbarbar/software/coreutils-8.31")
!22158 = !DILocalVariable(name: "x", arg: 1, scope: !22156, file: !22157, line: 39, type: !1554)
!22159 = !DILocation(line: 39, column: 18, scope: !22156)
!22160 = !DILocalVariable(name: "n", arg: 2, scope: !22156, file: !22157, line: 39, type: !7)
!22161 = !DILocation(line: 39, column: 25, scope: !22156)
!22162 = !DILocation(line: 41, column: 12, scope: !22156)
!22163 = !DILocation(line: 41, column: 17, scope: !22156)
!22164 = !DILocation(line: 41, column: 14, scope: !22156)
!22165 = !DILocation(line: 41, column: 23, scope: !22156)
!22166 = !DILocation(line: 41, column: 34, scope: !22156)
!22167 = !DILocation(line: 41, column: 32, scope: !22156)
!22168 = !DILocation(line: 41, column: 25, scope: !22156)
!22169 = !DILocation(line: 41, column: 20, scope: !22156)
!22170 = !DILocation(line: 41, column: 3, scope: !22156)
!22171 = distinct !DISubprogram(name: "rotr64", scope: !22157, file: !22157, line: 48, type: !2568, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2565, retainedNodes: !143)
!22172 = !DILocalVariable(name: "x", arg: 1, scope: !22171, file: !22157, line: 48, type: !1554)
!22173 = !DILocation(line: 48, column: 18, scope: !22171)
!22174 = !DILocalVariable(name: "n", arg: 2, scope: !22171, file: !22157, line: 48, type: !7)
!22175 = !DILocation(line: 48, column: 25, scope: !22171)
!22176 = !DILocation(line: 50, column: 12, scope: !22171)
!22177 = !DILocation(line: 50, column: 17, scope: !22171)
!22178 = !DILocation(line: 50, column: 14, scope: !22171)
!22179 = !DILocation(line: 50, column: 23, scope: !22171)
!22180 = !DILocation(line: 50, column: 34, scope: !22171)
!22181 = !DILocation(line: 50, column: 32, scope: !22171)
!22182 = !DILocation(line: 50, column: 25, scope: !22171)
!22183 = !DILocation(line: 50, column: 20, scope: !22171)
!22184 = !DILocation(line: 50, column: 3, scope: !22171)
!22185 = distinct !DISubprogram(name: "rotl32", scope: !22157, file: !22157, line: 58, type: !2570, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2565, retainedNodes: !143)
!22186 = !DILocalVariable(name: "x", arg: 1, scope: !22185, file: !22157, line: 58, type: !1559)
!22187 = !DILocation(line: 58, column: 18, scope: !22185)
!22188 = !DILocalVariable(name: "n", arg: 2, scope: !22185, file: !22157, line: 58, type: !7)
!22189 = !DILocation(line: 58, column: 25, scope: !22185)
!22190 = !DILocation(line: 60, column: 12, scope: !22185)
!22191 = !DILocation(line: 60, column: 17, scope: !22185)
!22192 = !DILocation(line: 60, column: 14, scope: !22185)
!22193 = !DILocation(line: 60, column: 23, scope: !22185)
!22194 = !DILocation(line: 60, column: 34, scope: !22185)
!22195 = !DILocation(line: 60, column: 32, scope: !22185)
!22196 = !DILocation(line: 60, column: 25, scope: !22185)
!22197 = !DILocation(line: 60, column: 20, scope: !22185)
!22198 = !DILocation(line: 60, column: 3, scope: !22185)
!22199 = distinct !DISubprogram(name: "rotr32", scope: !22157, file: !22157, line: 67, type: !2570, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2565, retainedNodes: !143)
!22200 = !DILocalVariable(name: "x", arg: 1, scope: !22199, file: !22157, line: 67, type: !1559)
!22201 = !DILocation(line: 67, column: 18, scope: !22199)
!22202 = !DILocalVariable(name: "n", arg: 2, scope: !22199, file: !22157, line: 67, type: !7)
!22203 = !DILocation(line: 67, column: 25, scope: !22199)
!22204 = !DILocation(line: 69, column: 12, scope: !22199)
!22205 = !DILocation(line: 69, column: 17, scope: !22199)
!22206 = !DILocation(line: 69, column: 14, scope: !22199)
!22207 = !DILocation(line: 69, column: 23, scope: !22199)
!22208 = !DILocation(line: 69, column: 34, scope: !22199)
!22209 = !DILocation(line: 69, column: 32, scope: !22199)
!22210 = !DILocation(line: 69, column: 25, scope: !22199)
!22211 = !DILocation(line: 69, column: 20, scope: !22199)
!22212 = !DILocation(line: 69, column: 3, scope: !22199)
!22213 = distinct !DISubprogram(name: "rotl_sz", scope: !22157, file: !22157, line: 76, type: !2572, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2565, retainedNodes: !143)
!22214 = !DILocalVariable(name: "x", arg: 1, scope: !22213, file: !22157, line: 76, type: !55)
!22215 = !DILocation(line: 76, column: 17, scope: !22213)
!22216 = !DILocalVariable(name: "n", arg: 2, scope: !22213, file: !22157, line: 76, type: !7)
!22217 = !DILocation(line: 76, column: 24, scope: !22213)
!22218 = !DILocation(line: 78, column: 12, scope: !22213)
!22219 = !DILocation(line: 78, column: 17, scope: !22213)
!22220 = !DILocation(line: 78, column: 14, scope: !22213)
!22221 = !DILocation(line: 78, column: 23, scope: !22213)
!22222 = !DILocation(line: 78, column: 53, scope: !22213)
!22223 = !DILocation(line: 78, column: 51, scope: !22213)
!22224 = !DILocation(line: 78, column: 25, scope: !22213)
!22225 = !DILocation(line: 78, column: 20, scope: !22213)
!22226 = !DILocation(line: 78, column: 3, scope: !22213)
!22227 = distinct !DISubprogram(name: "rotr_sz", scope: !22157, file: !22157, line: 85, type: !2572, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2565, retainedNodes: !143)
!22228 = !DILocalVariable(name: "x", arg: 1, scope: !22227, file: !22157, line: 85, type: !55)
!22229 = !DILocation(line: 85, column: 17, scope: !22227)
!22230 = !DILocalVariable(name: "n", arg: 2, scope: !22227, file: !22157, line: 85, type: !7)
!22231 = !DILocation(line: 85, column: 24, scope: !22227)
!22232 = !DILocation(line: 87, column: 12, scope: !22227)
!22233 = !DILocation(line: 87, column: 17, scope: !22227)
!22234 = !DILocation(line: 87, column: 14, scope: !22227)
!22235 = !DILocation(line: 87, column: 23, scope: !22227)
!22236 = !DILocation(line: 87, column: 53, scope: !22227)
!22237 = !DILocation(line: 87, column: 51, scope: !22227)
!22238 = !DILocation(line: 87, column: 25, scope: !22227)
!22239 = !DILocation(line: 87, column: 20, scope: !22227)
!22240 = !DILocation(line: 87, column: 3, scope: !22227)
!22241 = distinct !DISubprogram(name: "rotl16", scope: !22157, file: !22157, line: 96, type: !2574, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2565, retainedNodes: !143)
!22242 = !DILocalVariable(name: "x", arg: 1, scope: !22241, file: !22157, line: 96, type: !2576)
!22243 = !DILocation(line: 96, column: 18, scope: !22241)
!22244 = !DILocalVariable(name: "n", arg: 2, scope: !22241, file: !22157, line: 96, type: !7)
!22245 = !DILocation(line: 96, column: 25, scope: !22241)
!22246 = !DILocation(line: 98, column: 12, scope: !22241)
!22247 = !DILocation(line: 98, column: 17, scope: !22241)
!22248 = !DILocation(line: 98, column: 14, scope: !22241)
!22249 = !DILocation(line: 98, column: 23, scope: !22241)
!22250 = !DILocation(line: 98, column: 34, scope: !22241)
!22251 = !DILocation(line: 98, column: 32, scope: !22241)
!22252 = !DILocation(line: 98, column: 25, scope: !22241)
!22253 = !DILocation(line: 98, column: 20, scope: !22241)
!22254 = !DILocation(line: 98, column: 39, scope: !22241)
!22255 = !DILocation(line: 98, column: 10, scope: !22241)
!22256 = !DILocation(line: 98, column: 3, scope: !22241)
!22257 = distinct !DISubprogram(name: "rotr16", scope: !22157, file: !22157, line: 107, type: !2574, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2565, retainedNodes: !143)
!22258 = !DILocalVariable(name: "x", arg: 1, scope: !22257, file: !22157, line: 107, type: !2576)
!22259 = !DILocation(line: 107, column: 18, scope: !22257)
!22260 = !DILocalVariable(name: "n", arg: 2, scope: !22257, file: !22157, line: 107, type: !7)
!22261 = !DILocation(line: 107, column: 25, scope: !22257)
!22262 = !DILocation(line: 109, column: 12, scope: !22257)
!22263 = !DILocation(line: 109, column: 17, scope: !22257)
!22264 = !DILocation(line: 109, column: 14, scope: !22257)
!22265 = !DILocation(line: 109, column: 23, scope: !22257)
!22266 = !DILocation(line: 109, column: 34, scope: !22257)
!22267 = !DILocation(line: 109, column: 32, scope: !22257)
!22268 = !DILocation(line: 109, column: 25, scope: !22257)
!22269 = !DILocation(line: 109, column: 20, scope: !22257)
!22270 = !DILocation(line: 109, column: 39, scope: !22257)
!22271 = !DILocation(line: 109, column: 10, scope: !22257)
!22272 = !DILocation(line: 109, column: 3, scope: !22257)
!22273 = distinct !DISubprogram(name: "rotl8", scope: !22157, file: !22157, line: 118, type: !2578, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2565, retainedNodes: !143)
!22274 = !DILocalVariable(name: "x", arg: 1, scope: !22273, file: !22157, line: 118, type: !2580)
!22275 = !DILocation(line: 118, column: 16, scope: !22273)
!22276 = !DILocalVariable(name: "n", arg: 2, scope: !22273, file: !22157, line: 118, type: !7)
!22277 = !DILocation(line: 118, column: 23, scope: !22273)
!22278 = !DILocation(line: 120, column: 12, scope: !22273)
!22279 = !DILocation(line: 120, column: 17, scope: !22273)
!22280 = !DILocation(line: 120, column: 14, scope: !22273)
!22281 = !DILocation(line: 120, column: 23, scope: !22273)
!22282 = !DILocation(line: 120, column: 33, scope: !22273)
!22283 = !DILocation(line: 120, column: 31, scope: !22273)
!22284 = !DILocation(line: 120, column: 25, scope: !22273)
!22285 = !DILocation(line: 120, column: 20, scope: !22273)
!22286 = !DILocation(line: 120, column: 38, scope: !22273)
!22287 = !DILocation(line: 120, column: 10, scope: !22273)
!22288 = !DILocation(line: 120, column: 3, scope: !22273)
!22289 = distinct !DISubprogram(name: "rotr8", scope: !22157, file: !22157, line: 129, type: !2578, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2565, retainedNodes: !143)
!22290 = !DILocalVariable(name: "x", arg: 1, scope: !22289, file: !22157, line: 129, type: !2580)
!22291 = !DILocation(line: 129, column: 16, scope: !22289)
!22292 = !DILocalVariable(name: "n", arg: 2, scope: !22289, file: !22157, line: 129, type: !7)
!22293 = !DILocation(line: 129, column: 23, scope: !22289)
!22294 = !DILocation(line: 131, column: 12, scope: !22289)
!22295 = !DILocation(line: 131, column: 17, scope: !22289)
!22296 = !DILocation(line: 131, column: 14, scope: !22289)
!22297 = !DILocation(line: 131, column: 23, scope: !22289)
!22298 = !DILocation(line: 131, column: 33, scope: !22289)
!22299 = !DILocation(line: 131, column: 31, scope: !22289)
!22300 = !DILocation(line: 131, column: 25, scope: !22289)
!22301 = !DILocation(line: 131, column: 20, scope: !22289)
!22302 = !DILocation(line: 131, column: 38, scope: !22289)
!22303 = !DILocation(line: 131, column: 10, scope: !22289)
!22304 = !DILocation(line: 131, column: 3, scope: !22289)
!22305 = distinct !DISubprogram(name: "c_strcasecmp", scope: !22306, file: !22306, line: 27, type: !1876, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2582, retainedNodes: !143)
!22306 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22307 = !DILocalVariable(name: "s1", arg: 1, scope: !22305, file: !22306, line: 27, type: !115)
!22308 = !DILocation(line: 27, column: 27, scope: !22305)
!22309 = !DILocalVariable(name: "s2", arg: 2, scope: !22305, file: !22306, line: 27, type: !115)
!22310 = !DILocation(line: 27, column: 43, scope: !22305)
!22311 = !DILocalVariable(name: "p1", scope: !22305, file: !22306, line: 29, type: !464)
!22312 = !DILocation(line: 29, column: 33, scope: !22305)
!22313 = !DILocation(line: 29, column: 62, scope: !22305)
!22314 = !DILocalVariable(name: "p2", scope: !22305, file: !22306, line: 30, type: !464)
!22315 = !DILocation(line: 30, column: 33, scope: !22305)
!22316 = !DILocation(line: 30, column: 62, scope: !22305)
!22317 = !DILocalVariable(name: "c1", scope: !22305, file: !22306, line: 31, type: !466)
!22318 = !DILocation(line: 31, column: 17, scope: !22305)
!22319 = !DILocalVariable(name: "c2", scope: !22305, file: !22306, line: 31, type: !466)
!22320 = !DILocation(line: 31, column: 21, scope: !22305)
!22321 = !DILocation(line: 33, column: 7, scope: !22322)
!22322 = distinct !DILexicalBlock(scope: !22305, file: !22306, line: 33, column: 7)
!22323 = !DILocation(line: 33, column: 13, scope: !22322)
!22324 = !DILocation(line: 33, column: 10, scope: !22322)
!22325 = !DILocation(line: 33, column: 7, scope: !22305)
!22326 = !DILocation(line: 34, column: 5, scope: !22322)
!22327 = !DILocation(line: 36, column: 3, scope: !22305)
!22328 = !DILocation(line: 38, column: 24, scope: !22329)
!22329 = distinct !DILexicalBlock(scope: !22305, file: !22306, line: 37, column: 5)
!22330 = !DILocation(line: 38, column: 23, scope: !22329)
!22331 = !DILocation(line: 38, column: 12, scope: !22329)
!22332 = !DILocation(line: 38, column: 10, scope: !22329)
!22333 = !DILocation(line: 39, column: 24, scope: !22329)
!22334 = !DILocation(line: 39, column: 23, scope: !22329)
!22335 = !DILocation(line: 39, column: 12, scope: !22329)
!22336 = !DILocation(line: 39, column: 10, scope: !22329)
!22337 = !DILocation(line: 41, column: 11, scope: !22338)
!22338 = distinct !DILexicalBlock(scope: !22329, file: !22306, line: 41, column: 11)
!22339 = !DILocation(line: 41, column: 14, scope: !22338)
!22340 = !DILocation(line: 41, column: 11, scope: !22329)
!22341 = !DILocation(line: 42, column: 9, scope: !22338)
!22342 = !DILocation(line: 44, column: 7, scope: !22329)
!22343 = !DILocation(line: 45, column: 7, scope: !22329)
!22344 = !DILocation(line: 46, column: 5, scope: !22329)
!22345 = !DILocation(line: 47, column: 10, scope: !22305)
!22346 = !DILocation(line: 47, column: 16, scope: !22305)
!22347 = !DILocation(line: 47, column: 13, scope: !22305)
!22348 = distinct !{!22348, !22327, !22349}
!22349 = !DILocation(line: 47, column: 18, scope: !22305)
!22350 = !DILocation(line: 50, column: 12, scope: !22351)
!22351 = distinct !DILexicalBlock(scope: !22305, file: !22306, line: 49, column: 7)
!22352 = !DILocation(line: 50, column: 17, scope: !22351)
!22353 = !DILocation(line: 50, column: 15, scope: !22351)
!22354 = !DILocation(line: 50, column: 5, scope: !22351)
!22355 = !DILocation(line: 56, column: 1, scope: !22305)
!22356 = distinct !DISubprogram(name: "close_stream", scope: !22357, file: !22357, line: 56, type: !2588, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2585, retainedNodes: !143)
!22357 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22358 = !DILocalVariable(name: "stream", arg: 1, scope: !22356, file: !22357, line: 56, type: !2590)
!22359 = !DILocation(line: 56, column: 21, scope: !22356)
!22360 = !DILocalVariable(name: "some_pending", scope: !22356, file: !22357, line: 58, type: !2624)
!22361 = !DILocation(line: 58, column: 14, scope: !22356)
!22362 = !DILocation(line: 58, column: 42, scope: !22356)
!22363 = !DILocation(line: 58, column: 30, scope: !22356)
!22364 = !DILocation(line: 58, column: 50, scope: !22356)
!22365 = !DILocalVariable(name: "prev_fail", scope: !22356, file: !22357, line: 59, type: !2624)
!22366 = !DILocation(line: 59, column: 14, scope: !22356)
!22367 = !DILocation(line: 59, column: 27, scope: !22356)
!22368 = !DILocation(line: 59, column: 43, scope: !22356)
!22369 = !DILocalVariable(name: "fclose_fail", scope: !22356, file: !22357, line: 60, type: !2624)
!22370 = !DILocation(line: 60, column: 14, scope: !22356)
!22371 = !DILocation(line: 60, column: 37, scope: !22356)
!22372 = !DILocation(line: 60, column: 29, scope: !22356)
!22373 = !DILocation(line: 60, column: 45, scope: !22356)
!22374 = !DILocation(line: 70, column: 7, scope: !22375)
!22375 = distinct !DILexicalBlock(scope: !22356, file: !22357, line: 70, column: 7)
!22376 = !DILocation(line: 70, column: 17, scope: !22375)
!22377 = !DILocation(line: 70, column: 21, scope: !22375)
!22378 = !DILocation(line: 70, column: 33, scope: !22375)
!22379 = !DILocation(line: 70, column: 37, scope: !22375)
!22380 = !DILocation(line: 70, column: 50, scope: !22375)
!22381 = !DILocation(line: 70, column: 53, scope: !22375)
!22382 = !DILocation(line: 70, column: 59, scope: !22375)
!22383 = !DILocation(line: 70, column: 7, scope: !22356)
!22384 = !DILocation(line: 72, column: 13, scope: !22385)
!22385 = distinct !DILexicalBlock(scope: !22386, file: !22357, line: 72, column: 11)
!22386 = distinct !DILexicalBlock(scope: !22375, file: !22357, line: 71, column: 5)
!22387 = !DILocation(line: 72, column: 11, scope: !22386)
!22388 = !DILocation(line: 73, column: 9, scope: !22385)
!22389 = !DILocation(line: 73, column: 15, scope: !22385)
!22390 = !DILocation(line: 74, column: 7, scope: !22386)
!22391 = !DILocation(line: 77, column: 3, scope: !22356)
!22392 = !DILocation(line: 78, column: 1, scope: !22356)
!22393 = distinct !DISubprogram(name: "cycle_check_init", scope: !22394, file: !22394, line: 43, type: !2628, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2625, retainedNodes: !143)
!22394 = !DIFile(filename: "lib/cycle-check.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22395 = !DILocalVariable(name: "state", arg: 1, scope: !22393, file: !22394, line: 43, type: !2630)
!22396 = !DILocation(line: 43, column: 45, scope: !22393)
!22397 = !DILocation(line: 45, column: 3, scope: !22393)
!22398 = !DILocation(line: 45, column: 10, scope: !22393)
!22399 = !DILocation(line: 45, column: 24, scope: !22393)
!22400 = !DILocation(line: 46, column: 3, scope: !22393)
!22401 = !DILocation(line: 46, column: 10, scope: !22393)
!22402 = !DILocation(line: 46, column: 16, scope: !22393)
!22403 = !{!20053, !2983, i64 24}
!22404 = !DILocation(line: 47, column: 1, scope: !22393)
!22405 = distinct !DISubprogram(name: "cycle_check", scope: !22394, file: !22394, line: 58, type: !2640, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2625, retainedNodes: !143)
!22406 = !DILocalVariable(name: "state", arg: 1, scope: !22405, file: !22394, line: 58, type: !2630)
!22407 = !DILocation(line: 58, column: 40, scope: !22405)
!22408 = !DILocalVariable(name: "sb", arg: 2, scope: !22405, file: !22394, line: 58, type: !2642)
!22409 = !DILocation(line: 58, column: 66, scope: !22405)
!22410 = !DILocation(line: 60, column: 3, scope: !22411)
!22411 = distinct !DILexicalBlock(scope: !22412, file: !22394, line: 60, column: 3)
!22412 = distinct !DILexicalBlock(scope: !22405, file: !22394, line: 60, column: 3)
!22413 = !DILocation(line: 60, column: 3, scope: !22412)
!22414 = !DILocation(line: 65, column: 7, scope: !22415)
!22415 = distinct !DILexicalBlock(scope: !22405, file: !22394, line: 65, column: 7)
!22416 = !DILocation(line: 65, column: 14, scope: !22415)
!22417 = !DILocation(line: 65, column: 28, scope: !22415)
!22418 = !DILocation(line: 65, column: 31, scope: !22415)
!22419 = !DILocation(line: 65, column: 7, scope: !22405)
!22420 = !DILocation(line: 66, column: 5, scope: !22415)
!22421 = !DILocation(line: 70, column: 35, scope: !22422)
!22422 = distinct !DILexicalBlock(scope: !22405, file: !22394, line: 70, column: 7)
!22423 = !DILocation(line: 70, column: 42, scope: !22422)
!22424 = !DILocation(line: 70, column: 32, scope: !22422)
!22425 = !DILocation(line: 70, column: 7, scope: !22422)
!22426 = !DILocation(line: 70, column: 7, scope: !22405)
!22427 = !DILocation(line: 77, column: 11, scope: !22428)
!22428 = distinct !DILexicalBlock(scope: !22429, file: !22394, line: 77, column: 11)
!22429 = distinct !DILexicalBlock(scope: !22422, file: !22394, line: 71, column: 5)
!22430 = !DILocation(line: 77, column: 18, scope: !22428)
!22431 = !DILocation(line: 77, column: 32, scope: !22428)
!22432 = !DILocation(line: 77, column: 11, scope: !22429)
!22433 = !DILocation(line: 78, column: 9, scope: !22428)
!22434 = !DILocation(line: 80, column: 31, scope: !22429)
!22435 = !DILocation(line: 80, column: 35, scope: !22429)
!22436 = !DILocation(line: 80, column: 7, scope: !22429)
!22437 = !DILocation(line: 80, column: 14, scope: !22429)
!22438 = !DILocation(line: 80, column: 22, scope: !22429)
!22439 = !DILocation(line: 80, column: 29, scope: !22429)
!22440 = !DILocation(line: 81, column: 31, scope: !22429)
!22441 = !DILocation(line: 81, column: 35, scope: !22429)
!22442 = !DILocation(line: 81, column: 7, scope: !22429)
!22443 = !DILocation(line: 81, column: 14, scope: !22429)
!22444 = !DILocation(line: 81, column: 22, scope: !22429)
!22445 = !DILocation(line: 81, column: 29, scope: !22429)
!22446 = !DILocation(line: 82, column: 5, scope: !22429)
!22447 = !DILocation(line: 84, column: 3, scope: !22405)
!22448 = !DILocation(line: 85, column: 1, scope: !22405)
!22449 = distinct !DISubprogram(name: "is_zero_or_power_of_two", scope: !22394, file: !22394, line: 37, type: !2665, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2625, retainedNodes: !143)
!22450 = !DILocalVariable(name: "i", arg: 1, scope: !22449, file: !22394, line: 37, type: !456)
!22451 = !DILocation(line: 37, column: 36, scope: !22449)
!22452 = !DILocation(line: 39, column: 11, scope: !22449)
!22453 = !DILocation(line: 39, column: 16, scope: !22449)
!22454 = !DILocation(line: 39, column: 18, scope: !22449)
!22455 = !DILocation(line: 39, column: 13, scope: !22449)
!22456 = !DILocation(line: 39, column: 24, scope: !22449)
!22457 = !DILocation(line: 39, column: 3, scope: !22449)
!22458 = distinct !DISubprogram(name: "opendir_safer", scope: !22459, file: !22459, line: 31, type: !2670, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2667, retainedNodes: !143)
!22459 = !DIFile(filename: "lib/opendir-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22460 = !DILocalVariable(name: "name", arg: 1, scope: !22458, file: !22459, line: 31, type: !115)
!22461 = !DILocation(line: 31, column: 28, scope: !22458)
!22462 = !DILocalVariable(name: "dp", scope: !22458, file: !22459, line: 33, type: !607)
!22463 = !DILocation(line: 33, column: 8, scope: !22458)
!22464 = !DILocation(line: 33, column: 22, scope: !22458)
!22465 = !DILocation(line: 33, column: 13, scope: !22458)
!22466 = !DILocation(line: 35, column: 7, scope: !22467)
!22467 = distinct !DILexicalBlock(scope: !22458, file: !22459, line: 35, column: 7)
!22468 = !DILocation(line: 35, column: 7, scope: !22458)
!22469 = !DILocalVariable(name: "fd", scope: !22470, file: !22459, line: 37, type: !7)
!22470 = distinct !DILexicalBlock(scope: !22467, file: !22459, line: 36, column: 5)
!22471 = !DILocation(line: 37, column: 11, scope: !22470)
!22472 = !DILocation(line: 37, column: 23, scope: !22470)
!22473 = !DILocation(line: 37, column: 16, scope: !22470)
!22474 = !DILocation(line: 39, column: 16, scope: !22475)
!22475 = distinct !DILexicalBlock(scope: !22470, file: !22459, line: 39, column: 11)
!22476 = !DILocation(line: 39, column: 13, scope: !22475)
!22477 = !DILocation(line: 39, column: 19, scope: !22475)
!22478 = !DILocation(line: 39, column: 22, scope: !22475)
!22479 = !DILocation(line: 39, column: 25, scope: !22475)
!22480 = !DILocation(line: 39, column: 11, scope: !22470)
!22481 = !DILocalVariable(name: "newdp", scope: !22482, file: !22459, line: 49, type: !607)
!22482 = distinct !DILexicalBlock(scope: !22475, file: !22459, line: 40, column: 9)
!22483 = !DILocation(line: 49, column: 16, scope: !22482)
!22484 = !DILocalVariable(name: "e", scope: !22482, file: !22459, line: 50, type: !7)
!22485 = !DILocation(line: 50, column: 15, scope: !22482)
!22486 = !DILocalVariable(name: "f", scope: !22482, file: !22459, line: 52, type: !7)
!22487 = !DILocation(line: 52, column: 15, scope: !22482)
!22488 = !DILocation(line: 52, column: 26, scope: !22482)
!22489 = !DILocation(line: 52, column: 19, scope: !22482)
!22490 = !DILocation(line: 53, column: 15, scope: !22491)
!22491 = distinct !DILexicalBlock(scope: !22482, file: !22459, line: 53, column: 15)
!22492 = !DILocation(line: 53, column: 17, scope: !22491)
!22493 = !DILocation(line: 53, column: 15, scope: !22482)
!22494 = !DILocation(line: 55, column: 19, scope: !22495)
!22495 = distinct !DILexicalBlock(scope: !22491, file: !22459, line: 54, column: 13)
!22496 = !DILocation(line: 55, column: 17, scope: !22495)
!22497 = !DILocation(line: 56, column: 21, scope: !22495)
!22498 = !DILocation(line: 57, column: 13, scope: !22495)
!22499 = !DILocation(line: 60, column: 34, scope: !22500)
!22500 = distinct !DILexicalBlock(scope: !22491, file: !22459, line: 59, column: 13)
!22501 = !DILocation(line: 60, column: 23, scope: !22500)
!22502 = !DILocation(line: 60, column: 21, scope: !22500)
!22503 = !DILocation(line: 61, column: 19, scope: !22500)
!22504 = !DILocation(line: 61, column: 17, scope: !22500)
!22505 = !DILocation(line: 62, column: 21, scope: !22506)
!22506 = distinct !DILexicalBlock(scope: !22500, file: !22459, line: 62, column: 19)
!22507 = !DILocation(line: 62, column: 19, scope: !22500)
!22508 = !DILocation(line: 63, column: 24, scope: !22506)
!22509 = !DILocation(line: 63, column: 17, scope: !22506)
!22510 = !DILocation(line: 69, column: 21, scope: !22482)
!22511 = !DILocation(line: 69, column: 11, scope: !22482)
!22512 = !DILocation(line: 70, column: 19, scope: !22482)
!22513 = !DILocation(line: 70, column: 11, scope: !22482)
!22514 = !DILocation(line: 70, column: 17, scope: !22482)
!22515 = !DILocation(line: 71, column: 16, scope: !22482)
!22516 = !DILocation(line: 71, column: 14, scope: !22482)
!22517 = !DILocation(line: 72, column: 9, scope: !22482)
!22518 = !DILocation(line: 73, column: 5, scope: !22470)
!22519 = !DILocation(line: 75, column: 10, scope: !22458)
!22520 = !DILocation(line: 75, column: 3, scope: !22458)
!22521 = distinct !DISubprogram(name: "gettime", scope: !22522, file: !22522, line: 29, type: !2675, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2672, retainedNodes: !143)
!22522 = !DIFile(filename: "lib/gettime.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22523 = !DILocalVariable(name: "ts", arg: 1, scope: !22521, file: !22522, line: 29, type: !2677)
!22524 = !DILocation(line: 29, column: 27, scope: !22521)
!22525 = !DILocation(line: 32, column: 34, scope: !22521)
!22526 = !DILocation(line: 32, column: 3, scope: !22521)
!22527 = !DILocation(line: 39, column: 1, scope: !22521)
!22528 = distinct !DISubprogram(name: "current_timespec", scope: !22522, file: !22522, line: 44, type: !2682, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2672, retainedNodes: !143)
!22529 = !DILocalVariable(name: "ts", scope: !22528, file: !22522, line: 46, type: !2678)
!22530 = !DILocation(line: 46, column: 19, scope: !22528)
!22531 = !DILocation(line: 47, column: 3, scope: !22528)
!22532 = !DILocation(line: 48, column: 3, scope: !22528)
!22533 = distinct !DISubprogram(name: "hard_locale", scope: !22534, file: !22534, line: 38, type: !307, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2684, retainedNodes: !143)
!22534 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22535 = !DILocalVariable(name: "category", arg: 1, scope: !22533, file: !22534, line: 38, type: !7)
!22536 = !DILocation(line: 38, column: 18, scope: !22533)
!22537 = !DILocalVariable(name: "hard", scope: !22533, file: !22534, line: 40, type: !120)
!22538 = !DILocation(line: 40, column: 8, scope: !22533)
!22539 = !DILocalVariable(name: "p", scope: !22533, file: !22534, line: 41, type: !115)
!22540 = !DILocation(line: 41, column: 15, scope: !22533)
!22541 = !DILocation(line: 41, column: 30, scope: !22533)
!22542 = !DILocation(line: 41, column: 19, scope: !22533)
!22543 = !DILocation(line: 43, column: 7, scope: !22544)
!22544 = distinct !DILexicalBlock(scope: !22533, file: !22534, line: 43, column: 7)
!22545 = !DILocation(line: 43, column: 7, scope: !22533)
!22546 = !DILocation(line: 47, column: 23, scope: !22547)
!22547 = distinct !DILexicalBlock(scope: !22548, file: !22534, line: 47, column: 15)
!22548 = distinct !DILexicalBlock(scope: !22549, file: !22534, line: 46, column: 9)
!22549 = distinct !DILexicalBlock(scope: !22550, file: !22534, line: 45, column: 11)
!22550 = distinct !DILexicalBlock(scope: !22544, file: !22534, line: 44, column: 5)
!22551 = !DILocation(line: 47, column: 15, scope: !22547)
!22552 = !DILocation(line: 47, column: 31, scope: !22547)
!22553 = !DILocation(line: 47, column: 36, scope: !22547)
!22554 = !DILocation(line: 47, column: 47, scope: !22547)
!22555 = !DILocation(line: 47, column: 39, scope: !22547)
!22556 = !DILocation(line: 47, column: 59, scope: !22547)
!22557 = !DILocation(line: 47, column: 15, scope: !22548)
!22558 = !DILocation(line: 48, column: 18, scope: !22547)
!22559 = !DILocation(line: 48, column: 13, scope: !22547)
!22560 = !DILocation(line: 69, column: 5, scope: !22550)
!22561 = !DILocation(line: 71, column: 10, scope: !22533)
!22562 = !DILocation(line: 71, column: 3, scope: !22533)
!22563 = distinct !DISubprogram(name: "hash_pjw", scope: !22564, file: !22564, line: 31, type: !547, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2687, retainedNodes: !143)
!22564 = !DIFile(filename: "lib/hash-pjw.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22565 = !DILocalVariable(name: "x", arg: 1, scope: !22563, file: !22564, line: 31, type: !425)
!22566 = !DILocation(line: 31, column: 23, scope: !22563)
!22567 = !DILocalVariable(name: "tablesize", arg: 2, scope: !22563, file: !22564, line: 31, type: !55)
!22568 = !DILocation(line: 31, column: 33, scope: !22563)
!22569 = !DILocalVariable(name: "s", scope: !22563, file: !22564, line: 33, type: !115)
!22570 = !DILocation(line: 33, column: 15, scope: !22563)
!22571 = !DILocalVariable(name: "h", scope: !22563, file: !22564, line: 34, type: !55)
!22572 = !DILocation(line: 34, column: 10, scope: !22563)
!22573 = !DILocation(line: 36, column: 12, scope: !22574)
!22574 = distinct !DILexicalBlock(scope: !22563, file: !22564, line: 36, column: 3)
!22575 = !DILocation(line: 36, column: 10, scope: !22574)
!22576 = !DILocation(line: 36, column: 8, scope: !22574)
!22577 = !DILocation(line: 36, column: 16, scope: !22578)
!22578 = distinct !DILexicalBlock(scope: !22574, file: !22564, line: 36, column: 3)
!22579 = !DILocation(line: 36, column: 15, scope: !22578)
!22580 = !DILocation(line: 36, column: 3, scope: !22574)
!22581 = !DILocation(line: 37, column: 10, scope: !22578)
!22582 = !DILocation(line: 37, column: 9, scope: !22578)
!22583 = !DILocation(line: 37, column: 16, scope: !22578)
!22584 = !DILocation(line: 37, column: 18, scope: !22578)
!22585 = !DILocation(line: 37, column: 27, scope: !22578)
!22586 = !DILocation(line: 37, column: 29, scope: !22578)
!22587 = !DILocation(line: 37, column: 24, scope: !22578)
!22588 = !DILocation(line: 37, column: 12, scope: !22578)
!22589 = !DILocation(line: 37, column: 7, scope: !22578)
!22590 = !DILocation(line: 37, column: 5, scope: !22578)
!22591 = !DILocation(line: 36, column: 20, scope: !22578)
!22592 = !DILocation(line: 36, column: 3, scope: !22578)
!22593 = distinct !{!22593, !22580, !22594}
!22594 = !DILocation(line: 37, column: 48, scope: !22574)
!22595 = !DILocation(line: 39, column: 10, scope: !22563)
!22596 = !DILocation(line: 39, column: 14, scope: !22563)
!22597 = !DILocation(line: 39, column: 12, scope: !22563)
!22598 = !DILocation(line: 39, column: 3, scope: !22563)
!22599 = distinct !DISubprogram(name: "i_ring_init", scope: !22600, file: !22600, line: 25, type: !2693, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2690, retainedNodes: !143)
!22600 = !DIFile(filename: "lib/i-ring.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22601 = !DILocalVariable(name: "ir", arg: 1, scope: !22599, file: !22600, line: 25, type: !2695)
!22602 = !DILocation(line: 25, column: 22, scope: !22599)
!22603 = !DILocalVariable(name: "default_val", arg: 2, scope: !22599, file: !22600, line: 25, type: !7)
!22604 = !DILocation(line: 25, column: 30, scope: !22599)
!22605 = !DILocalVariable(name: "i", scope: !22599, file: !22600, line: 27, type: !7)
!22606 = !DILocation(line: 27, column: 7, scope: !22599)
!22607 = !DILocation(line: 28, column: 3, scope: !22599)
!22608 = !DILocation(line: 28, column: 7, scope: !22599)
!22609 = !DILocation(line: 28, column: 16, scope: !22599)
!22610 = !{!3825, !3107, i64 28}
!22611 = !DILocation(line: 29, column: 3, scope: !22599)
!22612 = !DILocation(line: 29, column: 7, scope: !22599)
!22613 = !DILocation(line: 29, column: 16, scope: !22599)
!22614 = !{!3825, !2983, i64 20}
!22615 = !DILocation(line: 30, column: 3, scope: !22599)
!22616 = !DILocation(line: 30, column: 7, scope: !22599)
!22617 = !DILocation(line: 30, column: 15, scope: !22599)
!22618 = !{!3825, !2983, i64 24}
!22619 = !DILocation(line: 31, column: 10, scope: !22620)
!22620 = distinct !DILexicalBlock(scope: !22599, file: !22600, line: 31, column: 3)
!22621 = !DILocation(line: 31, column: 8, scope: !22620)
!22622 = !DILocation(line: 31, column: 15, scope: !22623)
!22623 = distinct !DILexicalBlock(scope: !22620, file: !22600, line: 31, column: 3)
!22624 = !DILocation(line: 31, column: 17, scope: !22623)
!22625 = !DILocation(line: 31, column: 3, scope: !22620)
!22626 = !DILocation(line: 32, column: 22, scope: !22623)
!22627 = !DILocation(line: 32, column: 5, scope: !22623)
!22628 = !DILocation(line: 32, column: 9, scope: !22623)
!22629 = !DILocation(line: 32, column: 17, scope: !22623)
!22630 = !DILocation(line: 32, column: 20, scope: !22623)
!22631 = !DILocation(line: 31, column: 33, scope: !22623)
!22632 = !DILocation(line: 31, column: 3, scope: !22623)
!22633 = distinct !{!22633, !22625, !22634}
!22634 = !DILocation(line: 32, column: 22, scope: !22620)
!22635 = !DILocation(line: 33, column: 24, scope: !22599)
!22636 = !DILocation(line: 33, column: 3, scope: !22599)
!22637 = !DILocation(line: 33, column: 7, scope: !22599)
!22638 = !DILocation(line: 33, column: 22, scope: !22599)
!22639 = !{!3825, !2983, i64 16}
!22640 = !DILocation(line: 34, column: 1, scope: !22599)
!22641 = distinct !DISubprogram(name: "i_ring_empty", scope: !22600, file: !22600, line: 37, type: !2704, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2690, retainedNodes: !143)
!22642 = !DILocalVariable(name: "ir", arg: 1, scope: !22641, file: !22600, line: 37, type: !2706)
!22643 = !DILocation(line: 37, column: 29, scope: !22641)
!22644 = !DILocation(line: 39, column: 10, scope: !22641)
!22645 = !DILocation(line: 39, column: 14, scope: !22641)
!22646 = !DILocation(line: 39, column: 3, scope: !22641)
!22647 = distinct !DISubprogram(name: "i_ring_push", scope: !22600, file: !22600, line: 43, type: !2708, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2690, retainedNodes: !143)
!22648 = !DILocalVariable(name: "ir", arg: 1, scope: !22647, file: !22600, line: 43, type: !2695)
!22649 = !DILocation(line: 43, column: 22, scope: !22647)
!22650 = !DILocalVariable(name: "val", arg: 2, scope: !22647, file: !22600, line: 43, type: !7)
!22651 = !DILocation(line: 43, column: 30, scope: !22647)
!22652 = !DILocalVariable(name: "dest_idx", scope: !22647, file: !22600, line: 45, type: !70)
!22653 = !DILocation(line: 45, column: 16, scope: !22647)
!22654 = !DILocation(line: 45, column: 28, scope: !22647)
!22655 = !DILocation(line: 45, column: 32, scope: !22647)
!22656 = !DILocation(line: 45, column: 44, scope: !22647)
!22657 = !DILocation(line: 45, column: 48, scope: !22647)
!22658 = !DILocation(line: 45, column: 43, scope: !22647)
!22659 = !DILocation(line: 45, column: 41, scope: !22647)
!22660 = !DILocation(line: 45, column: 58, scope: !22647)
!22661 = !DILocalVariable(name: "old_val", scope: !22647, file: !22600, line: 46, type: !7)
!22662 = !DILocation(line: 46, column: 7, scope: !22647)
!22663 = !DILocation(line: 46, column: 17, scope: !22647)
!22664 = !DILocation(line: 46, column: 21, scope: !22647)
!22665 = !DILocation(line: 46, column: 29, scope: !22647)
!22666 = !DILocation(line: 47, column: 27, scope: !22647)
!22667 = !DILocation(line: 47, column: 3, scope: !22647)
!22668 = !DILocation(line: 47, column: 7, scope: !22647)
!22669 = !DILocation(line: 47, column: 15, scope: !22647)
!22670 = !DILocation(line: 47, column: 25, scope: !22647)
!22671 = !DILocation(line: 48, column: 18, scope: !22647)
!22672 = !DILocation(line: 48, column: 3, scope: !22647)
!22673 = !DILocation(line: 48, column: 7, scope: !22647)
!22674 = !DILocation(line: 48, column: 16, scope: !22647)
!22675 = !DILocation(line: 49, column: 7, scope: !22676)
!22676 = distinct !DILexicalBlock(scope: !22647, file: !22600, line: 49, column: 7)
!22677 = !DILocation(line: 49, column: 19, scope: !22676)
!22678 = !DILocation(line: 49, column: 23, scope: !22676)
!22679 = !DILocation(line: 49, column: 16, scope: !22676)
!22680 = !DILocation(line: 49, column: 7, scope: !22647)
!22681 = !DILocation(line: 50, column: 20, scope: !22676)
!22682 = !DILocation(line: 50, column: 24, scope: !22676)
!22683 = !DILocation(line: 50, column: 35, scope: !22676)
!22684 = !DILocation(line: 50, column: 39, scope: !22676)
!22685 = !DILocation(line: 50, column: 34, scope: !22676)
!22686 = !DILocation(line: 50, column: 32, scope: !22676)
!22687 = !DILocation(line: 50, column: 49, scope: !22676)
!22688 = !DILocation(line: 50, column: 5, scope: !22676)
!22689 = !DILocation(line: 50, column: 9, scope: !22676)
!22690 = !DILocation(line: 50, column: 17, scope: !22676)
!22691 = !DILocation(line: 51, column: 3, scope: !22647)
!22692 = !DILocation(line: 51, column: 7, scope: !22647)
!22693 = !DILocation(line: 51, column: 16, scope: !22647)
!22694 = !DILocation(line: 52, column: 10, scope: !22647)
!22695 = !DILocation(line: 52, column: 3, scope: !22647)
!22696 = distinct !DISubprogram(name: "i_ring_pop", scope: !22600, file: !22600, line: 56, type: !2710, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2690, retainedNodes: !143)
!22697 = !DILocalVariable(name: "ir", arg: 1, scope: !22696, file: !22600, line: 56, type: !2695)
!22698 = !DILocation(line: 56, column: 21, scope: !22696)
!22699 = !DILocalVariable(name: "top_val", scope: !22696, file: !22600, line: 58, type: !7)
!22700 = !DILocation(line: 58, column: 7, scope: !22696)
!22701 = !DILocation(line: 59, column: 21, scope: !22702)
!22702 = distinct !DILexicalBlock(scope: !22696, file: !22600, line: 59, column: 7)
!22703 = !DILocation(line: 59, column: 7, scope: !22702)
!22704 = !DILocation(line: 59, column: 7, scope: !22696)
!22705 = !DILocation(line: 60, column: 5, scope: !22702)
!22706 = !DILocation(line: 61, column: 13, scope: !22696)
!22707 = !DILocation(line: 61, column: 17, scope: !22696)
!22708 = !DILocation(line: 61, column: 25, scope: !22696)
!22709 = !DILocation(line: 61, column: 29, scope: !22696)
!22710 = !DILocation(line: 61, column: 11, scope: !22696)
!22711 = !DILocation(line: 62, column: 31, scope: !22696)
!22712 = !DILocation(line: 62, column: 35, scope: !22696)
!22713 = !DILocation(line: 62, column: 3, scope: !22696)
!22714 = !DILocation(line: 62, column: 7, scope: !22696)
!22715 = !DILocation(line: 62, column: 15, scope: !22696)
!22716 = !DILocation(line: 62, column: 19, scope: !22696)
!22717 = !DILocation(line: 62, column: 29, scope: !22696)
!22718 = !DILocation(line: 63, column: 7, scope: !22719)
!22719 = distinct !DILexicalBlock(scope: !22696, file: !22600, line: 63, column: 7)
!22720 = !DILocation(line: 63, column: 11, scope: !22719)
!22721 = !DILocation(line: 63, column: 23, scope: !22719)
!22722 = !DILocation(line: 63, column: 27, scope: !22719)
!22723 = !DILocation(line: 63, column: 20, scope: !22719)
!22724 = !DILocation(line: 63, column: 7, scope: !22696)
!22725 = !DILocation(line: 64, column: 5, scope: !22719)
!22726 = !DILocation(line: 64, column: 9, scope: !22719)
!22727 = !DILocation(line: 64, column: 18, scope: !22719)
!22728 = !DILocation(line: 66, column: 22, scope: !22719)
!22729 = !DILocation(line: 66, column: 26, scope: !22719)
!22730 = !DILocation(line: 66, column: 35, scope: !22719)
!22731 = !DILocation(line: 66, column: 49, scope: !22719)
!22732 = !DILocation(line: 66, column: 54, scope: !22719)
!22733 = !DILocation(line: 66, column: 5, scope: !22719)
!22734 = !DILocation(line: 66, column: 9, scope: !22719)
!22735 = !DILocation(line: 66, column: 18, scope: !22719)
!22736 = !DILocation(line: 67, column: 10, scope: !22696)
!22737 = !DILocation(line: 67, column: 3, scope: !22696)
!22738 = distinct !DISubprogram(name: "locale_charset", scope: !22739, file: !22739, line: 687, type: !2715, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2712, retainedNodes: !143)
!22739 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22740 = !DILocalVariable(name: "codeset", scope: !22738, file: !22739, line: 689, type: !115)
!22741 = !DILocation(line: 689, column: 15, scope: !22738)
!22742 = !DILocation(line: 696, column: 13, scope: !22738)
!22743 = !DILocation(line: 696, column: 11, scope: !22738)
!22744 = !DILocation(line: 754, column: 7, scope: !22745)
!22745 = distinct !DILexicalBlock(scope: !22738, file: !22739, line: 754, column: 7)
!22746 = !DILocation(line: 754, column: 15, scope: !22745)
!22747 = !DILocation(line: 754, column: 7, scope: !22738)
!22748 = !DILocation(line: 756, column: 13, scope: !22745)
!22749 = !DILocation(line: 756, column: 5, scope: !22745)
!22750 = !DILocation(line: 907, column: 13, scope: !22751)
!22751 = distinct !DILexicalBlock(scope: !22752, file: !22739, line: 907, column: 13)
!22752 = distinct !DILexicalBlock(scope: !22753, file: !22739, line: 897, column: 7)
!22753 = distinct !DILexicalBlock(scope: !22738, file: !22739, line: 856, column: 3)
!22754 = !DILocation(line: 907, column: 24, scope: !22751)
!22755 = !DILocation(line: 907, column: 13, scope: !22752)
!22756 = !DILocation(line: 908, column: 19, scope: !22751)
!22757 = !DILocation(line: 908, column: 11, scope: !22751)
!22758 = !DILocation(line: 995, column: 10, scope: !22738)
!22759 = !DILocation(line: 995, column: 3, scope: !22738)
!22760 = distinct !DISubprogram(name: "openat_safer", scope: !22761, file: !22761, line: 29, type: !22762, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2716, retainedNodes: !143)
!22761 = !DIFile(filename: "lib/openat-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22762 = !DISubroutineType(types: !22763)
!22763 = !{!7, !7, !115, !7, null}
!22764 = !DILocalVariable(name: "fd", arg: 1, scope: !22760, file: !22761, line: 29, type: !7)
!22765 = !DILocation(line: 29, column: 19, scope: !22760)
!22766 = !DILocalVariable(name: "file", arg: 2, scope: !22760, file: !22761, line: 29, type: !115)
!22767 = !DILocation(line: 29, column: 35, scope: !22760)
!22768 = !DILocalVariable(name: "flags", arg: 3, scope: !22760, file: !22761, line: 29, type: !7)
!22769 = !DILocation(line: 29, column: 45, scope: !22760)
!22770 = !DILocalVariable(name: "mode", scope: !22760, file: !22761, line: 31, type: !160)
!22771 = !DILocation(line: 31, column: 10, scope: !22760)
!22772 = !DILocation(line: 33, column: 7, scope: !22773)
!22773 = distinct !DILexicalBlock(scope: !22760, file: !22761, line: 33, column: 7)
!22774 = !DILocation(line: 33, column: 13, scope: !22773)
!22775 = !DILocation(line: 33, column: 7, scope: !22760)
!22776 = !DILocalVariable(name: "ap", scope: !22777, file: !22761, line: 35, type: !2721)
!22777 = distinct !DILexicalBlock(scope: !22773, file: !22761, line: 34, column: 5)
!22778 = !DILocation(line: 35, column: 15, scope: !22777)
!22779 = !DILocation(line: 36, column: 7, scope: !22777)
!22780 = !DILocation(line: 40, column: 14, scope: !22777)
!22781 = !DILocation(line: 40, column: 12, scope: !22777)
!22782 = !DILocation(line: 42, column: 7, scope: !22777)
!22783 = !DILocation(line: 43, column: 5, scope: !22777)
!22784 = !DILocation(line: 45, column: 28, scope: !22760)
!22785 = !DILocation(line: 45, column: 32, scope: !22760)
!22786 = !DILocation(line: 45, column: 38, scope: !22760)
!22787 = !DILocation(line: 45, column: 45, scope: !22760)
!22788 = !DILocation(line: 45, column: 20, scope: !22760)
!22789 = !DILocation(line: 45, column: 10, scope: !22760)
!22790 = !DILocation(line: 45, column: 3, scope: !22760)
!22791 = distinct !DISubprogram(name: "randint_new", scope: !2737, file: !2737, line: 71, type: !2733, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2730, retainedNodes: !143)
!22792 = !DILocalVariable(name: "source", arg: 1, scope: !22791, file: !2737, line: 71, type: !2740)
!22793 = !DILocation(line: 71, column: 38, scope: !22791)
!22794 = !DILocalVariable(name: "s", scope: !22791, file: !2737, line: 73, type: !2735)
!22795 = !DILocation(line: 73, column: 26, scope: !22791)
!22796 = !DILocation(line: 73, column: 30, scope: !22791)
!22797 = !DILocation(line: 74, column: 15, scope: !22791)
!22798 = !DILocation(line: 74, column: 3, scope: !22791)
!22799 = !DILocation(line: 74, column: 6, scope: !22791)
!22800 = !DILocation(line: 74, column: 13, scope: !22791)
!22801 = !{!22802, !2996, i64 0}
!22802 = !{!"randint_source", !2996, i64 0, !3180, i64 8, !3180, i64 16}
!22803 = !DILocation(line: 75, column: 16, scope: !22791)
!22804 = !DILocation(line: 75, column: 19, scope: !22791)
!22805 = !DILocation(line: 75, column: 27, scope: !22791)
!22806 = !{!22802, !3180, i64 16}
!22807 = !DILocation(line: 75, column: 3, scope: !22791)
!22808 = !DILocation(line: 75, column: 6, scope: !22791)
!22809 = !DILocation(line: 75, column: 14, scope: !22791)
!22810 = !{!22802, !3180, i64 8}
!22811 = !DILocation(line: 76, column: 10, scope: !22791)
!22812 = !DILocation(line: 76, column: 3, scope: !22791)
!22813 = distinct !DISubprogram(name: "randint_all_new", scope: !2737, file: !2737, line: 84, type: !2746, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2730, retainedNodes: !143)
!22814 = !DILocalVariable(name: "name", arg: 1, scope: !22813, file: !2737, line: 84, type: !115)
!22815 = !DILocation(line: 84, column: 30, scope: !22813)
!22816 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !22813, file: !2737, line: 84, type: !55)
!22817 = !DILocation(line: 84, column: 43, scope: !22813)
!22818 = !DILocalVariable(name: "source", scope: !22813, file: !2737, line: 86, type: !2740)
!22819 = !DILocation(line: 86, column: 27, scope: !22813)
!22820 = !DILocation(line: 86, column: 50, scope: !22813)
!22821 = !DILocation(line: 86, column: 56, scope: !22813)
!22822 = !DILocation(line: 86, column: 36, scope: !22813)
!22823 = !DILocation(line: 87, column: 11, scope: !22813)
!22824 = !DILocation(line: 87, column: 33, scope: !22813)
!22825 = !DILocation(line: 87, column: 20, scope: !22813)
!22826 = !DILocation(line: 87, column: 3, scope: !22813)
!22827 = distinct !DISubprogram(name: "randint_get_source", scope: !2737, file: !2737, line: 93, type: !2748, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2730, retainedNodes: !143)
!22828 = !DILocalVariable(name: "s", arg: 1, scope: !22827, file: !2737, line: 93, type: !2750)
!22829 = !DILocation(line: 93, column: 50, scope: !22827)
!22830 = !DILocation(line: 95, column: 10, scope: !22827)
!22831 = !DILocation(line: 95, column: 13, scope: !22827)
!22832 = !DILocation(line: 95, column: 3, scope: !22827)
!22833 = distinct !DISubprogram(name: "randint_genmax", scope: !2737, file: !2737, line: 114, type: !2752, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2730, retainedNodes: !143)
!22834 = !DILocalVariable(name: "s", arg: 1, scope: !22833, file: !2737, line: 114, type: !2735)
!22835 = !DILocation(line: 114, column: 40, scope: !22833)
!22836 = !DILocalVariable(name: "genmax", arg: 2, scope: !22833, file: !2737, line: 114, type: !2744)
!22837 = !DILocation(line: 114, column: 51, scope: !22833)
!22838 = !DILocalVariable(name: "source", scope: !22833, file: !2737, line: 116, type: !2740)
!22839 = !DILocation(line: 116, column: 27, scope: !22833)
!22840 = !DILocation(line: 116, column: 36, scope: !22833)
!22841 = !DILocation(line: 116, column: 39, scope: !22833)
!22842 = !DILocalVariable(name: "randnum", scope: !22833, file: !2737, line: 117, type: !2744)
!22843 = !DILocation(line: 117, column: 11, scope: !22833)
!22844 = !DILocation(line: 117, column: 21, scope: !22833)
!22845 = !DILocation(line: 117, column: 24, scope: !22833)
!22846 = !DILocalVariable(name: "randmax", scope: !22833, file: !2737, line: 118, type: !2744)
!22847 = !DILocation(line: 118, column: 11, scope: !22833)
!22848 = !DILocation(line: 118, column: 21, scope: !22833)
!22849 = !DILocation(line: 118, column: 24, scope: !22833)
!22850 = !DILocalVariable(name: "choices", scope: !22833, file: !2737, line: 119, type: !2744)
!22851 = !DILocation(line: 119, column: 11, scope: !22833)
!22852 = !DILocation(line: 119, column: 21, scope: !22833)
!22853 = !DILocation(line: 119, column: 28, scope: !22833)
!22854 = !DILocation(line: 121, column: 3, scope: !22833)
!22855 = !DILocation(line: 123, column: 11, scope: !22856)
!22856 = distinct !DILexicalBlock(scope: !22857, file: !2737, line: 123, column: 11)
!22857 = distinct !DILexicalBlock(scope: !22833, file: !2737, line: 122, column: 5)
!22858 = !DILocation(line: 123, column: 21, scope: !22856)
!22859 = !DILocation(line: 123, column: 19, scope: !22856)
!22860 = !DILocation(line: 123, column: 11, scope: !22857)
!22861 = !DILocalVariable(name: "i", scope: !22862, file: !2737, line: 128, type: !55)
!22862 = distinct !DILexicalBlock(scope: !22856, file: !2737, line: 124, column: 9)
!22863 = !DILocation(line: 128, column: 18, scope: !22862)
!22864 = !DILocalVariable(name: "rmax", scope: !22862, file: !2737, line: 129, type: !2744)
!22865 = !DILocation(line: 129, column: 19, scope: !22862)
!22866 = !DILocation(line: 129, column: 26, scope: !22862)
!22867 = !DILocalVariable(name: "buf", scope: !22862, file: !2737, line: 130, type: !2754)
!22868 = !DILocation(line: 130, column: 25, scope: !22862)
!22869 = !DILocation(line: 132, column: 11, scope: !22862)
!22870 = !DILocation(line: 134, column: 34, scope: !22871)
!22871 = distinct !DILexicalBlock(scope: !22862, file: !2737, line: 133, column: 13)
!22872 = !DILocation(line: 134, column: 22, scope: !22871)
!22873 = !DILocation(line: 134, column: 40, scope: !22871)
!22874 = !DILocation(line: 134, column: 20, scope: !22871)
!22875 = !DILocation(line: 135, column: 16, scope: !22871)
!22876 = !DILocation(line: 136, column: 13, scope: !22871)
!22877 = !DILocation(line: 137, column: 18, scope: !22862)
!22878 = !DILocation(line: 137, column: 25, scope: !22862)
!22879 = !DILocation(line: 137, column: 23, scope: !22862)
!22880 = distinct !{!22880, !22869, !22881}
!22881 = !DILocation(line: 137, column: 31, scope: !22862)
!22882 = !DILocation(line: 139, column: 21, scope: !22862)
!22883 = !DILocation(line: 139, column: 29, scope: !22862)
!22884 = !DILocation(line: 139, column: 34, scope: !22862)
!22885 = !DILocation(line: 139, column: 11, scope: !22862)
!22886 = !DILocation(line: 148, column: 13, scope: !22862)
!22887 = !DILocation(line: 150, column: 11, scope: !22862)
!22888 = !DILocation(line: 152, column: 37, scope: !22889)
!22889 = distinct !DILexicalBlock(scope: !22862, file: !2737, line: 151, column: 13)
!22890 = !DILocation(line: 152, column: 25, scope: !22889)
!22891 = !DILocation(line: 152, column: 52, scope: !22889)
!22892 = !DILocation(line: 152, column: 48, scope: !22889)
!22893 = !DILocation(line: 152, column: 46, scope: !22889)
!22894 = !DILocation(line: 152, column: 23, scope: !22889)
!22895 = !DILocation(line: 153, column: 37, scope: !22889)
!22896 = !DILocation(line: 153, column: 25, scope: !22889)
!22897 = !DILocation(line: 153, column: 46, scope: !22889)
!22898 = !DILocation(line: 153, column: 23, scope: !22889)
!22899 = !DILocation(line: 154, column: 16, scope: !22889)
!22900 = !DILocation(line: 155, column: 13, scope: !22889)
!22901 = !DILocation(line: 156, column: 18, scope: !22862)
!22902 = !DILocation(line: 156, column: 28, scope: !22862)
!22903 = !DILocation(line: 156, column: 26, scope: !22862)
!22904 = distinct !{!22904, !22887, !22905}
!22905 = !DILocation(line: 156, column: 34, scope: !22862)
!22906 = !DILocation(line: 157, column: 9, scope: !22862)
!22907 = !DILocation(line: 159, column: 11, scope: !22908)
!22908 = distinct !DILexicalBlock(scope: !22857, file: !2737, line: 159, column: 11)
!22909 = !DILocation(line: 159, column: 22, scope: !22908)
!22910 = !DILocation(line: 159, column: 19, scope: !22908)
!22911 = !DILocation(line: 159, column: 11, scope: !22857)
!22912 = !DILocation(line: 161, column: 24, scope: !22913)
!22913 = distinct !DILexicalBlock(scope: !22908, file: !2737, line: 160, column: 9)
!22914 = !DILocation(line: 161, column: 27, scope: !22913)
!22915 = !DILocation(line: 161, column: 35, scope: !22913)
!22916 = !DILocation(line: 161, column: 11, scope: !22913)
!22917 = !DILocation(line: 161, column: 14, scope: !22913)
!22918 = !DILocation(line: 161, column: 22, scope: !22913)
!22919 = !DILocation(line: 162, column: 18, scope: !22913)
!22920 = !DILocation(line: 162, column: 11, scope: !22913)
!22921 = !DILocalVariable(name: "excess_choices", scope: !22922, file: !2737, line: 176, type: !2744)
!22922 = distinct !DILexicalBlock(scope: !22908, file: !2737, line: 165, column: 9)
!22923 = !DILocation(line: 176, column: 19, scope: !22922)
!22924 = !DILocation(line: 176, column: 36, scope: !22922)
!22925 = !DILocation(line: 176, column: 46, scope: !22922)
!22926 = !DILocation(line: 176, column: 44, scope: !22922)
!22927 = !DILocalVariable(name: "unusable_choices", scope: !22922, file: !2737, line: 177, type: !2744)
!22928 = !DILocation(line: 177, column: 19, scope: !22922)
!22929 = !DILocation(line: 177, column: 38, scope: !22922)
!22930 = !DILocation(line: 177, column: 55, scope: !22922)
!22931 = !DILocation(line: 177, column: 53, scope: !22922)
!22932 = !DILocalVariable(name: "last_usable_choice", scope: !22922, file: !2737, line: 178, type: !2744)
!22933 = !DILocation(line: 178, column: 19, scope: !22922)
!22934 = !DILocation(line: 178, column: 40, scope: !22922)
!22935 = !DILocation(line: 178, column: 50, scope: !22922)
!22936 = !DILocation(line: 178, column: 48, scope: !22922)
!22937 = !DILocalVariable(name: "reduced_randnum", scope: !22922, file: !2737, line: 179, type: !2744)
!22938 = !DILocation(line: 179, column: 19, scope: !22922)
!22939 = !DILocation(line: 179, column: 37, scope: !22922)
!22940 = !DILocation(line: 179, column: 47, scope: !22922)
!22941 = !DILocation(line: 179, column: 45, scope: !22922)
!22942 = !DILocation(line: 181, column: 15, scope: !22943)
!22943 = distinct !DILexicalBlock(scope: !22922, file: !2737, line: 181, column: 15)
!22944 = !DILocation(line: 181, column: 26, scope: !22943)
!22945 = !DILocation(line: 181, column: 23, scope: !22943)
!22946 = !DILocation(line: 181, column: 15, scope: !22922)
!22947 = !DILocation(line: 183, column: 28, scope: !22948)
!22948 = distinct !DILexicalBlock(scope: !22943, file: !2737, line: 182, column: 13)
!22949 = !DILocation(line: 183, column: 38, scope: !22948)
!22950 = !DILocation(line: 183, column: 36, scope: !22948)
!22951 = !DILocation(line: 183, column: 15, scope: !22948)
!22952 = !DILocation(line: 183, column: 18, scope: !22948)
!22953 = !DILocation(line: 183, column: 26, scope: !22948)
!22954 = !DILocation(line: 184, column: 28, scope: !22948)
!22955 = !DILocation(line: 184, column: 45, scope: !22948)
!22956 = !DILocation(line: 184, column: 43, scope: !22948)
!22957 = !DILocation(line: 184, column: 15, scope: !22948)
!22958 = !DILocation(line: 184, column: 18, scope: !22948)
!22959 = !DILocation(line: 184, column: 26, scope: !22948)
!22960 = !DILocation(line: 185, column: 22, scope: !22948)
!22961 = !DILocation(line: 185, column: 15, scope: !22948)
!22962 = !DILocation(line: 190, column: 21, scope: !22922)
!22963 = !DILocation(line: 190, column: 19, scope: !22922)
!22964 = !DILocation(line: 191, column: 21, scope: !22922)
!22965 = !DILocation(line: 191, column: 38, scope: !22922)
!22966 = !DILocation(line: 191, column: 19, scope: !22922)
!22967 = distinct !{!22967, !22854, !22968}
!22968 = !DILocation(line: 193, column: 5, scope: !22833)
!22969 = !DILocation(line: 194, column: 1, scope: !22833)
!22970 = distinct !DISubprogram(name: "shift_left", scope: !2737, file: !2737, line: 104, type: !2759, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2730, retainedNodes: !143)
!22971 = !DILocalVariable(name: "x", arg: 1, scope: !22970, file: !2737, line: 104, type: !2744)
!22972 = !DILocation(line: 104, column: 43, scope: !22970)
!22973 = !DILocation(line: 106, column: 27, scope: !22970)
!22974 = !DILocation(line: 106, column: 29, scope: !22970)
!22975 = !DILocation(line: 106, column: 3, scope: !22970)
!22976 = distinct !DISubprogram(name: "randint_free", scope: !2737, file: !2737, line: 199, type: !2755, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2730, retainedNodes: !143)
!22977 = !DILocalVariable(name: "s", arg: 1, scope: !22976, file: !2737, line: 199, type: !2735)
!22978 = !DILocation(line: 199, column: 38, scope: !22976)
!22979 = !DILocation(line: 201, column: 19, scope: !22976)
!22980 = !DILocation(line: 201, column: 3, scope: !22976)
!22981 = !DILocation(line: 202, column: 9, scope: !22976)
!22982 = !DILocation(line: 202, column: 3, scope: !22976)
!22983 = !DILocation(line: 203, column: 1, scope: !22976)
!22984 = distinct !DISubprogram(name: "randint_all_free", scope: !2737, file: !2737, line: 209, type: !2757, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2730, retainedNodes: !143)
!22985 = !DILocalVariable(name: "s", arg: 1, scope: !22984, file: !2737, line: 209, type: !2735)
!22986 = !DILocation(line: 209, column: 42, scope: !22984)
!22987 = !DILocalVariable(name: "r", scope: !22984, file: !2737, line: 211, type: !7)
!22988 = !DILocation(line: 211, column: 7, scope: !22984)
!22989 = !DILocation(line: 211, column: 26, scope: !22984)
!22990 = !DILocation(line: 211, column: 29, scope: !22984)
!22991 = !DILocation(line: 211, column: 11, scope: !22984)
!22992 = !DILocalVariable(name: "e", scope: !22984, file: !2737, line: 212, type: !7)
!22993 = !DILocation(line: 212, column: 7, scope: !22984)
!22994 = !DILocation(line: 212, column: 11, scope: !22984)
!22995 = !DILocation(line: 213, column: 17, scope: !22984)
!22996 = !DILocation(line: 213, column: 3, scope: !22984)
!22997 = !DILocation(line: 214, column: 11, scope: !22984)
!22998 = !DILocation(line: 214, column: 3, scope: !22984)
!22999 = !DILocation(line: 214, column: 9, scope: !22984)
!23000 = !DILocation(line: 215, column: 10, scope: !22984)
!23001 = !DILocation(line: 215, column: 3, scope: !22984)
!23002 = distinct !DISubprogram(name: "randread_new", scope: !2768, file: !2768, line: 204, type: !2764, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2761, retainedNodes: !143)
!23003 = !DILocalVariable(name: "name", arg: 1, scope: !23002, file: !2768, line: 204, type: !115)
!23004 = !DILocation(line: 204, column: 27, scope: !23002)
!23005 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !23002, file: !2768, line: 204, type: !55)
!23006 = !DILocation(line: 204, column: 40, scope: !23002)
!23007 = !DILocation(line: 206, column: 7, scope: !23008)
!23008 = distinct !DILexicalBlock(scope: !23002, file: !2768, line: 206, column: 7)
!23009 = !DILocation(line: 206, column: 19, scope: !23008)
!23010 = !DILocation(line: 206, column: 7, scope: !23002)
!23011 = !DILocation(line: 207, column: 12, scope: !23008)
!23012 = !DILocation(line: 207, column: 5, scope: !23008)
!23013 = !DILocalVariable(name: "source", scope: !23014, file: !2768, line: 210, type: !2771)
!23014 = distinct !DILexicalBlock(scope: !23008, file: !2768, line: 209, column: 5)
!23015 = !DILocation(line: 210, column: 13, scope: !23014)
!23016 = !DILocalVariable(name: "s", scope: !23014, file: !2768, line: 211, type: !2766)
!23017 = !DILocation(line: 211, column: 31, scope: !23014)
!23018 = !DILocation(line: 213, column: 11, scope: !23019)
!23019 = distinct !DILexicalBlock(scope: !23014, file: !2768, line: 213, column: 11)
!23020 = !DILocation(line: 213, column: 11, scope: !23014)
!23021 = !DILocation(line: 214, column: 38, scope: !23022)
!23022 = distinct !DILexicalBlock(scope: !23019, file: !2768, line: 214, column: 13)
!23023 = !DILocation(line: 214, column: 25, scope: !23022)
!23024 = !DILocation(line: 214, column: 23, scope: !23022)
!23025 = !DILocation(line: 214, column: 13, scope: !23019)
!23026 = !DILocation(line: 215, column: 11, scope: !23022)
!23027 = !DILocation(line: 214, column: 49, scope: !23022)
!23028 = !DILocation(line: 217, column: 23, scope: !23014)
!23029 = !DILocation(line: 217, column: 31, scope: !23014)
!23030 = !DILocation(line: 217, column: 11, scope: !23014)
!23031 = !DILocation(line: 217, column: 9, scope: !23014)
!23032 = !DILocation(line: 219, column: 11, scope: !23033)
!23033 = distinct !DILexicalBlock(scope: !23014, file: !2768, line: 219, column: 11)
!23034 = !DILocation(line: 219, column: 11, scope: !23014)
!23035 = !DILocation(line: 220, column: 18, scope: !23033)
!23036 = !DILocation(line: 220, column: 26, scope: !23033)
!23037 = !DILocation(line: 220, column: 29, scope: !23033)
!23038 = !DILocation(line: 220, column: 33, scope: !23033)
!23039 = !DILocation(line: 220, column: 44, scope: !23033)
!23040 = !DILocation(line: 220, column: 9, scope: !23033)
!23041 = !DILocation(line: 223, column: 11, scope: !23042)
!23042 = distinct !DILexicalBlock(scope: !23033, file: !2768, line: 222, column: 9)
!23043 = !DILocation(line: 223, column: 14, scope: !23042)
!23044 = !DILocation(line: 223, column: 18, scope: !23042)
!23045 = !DILocation(line: 223, column: 24, scope: !23042)
!23046 = !DILocation(line: 223, column: 33, scope: !23042)
!23047 = !DILocation(line: 224, column: 22, scope: !23042)
!23048 = !DILocation(line: 224, column: 25, scope: !23042)
!23049 = !DILocation(line: 224, column: 29, scope: !23042)
!23050 = !DILocation(line: 224, column: 35, scope: !23042)
!23051 = !DILocation(line: 224, column: 41, scope: !23042)
!23052 = !DILocation(line: 225, column: 22, scope: !23042)
!23053 = !DILocation(line: 224, column: 11, scope: !23042)
!23054 = !DILocation(line: 226, column: 24, scope: !23042)
!23055 = !DILocation(line: 226, column: 27, scope: !23042)
!23056 = !DILocation(line: 226, column: 31, scope: !23042)
!23057 = !DILocation(line: 226, column: 37, scope: !23042)
!23058 = !DILocation(line: 226, column: 11, scope: !23042)
!23059 = !DILocation(line: 229, column: 14, scope: !23014)
!23060 = !DILocation(line: 229, column: 7, scope: !23014)
!23061 = !DILocation(line: 231, column: 1, scope: !23002)
!23062 = distinct !DISubprogram(name: "simple_new", scope: !2768, file: !2768, line: 137, type: !2849, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2761, retainedNodes: !143)
!23063 = !DILocalVariable(name: "source", arg: 1, scope: !23062, file: !2768, line: 137, type: !2771)
!23064 = !DILocation(line: 137, column: 19, scope: !23062)
!23065 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !23062, file: !2768, line: 137, type: !425)
!23066 = !DILocation(line: 137, column: 39, scope: !23062)
!23067 = !DILocalVariable(name: "s", scope: !23062, file: !2768, line: 139, type: !2766)
!23068 = !DILocation(line: 139, column: 27, scope: !23062)
!23069 = !DILocation(line: 139, column: 31, scope: !23062)
!23070 = !DILocation(line: 140, column: 15, scope: !23062)
!23071 = !DILocation(line: 140, column: 3, scope: !23062)
!23072 = !DILocation(line: 140, column: 6, scope: !23062)
!23073 = !DILocation(line: 140, column: 13, scope: !23062)
!23074 = !{!23075, !2996, i64 0}
!23075 = !{!"randread_source", !2996, i64 0, !2996, i64 8, !2996, i64 16, !2984, i64 24}
!23076 = !DILocation(line: 141, column: 3, scope: !23062)
!23077 = !DILocation(line: 141, column: 6, scope: !23062)
!23078 = !DILocation(line: 141, column: 14, scope: !23062)
!23079 = !{!23075, !2996, i64 8}
!23080 = !DILocation(line: 142, column: 20, scope: !23062)
!23081 = !DILocation(line: 142, column: 3, scope: !23062)
!23082 = !DILocation(line: 142, column: 6, scope: !23062)
!23083 = !DILocation(line: 142, column: 18, scope: !23062)
!23084 = !{!23075, !2996, i64 16}
!23085 = !DILocation(line: 143, column: 10, scope: !23062)
!23086 = !DILocation(line: 143, column: 3, scope: !23062)
!23087 = distinct !DISubprogram(name: "get_nonce", scope: !2768, file: !2768, line: 151, type: !2851, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2761, retainedNodes: !143)
!23088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1195, line: 8, size: 128, elements: !23089)
!23089 = !{!23090, !23091}
!23090 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !23088, file: !1195, line: 10, baseType: !341, size: 64)
!23091 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !23088, file: !1195, line: 11, baseType: !1199, size: 64, offset: 64)
!23092 = !DILocalVariable(name: "buffer", arg: 1, scope: !23087, file: !2768, line: 151, type: !53)
!23093 = !DILocation(line: 151, column: 18, scope: !23087)
!23094 = !DILocalVariable(name: "bufsize", arg: 2, scope: !23087, file: !2768, line: 151, type: !55)
!23095 = !DILocation(line: 151, column: 33, scope: !23087)
!23096 = !DILocalVariable(name: "bytes_bound", arg: 3, scope: !23087, file: !2768, line: 151, type: !55)
!23097 = !DILocation(line: 151, column: 49, scope: !23087)
!23098 = !DILocalVariable(name: "buf", scope: !23087, file: !2768, line: 153, type: !9)
!23099 = !DILocation(line: 153, column: 9, scope: !23087)
!23100 = !DILocation(line: 153, column: 15, scope: !23087)
!23101 = !DILocalVariable(name: "seeded", scope: !23087, file: !2768, line: 154, type: !606)
!23102 = !DILocation(line: 154, column: 11, scope: !23087)
!23103 = !DILocalVariable(name: "fd", scope: !23087, file: !2768, line: 157, type: !7)
!23104 = !DILocation(line: 157, column: 7, scope: !23087)
!23105 = !DILocation(line: 157, column: 12, scope: !23087)
!23106 = !DILocation(line: 158, column: 12, scope: !23107)
!23107 = distinct !DILexicalBlock(scope: !23087, file: !2768, line: 158, column: 7)
!23108 = !DILocation(line: 158, column: 9, scope: !23107)
!23109 = !DILocation(line: 158, column: 7, scope: !23087)
!23110 = !DILocation(line: 160, column: 22, scope: !23111)
!23111 = distinct !DILexicalBlock(scope: !23107, file: !2768, line: 159, column: 5)
!23112 = !DILocation(line: 160, column: 26, scope: !23111)
!23113 = !DILocation(line: 160, column: 31, scope: !23111)
!23114 = !DILocation(line: 160, column: 16, scope: !23111)
!23115 = !DILocation(line: 160, column: 14, scope: !23111)
!23116 = !DILocation(line: 161, column: 11, scope: !23117)
!23117 = distinct !DILexicalBlock(scope: !23111, file: !2768, line: 161, column: 11)
!23118 = !DILocation(line: 161, column: 18, scope: !23117)
!23119 = !DILocation(line: 161, column: 11, scope: !23111)
!23120 = !DILocation(line: 162, column: 16, scope: !23117)
!23121 = !DILocation(line: 162, column: 9, scope: !23117)
!23122 = !DILocation(line: 163, column: 14, scope: !23111)
!23123 = !DILocation(line: 163, column: 7, scope: !23111)
!23124 = !DILocation(line: 164, column: 5, scope: !23111)
!23125 = !DILocation(line: 177, column: 3, scope: !23126)
!23126 = distinct !DILexicalBlock(scope: !23087, file: !2768, line: 177, column: 3)
!23127 = !DILocation(line: 177, column: 3, scope: !23087)
!23128 = !DILocalVariable(name: "v", scope: !23129, file: !2768, line: 177, type: !23088)
!23129 = distinct !DILexicalBlock(scope: !23126, file: !2768, line: 177, column: 3)
!23130 = !DILocation(line: 177, column: 3, scope: !23129)
!23131 = !DILocalVariable(name: "nbytes", scope: !23129, file: !2768, line: 177, type: !55)
!23132 = !DILocation(line: 178, column: 3, scope: !23133)
!23133 = distinct !DILexicalBlock(scope: !23087, file: !2768, line: 178, column: 3)
!23134 = !DILocation(line: 178, column: 3, scope: !23087)
!23135 = !DILocalVariable(name: "v", scope: !23136, file: !2768, line: 178, type: !2853)
!23136 = distinct !DILexicalBlock(scope: !23133, file: !2768, line: 178, column: 3)
!23137 = !DILocation(line: 178, column: 3, scope: !23136)
!23138 = !DILocalVariable(name: "nbytes", scope: !23136, file: !2768, line: 178, type: !55)
!23139 = !DILocation(line: 179, column: 3, scope: !23140)
!23140 = distinct !DILexicalBlock(scope: !23087, file: !2768, line: 179, column: 3)
!23141 = !DILocation(line: 179, column: 3, scope: !23087)
!23142 = !DILocalVariable(name: "v", scope: !23143, file: !2768, line: 179, type: !2853)
!23143 = distinct !DILexicalBlock(scope: !23140, file: !2768, line: 179, column: 3)
!23144 = !DILocation(line: 179, column: 3, scope: !23143)
!23145 = !DILocalVariable(name: "nbytes", scope: !23143, file: !2768, line: 179, type: !55)
!23146 = !DILocation(line: 180, column: 3, scope: !23147)
!23147 = distinct !DILexicalBlock(scope: !23087, file: !2768, line: 180, column: 3)
!23148 = !DILocation(line: 180, column: 3, scope: !23087)
!23149 = !DILocalVariable(name: "v", scope: !23150, file: !2768, line: 180, type: !475)
!23150 = distinct !DILexicalBlock(scope: !23147, file: !2768, line: 180, column: 3)
!23151 = !DILocation(line: 180, column: 3, scope: !23150)
!23152 = !DILocalVariable(name: "nbytes", scope: !23150, file: !2768, line: 180, type: !55)
!23153 = !DILocation(line: 181, column: 3, scope: !23154)
!23154 = distinct !DILexicalBlock(scope: !23087, file: !2768, line: 181, column: 3)
!23155 = !DILocation(line: 181, column: 3, scope: !23087)
!23156 = !DILocalVariable(name: "v", scope: !23157, file: !2768, line: 181, type: !475)
!23157 = distinct !DILexicalBlock(scope: !23154, file: !2768, line: 181, column: 3)
!23158 = !DILocation(line: 181, column: 3, scope: !23157)
!23159 = !DILocalVariable(name: "nbytes", scope: !23157, file: !2768, line: 181, type: !55)
!23160 = !DILocation(line: 189, column: 1, scope: !23087)
!23161 = distinct !DISubprogram(name: "randread_error", scope: !2768, file: !2768, line: 124, type: !2807, scopeLine: 125, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2761, retainedNodes: !143)
!23162 = !DILocalVariable(name: "file_name", arg: 1, scope: !23161, file: !2768, line: 124, type: !425)
!23163 = !DILocation(line: 124, column: 29, scope: !23161)
!23164 = !DILocation(line: 126, column: 7, scope: !23165)
!23165 = distinct !DILexicalBlock(scope: !23161, file: !2768, line: 126, column: 7)
!23166 = !DILocation(line: 126, column: 7, scope: !23161)
!23167 = !DILocation(line: 127, column: 12, scope: !23165)
!23168 = !DILocation(line: 127, column: 26, scope: !23165)
!23169 = !DILocation(line: 128, column: 12, scope: !23165)
!23170 = !DILocation(line: 128, column: 18, scope: !23165)
!23171 = !DILocation(line: 128, column: 25, scope: !23165)
!23172 = !DILocation(line: 128, column: 48, scope: !23165)
!23173 = !DILocation(line: 129, column: 19, scope: !23165)
!23174 = !DILocation(line: 129, column: 12, scope: !23165)
!23175 = !DILocation(line: 127, column: 5, scope: !23165)
!23176 = !DILocation(line: 130, column: 3, scope: !23161)
!23177 = distinct !DISubprogram(name: "randread_set_handler", scope: !2768, file: !2768, line: 242, type: !2841, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2761, retainedNodes: !143)
!23178 = !DILocalVariable(name: "s", arg: 1, scope: !23177, file: !2768, line: 242, type: !2766)
!23179 = !DILocation(line: 242, column: 47, scope: !23177)
!23180 = !DILocalVariable(name: "handler", arg: 2, scope: !23177, file: !2768, line: 242, type: !2806)
!23181 = !DILocation(line: 242, column: 57, scope: !23177)
!23182 = !DILocation(line: 244, column: 16, scope: !23177)
!23183 = !DILocation(line: 244, column: 3, scope: !23177)
!23184 = !DILocation(line: 244, column: 6, scope: !23177)
!23185 = !DILocation(line: 244, column: 14, scope: !23177)
!23186 = !DILocation(line: 245, column: 1, scope: !23177)
!23187 = distinct !DISubprogram(name: "randread_set_handler_arg", scope: !2768, file: !2768, line: 248, type: !2843, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2761, retainedNodes: !143)
!23188 = !DILocalVariable(name: "s", arg: 1, scope: !23187, file: !2768, line: 248, type: !2766)
!23189 = !DILocation(line: 248, column: 51, scope: !23187)
!23190 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !23187, file: !2768, line: 248, type: !425)
!23191 = !DILocation(line: 248, column: 66, scope: !23187)
!23192 = !DILocation(line: 250, column: 20, scope: !23187)
!23193 = !DILocation(line: 250, column: 3, scope: !23187)
!23194 = !DILocation(line: 250, column: 6, scope: !23187)
!23195 = !DILocation(line: 250, column: 18, scope: !23187)
!23196 = !DILocation(line: 251, column: 1, scope: !23187)
!23197 = distinct !DISubprogram(name: "randread", scope: !2768, file: !2768, line: 326, type: !2845, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2761, retainedNodes: !143)
!23198 = !DILocalVariable(name: "s", arg: 1, scope: !23197, file: !2768, line: 326, type: !2766)
!23199 = !DILocation(line: 326, column: 35, scope: !23197)
!23200 = !DILocalVariable(name: "buf", arg: 2, scope: !23197, file: !2768, line: 326, type: !53)
!23201 = !DILocation(line: 326, column: 44, scope: !23197)
!23202 = !DILocalVariable(name: "size", arg: 3, scope: !23197, file: !2768, line: 326, type: !55)
!23203 = !DILocation(line: 326, column: 56, scope: !23197)
!23204 = !DILocation(line: 328, column: 7, scope: !23205)
!23205 = distinct !DILexicalBlock(scope: !23197, file: !2768, line: 328, column: 7)
!23206 = !DILocation(line: 328, column: 10, scope: !23205)
!23207 = !DILocation(line: 328, column: 7, scope: !23197)
!23208 = !DILocation(line: 329, column: 17, scope: !23205)
!23209 = !DILocation(line: 329, column: 20, scope: !23205)
!23210 = !DILocation(line: 329, column: 25, scope: !23205)
!23211 = !DILocation(line: 329, column: 5, scope: !23205)
!23212 = !DILocation(line: 331, column: 17, scope: !23205)
!23213 = !DILocation(line: 331, column: 20, scope: !23205)
!23214 = !DILocation(line: 331, column: 24, scope: !23205)
!23215 = !DILocation(line: 331, column: 31, scope: !23205)
!23216 = !DILocation(line: 331, column: 36, scope: !23205)
!23217 = !DILocation(line: 331, column: 5, scope: !23205)
!23218 = !DILocation(line: 332, column: 1, scope: !23197)
!23219 = distinct !DISubprogram(name: "readsource", scope: !2768, file: !2768, line: 258, type: !2855, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2761, retainedNodes: !143)
!23220 = !DILocalVariable(name: "s", arg: 1, scope: !23219, file: !2768, line: 258, type: !2766)
!23221 = !DILocation(line: 258, column: 37, scope: !23219)
!23222 = !DILocalVariable(name: "p", arg: 2, scope: !23219, file: !2768, line: 258, type: !2857)
!23223 = !DILocation(line: 258, column: 55, scope: !23219)
!23224 = !DILocalVariable(name: "size", arg: 3, scope: !23219, file: !2768, line: 258, type: !55)
!23225 = !DILocation(line: 258, column: 65, scope: !23219)
!23226 = !DILocation(line: 260, column: 3, scope: !23219)
!23227 = !DILocalVariable(name: "inbytes", scope: !23228, file: !2768, line: 262, type: !55)
!23228 = distinct !DILexicalBlock(scope: !23219, file: !2768, line: 261, column: 5)
!23229 = !DILocation(line: 262, column: 14, scope: !23228)
!23230 = !DILocation(line: 262, column: 24, scope: !23228)
!23231 = !DILocalVariable(name: "fread_errno", scope: !23228, file: !2768, line: 263, type: !7)
!23232 = !DILocation(line: 263, column: 11, scope: !23228)
!23233 = !DILocation(line: 263, column: 25, scope: !23228)
!23234 = !DILocation(line: 264, column: 12, scope: !23228)
!23235 = !DILocation(line: 264, column: 9, scope: !23228)
!23236 = !DILocation(line: 265, column: 15, scope: !23228)
!23237 = !DILocation(line: 265, column: 12, scope: !23228)
!23238 = !DILocation(line: 266, column: 11, scope: !23239)
!23239 = distinct !DILexicalBlock(scope: !23228, file: !2768, line: 266, column: 11)
!23240 = !DILocation(line: 266, column: 16, scope: !23239)
!23241 = !DILocation(line: 266, column: 11, scope: !23228)
!23242 = !DILocation(line: 267, column: 9, scope: !23239)
!23243 = !DILocation(line: 268, column: 16, scope: !23228)
!23244 = !DILocation(line: 268, column: 37, scope: !23228)
!23245 = !DILocation(line: 268, column: 7, scope: !23228)
!23246 = !DILocation(line: 268, column: 13, scope: !23228)
!23247 = !DILocation(line: 269, column: 7, scope: !23228)
!23248 = !DILocation(line: 269, column: 10, scope: !23228)
!23249 = !DILocation(line: 269, column: 19, scope: !23228)
!23250 = !DILocation(line: 269, column: 22, scope: !23228)
!23251 = distinct !{!23251, !23226, !23252}
!23252 = !DILocation(line: 270, column: 5, scope: !23219)
!23253 = !DILocation(line: 271, column: 1, scope: !23219)
!23254 = distinct !DISubprogram(name: "readisaac", scope: !2768, file: !2768, line: 278, type: !2858, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2761, retainedNodes: !143)
!23255 = !DILocalVariable(name: "isaac", arg: 1, scope: !23254, file: !2768, line: 278, type: !2860)
!23256 = !DILocation(line: 278, column: 26, scope: !23254)
!23257 = !DILocalVariable(name: "p", arg: 2, scope: !23254, file: !2768, line: 278, type: !53)
!23258 = !DILocation(line: 278, column: 39, scope: !23254)
!23259 = !DILocalVariable(name: "size", arg: 3, scope: !23254, file: !2768, line: 278, type: !55)
!23260 = !DILocation(line: 278, column: 49, scope: !23254)
!23261 = !DILocalVariable(name: "inbytes", scope: !23254, file: !2768, line: 280, type: !55)
!23262 = !DILocation(line: 280, column: 10, scope: !23254)
!23263 = !DILocation(line: 280, column: 20, scope: !23254)
!23264 = !DILocation(line: 280, column: 27, scope: !23254)
!23265 = !{!23266, !3180, i64 0}
!23266 = !{!"isaac", !3180, i64 0, !23267, i64 8, !2984, i64 2080}
!23267 = !{!"isaac_state", !2984, i64 0, !3180, i64 2048, !3180, i64 2056, !3180, i64 2064}
!23268 = !DILocation(line: 282, column: 3, scope: !23254)
!23269 = !DILocalVariable(name: "char_p", scope: !23270, file: !2768, line: 284, type: !9)
!23270 = distinct !DILexicalBlock(scope: !23254, file: !2768, line: 283, column: 5)
!23271 = !DILocation(line: 284, column: 13, scope: !23270)
!23272 = !DILocation(line: 284, column: 22, scope: !23270)
!23273 = !DILocation(line: 286, column: 11, scope: !23274)
!23274 = distinct !DILexicalBlock(scope: !23270, file: !2768, line: 286, column: 11)
!23275 = !DILocation(line: 286, column: 19, scope: !23274)
!23276 = !DILocation(line: 286, column: 16, scope: !23274)
!23277 = !DILocation(line: 286, column: 11, scope: !23270)
!23278 = !DILocation(line: 288, column: 19, scope: !23279)
!23279 = distinct !DILexicalBlock(scope: !23274, file: !2768, line: 287, column: 9)
!23280 = !DILocation(line: 288, column: 22, scope: !23279)
!23281 = !DILocation(line: 288, column: 29, scope: !23279)
!23282 = !DILocation(line: 288, column: 34, scope: !23279)
!23283 = !DILocation(line: 288, column: 36, scope: !23279)
!23284 = !DILocation(line: 288, column: 52, scope: !23279)
!23285 = !DILocation(line: 288, column: 50, scope: !23279)
!23286 = !DILocation(line: 288, column: 61, scope: !23279)
!23287 = !DILocation(line: 288, column: 11, scope: !23279)
!23288 = !DILocation(line: 289, column: 29, scope: !23279)
!23289 = !DILocation(line: 289, column: 39, scope: !23279)
!23290 = !DILocation(line: 289, column: 37, scope: !23279)
!23291 = !DILocation(line: 289, column: 11, scope: !23279)
!23292 = !DILocation(line: 289, column: 18, scope: !23279)
!23293 = !DILocation(line: 289, column: 27, scope: !23279)
!23294 = !DILocation(line: 290, column: 11, scope: !23279)
!23295 = !DILocation(line: 293, column: 15, scope: !23270)
!23296 = !DILocation(line: 293, column: 18, scope: !23270)
!23297 = !DILocation(line: 293, column: 25, scope: !23270)
!23298 = !DILocation(line: 293, column: 30, scope: !23270)
!23299 = !DILocation(line: 293, column: 32, scope: !23270)
!23300 = !DILocation(line: 293, column: 48, scope: !23270)
!23301 = !DILocation(line: 293, column: 46, scope: !23270)
!23302 = !DILocation(line: 293, column: 57, scope: !23270)
!23303 = !DILocation(line: 293, column: 7, scope: !23270)
!23304 = !DILocation(line: 294, column: 11, scope: !23270)
!23305 = !DILocation(line: 294, column: 20, scope: !23270)
!23306 = !DILocation(line: 294, column: 18, scope: !23270)
!23307 = !DILocation(line: 294, column: 9, scope: !23270)
!23308 = !DILocation(line: 295, column: 15, scope: !23270)
!23309 = !DILocation(line: 295, column: 12, scope: !23270)
!23310 = !DILocation(line: 299, column: 11, scope: !23311)
!23311 = distinct !DILexicalBlock(scope: !23270, file: !2768, line: 299, column: 11)
!23312 = !DILocation(line: 299, column: 11, scope: !23270)
!23313 = !DILocalVariable(name: "wp", scope: !23314, file: !2768, line: 301, type: !2861)
!23314 = distinct !DILexicalBlock(scope: !23311, file: !2768, line: 300, column: 9)
!23315 = !DILocation(line: 301, column: 23, scope: !23314)
!23316 = !DILocation(line: 301, column: 28, scope: !23314)
!23317 = !DILocation(line: 302, column: 11, scope: !23314)
!23318 = !DILocation(line: 302, column: 33, scope: !23314)
!23319 = !DILocation(line: 302, column: 30, scope: !23314)
!23320 = !DILocation(line: 304, column: 30, scope: !23321)
!23321 = distinct !DILexicalBlock(scope: !23314, file: !2768, line: 303, column: 13)
!23322 = !DILocation(line: 304, column: 37, scope: !23321)
!23323 = !DILocation(line: 304, column: 44, scope: !23321)
!23324 = !DILocation(line: 304, column: 15, scope: !23321)
!23325 = !DILocation(line: 305, column: 18, scope: !23321)
!23326 = !DILocation(line: 306, column: 20, scope: !23321)
!23327 = !DILocation(line: 307, column: 19, scope: !23328)
!23328 = distinct !DILexicalBlock(scope: !23321, file: !2768, line: 307, column: 19)
!23329 = !DILocation(line: 307, column: 24, scope: !23328)
!23330 = !DILocation(line: 307, column: 19, scope: !23321)
!23331 = !DILocation(line: 309, column: 19, scope: !23332)
!23332 = distinct !DILexicalBlock(scope: !23328, file: !2768, line: 308, column: 17)
!23333 = !DILocation(line: 309, column: 26, scope: !23332)
!23334 = !DILocation(line: 309, column: 35, scope: !23332)
!23335 = !DILocation(line: 310, column: 19, scope: !23332)
!23336 = distinct !{!23336, !23317, !23337}
!23337 = !DILocation(line: 312, column: 13, scope: !23314)
!23338 = !DILocation(line: 313, column: 15, scope: !23314)
!23339 = !DILocation(line: 313, column: 13, scope: !23314)
!23340 = !DILocation(line: 314, column: 9, scope: !23314)
!23341 = !DILocation(line: 316, column: 22, scope: !23270)
!23342 = !DILocation(line: 316, column: 29, scope: !23270)
!23343 = !DILocation(line: 316, column: 36, scope: !23270)
!23344 = !DILocation(line: 316, column: 43, scope: !23270)
!23345 = !DILocation(line: 316, column: 48, scope: !23270)
!23346 = !DILocation(line: 316, column: 7, scope: !23270)
!23347 = !DILocation(line: 317, column: 15, scope: !23270)
!23348 = distinct !{!23348, !23268, !23349}
!23349 = !DILocation(line: 318, column: 5, scope: !23254)
!23350 = !DILocation(line: 319, column: 1, scope: !23254)
!23351 = distinct !DISubprogram(name: "randread_free", scope: !2768, file: !2768, line: 341, type: !2847, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2761, retainedNodes: !143)
!23352 = !DILocalVariable(name: "s", arg: 1, scope: !23351, file: !2768, line: 341, type: !2766)
!23353 = !DILocation(line: 341, column: 40, scope: !23351)
!23354 = !DILocalVariable(name: "source", scope: !23351, file: !2768, line: 343, type: !2771)
!23355 = !DILocation(line: 343, column: 9, scope: !23351)
!23356 = !DILocation(line: 343, column: 18, scope: !23351)
!23357 = !DILocation(line: 343, column: 21, scope: !23351)
!23358 = !DILocation(line: 344, column: 19, scope: !23351)
!23359 = !DILocation(line: 344, column: 3, scope: !23351)
!23360 = !DILocation(line: 345, column: 9, scope: !23351)
!23361 = !DILocation(line: 345, column: 3, scope: !23351)
!23362 = !DILocation(line: 346, column: 11, scope: !23351)
!23363 = !DILocation(line: 346, column: 28, scope: !23351)
!23364 = !DILocation(line: 346, column: 20, scope: !23351)
!23365 = !DILocation(line: 346, column: 3, scope: !23351)
!23366 = distinct !DISubprogram(name: "isaac_refill", scope: !23367, file: !23367, line: 90, type: !2865, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2862, retainedNodes: !143)
!23367 = !DIFile(filename: "lib/rand-isaac.c", directory: "/home/mbarbar/software/coreutils-8.31")
!23368 = !DILocalVariable(name: "s", arg: 1, scope: !23366, file: !23367, line: 90, type: !2867)
!23369 = !DILocation(line: 90, column: 35, scope: !23366)
!23370 = !DILocalVariable(name: "result", arg: 2, scope: !23366, file: !23367, line: 90, type: !2861)
!23371 = !DILocation(line: 90, column: 49, scope: !23366)
!23372 = !DILocalVariable(name: "a", scope: !23366, file: !23367, line: 93, type: !2827)
!23373 = !DILocation(line: 93, column: 14, scope: !23366)
!23374 = !DILocation(line: 93, column: 18, scope: !23366)
!23375 = !DILocation(line: 93, column: 21, scope: !23366)
!23376 = !{!23267, !3180, i64 2048}
!23377 = !DILocalVariable(name: "b", scope: !23366, file: !23367, line: 94, type: !2827)
!23378 = !DILocation(line: 94, column: 14, scope: !23366)
!23379 = !DILocation(line: 94, column: 18, scope: !23366)
!23380 = !DILocation(line: 94, column: 21, scope: !23366)
!23381 = !{!23267, !3180, i64 2056}
!23382 = !DILocation(line: 94, column: 28, scope: !23366)
!23383 = !DILocation(line: 94, column: 31, scope: !23366)
!23384 = !DILocation(line: 94, column: 26, scope: !23366)
!23385 = !{!23267, !3180, i64 2064}
!23386 = !DILocation(line: 94, column: 23, scope: !23366)
!23387 = !DILocalVariable(name: "m", scope: !23366, file: !23367, line: 97, type: !2861)
!23388 = !DILocation(line: 97, column: 15, scope: !23366)
!23389 = !DILocation(line: 97, column: 19, scope: !23366)
!23390 = !DILocation(line: 97, column: 22, scope: !23366)
!23391 = !DILocalVariable(name: "r", scope: !23366, file: !23367, line: 98, type: !2861)
!23392 = !DILocation(line: 98, column: 15, scope: !23366)
!23393 = !DILocation(line: 98, column: 19, scope: !23366)
!23394 = !DILocation(line: 116, column: 3, scope: !23366)
!23395 = !DILocalVariable(name: "x", scope: !23396, file: !23367, line: 118, type: !2827)
!23396 = distinct !DILexicalBlock(scope: !23397, file: !23367, line: 118, column: 7)
!23397 = distinct !DILexicalBlock(scope: !23366, file: !23367, line: 117, column: 5)
!23398 = !DILocation(line: 118, column: 7, scope: !23396)
!23399 = !DILocalVariable(name: "y", scope: !23396, file: !23367, line: 118, type: !2827)
!23400 = !DILocalVariable(name: "x", scope: !23401, file: !23367, line: 119, type: !2827)
!23401 = distinct !DILexicalBlock(scope: !23397, file: !23367, line: 119, column: 7)
!23402 = !DILocation(line: 119, column: 7, scope: !23401)
!23403 = !DILocalVariable(name: "y", scope: !23401, file: !23367, line: 119, type: !2827)
!23404 = !DILocalVariable(name: "x", scope: !23405, file: !23367, line: 120, type: !2827)
!23405 = distinct !DILexicalBlock(scope: !23397, file: !23367, line: 120, column: 7)
!23406 = !DILocation(line: 120, column: 7, scope: !23405)
!23407 = !DILocalVariable(name: "y", scope: !23405, file: !23367, line: 120, type: !2827)
!23408 = !DILocalVariable(name: "x", scope: !23409, file: !23367, line: 121, type: !2827)
!23409 = distinct !DILexicalBlock(scope: !23397, file: !23367, line: 121, column: 7)
!23410 = !DILocation(line: 121, column: 7, scope: !23409)
!23411 = !DILocalVariable(name: "y", scope: !23409, file: !23367, line: 121, type: !2827)
!23412 = !DILocation(line: 122, column: 9, scope: !23397)
!23413 = !DILocation(line: 123, column: 5, scope: !23397)
!23414 = !DILocation(line: 124, column: 13, scope: !23366)
!23415 = !DILocation(line: 124, column: 21, scope: !23366)
!23416 = !DILocation(line: 124, column: 24, scope: !23366)
!23417 = !DILocation(line: 124, column: 26, scope: !23366)
!23418 = !DILocation(line: 124, column: 19, scope: !23366)
!23419 = distinct !{!23419, !23394, !23420}
!23420 = !DILocation(line: 124, column: 32, scope: !23366)
!23421 = !DILocation(line: 126, column: 3, scope: !23366)
!23422 = !DILocalVariable(name: "x", scope: !23423, file: !23367, line: 128, type: !2827)
!23423 = distinct !DILexicalBlock(scope: !23424, file: !23367, line: 128, column: 7)
!23424 = distinct !DILexicalBlock(scope: !23366, file: !23367, line: 127, column: 5)
!23425 = !DILocation(line: 128, column: 7, scope: !23423)
!23426 = !DILocalVariable(name: "y", scope: !23423, file: !23367, line: 128, type: !2827)
!23427 = !DILocalVariable(name: "x", scope: !23428, file: !23367, line: 129, type: !2827)
!23428 = distinct !DILexicalBlock(scope: !23424, file: !23367, line: 129, column: 7)
!23429 = !DILocation(line: 129, column: 7, scope: !23428)
!23430 = !DILocalVariable(name: "y", scope: !23428, file: !23367, line: 129, type: !2827)
!23431 = !DILocalVariable(name: "x", scope: !23432, file: !23367, line: 130, type: !2827)
!23432 = distinct !DILexicalBlock(scope: !23424, file: !23367, line: 130, column: 7)
!23433 = !DILocation(line: 130, column: 7, scope: !23432)
!23434 = !DILocalVariable(name: "y", scope: !23432, file: !23367, line: 130, type: !2827)
!23435 = !DILocalVariable(name: "x", scope: !23436, file: !23367, line: 131, type: !2827)
!23436 = distinct !DILexicalBlock(scope: !23424, file: !23367, line: 131, column: 7)
!23437 = !DILocation(line: 131, column: 7, scope: !23436)
!23438 = !DILocalVariable(name: "y", scope: !23436, file: !23367, line: 131, type: !2827)
!23439 = !DILocation(line: 132, column: 9, scope: !23424)
!23440 = !DILocation(line: 133, column: 5, scope: !23424)
!23441 = !DILocation(line: 134, column: 13, scope: !23366)
!23442 = !DILocation(line: 134, column: 21, scope: !23366)
!23443 = !DILocation(line: 134, column: 24, scope: !23366)
!23444 = !DILocation(line: 134, column: 26, scope: !23366)
!23445 = !DILocation(line: 134, column: 19, scope: !23366)
!23446 = distinct !{!23446, !23421, !23447}
!23447 = !DILocation(line: 134, column: 39, scope: !23366)
!23448 = !DILocation(line: 136, column: 10, scope: !23366)
!23449 = !DILocation(line: 136, column: 3, scope: !23366)
!23450 = !DILocation(line: 136, column: 6, scope: !23366)
!23451 = !DILocation(line: 136, column: 8, scope: !23366)
!23452 = !DILocation(line: 137, column: 10, scope: !23366)
!23453 = !DILocation(line: 137, column: 3, scope: !23366)
!23454 = !DILocation(line: 137, column: 6, scope: !23366)
!23455 = !DILocation(line: 137, column: 8, scope: !23366)
!23456 = !DILocation(line: 138, column: 1, scope: !23366)
!23457 = distinct !DISubprogram(name: "ind", scope: !23367, file: !23367, line: 68, type: !2876, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2862, retainedNodes: !143)
!23458 = !DILocalVariable(name: "m", arg: 1, scope: !23457, file: !23367, line: 68, type: !2878)
!23459 = !DILocation(line: 68, column: 24, scope: !23457)
!23460 = !DILocalVariable(name: "x", arg: 2, scope: !23457, file: !23367, line: 68, type: !2827)
!23461 = !DILocation(line: 68, column: 38, scope: !23457)
!23462 = !DILocalVariable(name: "void_m", scope: !23463, file: !23367, line: 75, type: !425)
!23463 = distinct !DILexicalBlock(scope: !23464, file: !23367, line: 71, column: 5)
!23464 = distinct !DILexicalBlock(scope: !23457, file: !23367, line: 70, column: 7)
!23465 = !DILocation(line: 75, column: 19, scope: !23463)
!23466 = !DILocation(line: 75, column: 28, scope: !23463)
!23467 = !DILocalVariable(name: "base_p", scope: !23463, file: !23367, line: 76, type: !115)
!23468 = !DILocation(line: 76, column: 19, scope: !23463)
!23469 = !DILocation(line: 76, column: 28, scope: !23463)
!23470 = !DILocalVariable(name: "word_p", scope: !23463, file: !23367, line: 77, type: !425)
!23471 = !DILocation(line: 77, column: 19, scope: !23463)
!23472 = !DILocation(line: 77, column: 28, scope: !23463)
!23473 = !DILocation(line: 77, column: 38, scope: !23463)
!23474 = !DILocation(line: 77, column: 40, scope: !23463)
!23475 = !DILocation(line: 77, column: 35, scope: !23463)
!23476 = !DILocalVariable(name: "p", scope: !23463, file: !23367, line: 78, type: !2878)
!23477 = !DILocation(line: 78, column: 25, scope: !23463)
!23478 = !DILocation(line: 78, column: 29, scope: !23463)
!23479 = !DILocation(line: 79, column: 15, scope: !23463)
!23480 = !DILocation(line: 79, column: 14, scope: !23463)
!23481 = !DILocation(line: 79, column: 7, scope: !23463)
!23482 = distinct !DISubprogram(name: "just", scope: !23367, file: !23367, line: 60, type: !2880, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2862, retainedNodes: !143)
!23483 = !DILocalVariable(name: "a", arg: 1, scope: !23482, file: !23367, line: 60, type: !2827)
!23484 = !DILocation(line: 60, column: 18, scope: !23482)
!23485 = !DILocalVariable(name: "desired_bits", scope: !23482, file: !23367, line: 62, type: !2827)
!23486 = !DILocation(line: 62, column: 14, scope: !23482)
!23487 = !DILocation(line: 63, column: 10, scope: !23482)
!23488 = !DILocation(line: 63, column: 14, scope: !23482)
!23489 = !DILocation(line: 63, column: 12, scope: !23482)
!23490 = !DILocation(line: 63, column: 3, scope: !23482)
!23491 = distinct !DISubprogram(name: "isaac_seed", scope: !23367, file: !23367, line: 248, type: !2874, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2862, retainedNodes: !143)
!23492 = !DILocalVariable(name: "s", arg: 1, scope: !23491, file: !23367, line: 248, type: !2867)
!23493 = !DILocation(line: 248, column: 33, scope: !23491)
!23494 = !DILocalVariable(name: "a", scope: !23491, file: !23367, line: 250, type: !2827)
!23495 = !DILocation(line: 250, column: 14, scope: !23491)
!23496 = !DILocalVariable(name: "b", scope: !23491, file: !23367, line: 251, type: !2827)
!23497 = !DILocation(line: 251, column: 14, scope: !23491)
!23498 = !DILocalVariable(name: "c", scope: !23491, file: !23367, line: 252, type: !2827)
!23499 = !DILocation(line: 252, column: 14, scope: !23491)
!23500 = !DILocalVariable(name: "d", scope: !23491, file: !23367, line: 253, type: !2827)
!23501 = !DILocation(line: 253, column: 14, scope: !23491)
!23502 = !DILocalVariable(name: "e", scope: !23491, file: !23367, line: 254, type: !2827)
!23503 = !DILocation(line: 254, column: 14, scope: !23491)
!23504 = !DILocalVariable(name: "f", scope: !23491, file: !23367, line: 255, type: !2827)
!23505 = !DILocation(line: 255, column: 14, scope: !23491)
!23506 = !DILocalVariable(name: "g", scope: !23491, file: !23367, line: 256, type: !2827)
!23507 = !DILocation(line: 256, column: 14, scope: !23491)
!23508 = !DILocalVariable(name: "h", scope: !23491, file: !23367, line: 257, type: !2827)
!23509 = !DILocation(line: 257, column: 14, scope: !23491)
!23510 = !DILocalVariable(name: "i", scope: !23511, file: !23367, line: 269, type: !7)
!23511 = distinct !DILexicalBlock(scope: !23491, file: !23367, line: 269, column: 3)
!23512 = !DILocation(line: 269, column: 3, scope: !23511)
!23513 = !DILocation(line: 269, column: 3, scope: !23514)
!23514 = distinct !DILexicalBlock(scope: !23511, file: !23367, line: 269, column: 3)
!23515 = !DILocation(line: 269, column: 3, scope: !23516)
!23516 = distinct !DILexicalBlock(scope: !23514, file: !23367, line: 269, column: 3)
!23517 = !DILocation(line: 269, column: 3, scope: !23518)
!23518 = distinct !DILexicalBlock(scope: !23516, file: !23367, line: 269, column: 3)
!23519 = !DILocation(line: 269, column: 3, scope: !23520)
!23520 = distinct !DILexicalBlock(scope: !23518, file: !23367, line: 269, column: 3)
!23521 = distinct !{!23521, !23513, !23513}
!23522 = !DILocalVariable(name: "i", scope: !23523, file: !23367, line: 270, type: !7)
!23523 = distinct !DILexicalBlock(scope: !23491, file: !23367, line: 270, column: 3)
!23524 = !DILocation(line: 270, column: 3, scope: !23523)
!23525 = !DILocation(line: 270, column: 3, scope: !23526)
!23526 = distinct !DILexicalBlock(scope: !23523, file: !23367, line: 270, column: 3)
!23527 = !DILocation(line: 270, column: 3, scope: !23528)
!23528 = distinct !DILexicalBlock(scope: !23526, file: !23367, line: 270, column: 3)
!23529 = !DILocation(line: 270, column: 3, scope: !23530)
!23530 = distinct !DILexicalBlock(scope: !23528, file: !23367, line: 270, column: 3)
!23531 = !DILocation(line: 270, column: 3, scope: !23532)
!23532 = distinct !DILexicalBlock(scope: !23530, file: !23367, line: 270, column: 3)
!23533 = distinct !{!23533, !23525, !23525}
!23534 = !DILocation(line: 272, column: 17, scope: !23491)
!23535 = !DILocation(line: 272, column: 20, scope: !23491)
!23536 = !DILocation(line: 272, column: 22, scope: !23491)
!23537 = !DILocation(line: 272, column: 10, scope: !23491)
!23538 = !DILocation(line: 272, column: 13, scope: !23491)
!23539 = !DILocation(line: 272, column: 15, scope: !23491)
!23540 = !DILocation(line: 272, column: 3, scope: !23491)
!23541 = !DILocation(line: 272, column: 6, scope: !23491)
!23542 = !DILocation(line: 272, column: 8, scope: !23491)
!23543 = !DILocation(line: 273, column: 1, scope: !23491)
!23544 = distinct !DISubprogram(name: "dup_safer", scope: !23545, file: !23545, line: 31, type: !1827, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2882, retainedNodes: !143)
!23545 = !DIFile(filename: "lib/dup-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!23546 = !DILocalVariable(name: "fd", arg: 1, scope: !23544, file: !23545, line: 31, type: !7)
!23547 = !DILocation(line: 31, column: 16, scope: !23544)
!23548 = !DILocation(line: 33, column: 17, scope: !23544)
!23549 = !DILocation(line: 33, column: 10, scope: !23544)
!23550 = !DILocation(line: 33, column: 3, scope: !23544)
!23551 = distinct !DISubprogram(name: "xsum", scope: !23552, file: !23552, line: 63, type: !2888, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2885, retainedNodes: !143)
!23552 = !DIFile(filename: "./lib/xsize.h", directory: "/home/mbarbar/software/coreutils-8.31")
!23553 = !DILocalVariable(name: "size1", arg: 1, scope: !23551, file: !23552, line: 63, type: !55)
!23554 = !DILocation(line: 63, column: 14, scope: !23551)
!23555 = !DILocalVariable(name: "size2", arg: 2, scope: !23551, file: !23552, line: 63, type: !55)
!23556 = !DILocation(line: 63, column: 28, scope: !23551)
!23557 = !DILocalVariable(name: "sum", scope: !23551, file: !23552, line: 65, type: !55)
!23558 = !DILocation(line: 65, column: 10, scope: !23551)
!23559 = !DILocation(line: 65, column: 16, scope: !23551)
!23560 = !DILocation(line: 65, column: 24, scope: !23551)
!23561 = !DILocation(line: 65, column: 22, scope: !23551)
!23562 = !DILocation(line: 66, column: 11, scope: !23551)
!23563 = !DILocation(line: 66, column: 18, scope: !23551)
!23564 = !DILocation(line: 66, column: 15, scope: !23551)
!23565 = !DILocation(line: 66, column: 26, scope: !23551)
!23566 = !DILocation(line: 66, column: 3, scope: !23551)
!23567 = distinct !DISubprogram(name: "xsum3", scope: !23552, file: !23552, line: 74, type: !1600, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2885, retainedNodes: !143)
!23568 = !DILocalVariable(name: "size1", arg: 1, scope: !23567, file: !23552, line: 74, type: !55)
!23569 = !DILocation(line: 74, column: 15, scope: !23567)
!23570 = !DILocalVariable(name: "size2", arg: 2, scope: !23567, file: !23552, line: 74, type: !55)
!23571 = !DILocation(line: 74, column: 29, scope: !23567)
!23572 = !DILocalVariable(name: "size3", arg: 3, scope: !23567, file: !23552, line: 74, type: !55)
!23573 = !DILocation(line: 74, column: 43, scope: !23567)
!23574 = !DILocation(line: 76, column: 22, scope: !23567)
!23575 = !DILocation(line: 76, column: 29, scope: !23567)
!23576 = !DILocation(line: 76, column: 16, scope: !23567)
!23577 = !DILocation(line: 76, column: 37, scope: !23567)
!23578 = !DILocation(line: 76, column: 10, scope: !23567)
!23579 = !DILocation(line: 76, column: 3, scope: !23567)
!23580 = distinct !DISubprogram(name: "xsum4", scope: !23552, file: !23552, line: 84, type: !2890, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2885, retainedNodes: !143)
!23581 = !DILocalVariable(name: "size1", arg: 1, scope: !23580, file: !23552, line: 84, type: !55)
!23582 = !DILocation(line: 84, column: 15, scope: !23580)
!23583 = !DILocalVariable(name: "size2", arg: 2, scope: !23580, file: !23552, line: 84, type: !55)
!23584 = !DILocation(line: 84, column: 29, scope: !23580)
!23585 = !DILocalVariable(name: "size3", arg: 3, scope: !23580, file: !23552, line: 84, type: !55)
!23586 = !DILocation(line: 84, column: 43, scope: !23580)
!23587 = !DILocalVariable(name: "size4", arg: 4, scope: !23580, file: !23552, line: 84, type: !55)
!23588 = !DILocation(line: 84, column: 57, scope: !23580)
!23589 = !DILocation(line: 86, column: 28, scope: !23580)
!23590 = !DILocation(line: 86, column: 35, scope: !23580)
!23591 = !DILocation(line: 86, column: 22, scope: !23580)
!23592 = !DILocation(line: 86, column: 43, scope: !23580)
!23593 = !DILocation(line: 86, column: 16, scope: !23580)
!23594 = !DILocation(line: 86, column: 51, scope: !23580)
!23595 = !DILocation(line: 86, column: 10, scope: !23580)
!23596 = !DILocation(line: 86, column: 3, scope: !23580)
!23597 = distinct !DISubprogram(name: "xmax", scope: !23552, file: !23552, line: 94, type: !2888, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2885, retainedNodes: !143)
!23598 = !DILocalVariable(name: "size1", arg: 1, scope: !23597, file: !23552, line: 94, type: !55)
!23599 = !DILocation(line: 94, column: 14, scope: !23597)
!23600 = !DILocalVariable(name: "size2", arg: 2, scope: !23597, file: !23552, line: 94, type: !55)
!23601 = !DILocation(line: 94, column: 28, scope: !23597)
!23602 = !DILocation(line: 98, column: 11, scope: !23597)
!23603 = !DILocation(line: 98, column: 20, scope: !23597)
!23604 = !DILocation(line: 98, column: 17, scope: !23597)
!23605 = !DILocation(line: 98, column: 28, scope: !23597)
!23606 = !DILocation(line: 98, column: 36, scope: !23597)
!23607 = !DILocation(line: 98, column: 3, scope: !23597)
!23608 = distinct !DISubprogram(name: "rpl_fclose", scope: !23609, file: !23609, line: 58, type: !2895, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2892, retainedNodes: !143)
!23609 = !DIFile(filename: "lib/fclose.c", directory: "/home/mbarbar/software/coreutils-8.31")
!23610 = !DILocalVariable(name: "fp", arg: 1, scope: !23608, file: !23609, line: 58, type: !2897)
!23611 = !DILocation(line: 58, column: 19, scope: !23608)
!23612 = !DILocalVariable(name: "saved_errno", scope: !23608, file: !23609, line: 60, type: !7)
!23613 = !DILocation(line: 60, column: 7, scope: !23608)
!23614 = !DILocalVariable(name: "fd", scope: !23608, file: !23609, line: 61, type: !7)
!23615 = !DILocation(line: 61, column: 7, scope: !23608)
!23616 = !DILocalVariable(name: "result", scope: !23608, file: !23609, line: 62, type: !7)
!23617 = !DILocation(line: 62, column: 7, scope: !23608)
!23618 = !DILocation(line: 65, column: 16, scope: !23608)
!23619 = !DILocation(line: 65, column: 8, scope: !23608)
!23620 = !DILocation(line: 65, column: 6, scope: !23608)
!23621 = !DILocation(line: 66, column: 7, scope: !23622)
!23622 = distinct !DILexicalBlock(scope: !23608, file: !23609, line: 66, column: 7)
!23623 = !DILocation(line: 66, column: 10, scope: !23622)
!23624 = !DILocation(line: 66, column: 7, scope: !23608)
!23625 = !DILocation(line: 67, column: 28, scope: !23622)
!23626 = !DILocation(line: 67, column: 12, scope: !23622)
!23627 = !DILocation(line: 67, column: 5, scope: !23622)
!23628 = !DILocation(line: 72, column: 9, scope: !23629)
!23629 = distinct !DILexicalBlock(scope: !23608, file: !23609, line: 72, column: 7)
!23630 = !DILocation(line: 72, column: 23, scope: !23629)
!23631 = !DILocation(line: 72, column: 41, scope: !23629)
!23632 = !DILocation(line: 72, column: 33, scope: !23629)
!23633 = !DILocation(line: 72, column: 26, scope: !23629)
!23634 = !DILocation(line: 72, column: 59, scope: !23629)
!23635 = !DILocation(line: 73, column: 7, scope: !23629)
!23636 = !DILocation(line: 73, column: 18, scope: !23629)
!23637 = !DILocation(line: 73, column: 10, scope: !23629)
!23638 = !DILocation(line: 72, column: 7, scope: !23608)
!23639 = !DILocation(line: 74, column: 19, scope: !23629)
!23640 = !DILocation(line: 74, column: 17, scope: !23629)
!23641 = !DILocation(line: 74, column: 5, scope: !23629)
!23642 = !DILocation(line: 100, column: 28, scope: !23608)
!23643 = !DILocation(line: 100, column: 12, scope: !23608)
!23644 = !DILocation(line: 100, column: 10, scope: !23608)
!23645 = !DILocation(line: 105, column: 7, scope: !23646)
!23646 = distinct !DILexicalBlock(scope: !23608, file: !23609, line: 105, column: 7)
!23647 = !DILocation(line: 105, column: 19, scope: !23646)
!23648 = !DILocation(line: 105, column: 7, scope: !23608)
!23649 = !DILocation(line: 107, column: 15, scope: !23650)
!23650 = distinct !DILexicalBlock(scope: !23646, file: !23609, line: 106, column: 5)
!23651 = !DILocation(line: 107, column: 7, scope: !23650)
!23652 = !DILocation(line: 107, column: 13, scope: !23650)
!23653 = !DILocation(line: 108, column: 14, scope: !23650)
!23654 = !DILocation(line: 109, column: 5, scope: !23650)
!23655 = !DILocation(line: 111, column: 10, scope: !23608)
!23656 = !DILocation(line: 111, column: 3, scope: !23608)
!23657 = !DILocation(line: 112, column: 1, scope: !23608)
!23658 = distinct !DISubprogram(name: "rpl_fcntl", scope: !1308, file: !1308, line: 201, type: !23659, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1309, retainedNodes: !143)
!23659 = !DISubroutineType(types: !23660)
!23660 = !{!7, !7, !7, null}
!23661 = !DILocalVariable(name: "fd", arg: 1, scope: !23658, file: !1308, line: 201, type: !7)
!23662 = !DILocation(line: 201, column: 12, scope: !23658)
!23663 = !DILocalVariable(name: "action", arg: 2, scope: !23658, file: !1308, line: 201, type: !7)
!23664 = !DILocation(line: 201, column: 20, scope: !23658)
!23665 = !DILocalVariable(name: "arg", scope: !23658, file: !1308, line: 207, type: !1312)
!23666 = !DILocation(line: 207, column: 11, scope: !23658)
!23667 = !DILocalVariable(name: "result", scope: !23658, file: !1308, line: 208, type: !7)
!23668 = !DILocation(line: 208, column: 7, scope: !23658)
!23669 = !DILocation(line: 209, column: 3, scope: !23658)
!23670 = !DILocation(line: 210, column: 11, scope: !23658)
!23671 = !DILocation(line: 210, column: 3, scope: !23658)
!23672 = !DILocalVariable(name: "target", scope: !23673, file: !1308, line: 214, type: !7)
!23673 = distinct !DILexicalBlock(scope: !23674, file: !1308, line: 213, column: 7)
!23674 = distinct !DILexicalBlock(scope: !23658, file: !1308, line: 211, column: 5)
!23675 = !DILocation(line: 214, column: 13, scope: !23673)
!23676 = !DILocation(line: 214, column: 22, scope: !23673)
!23677 = !DILocation(line: 215, column: 35, scope: !23673)
!23678 = !DILocation(line: 215, column: 39, scope: !23673)
!23679 = !DILocation(line: 215, column: 18, scope: !23673)
!23680 = !DILocation(line: 215, column: 16, scope: !23673)
!23681 = !DILocation(line: 216, column: 9, scope: !23673)
!23682 = !DILocalVariable(name: "target", scope: !23683, file: !1308, line: 221, type: !7)
!23683 = distinct !DILexicalBlock(scope: !23674, file: !1308, line: 220, column: 7)
!23684 = !DILocation(line: 221, column: 13, scope: !23683)
!23685 = !DILocation(line: 221, column: 22, scope: !23683)
!23686 = !DILocation(line: 222, column: 43, scope: !23683)
!23687 = !DILocation(line: 222, column: 47, scope: !23683)
!23688 = !DILocation(line: 222, column: 18, scope: !23683)
!23689 = !DILocation(line: 222, column: 16, scope: !23683)
!23690 = !DILocation(line: 223, column: 9, scope: !23683)
!23691 = !DILocation(line: 258, column: 17, scope: !23692)
!23692 = distinct !DILexicalBlock(scope: !23674, file: !1308, line: 256, column: 7)
!23693 = !DILocation(line: 258, column: 9, scope: !23692)
!23694 = !DILocation(line: 327, column: 29, scope: !23695)
!23695 = distinct !DILexicalBlock(scope: !23692, file: !1308, line: 259, column: 11)
!23696 = !DILocation(line: 327, column: 33, scope: !23695)
!23697 = !DILocation(line: 327, column: 22, scope: !23695)
!23698 = !DILocation(line: 327, column: 20, scope: !23695)
!23699 = !DILocation(line: 328, column: 13, scope: !23695)
!23700 = !DILocalVariable(name: "x", scope: !23701, file: !1308, line: 422, type: !7)
!23701 = distinct !DILexicalBlock(scope: !23695, file: !1308, line: 421, column: 13)
!23702 = !DILocation(line: 422, column: 19, scope: !23701)
!23703 = !DILocation(line: 422, column: 23, scope: !23701)
!23704 = !DILocation(line: 423, column: 31, scope: !23701)
!23705 = !DILocation(line: 423, column: 35, scope: !23701)
!23706 = !DILocation(line: 423, column: 43, scope: !23701)
!23707 = !DILocation(line: 423, column: 24, scope: !23701)
!23708 = !DILocation(line: 423, column: 22, scope: !23701)
!23709 = !DILocation(line: 425, column: 13, scope: !23695)
!23710 = !DILocalVariable(name: "p", scope: !23711, file: !1308, line: 430, type: !53)
!23711 = distinct !DILexicalBlock(scope: !23695, file: !1308, line: 429, column: 13)
!23712 = !DILocation(line: 430, column: 21, scope: !23711)
!23713 = !DILocation(line: 430, column: 25, scope: !23711)
!23714 = !DILocation(line: 431, column: 31, scope: !23711)
!23715 = !DILocation(line: 431, column: 35, scope: !23711)
!23716 = !DILocation(line: 431, column: 43, scope: !23711)
!23717 = !DILocation(line: 431, column: 24, scope: !23711)
!23718 = !DILocation(line: 431, column: 22, scope: !23711)
!23719 = !DILocation(line: 433, column: 13, scope: !23695)
!23720 = !DILocation(line: 438, column: 9, scope: !23692)
!23721 = !DILocation(line: 441, column: 3, scope: !23658)
!23722 = !DILocation(line: 442, column: 10, scope: !23658)
!23723 = !DILocation(line: 442, column: 3, scope: !23658)
!23724 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD", scope: !1308, file: !1308, line: 446, type: !417, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1309, retainedNodes: !143)
!23725 = !DILocalVariable(name: "fd", arg: 1, scope: !23724, file: !1308, line: 446, type: !7)
!23726 = !DILocation(line: 446, column: 22, scope: !23724)
!23727 = !DILocalVariable(name: "target", arg: 2, scope: !23724, file: !1308, line: 446, type: !7)
!23728 = !DILocation(line: 446, column: 30, scope: !23724)
!23729 = !DILocalVariable(name: "result", scope: !23724, file: !1308, line: 448, type: !7)
!23730 = !DILocation(line: 448, column: 7, scope: !23724)
!23731 = !DILocation(line: 481, column: 19, scope: !23724)
!23732 = !DILocation(line: 481, column: 32, scope: !23724)
!23733 = !DILocation(line: 481, column: 12, scope: !23724)
!23734 = !DILocation(line: 481, column: 10, scope: !23724)
!23735 = !DILocation(line: 483, column: 10, scope: !23724)
!23736 = !DILocation(line: 483, column: 3, scope: !23724)
!23737 = !DILocalVariable(name: "fd", arg: 1, scope: !1307, file: !1308, line: 487, type: !7)
!23738 = !DILocation(line: 487, column: 30, scope: !1307)
!23739 = !DILocalVariable(name: "target", arg: 2, scope: !1307, file: !1308, line: 487, type: !7)
!23740 = !DILocation(line: 487, column: 38, scope: !1307)
!23741 = !DILocalVariable(name: "result", scope: !1307, file: !1308, line: 489, type: !7)
!23742 = !DILocation(line: 489, column: 7, scope: !1307)
!23743 = !DILocation(line: 507, column: 12, scope: !23744)
!23744 = distinct !DILexicalBlock(scope: !1307, file: !1308, line: 507, column: 7)
!23745 = !DILocation(line: 507, column: 9, scope: !23744)
!23746 = !DILocation(line: 507, column: 7, scope: !1307)
!23747 = !DILocation(line: 509, column: 23, scope: !23748)
!23748 = distinct !DILexicalBlock(scope: !23744, file: !1308, line: 508, column: 5)
!23749 = !DILocation(line: 509, column: 44, scope: !23748)
!23750 = !DILocation(line: 509, column: 16, scope: !23748)
!23751 = !DILocation(line: 509, column: 14, scope: !23748)
!23752 = !DILocation(line: 510, column: 16, scope: !23753)
!23753 = distinct !DILexicalBlock(scope: !23748, file: !1308, line: 510, column: 11)
!23754 = !DILocation(line: 510, column: 13, scope: !23753)
!23755 = !DILocation(line: 510, column: 23, scope: !23753)
!23756 = !DILocation(line: 510, column: 26, scope: !23753)
!23757 = !DILocation(line: 510, column: 32, scope: !23753)
!23758 = !DILocation(line: 510, column: 11, scope: !23748)
!23759 = !DILocation(line: 512, column: 30, scope: !23760)
!23760 = distinct !DILexicalBlock(scope: !23753, file: !1308, line: 511, column: 9)
!23761 = !DILocation(line: 517, column: 9, scope: !23760)
!23762 = !DILocation(line: 520, column: 37, scope: !23763)
!23763 = distinct !DILexicalBlock(scope: !23753, file: !1308, line: 519, column: 9)
!23764 = !DILocation(line: 520, column: 41, scope: !23763)
!23765 = !DILocation(line: 520, column: 20, scope: !23763)
!23766 = !DILocation(line: 520, column: 18, scope: !23763)
!23767 = !DILocation(line: 521, column: 15, scope: !23768)
!23768 = distinct !DILexicalBlock(scope: !23763, file: !1308, line: 521, column: 15)
!23769 = !DILocation(line: 521, column: 22, scope: !23768)
!23770 = !DILocation(line: 521, column: 15, scope: !23763)
!23771 = !DILocation(line: 522, column: 32, scope: !23768)
!23772 = !DILocation(line: 522, column: 13, scope: !23768)
!23773 = !DILocation(line: 524, column: 5, scope: !23748)
!23774 = !DILocation(line: 527, column: 31, scope: !23744)
!23775 = !DILocation(line: 527, column: 35, scope: !23744)
!23776 = !DILocation(line: 527, column: 14, scope: !23744)
!23777 = !DILocation(line: 527, column: 12, scope: !23744)
!23778 = !DILocation(line: 528, column: 12, scope: !23779)
!23779 = distinct !DILexicalBlock(scope: !1307, file: !1308, line: 528, column: 7)
!23780 = !DILocation(line: 528, column: 9, scope: !23779)
!23781 = !DILocation(line: 528, column: 19, scope: !23779)
!23782 = !DILocation(line: 528, column: 22, scope: !23779)
!23783 = !DILocation(line: 528, column: 41, scope: !23779)
!23784 = !DILocation(line: 528, column: 7, scope: !1307)
!23785 = !DILocalVariable(name: "flags", scope: !23786, file: !1308, line: 530, type: !7)
!23786 = distinct !DILexicalBlock(scope: !23779, file: !1308, line: 529, column: 5)
!23787 = !DILocation(line: 530, column: 11, scope: !23786)
!23788 = !DILocation(line: 530, column: 26, scope: !23786)
!23789 = !DILocation(line: 530, column: 19, scope: !23786)
!23790 = !DILocation(line: 531, column: 11, scope: !23791)
!23791 = distinct !DILexicalBlock(scope: !23786, file: !1308, line: 531, column: 11)
!23792 = !DILocation(line: 531, column: 17, scope: !23791)
!23793 = !DILocation(line: 531, column: 21, scope: !23791)
!23794 = !DILocation(line: 531, column: 31, scope: !23791)
!23795 = !DILocation(line: 531, column: 48, scope: !23791)
!23796 = !DILocation(line: 531, column: 54, scope: !23791)
!23797 = !DILocation(line: 531, column: 24, scope: !23791)
!23798 = !DILocation(line: 531, column: 68, scope: !23791)
!23799 = !DILocation(line: 531, column: 11, scope: !23786)
!23800 = !DILocalVariable(name: "saved_errno", scope: !23801, file: !1308, line: 533, type: !7)
!23801 = distinct !DILexicalBlock(scope: !23791, file: !1308, line: 532, column: 9)
!23802 = !DILocation(line: 533, column: 15, scope: !23801)
!23803 = !DILocation(line: 533, column: 29, scope: !23801)
!23804 = !DILocation(line: 534, column: 18, scope: !23801)
!23805 = !DILocation(line: 534, column: 11, scope: !23801)
!23806 = !DILocation(line: 535, column: 19, scope: !23801)
!23807 = !DILocation(line: 535, column: 11, scope: !23801)
!23808 = !DILocation(line: 535, column: 17, scope: !23801)
!23809 = !DILocation(line: 536, column: 18, scope: !23801)
!23810 = !DILocation(line: 537, column: 9, scope: !23801)
!23811 = !DILocation(line: 538, column: 5, scope: !23786)
!23812 = !DILocation(line: 540, column: 10, scope: !1307)
!23813 = !DILocation(line: 540, column: 3, scope: !1307)
!23814 = distinct !DISubprogram(name: "acl_errno_valid", scope: !23815, file: !23815, line: 30, type: !307, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2931, retainedNodes: !143)
!23815 = !DIFile(filename: "lib/acl-errno-valid.c", directory: "/home/mbarbar/software/coreutils-8.31")
!23816 = !DILocalVariable(name: "errnum", arg: 1, scope: !23814, file: !23815, line: 30, type: !7)
!23817 = !DILocation(line: 30, column: 22, scope: !23814)
!23818 = !DILocation(line: 34, column: 11, scope: !23814)
!23819 = !DILocation(line: 34, column: 3, scope: !23814)
!23820 = !DILocation(line: 36, column: 17, scope: !23821)
!23821 = distinct !DILexicalBlock(scope: !23814, file: !23815, line: 35, column: 5)
!23822 = !DILocation(line: 37, column: 18, scope: !23821)
!23823 = !DILocation(line: 41, column: 18, scope: !23821)
!23824 = !DILocation(line: 49, column: 22, scope: !23821)
!23825 = !DILocation(line: 50, column: 14, scope: !23821)
!23826 = !DILocation(line: 52, column: 1, scope: !23814)
!23827 = distinct !DISubprogram(name: "c_isalnum", scope: !23828, file: !23828, line: 169, type: !307, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23828 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mbarbar/software/coreutils-8.31")
!23829 = !DILocalVariable(name: "c", arg: 1, scope: !23827, file: !23828, line: 169, type: !7)
!23830 = !DILocation(line: 169, column: 16, scope: !23827)
!23831 = !DILocation(line: 171, column: 11, scope: !23827)
!23832 = !DILocation(line: 171, column: 3, scope: !23827)
!23833 = !DILocation(line: 176, column: 7, scope: !23834)
!23834 = distinct !DILexicalBlock(scope: !23827, file: !23828, line: 172, column: 5)
!23835 = !DILocation(line: 178, column: 7, scope: !23834)
!23836 = !DILocation(line: 180, column: 1, scope: !23827)
!23837 = distinct !DISubprogram(name: "c_isalpha", scope: !23828, file: !23828, line: 183, type: !307, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23838 = !DILocalVariable(name: "c", arg: 1, scope: !23837, file: !23828, line: 183, type: !7)
!23839 = !DILocation(line: 183, column: 16, scope: !23837)
!23840 = !DILocation(line: 185, column: 11, scope: !23837)
!23841 = !DILocation(line: 185, column: 3, scope: !23837)
!23842 = !DILocation(line: 189, column: 7, scope: !23843)
!23843 = distinct !DILexicalBlock(scope: !23837, file: !23828, line: 186, column: 5)
!23844 = !DILocation(line: 191, column: 7, scope: !23843)
!23845 = !DILocation(line: 193, column: 1, scope: !23837)
!23846 = distinct !DISubprogram(name: "c_isascii", scope: !23828, file: !23828, line: 198, type: !307, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23847 = !DILocalVariable(name: "c", arg: 1, scope: !23846, file: !23828, line: 198, type: !7)
!23848 = !DILocation(line: 198, column: 16, scope: !23846)
!23849 = !DILocation(line: 200, column: 11, scope: !23846)
!23850 = !DILocation(line: 200, column: 3, scope: !23846)
!23851 = !DILocation(line: 208, column: 7, scope: !23852)
!23852 = distinct !DILexicalBlock(scope: !23846, file: !23828, line: 201, column: 5)
!23853 = !DILocation(line: 210, column: 7, scope: !23852)
!23854 = !DILocation(line: 212, column: 1, scope: !23846)
!23855 = distinct !DISubprogram(name: "c_isblank", scope: !23828, file: !23828, line: 215, type: !307, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23856 = !DILocalVariable(name: "c", arg: 1, scope: !23855, file: !23828, line: 215, type: !7)
!23857 = !DILocation(line: 215, column: 16, scope: !23855)
!23858 = !DILocation(line: 217, column: 10, scope: !23855)
!23859 = !DILocation(line: 217, column: 12, scope: !23855)
!23860 = !DILocation(line: 217, column: 19, scope: !23855)
!23861 = !DILocation(line: 217, column: 22, scope: !23855)
!23862 = !DILocation(line: 217, column: 24, scope: !23855)
!23863 = !DILocation(line: 217, column: 3, scope: !23855)
!23864 = distinct !DISubprogram(name: "c_iscntrl", scope: !23828, file: !23828, line: 221, type: !307, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23865 = !DILocalVariable(name: "c", arg: 1, scope: !23864, file: !23828, line: 221, type: !7)
!23866 = !DILocation(line: 221, column: 16, scope: !23864)
!23867 = !DILocation(line: 223, column: 11, scope: !23864)
!23868 = !DILocation(line: 223, column: 3, scope: !23864)
!23869 = !DILocation(line: 226, column: 7, scope: !23870)
!23870 = distinct !DILexicalBlock(scope: !23864, file: !23828, line: 224, column: 5)
!23871 = !DILocation(line: 228, column: 7, scope: !23870)
!23872 = !DILocation(line: 230, column: 1, scope: !23864)
!23873 = distinct !DISubprogram(name: "c_isdigit", scope: !23828, file: !23828, line: 233, type: !307, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23874 = !DILocalVariable(name: "c", arg: 1, scope: !23873, file: !23828, line: 233, type: !7)
!23875 = !DILocation(line: 233, column: 16, scope: !23873)
!23876 = !DILocation(line: 235, column: 11, scope: !23873)
!23877 = !DILocation(line: 235, column: 3, scope: !23873)
!23878 = !DILocation(line: 238, column: 7, scope: !23879)
!23879 = distinct !DILexicalBlock(scope: !23873, file: !23828, line: 236, column: 5)
!23880 = !DILocation(line: 240, column: 7, scope: !23879)
!23881 = !DILocation(line: 242, column: 1, scope: !23873)
!23882 = distinct !DISubprogram(name: "c_isgraph", scope: !23828, file: !23828, line: 245, type: !307, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23883 = !DILocalVariable(name: "c", arg: 1, scope: !23882, file: !23828, line: 245, type: !7)
!23884 = !DILocation(line: 245, column: 16, scope: !23882)
!23885 = !DILocation(line: 247, column: 11, scope: !23882)
!23886 = !DILocation(line: 247, column: 3, scope: !23882)
!23887 = !DILocation(line: 253, column: 7, scope: !23888)
!23888 = distinct !DILexicalBlock(scope: !23882, file: !23828, line: 248, column: 5)
!23889 = !DILocation(line: 255, column: 7, scope: !23888)
!23890 = !DILocation(line: 257, column: 1, scope: !23882)
!23891 = distinct !DISubprogram(name: "c_islower", scope: !23828, file: !23828, line: 260, type: !307, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23892 = !DILocalVariable(name: "c", arg: 1, scope: !23891, file: !23828, line: 260, type: !7)
!23893 = !DILocation(line: 260, column: 16, scope: !23891)
!23894 = !DILocation(line: 262, column: 11, scope: !23891)
!23895 = !DILocation(line: 262, column: 3, scope: !23891)
!23896 = !DILocation(line: 265, column: 7, scope: !23897)
!23897 = distinct !DILexicalBlock(scope: !23891, file: !23828, line: 263, column: 5)
!23898 = !DILocation(line: 267, column: 7, scope: !23897)
!23899 = !DILocation(line: 269, column: 1, scope: !23891)
!23900 = distinct !DISubprogram(name: "c_isprint", scope: !23828, file: !23828, line: 272, type: !307, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23901 = !DILocalVariable(name: "c", arg: 1, scope: !23900, file: !23828, line: 272, type: !7)
!23902 = !DILocation(line: 272, column: 16, scope: !23900)
!23903 = !DILocation(line: 274, column: 11, scope: !23900)
!23904 = !DILocation(line: 274, column: 3, scope: !23900)
!23905 = !DILocation(line: 281, column: 7, scope: !23906)
!23906 = distinct !DILexicalBlock(scope: !23900, file: !23828, line: 275, column: 5)
!23907 = !DILocation(line: 283, column: 7, scope: !23906)
!23908 = !DILocation(line: 285, column: 1, scope: !23900)
!23909 = distinct !DISubprogram(name: "c_ispunct", scope: !23828, file: !23828, line: 288, type: !307, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23910 = !DILocalVariable(name: "c", arg: 1, scope: !23909, file: !23828, line: 288, type: !7)
!23911 = !DILocation(line: 288, column: 16, scope: !23909)
!23912 = !DILocation(line: 290, column: 11, scope: !23909)
!23913 = !DILocation(line: 290, column: 3, scope: !23909)
!23914 = !DILocation(line: 293, column: 7, scope: !23915)
!23915 = distinct !DILexicalBlock(scope: !23909, file: !23828, line: 291, column: 5)
!23916 = !DILocation(line: 295, column: 7, scope: !23915)
!23917 = !DILocation(line: 297, column: 1, scope: !23909)
!23918 = distinct !DISubprogram(name: "c_isspace", scope: !23828, file: !23828, line: 300, type: !307, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23919 = !DILocalVariable(name: "c", arg: 1, scope: !23918, file: !23828, line: 300, type: !7)
!23920 = !DILocation(line: 300, column: 16, scope: !23918)
!23921 = !DILocation(line: 302, column: 11, scope: !23918)
!23922 = !DILocation(line: 302, column: 3, scope: !23918)
!23923 = !DILocation(line: 305, column: 7, scope: !23924)
!23924 = distinct !DILexicalBlock(scope: !23918, file: !23828, line: 303, column: 5)
!23925 = !DILocation(line: 307, column: 7, scope: !23924)
!23926 = !DILocation(line: 309, column: 1, scope: !23918)
!23927 = distinct !DISubprogram(name: "c_isupper", scope: !23828, file: !23828, line: 312, type: !307, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23928 = !DILocalVariable(name: "c", arg: 1, scope: !23927, file: !23828, line: 312, type: !7)
!23929 = !DILocation(line: 312, column: 16, scope: !23927)
!23930 = !DILocation(line: 314, column: 11, scope: !23927)
!23931 = !DILocation(line: 314, column: 3, scope: !23927)
!23932 = !DILocation(line: 317, column: 7, scope: !23933)
!23933 = distinct !DILexicalBlock(scope: !23927, file: !23828, line: 315, column: 5)
!23934 = !DILocation(line: 319, column: 7, scope: !23933)
!23935 = !DILocation(line: 321, column: 1, scope: !23927)
!23936 = distinct !DISubprogram(name: "c_isxdigit", scope: !23828, file: !23828, line: 324, type: !307, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23937 = !DILocalVariable(name: "c", arg: 1, scope: !23936, file: !23828, line: 324, type: !7)
!23938 = !DILocation(line: 324, column: 17, scope: !23936)
!23939 = !DILocation(line: 326, column: 11, scope: !23936)
!23940 = !DILocation(line: 326, column: 3, scope: !23936)
!23941 = !DILocation(line: 330, column: 7, scope: !23942)
!23942 = distinct !DILexicalBlock(scope: !23936, file: !23828, line: 327, column: 5)
!23943 = !DILocation(line: 332, column: 7, scope: !23942)
!23944 = !DILocation(line: 334, column: 1, scope: !23936)
!23945 = distinct !DISubprogram(name: "c_tolower", scope: !23828, file: !23828, line: 337, type: !1827, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23946 = !DILocalVariable(name: "c", arg: 1, scope: !23945, file: !23828, line: 337, type: !7)
!23947 = !DILocation(line: 337, column: 16, scope: !23945)
!23948 = !DILocation(line: 339, column: 11, scope: !23945)
!23949 = !DILocation(line: 339, column: 3, scope: !23945)
!23950 = !DILocation(line: 342, column: 14, scope: !23951)
!23951 = distinct !DILexicalBlock(scope: !23945, file: !23828, line: 340, column: 5)
!23952 = !DILocation(line: 342, column: 16, scope: !23951)
!23953 = !DILocation(line: 342, column: 22, scope: !23951)
!23954 = !DILocation(line: 342, column: 7, scope: !23951)
!23955 = !DILocation(line: 344, column: 14, scope: !23951)
!23956 = !DILocation(line: 344, column: 7, scope: !23951)
!23957 = !DILocation(line: 346, column: 1, scope: !23945)
!23958 = distinct !DISubprogram(name: "c_toupper", scope: !23828, file: !23828, line: 349, type: !1827, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23959 = !DILocalVariable(name: "c", arg: 1, scope: !23958, file: !23828, line: 349, type: !7)
!23960 = !DILocation(line: 349, column: 16, scope: !23958)
!23961 = !DILocation(line: 351, column: 11, scope: !23958)
!23962 = !DILocation(line: 351, column: 3, scope: !23958)
!23963 = !DILocation(line: 354, column: 14, scope: !23964)
!23964 = distinct !DILexicalBlock(scope: !23958, file: !23828, line: 352, column: 5)
!23965 = !DILocation(line: 354, column: 16, scope: !23964)
!23966 = !DILocation(line: 354, column: 22, scope: !23964)
!23967 = !DILocation(line: 354, column: 7, scope: !23964)
!23968 = !DILocation(line: 356, column: 14, scope: !23964)
!23969 = !DILocation(line: 356, column: 7, scope: !23964)
!23970 = !DILocation(line: 358, column: 1, scope: !23958)
!23971 = distinct !DISubprogram(name: "fopen_safer", scope: !23972, file: !23972, line: 31, type: !2940, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!23972 = !DIFile(filename: "lib/fopen-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!23973 = !DILocalVariable(name: "file", arg: 1, scope: !23971, file: !23972, line: 31, type: !115)
!23974 = !DILocation(line: 31, column: 26, scope: !23971)
!23975 = !DILocalVariable(name: "mode", arg: 2, scope: !23971, file: !23972, line: 31, type: !115)
!23976 = !DILocation(line: 31, column: 44, scope: !23971)
!23977 = !DILocalVariable(name: "fp", scope: !23971, file: !23972, line: 33, type: !2942)
!23978 = !DILocation(line: 33, column: 9, scope: !23971)
!23979 = !DILocation(line: 33, column: 21, scope: !23971)
!23980 = !DILocation(line: 33, column: 27, scope: !23971)
!23981 = !DILocation(line: 33, column: 14, scope: !23971)
!23982 = !DILocation(line: 35, column: 7, scope: !23983)
!23983 = distinct !DILexicalBlock(scope: !23971, file: !23972, line: 35, column: 7)
!23984 = !DILocation(line: 35, column: 7, scope: !23971)
!23985 = !DILocalVariable(name: "fd", scope: !23986, file: !23972, line: 37, type: !7)
!23986 = distinct !DILexicalBlock(scope: !23983, file: !23972, line: 36, column: 5)
!23987 = !DILocation(line: 37, column: 11, scope: !23986)
!23988 = !DILocation(line: 37, column: 24, scope: !23986)
!23989 = !DILocation(line: 37, column: 16, scope: !23986)
!23990 = !DILocation(line: 39, column: 16, scope: !23991)
!23991 = distinct !DILexicalBlock(scope: !23986, file: !23972, line: 39, column: 11)
!23992 = !DILocation(line: 39, column: 13, scope: !23991)
!23993 = !DILocation(line: 39, column: 19, scope: !23991)
!23994 = !DILocation(line: 39, column: 22, scope: !23991)
!23995 = !DILocation(line: 39, column: 25, scope: !23991)
!23996 = !DILocation(line: 39, column: 11, scope: !23986)
!23997 = !DILocalVariable(name: "f", scope: !23998, file: !23972, line: 41, type: !7)
!23998 = distinct !DILexicalBlock(scope: !23991, file: !23972, line: 40, column: 9)
!23999 = !DILocation(line: 41, column: 15, scope: !23998)
!24000 = !DILocation(line: 41, column: 30, scope: !23998)
!24001 = !DILocation(line: 41, column: 19, scope: !23998)
!24002 = !DILocation(line: 43, column: 15, scope: !24003)
!24003 = distinct !DILexicalBlock(scope: !23998, file: !23972, line: 43, column: 15)
!24004 = !DILocation(line: 43, column: 17, scope: !24003)
!24005 = !DILocation(line: 43, column: 15, scope: !23998)
!24006 = !DILocalVariable(name: "e", scope: !24007, file: !23972, line: 45, type: !7)
!24007 = distinct !DILexicalBlock(scope: !24003, file: !23972, line: 44, column: 13)
!24008 = !DILocation(line: 45, column: 19, scope: !24007)
!24009 = !DILocation(line: 45, column: 23, scope: !24007)
!24010 = !DILocation(line: 46, column: 23, scope: !24007)
!24011 = !DILocation(line: 46, column: 15, scope: !24007)
!24012 = !DILocation(line: 47, column: 23, scope: !24007)
!24013 = !DILocation(line: 47, column: 15, scope: !24007)
!24014 = !DILocation(line: 47, column: 21, scope: !24007)
!24015 = !DILocation(line: 48, column: 15, scope: !24007)
!24016 = !DILocation(line: 51, column: 23, scope: !24017)
!24017 = distinct !DILexicalBlock(scope: !23998, file: !23972, line: 51, column: 15)
!24018 = !DILocation(line: 51, column: 15, scope: !24017)
!24019 = !DILocation(line: 51, column: 27, scope: !24017)
!24020 = !DILocation(line: 52, column: 15, scope: !24017)
!24021 = !DILocation(line: 52, column: 34, scope: !24017)
!24022 = !DILocation(line: 52, column: 37, scope: !24017)
!24023 = !DILocation(line: 52, column: 26, scope: !24017)
!24024 = !DILocation(line: 52, column: 24, scope: !24017)
!24025 = !DILocation(line: 51, column: 15, scope: !23998)
!24026 = !DILocalVariable(name: "e", scope: !24027, file: !23972, line: 54, type: !7)
!24027 = distinct !DILexicalBlock(scope: !24017, file: !23972, line: 53, column: 13)
!24028 = !DILocation(line: 54, column: 19, scope: !24027)
!24029 = !DILocation(line: 54, column: 23, scope: !24027)
!24030 = !DILocation(line: 55, column: 22, scope: !24027)
!24031 = !DILocation(line: 55, column: 15, scope: !24027)
!24032 = !DILocation(line: 56, column: 23, scope: !24027)
!24033 = !DILocation(line: 56, column: 15, scope: !24027)
!24034 = !DILocation(line: 56, column: 21, scope: !24027)
!24035 = !DILocation(line: 57, column: 15, scope: !24027)
!24036 = !DILocation(line: 59, column: 9, scope: !23998)
!24037 = !DILocation(line: 60, column: 5, scope: !23986)
!24038 = !DILocation(line: 62, column: 10, scope: !23971)
!24039 = !DILocation(line: 62, column: 3, scope: !23971)
!24040 = !DILocation(line: 63, column: 1, scope: !23971)
