; ModuleID = 'mv.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.timespec = type { i64, i64 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.fs_res = type { i64, i32, i8 }
%struct.cp_options = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, %struct.hash_table*, %struct.hash_table* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.rm_options = type { i8, i32, i8, i8, i8, %struct.timespec*, i8, i8, i8, i8 }
%struct.FTS = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent**, i64, i8*, i32, i32, i64, i64, i32 (%struct._ftsent**, %struct._ftsent**)*, i32, %struct.hash_table*, %union.anon, %struct.I_ring }
%struct._ftsent = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent*, %struct.__dirstream*, i64, i8*, i8*, i8*, i32, i32, i64, %struct.FTS*, i64, i64, i64, i16, i16, i16, [1 x %struct.stat], [0 x i8] }
%struct.__dirstream = type opaque
%union.anon = type { %struct.hash_table* }
%struct.I_ring = type { [4 x i32], i32, i32, i32, i8 }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.dir_list = type { %struct.dir_list*, i64, i64 }
%struct.extent_scan = type { i32, i64, i32, i64, i8, i8, %struct.extent_info* }
%struct.extent_info = type { i64, i64, i32 }
%struct.Src_to_dest = type { i64, i64, i8* }
%union.anon.16 = type { %struct.fiemap, [4064 x i8] }
%struct.fiemap = type { i64, i64, i32, i32, i32, i32, [0 x %struct.fiemap_extent] }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%struct.link_arg = type { i32, i8*, i32, i32 }
%struct.symlink_arg = type { i8*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.F_triple = type { i8*, i64, i64 }
%struct.permission_context = type { i32 }
%struct.__mbstate_t = type { i32, %struct.permission_context }
%struct.direntry_t = type { i8*, i64 }
%struct.randint_source = type { %struct.randread_source*, i64, i64 }
%struct.randread_source = type { %struct._IO_FILE*, void (i8*)*, i8*, %union.anon.110 }
%union.anon.110 = type { %struct.isaac }
%struct.isaac = type { i64, %struct.isaac_state, %union.anon.0 }
%struct.isaac_state = type { [256 x i64], i64, i64, i64 }
%union.anon.0 = type { [256 x i64] }
%struct.cycle_check_state = type { %struct.timespec, i64, i32 }
%struct.Active_dir = type { i64, i64, %struct._ftsent* }
%struct.statfs = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, i64, [4 x i64] }
%struct.__fsid_t = type { [2 x i32] }
%struct.timezone = type { i32, i32 }

@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [127 x i8] c"Usage: %s [OPTION]... [-T] SOURCE DEST\0A  or:  %s [OPTION]... SOURCE... DIRECTORY\0A  or:  %s [OPTION]... -t DIRECTORY SOURCE...\0A\00", align 1
@.str.2 = private unnamed_addr constant [56 x i8] c"Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str.3 = private unnamed_addr constant [418 x i8] c"      --backup[=CONTROL]       make a backup of each existing destination file\0A  -b                           like --backup but does not accept an argument\0A  -f, --force                  do not prompt before overwriting\0A  -i, --interactive            prompt before overwrite\0A  -n, --no-clobber             do not overwrite an existing file\0AIf you specify more than one of -i, -f, -n, only the final one takes effect.\0A\00", align 1
@.str.4 = private unnamed_addr constant [184 x i8] c"      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\0A                                 argument\0A  -S, --suffix=SUFFIX          override the usual backup suffix\0A\00", align 1
@.str.5 = private unnamed_addr constant [527 x i8] c"  -t, --target-directory=DIRECTORY  move all SOURCE arguments into DIRECTORY\0A  -T, --no-target-directory    treat DEST as a normal file\0A  -u, --update                 move only when the SOURCE file is newer\0A                                 than the destination file or when the\0A                                 destination file is missing\0A  -v, --verbose                explain what is being done\0A  -Z, --context                set SELinux security context of destination\0A                                 file to default type\0A\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.7 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"mv\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.39 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.40 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.42 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.44 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.45 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.29 = private unnamed_addr constant [221 x i8] c"\0AThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\0AThe version control method may be selected via the --backup option or through\0Athe VERSION_CONTROL environment variable.  Here are the values:\0A\0A\00", align 1
@.str.30 = private unnamed_addr constant [222 x i8] c"  none, off       never make backups (even if --backup is given)\0A  numbered, t     make numbered backups\0A  existing, nil   numbered if numbered backups exist, simple otherwise\0A  simple, never   always make simple backups\0A\00", align 1
@.str.28 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"bfint:uvS:TZ\00", align 1
@long_options = internal constant [14 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i32 2, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 105 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.51, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !60, !ctir !150
@optarg = external dso_local global i8*, align 8, !ctir !7
@remove_trailing_slashes = internal global i8 0, align 1, !dbg !266, !ctir !139
@.str.13 = private unnamed_addr constant [38 x i8] c"multiple target directories specified\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"failed to access %s\00", align 1
@.str.15 = private unnamed_addr constant [29 x i8] c"target %s is not a directory\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"Mike Parker\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"Jim Meyering\00", align 1
@optind = external dso_local global i32, align 4, !ctir !5
@.str.20 = private unnamed_addr constant [21 x i8] c"missing file operand\00", align 1
@.str.21 = private unnamed_addr constant [42 x i8] c"missing destination file operand after %s\00", align 1
@.str.22 = private unnamed_addr constant [70 x i8] c"cannot combine --target-directory (-t) and --no-target-directory (-T)\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"2 <= n_files\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"src/mv.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@.str.26 = private unnamed_addr constant [57 x i8] c"options --backup and --no-clobber are mutually exclusive\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"backup type\00", align 1
@.str.59 = private unnamed_addr constant [22 x i8] c"VALID_STATUS (status)\00", align 1
@__PRETTY_FUNCTION__.do_move = private unnamed_addr constant [69 x i8] c"_Bool do_move(const char *, const char *, const struct cp_options *)\00", align 1
@rm_option_init.dev_ino_buf = internal global %struct.timespec zeroinitializer, align 8, !dbg !268
@.str.60 = private unnamed_addr constant [31 x i8] c"failed to get attributes of %s\00", align 1
@.str.61 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"interactive\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c"no-clobber\00", align 1
@.str.51 = private unnamed_addr constant [20 x i8] c"no-target-directory\00", align 1
@.str.52 = private unnamed_addr constant [23 x i8] c"strip-trailing-slashes\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str.54 = private unnamed_addr constant [17 x i8] c"target-directory\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"update\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.58 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"fts_read failed\00", align 1
@.str.1.63 = private unnamed_addr constant [17 x i8] c"VALID_STATUS (s)\00", align 1
@.str.2.64 = private unnamed_addr constant [13 x i8] c"src/remove.c\00", align 1
@__PRETTY_FUNCTION__.rm = private unnamed_addr constant [60 x i8] c"enum RM_status rm(char *const *, const struct rm_options *)\00", align 1
@.str.3.65 = private unnamed_addr constant [17 x i8] c"fts_close failed\00", align 1
@.str.4.66 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.5.67 = private unnamed_addr constant [51 x i8] c"refusing to remove %s or %s directory: skipping %s\00", align 1
@.str.6.68 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.7.69 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.8.70 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.9.71 = private unnamed_addr constant [45 x i8] c"it is dangerous to operate recursively on %s\00", align 1
@.str.10.72 = private unnamed_addr constant [58 x i8] c"it is dangerous to operate recursively on %s (same as %s)\00", align 1
@.str.11.73 = private unnamed_addr constant [49 x i8] c"use --no-preserve-root to override this failsafe\00", align 1
@.str.12.74 = private unnamed_addr constant [31 x i8] c"failed to stat %s: skipping %s\00", align 1
@.str.13.75 = private unnamed_addr constant [46 x i8] c"skipping %s, since it's on a different device\00", align 1
@.str.14.76 = private unnamed_addr constant [37 x i8] c"and --preserve-root=all is in effect\00", align 1
@.str.15.77 = private unnamed_addr constant [186 x i8] c"WARNING: Circular directory structure.\0AThis almost certainly means that you have a corrupted file system.\0ANOTIFY YOUR SYSTEM MANAGER.\0AThe following directory is part of the cycle:\0A  %s\0A\00", align 1
@.str.16.78 = private unnamed_addr constant [21 x i8] c"traversal failed: %s\00", align 1
@.str.17.79 = private unnamed_addr constant [56 x i8] c"unexpected failure: fts_info=%d: %s\0Aplease report to %s\00", align 1
@.str.18.80 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.23.81 = private unnamed_addr constant [22 x i8] c"removed directory %s\0A\00", align 1
@.str.24.82 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.19.83 = private unnamed_addr constant [48 x i8] c"%s: descend into write-protected directory %s? \00", align 1
@.str.20.84 = private unnamed_addr constant [32 x i8] c"%s: descend into directory %s? \00", align 1
@.str.21.85 = private unnamed_addr constant [35 x i8] c"%s: remove write-protected %s %s? \00", align 1
@.str.22.86 = private unnamed_addr constant [19 x i8] c"%s: remove %s %s? \00", align 1
@.str.87 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@.str.1.88 = private unnamed_addr constant [37 x i8] c"failed to get security context of %s\00", align 1
@.str.2.89 = private unnamed_addr constant [51 x i8] c"failed to set default file creation context for %s\00", align 1
@.str.3.90 = private unnamed_addr constant [41 x i8] c"failed to set the security context of %s\00", align 1
@.str.4.95 = private unnamed_addr constant [24 x i8] c"valid_options (options)\00", align 1
@.str.5.96 = private unnamed_addr constant [11 x i8] c"src/copy.c\00", align 1
@__PRETTY_FUNCTION__.copy = private unnamed_addr constant [91 x i8] c"_Bool copy(const char *, const char *, _Bool, const struct cp_options *, _Bool *, _Bool *)\00", align 1
@top_level_src_name = internal global i8* null, align 8, !dbg !286, !ctir !113
@top_level_dst_name = internal global i8* null, align 8, !dbg !460, !ctir !113
@.str.12.97 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.13.98 = private unnamed_addr constant [40 x i8] c"-r not specified; omitting directory %s\00", align 1
@.str.14.99 = private unnamed_addr constant [22 x i8] c"omitting directory %s\00", align 1
@.str.15.100 = private unnamed_addr constant [49 x i8] c"warning: source file %s specified more than once\00", align 1
@.str.16.101 = private unnamed_addr constant [28 x i8] c"%s and %s are the same file\00", align 1
@.str.17.102 = private unnamed_addr constant [52 x i8] c"cannot overwrite non-directory %s with directory %s\00", align 1
@.str.18.103 = private unnamed_addr constant [43 x i8] c"will not overwrite just-created %s with %s\00", align 1
@.str.19.104 = private unnamed_addr constant [49 x i8] c"cannot overwrite directory %s with non-directory\00", align 1
@.str.20.105 = private unnamed_addr constant [51 x i8] c"cannot move directory onto non-directory: %s -> %s\00", align 1
@.str.21.107 = private unnamed_addr constant [50 x i8] c"backing up %s might destroy source;  %s not moved\00", align 1
@.str.22.108 = private unnamed_addr constant [51 x i8] c"backing up %s might destroy source;  %s not copied\00", align 1
@.str.23.109 = private unnamed_addr constant [17 x i8] c"cannot backup %s\00", align 1
@.str.24.110 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.25.111 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.26.112 = private unnamed_addr constant [49 x i8] c"will not copy %s through just-created symlink %s\00", align 1
@.str.27.113 = private unnamed_addr constant [45 x i8] c"cannot copy a directory, %s, into itself, %s\00", align 1
@.str.28.114 = private unnamed_addr constant [54 x i8] c"warning: source directory %s specified more than once\00", align 1
@.str.29.115 = private unnamed_addr constant [45 x i8] c"will not create hard link %s to directory %s\00", align 1
@.str.30.116 = private unnamed_addr constant [9 x i8] c"renamed \00", align 1
@.str.31.117 = private unnamed_addr constant [47 x i8] c"cannot move %s to a subdirectory of itself, %s\00", align 1
@.str.32.118 = private unnamed_addr constant [21 x i8] c"cannot move %s to %s\00", align 1
@.str.33.119 = private unnamed_addr constant [60 x i8] c"inter-device move failed: %s to %s; unable to remove target\00", align 1
@.str.34.120 = private unnamed_addr constant [8 x i8] c"copied \00", align 1
@.str.35.121 = private unnamed_addr constant [36 x i8] c"cannot copy cyclic symbolic link %s\00", align 1
@.str.36.122 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.37.123 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str.38.124 = private unnamed_addr constant [22 x i8] c"created directory %s\0A\00", align 1
@.str.39.125 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.40.126 = private unnamed_addr constant [63 x i8] c"%s: can make relative symbolic links only in current directory\00", align 1
@.str.41.127 = private unnamed_addr constant [37 x i8] c"cannot create symbolic link %s to %s\00", align 1
@.str.42.128 = private unnamed_addr constant [22 x i8] c"cannot create fifo %s\00", align 1
@.str.43.129 = private unnamed_addr constant [30 x i8] c"cannot create special file %s\00", align 1
@.str.44.130 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@.str.45.131 = private unnamed_addr constant [31 x i8] c"cannot create symbolic link %s\00", align 1
@.str.46.132 = private unnamed_addr constant [36 x i8] c"failed to preserve ownership for %s\00", align 1
@.str.47.133 = private unnamed_addr constant [25 x i8] c"%s has unknown file type\00", align 1
@.str.48.134 = private unnamed_addr constant [24 x i8] c"preserving times for %s\00", align 1
@.str.49.135 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.50.136 = private unnamed_addr constant [20 x i8] c"cannot un-backup %s\00", align 1
@.str.51.137 = private unnamed_addr constant [21 x i8] c"%s -> %s (unbackup)\0A\00", align 1
@cached_umask.mask = internal global i32 -1, align 4, !dbg !455
@.str.76 = private unnamed_addr constant [28 x i8] c"clearing permissions for %s\00", align 1
@.str.75 = private unnamed_addr constant [52 x i8] c"failed to restore the default file creation context\00", align 1
@.str.60.138 = private unnamed_addr constant [27 x i8] c"cannot open %s for reading\00", align 1
@.str.61.139 = private unnamed_addr constant [16 x i8] c"cannot fstat %s\00", align 1
@.str.62.140 = private unnamed_addr constant [56 x i8] c"skipping file %s, as it was replaced while being copied\00", align 1
@.str.63 = private unnamed_addr constant [40 x i8] c"not writing through dangling symlink %s\00", align 1
@.str.64 = private unnamed_addr constant [30 x i8] c"cannot create regular file %s\00", align 1
@.str.65 = private unnamed_addr constant [27 x i8] c"failed to clone %s from %s\00", align 1
@.str.66 = private unnamed_addr constant [20 x i8] c"failed to extend %s\00", align 1
@.str.67 = private unnamed_addr constant [19 x i8] c"failed to close %s\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"error reading %s\00", align 1
@.str.73 = private unnamed_addr constant [17 x i8] c"error writing %s\00", align 1
@.str.74 = private unnamed_addr constant [20 x i8] c"overflow reading %s\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"cannot lseek %s\00", align 1
@.str.71 = private unnamed_addr constant [22 x i8] c"error deallocating %s\00", align 1
@.str.68 = private unnamed_addr constant [31 x i8] c"%s: failed to get extents info\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c"%s: write failed\00", align 1
@write_zeros.zeros = internal global i8* null, align 8, !dbg !462
@write_zeros.nz = internal global i64 131072, align 8, !dbg !467
@write_zeros.fallback = internal global [1024 x i8] zeroinitializer, align 16, !dbg !469
@.str.59.141 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.57.142 = private unnamed_addr constant [9 x i8] c"%s -> %s\00", align 1
@.str.58.143 = private unnamed_addr constant [14 x i8] c" (backup: %s)\00", align 1
@.str.54.144 = private unnamed_addr constant [45 x i8] c"%s: replace %s, overriding mode %04lo (%s)? \00", align 1
@.str.55.145 = private unnamed_addr constant [49 x i8] c"%s: unwritable %s (mode %04lo, %s); try anyway? \00", align 1
@.str.56.146 = private unnamed_addr constant [19 x i8] c"%s: overwrite %s? \00", align 1
@.str.53.147 = private unnamed_addr constant [13 x i8] c"x->move_mode\00", align 1
@__PRETTY_FUNCTION__.abandon_move = private unnamed_addr constant [81 x i8] c"_Bool abandon_move(const struct cp_options *, const char *, const struct stat *)\00", align 1
@.str.52.148 = private unnamed_addr constant [33 x i8] c"cannot create hard link %s to %s\00", align 1
@.str.6.149 = private unnamed_addr constant [11 x i8] c"co != NULL\00", align 1
@__PRETTY_FUNCTION__.valid_options = private unnamed_addr constant [47 x i8] c"_Bool valid_options(const struct cp_options *)\00", align 1
@.str.7.150 = private unnamed_addr constant [36 x i8] c"VALID_BACKUP_TYPE (co->backup_type)\00", align 1
@.str.8.151 = private unnamed_addr constant [36 x i8] c"VALID_SPARSE_MODE (co->sparse_mode)\00", align 1
@.str.9.152 = private unnamed_addr constant [38 x i8] c"VALID_REFLINK_MODE (co->reflink_mode)\00", align 1
@.str.10.153 = private unnamed_addr constant [38 x i8] c"!(co->hard_link && co->symbolic_link)\00", align 1
@.str.11.154 = private unnamed_addr constant [73 x i8] c"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\00", align 1
@src_to_dest = internal global %struct.hash_table* null, align 8, !dbg !471, !ctir !238
@.str.169 = private unnamed_addr constant [55 x i8] c"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\00", align 1
@.str.1.170 = private unnamed_addr constant [18 x i8] c"src/extent-scan.c\00", align 1
@__PRETTY_FUNCTION__.extent_scan_read = private unnamed_addr constant [45 x i8] c"_Bool extent_scan_read(struct extent_scan *)\00", align 1
@.str.2.171 = private unnamed_addr constant [64 x i8] c"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\00", align 1
@simple_pattern = internal constant [9 x i8] c"CuXXXXXX\00", align 1, !dbg !487, !ctir !496
@Version = dso_local global i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.178, i32 0, i32 0), align 8, !dbg !510, !ctir !113
@.str.178 = private unnamed_addr constant [21 x i8] c"8.31.48-f2dfea-dirty\00", align 1
@.str.181 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.182 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.185 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@simple_backup_suffix = dso_local global i8* null, align 8, !dbg !516, !ctir !113
@.str.192 = private unnamed_addr constant [21 x i8] c"SIMPLE_BACKUP_SUFFIX\00", align 1
@.str.1.193 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.2.194 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.3.195 = private unnamed_addr constant [5 x i8] c".~1~\00", align 1
@backup_args = internal constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.198, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.199, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.200, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.201, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.202, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.203, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.204, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.205, i32 0, i32 0), i8* null], align 16, !dbg !547, !ctir !557
@backup_types = internal constant [8 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3], align 16, !dbg !565, !ctir !555
@.str.2.198 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.3.199 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.4.200 = private unnamed_addr constant [7 x i8] c"simple\00", align 1
@.str.5.201 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.6.202 = private unnamed_addr constant [9 x i8] c"existing\00", align 1
@.str.7.203 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.8.204 = private unnamed_addr constant [9 x i8] c"numbered\00", align 1
@.str.9.205 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.1.208 = private unnamed_addr constant [16 x i8] c"VERSION_CONTROL\00", align 1
@.str.209 = private unnamed_addr constant [17 x i8] c"$VERSION_CONTROL\00", align 1
@file_name = internal global i8* null, align 8, !dbg !568, !ctir !113
@stdin = external dso_local global %struct._IO_FILE*, align 8, !ctir !573
@.str.214 = private unnamed_addr constant [19 x i8] c"error closing file\00", align 1
@.str.1.215 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.216 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@file_name.217 = internal global i8* null, align 8, !dbg !615, !ctir !113
@ignore_EPIPE = internal global i8 0, align 1, !dbg !659, !ctir !139
@.str.220 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.221 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.222 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !662, !ctir !612
@.str.245 = private unnamed_addr constant [19 x i8] c"regular empty file\00", align 1
@.str.1.246 = private unnamed_addr constant [13 x i8] c"regular file\00", align 1
@.str.2.247 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.3.248 = private unnamed_addr constant [14 x i8] c"symbolic link\00", align 1
@.str.4.249 = private unnamed_addr constant [14 x i8] c"message queue\00", align 1
@.str.5.250 = private unnamed_addr constant [10 x i8] c"semaphore\00", align 1
@.str.6.251 = private unnamed_addr constant [21 x i8] c"shared memory object\00", align 1
@.str.7.252 = private unnamed_addr constant [19 x i8] c"block special file\00", align 1
@.str.8.253 = private unnamed_addr constant [23 x i8] c"character special file\00", align 1
@.str.9.254 = private unnamed_addr constant [5 x i8] c"fifo\00", align 1
@.str.10.255 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@.str.11.256 = private unnamed_addr constant [11 x i8] c"weird file\00", align 1
@.str.265 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.266 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.267 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.268 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !669, !ctir !693
@program_name = dso_local global i8* null, align 8, !dbg !722, !ctir !113
@.str.295 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.296 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.297 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !7
@program_invocation_name = external dso_local global i8*, align 8, !ctir !7
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.303, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.305, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.306, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.307, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.308, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.309, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.310, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.311, i32 0, i32 0), i8* null], align 16, !dbg !767, !ctir !787
@.str.302 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.303 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.304 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.305 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.306 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.307 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.308 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.309 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.310 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.311 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !829, !ctir !788
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !831, !ctir !791
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !833, !ctir !791
@.str.10.312 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.313 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.314 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.315 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.316 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.317 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.318 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.319 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.320 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !837, !ctir !804
@nslots = internal global i32 1, align 4, !dbg !839, !ctir !5
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !835, !ctir !492
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !841, !ctir !805
@.str.335 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.340 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@comparison_function_table = internal constant [3 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* null, i32 (i8*, i8*)* @direntry_cmp_name, i32 (i8*, i8*)* @direntry_cmp_inode], align 16, !dbg !843, !ctir !868
@letters = internal constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00", align 16, !dbg !883, !ctir !891
@.str.2.357 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.358 = private unnamed_addr constant [35 x i8] c"! \22invalid KIND in __gen_tempname\22\00", align 1
@.str.1.359 = private unnamed_addr constant [15 x i8] c"lib/tempname.c\00", align 1
@__PRETTY_FUNCTION__.gen_tempname_len = private unnamed_addr constant [52 x i8] c"int gen_tempname_len(char *, int, int, int, size_t)\00", align 1
@utimecmpat.ht = internal global %struct.hash_table* null, align 8, !dbg !901
@utimecmpat.new_dst_res = internal global %struct.fs_res* null, align 8, !dbg !944
@utimensat_works_really = internal global i32 0, align 4, !dbg !946, !ctir !5
@lutimensat_works_really = internal global i32 0, align 4, !dbg !966, !ctir !5
@.str.370 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.371 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.372 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.373 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.374 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.375 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.376 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.377 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.378 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.379 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.380 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.381 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.382 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.383 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.384 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.385 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.16.388 = private unnamed_addr constant [20 x i8] c"Report bugs to: %s\0A\00", align 1
@.str.17.389 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.18.390 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.19.391 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.20.392 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.21.393 = private unnamed_addr constant [39 x i8] c"General help using GNU software: <%s>\0A\00", align 1
@.str.22.394 = private unnamed_addr constant [29 x i8] c"https://www.gnu.org/gethelp/\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !969, !ctir !309
@can_write_any_file.initialized = internal global i8 0, align 1, !dbg !976
@can_write_any_file.can_write = internal global i8 0, align 1, !dbg !985
@.str.1.415 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.416 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.419 = private unnamed_addr constant [16 x i8] c"errno != EINVAL\00", align 1
@.str.1.420 = private unnamed_addr constant [11 x i8] c"lib/xfts.c\00", align 1
@__PRETTY_FUNCTION__.xfts_open = private unnamed_addr constant [78 x i8] c"FTS *xfts_open(char *const *, int, int (*)(const FTSENT **, const FTSENT **))\00", align 1
@.str.431 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.432 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.437 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !987, !ctir !559
@.str.450 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.451 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.452 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.453 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.454 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.467 = private unnamed_addr constant [24 x i8] c"state->magic == 9827862\00", align 1
@.str.1.468 = private unnamed_addr constant [18 x i8] c"lib/cycle-check.c\00", align 1
@__PRETTY_FUNCTION__.cycle_check = private unnamed_addr constant [67 x i8] c"_Bool cycle_check(struct cycle_check_state *, const struct stat *)\00", align 1
@.str.475 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.476 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.489 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.490 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.501 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3.502 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1.503 = private unnamed_addr constant [16 x i8] c"%s: end of file\00", align 1
@.str.2.504 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec = internal global i32 0, align 4, !dbg !1033

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #0 !dbg !2098 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2101, metadata !DIExpression()), !dbg !2102
  %0 = load i32, i32* %status.addr, align 4, !dbg !2103
  %cmp = icmp ne i32 %0, 0, !dbg !2105
  br i1 %cmp, label %if.then, label %if.else, !dbg !2106

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !2107

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2108
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #12, !dbg !2108
  %2 = load i8*, i8** @program_name, align 8, !dbg !2108
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !2108
  br label %do.end, !dbg !2108

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !2108

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !2110
  %3 = load i8*, i8** @program_name, align 8, !dbg !2112
  %4 = load i8*, i8** @program_name, align 8, !dbg !2113
  %5 = load i8*, i8** @program_name, align 8, !dbg !2114
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3, i8* %4, i8* %5), !dbg !2115
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.2, i64 0, i64 0)) #12, !dbg !2116
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2116
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %6), !dbg !2116
  call void @emit_mandatory_arg_note(), !dbg !2117
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([418 x i8], [418 x i8]* @.str.3, i64 0, i64 0)) #12, !dbg !2118
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2118
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %7), !dbg !2118
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([184 x i8], [184 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !2119
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2119
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %8), !dbg !2119
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([527 x i8], [527 x i8]* @.str.5, i64 0, i64 0)) #12, !dbg !2120
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2120
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %9), !dbg !2120
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0)) #12, !dbg !2121
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2121
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %10), !dbg !2121
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !2122
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2122
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %11), !dbg !2122
  call void @emit_backup_suffix_note(), !dbg !2123
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)), !dbg !2124
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %12 = load i32, i32* %status.addr, align 4, !dbg !2125
  call void @exit(i32 %12) #13, !dbg !2126
  unreachable, !dbg !2126
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #4 !dbg !2127 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.28, i64 0, i64 0)) #12, !dbg !2128
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2128
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !2128
  ret void, !dbg !2129
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_backup_suffix_note() #4 !dbg !2130 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([221 x i8], [221 x i8]* @.str.29, i64 0, i64 0)) #12, !dbg !2131
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2131
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !2131
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([222 x i8], [222 x i8]* @.str.30, i64 0, i64 0)) #12, !dbg !2132
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2132
  %call3 = call i32 @fputs_unlocked(i8* %call2, %struct._IO_FILE* %1), !dbg !2132
  ret void, !dbg !2133
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #4 !dbg !210 {
entry:
  %program.addr = alloca i8*, align 8
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !206
  %node = alloca i8*, align 8, !ctir !113
  %map_prog = alloca %struct.infomap*, align 8, !ctir !219
  %lc_messages = alloca i8*, align 8, !ctir !113
  store i8* %program, i8** %program.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !2134, metadata !DIExpression()), !dbg !2135
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !2136, metadata !DIExpression()), !dbg !2137
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !2137
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !2137
  call void @llvm.dbg.declare(metadata i8** %node, metadata !2138, metadata !DIExpression()), !dbg !2139
  %1 = load i8*, i8** %program.addr, align 8, !dbg !2140
  store i8* %1, i8** %node, align 8, !dbg !2139
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !2141, metadata !DIExpression()), !dbg !2142
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !2143, !ctir !206
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !2142
  br label %while.cond, !dbg !2144

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2145
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !2146, !ctir !207
  %3 = load i8*, i8** %program1, align 8, !dbg !2146, !ctir !113
  %tobool = icmp ne i8* %3, null, !dbg !2145
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2147

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !2148
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2148
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !2148, !ctir !207
  %6 = load i8*, i8** %program2, align 8, !dbg !2148, !ctir !113
  %call = call i32 @strcmp(i8* %4, i8* %6) #14, !dbg !2148
  %cmp = icmp eq i32 %call, 0, !dbg !2148
  %lnot = xor i1 %cmp, true, !dbg !2149
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !2150
  br i1 %7, label %while.body, label %while.end, !dbg !2144

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2151
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !2151, !ctir !207
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !2151
  br label %while.cond, !dbg !2144, !llvm.loop !2152

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2153
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !2155, !ctir !207
  %10 = load i8*, i8** %node3, align 8, !dbg !2155, !ctir !113
  %tobool4 = icmp ne i8* %10, null, !dbg !2153
  br i1 %tobool4, label %if.then, label %if.end, !dbg !2156

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2157
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !2158, !ctir !207
  %12 = load i8*, i8** %node5, align 8, !dbg !2158, !ctir !113
  store i8* %12, i8** %node, align 8, !dbg !2159
  br label %if.end, !dbg !2160

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0)) #12, !dbg !2161
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40, i64 0, i64 0)), !dbg !2162
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !2163, metadata !DIExpression()), !dbg !2164
  %call8 = call i8* @setlocale(i32 5, i8* null) #12, !dbg !2165
  store i8* %call8, i8** %lc_messages, align 8, !dbg !2164
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !2166
  %tobool9 = icmp ne i8* %13, null, !dbg !2166
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !2168

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !2169
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), i64 3) #14, !dbg !2169
  %tobool11 = icmp ne i32 %call10, 0, !dbg !2169
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !2170

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.42, i64 0, i64 0)) #12, !dbg !2171
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2171
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !2171
  br label %if.end15, !dbg !2173

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i64 0, i64 0)) #12, !dbg !2174
  %16 = load i8*, i8** %program.addr, align 8, !dbg !2175
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40, i64 0, i64 0), i8* %16), !dbg !2176
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.44, i64 0, i64 0)) #12, !dbg !2177
  %17 = load i8*, i8** %node, align 8, !dbg !2178
  %18 = load i8*, i8** %node, align 8, !dbg !2179
  %19 = load i8*, i8** %program.addr, align 8, !dbg !2180
  %cmp19 = icmp eq i8* %18, %19, !dbg !2181
  %20 = zext i1 %cmp19 to i64, !dbg !2179
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), !dbg !2179
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !2182
  ret void, !dbg !2183
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #4 !dbg !2184 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %c = alloca i32, align 4, !ctir !5
  %ok = alloca i8, align 1, !ctir !139
  %make_backups = alloca i8, align 1, !ctir !139
  %backup_suffix = alloca i8*, align 8, !ctir !113
  %version_control_string = alloca i8*, align 8, !ctir !7
  %x = alloca %struct.cp_options, align 8, !ctir !2187
  %target_directory = alloca i8*, align 8, !ctir !7
  %no_target_directory = alloca i8, align 1, !ctir !139
  %n_files = alloca i32, align 4, !ctir !5
  %file = alloca i8**, align 8, !ctir !140
  %selinux_enabled = alloca i8, align 1, !ctir !139
  %st = alloca %struct.stat, align 8, !ctir !2228
  %i = alloca i32, align 4, !ctir !5
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2249, metadata !DIExpression()), !dbg !2250
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2251, metadata !DIExpression()), !dbg !2252
  call void @llvm.dbg.declare(metadata i32* %c, metadata !2253, metadata !DIExpression()), !dbg !2254
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !2255, metadata !DIExpression()), !dbg !2256
  call void @llvm.dbg.declare(metadata i8* %make_backups, metadata !2257, metadata !DIExpression()), !dbg !2258
  store i8 0, i8* %make_backups, align 1, !dbg !2258
  call void @llvm.dbg.declare(metadata i8** %backup_suffix, metadata !2259, metadata !DIExpression()), !dbg !2260
  store i8* null, i8** %backup_suffix, align 8, !dbg !2260
  call void @llvm.dbg.declare(metadata i8** %version_control_string, metadata !2261, metadata !DIExpression()), !dbg !2262
  store i8* null, i8** %version_control_string, align 8, !dbg !2262
  call void @llvm.dbg.declare(metadata %struct.cp_options* %x, metadata !2263, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.declare(metadata i8** %target_directory, metadata !2265, metadata !DIExpression()), !dbg !2266
  store i8* null, i8** %target_directory, align 8, !dbg !2266
  call void @llvm.dbg.declare(metadata i8* %no_target_directory, metadata !2267, metadata !DIExpression()), !dbg !2268
  store i8 0, i8* %no_target_directory, align 1, !dbg !2268
  call void @llvm.dbg.declare(metadata i32* %n_files, metadata !2269, metadata !DIExpression()), !dbg !2270
  call void @llvm.dbg.declare(metadata i8*** %file, metadata !2271, metadata !DIExpression()), !dbg !2272
  call void @llvm.dbg.declare(metadata i8* %selinux_enabled, metadata !2273, metadata !DIExpression()), !dbg !2274
  store i8 0, i8* %selinux_enabled, align 1, !dbg !2274
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !2275
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !2275, !ctir !140
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !2275
  call void @set_program_name(i8* %1), !dbg !2276
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0)) #12, !dbg !2277
  %call1 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !2278
  %call2 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)) #12, !dbg !2279
  %call3 = call i32 @atexit(void ()* @close_stdin) #12, !dbg !2280
  call void @cp_option_init(%struct.cp_options* %x), !dbg !2281
  %call4 = call i32 @priv_set_remove_linkdir(), !dbg !2282
  br label %while.cond, !dbg !2283

while.cond:                                       ; preds = %sw.epilog, %entry
  %2 = load i32, i32* %argc.addr, align 4, !dbg !2284
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !2285
  %call5 = call i32 @getopt_long(i32 %2, i8** %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), %struct.option* getelementptr inbounds ([14 x %struct.option], [14 x %struct.option]* @long_options, i64 0, i64 0), i32* null) #12, !dbg !2286
  store i32 %call5, i32* %c, align 4, !dbg !2287
  %cmp = icmp ne i32 %call5, -1, !dbg !2288
  br i1 %cmp, label %while.body, label %while.end, !dbg !2283

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %c, align 4, !dbg !2289
  switch i32 %4, label %sw.default [
    i32 98, label %sw.bb
    i32 102, label %sw.bb6
    i32 105, label %sw.bb7
    i32 110, label %sw.bb9
    i32 128, label %sw.bb11
    i32 116, label %sw.bb12
    i32 84, label %sw.bb29
    i32 117, label %sw.bb30
    i32 118, label %sw.bb31
    i32 83, label %sw.bb32
    i32 90, label %sw.bb33
    i32 -130, label %sw.bb37
    i32 -131, label %sw.bb38
  ], !dbg !2291

sw.bb:                                            ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !2292
  %5 = load i8*, i8** @optarg, align 8, !dbg !2294
  %tobool = icmp ne i8* %5, null, !dbg !2294
  br i1 %tobool, label %if.then, label %if.end, !dbg !2296

if.then:                                          ; preds = %sw.bb
  %6 = load i8*, i8** @optarg, align 8, !dbg !2297
  store i8* %6, i8** %version_control_string, align 8, !dbg !2298
  br label %if.end, !dbg !2299

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !2300

sw.bb6:                                           ; preds = %while.body
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !2301, !ctir !2187
  store i32 1, i32* %interactive, align 8, !dbg !2302, !ctir !80
  br label %sw.epilog, !dbg !2303

sw.bb7:                                           ; preds = %while.body
  %interactive8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !2304, !ctir !2187
  store i32 3, i32* %interactive8, align 8, !dbg !2305, !ctir !80
  br label %sw.epilog, !dbg !2306

sw.bb9:                                           ; preds = %while.body
  %interactive10 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !2307, !ctir !2187
  store i32 2, i32* %interactive10, align 8, !dbg !2308, !ctir !80
  br label %sw.epilog, !dbg !2309

sw.bb11:                                          ; preds = %while.body
  store i8 1, i8* @remove_trailing_slashes, align 1, !dbg !2310
  br label %sw.epilog, !dbg !2311

sw.bb12:                                          ; preds = %while.body
  %7 = load i8*, i8** %target_directory, align 8, !dbg !2312
  %tobool13 = icmp ne i8* %7, null, !dbg !2312
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !2314

if.then14:                                        ; preds = %sw.bb12
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0)) #12, !dbg !2315
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call15), !dbg !2315
  unreachable, !dbg !2315

if.else:                                          ; preds = %sw.bb12
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !2316, metadata !DIExpression()), !dbg !2318
  %8 = load i8*, i8** @optarg, align 8, !dbg !2319
  %call16 = call i32 @stat(i8* %8, %struct.stat* %st) #12, !dbg !2321
  %cmp17 = icmp ne i32 %call16, 0, !dbg !2322
  br i1 %cmp17, label %if.then18, label %if.end22, !dbg !2323

if.then18:                                        ; preds = %if.else
  %call19 = call i32* @__errno_location() #15, !dbg !2324
  %9 = load i32, i32* %call19, align 4, !dbg !2324, !ctir !5
  %call20 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #12, !dbg !2324
  %10 = load i8*, i8** @optarg, align 8, !dbg !2324
  %call21 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !2324
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %9, i8* %call20, i8* %call21), !dbg !2324
  unreachable, !dbg !2324

if.end22:                                         ; preds = %if.else
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !2325, !ctir !2228
  %11 = load i32, i32* %st_mode, align 8, !dbg !2325, !ctir !165
  %and = and i32 %11, 61440, !dbg !2325
  %cmp23 = icmp eq i32 %and, 16384, !dbg !2325
  br i1 %cmp23, label %if.end27, label %if.then24, !dbg !2327

if.then24:                                        ; preds = %if.end22
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !2328
  %12 = load i8*, i8** @optarg, align 8, !dbg !2328
  %call26 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !2328
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call25, i8* %call26), !dbg !2328
  unreachable, !dbg !2328

if.end27:                                         ; preds = %if.end22
  br label %if.end28

if.end28:                                         ; preds = %if.end27
  %13 = load i8*, i8** @optarg, align 8, !dbg !2329
  store i8* %13, i8** %target_directory, align 8, !dbg !2330
  br label %sw.epilog, !dbg !2331

sw.bb29:                                          ; preds = %while.body
  store i8 1, i8* %no_target_directory, align 1, !dbg !2332
  br label %sw.epilog, !dbg !2333

sw.bb30:                                          ; preds = %while.body
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 30, !dbg !2334, !ctir !2187
  store i8 1, i8* %update, align 1, !dbg !2335, !ctir !139
  br label %sw.epilog, !dbg !2336

sw.bb31:                                          ; preds = %while.body
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 31, !dbg !2337, !ctir !2187
  store i8 1, i8* %verbose, align 2, !dbg !2338, !ctir !139
  br label %sw.epilog, !dbg !2339

sw.bb32:                                          ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !2340
  %14 = load i8*, i8** @optarg, align 8, !dbg !2341
  store i8* %14, i8** %backup_suffix, align 8, !dbg !2342
  br label %sw.epilog, !dbg !2343

sw.bb33:                                          ; preds = %while.body
  %15 = load i8, i8* %selinux_enabled, align 1, !dbg !2344
  %tobool34 = trunc i8 %15 to i1, !dbg !2344
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !2346

if.then35:                                        ; preds = %sw.bb33
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !2347, !ctir !2187
  store i8 0, i8* %preserve_security_context, align 1, !dbg !2349, !ctir !139
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !2350, !ctir !2187
  store i8 1, i8* %set_security_context, align 1, !dbg !2351, !ctir !139
  br label %if.end36, !dbg !2352

if.end36:                                         ; preds = %if.then35, %sw.bb33
  br label %sw.epilog, !dbg !2353

sw.bb37:                                          ; preds = %while.body
  call void @usage(i32 0) #16, !dbg !2354
  unreachable, !dbg !2354

sw.bb38:                                          ; preds = %while.body
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2355
  %17 = load i8*, i8** @Version, align 8, !dbg !2355
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i8* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8* null), !dbg !2355
  call void @exit(i32 0) #13, !dbg !2355
  unreachable, !dbg !2355

sw.default:                                       ; preds = %while.body
  call void @usage(i32 1) #16, !dbg !2356
  unreachable, !dbg !2356

sw.epilog:                                        ; preds = %if.end36, %sw.bb32, %sw.bb31, %sw.bb30, %sw.bb29, %if.end28, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb6, %if.end
  br label %while.cond, !dbg !2283, !llvm.loop !2357

while.end:                                        ; preds = %while.cond
  %18 = load i32, i32* %argc.addr, align 4, !dbg !2359
  %19 = load i32, i32* @optind, align 4, !dbg !2360
  %sub = sub nsw i32 %18, %19, !dbg !2361
  store i32 %sub, i32* %n_files, align 4, !dbg !2362
  %20 = load i8**, i8*** %argv.addr, align 8, !dbg !2363
  %21 = load i32, i32* @optind, align 4, !dbg !2364
  %idx.ext = sext i32 %21 to i64, !dbg !2365
  %add.ptr = getelementptr inbounds i8*, i8** %20, i64 %idx.ext, !dbg !2365, !ctir !7
  store i8** %add.ptr, i8*** %file, align 8, !dbg !2366
  %22 = load i32, i32* %n_files, align 4, !dbg !2367
  %23 = load i8*, i8** %target_directory, align 8, !dbg !2369
  %tobool39 = icmp ne i8* %23, null, !dbg !2370
  %lnot = xor i1 %tobool39, true, !dbg !2370
  %lnot.ext = zext i1 %lnot to i32, !dbg !2370
  %cmp40 = icmp sle i32 %22, %lnot.ext, !dbg !2371
  br i1 %cmp40, label %if.then41, label %if.end50, !dbg !2372

if.then41:                                        ; preds = %while.end
  %24 = load i32, i32* %n_files, align 4, !dbg !2373
  %cmp42 = icmp sle i32 %24, 0, !dbg !2376
  br i1 %cmp42, label %if.then43, label %if.else45, !dbg !2377

if.then43:                                        ; preds = %if.then41
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)) #12, !dbg !2378
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call44), !dbg !2379
  br label %if.end49, !dbg !2379

if.else45:                                        ; preds = %if.then41
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0)) #12, !dbg !2380
  %25 = load i8**, i8*** %file, align 8, !dbg !2381
  %arrayidx47 = getelementptr inbounds i8*, i8** %25, i64 0, !dbg !2381, !ctir !140
  %26 = load i8*, i8** %arrayidx47, align 8, !dbg !2381
  %call48 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !2381
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call46, i8* %call48), !dbg !2382
  br label %if.end49

if.end49:                                         ; preds = %if.else45, %if.then43
  call void @usage(i32 1) #16, !dbg !2383
  unreachable, !dbg !2383

if.end50:                                         ; preds = %while.end
  %27 = load i8, i8* %no_target_directory, align 1, !dbg !2384
  %tobool51 = trunc i8 %27 to i1, !dbg !2384
  br i1 %tobool51, label %if.then52, label %if.else63, !dbg !2386

if.then52:                                        ; preds = %if.end50
  %28 = load i8*, i8** %target_directory, align 8, !dbg !2387
  %tobool53 = icmp ne i8* %28, null, !dbg !2387
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !2390

if.then54:                                        ; preds = %if.then52
  %call55 = call i8* @gettext(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0)) #12, !dbg !2391
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call55), !dbg !2391
  unreachable, !dbg !2391

if.end56:                                         ; preds = %if.then52
  %29 = load i32, i32* %n_files, align 4, !dbg !2392
  %cmp57 = icmp slt i32 2, %29, !dbg !2394
  br i1 %cmp57, label %if.then58, label %if.end62, !dbg !2395

if.then58:                                        ; preds = %if.end56
  %call59 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0)) #12, !dbg !2396
  %30 = load i8**, i8*** %file, align 8, !dbg !2398
  %arrayidx60 = getelementptr inbounds i8*, i8** %30, i64 2, !dbg !2398, !ctir !140
  %31 = load i8*, i8** %arrayidx60, align 8, !dbg !2398
  %call61 = call i8* @quotearg_style(i32 4, i8* %31), !dbg !2398
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call59, i8* %call61), !dbg !2399
  call void @usage(i32 1) #16, !dbg !2400
  unreachable, !dbg !2400

if.end62:                                         ; preds = %if.end56
  br label %if.end98, !dbg !2401

if.else63:                                        ; preds = %if.end50
  %32 = load i8*, i8** %target_directory, align 8, !dbg !2402
  %tobool64 = icmp ne i8* %32, null, !dbg !2402
  br i1 %tobool64, label %if.end97, label %if.then65, !dbg !2404

if.then65:                                        ; preds = %if.else63
  %33 = load i32, i32* %n_files, align 4, !dbg !2405
  %cmp66 = icmp sle i32 2, %33, !dbg !2405
  br i1 %cmp66, label %cond.true, label %cond.false, !dbg !2405

cond.true:                                        ; preds = %if.then65
  br label %cond.end, !dbg !2405

cond.false:                                       ; preds = %if.then65
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i32 457, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #13, !dbg !2405
  unreachable, !dbg !2405

34:                                               ; No predecessors!
  br label %cond.end, !dbg !2405

cond.end:                                         ; preds = %34, %cond.true
  %35 = load i32, i32* %n_files, align 4, !dbg !2407
  %cmp67 = icmp eq i32 %35, 2, !dbg !2409
  br i1 %cmp67, label %if.then68, label %if.end77, !dbg !2410

if.then68:                                        ; preds = %cond.end
  %36 = load i8**, i8*** %file, align 8, !dbg !2411
  %arrayidx69 = getelementptr inbounds i8*, i8** %36, i64 0, !dbg !2411, !ctir !140
  %37 = load i8*, i8** %arrayidx69, align 8, !dbg !2411
  %38 = load i8**, i8*** %file, align 8, !dbg !2412
  %arrayidx70 = getelementptr inbounds i8*, i8** %38, i64 1, !dbg !2412, !ctir !140
  %39 = load i8*, i8** %arrayidx70, align 8, !dbg !2412
  %call71 = call i32 @renameatu(i32 -100, i8* %37, i32 -100, i8* %39, i32 1), !dbg !2413
  %tobool72 = icmp ne i32 %call71, 0, !dbg !2413
  br i1 %tobool72, label %cond.true73, label %cond.false75, !dbg !2413

cond.true73:                                      ; preds = %if.then68
  %call74 = call i32* @__errno_location() #15, !dbg !2414
  %40 = load i32, i32* %call74, align 4, !dbg !2414, !ctir !5
  br label %cond.end76, !dbg !2413

cond.false75:                                     ; preds = %if.then68
  br label %cond.end76, !dbg !2413

cond.end76:                                       ; preds = %cond.false75, %cond.true73
  %cond = phi i32 [ %40, %cond.true73 ], [ 0, %cond.false75 ], !dbg !2413
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !2415, !ctir !2187
  store i32 %cond, i32* %rename_errno, align 4, !dbg !2416, !ctir !5
  br label %if.end77, !dbg !2417

if.end77:                                         ; preds = %cond.end76, %cond.end
  %rename_errno78 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !2418, !ctir !2187
  %41 = load i32, i32* %rename_errno78, align 4, !dbg !2418, !ctir !5
  %cmp79 = icmp ne i32 %41, 0, !dbg !2420
  br i1 %cmp79, label %land.lhs.true, label %if.else87, !dbg !2421

land.lhs.true:                                    ; preds = %if.end77
  %42 = load i8**, i8*** %file, align 8, !dbg !2422
  %43 = load i32, i32* %n_files, align 4, !dbg !2423
  %sub80 = sub nsw i32 %43, 1, !dbg !2424
  %idxprom = sext i32 %sub80 to i64, !dbg !2422
  %arrayidx81 = getelementptr inbounds i8*, i8** %42, i64 %idxprom, !dbg !2422, !ctir !140
  %44 = load i8*, i8** %arrayidx81, align 8, !dbg !2422
  %call82 = call zeroext i1 @target_directory_operand(i8* %44), !dbg !2425
  br i1 %call82, label %if.then83, label %if.else87, !dbg !2426

if.then83:                                        ; preds = %land.lhs.true
  %rename_errno84 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !2427, !ctir !2187
  store i32 -1, i32* %rename_errno84, align 4, !dbg !2429, !ctir !5
  %45 = load i8**, i8*** %file, align 8, !dbg !2430
  %46 = load i32, i32* %n_files, align 4, !dbg !2431
  %dec = add nsw i32 %46, -1, !dbg !2431
  store i32 %dec, i32* %n_files, align 4, !dbg !2431
  %idxprom85 = sext i32 %dec to i64, !dbg !2430
  %arrayidx86 = getelementptr inbounds i8*, i8** %45, i64 %idxprom85, !dbg !2430, !ctir !140
  %47 = load i8*, i8** %arrayidx86, align 8, !dbg !2430
  store i8* %47, i8** %target_directory, align 8, !dbg !2432
  br label %if.end96, !dbg !2433

if.else87:                                        ; preds = %land.lhs.true, %if.end77
  %48 = load i32, i32* %n_files, align 4, !dbg !2434
  %cmp88 = icmp slt i32 2, %48, !dbg !2436
  br i1 %cmp88, label %if.then89, label %if.end95, !dbg !2437

if.then89:                                        ; preds = %if.else87
  %call90 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !2438
  %49 = load i8**, i8*** %file, align 8, !dbg !2438
  %50 = load i32, i32* %n_files, align 4, !dbg !2438
  %sub91 = sub nsw i32 %50, 1, !dbg !2438
  %idxprom92 = sext i32 %sub91 to i64, !dbg !2438
  %arrayidx93 = getelementptr inbounds i8*, i8** %49, i64 %idxprom92, !dbg !2438, !ctir !140
  %51 = load i8*, i8** %arrayidx93, align 8, !dbg !2438
  %call94 = call i8* @quotearg_style(i32 4, i8* %51), !dbg !2438
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call90, i8* %call94), !dbg !2438
  unreachable, !dbg !2438

if.end95:                                         ; preds = %if.else87
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then83
  br label %if.end97, !dbg !2439

if.end97:                                         ; preds = %if.end96, %if.else63
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end62
  %interactive99 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !2440, !ctir !2187
  %52 = load i32, i32* %interactive99, align 8, !dbg !2440, !ctir !80
  %cmp100 = icmp eq i32 %52, 2, !dbg !2442
  br i1 %cmp100, label %if.then101, label %if.end103, !dbg !2443

if.then101:                                       ; preds = %if.end98
  %update102 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 30, !dbg !2444, !ctir !2187
  store i8 0, i8* %update102, align 1, !dbg !2445, !ctir !139
  br label %if.end103, !dbg !2446

if.end103:                                        ; preds = %if.then101, %if.end98
  %53 = load i8, i8* %make_backups, align 1, !dbg !2447
  %tobool104 = trunc i8 %53 to i1, !dbg !2447
  br i1 %tobool104, label %land.lhs.true105, label %if.end110, !dbg !2449

land.lhs.true105:                                 ; preds = %if.end103
  %interactive106 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !2450, !ctir !2187
  %54 = load i32, i32* %interactive106, align 8, !dbg !2450, !ctir !80
  %cmp107 = icmp eq i32 %54, 2, !dbg !2451
  br i1 %cmp107, label %if.then108, label %if.end110, !dbg !2452

if.then108:                                       ; preds = %land.lhs.true105
  %call109 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.26, i64 0, i64 0)) #12, !dbg !2453
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call109), !dbg !2455
  call void @usage(i32 1) #16, !dbg !2456
  unreachable, !dbg !2456

if.end110:                                        ; preds = %land.lhs.true105, %if.end103
  %55 = load i8, i8* %make_backups, align 1, !dbg !2457
  %tobool111 = trunc i8 %55 to i1, !dbg !2457
  br i1 %tobool111, label %cond.true112, label %cond.false115, !dbg !2457

cond.true112:                                     ; preds = %if.end110
  %call113 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0)) #12, !dbg !2458
  %56 = load i8*, i8** %version_control_string, align 8, !dbg !2459
  %call114 = call i32 @xget_version(i8* %call113, i8* %56), !dbg !2460
  br label %cond.end116, !dbg !2457

cond.false115:                                    ; preds = %if.end110
  br label %cond.end116, !dbg !2457

cond.end116:                                      ; preds = %cond.false115, %cond.true112
  %cond117 = phi i32 [ %call114, %cond.true112 ], [ 0, %cond.false115 ], !dbg !2457
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 0, !dbg !2461, !ctir !2187
  store i32 %cond117, i32* %backup_type, align 8, !dbg !2462, !ctir !65
  %57 = load i8*, i8** %backup_suffix, align 8, !dbg !2463
  call void @set_simple_backup_suffix(i8* %57), !dbg !2464
  call void @hash_init(), !dbg !2465
  %58 = load i8*, i8** %target_directory, align 8, !dbg !2466
  %tobool118 = icmp ne i8* %58, null, !dbg !2466
  br i1 %tobool118, label %if.then119, label %if.else133, !dbg !2468

if.then119:                                       ; preds = %cond.end116
  %59 = load i32, i32* %n_files, align 4, !dbg !2469
  %cmp120 = icmp sle i32 2, %59, !dbg !2472
  br i1 %cmp120, label %if.then121, label %if.end122, !dbg !2473

if.then121:                                       ; preds = %if.then119
  call void @dest_info_init(%struct.cp_options* %x), !dbg !2474
  br label %if.end122, !dbg !2474

if.end122:                                        ; preds = %if.then121, %if.then119
  store i8 1, i8* %ok, align 1, !dbg !2475
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2476, metadata !DIExpression()), !dbg !2478
  store i32 0, i32* %i, align 4, !dbg !2478
  br label %for.cond, !dbg !2479

for.cond:                                         ; preds = %for.inc, %if.end122
  %60 = load i32, i32* %i, align 4, !dbg !2480
  %61 = load i32, i32* %n_files, align 4, !dbg !2482
  %cmp123 = icmp slt i32 %60, %61, !dbg !2483
  br i1 %cmp123, label %for.body, label %for.end, !dbg !2484

for.body:                                         ; preds = %for.cond
  %62 = load i32, i32* %i, align 4, !dbg !2485
  %add = add nsw i32 %62, 1, !dbg !2487
  %63 = load i32, i32* %n_files, align 4, !dbg !2488
  %cmp124 = icmp eq i32 %add, %63, !dbg !2489
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 34, !dbg !2490, !ctir !2187
  %frombool = zext i1 %cmp124 to i8, !dbg !2491
  store i8 %frombool, i8* %last_file, align 1, !dbg !2491, !ctir !139
  %64 = load i8**, i8*** %file, align 8, !dbg !2492
  %65 = load i32, i32* %i, align 4, !dbg !2493
  %idxprom125 = sext i32 %65 to i64, !dbg !2492
  %arrayidx126 = getelementptr inbounds i8*, i8** %64, i64 %idxprom125, !dbg !2492, !ctir !140
  %66 = load i8*, i8** %arrayidx126, align 8, !dbg !2492
  %67 = load i8*, i8** %target_directory, align 8, !dbg !2494
  %call127 = call zeroext i1 @movefile(i8* %66, i8* %67, i1 zeroext true, %struct.cp_options* %x), !dbg !2495
  %conv = zext i1 %call127 to i32, !dbg !2495
  %68 = load i8, i8* %ok, align 1, !dbg !2496
  %tobool128 = trunc i8 %68 to i1, !dbg !2496
  %conv129 = zext i1 %tobool128 to i32, !dbg !2496
  %and130 = and i32 %conv129, %conv, !dbg !2496
  %tobool131 = icmp ne i32 %and130, 0, !dbg !2496
  %frombool132 = zext i1 %tobool131 to i8, !dbg !2496
  store i8 %frombool132, i8* %ok, align 1, !dbg !2496
  br label %for.inc, !dbg !2497

for.inc:                                          ; preds = %for.body
  %69 = load i32, i32* %i, align 4, !dbg !2498
  %inc = add nsw i32 %69, 1, !dbg !2498
  store i32 %inc, i32* %i, align 4, !dbg !2498
  br label %for.cond, !dbg !2499, !llvm.loop !2500

for.end:                                          ; preds = %for.cond
  br label %if.end139, !dbg !2502

if.else133:                                       ; preds = %cond.end116
  %last_file134 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 34, !dbg !2503, !ctir !2187
  store i8 1, i8* %last_file134, align 1, !dbg !2505, !ctir !139
  %70 = load i8**, i8*** %file, align 8, !dbg !2506
  %arrayidx135 = getelementptr inbounds i8*, i8** %70, i64 0, !dbg !2506, !ctir !140
  %71 = load i8*, i8** %arrayidx135, align 8, !dbg !2506
  %72 = load i8**, i8*** %file, align 8, !dbg !2507
  %arrayidx136 = getelementptr inbounds i8*, i8** %72, i64 1, !dbg !2507, !ctir !140
  %73 = load i8*, i8** %arrayidx136, align 8, !dbg !2507
  %call137 = call zeroext i1 @movefile(i8* %71, i8* %73, i1 zeroext false, %struct.cp_options* %x), !dbg !2508
  %frombool138 = zext i1 %call137 to i8, !dbg !2509
  store i8 %frombool138, i8* %ok, align 1, !dbg !2509
  br label %if.end139

if.end139:                                        ; preds = %if.else133, %for.end
  %74 = load i8, i8* %ok, align 1, !dbg !2510
  %tobool140 = trunc i8 %74 to i1, !dbg !2510
  %75 = zext i1 %tobool140 to i64, !dbg !2510
  %cond142 = select i1 %tobool140, i32 0, i32 1, !dbg !2510
  ret i32 %cond142, !dbg !2511
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cp_option_init(%struct.cp_options* %x) #4 !dbg !2512 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %selinux_enabled = alloca i8, align 1, !ctir !139
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2516, metadata !DIExpression()), !dbg !2517
  call void @llvm.dbg.declare(metadata i8* %selinux_enabled, metadata !2518, metadata !DIExpression()), !dbg !2519
  store i8 0, i8* %selinux_enabled, align 1, !dbg !2519
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2520
  call void @cp_options_default(%struct.cp_options* %0), !dbg !2521
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2522
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 5, !dbg !2523, !ctir !2187
  store i8 0, i8* %copy_as_regular, align 4, !dbg !2524, !ctir !139
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2525
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 36, !dbg !2526, !ctir !2187
  store i32 1, i32* %reflink_mode, align 8, !dbg !2527, !ctir !92
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2528
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 1, !dbg !2529, !ctir !2187
  store i32 2, i32* %dereference, align 4, !dbg !2530, !ctir !73
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2531
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 6, !dbg !2532, !ctir !2187
  store i8 0, i8* %unlink_dest_before_opening, align 1, !dbg !2533, !ctir !139
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2534
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 7, !dbg !2535, !ctir !2187
  store i8 0, i8* %unlink_dest_after_failed_open, align 2, !dbg !2536, !ctir !139
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2537
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 8, !dbg !2538, !ctir !2187
  store i8 0, i8* %hard_link, align 1, !dbg !2539, !ctir !139
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2540
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 2, !dbg !2541, !ctir !2187
  store i32 4, i32* %interactive, align 8, !dbg !2542, !ctir !80
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2543
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 9, !dbg !2544, !ctir !2187
  store i8 1, i8* %move_mode, align 8, !dbg !2545, !ctir !139
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2546
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 10, !dbg !2547, !ctir !2187
  store i8 0, i8* %install_mode, align 1, !dbg !2548, !ctir !139
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2549
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 13, !dbg !2550, !ctir !2187
  store i8 0, i8* %one_file_system, align 4, !dbg !2551, !ctir !139
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2552
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 14, !dbg !2553, !ctir !2187
  store i8 1, i8* %preserve_ownership, align 1, !dbg !2554, !ctir !139
  %12 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2555
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 19, !dbg !2556, !ctir !2187
  store i8 1, i8* %preserve_links, align 2, !dbg !2557, !ctir !139
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2558
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !2559, !ctir !2187
  store i8 1, i8* %preserve_mode, align 2, !dbg !2560, !ctir !139
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2561
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 16, !dbg !2562, !ctir !2187
  store i8 1, i8* %preserve_timestamps, align 1, !dbg !2563, !ctir !139
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2564
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 17, !dbg !2565, !ctir !2187
  store i8 0, i8* %explicit_no_preserve_mode, align 8, !dbg !2566, !ctir !139
  %16 = load i8, i8* %selinux_enabled, align 1, !dbg !2567
  %tobool = trunc i8 %16 to i1, !dbg !2567
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2568
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 22, !dbg !2569, !ctir !2187
  %frombool = zext i1 %tobool to i8, !dbg !2570
  store i8 %frombool, i8* %preserve_security_context, align 1, !dbg !2570, !ctir !139
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2571
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 18, !dbg !2572, !ctir !2187
  store i8 0, i8* %set_security_context, align 1, !dbg !2573, !ctir !139
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2574
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 26, !dbg !2575, !ctir !2187
  store i8 0, i8* %reduce_diagnostics, align 1, !dbg !2576, !ctir !139
  %20 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2577
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %20, i32 0, i32 20, !dbg !2578, !ctir !2187
  store i8 1, i8* %data_copy_required, align 1, !dbg !2579, !ctir !139
  %21 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2580
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 21, !dbg !2581, !ctir !2187
  store i8 0, i8* %require_preserve, align 4, !dbg !2582, !ctir !139
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2583
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 23, !dbg !2584, !ctir !2187
  store i8 0, i8* %require_preserve_context, align 2, !dbg !2585, !ctir !139
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2586
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 24, !dbg !2587, !ctir !2187
  store i8 1, i8* %preserve_xattr, align 1, !dbg !2588, !ctir !139
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2589
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 25, !dbg !2590, !ctir !2187
  store i8 0, i8* %require_preserve_xattr, align 8, !dbg !2591, !ctir !139
  %25 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2592
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %25, i32 0, i32 27, !dbg !2593, !ctir !2187
  store i8 1, i8* %recursive, align 2, !dbg !2594, !ctir !139
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2595
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 3, !dbg !2596, !ctir !2187
  store i32 2, i32* %sparse_mode, align 4, !dbg !2597, !ctir !86
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2598
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 29, !dbg !2599, !ctir !2187
  store i8 0, i8* %symbolic_link, align 4, !dbg !2600, !ctir !139
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2601
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 28, !dbg !2602, !ctir !2187
  store i8 0, i8* %set_mode, align 1, !dbg !2603, !ctir !139
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2604
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 4, !dbg !2605, !ctir !2187
  store i32 0, i32* %mode, align 8, !dbg !2606, !ctir !236
  %call = call i32 @isatty(i32 0) #12, !dbg !2607
  %tobool1 = icmp ne i32 %call, 0, !dbg !2607
  %30 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2608
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 32, !dbg !2609, !ctir !2187
  %frombool2 = zext i1 %tobool1 to i8, !dbg !2610
  store i8 %frombool2, i8* %stdin_tty, align 1, !dbg !2610, !ctir !139
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2611
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 33, !dbg !2612, !ctir !2187
  store i8 0, i8* %open_dangling_dest_symlink, align 8, !dbg !2613, !ctir !139
  %32 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2614
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 30, !dbg !2615, !ctir !2187
  store i8 0, i8* %update, align 1, !dbg !2616, !ctir !139
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2617
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 31, !dbg !2618, !ctir !2187
  store i8 0, i8* %verbose, align 2, !dbg !2619, !ctir !139
  %34 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2620
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %34, i32 0, i32 37, !dbg !2621, !ctir !2187
  store %struct.hash_table* null, %struct.hash_table** %dest_info, align 8, !dbg !2622, !ctir !238
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2623
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 38, !dbg !2624, !ctir !2187
  store %struct.hash_table* null, %struct.hash_table** %src_info, align 8, !dbg !2625, !ctir !238
  ret void, !dbg !2626
}

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @target_directory_operand(i8* %file) #4 !dbg !2627 {
entry:
  %file.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !2228
  %err = alloca i32, align 4, !ctir !5
  %is_a_dir = alloca i8, align 1, !ctir !139
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !2630, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !2632, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2634, metadata !DIExpression()), !dbg !2635
  %0 = load i8*, i8** %file.addr, align 8, !dbg !2636
  %call = call i32 @stat(i8* %0, %struct.stat* %st) #12, !dbg !2637
  %cmp = icmp eq i32 %call, 0, !dbg !2638
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2637

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !2637

cond.false:                                       ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !2639
  %1 = load i32, i32* %call1, align 4, !dbg !2639, !ctir !5
  br label %cond.end, !dbg !2637

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %1, %cond.false ], !dbg !2637
  store i32 %cond, i32* %err, align 4, !dbg !2635
  call void @llvm.dbg.declare(metadata i8* %is_a_dir, metadata !2640, metadata !DIExpression()), !dbg !2641
  %2 = load i32, i32* %err, align 4, !dbg !2642
  %tobool = icmp ne i32 %2, 0, !dbg !2642
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !2643

land.rhs:                                         ; preds = %cond.end
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !2644, !ctir !2228
  %3 = load i32, i32* %st_mode, align 8, !dbg !2644, !ctir !165
  %and = and i32 %3, 61440, !dbg !2644
  %cmp2 = icmp eq i32 %and, 16384, !dbg !2644
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %4 = phi i1 [ false, %cond.end ], [ %cmp2, %land.rhs ], !dbg !2645
  %frombool = zext i1 %4 to i8, !dbg !2641
  store i8 %frombool, i8* %is_a_dir, align 1, !dbg !2641
  %5 = load i32, i32* %err, align 4, !dbg !2646
  %tobool3 = icmp ne i32 %5, 0, !dbg !2646
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !2648

land.lhs.true:                                    ; preds = %land.end
  %6 = load i32, i32* %err, align 4, !dbg !2649
  %cmp4 = icmp ne i32 %6, 2, !dbg !2650
  br i1 %cmp4, label %if.then, label %if.end, !dbg !2651

if.then:                                          ; preds = %land.lhs.true
  %7 = load i32, i32* %err, align 4, !dbg !2652
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #12, !dbg !2652
  %8 = load i8*, i8** %file.addr, align 8, !dbg !2652
  %call6 = call i8* @quotearg_style(i32 4, i8* %8), !dbg !2652
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %7, i8* %call5, i8* %call6), !dbg !2652
  unreachable, !dbg !2652

if.end:                                           ; preds = %land.lhs.true, %land.end
  %9 = load i8, i8* %is_a_dir, align 1, !dbg !2653
  %tobool7 = trunc i8 %9 to i1, !dbg !2653
  ret i1 %tobool7, !dbg !2654
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @movefile(i8* %source, i8* %dest, i1 zeroext %dest_is_dir, %struct.cp_options* %x) #4 !dbg !2655 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %dest_is_dir.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %ok = alloca i8, align 1, !ctir !139
  %src_basename = alloca i8*, align 8, !ctir !113
  %new_dest = alloca i8*, align 8, !ctir !7
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !2660, metadata !DIExpression()), !dbg !2661
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !2662, metadata !DIExpression()), !dbg !2663
  %frombool = zext i1 %dest_is_dir to i8
  store i8 %frombool, i8* %dest_is_dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dest_is_dir.addr, metadata !2664, metadata !DIExpression()), !dbg !2665
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2666, metadata !DIExpression()), !dbg !2667
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !2668, metadata !DIExpression()), !dbg !2669
  %0 = load i8, i8* @remove_trailing_slashes, align 1, !dbg !2670
  %tobool = trunc i8 %0 to i1, !dbg !2670
  br i1 %tobool, label %if.then, label %if.end, !dbg !2672

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %source.addr, align 8, !dbg !2673
  %call = call zeroext i1 @strip_trailing_slashes(i8* %1), !dbg !2674
  br label %if.end, !dbg !2674

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* %dest_is_dir.addr, align 1, !dbg !2675
  %tobool1 = trunc i8 %2 to i1, !dbg !2675
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !2677

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %src_basename, metadata !2678, metadata !DIExpression()), !dbg !2680
  %3 = load i8*, i8** %source.addr, align 8, !dbg !2681
  %call3 = call i8* @last_component(i8* %3) #14, !dbg !2682
  store i8* %call3, i8** %src_basename, align 8, !dbg !2680
  call void @llvm.dbg.declare(metadata i8** %new_dest, metadata !2683, metadata !DIExpression()), !dbg !2684
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !2685
  %5 = load i8*, i8** %src_basename, align 8, !dbg !2686
  %call4 = call i8* @file_name_concat(i8* %4, i8* %5, i8** null), !dbg !2687
  store i8* %call4, i8** %new_dest, align 8, !dbg !2684
  %6 = load i8*, i8** %new_dest, align 8, !dbg !2688
  %call5 = call zeroext i1 @strip_trailing_slashes(i8* %6), !dbg !2689
  %7 = load i8*, i8** %source.addr, align 8, !dbg !2690
  %8 = load i8*, i8** %new_dest, align 8, !dbg !2691
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2692
  %call6 = call zeroext i1 @do_move(i8* %7, i8* %8, %struct.cp_options* %9), !dbg !2693
  %frombool7 = zext i1 %call6 to i8, !dbg !2694
  store i8 %frombool7, i8* %ok, align 1, !dbg !2694
  %10 = load i8*, i8** %new_dest, align 8, !dbg !2695
  call void @free(i8* %10) #12, !dbg !2696
  br label %if.end10, !dbg !2697

if.else:                                          ; preds = %if.end
  %11 = load i8*, i8** %source.addr, align 8, !dbg !2698
  %12 = load i8*, i8** %dest.addr, align 8, !dbg !2700
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2701
  %call8 = call zeroext i1 @do_move(i8* %11, i8* %12, %struct.cp_options* %13), !dbg !2702
  %frombool9 = zext i1 %call8 to i8, !dbg !2703
  store i8 %frombool9, i8* %ok, align 1, !dbg !2703
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then2
  %14 = load i8, i8* %ok, align 1, !dbg !2704
  %tobool11 = trunc i8 %14 to i1, !dbg !2704
  ret i1 %tobool11, !dbg !2705
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @do_move(i8* %source, i8* %dest, %struct.cp_options* %x) #4 !dbg !2706 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %copy_into_self = alloca i8, align 1, !ctir !139
  %rename_succeeded = alloca i8, align 1, !ctir !139
  %ok = alloca i8, align 1, !ctir !139
  %dir_to_remove = alloca i8*, align 8, !ctir !113
  %rm_options = alloca %struct.rm_options, align 8, !ctir !274
  %status = alloca i32, align 4, !ctir !103
  %dir = alloca [2 x i8*], align 16, !ctir !242
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !2709, metadata !DIExpression()), !dbg !2710
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !2711, metadata !DIExpression()), !dbg !2712
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata i8* %copy_into_self, metadata !2715, metadata !DIExpression()), !dbg !2716
  call void @llvm.dbg.declare(metadata i8* %rename_succeeded, metadata !2717, metadata !DIExpression()), !dbg !2718
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !2719, metadata !DIExpression()), !dbg !2720
  %0 = load i8*, i8** %source.addr, align 8, !dbg !2721
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !2722
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2723
  %call = call zeroext i1 @copy(i8* %0, i8* %1, i1 zeroext false, %struct.cp_options* %2, i8* %copy_into_self, i8* %rename_succeeded), !dbg !2724
  %frombool = zext i1 %call to i8, !dbg !2720
  store i8 %frombool, i8* %ok, align 1, !dbg !2720
  %3 = load i8, i8* %ok, align 1, !dbg !2725
  %tobool = trunc i8 %3 to i1, !dbg !2725
  br i1 %tobool, label %if.then, label %if.end21, !dbg !2727

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %dir_to_remove, metadata !2728, metadata !DIExpression()), !dbg !2730
  %4 = load i8, i8* %copy_into_self, align 1, !dbg !2731
  %tobool1 = trunc i8 %4 to i1, !dbg !2731
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !2733

if.then2:                                         ; preds = %if.then
  store i8* null, i8** %dir_to_remove, align 8, !dbg !2734
  store i8 0, i8* %ok, align 1, !dbg !2736
  br label %if.end6, !dbg !2737

if.else:                                          ; preds = %if.then
  %5 = load i8, i8* %rename_succeeded, align 1, !dbg !2738
  %tobool3 = trunc i8 %5 to i1, !dbg !2738
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !2740

if.then4:                                         ; preds = %if.else
  store i8* null, i8** %dir_to_remove, align 8, !dbg !2741
  br label %if.end, !dbg !2743

if.else5:                                         ; preds = %if.else
  %6 = load i8*, i8** %source.addr, align 8, !dbg !2744
  store i8* %6, i8** %dir_to_remove, align 8, !dbg !2746
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then4
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then2
  %7 = load i8*, i8** %dir_to_remove, align 8, !dbg !2747
  %cmp = icmp ne i8* %7, null, !dbg !2749
  br i1 %cmp, label %if.then7, label %if.end20, !dbg !2750

if.then7:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.rm_options* %rm_options, metadata !2751, metadata !DIExpression()), !dbg !2753
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2754, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.declare(metadata [2 x i8*]* %dir, metadata !2756, metadata !DIExpression()), !dbg !2757
  call void @rm_option_init(%struct.rm_options* %rm_options), !dbg !2758
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2759
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 31, !dbg !2760, !ctir !2659
  %9 = load i8, i8* %verbose, align 2, !dbg !2760
  %tobool8 = trunc i8 %9 to i1, !dbg !2760, !ctir !139
  %verbose9 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %rm_options, i32 0, i32 8, !dbg !2761, !ctir !274
  %frombool10 = zext i1 %tobool8 to i8, !dbg !2762
  store i8 %frombool10, i8* %verbose9, align 2, !dbg !2762, !ctir !139
  %10 = load i8*, i8** %dir_to_remove, align 8, !dbg !2763
  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 0, !dbg !2764, !ctir !242
  store i8* %10, i8** %arrayidx, align 16, !dbg !2765
  %arrayidx11 = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 1, !dbg !2766, !ctir !242
  store i8* null, i8** %arrayidx11, align 8, !dbg !2767
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 0, !dbg !2768, !ctir !242
  %11 = bitcast i8** %arraydecay to i8*, !dbg !2769
  %12 = bitcast i8* %11 to i8**, !dbg !2769
  %call12 = call i32 @rm(i8** %12, %struct.rm_options* %rm_options), !dbg !2770
  store i32 %call12, i32* %status, align 4, !dbg !2771
  %13 = load i32, i32* %status, align 4, !dbg !2772
  %cmp13 = icmp eq i32 %13, 2, !dbg !2772
  br i1 %cmp13, label %cond.true, label %lor.lhs.false, !dbg !2772

lor.lhs.false:                                    ; preds = %if.then7
  %14 = load i32, i32* %status, align 4, !dbg !2772
  %cmp14 = icmp eq i32 %14, 3, !dbg !2772
  br i1 %cmp14, label %cond.true, label %lor.lhs.false15, !dbg !2772

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %15 = load i32, i32* %status, align 4, !dbg !2772
  %cmp16 = icmp eq i32 %15, 4, !dbg !2772
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !2772

cond.true:                                        ; preds = %lor.lhs.false15, %lor.lhs.false, %if.then7
  br label %cond.end, !dbg !2772

cond.false:                                       ; preds = %lor.lhs.false15
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i32 239, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__.do_move, i64 0, i64 0)) #13, !dbg !2772
  unreachable, !dbg !2772

16:                                               ; No predecessors!
  br label %cond.end, !dbg !2772

cond.end:                                         ; preds = %16, %cond.true
  %17 = load i32, i32* %status, align 4, !dbg !2773
  %cmp17 = icmp eq i32 %17, 4, !dbg !2775
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !2776

if.then18:                                        ; preds = %cond.end
  store i8 0, i8* %ok, align 1, !dbg !2777
  br label %if.end19, !dbg !2778

if.end19:                                         ; preds = %if.then18, %cond.end
  br label %if.end20, !dbg !2779

if.end20:                                         ; preds = %if.end19, %if.end6
  br label %if.end21, !dbg !2780

if.end21:                                         ; preds = %if.end20, %entry
  %18 = load i8, i8* %ok, align 1, !dbg !2781
  %tobool22 = trunc i8 %18 to i1, !dbg !2781
  ret i1 %tobool22, !dbg !2782
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @rm_option_init(%struct.rm_options* %x) #4 !dbg !270 {
entry:
  %x.addr = alloca %struct.rm_options*, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !2783, metadata !DIExpression()), !dbg !2784
  %0 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2785
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %0, i32 0, i32 0, !dbg !2786, !ctir !274
  store i8 0, i8* %ignore_missing_files, align 8, !dbg !2787, !ctir !139
  %1 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2788
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %1, i32 0, i32 4, !dbg !2789, !ctir !274
  store i8 1, i8* %remove_empty_directories, align 2, !dbg !2790, !ctir !139
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2791
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 3, !dbg !2792, !ctir !274
  store i8 1, i8* %recursive, align 1, !dbg !2793, !ctir !139
  %3 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2794
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %3, i32 0, i32 2, !dbg !2795, !ctir !274
  store i8 0, i8* %one_file_system, align 8, !dbg !2796, !ctir !139
  %4 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2797
  %interactive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %4, i32 0, i32 1, !dbg !2798, !ctir !274
  store i32 5, i32* %interactive, align 4, !dbg !2799, !ctir !97
  %5 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2800
  %stdin_tty = getelementptr inbounds %struct.rm_options, %struct.rm_options* %5, i32 0, i32 7, !dbg !2801, !ctir !274
  store i8 0, i8* %stdin_tty, align 1, !dbg !2802, !ctir !139
  %6 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2803
  %verbose = getelementptr inbounds %struct.rm_options, %struct.rm_options* %6, i32 0, i32 8, !dbg !2804, !ctir !274
  store i8 0, i8* %verbose, align 2, !dbg !2805, !ctir !139
  %7 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2806
  %require_restore_cwd = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 9, !dbg !2807, !ctir !274
  store i8 1, i8* %require_restore_cwd, align 1, !dbg !2808, !ctir !139
  %call = call %struct.timespec* @get_root_dev_ino(%struct.timespec* @rm_option_init.dev_ino_buf), !dbg !2809
  %8 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2811
  %root_dev_ino = getelementptr inbounds %struct.rm_options, %struct.rm_options* %8, i32 0, i32 5, !dbg !2812, !ctir !274
  store %struct.timespec* %call, %struct.timespec** %root_dev_ino, align 8, !dbg !2813, !ctir !251
  %9 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2814
  %root_dev_ino1 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %9, i32 0, i32 5, !dbg !2816, !ctir !274
  %10 = load %struct.timespec*, %struct.timespec** %root_dev_ino1, align 8, !dbg !2816, !ctir !251
  %cmp = icmp eq %struct.timespec* %10, null, !dbg !2817
  br i1 %cmp, label %if.then, label %if.end, !dbg !2818

if.then:                                          ; preds = %entry
  %call2 = call i32* @__errno_location() #15, !dbg !2819
  %11 = load i32, i32* %call2, align 4, !dbg !2819, !ctir !5
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.60, i64 0, i64 0)) #12, !dbg !2819
  %call4 = call i8* @quotearg_style(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i64 0, i64 0)), !dbg !2819
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %11, i8* %call3, i8* %call4), !dbg !2819
  unreachable, !dbg !2819

if.end:                                           ; preds = %entry
  %12 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2820
  %preserve_all_root = getelementptr inbounds %struct.rm_options, %struct.rm_options* %12, i32 0, i32 6, !dbg !2821, !ctir !274
  store i8 0, i8* %preserve_all_root, align 8, !dbg !2822, !ctir !139
  ret void, !dbg !2823
}

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rm(i8** %file, %struct.rm_options* %x) #4 !dbg !2824 {
entry:
  %file.addr = alloca i8**, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %rm_status = alloca i32, align 4, !ctir !103
  %bit_flags = alloca i32, align 4, !ctir !5
  %fts = alloca %struct.FTS*, align 8, !ctir !1067
  %ent = alloca %struct._ftsent*, align 8, !ctir !1160
  %s = alloca i32, align 4, !ctir !103
  store i8** %file, i8*** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %file.addr, metadata !2842, metadata !DIExpression()), !dbg !2843
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !2844, metadata !DIExpression()), !dbg !2845
  call void @llvm.dbg.declare(metadata i32* %rm_status, metadata !2846, metadata !DIExpression()), !dbg !2847
  store i32 2, i32* %rm_status, align 4, !dbg !2847
  %0 = load i8**, i8*** %file.addr, align 8, !dbg !2848
  %1 = load i8*, i8** %0, align 8, !dbg !2850, !ctir !1066
  %tobool = icmp ne i8* %1, null, !dbg !2850
  br i1 %tobool, label %if.then, label %if.end29, !dbg !2851

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %bit_flags, metadata !2852, metadata !DIExpression()), !dbg !2854
  store i32 536, i32* %bit_flags, align 4, !dbg !2854
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2855
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 2, !dbg !2857, !ctir !2829
  %3 = load i8, i8* %one_file_system, align 8, !dbg !2857
  %tobool1 = trunc i8 %3 to i1, !dbg !2857, !ctir !139
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2858

if.then2:                                         ; preds = %if.then
  %4 = load i32, i32* %bit_flags, align 4, !dbg !2859
  %or = or i32 %4, 64, !dbg !2859
  store i32 %or, i32* %bit_flags, align 4, !dbg !2859
  br label %if.end, !dbg !2860

if.end:                                           ; preds = %if.then2, %if.then
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts, metadata !2861, metadata !DIExpression()), !dbg !2862
  %5 = load i8**, i8*** %file.addr, align 8, !dbg !2863
  %6 = load i32, i32* %bit_flags, align 4, !dbg !2864
  %call = call %struct.FTS* @xfts_open(i8** %5, i32 %6, i32 (%struct._ftsent**, %struct._ftsent**)* null), !dbg !2865
  store %struct.FTS* %call, %struct.FTS** %fts, align 8, !dbg !2862
  br label %while.body, !dbg !2866

while.body:                                       ; preds = %if.end, %do.end
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent, metadata !2867, metadata !DIExpression()), !dbg !2869
  %7 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !2870
  %call3 = call %struct._ftsent* @rpl_fts_read(%struct.FTS* %7), !dbg !2871
  store %struct._ftsent* %call3, %struct._ftsent** %ent, align 8, !dbg !2872
  %8 = load %struct._ftsent*, %struct._ftsent** %ent, align 8, !dbg !2873
  %cmp = icmp eq %struct._ftsent* %8, null, !dbg !2875
  br i1 %cmp, label %if.then4, label %if.end11, !dbg !2876

if.then4:                                         ; preds = %while.body
  %call5 = call i32* @__errno_location() #15, !dbg !2877
  %9 = load i32, i32* %call5, align 4, !dbg !2877, !ctir !5
  %cmp6 = icmp ne i32 %9, 0, !dbg !2880
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !2881

if.then7:                                         ; preds = %if.then4
  %call8 = call i32* @__errno_location() #15, !dbg !2882
  %10 = load i32, i32* %call8, align 4, !dbg !2882, !ctir !5
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)) #12, !dbg !2884
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call9), !dbg !2885
  store i32 4, i32* %rm_status, align 4, !dbg !2886
  br label %if.end10, !dbg !2887

if.end10:                                         ; preds = %if.then7, %if.then4
  br label %while.end, !dbg !2888

if.end11:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %s, metadata !2889, metadata !DIExpression()), !dbg !2890
  %11 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !2891
  %12 = load %struct._ftsent*, %struct._ftsent** %ent, align 8, !dbg !2892
  %13 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2893
  %call12 = call i32 @rm_fts(%struct.FTS* %11, %struct._ftsent* %12, %struct.rm_options* %13), !dbg !2894
  store i32 %call12, i32* %s, align 4, !dbg !2890
  %14 = load i32, i32* %s, align 4, !dbg !2895
  %cmp13 = icmp eq i32 %14, 2, !dbg !2895
  br i1 %cmp13, label %cond.true, label %lor.lhs.false, !dbg !2895

lor.lhs.false:                                    ; preds = %if.end11
  %15 = load i32, i32* %s, align 4, !dbg !2895
  %cmp14 = icmp eq i32 %15, 3, !dbg !2895
  br i1 %cmp14, label %cond.true, label %lor.lhs.false15, !dbg !2895

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %16 = load i32, i32* %s, align 4, !dbg !2895
  %cmp16 = icmp eq i32 %16, 4, !dbg !2895
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !2895

cond.true:                                        ; preds = %lor.lhs.false15, %lor.lhs.false, %if.end11
  br label %cond.end, !dbg !2895

cond.false:                                       ; preds = %lor.lhs.false15
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.63, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.64, i64 0, i64 0), i32 609, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.rm, i64 0, i64 0)) #13, !dbg !2895
  unreachable, !dbg !2895

17:                                               ; No predecessors!
  br label %cond.end, !dbg !2895

cond.end:                                         ; preds = %17, %cond.true
  br label %do.body, !dbg !2896

do.body:                                          ; preds = %cond.end
  %18 = load i32, i32* %s, align 4, !dbg !2897
  %cmp17 = icmp eq i32 %18, 4, !dbg !2897
  br i1 %cmp17, label %if.then21, label %lor.lhs.false18, !dbg !2897

lor.lhs.false18:                                  ; preds = %do.body
  %19 = load i32, i32* %s, align 4, !dbg !2897
  %cmp19 = icmp eq i32 %19, 3, !dbg !2897
  br i1 %cmp19, label %land.lhs.true, label %if.end22, !dbg !2897

land.lhs.true:                                    ; preds = %lor.lhs.false18
  %20 = load i32, i32* %rm_status, align 4, !dbg !2897
  %cmp20 = icmp eq i32 %20, 2, !dbg !2897
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !2900

if.then21:                                        ; preds = %land.lhs.true, %do.body
  %21 = load i32, i32* %s, align 4, !dbg !2897
  store i32 %21, i32* %rm_status, align 4, !dbg !2897
  br label %if.end22, !dbg !2897

if.end22:                                         ; preds = %if.then21, %land.lhs.true, %lor.lhs.false18
  br label %do.end, !dbg !2900

do.end:                                           ; preds = %if.end22
  br label %while.body, !dbg !2866, !llvm.loop !2901

while.end:                                        ; preds = %if.end10
  %22 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !2903
  %call23 = call i32 @rpl_fts_close(%struct.FTS* %22), !dbg !2905
  %cmp24 = icmp ne i32 %call23, 0, !dbg !2906
  br i1 %cmp24, label %if.then25, label %if.end28, !dbg !2907

if.then25:                                        ; preds = %while.end
  %call26 = call i32* @__errno_location() #15, !dbg !2908
  %23 = load i32, i32* %call26, align 4, !dbg !2908, !ctir !5
  %call27 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.65, i64 0, i64 0)) #12, !dbg !2910
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %23, i8* %call27), !dbg !2911
  store i32 4, i32* %rm_status, align 4, !dbg !2912
  br label %if.end28, !dbg !2913

if.end28:                                         ; preds = %if.then25, %while.end
  br label %if.end29, !dbg !2914

if.end29:                                         ; preds = %if.end28, %entry
  %24 = load i32, i32* %rm_status, align 4, !dbg !2915
  ret i32 %24, !dbg !2916
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rm_fts(%struct.FTS* %fts, %struct._ftsent* %ent, %struct.rm_options* %x) #4 !dbg !2917 {
entry:
  %retval = alloca i32, align 4
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %err = alloca i32, align 4, !ctir !5
  %failed = alloca i8, align 1, !ctir !139
  %parent = alloca i8*, align 8, !ctir !7
  %statbuf = alloca %struct.stat, align 8, !ctir !1097
  %is_empty_directory = alloca i32, align 4, !ctir !1174
  %s = alloca i32, align 4, !ctir !103
  %is_dir = alloca i8, align 1, !ctir !139
  %s126 = alloca i32, align 4, !ctir !103
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !2920, metadata !DIExpression()), !dbg !2921
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !2922, metadata !DIExpression()), !dbg !2923
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !2924, metadata !DIExpression()), !dbg !2925
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2926
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 15, !dbg !2927, !ctir !1161
  %1 = load i16, i16* %fts_info, align 8, !dbg !2927, !ctir !34
  %conv = zext i16 %1 to i32, !dbg !2926
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 8, label %sw.bb94
    i32 10, label %sw.bb94
    i32 12, label %sw.bb94
    i32 13, label %sw.bb94
    i32 6, label %sw.bb94
    i32 4, label %sw.bb94
    i32 11, label %sw.bb94
    i32 3, label %sw.bb94
    i32 2, label %sw.bb135
    i32 7, label %sw.bb141
  ], !dbg !2928

sw.bb:                                            ; preds = %entry
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2929
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 3, !dbg !2932, !ctir !2829
  %3 = load i8, i8* %recursive, align 1, !dbg !2932
  %tobool = trunc i8 %3 to i1, !dbg !2932, !ctir !139
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !2933

land.lhs.true:                                    ; preds = %sw.bb
  %4 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2934
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %4, i32 0, i32 4, !dbg !2935, !ctir !2829
  %5 = load i8, i8* %remove_empty_directories, align 2, !dbg !2935
  %tobool1 = trunc i8 %5 to i1, !dbg !2935, !ctir !139
  br i1 %tobool1, label %land.lhs.true3, label %if.then, !dbg !2936

land.lhs.true3:                                   ; preds = %land.lhs.true
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !2937
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 6, !dbg !2938, !ctir !1068
  %7 = load i32, i32* %fts_cwd_fd, align 4, !dbg !2938, !ctir !5
  %8 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2939
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 6, !dbg !2940, !ctir !1161
  %9 = load i8*, i8** %fts_accpath, align 8, !dbg !2940, !ctir !7
  %call = call zeroext i1 @is_empty_dir(i32 %7, i8* %9), !dbg !2941
  br i1 %call, label %if.end, label %if.then, !dbg !2942

if.then:                                          ; preds = %land.lhs.true3, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2943, metadata !DIExpression()), !dbg !2945
  %10 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2946
  %remove_empty_directories5 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %10, i32 0, i32 4, !dbg !2947, !ctir !2829
  %11 = load i8, i8* %remove_empty_directories5, align 2, !dbg !2947
  %tobool6 = trunc i8 %11 to i1, !dbg !2947, !ctir !139
  %12 = zext i1 %tobool6 to i64, !dbg !2946
  %cond = select i1 %tobool6, i32 39, i32 21, !dbg !2946
  store i32 %cond, i32* %err, align 4, !dbg !2945
  %13 = load i32, i32* %err, align 4, !dbg !2948
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #12, !dbg !2949
  %14 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2950
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 7, !dbg !2950, !ctir !1161
  %15 = load i8*, i8** %fts_path, align 8, !dbg !2950, !ctir !7
  %call9 = call i8* @quotearg_style(i32 4, i8* %15), !dbg !2950
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %13, i8* %call8, i8* %call9), !dbg !2951
  %16 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2952
  call void @mark_ancestor_dirs(%struct._ftsent* %16), !dbg !2953
  %17 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !2954
  %18 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2955
  call void @fts_skip_tree(%struct.FTS* %17, %struct._ftsent* %18), !dbg !2956
  store i32 4, i32* %retval, align 4, !dbg !2957
  br label %return, !dbg !2957

if.end:                                           ; preds = %land.lhs.true3, %sw.bb
  %19 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2958
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !2960, !ctir !1161
  %20 = load i64, i64* %fts_level, align 8, !dbg !2960, !ctir !495
  %cmp = icmp eq i64 %20, 0, !dbg !2961
  br i1 %cmp, label %if.then11, label %if.end80, !dbg !2962

if.then11:                                        ; preds = %if.end
  %21 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2963
  %fts_accpath12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !2966, !ctir !1161
  %22 = load i8*, i8** %fts_accpath12, align 8, !dbg !2966, !ctir !7
  %call13 = call i8* @last_component(i8* %22) #14, !dbg !2967
  %call14 = call zeroext i1 @dot_or_dotdot(i8* %call13), !dbg !2968
  br i1 %call14, label %if.then15, label %if.end21, !dbg !2969

if.then15:                                        ; preds = %if.then11
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.67, i64 0, i64 0)) #12, !dbg !2970
  %call17 = call i8* @quotearg_n_style(i32 0, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.68, i64 0, i64 0)), !dbg !2972
  %call18 = call i8* @quotearg_n_style(i32 1, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.69, i64 0, i64 0)), !dbg !2973
  %23 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2974
  %fts_path19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 7, !dbg !2974, !ctir !1161
  %24 = load i8*, i8** %fts_path19, align 8, !dbg !2974, !ctir !7
  %call20 = call i8* @quotearg_n_style(i32 2, i32 4, i8* %24), !dbg !2974
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call16, i8* %call17, i8* %call18, i8* %call20), !dbg !2975
  %25 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !2976
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2977
  call void @fts_skip_tree(%struct.FTS* %25, %struct._ftsent* %26), !dbg !2978
  store i32 4, i32* %retval, align 4, !dbg !2979
  br label %return, !dbg !2979

if.end21:                                         ; preds = %if.then11
  %27 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2980
  %root_dev_ino = getelementptr inbounds %struct.rm_options, %struct.rm_options* %27, i32 0, i32 5, !dbg !2980, !ctir !2829
  %28 = load %struct.timespec*, %struct.timespec** %root_dev_ino, align 8, !dbg !2980, !ctir !1163
  %tobool22 = icmp ne %struct.timespec* %28, null, !dbg !2980
  br i1 %tobool22, label %land.lhs.true23, label %if.end50, !dbg !2980

land.lhs.true23:                                  ; preds = %if.end21
  %29 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2980
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !2980, !ctir !1161
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !2980, !ctir !1096
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 1, !dbg !2980, !ctir !1097
  %30 = load i64, i64* %st_ino, align 8, !dbg !2980, !ctir !257
  %31 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2980
  %root_dev_ino24 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %31, i32 0, i32 5, !dbg !2980, !ctir !2829
  %32 = load %struct.timespec*, %struct.timespec** %root_dev_ino24, align 8, !dbg !2980, !ctir !1163
  %st_ino25 = getelementptr inbounds %struct.timespec, %struct.timespec* %32, i32 0, i32 0, !dbg !2980, !ctir !1164
  %33 = load i64, i64* %st_ino25, align 8, !dbg !2980, !ctir !256
  %cmp26 = icmp eq i64 %30, %33, !dbg !2980
  br i1 %cmp26, label %land.lhs.true28, label %if.end50, !dbg !2980

land.lhs.true28:                                  ; preds = %land.lhs.true23
  %34 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2980
  %fts_statp29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 18, !dbg !2980, !ctir !1161
  %arraydecay30 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp29, i64 0, i64 0, !dbg !2980, !ctir !1096
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay30, i32 0, i32 0, !dbg !2980, !ctir !1097
  %35 = load i64, i64* %st_dev, align 8, !dbg !2980, !ctir !260
  %36 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2980
  %root_dev_ino31 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %36, i32 0, i32 5, !dbg !2980, !ctir !2829
  %37 = load %struct.timespec*, %struct.timespec** %root_dev_ino31, align 8, !dbg !2980, !ctir !1163
  %st_dev32 = getelementptr inbounds %struct.timespec, %struct.timespec* %37, i32 0, i32 1, !dbg !2980, !ctir !1164
  %38 = load i64, i64* %st_dev32, align 8, !dbg !2980, !ctir !259
  %cmp33 = icmp eq i64 %35, %38, !dbg !2980
  br i1 %cmp33, label %if.then35, label %if.end50, !dbg !2982

if.then35:                                        ; preds = %land.lhs.true28
  br label %do.body, !dbg !2983

do.body:                                          ; preds = %if.then35
  %39 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2985
  %fts_path36 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %39, i32 0, i32 7, !dbg !2985, !ctir !1161
  %40 = load i8*, i8** %fts_path36, align 8, !dbg !2985, !ctir !7
  %call37 = call i32 @strcmp(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.70, i64 0, i64 0)) #14, !dbg !2985
  %cmp38 = icmp eq i32 %call37, 0, !dbg !2985
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !2988

if.then40:                                        ; preds = %do.body
  %call41 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.71, i64 0, i64 0)) #12, !dbg !2985
  %41 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2985
  %fts_path42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %41, i32 0, i32 7, !dbg !2985, !ctir !1161
  %42 = load i8*, i8** %fts_path42, align 8, !dbg !2985, !ctir !7
  %call43 = call i8* @quotearg_style(i32 4, i8* %42), !dbg !2985
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call41, i8* %call43), !dbg !2985
  br label %if.end48, !dbg !2985

if.else:                                          ; preds = %do.body
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.10.72, i64 0, i64 0)) #12, !dbg !2985
  %43 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2985
  %fts_path45 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %43, i32 0, i32 7, !dbg !2985, !ctir !1161
  %44 = load i8*, i8** %fts_path45, align 8, !dbg !2985, !ctir !7
  %call46 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %44), !dbg !2985
  %call47 = call i8* @quotearg_n_style(i32 1, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.70, i64 0, i64 0)), !dbg !2985
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call44, i8* %call46, i8* %call47), !dbg !2985
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then40
  %call49 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.11.73, i64 0, i64 0)) #12, !dbg !2988
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call49), !dbg !2988
  br label %do.end, !dbg !2988

do.end:                                           ; preds = %if.end48
  %45 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !2989
  %46 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2990
  call void @fts_skip_tree(%struct.FTS* %45, %struct._ftsent* %46), !dbg !2991
  store i32 4, i32* %retval, align 4, !dbg !2992
  br label %return, !dbg !2992

if.end50:                                         ; preds = %land.lhs.true28, %land.lhs.true23, %if.end21
  %47 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2993
  %preserve_all_root = getelementptr inbounds %struct.rm_options, %struct.rm_options* %47, i32 0, i32 6, !dbg !2995, !ctir !2829
  %48 = load i8, i8* %preserve_all_root, align 8, !dbg !2995
  %tobool51 = trunc i8 %48 to i1, !dbg !2995, !ctir !139
  br i1 %tobool51, label %if.then52, label %if.end79, !dbg !2996

if.then52:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i8* %failed, metadata !2997, metadata !DIExpression()), !dbg !2999
  store i8 0, i8* %failed, align 1, !dbg !2999
  call void @llvm.dbg.declare(metadata i8** %parent, metadata !3000, metadata !DIExpression()), !dbg !3001
  %49 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3002
  %fts_accpath53 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %49, i32 0, i32 6, !dbg !3003, !ctir !1161
  %50 = load i8*, i8** %fts_accpath53, align 8, !dbg !3003, !ctir !7
  %call54 = call i8* @file_name_concat(i8* %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.69, i64 0, i64 0), i8** null), !dbg !3004
  store i8* %call54, i8** %parent, align 8, !dbg !3001
  call void @llvm.dbg.declare(metadata %struct.stat* %statbuf, metadata !3005, metadata !DIExpression()), !dbg !3006
  %51 = load i8*, i8** %parent, align 8, !dbg !3007
  %tobool55 = icmp ne i8* %51, null, !dbg !3007
  br i1 %tobool55, label %lor.lhs.false, label %if.then58, !dbg !3009

lor.lhs.false:                                    ; preds = %if.then52
  %52 = load i8*, i8** %parent, align 8, !dbg !3010
  %call56 = call i32 @lstat(i8* %52, %struct.stat* %statbuf) #12, !dbg !3011
  %tobool57 = icmp ne i32 %call56, 0, !dbg !3011
  br i1 %tobool57, label %if.then58, label %if.end63, !dbg !3012

if.then58:                                        ; preds = %lor.lhs.false, %if.then52
  %call59 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12.74, i64 0, i64 0)) #12, !dbg !3013
  %53 = load i8*, i8** %parent, align 8, !dbg !3015
  %call60 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %53), !dbg !3015
  %54 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3016
  %fts_accpath61 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %54, i32 0, i32 6, !dbg !3016, !ctir !1161
  %55 = load i8*, i8** %fts_accpath61, align 8, !dbg !3016, !ctir !7
  %call62 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %55), !dbg !3016
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call59, i8* %call60, i8* %call62), !dbg !3017
  store i8 1, i8* %failed, align 1, !dbg !3018
  br label %if.end63, !dbg !3019

if.end63:                                         ; preds = %if.then58, %lor.lhs.false
  %56 = load i8*, i8** %parent, align 8, !dbg !3020
  call void @free(i8* %56) #12, !dbg !3021
  %57 = load i8, i8* %failed, align 1, !dbg !3022
  %tobool64 = trunc i8 %57 to i1, !dbg !3022
  br i1 %tobool64, label %if.then70, label %lor.lhs.false66, !dbg !3024

lor.lhs.false66:                                  ; preds = %if.end63
  %58 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3025
  %fts_dev = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 3, !dbg !3026, !ctir !1068
  %59 = load i64, i64* %fts_dev, align 8, !dbg !3026, !ctir !259
  %st_dev67 = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 0, !dbg !3027, !ctir !1097
  %60 = load i64, i64* %st_dev67, align 8, !dbg !3027, !ctir !260
  %cmp68 = icmp ne i64 %59, %60, !dbg !3028
  br i1 %cmp68, label %if.then70, label %if.end78, !dbg !3029

if.then70:                                        ; preds = %lor.lhs.false66, %if.end63
  %61 = load i8, i8* %failed, align 1, !dbg !3030
  %tobool71 = trunc i8 %61 to i1, !dbg !3030
  br i1 %tobool71, label %if.end77, label %if.then72, !dbg !3033

if.then72:                                        ; preds = %if.then70
  %call73 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13.75, i64 0, i64 0)) #12, !dbg !3034
  %62 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3036
  %fts_path74 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %62, i32 0, i32 7, !dbg !3036, !ctir !1161
  %63 = load i8*, i8** %fts_path74, align 8, !dbg !3036, !ctir !7
  %call75 = call i8* @quotearg_style(i32 4, i8* %63), !dbg !3036
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call73, i8* %call75), !dbg !3037
  %call76 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.76, i64 0, i64 0)) #12, !dbg !3038
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call76), !dbg !3039
  br label %if.end77, !dbg !3040

if.end77:                                         ; preds = %if.then72, %if.then70
  %64 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3041
  %65 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3042
  call void @fts_skip_tree(%struct.FTS* %64, %struct._ftsent* %65), !dbg !3043
  store i32 4, i32* %retval, align 4, !dbg !3044
  br label %return, !dbg !3044

if.end78:                                         ; preds = %lor.lhs.false66
  br label %if.end79, !dbg !3045

if.end79:                                         ; preds = %if.end78, %if.end50
  br label %if.end80, !dbg !3046

if.end80:                                         ; preds = %if.end79, %if.end
  call void @llvm.dbg.declare(metadata i32* %is_empty_directory, metadata !3047, metadata !DIExpression()), !dbg !3049
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3050, metadata !DIExpression()), !dbg !3051
  %66 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3052
  %67 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3053
  %68 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3054
  %call81 = call i32 @prompt(%struct.FTS* %66, %struct._ftsent* %67, i1 zeroext true, %struct.rm_options* %68, i32 2, i32* %is_empty_directory), !dbg !3055
  store i32 %call81, i32* %s, align 4, !dbg !3051
  %69 = load i32, i32* %s, align 4, !dbg !3056
  %cmp82 = icmp eq i32 %69, 2, !dbg !3058
  br i1 %cmp82, label %land.lhs.true84, label %if.end89, !dbg !3059

land.lhs.true84:                                  ; preds = %if.end80
  %70 = load i32, i32* %is_empty_directory, align 4, !dbg !3060
  %cmp85 = icmp eq i32 %70, 4, !dbg !3061
  br i1 %cmp85, label %if.then87, label %if.end89, !dbg !3062

if.then87:                                        ; preds = %land.lhs.true84
  %71 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3063
  %72 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3065
  %73 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3066
  %call88 = call i32 @excise(%struct.FTS* %71, %struct._ftsent* %72, %struct.rm_options* %73, i1 zeroext true), !dbg !3067
  store i32 %call88, i32* %s, align 4, !dbg !3068
  %74 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3069
  %75 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3070
  call void @fts_skip_tree(%struct.FTS* %74, %struct._ftsent* %75), !dbg !3071
  br label %if.end89, !dbg !3072

if.end89:                                         ; preds = %if.then87, %land.lhs.true84, %if.end80
  %76 = load i32, i32* %s, align 4, !dbg !3073
  %cmp90 = icmp ne i32 %76, 2, !dbg !3075
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !3076

if.then92:                                        ; preds = %if.end89
  %77 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3077
  call void @mark_ancestor_dirs(%struct._ftsent* %77), !dbg !3079
  %78 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3080
  %79 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3081
  call void @fts_skip_tree(%struct.FTS* %78, %struct._ftsent* %79), !dbg !3082
  br label %if.end93, !dbg !3083

if.end93:                                         ; preds = %if.then92, %if.end89
  %80 = load i32, i32* %s, align 4, !dbg !3084
  store i32 %80, i32* %retval, align 4, !dbg !3085
  br label %return, !dbg !3085

sw.bb94:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %81 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3086
  %fts_info95 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 15, !dbg !3089, !ctir !1161
  %82 = load i16, i16* %fts_info95, align 8, !dbg !3089, !ctir !34
  %conv96 = zext i16 %82 to i32, !dbg !3086
  %cmp97 = icmp eq i32 %conv96, 6, !dbg !3090
  br i1 %cmp97, label %land.lhs.true99, label %if.end117, !dbg !3091

land.lhs.true99:                                  ; preds = %sw.bb94
  %83 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3092
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %83, i32 0, i32 2, !dbg !3093, !ctir !2829
  %84 = load i8, i8* %one_file_system, align 8, !dbg !3093
  %tobool100 = trunc i8 %84 to i1, !dbg !3093, !ctir !139
  br i1 %tobool100, label %land.lhs.true102, label %if.end117, !dbg !3094

land.lhs.true102:                                 ; preds = %land.lhs.true99
  %85 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3095
  %fts_level103 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %85, i32 0, i32 12, !dbg !3096, !ctir !1161
  %86 = load i64, i64* %fts_level103, align 8, !dbg !3096, !ctir !495
  %cmp104 = icmp slt i64 0, %86, !dbg !3097
  br i1 %cmp104, label %land.lhs.true106, label %if.end117, !dbg !3098

land.lhs.true106:                                 ; preds = %land.lhs.true102
  %87 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3099
  %fts_statp107 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %87, i32 0, i32 18, !dbg !3100, !ctir !1161
  %arraydecay108 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp107, i64 0, i64 0, !dbg !3101, !ctir !1096
  %st_dev109 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay108, i32 0, i32 0, !dbg !3101, !ctir !1097
  %88 = load i64, i64* %st_dev109, align 8, !dbg !3101, !ctir !260
  %89 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3102
  %fts_dev110 = getelementptr inbounds %struct.FTS, %struct.FTS* %89, i32 0, i32 3, !dbg !3103, !ctir !1068
  %90 = load i64, i64* %fts_dev110, align 8, !dbg !3103, !ctir !259
  %cmp111 = icmp ne i64 %88, %90, !dbg !3104
  br i1 %cmp111, label %if.then113, label %if.end117, !dbg !3105

if.then113:                                       ; preds = %land.lhs.true106
  %91 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3106
  call void @mark_ancestor_dirs(%struct._ftsent* %91), !dbg !3108
  %call114 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13.75, i64 0, i64 0)) #12, !dbg !3109
  %92 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3110
  %fts_path115 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %92, i32 0, i32 7, !dbg !3110, !ctir !1161
  %93 = load i8*, i8** %fts_path115, align 8, !dbg !3110, !ctir !7
  %call116 = call i8* @quotearg_style(i32 4, i8* %93), !dbg !3110
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call114, i8* %call116), !dbg !3111
  store i32 4, i32* %retval, align 4, !dbg !3112
  br label %return, !dbg !3112

if.end117:                                        ; preds = %land.lhs.true106, %land.lhs.true102, %land.lhs.true99, %sw.bb94
  call void @llvm.dbg.declare(metadata i8* %is_dir, metadata !3113, metadata !DIExpression()), !dbg !3114
  %94 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3115
  %fts_info118 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %94, i32 0, i32 15, !dbg !3116, !ctir !1161
  %95 = load i16, i16* %fts_info118, align 8, !dbg !3116, !ctir !34
  %conv119 = zext i16 %95 to i32, !dbg !3115
  %cmp120 = icmp eq i32 %conv119, 6, !dbg !3117
  br i1 %cmp120, label %lor.end, label %lor.rhs, !dbg !3118

lor.rhs:                                          ; preds = %if.end117
  %96 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3119
  %fts_info122 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %96, i32 0, i32 15, !dbg !3120, !ctir !1161
  %97 = load i16, i16* %fts_info122, align 8, !dbg !3120, !ctir !34
  %conv123 = zext i16 %97 to i32, !dbg !3119
  %cmp124 = icmp eq i32 %conv123, 4, !dbg !3121
  br label %lor.end, !dbg !3118

lor.end:                                          ; preds = %lor.rhs, %if.end117
  %98 = phi i1 [ true, %if.end117 ], [ %cmp124, %lor.rhs ]
  %frombool = zext i1 %98 to i8, !dbg !3114
  store i8 %frombool, i8* %is_dir, align 1, !dbg !3114
  call void @llvm.dbg.declare(metadata i32* %s126, metadata !3122, metadata !DIExpression()), !dbg !3123
  %99 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3124
  %100 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3125
  %101 = load i8, i8* %is_dir, align 1, !dbg !3126
  %tobool127 = trunc i8 %101 to i1, !dbg !3126
  %102 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3127
  %call128 = call i32 @prompt(%struct.FTS* %99, %struct._ftsent* %100, i1 zeroext %tobool127, %struct.rm_options* %102, i32 3, i32* null), !dbg !3128
  store i32 %call128, i32* %s126, align 4, !dbg !3123
  %103 = load i32, i32* %s126, align 4, !dbg !3129
  %cmp129 = icmp ne i32 %103, 2, !dbg !3131
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !3132

if.then131:                                       ; preds = %lor.end
  %104 = load i32, i32* %s126, align 4, !dbg !3133
  store i32 %104, i32* %retval, align 4, !dbg !3134
  br label %return, !dbg !3134

if.end132:                                        ; preds = %lor.end
  %105 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3135
  %106 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3136
  %107 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3137
  %108 = load i8, i8* %is_dir, align 1, !dbg !3138
  %tobool133 = trunc i8 %108 to i1, !dbg !3138
  %call134 = call i32 @excise(%struct.FTS* %105, %struct._ftsent* %106, %struct.rm_options* %107, i1 zeroext %tobool133), !dbg !3139
  store i32 %call134, i32* %retval, align 4, !dbg !3140
  br label %return, !dbg !3140

sw.bb135:                                         ; preds = %entry
  br label %do.body136, !dbg !3141

do.body136:                                       ; preds = %sw.bb135
  %call137 = call i8* @gettext(i8* getelementptr inbounds ([186 x i8], [186 x i8]* @.str.15.77, i64 0, i64 0)) #12, !dbg !3142
  %109 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3142
  %fts_path138 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %109, i32 0, i32 7, !dbg !3142, !ctir !1161
  %110 = load i8*, i8** %fts_path138, align 8, !dbg !3142, !ctir !7
  %call139 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %110), !dbg !3142
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call137, i8* %call139), !dbg !3142
  br label %do.end140, !dbg !3142

do.end140:                                        ; preds = %do.body136
  %111 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3144
  %112 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3145
  call void @fts_skip_tree(%struct.FTS* %111, %struct._ftsent* %112), !dbg !3146
  store i32 4, i32* %retval, align 4, !dbg !3147
  br label %return, !dbg !3147

sw.bb141:                                         ; preds = %entry
  %113 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3148
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %113, i32 0, i32 8, !dbg !3149, !ctir !1161
  %114 = load i32, i32* %fts_errno, align 8, !dbg !3149, !ctir !5
  %call142 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.78, i64 0, i64 0)) #12, !dbg !3150
  %115 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3151
  %fts_path143 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %115, i32 0, i32 7, !dbg !3151, !ctir !1161
  %116 = load i8*, i8** %fts_path143, align 8, !dbg !3151, !ctir !7
  %call144 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %116), !dbg !3151
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %114, i8* %call142, i8* %call144), !dbg !3152
  %117 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3153
  %118 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3154
  call void @fts_skip_tree(%struct.FTS* %117, %struct._ftsent* %118), !dbg !3155
  store i32 4, i32* %retval, align 4, !dbg !3156
  br label %return, !dbg !3156

sw.default:                                       ; preds = %entry
  %call145 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.17.79, i64 0, i64 0)) #12, !dbg !3157
  %119 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3158
  %fts_info146 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %119, i32 0, i32 15, !dbg !3159, !ctir !1161
  %120 = load i16, i16* %fts_info146, align 8, !dbg !3159, !ctir !34
  %conv147 = zext i16 %120 to i32, !dbg !3158
  %121 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3160
  %fts_path148 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %121, i32 0, i32 7, !dbg !3160, !ctir !1161
  %122 = load i8*, i8** %fts_path148, align 8, !dbg !3160, !ctir !7
  %call149 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %122), !dbg !3160
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call145, i32 %conv147, i8* %call149, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18.80, i64 0, i64 0)), !dbg !3161
  call void @abort() #13, !dbg !3162
  unreachable, !dbg !3162

return:                                           ; preds = %sw.bb141, %do.end140, %if.end132, %if.then131, %if.then113, %if.end93, %if.end77, %do.end, %if.then15, %if.then
  %123 = load i32, i32* %retval, align 4, !dbg !3163
  ret i32 %123, !dbg !3163
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_empty_dir(i32 %fd_cwd, i8* %dir) #4 !dbg !3164 {
entry:
  %retval = alloca i1, align 1
  %fd_cwd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !530
  %dp = alloca %struct.dirent*, align 8, !ctir !1178
  %saved_errno = alloca i32, align 4, !ctir !5
  %fd = alloca i32, align 4, !ctir !5
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd_cwd.addr, metadata !3167, metadata !DIExpression()), !dbg !3168
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !3169, metadata !DIExpression()), !dbg !3170
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !3171, metadata !DIExpression()), !dbg !3172
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !3173, metadata !DIExpression()), !dbg !3174
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !3175, metadata !DIExpression()), !dbg !3176
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !3177, metadata !DIExpression()), !dbg !3178
  %0 = load i32, i32* %fd_cwd.addr, align 4, !dbg !3179
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !3180
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %0, i8* %1, i32 198912), !dbg !3181
  store i32 %call, i32* %fd, align 4, !dbg !3178
  %2 = load i32, i32* %fd, align 4, !dbg !3182
  %cmp = icmp slt i32 %2, 0, !dbg !3184
  br i1 %cmp, label %if.then, label %if.end, !dbg !3185

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !3186
  br label %return, !dbg !3186

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %fd, align 4, !dbg !3187
  %call1 = call %struct.__dirstream* @fdopendir(i32 %3), !dbg !3188
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !3189
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !3190
  %cmp2 = icmp eq %struct.__dirstream* %4, null, !dbg !3192
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !3193

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* %fd, align 4, !dbg !3194
  %call4 = call i32 @close(i32 %5), !dbg !3196
  store i1 false, i1* %retval, align 1, !dbg !3197
  br label %return, !dbg !3197

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #15, !dbg !3198
  store i32 0, i32* %call6, align 4, !dbg !3199, !ctir !5
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !3200
  %call7 = call %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %6), !dbg !3201
  store %struct.dirent* %call7, %struct.dirent** %dp, align 8, !dbg !3202
  %call8 = call i32* @__errno_location() #15, !dbg !3203
  %7 = load i32, i32* %call8, align 4, !dbg !3203, !ctir !5
  store i32 %7, i32* %saved_errno, align 4, !dbg !3204
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !3205
  %call9 = call i32 @closedir(%struct.__dirstream* %8), !dbg !3206
  %9 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !3207
  %cmp10 = icmp ne %struct.dirent* %9, null, !dbg !3209
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !3210

if.then11:                                        ; preds = %if.end5
  store i1 false, i1* %retval, align 1, !dbg !3211
  br label %return, !dbg !3211

if.end12:                                         ; preds = %if.end5
  %10 = load i32, i32* %saved_errno, align 4, !dbg !3212
  %cmp13 = icmp eq i32 %10, 0, !dbg !3213
  %11 = zext i1 %cmp13 to i64, !dbg !3212
  %cond = select i1 %cmp13, i32 1, i32 0, !dbg !3212
  %tobool = icmp ne i32 %cond, 0, !dbg !3212
  store i1 %tobool, i1* %retval, align 1, !dbg !3214
  br label %return, !dbg !3214

return:                                           ; preds = %if.end12, %if.then11, %if.then3, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !3215
  ret i1 %12, !dbg !3215
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mark_ancestor_dirs(%struct._ftsent* %ent) #4 !dbg !3216 {
entry:
  %ent.addr = alloca %struct._ftsent*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !1160
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !3219, metadata !DIExpression()), !dbg !3220
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !3221, metadata !DIExpression()), !dbg !3222
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3223
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 1, !dbg !3225, !ctir !1161
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !3225, !ctir !1073
  store %struct._ftsent* %1, %struct._ftsent** %p, align 8, !dbg !3226
  br label %for.cond, !dbg !3227

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !3228
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 12, !dbg !3230, !ctir !1161
  %3 = load i64, i64* %fts_level, align 8, !dbg !3230, !ctir !495
  %cmp = icmp sle i64 0, %3, !dbg !3231
  br i1 %cmp, label %for.body, label %for.end, !dbg !3232

for.body:                                         ; preds = %for.cond
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !3233
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 4, !dbg !3236, !ctir !1161
  %5 = load i64, i64* %fts_number, align 8, !dbg !3236, !ctir !32
  %tobool = icmp ne i64 %5, 0, !dbg !3233
  br i1 %tobool, label %if.then, label %if.end, !dbg !3237

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !3238

if.end:                                           ; preds = %for.body
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !3239
  %fts_number1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 4, !dbg !3240, !ctir !1161
  store i64 1, i64* %fts_number1, align 8, !dbg !3241, !ctir !32
  br label %for.inc, !dbg !3242

for.inc:                                          ; preds = %if.end
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !3243
  %fts_parent2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 1, !dbg !3244, !ctir !1161
  %8 = load %struct._ftsent*, %struct._ftsent** %fts_parent2, align 8, !dbg !3244, !ctir !1073
  store %struct._ftsent* %8, %struct._ftsent** %p, align 8, !dbg !3245
  br label %for.cond, !dbg !3246, !llvm.loop !3247

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !3249
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_skip_tree(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !3250 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %__x = alloca %struct._ftsent*, align 8, !ctir !1160
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !3253, metadata !DIExpression()), !dbg !3254
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !3255, metadata !DIExpression()), !dbg !3256
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3257
  %1 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3258
  %call = call i32 @rpl_fts_set(%struct.FTS* %0, %struct._ftsent* %1, i32 4), !dbg !3259
  call void @llvm.dbg.declare(metadata %struct._ftsent** %__x, metadata !3260, metadata !DIExpression()), !dbg !3262
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3262
  %call1 = call %struct._ftsent* @rpl_fts_read(%struct.FTS* %2), !dbg !3262
  store %struct._ftsent* %call1, %struct._ftsent** %__x, align 8, !dbg !3262
  %3 = load %struct._ftsent*, %struct._ftsent** %__x, align 8, !dbg !3262
  ret void, !dbg !3263
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #4 !dbg !3264 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !8
  store i8* %file_name, i8** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !3265, metadata !DIExpression()), !dbg !3266
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !3267
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !3267, !ctir !113
  %1 = load i8, i8* %arrayidx, align 1, !dbg !3267
  %conv = sext i8 %1 to i32, !dbg !3267
  %cmp = icmp eq i32 %conv, 46, !dbg !3269
  br i1 %cmp, label %if.then, label %if.else, !dbg !3270

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !3271, metadata !DIExpression()), !dbg !3273
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !3274
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !3275
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !3275, !ctir !113
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !3275
  %conv3 = sext i8 %4 to i32, !dbg !3275
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !3276
  %conv5 = zext i1 %cmp4 to i32, !dbg !3276
  %add = add nsw i32 %conv5, 1, !dbg !3277
  %idxprom = sext i32 %add to i64, !dbg !3274
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !3274, !ctir !113
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !3274
  store i8 %5, i8* %sep, align 1, !dbg !3273
  %6 = load i8, i8* %sep, align 1, !dbg !3278
  %tobool = icmp ne i8 %6, 0, !dbg !3278
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !3279

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !3280
  %conv7 = sext i8 %7 to i32, !dbg !3280
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !3280
  br label %lor.end, !dbg !3279

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !3281
  br label %return, !dbg !3281

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !3282
  br label %return, !dbg !3282

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !3283
  ret i1 %9, !dbg !3283
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @prompt(%struct.FTS* %fts, %struct._ftsent* %ent, i1 zeroext %is_dir, %struct.rm_options* %x, i32 %mode, i32* %is_empty_p) #4 !dbg !3284 {
entry:
  %retval = alloca i32, align 4
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %is_dir.addr = alloca i8, align 1
  %x.addr = alloca %struct.rm_options*, align 8
  %mode.addr = alloca i32, align 4
  %is_empty_p.addr = alloca i32*, align 8
  %fd_cwd = alloca i32, align 4, !ctir !5
  %full_name = alloca i8*, align 8, !ctir !113
  %filename = alloca i8*, align 8, !ctir !113
  %st = alloca %struct.stat, align 8, !ctir !1097
  %sbuf = alloca %struct.stat*, align 8, !ctir !1189
  %dirent_type = alloca i32, align 4, !ctir !5
  %write_protected = alloca i32, align 4, !ctir !5
  %is_empty = alloca i8, align 1, !ctir !139
  %wp_errno = alloca i32, align 4, !ctir !5
  %quoted_name = alloca i8*, align 8, !ctir !113
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !3290, metadata !DIExpression()), !dbg !3291
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !3292, metadata !DIExpression()), !dbg !3293
  %frombool = zext i1 %is_dir to i8
  store i8 %frombool, i8* %is_dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_dir.addr, metadata !3294, metadata !DIExpression()), !dbg !3295
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3296, metadata !DIExpression()), !dbg !3297
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3298, metadata !DIExpression()), !dbg !3299
  store i32* %is_empty_p, i32** %is_empty_p.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %is_empty_p.addr, metadata !3300, metadata !DIExpression()), !dbg !3301
  call void @llvm.dbg.declare(metadata i32* %fd_cwd, metadata !3302, metadata !DIExpression()), !dbg !3303
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3304
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 6, !dbg !3305, !ctir !1187
  %1 = load i32, i32* %fts_cwd_fd, align 4, !dbg !3305, !ctir !5
  store i32 %1, i32* %fd_cwd, align 4, !dbg !3303
  call void @llvm.dbg.declare(metadata i8** %full_name, metadata !3306, metadata !DIExpression()), !dbg !3307
  %2 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3308
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 7, !dbg !3309, !ctir !1188
  %3 = load i8*, i8** %fts_path, align 8, !dbg !3309, !ctir !7
  store i8* %3, i8** %full_name, align 8, !dbg !3307
  call void @llvm.dbg.declare(metadata i8** %filename, metadata !3310, metadata !DIExpression()), !dbg !3311
  %4 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3312
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 6, !dbg !3313, !ctir !1188
  %5 = load i8*, i8** %fts_accpath, align 8, !dbg !3313, !ctir !7
  store i8* %5, i8** %filename, align 8, !dbg !3311
  %6 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !3314
  %tobool = icmp ne i32* %6, null, !dbg !3314
  br i1 %tobool, label %if.then, label %if.end, !dbg !3316

if.then:                                          ; preds = %entry
  %7 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !3317
  store i32 2, i32* %7, align 4, !dbg !3318, !ctir !1174
  br label %if.end, !dbg !3319

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3320, metadata !DIExpression()), !dbg !3321
  call void @llvm.dbg.declare(metadata %struct.stat** %sbuf, metadata !3322, metadata !DIExpression()), !dbg !3323
  store %struct.stat* %st, %struct.stat** %sbuf, align 8, !dbg !3323
  %8 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !3324
  %call = call %struct.stat* @cache_stat_init(%struct.stat* %8), !dbg !3325
  call void @llvm.dbg.declare(metadata i32* %dirent_type, metadata !3326, metadata !DIExpression()), !dbg !3327
  %9 = load i8, i8* %is_dir.addr, align 1, !dbg !3328
  %tobool1 = trunc i8 %9 to i1, !dbg !3328
  %10 = zext i1 %tobool1 to i64, !dbg !3328
  %cond = select i1 %tobool1, i32 4, i32 0, !dbg !3328
  store i32 %cond, i32* %dirent_type, align 4, !dbg !3327
  call void @llvm.dbg.declare(metadata i32* %write_protected, metadata !3329, metadata !DIExpression()), !dbg !3330
  store i32 0, i32* %write_protected, align 4, !dbg !3330
  call void @llvm.dbg.declare(metadata i8* %is_empty, metadata !3331, metadata !DIExpression()), !dbg !3332
  store i8 0, i8* %is_empty, align 1, !dbg !3332
  %11 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !3333
  %tobool2 = icmp ne i32* %11, null, !dbg !3333
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !3335

if.then3:                                         ; preds = %if.end
  %12 = load i32, i32* %fd_cwd, align 4, !dbg !3336
  %13 = load i8*, i8** %filename, align 8, !dbg !3338
  %call4 = call zeroext i1 @is_empty_dir(i32 %12, i8* %13), !dbg !3339
  %frombool5 = zext i1 %call4 to i8, !dbg !3340
  store i8 %frombool5, i8* %is_empty, align 1, !dbg !3340
  %14 = load i8, i8* %is_empty, align 1, !dbg !3341
  %tobool6 = trunc i8 %14 to i1, !dbg !3341
  %15 = zext i1 %tobool6 to i64, !dbg !3341
  %cond7 = select i1 %tobool6, i32 4, i32 3, !dbg !3341
  %16 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !3342
  store i32 %cond7, i32* %16, align 4, !dbg !3343, !ctir !1174
  br label %if.end8, !dbg !3344

if.end8:                                          ; preds = %if.then3, %if.end
  %17 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3345
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 4, !dbg !3347, !ctir !1188
  %18 = load i64, i64* %fts_number, align 8, !dbg !3347, !ctir !32
  %tobool9 = icmp ne i64 %18, 0, !dbg !3345
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !3348

if.then10:                                        ; preds = %if.end8
  store i32 3, i32* %retval, align 4, !dbg !3349
  br label %return, !dbg !3349

if.end11:                                         ; preds = %if.end8
  %19 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3350
  %interactive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %19, i32 0, i32 1, !dbg !3352, !ctir !2829
  %20 = load i32, i32* %interactive, align 4, !dbg !3352, !ctir !97
  %cmp = icmp eq i32 %20, 5, !dbg !3353
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !3354

if.then12:                                        ; preds = %if.end11
  store i32 2, i32* %retval, align 4, !dbg !3355
  br label %return, !dbg !3355

if.end13:                                         ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %wp_errno, metadata !3356, metadata !DIExpression()), !dbg !3357
  store i32 0, i32* %wp_errno, align 4, !dbg !3357
  %21 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3358
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %21, i32 0, i32 0, !dbg !3360, !ctir !2829
  %22 = load i8, i8* %ignore_missing_files, align 8, !dbg !3360
  %tobool14 = trunc i8 %22 to i1, !dbg !3360, !ctir !139
  br i1 %tobool14, label %if.end23, label %land.lhs.true, !dbg !3361

land.lhs.true:                                    ; preds = %if.end13
  %23 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3362
  %interactive15 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %23, i32 0, i32 1, !dbg !3363, !ctir !2829
  %24 = load i32, i32* %interactive15, align 4, !dbg !3363, !ctir !97
  %cmp16 = icmp eq i32 %24, 3, !dbg !3364
  br i1 %cmp16, label %land.lhs.true18, label %lor.lhs.false, !dbg !3365

lor.lhs.false:                                    ; preds = %land.lhs.true
  %25 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3366
  %stdin_tty = getelementptr inbounds %struct.rm_options, %struct.rm_options* %25, i32 0, i32 7, !dbg !3367, !ctir !2829
  %26 = load i8, i8* %stdin_tty, align 1, !dbg !3367
  %tobool17 = trunc i8 %26 to i1, !dbg !3367, !ctir !139
  br i1 %tobool17, label %land.lhs.true18, label %if.end23, !dbg !3368

land.lhs.true18:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %27 = load i32, i32* %dirent_type, align 4, !dbg !3369
  %cmp19 = icmp ne i32 %27, 10, !dbg !3370
  br i1 %cmp19, label %if.then20, label %if.end23, !dbg !3371

if.then20:                                        ; preds = %land.lhs.true18
  %28 = load i32, i32* %fd_cwd, align 4, !dbg !3372
  %29 = load i8*, i8** %filename, align 8, !dbg !3374
  %30 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !3375
  %call21 = call i32 @write_protected_non_symlink(i32 %28, i8* %29, %struct.stat* %30), !dbg !3376
  store i32 %call21, i32* %write_protected, align 4, !dbg !3377
  %call22 = call i32* @__errno_location() #15, !dbg !3378
  %31 = load i32, i32* %call22, align 4, !dbg !3378, !ctir !5
  store i32 %31, i32* %wp_errno, align 4, !dbg !3379
  br label %if.end23, !dbg !3380

if.end23:                                         ; preds = %if.then20, %land.lhs.true18, %lor.lhs.false, %if.end13
  %32 = load i32, i32* %write_protected, align 4, !dbg !3381
  %tobool24 = icmp ne i32 %32, 0, !dbg !3381
  br i1 %tobool24, label %if.then28, label %lor.lhs.false25, !dbg !3383

lor.lhs.false25:                                  ; preds = %if.end23
  %33 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3384
  %interactive26 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %33, i32 0, i32 1, !dbg !3385, !ctir !2829
  %34 = load i32, i32* %interactive26, align 4, !dbg !3385, !ctir !97
  %cmp27 = icmp eq i32 %34, 3, !dbg !3386
  br i1 %cmp27, label %if.then28, label %if.end99, !dbg !3387

if.then28:                                        ; preds = %lor.lhs.false25, %if.end23
  %35 = load i32, i32* %write_protected, align 4, !dbg !3388
  %cmp29 = icmp sle i32 0, %35, !dbg !3391
  br i1 %cmp29, label %land.lhs.true30, label %if.end47, !dbg !3392

land.lhs.true30:                                  ; preds = %if.then28
  %36 = load i32, i32* %dirent_type, align 4, !dbg !3393
  %cmp31 = icmp eq i32 %36, 0, !dbg !3394
  br i1 %cmp31, label %if.then32, label %if.end47, !dbg !3395

if.then32:                                        ; preds = %land.lhs.true30
  %37 = load i32, i32* %fd_cwd, align 4, !dbg !3396
  %38 = load i8*, i8** %filename, align 8, !dbg !3399
  %39 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !3400
  %call33 = call i32 @cache_fstatat(i32 %37, i8* %38, %struct.stat* %39, i32 256), !dbg !3401
  %cmp34 = icmp eq i32 %call33, 0, !dbg !3402
  br i1 %cmp34, label %if.then35, label %if.else44, !dbg !3403

if.then35:                                        ; preds = %if.then32
  %40 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !3404
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 3, !dbg !3404, !ctir !1097
  %41 = load i32, i32* %st_mode, align 8, !dbg !3404, !ctir !165
  %and = and i32 %41, 61440, !dbg !3404
  %cmp36 = icmp eq i32 %and, 40960, !dbg !3404
  br i1 %cmp36, label %if.then37, label %if.else, !dbg !3407

if.then37:                                        ; preds = %if.then35
  store i32 10, i32* %dirent_type, align 4, !dbg !3408
  br label %if.end43, !dbg !3409

if.else:                                          ; preds = %if.then35
  %42 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !3410
  %st_mode38 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 3, !dbg !3410, !ctir !1097
  %43 = load i32, i32* %st_mode38, align 8, !dbg !3410, !ctir !165
  %and39 = and i32 %43, 61440, !dbg !3410
  %cmp40 = icmp eq i32 %and39, 16384, !dbg !3410
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !3412

if.then41:                                        ; preds = %if.else
  store i32 4, i32* %dirent_type, align 4, !dbg !3413
  br label %if.end42, !dbg !3414

if.end42:                                         ; preds = %if.then41, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then37
  br label %if.end46, !dbg !3415

if.else44:                                        ; preds = %if.then32
  store i32 -1, i32* %write_protected, align 4, !dbg !3416
  %call45 = call i32* @__errno_location() #15, !dbg !3418
  %44 = load i32, i32* %call45, align 4, !dbg !3418, !ctir !5
  store i32 %44, i32* %wp_errno, align 4, !dbg !3419
  br label %if.end46

if.end46:                                         ; preds = %if.else44, %if.end43
  br label %if.end47, !dbg !3420

if.end47:                                         ; preds = %if.end46, %land.lhs.true30, %if.then28
  %45 = load i32, i32* %write_protected, align 4, !dbg !3421
  %cmp48 = icmp sle i32 0, %45, !dbg !3423
  br i1 %cmp48, label %if.then49, label %if.end62, !dbg !3424

if.then49:                                        ; preds = %if.end47
  %46 = load i32, i32* %dirent_type, align 4, !dbg !3425
  switch i32 %46, label %sw.epilog [
    i32 10, label %sw.bb
    i32 4, label %sw.bb54
  ], !dbg !3426

sw.bb:                                            ; preds = %if.then49
  %47 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3427
  %interactive50 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %47, i32 0, i32 1, !dbg !3430, !ctir !2829
  %48 = load i32, i32* %interactive50, align 4, !dbg !3430, !ctir !97
  %cmp51 = icmp ne i32 %48, 3, !dbg !3431
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !3432

if.then52:                                        ; preds = %sw.bb
  store i32 2, i32* %retval, align 4, !dbg !3433
  br label %return, !dbg !3433

if.end53:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !3434

sw.bb54:                                          ; preds = %if.then49
  %49 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3435
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %49, i32 0, i32 3, !dbg !3437, !ctir !2829
  %50 = load i8, i8* %recursive, align 1, !dbg !3437
  %tobool55 = trunc i8 %50 to i1, !dbg !3437, !ctir !139
  br i1 %tobool55, label %if.end61, label %lor.lhs.false56, !dbg !3438

lor.lhs.false56:                                  ; preds = %sw.bb54
  %51 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3439
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %51, i32 0, i32 4, !dbg !3440, !ctir !2829
  %52 = load i8, i8* %remove_empty_directories, align 2, !dbg !3440
  %tobool57 = trunc i8 %52 to i1, !dbg !3440, !ctir !139
  br i1 %tobool57, label %land.lhs.true58, label %if.then60, !dbg !3441

land.lhs.true58:                                  ; preds = %lor.lhs.false56
  %53 = load i8, i8* %is_empty, align 1, !dbg !3442
  %tobool59 = trunc i8 %53 to i1, !dbg !3442
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !3443

if.then60:                                        ; preds = %land.lhs.true58, %lor.lhs.false56
  store i32 -1, i32* %write_protected, align 4, !dbg !3444
  store i32 21, i32* %wp_errno, align 4, !dbg !3446
  br label %if.end61, !dbg !3447

if.end61:                                         ; preds = %if.then60, %land.lhs.true58, %sw.bb54
  br label %sw.epilog, !dbg !3448

sw.epilog:                                        ; preds = %if.then49, %if.end61, %if.end53
  br label %if.end62, !dbg !3449

if.end62:                                         ; preds = %sw.epilog, %if.end47
  call void @llvm.dbg.declare(metadata i8** %quoted_name, metadata !3450, metadata !DIExpression()), !dbg !3451
  %54 = load i8*, i8** %full_name, align 8, !dbg !3452
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !3452
  store i8* %call63, i8** %quoted_name, align 8, !dbg !3451
  %55 = load i32, i32* %write_protected, align 4, !dbg !3453
  %cmp64 = icmp slt i32 %55, 0, !dbg !3455
  br i1 %cmp64, label %if.then65, label %if.end67, !dbg !3456

if.then65:                                        ; preds = %if.end62
  %56 = load i32, i32* %wp_errno, align 4, !dbg !3457
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #12, !dbg !3459
  %57 = load i8*, i8** %quoted_name, align 8, !dbg !3460
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %56, i8* %call66, i8* %57), !dbg !3461
  store i32 4, i32* %retval, align 4, !dbg !3462
  br label %return, !dbg !3462

if.end67:                                         ; preds = %if.end62
  %58 = load i32, i32* %dirent_type, align 4, !dbg !3463
  %cmp68 = icmp eq i32 %58, 4, !dbg !3465
  br i1 %cmp68, label %land.lhs.true69, label %if.else79, !dbg !3466

land.lhs.true69:                                  ; preds = %if.end67
  %59 = load i32, i32* %mode.addr, align 4, !dbg !3467
  %cmp70 = icmp eq i32 %59, 2, !dbg !3468
  br i1 %cmp70, label %land.lhs.true71, label %if.else79, !dbg !3469

land.lhs.true71:                                  ; preds = %land.lhs.true69
  %60 = load i8, i8* %is_empty, align 1, !dbg !3470
  %tobool72 = trunc i8 %60 to i1, !dbg !3470
  br i1 %tobool72, label %if.else79, label %if.then73, !dbg !3471

if.then73:                                        ; preds = %land.lhs.true71
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3472
  %62 = load i32, i32* %write_protected, align 4, !dbg !3473
  %tobool74 = icmp ne i32 %62, 0, !dbg !3473
  br i1 %tobool74, label %cond.true, label %cond.false, !dbg !3473

cond.true:                                        ; preds = %if.then73
  %call75 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.19.83, i64 0, i64 0)) #12, !dbg !3474
  br label %cond.end, !dbg !3473

cond.false:                                       ; preds = %if.then73
  %call76 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20.84, i64 0, i64 0)) #12, !dbg !3475
  br label %cond.end, !dbg !3473

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond77 = phi i8* [ %call75, %cond.true ], [ %call76, %cond.false ], !dbg !3473
  %63 = load i8*, i8** @program_name, align 8, !dbg !3476
  %64 = load i8*, i8** %quoted_name, align 8, !dbg !3477
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %cond77, i8* %63, i8* %64), !dbg !3478
  br label %if.end95, !dbg !3478

if.else79:                                        ; preds = %land.lhs.true71, %land.lhs.true69, %if.end67
  %65 = load i32, i32* %fd_cwd, align 4, !dbg !3479
  %66 = load i8*, i8** %filename, align 8, !dbg !3482
  %67 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !3483
  %call80 = call i32 @cache_fstatat(i32 %65, i8* %66, %struct.stat* %67, i32 256), !dbg !3484
  %cmp81 = icmp ne i32 %call80, 0, !dbg !3485
  br i1 %cmp81, label %if.then82, label %if.end85, !dbg !3486

if.then82:                                        ; preds = %if.else79
  %call83 = call i32* @__errno_location() #15, !dbg !3487
  %68 = load i32, i32* %call83, align 4, !dbg !3487, !ctir !5
  %call84 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #12, !dbg !3489
  %69 = load i8*, i8** %quoted_name, align 8, !dbg !3490
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %68, i8* %call84, i8* %69), !dbg !3491
  store i32 4, i32* %retval, align 4, !dbg !3492
  br label %return, !dbg !3492

if.end85:                                         ; preds = %if.else79
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3493
  %71 = load i32, i32* %write_protected, align 4, !dbg !3494
  %tobool86 = icmp ne i32 %71, 0, !dbg !3494
  br i1 %tobool86, label %cond.true87, label %cond.false89, !dbg !3494

cond.true87:                                      ; preds = %if.end85
  %call88 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21.85, i64 0, i64 0)) #12, !dbg !3495
  br label %cond.end91, !dbg !3494

cond.false89:                                     ; preds = %if.end85
  %call90 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22.86, i64 0, i64 0)) #12, !dbg !3496
  br label %cond.end91, !dbg !3494

cond.end91:                                       ; preds = %cond.false89, %cond.true87
  %cond92 = phi i8* [ %call88, %cond.true87 ], [ %call90, %cond.false89 ], !dbg !3494
  %72 = load i8*, i8** @program_name, align 8, !dbg !3497
  %73 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !3498
  %call93 = call i8* @file_type(%struct.stat* %73) #14, !dbg !3499
  %74 = load i8*, i8** %quoted_name, align 8, !dbg !3500
  %call94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* %cond92, i8* %72, i8* %call93, i8* %74), !dbg !3501
  br label %if.end95

if.end95:                                         ; preds = %cond.end91, %cond.end
  %call96 = call zeroext i1 @yesno(), !dbg !3502
  br i1 %call96, label %if.end98, label %if.then97, !dbg !3504

if.then97:                                        ; preds = %if.end95
  store i32 3, i32* %retval, align 4, !dbg !3505
  br label %return, !dbg !3505

if.end98:                                         ; preds = %if.end95
  br label %if.end99, !dbg !3506

if.end99:                                         ; preds = %if.end98, %lor.lhs.false25
  store i32 2, i32* %retval, align 4, !dbg !3507
  br label %return, !dbg !3507

return:                                           ; preds = %if.end99, %if.then97, %if.then82, %if.then65, %if.then52, %if.then12, %if.then10
  %75 = load i32, i32* %retval, align 4, !dbg !3508
  ret i32 %75, !dbg !3508
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @excise(%struct.FTS* %fts, %struct._ftsent* %ent, %struct.rm_options* %x, i1 zeroext %is_dir) #4 !dbg !3509 {
entry:
  %retval = alloca i32, align 4
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %is_dir.addr = alloca i8, align 1
  %flag = alloca i32, align 4, !ctir !5
  %st = alloca %struct.stat, align 8, !ctir !1097
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !3512, metadata !DIExpression()), !dbg !3513
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !3514, metadata !DIExpression()), !dbg !3515
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3516, metadata !DIExpression()), !dbg !3517
  %frombool = zext i1 %is_dir to i8
  store i8 %frombool, i8* %is_dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_dir.addr, metadata !3518, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !3520, metadata !DIExpression()), !dbg !3521
  %0 = load i8, i8* %is_dir.addr, align 1, !dbg !3522
  %tobool = trunc i8 %0 to i1, !dbg !3522
  %1 = zext i1 %tobool to i64, !dbg !3522
  %cond = select i1 %tobool, i32 512, i32 0, !dbg !3522
  store i32 %cond, i32* %flag, align 4, !dbg !3521
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3523
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 6, !dbg !3525, !ctir !1068
  %3 = load i32, i32* %fts_cwd_fd, align 4, !dbg !3525, !ctir !5
  %4 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3526
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 6, !dbg !3527, !ctir !1161
  %5 = load i8*, i8** %fts_accpath, align 8, !dbg !3527, !ctir !7
  %6 = load i32, i32* %flag, align 4, !dbg !3528
  %call = call i32 @unlinkat(i32 %3, i8* %5, i32 %6) #12, !dbg !3529
  %cmp = icmp eq i32 %call, 0, !dbg !3530
  br i1 %cmp, label %if.then, label %if.end9, !dbg !3531

if.then:                                          ; preds = %entry
  %7 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3532
  %verbose = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 8, !dbg !3535, !ctir !2829
  %8 = load i8, i8* %verbose, align 2, !dbg !3535
  %tobool1 = trunc i8 %8 to i1, !dbg !3535, !ctir !139
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !3536

if.then2:                                         ; preds = %if.then
  %9 = load i8, i8* %is_dir.addr, align 1, !dbg !3537
  %tobool3 = trunc i8 %9 to i1, !dbg !3537
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !3537

cond.true:                                        ; preds = %if.then2
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23.81, i64 0, i64 0)) #12, !dbg !3539
  br label %cond.end, !dbg !3537

cond.false:                                       ; preds = %if.then2
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24.82, i64 0, i64 0)) #12, !dbg !3540
  br label %cond.end, !dbg !3537

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond6 = phi i8* [ %call4, %cond.true ], [ %call5, %cond.false ], !dbg !3537
  %10 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3541
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 7, !dbg !3541, !ctir !1161
  %11 = load i8*, i8** %fts_path, align 8, !dbg !3541, !ctir !7
  %call7 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !3541
  %call8 = call i32 (i8*, ...) @printf(i8* %cond6, i8* %call7), !dbg !3542
  br label %if.end, !dbg !3543

if.end:                                           ; preds = %cond.end, %if.then
  store i32 2, i32* %retval, align 4, !dbg !3544
  br label %return, !dbg !3544

if.end9:                                          ; preds = %entry
  %call10 = call i32* @__errno_location() #15, !dbg !3545
  %12 = load i32, i32* %call10, align 4, !dbg !3545, !ctir !5
  %cmp11 = icmp eq i32 %12, 30, !dbg !3547
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !3548

if.then12:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3549, metadata !DIExpression()), !dbg !3551
  %13 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3552
  %fts_cwd_fd13 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 6, !dbg !3554, !ctir !1068
  %14 = load i32, i32* %fts_cwd_fd13, align 4, !dbg !3554, !ctir !5
  %15 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3555
  %fts_accpath14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 6, !dbg !3556, !ctir !1161
  %16 = load i8*, i8** %fts_accpath14, align 8, !dbg !3556, !ctir !7
  %call15 = call i32 @lstatat(i32 %14, i8* %16, %struct.stat* %st), !dbg !3557
  %tobool16 = icmp ne i32 %call15, 0, !dbg !3557
  br i1 %tobool16, label %land.lhs.true, label %if.then19, !dbg !3558

land.lhs.true:                                    ; preds = %if.then12
  %call17 = call i32* @__errno_location() #15, !dbg !3559
  %17 = load i32, i32* %call17, align 4, !dbg !3559, !ctir !5
  %cmp18 = icmp eq i32 %17, 2, !dbg !3560
  br i1 %cmp18, label %if.end21, label %if.then19, !dbg !3561

if.then19:                                        ; preds = %land.lhs.true, %if.then12
  %call20 = call i32* @__errno_location() #15, !dbg !3562
  store i32 30, i32* %call20, align 4, !dbg !3563, !ctir !5
  br label %if.end21, !dbg !3562

if.end21:                                         ; preds = %if.then19, %land.lhs.true
  br label %if.end22, !dbg !3564

if.end22:                                         ; preds = %if.end21, %if.end9
  %18 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3565
  %call23 = call i32* @__errno_location() #15, !dbg !3567
  %19 = load i32, i32* %call23, align 4, !dbg !3567, !ctir !5
  %call24 = call zeroext i1 @ignorable_missing(%struct.rm_options* %18, i32 %19), !dbg !3568
  br i1 %call24, label %if.then25, label %if.end26, !dbg !3569

if.then25:                                        ; preds = %if.end22
  store i32 2, i32* %retval, align 4, !dbg !3570
  br label %return, !dbg !3570

if.end26:                                         ; preds = %if.end22
  %20 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3571
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 15, !dbg !3573, !ctir !1161
  %21 = load i16, i16* %fts_info, align 8, !dbg !3573, !ctir !34
  %conv = zext i16 %21 to i32, !dbg !3571
  %cmp27 = icmp eq i32 %conv, 4, !dbg !3574
  br i1 %cmp27, label %land.lhs.true29, label %if.end54, !dbg !3575

land.lhs.true29:                                  ; preds = %if.end26
  %call30 = call i32* @__errno_location() #15, !dbg !3576
  %22 = load i32, i32* %call30, align 4, !dbg !3576, !ctir !5
  %cmp31 = icmp eq i32 %22, 39, !dbg !3577
  br i1 %cmp31, label %land.lhs.true44, label %lor.lhs.false, !dbg !3578

lor.lhs.false:                                    ; preds = %land.lhs.true29
  %call33 = call i32* @__errno_location() #15, !dbg !3579
  %23 = load i32, i32* %call33, align 4, !dbg !3579, !ctir !5
  %cmp34 = icmp eq i32 %23, 21, !dbg !3580
  br i1 %cmp34, label %land.lhs.true44, label %lor.lhs.false36, !dbg !3581

lor.lhs.false36:                                  ; preds = %lor.lhs.false
  %call37 = call i32* @__errno_location() #15, !dbg !3582
  %24 = load i32, i32* %call37, align 4, !dbg !3582, !ctir !5
  %cmp38 = icmp eq i32 %24, 20, !dbg !3583
  br i1 %cmp38, label %land.lhs.true44, label %lor.lhs.false40, !dbg !3584

lor.lhs.false40:                                  ; preds = %lor.lhs.false36
  %call41 = call i32* @__errno_location() #15, !dbg !3585
  %25 = load i32, i32* %call41, align 4, !dbg !3585, !ctir !5
  %cmp42 = icmp eq i32 %25, 17, !dbg !3586
  br i1 %cmp42, label %land.lhs.true44, label %if.end54, !dbg !3587

land.lhs.true44:                                  ; preds = %lor.lhs.false40, %lor.lhs.false36, %lor.lhs.false, %land.lhs.true29
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3588
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 8, !dbg !3589, !ctir !1161
  %27 = load i32, i32* %fts_errno, align 8, !dbg !3589, !ctir !5
  %cmp45 = icmp eq i32 %27, 1, !dbg !3590
  br i1 %cmp45, label %if.then51, label %lor.lhs.false47, !dbg !3591

lor.lhs.false47:                                  ; preds = %land.lhs.true44
  %28 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3592
  %fts_errno48 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 8, !dbg !3593, !ctir !1161
  %29 = load i32, i32* %fts_errno48, align 8, !dbg !3593, !ctir !5
  %cmp49 = icmp eq i32 %29, 13, !dbg !3594
  br i1 %cmp49, label %if.then51, label %if.end54, !dbg !3595

if.then51:                                        ; preds = %lor.lhs.false47, %land.lhs.true44
  %30 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3596
  %fts_errno52 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 8, !dbg !3597, !ctir !1161
  %31 = load i32, i32* %fts_errno52, align 8, !dbg !3597, !ctir !5
  %call53 = call i32* @__errno_location() #15, !dbg !3598
  store i32 %31, i32* %call53, align 4, !dbg !3599, !ctir !5
  br label %if.end54, !dbg !3598

if.end54:                                         ; preds = %if.then51, %lor.lhs.false47, %lor.lhs.false40, %if.end26
  %call55 = call i32* @__errno_location() #15, !dbg !3600
  %32 = load i32, i32* %call55, align 4, !dbg !3600, !ctir !5
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #12, !dbg !3601
  %33 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3602
  %fts_path57 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 7, !dbg !3602, !ctir !1161
  %34 = load i8*, i8** %fts_path57, align 8, !dbg !3602, !ctir !7
  %call58 = call i8* @quotearg_style(i32 4, i8* %34), !dbg !3602
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %32, i8* %call56, i8* %call58), !dbg !3603
  %35 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3604
  call void @mark_ancestor_dirs(%struct._ftsent* %35), !dbg !3605
  store i32 4, i32* %retval, align 4, !dbg !3606
  br label %return, !dbg !3606

return:                                           ; preds = %if.end54, %if.then25, %if.end
  %36 = load i32, i32* %retval, align 4, !dbg !3607
  ret i32 %36, !dbg !3607
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind
declare dso_local i32 @unlinkat(i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_missing(%struct.rm_options* %x, i32 %errnum) #4 !dbg !3608 {
entry:
  %x.addr = alloca %struct.rm_options*, align 8
  %errnum.addr = alloca i32, align 4
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3611, metadata !DIExpression()), !dbg !3612
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !3613, metadata !DIExpression()), !dbg !3614
  %0 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3615
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %0, i32 0, i32 0, !dbg !3616, !ctir !2829
  %1 = load i8, i8* %ignore_missing_files, align 8, !dbg !3616
  %tobool = trunc i8 %1 to i1, !dbg !3616, !ctir !139
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3617

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %errnum.addr, align 4, !dbg !3618
  %call = call zeroext i1 @nonexistent_file_errno(i32 %2), !dbg !3619
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %call, %land.rhs ], !dbg !3620
  ret i1 %3, !dbg !3621
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @nonexistent_file_errno(i32 %errnum) #4 !dbg !3622 {
entry:
  %retval = alloca i1, align 1
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !3625, metadata !DIExpression()), !dbg !3626
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !3627
  switch i32 %0, label %sw.default [
    i32 84, label %sw.bb
    i32 22, label %sw.bb
    i32 2, label %sw.bb
    i32 20, label %sw.bb
  ], !dbg !3628

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !3629
  br label %return, !dbg !3629

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !3631
  br label %return, !dbg !3631

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !3632
  ret i1 %1, !dbg !3632
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.stat* @cache_stat_init(%struct.stat* %st) #4 !dbg !3633 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !3636, metadata !DIExpression()), !dbg !3637
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3638
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 8, !dbg !3639, !ctir !1097
  store i64 -1, i64* %st_size, align 8, !dbg !3640, !ctir !30
  %1 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3641
  ret %struct.stat* %1, !dbg !3642
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @write_protected_non_symlink(i32 %fd_cwd, i8* %file, %struct.stat* %buf) #4 !dbg !3643 {
entry:
  %retval = alloca i32, align 4
  %fd_cwd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %buf.addr = alloca %struct.stat*, align 8
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd_cwd.addr, metadata !3646, metadata !DIExpression()), !dbg !3647
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3648, metadata !DIExpression()), !dbg !3649
  store %struct.stat* %buf, %struct.stat** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %buf.addr, metadata !3650, metadata !DIExpression()), !dbg !3651
  %call = call zeroext i1 @can_write_any_file(), !dbg !3652
  br i1 %call, label %if.then, label %if.end, !dbg !3654

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3655
  br label %return, !dbg !3655

if.end:                                           ; preds = %entry
  %0 = load i32, i32* %fd_cwd.addr, align 4, !dbg !3656
  %1 = load i8*, i8** %file.addr, align 8, !dbg !3658
  %2 = load %struct.stat*, %struct.stat** %buf.addr, align 8, !dbg !3659
  %call1 = call i32 @cache_fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256), !dbg !3660
  %cmp = icmp ne i32 %call1, 0, !dbg !3661
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !3662

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !3663
  br label %return, !dbg !3663

if.end3:                                          ; preds = %if.end
  %3 = load %struct.stat*, %struct.stat** %buf.addr, align 8, !dbg !3664
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !3664, !ctir !1097
  %4 = load i32, i32* %st_mode, align 8, !dbg !3664, !ctir !165
  %and = and i32 %4, 61440, !dbg !3664
  %cmp4 = icmp eq i32 %and, 40960, !dbg !3664
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !3666

if.then5:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !3667
  br label %return, !dbg !3667

if.end6:                                          ; preds = %if.end3
  %5 = load i32, i32* %fd_cwd.addr, align 4, !dbg !3668
  %6 = load i8*, i8** %file.addr, align 8, !dbg !3671
  %call7 = call i32 @faccessat(i32 %5, i8* %6, i32 2, i32 512) #12, !dbg !3672
  %cmp8 = icmp eq i32 %call7, 0, !dbg !3673
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !3674

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !3675
  br label %return, !dbg !3675

if.end10:                                         ; preds = %if.end6
  %call11 = call i32* @__errno_location() #15, !dbg !3676
  %7 = load i32, i32* %call11, align 4, !dbg !3676, !ctir !5
  %cmp12 = icmp eq i32 %7, 13, !dbg !3677
  %8 = zext i1 %cmp12 to i64, !dbg !3676
  %cond = select i1 %cmp12, i32 1, i32 -1, !dbg !3676
  store i32 %cond, i32* %retval, align 4, !dbg !3678
  br label %return, !dbg !3678

return:                                           ; preds = %if.end10, %if.then9, %if.then5, %if.then2, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !3679
  ret i32 %9, !dbg !3679
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cache_fstatat(i32 %fd, i8* %file, %struct.stat* %st, i32 %flag) #4 !dbg !3680 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %flag.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3683, metadata !DIExpression()), !dbg !3684
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3685, metadata !DIExpression()), !dbg !3686
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !3687, metadata !DIExpression()), !dbg !3688
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !3689, metadata !DIExpression()), !dbg !3690
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3691
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 8, !dbg !3693, !ctir !1097
  %1 = load i64, i64* %st_size, align 8, !dbg !3693, !ctir !30
  %cmp = icmp eq i64 %1, -1, !dbg !3694
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3695

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %fd.addr, align 4, !dbg !3696
  %3 = load i8*, i8** %file.addr, align 8, !dbg !3697
  %4 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3698
  %5 = load i32, i32* %flag.addr, align 4, !dbg !3699
  %call = call i32 @fstatat(i32 %2, i8* %3, %struct.stat* %4, i32 %5) #12, !dbg !3700
  %cmp1 = icmp ne i32 %call, 0, !dbg !3701
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3702

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3703
  %st_size2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 8, !dbg !3705, !ctir !1097
  store i64 -2, i64* %st_size2, align 8, !dbg !3706, !ctir !30
  %call3 = call i32* @__errno_location() #15, !dbg !3707
  %7 = load i32, i32* %call3, align 4, !dbg !3707, !ctir !5
  %conv = sext i32 %7 to i64, !dbg !3707
  %8 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3708
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 1, !dbg !3709, !ctir !1097
  store i64 %conv, i64* %st_ino, align 8, !dbg !3710, !ctir !257
  br label %if.end, !dbg !3711

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3712
  %st_size4 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 8, !dbg !3714, !ctir !1097
  %10 = load i64, i64* %st_size4, align 8, !dbg !3714, !ctir !30
  %cmp5 = icmp sle i64 0, %10, !dbg !3715
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !3716

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3717
  br label %return, !dbg !3717

if.end8:                                          ; preds = %if.end
  %11 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3718
  %st_ino9 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 1, !dbg !3719, !ctir !1097
  %12 = load i64, i64* %st_ino9, align 8, !dbg !3719, !ctir !257
  %conv10 = trunc i64 %12 to i32, !dbg !3720
  %call11 = call i32* @__errno_location() #15, !dbg !3721
  store i32 %conv10, i32* %call11, align 4, !dbg !3722, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !3723
  br label %return, !dbg !3723

return:                                           ; preds = %if.end8, %if.then7
  %13 = load i32, i32* %retval, align 4, !dbg !3724
  ret i32 %13, !dbg !3724
}

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @faccessat(i32, i8*, i32, i32) #2

declare dso_local i32 @openat(i32, i8*, i32, ...) #3

declare dso_local %struct.__dirstream* @fdopendir(i32) #3

declare dso_local i32 @close(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %dirp) #4 !dbg !3725 {
entry:
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %dp = alloca %struct.dirent*, align 8, !ctir !1178
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !3728, metadata !DIExpression()), !dbg !3729
  br label %while.body, !dbg !3730

while.body:                                       ; preds = %entry, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !3731, metadata !DIExpression()), !dbg !3733
  %0 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !3734
  %call = call %struct.dirent* @readdir(%struct.__dirstream* %0), !dbg !3735
  store %struct.dirent* %call, %struct.dirent** %dp, align 8, !dbg !3733
  %1 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !3736
  %cmp = icmp eq %struct.dirent* %1, null, !dbg !3738
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3739

lor.lhs.false:                                    ; preds = %while.body
  %2 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !3740
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %2, i32 0, i32 4, !dbg !3741, !ctir !1179
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !3740, !ctir !879
  %call1 = call zeroext i1 @dot_or_dotdot(i8* %arraydecay), !dbg !3742
  br i1 %call1, label %if.end, label %if.then, !dbg !3743

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %3 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !3744
  ret %struct.dirent* %3, !dbg !3745

if.end:                                           ; preds = %lor.lhs.false
  br label %while.body, !dbg !3730, !llvm.loop !3746
}

declare dso_local i32 @closedir(%struct.__dirstream*) #3

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_process_security_ctx(i8* %src_name, i8* %dst_name, i32 %mode, i1 zeroext %new_dst, %struct.cp_options* %x) #4 !dbg !3748 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %new_dst.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !139
  %some_errors = alloca i8, align 1, !ctir !139
  %con = alloca i8*, align 8, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !3794, metadata !DIExpression()), !dbg !3795
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !3796, metadata !DIExpression()), !dbg !3797
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3798, metadata !DIExpression()), !dbg !3799
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !3800, metadata !DIExpression()), !dbg !3801
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3802, metadata !DIExpression()), !dbg !3803
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3804
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 22, !dbg !3806, !ctir !3752
  %1 = load i8, i8* %preserve_security_context, align 1, !dbg !3806
  %tobool = trunc i8 %1 to i1, !dbg !3806, !ctir !139
  br i1 %tobool, label %if.then, label %if.else40, !dbg !3807

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !3808, metadata !DIExpression()), !dbg !3810
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3811
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !3812, !ctir !3752
  %3 = load i8, i8* %data_copy_required, align 1, !dbg !3812
  %tobool1 = trunc i8 %3 to i1, !dbg !3812, !ctir !139
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !3813

lor.rhs:                                          ; preds = %if.then
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3814
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 23, !dbg !3815, !ctir !3752
  %5 = load i8, i8* %require_preserve_context, align 2, !dbg !3815
  %tobool2 = trunc i8 %5 to i1, !dbg !3815, !ctir !139
  br label %lor.end, !dbg !3813

lor.end:                                          ; preds = %lor.rhs, %if.then
  %6 = phi i1 [ true, %if.then ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %6 to i8, !dbg !3810
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !3810
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !3816, metadata !DIExpression()), !dbg !3817
  %7 = load i8, i8* %all_errors, align 1, !dbg !3818
  %tobool4 = trunc i8 %7 to i1, !dbg !3818
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !3819

land.rhs:                                         ; preds = %lor.end
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3820
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 26, !dbg !3821, !ctir !3752
  %9 = load i8, i8* %reduce_diagnostics, align 1, !dbg !3821
  %tobool5 = trunc i8 %9 to i1, !dbg !3821, !ctir !139
  %lnot = xor i1 %tobool5, true, !dbg !3822
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %10 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !3823
  %frombool6 = zext i1 %10 to i8, !dbg !3817
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !3817
  call void @llvm.dbg.declare(metadata i8** %con, metadata !3824, metadata !DIExpression()), !dbg !3825
  %11 = load i8*, i8** %src_name.addr, align 8, !dbg !3826
  %call = call i32 @lgetfilecon(i8* %11, i8** %con), !dbg !3828
  %cmp = icmp sle i32 0, %call, !dbg !3829
  br i1 %cmp, label %if.then7, label %if.else, !dbg !3830

if.then7:                                         ; preds = %land.end
  %12 = load i8*, i8** %con, align 8, !dbg !3831
  %call8 = call i32 @setfscreatecon(i8* %12), !dbg !3834
  %cmp9 = icmp slt i32 %call8, 0, !dbg !3835
  br i1 %cmp9, label %if.then10, label %if.end23, !dbg !3836

if.then10:                                        ; preds = %if.then7
  %13 = load i8, i8* %all_errors, align 1, !dbg !3837
  %tobool11 = trunc i8 %13 to i1, !dbg !3837
  br i1 %tobool11, label %if.then15, label %lor.lhs.false, !dbg !3840

lor.lhs.false:                                    ; preds = %if.then10
  %14 = load i8, i8* %some_errors, align 1, !dbg !3841
  %tobool12 = trunc i8 %14 to i1, !dbg !3841
  br i1 %tobool12, label %land.lhs.true, label %if.end, !dbg !3842

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call13 = call i32* @__errno_location() #15, !dbg !3843
  %15 = load i32, i32* %call13, align 4, !dbg !3843, !ctir !5
  %call14 = call zeroext i1 @errno_unsupported(i32 %15), !dbg !3844
  br i1 %call14, label %if.end, label %if.then15, !dbg !3845

if.then15:                                        ; preds = %land.lhs.true, %if.then10
  %call16 = call i32* @__errno_location() #15, !dbg !3846
  %16 = load i32, i32* %call16, align 4, !dbg !3846, !ctir !5
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.87, i64 0, i64 0)) #12, !dbg !3847
  %17 = load i8*, i8** %con, align 8, !dbg !3848
  %call18 = call i8* @quote(i8* %17), !dbg !3849
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %16, i8* %call17, i8* %call18), !dbg !3850
  br label %if.end, !dbg !3850

if.end:                                           ; preds = %if.then15, %land.lhs.true, %lor.lhs.false
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3851
  %require_preserve_context19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 23, !dbg !3853, !ctir !3752
  %19 = load i8, i8* %require_preserve_context19, align 2, !dbg !3853
  %tobool20 = trunc i8 %19 to i1, !dbg !3853, !ctir !139
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !3854

if.then21:                                        ; preds = %if.end
  %20 = load i8*, i8** %con, align 8, !dbg !3855
  call void @freecon(i8* %20), !dbg !3857
  store i1 false, i1* %retval, align 1, !dbg !3858
  br label %return, !dbg !3858

if.end22:                                         ; preds = %if.end
  br label %if.end23, !dbg !3859

if.end23:                                         ; preds = %if.end22, %if.then7
  %21 = load i8*, i8** %con, align 8, !dbg !3860
  call void @freecon(i8* %21), !dbg !3861
  br label %if.end39, !dbg !3862

if.else:                                          ; preds = %land.end
  %22 = load i8, i8* %all_errors, align 1, !dbg !3863
  %tobool24 = trunc i8 %22 to i1, !dbg !3863
  br i1 %tobool24, label %if.then30, label %lor.lhs.false25, !dbg !3866

lor.lhs.false25:                                  ; preds = %if.else
  %23 = load i8, i8* %some_errors, align 1, !dbg !3867
  %tobool26 = trunc i8 %23 to i1, !dbg !3867
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !3868

land.lhs.true27:                                  ; preds = %lor.lhs.false25
  %call28 = call i32* @__errno_location() #15, !dbg !3869
  %24 = load i32, i32* %call28, align 4, !dbg !3869, !ctir !5
  %call29 = call zeroext i1 @errno_unsupported(i32 %24), !dbg !3870
  br i1 %call29, label %if.end34, label %if.then30, !dbg !3871

if.then30:                                        ; preds = %land.lhs.true27, %if.else
  %call31 = call i32* @__errno_location() #15, !dbg !3872
  %25 = load i32, i32* %call31, align 4, !dbg !3872, !ctir !5
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1.88, i64 0, i64 0)) #12, !dbg !3874
  %26 = load i8*, i8** %src_name.addr, align 8, !dbg !3875
  %call33 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !3875
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %25, i8* %call32, i8* %call33), !dbg !3876
  br label %if.end34, !dbg !3877

if.end34:                                         ; preds = %if.then30, %land.lhs.true27, %lor.lhs.false25
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3878
  %require_preserve_context35 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 23, !dbg !3880, !ctir !3752
  %28 = load i8, i8* %require_preserve_context35, align 2, !dbg !3880
  %tobool36 = trunc i8 %28 to i1, !dbg !3880, !ctir !139
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !3881

if.then37:                                        ; preds = %if.end34
  store i1 false, i1* %retval, align 1, !dbg !3882
  br label %return, !dbg !3882

if.end38:                                         ; preds = %if.end34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end23
  br label %if.end56, !dbg !3883

if.else40:                                        ; preds = %entry
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3884
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !3886, !ctir !3752
  %30 = load i8, i8* %set_security_context, align 1, !dbg !3886
  %tobool41 = trunc i8 %30 to i1, !dbg !3886, !ctir !139
  br i1 %tobool41, label %if.then42, label %if.end55, !dbg !3887

if.then42:                                        ; preds = %if.else40
  %31 = load i8, i8* %new_dst.addr, align 1, !dbg !3888
  %tobool43 = trunc i8 %31 to i1, !dbg !3888
  br i1 %tobool43, label %land.lhs.true44, label %if.end54, !dbg !3891

land.lhs.true44:                                  ; preds = %if.then42
  %32 = load i8*, i8** %dst_name.addr, align 8, !dbg !3892
  %33 = load i32, i32* %mode.addr, align 4, !dbg !3893
  %call45 = call i32 @defaultcon(i8* %32, i32 %33), !dbg !3894
  %cmp46 = icmp slt i32 %call45, 0, !dbg !3895
  br i1 %cmp46, label %land.lhs.true47, label %if.end54, !dbg !3896

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %call48 = call i32* @__errno_location() #15, !dbg !3897
  %34 = load i32, i32* %call48, align 4, !dbg !3897, !ctir !5
  %call49 = call zeroext i1 @ignorable_ctx_err(i32 %34), !dbg !3898
  br i1 %call49, label %if.end54, label %if.then50, !dbg !3899

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = call i32* @__errno_location() #15, !dbg !3900
  %35 = load i32, i32* %call51, align 4, !dbg !3900, !ctir !5
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.89, i64 0, i64 0)) #12, !dbg !3902
  %36 = load i8*, i8** %dst_name.addr, align 8, !dbg !3903
  %call53 = call i8* @quotearg_style(i32 4, i8* %36), !dbg !3903
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %35, i8* %call52, i8* %call53), !dbg !3904
  br label %if.end54, !dbg !3905

if.end54:                                         ; preds = %if.then50, %land.lhs.true47, %land.lhs.true44, %if.then42
  br label %if.end55, !dbg !3906

if.end55:                                         ; preds = %if.end54, %if.else40
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end39
  store i1 true, i1* %retval, align 1, !dbg !3907
  br label %return, !dbg !3907

return:                                           ; preds = %if.end56, %if.then37, %if.then21
  %37 = load i1, i1* %retval, align 1, !dbg !3908
  ret i1 %37, !dbg !3908
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %err) #4 !dbg !3909 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !3910, metadata !DIExpression()), !dbg !3911
  %0 = load i32, i32* %err.addr, align 4, !dbg !3912
  %cmp = icmp eq i32 %0, 95, !dbg !3913
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3914

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !3915
  %cmp1 = icmp eq i32 %1, 61, !dbg !3916
  br label %lor.end, !dbg !3914

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !3917
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon(i8* %path, i32 %mode) #4 !dbg !3918 {
entry:
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3922, metadata !DIExpression()), !dbg !3923
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3924, metadata !DIExpression()), !dbg !3925
  %call = call i32* @__errno_location() #15, !dbg !3926
  store i32 95, i32* %call, align 4, !dbg !3927, !ctir !5
  ret i32 -1, !dbg !3928
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err(i32 %err) #4 !dbg !3929 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !3930, metadata !DIExpression()), !dbg !3931
  %0 = load i32, i32* %err.addr, align 4, !dbg !3932
  %cmp = icmp eq i32 %0, 95, !dbg !3933
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3934

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !3935
  %cmp1 = icmp eq i32 %1, 61, !dbg !3936
  br label %lor.end, !dbg !3934

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !3937
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_file_security_ctx(i8* %dst_name, i1 zeroext %process_local, i1 zeroext %recurse, %struct.cp_options* %x) #4 !dbg !3938 {
entry:
  %retval = alloca i1, align 1
  %dst_name.addr = alloca i8*, align 8
  %process_local.addr = alloca i8, align 1
  %recurse.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !139
  %some_errors = alloca i8, align 1, !ctir !139
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !3941, metadata !DIExpression()), !dbg !3942
  %frombool = zext i1 %process_local to i8
  store i8 %frombool, i8* %process_local.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %process_local.addr, metadata !3943, metadata !DIExpression()), !dbg !3944
  %frombool1 = zext i1 %recurse to i8
  store i8 %frombool1, i8* %recurse.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !3945, metadata !DIExpression()), !dbg !3946
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3947, metadata !DIExpression()), !dbg !3948
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !3949, metadata !DIExpression()), !dbg !3950
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3951
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !3952, !ctir !3752
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !3952
  %tobool = trunc i8 %1 to i1, !dbg !3952, !ctir !139
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !3953

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3954
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 23, !dbg !3955, !ctir !3752
  %3 = load i8, i8* %require_preserve_context, align 2, !dbg !3955
  %tobool2 = trunc i8 %3 to i1, !dbg !3955, !ctir !139
  br label %lor.end, !dbg !3953

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %4 to i8, !dbg !3950
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !3950
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !3956, metadata !DIExpression()), !dbg !3957
  %5 = load i8, i8* %all_errors, align 1, !dbg !3958
  %tobool4 = trunc i8 %5 to i1, !dbg !3958
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !3959

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3960
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !3961, !ctir !3752
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !3961
  %tobool5 = trunc i8 %7 to i1, !dbg !3961, !ctir !139
  %lnot = xor i1 %tobool5, true, !dbg !3962
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !3963
  %frombool6 = zext i1 %8 to i8, !dbg !3957
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !3957
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !3964
  %10 = load i8, i8* %recurse.addr, align 1, !dbg !3966
  %tobool7 = trunc i8 %10 to i1, !dbg !3966
  %11 = load i8, i8* %process_local.addr, align 1, !dbg !3967
  %tobool8 = trunc i8 %11 to i1, !dbg !3967
  %call = call zeroext i1 @restorecon(i8* %9, i1 zeroext %tobool7, i1 zeroext %tobool8), !dbg !3968
  br i1 %call, label %if.end17, label %if.then, !dbg !3969

if.then:                                          ; preds = %land.end
  %12 = load i8, i8* %all_errors, align 1, !dbg !3970
  %tobool9 = trunc i8 %12 to i1, !dbg !3970
  br i1 %tobool9, label %if.then13, label %lor.lhs.false, !dbg !3973

lor.lhs.false:                                    ; preds = %if.then
  %13 = load i8, i8* %some_errors, align 1, !dbg !3974
  %tobool10 = trunc i8 %13 to i1, !dbg !3974
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !3975

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call11 = call i32* @__errno_location() #15, !dbg !3976
  %14 = load i32, i32* %call11, align 4, !dbg !3976, !ctir !5
  %call12 = call zeroext i1 @errno_unsupported(i32 %14), !dbg !3977
  br i1 %call12, label %if.end, label %if.then13, !dbg !3978

if.then13:                                        ; preds = %land.lhs.true, %if.then
  %call14 = call i32* @__errno_location() #15, !dbg !3979
  %15 = load i32, i32* %call14, align 4, !dbg !3979, !ctir !5
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3.90, i64 0, i64 0)) #12, !dbg !3980
  %16 = load i8*, i8** %dst_name.addr, align 8, !dbg !3981
  %call16 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %16), !dbg !3981
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call15, i8* %call16), !dbg !3982
  br label %if.end, !dbg !3982

if.end:                                           ; preds = %if.then13, %land.lhs.true, %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !3983
  br label %return, !dbg !3983

if.end17:                                         ; preds = %land.end
  store i1 true, i1* %retval, align 1, !dbg !3984
  br label %return, !dbg !3984

return:                                           ; preds = %if.end17, %if.end
  %17 = load i1, i1* %retval, align 1, !dbg !3985
  ret i1 %17, !dbg !3985
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !3986 {
entry:
  %path.addr = alloca i8*, align 8
  %recurse.addr = alloca i8, align 1
  %preserve.addr = alloca i8, align 1
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3989, metadata !DIExpression()), !dbg !3990
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !3991, metadata !DIExpression()), !dbg !3992
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !3993, metadata !DIExpression()), !dbg !3994
  %call = call i32* @__errno_location() #15, !dbg !3995
  store i32 95, i32* %call, align 4, !dbg !3996, !ctir !5
  ret i1 false, !dbg !3997
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @dest_info_init(%struct.cp_options* %x) #4 !dbg !3998 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4002, metadata !DIExpression()), !dbg !4003
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4004
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4005
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 37, !dbg !4006, !ctir !3753
  store %struct.hash_table* %call, %struct.hash_table** %dest_info, align 8, !dbg !4007, !ctir !238
  ret void, !dbg !4008
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @src_info_init(%struct.cp_options* %x) #4 !dbg !4009 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4010, metadata !DIExpression()), !dbg !4011
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash_no_name, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4012
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4013
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 38, !dbg !4014, !ctir !3753
  store %struct.hash_table* %call, %struct.hash_table** %src_info, align 8, !dbg !4015, !ctir !238
  ret void, !dbg !4016
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @copy(i8* %src_name, i8* %dst_name, i1 zeroext %nonexistent_dst, %struct.cp_options* %options, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4017 {
entry:
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %nonexistent_dst.addr = alloca i8, align 1
  %options.addr = alloca %struct.cp_options*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %first_dir_created_per_command_line_arg = alloca i8, align 1, !ctir !139
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4021, metadata !DIExpression()), !dbg !4022
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4023, metadata !DIExpression()), !dbg !4024
  %frombool = zext i1 %nonexistent_dst to i8
  store i8 %frombool, i8* %nonexistent_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %nonexistent_dst.addr, metadata !4025, metadata !DIExpression()), !dbg !4026
  store %struct.cp_options* %options, %struct.cp_options** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %options.addr, metadata !4027, metadata !DIExpression()), !dbg !4028
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4029, metadata !DIExpression()), !dbg !4030
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4031, metadata !DIExpression()), !dbg !4032
  %0 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4033
  %call = call zeroext i1 @valid_options(%struct.cp_options* %0) #14, !dbg !4033
  br i1 %call, label %cond.true, label %cond.false, !dbg !4033

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4033

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.95, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 3013, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.copy, i64 0, i64 0)) #13, !dbg !4033
  unreachable, !dbg !4033

1:                                                ; No predecessors!
  br label %cond.end, !dbg !4033

cond.end:                                         ; preds = %1, %cond.true
  %2 = load i8*, i8** %src_name.addr, align 8, !dbg !4034
  store i8* %2, i8** @top_level_src_name, align 8, !dbg !4035
  %3 = load i8*, i8** %dst_name.addr, align 8, !dbg !4036
  store i8* %3, i8** @top_level_dst_name, align 8, !dbg !4037
  call void @llvm.dbg.declare(metadata i8* %first_dir_created_per_command_line_arg, metadata !4038, metadata !DIExpression()), !dbg !4039
  store i8 0, i8* %first_dir_created_per_command_line_arg, align 1, !dbg !4039
  %4 = load i8*, i8** %src_name.addr, align 8, !dbg !4040
  %5 = load i8*, i8** %dst_name.addr, align 8, !dbg !4041
  %6 = load i8, i8* %nonexistent_dst.addr, align 1, !dbg !4042
  %tobool = trunc i8 %6 to i1, !dbg !4042
  %7 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4043
  %8 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4044
  %9 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4045
  %call1 = call zeroext i1 @copy_internal(i8* %4, i8* %5, i1 zeroext %tobool, %struct.stat* null, %struct.dir_list* null, %struct.cp_options* %7, i1 zeroext true, i8* %first_dir_created_per_command_line_arg, i8* %8, i8* %9), !dbg !4046
  ret i1 %call1, !dbg !4047
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @valid_options(%struct.cp_options* %co) #9 !dbg !4048 {
entry:
  %co.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %co, %struct.cp_options** %co.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %co.addr, metadata !4051, metadata !DIExpression()), !dbg !4052
  %0 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4053
  %cmp = icmp ne %struct.cp_options* %0, null, !dbg !4053
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4053

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4053

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.149, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2988, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4053
  unreachable, !dbg !4053

1:                                                ; No predecessors!
  br label %cond.end, !dbg !4053

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4054
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 0, !dbg !4054, !ctir !3752
  %3 = load i32, i32* %backup_type, align 8, !dbg !4054, !ctir !65
  %cmp1 = icmp ule i32 %3, 3, !dbg !4054
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !4054

cond.true2:                                       ; preds = %cond.end
  br label %cond.end4, !dbg !4054

cond.false3:                                      ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.150, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2989, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4054
  unreachable, !dbg !4054

4:                                                ; No predecessors!
  br label %cond.end4, !dbg !4054

cond.end4:                                        ; preds = %4, %cond.true2
  %5 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4055
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 3, !dbg !4055, !ctir !3752
  %6 = load i32, i32* %sparse_mode, align 4, !dbg !4055, !ctir !86
  %cmp5 = icmp eq i32 %6, 1, !dbg !4055
  br i1 %cmp5, label %cond.true11, label %lor.lhs.false, !dbg !4055

lor.lhs.false:                                    ; preds = %cond.end4
  %7 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4055
  %sparse_mode6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 3, !dbg !4055, !ctir !3752
  %8 = load i32, i32* %sparse_mode6, align 4, !dbg !4055, !ctir !86
  %cmp7 = icmp eq i32 %8, 2, !dbg !4055
  br i1 %cmp7, label %cond.true11, label %lor.lhs.false8, !dbg !4055

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4055
  %sparse_mode9 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 3, !dbg !4055, !ctir !3752
  %10 = load i32, i32* %sparse_mode9, align 4, !dbg !4055, !ctir !86
  %cmp10 = icmp eq i32 %10, 3, !dbg !4055
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !4055

cond.true11:                                      ; preds = %lor.lhs.false8, %lor.lhs.false, %cond.end4
  br label %cond.end13, !dbg !4055

cond.false12:                                     ; preds = %lor.lhs.false8
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.151, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2990, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4055
  unreachable, !dbg !4055

11:                                               ; No predecessors!
  br label %cond.end13, !dbg !4055

cond.end13:                                       ; preds = %11, %cond.true11
  %12 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4056
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 36, !dbg !4056, !ctir !3752
  %13 = load i32, i32* %reflink_mode, align 8, !dbg !4056, !ctir !92
  %cmp14 = icmp eq i32 %13, 0, !dbg !4056
  br i1 %cmp14, label %cond.true21, label %lor.lhs.false15, !dbg !4056

lor.lhs.false15:                                  ; preds = %cond.end13
  %14 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4056
  %reflink_mode16 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 36, !dbg !4056, !ctir !3752
  %15 = load i32, i32* %reflink_mode16, align 8, !dbg !4056, !ctir !92
  %cmp17 = icmp eq i32 %15, 1, !dbg !4056
  br i1 %cmp17, label %cond.true21, label %lor.lhs.false18, !dbg !4056

lor.lhs.false18:                                  ; preds = %lor.lhs.false15
  %16 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4056
  %reflink_mode19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %16, i32 0, i32 36, !dbg !4056, !ctir !3752
  %17 = load i32, i32* %reflink_mode19, align 8, !dbg !4056, !ctir !92
  %cmp20 = icmp eq i32 %17, 2, !dbg !4056
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !4056

cond.true21:                                      ; preds = %lor.lhs.false18, %lor.lhs.false15, %cond.end13
  br label %cond.end23, !dbg !4056

cond.false22:                                     ; preds = %lor.lhs.false18
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9.152, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2991, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4056
  unreachable, !dbg !4056

18:                                               ; No predecessors!
  br label %cond.end23, !dbg !4056

cond.end23:                                       ; preds = %18, %cond.true21
  %19 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4057
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 8, !dbg !4057, !ctir !3752
  %20 = load i8, i8* %hard_link, align 1, !dbg !4057
  %tobool = trunc i8 %20 to i1, !dbg !4057, !ctir !139
  br i1 %tobool, label %land.lhs.true, label %cond.true25, !dbg !4057

land.lhs.true:                                    ; preds = %cond.end23
  %21 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4057
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 29, !dbg !4057, !ctir !3752
  %22 = load i8, i8* %symbolic_link, align 4, !dbg !4057
  %tobool24 = trunc i8 %22 to i1, !dbg !4057, !ctir !139
  br i1 %tobool24, label %cond.false26, label %cond.true25, !dbg !4057

cond.true25:                                      ; preds = %land.lhs.true, %cond.end23
  br label %cond.end27, !dbg !4057

cond.false26:                                     ; preds = %land.lhs.true
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.153, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2992, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4057
  unreachable, !dbg !4057

23:                                               ; No predecessors!
  br label %cond.end27, !dbg !4057

cond.end27:                                       ; preds = %23, %cond.true25
  %24 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4058
  %reflink_mode28 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 36, !dbg !4058, !ctir !3752
  %25 = load i32, i32* %reflink_mode28, align 8, !dbg !4058, !ctir !92
  %cmp29 = icmp eq i32 %25, 2, !dbg !4058
  br i1 %cmp29, label %land.lhs.true30, label %cond.true33, !dbg !4058

land.lhs.true30:                                  ; preds = %cond.end27
  %26 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4058
  %sparse_mode31 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 3, !dbg !4058, !ctir !3752
  %27 = load i32, i32* %sparse_mode31, align 4, !dbg !4058, !ctir !86
  %cmp32 = icmp ne i32 %27, 2, !dbg !4058
  br i1 %cmp32, label %cond.false34, label %cond.true33, !dbg !4058

cond.true33:                                      ; preds = %land.lhs.true30, %cond.end27
  br label %cond.end35, !dbg !4058

cond.false34:                                     ; preds = %land.lhs.true30
  call void @__assert_fail(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.11.154, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2995, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4058
  unreachable, !dbg !4058

28:                                               ; No predecessors!
  br label %cond.end35, !dbg !4058

cond.end35:                                       ; preds = %28, %cond.true33
  ret i1 true, !dbg !4059
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_internal(i8* %src_name, i8* %dst_name, i1 zeroext %new_dst, %struct.stat* %parent, %struct.dir_list* %ancestors, %struct.cp_options* %x, i1 zeroext %command_line_arg, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4060 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %parent.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %src_sb = alloca %struct.stat, align 8, !ctir !335
  %dst_sb = alloca %struct.stat, align 8, !ctir !335
  %src_mode = alloca i32, align 4, !ctir !236
  %dst_mode = alloca i32, align 4, !ctir !236
  %dst_mode_bits = alloca i32, align 4, !ctir !236
  %omitted_permissions = alloca i32, align 4, !ctir !236
  %restore_dst_mode = alloca i8, align 1, !ctir !139
  %earlier_file = alloca i8*, align 8, !ctir !7
  %dst_backup = alloca i8*, align 8, !ctir !7
  %delayed_ok = alloca i8, align 1, !ctir !139
  %copied_as_regular = alloca i8, align 1, !ctir !139
  %dest_is_symlink = alloca i8, align 1, !ctir !139
  %have_dst_lstat = alloca i8, align 1, !ctir !139
  %rename_errno = alloca i32, align 4, !ctir !5
  %name = alloca i8*, align 8, !ctir !113
  %fstatat_flags = alloca i32, align 4, !ctir !5
  %dereference65 = alloca i8, align 1, !ctir !139
  %use_lstat = alloca i8, align 1, !ctir !139
  %fstatat_flags98 = alloca i32, align 4, !ctir !5
  %return_now = alloca i8, align 1, !ctir !139
  %options = alloca i32, align 4, !ctir !5
  %srcbase = alloca i8*, align 8, !ctir !113
  %fmt = alloca i8*, align 8, !ctir !113
  %tmp_backup = alloca i8*, align 8, !ctir !7
  %__old = alloca i8*, align 8, !ctir !113
  %__len = alloca i64, align 8, !ctir !52
  %__new = alloca i8*, align 8, !ctir !7
  %tmp = alloca i8*, align 8
  %lstat_ok = alloca i8, align 1, !ctir !139
  %tmp_buf = alloca %struct.stat, align 8, !ctir !335
  %dst_lstat_sb = alloca %struct.stat*, align 8, !ctir !334
  %dir = alloca %struct.dir_list*, align 8, !ctir !372
  %dot_sb = alloca %struct.stat, align 8, !ctir !335
  %dst_parent_sb = alloca %struct.stat, align 8, !ctir !335
  %dst_parent = alloca i8*, align 8, !ctir !7
  %in_current_dir = alloca i8, align 1, !ctir !139
  %err = alloca i32, align 4, !ctir !5
  %replace = alloca i8, align 1, !ctir !139
  %src_link_val = alloca i8*, align 8, !ctir !7
  %symlink_err = alloca i32, align 4, !ctir !5
  %dest_link_val = alloca i8*, align 8, !ctir !7
  %sb = alloca %struct.stat, align 8, !ctir !335
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !387
  %tmp952 = alloca %struct.timespec, align 8
  %tmp955 = alloca %struct.timespec, align 8
  %default_permissions = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4063, metadata !DIExpression()), !dbg !4064
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4065, metadata !DIExpression()), !dbg !4066
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !4067, metadata !DIExpression()), !dbg !4068
  store %struct.stat* %parent, %struct.stat** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %parent.addr, metadata !4069, metadata !DIExpression()), !dbg !4070
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !4071, metadata !DIExpression()), !dbg !4072
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4073, metadata !DIExpression()), !dbg !4074
  %frombool1 = zext i1 %command_line_arg to i8
  store i8 %frombool1, i8* %command_line_arg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4075, metadata !DIExpression()), !dbg !4076
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !4077, metadata !DIExpression()), !dbg !4078
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4079, metadata !DIExpression()), !dbg !4080
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4081, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !4083, metadata !DIExpression()), !dbg !4084
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_sb, metadata !4085, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !4087, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.declare(metadata i32* %dst_mode, metadata !4089, metadata !DIExpression()), !dbg !4090
  call void @llvm.dbg.declare(metadata i32* %dst_mode_bits, metadata !4091, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions, metadata !4093, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.declare(metadata i8* %restore_dst_mode, metadata !4095, metadata !DIExpression()), !dbg !4096
  store i8 0, i8* %restore_dst_mode, align 1, !dbg !4096
  call void @llvm.dbg.declare(metadata i8** %earlier_file, metadata !4097, metadata !DIExpression()), !dbg !4098
  store i8* null, i8** %earlier_file, align 8, !dbg !4098
  call void @llvm.dbg.declare(metadata i8** %dst_backup, metadata !4099, metadata !DIExpression()), !dbg !4100
  store i8* null, i8** %dst_backup, align 8, !dbg !4100
  call void @llvm.dbg.declare(metadata i8* %delayed_ok, metadata !4101, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.declare(metadata i8* %copied_as_regular, metadata !4103, metadata !DIExpression()), !dbg !4104
  store i8 0, i8* %copied_as_regular, align 1, !dbg !4104
  call void @llvm.dbg.declare(metadata i8* %dest_is_symlink, metadata !4105, metadata !DIExpression()), !dbg !4106
  store i8 0, i8* %dest_is_symlink, align 1, !dbg !4106
  call void @llvm.dbg.declare(metadata i8* %have_dst_lstat, metadata !4107, metadata !DIExpression()), !dbg !4108
  store i8 0, i8* %have_dst_lstat, align 1, !dbg !4108
  %0 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4109
  store i8 0, i8* %0, align 1, !dbg !4110, !ctir !139
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !4111, metadata !DIExpression()), !dbg !4112
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4113
  %rename_errno2 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 35, !dbg !4114, !ctir !3752
  %2 = load i32, i32* %rename_errno2, align 4, !dbg !4114, !ctir !5
  store i32 %2, i32* %rename_errno, align 4, !dbg !4112
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4115
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 9, !dbg !4117, !ctir !3752
  %4 = load i8, i8* %move_mode, align 8, !dbg !4117
  %tobool = trunc i8 %4 to i1, !dbg !4117, !ctir !139
  br i1 %tobool, label %if.then, label %if.end13, !dbg !4118

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %rename_errno, align 4, !dbg !4119
  %cmp = icmp slt i32 %5, 0, !dbg !4122
  br i1 %cmp, label %if.then3, label %if.end, !dbg !4123

if.then3:                                         ; preds = %if.then
  %6 = load i8*, i8** %src_name.addr, align 8, !dbg !4124
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !4125
  %call = call i32 @renameatu(i32 -100, i8* %6, i32 -100, i8* %7, i32 1), !dbg !4126
  %tobool4 = icmp ne i32 %call, 0, !dbg !4126
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !4126

cond.true:                                        ; preds = %if.then3
  %call5 = call i32* @__errno_location() #15, !dbg !4127
  %8 = load i32, i32* %call5, align 4, !dbg !4127, !ctir !5
  br label %cond.end, !dbg !4126

cond.false:                                       ; preds = %if.then3
  br label %cond.end, !dbg !4126

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 0, %cond.false ], !dbg !4126
  store i32 %cond, i32* %rename_errno, align 4, !dbg !4128
  br label %if.end, !dbg !4129

if.end:                                           ; preds = %cond.end, %if.then
  %9 = load i32, i32* %rename_errno, align 4, !dbg !4130
  %cmp6 = icmp eq i32 %9, 0, !dbg !4131
  %frombool7 = zext i1 %cmp6 to i8, !dbg !4132
  store i8 %frombool7, i8* %new_dst.addr, align 1, !dbg !4132
  %10 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4133
  %tobool8 = icmp ne i8* %10, null, !dbg !4133
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !4135

if.then9:                                         ; preds = %if.end
  %11 = load i8, i8* %new_dst.addr, align 1, !dbg !4136
  %tobool10 = trunc i8 %11 to i1, !dbg !4136
  %12 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4137
  %frombool11 = zext i1 %tobool10 to i8, !dbg !4138
  store i8 %frombool11, i8* %12, align 1, !dbg !4138, !ctir !139
  br label %if.end12, !dbg !4139

if.end12:                                         ; preds = %if.then9, %if.end
  br label %if.end13, !dbg !4140

if.end13:                                         ; preds = %if.end12, %entry
  %13 = load i32, i32* %rename_errno, align 4, !dbg !4141
  %cmp14 = icmp eq i32 %13, 0, !dbg !4143
  br i1 %cmp14, label %cond.true15, label %cond.false17, !dbg !4144

cond.true15:                                      ; preds = %if.end13
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4145
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 34, !dbg !4146, !ctir !3752
  %15 = load i8, i8* %last_file, align 1, !dbg !4146
  %tobool16 = trunc i8 %15 to i1, !dbg !4146, !ctir !139
  br i1 %tobool16, label %if.end47, label %if.then20, !dbg !4141

cond.false17:                                     ; preds = %if.end13
  %16 = load i32, i32* %rename_errno, align 4, !dbg !4147
  %cmp18 = icmp ne i32 %16, 17, !dbg !4148
  br i1 %cmp18, label %if.then20, label %lor.lhs.false, !dbg !4149

lor.lhs.false:                                    ; preds = %cond.false17
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4150
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 2, !dbg !4151, !ctir !3752
  %18 = load i32, i32* %interactive, align 8, !dbg !4151, !ctir !80
  %cmp19 = icmp ne i32 %18, 2, !dbg !4152
  br i1 %cmp19, label %if.then20, label %if.end47, !dbg !4144

if.then20:                                        ; preds = %lor.lhs.false, %cond.false17, %cond.true15
  call void @llvm.dbg.declare(metadata i8** %name, metadata !4153, metadata !DIExpression()), !dbg !4155
  %19 = load i32, i32* %rename_errno, align 4, !dbg !4156
  %cmp21 = icmp eq i32 %19, 0, !dbg !4157
  br i1 %cmp21, label %cond.true22, label %cond.false23, !dbg !4156

cond.true22:                                      ; preds = %if.then20
  %20 = load i8*, i8** %dst_name.addr, align 8, !dbg !4158
  br label %cond.end24, !dbg !4156

cond.false23:                                     ; preds = %if.then20
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !4159
  br label %cond.end24, !dbg !4156

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i8* [ %20, %cond.true22 ], [ %21, %cond.false23 ], !dbg !4156
  store i8* %cond25, i8** %name, align 8, !dbg !4155
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags, metadata !4160, metadata !DIExpression()), !dbg !4161
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4162
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 1, !dbg !4163, !ctir !3752
  %23 = load i32, i32* %dereference, align 4, !dbg !4163, !ctir !73
  %cmp26 = icmp eq i32 %23, 2, !dbg !4164
  %24 = zext i1 %cmp26 to i64, !dbg !4162
  %cond27 = select i1 %cmp26, i32 256, i32 0, !dbg !4162
  store i32 %cond27, i32* %fstatat_flags, align 4, !dbg !4161
  %25 = load i8*, i8** %name, align 8, !dbg !4165
  %26 = load i32, i32* %fstatat_flags, align 4, !dbg !4167
  %call28 = call i32 @follow_fstatat(i32 -100, i8* %25, %struct.stat* %src_sb, i32 %26), !dbg !4168
  %cmp29 = icmp ne i32 %call28, 0, !dbg !4169
  br i1 %cmp29, label %if.then30, label %if.end34, !dbg !4170

if.then30:                                        ; preds = %cond.end24
  %call31 = call i32* @__errno_location() #15, !dbg !4171
  %27 = load i32, i32* %call31, align 4, !dbg !4171, !ctir !5
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #12, !dbg !4173
  %28 = load i8*, i8** %name, align 8, !dbg !4174
  %call33 = call i8* @quotearg_style(i32 4, i8* %28), !dbg !4174
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %27, i8* %call32, i8* %call33), !dbg !4175
  store i1 false, i1* %retval, align 1, !dbg !4176
  br label %return, !dbg !4176

if.end34:                                         ; preds = %cond.end24
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4177, !ctir !335
  %29 = load i32, i32* %st_mode, align 8, !dbg !4177, !ctir !165
  store i32 %29, i32* %src_mode, align 4, !dbg !4178
  %30 = load i32, i32* %src_mode, align 4, !dbg !4179
  %and = and i32 %30, 61440, !dbg !4179
  %cmp35 = icmp eq i32 %and, 16384, !dbg !4179
  br i1 %cmp35, label %land.lhs.true, label %if.end46, !dbg !4181

land.lhs.true:                                    ; preds = %if.end34
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4182
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 27, !dbg !4183, !ctir !3752
  %32 = load i8, i8* %recursive, align 2, !dbg !4183
  %tobool36 = trunc i8 %32 to i1, !dbg !4183, !ctir !139
  br i1 %tobool36, label %if.end46, label %if.then37, !dbg !4184

if.then37:                                        ; preds = %land.lhs.true
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4185
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 10, !dbg !4187, !ctir !3752
  %34 = load i8, i8* %install_mode, align 1, !dbg !4187
  %tobool38 = trunc i8 %34 to i1, !dbg !4187, !ctir !139
  br i1 %tobool38, label %cond.false41, label %cond.true39, !dbg !4188

cond.true39:                                      ; preds = %if.then37
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13.98, i64 0, i64 0)) #12, !dbg !4189
  br label %cond.end43, !dbg !4188

cond.false41:                                     ; preds = %if.then37
  %call42 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.99, i64 0, i64 0)) #12, !dbg !4190
  br label %cond.end43, !dbg !4188

cond.end43:                                       ; preds = %cond.false41, %cond.true39
  %cond44 = phi i8* [ %call40, %cond.true39 ], [ %call42, %cond.false41 ], !dbg !4188
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !4191
  %call45 = call i8* @quotearg_style(i32 4, i8* %35), !dbg !4191
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %cond44, i8* %call45), !dbg !4192
  store i1 false, i1* %retval, align 1, !dbg !4193
  br label %return, !dbg !4193

if.end46:                                         ; preds = %land.lhs.true, %if.end34
  br label %if.end47, !dbg !4194

if.end47:                                         ; preds = %if.end46, %lor.lhs.false, %cond.true15
  %36 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4195
  %tobool48 = trunc i8 %36 to i1, !dbg !4195
  br i1 %tobool48, label %land.lhs.true49, label %if.end64, !dbg !4197

land.lhs.true49:                                  ; preds = %if.end47
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4198
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %37, i32 0, i32 38, !dbg !4199, !ctir !3752
  %38 = load %struct.hash_table*, %struct.hash_table** %src_info, align 8, !dbg !4199, !ctir !238
  %tobool50 = icmp ne %struct.hash_table* %38, null, !dbg !4198
  br i1 %tobool50, label %if.then51, label %if.end64, !dbg !4200

if.then51:                                        ; preds = %land.lhs.true49
  %39 = load i32, i32* %src_mode, align 4, !dbg !4201
  %and52 = and i32 %39, 61440, !dbg !4201
  %cmp53 = icmp eq i32 %and52, 16384, !dbg !4201
  br i1 %cmp53, label %if.end62, label %land.lhs.true54, !dbg !4204

land.lhs.true54:                                  ; preds = %if.then51
  %40 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4205
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %40, i32 0, i32 0, !dbg !4206, !ctir !3752
  %41 = load i32, i32* %backup_type, align 8, !dbg !4206, !ctir !65
  %cmp55 = icmp eq i32 %41, 0, !dbg !4207
  br i1 %cmp55, label %land.lhs.true56, label %if.end62, !dbg !4208

land.lhs.true56:                                  ; preds = %land.lhs.true54
  %42 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4209
  %src_info57 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %42, i32 0, i32 38, !dbg !4210, !ctir !3752
  %43 = load %struct.hash_table*, %struct.hash_table** %src_info57, align 8, !dbg !4210, !ctir !238
  %44 = load i8*, i8** %src_name.addr, align 8, !dbg !4211
  %call58 = call zeroext i1 @seen_file(%struct.hash_table* %43, i8* %44, %struct.stat* %src_sb), !dbg !4212
  br i1 %call58, label %if.then59, label %if.end62, !dbg !4213

if.then59:                                        ; preds = %land.lhs.true56
  %call60 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15.100, i64 0, i64 0)) #12, !dbg !4214
  %45 = load i8*, i8** %src_name.addr, align 8, !dbg !4216
  %call61 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !4216
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call60, i8* %call61), !dbg !4217
  store i1 true, i1* %retval, align 1, !dbg !4218
  br label %return, !dbg !4218

if.end62:                                         ; preds = %land.lhs.true56, %land.lhs.true54, %if.then51
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4219
  %src_info63 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 38, !dbg !4220, !ctir !3752
  %47 = load %struct.hash_table*, %struct.hash_table** %src_info63, align 8, !dbg !4220, !ctir !238
  %48 = load i8*, i8** %src_name.addr, align 8, !dbg !4221
  call void @record_file(%struct.hash_table* %47, i8* %48, %struct.stat* %src_sb), !dbg !4222
  br label %if.end64, !dbg !4223

if.end64:                                         ; preds = %if.end62, %land.lhs.true49, %if.end47
  call void @llvm.dbg.declare(metadata i8* %dereference65, metadata !4224, metadata !DIExpression()), !dbg !4225
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4226
  %50 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4227
  %tobool66 = trunc i8 %50 to i1, !dbg !4227
  %call67 = call zeroext i1 @should_dereference(%struct.cp_options* %49, i1 zeroext %tobool66) #14, !dbg !4228
  %frombool68 = zext i1 %call67 to i8, !dbg !4225
  store i8 %frombool68, i8* %dereference65, align 1, !dbg !4225
  %51 = load i8, i8* %new_dst.addr, align 1, !dbg !4229
  %tobool69 = trunc i8 %51 to i1, !dbg !4229
  br i1 %tobool69, label %if.end345, label %if.then70, !dbg !4231

if.then70:                                        ; preds = %if.end64
  %52 = load i32, i32* %rename_errno, align 4, !dbg !4232
  %cmp71 = icmp eq i32 %52, 17, !dbg !4235
  br i1 %cmp71, label %land.lhs.true72, label %if.then75, !dbg !4236

land.lhs.true72:                                  ; preds = %if.then70
  %53 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4237
  %interactive73 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %53, i32 0, i32 2, !dbg !4238, !ctir !3752
  %54 = load i32, i32* %interactive73, align 8, !dbg !4238, !ctir !80
  %cmp74 = icmp eq i32 %54, 2, !dbg !4239
  br i1 %cmp74, label %if.end122, label %if.then75, !dbg !4240

if.then75:                                        ; preds = %land.lhs.true72, %if.then70
  call void @llvm.dbg.declare(metadata i8* %use_lstat, metadata !4241, metadata !DIExpression()), !dbg !4243
  %55 = load i32, i32* %src_mode, align 4, !dbg !4244
  %and76 = and i32 %55, 61440, !dbg !4244
  %cmp77 = icmp eq i32 %and76, 32768, !dbg !4244
  br i1 %cmp77, label %lor.lhs.false86, label %land.lhs.true78, !dbg !4245

land.lhs.true78:                                  ; preds = %if.then75
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4246
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 5, !dbg !4247, !ctir !3752
  %57 = load i8, i8* %copy_as_regular, align 4, !dbg !4247
  %tobool79 = trunc i8 %57 to i1, !dbg !4247, !ctir !139
  br i1 %tobool79, label %lor.lhs.false80, label %lor.end, !dbg !4248

lor.lhs.false80:                                  ; preds = %land.lhs.true78
  %58 = load i32, i32* %src_mode, align 4, !dbg !4249
  %and81 = and i32 %58, 61440, !dbg !4249
  %cmp82 = icmp eq i32 %and81, 16384, !dbg !4249
  br i1 %cmp82, label %lor.end, label %lor.lhs.false83, !dbg !4250

lor.lhs.false83:                                  ; preds = %lor.lhs.false80
  %59 = load i32, i32* %src_mode, align 4, !dbg !4251
  %and84 = and i32 %59, 61440, !dbg !4251
  %cmp85 = icmp eq i32 %and84, 40960, !dbg !4251
  br i1 %cmp85, label %lor.end, label %lor.lhs.false86, !dbg !4252

lor.lhs.false86:                                  ; preds = %lor.lhs.false83, %if.then75
  %60 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4253
  %move_mode87 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %60, i32 0, i32 9, !dbg !4254, !ctir !3752
  %61 = load i8, i8* %move_mode87, align 8, !dbg !4254
  %tobool88 = trunc i8 %61 to i1, !dbg !4254, !ctir !139
  br i1 %tobool88, label %lor.end, label %lor.lhs.false89, !dbg !4255

lor.lhs.false89:                                  ; preds = %lor.lhs.false86
  %62 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4256
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %62, i32 0, i32 29, !dbg !4257, !ctir !3752
  %63 = load i8, i8* %symbolic_link, align 4, !dbg !4257
  %tobool90 = trunc i8 %63 to i1, !dbg !4257, !ctir !139
  br i1 %tobool90, label %lor.end, label %lor.lhs.false91, !dbg !4258

lor.lhs.false91:                                  ; preds = %lor.lhs.false89
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4259
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 8, !dbg !4260, !ctir !3752
  %65 = load i8, i8* %hard_link, align 1, !dbg !4260
  %tobool92 = trunc i8 %65 to i1, !dbg !4260, !ctir !139
  br i1 %tobool92, label %lor.end, label %lor.lhs.false93, !dbg !4261

lor.lhs.false93:                                  ; preds = %lor.lhs.false91
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4262
  %backup_type94 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 0, !dbg !4263, !ctir !3752
  %67 = load i32, i32* %backup_type94, align 8, !dbg !4263, !ctir !65
  %cmp95 = icmp ne i32 %67, 0, !dbg !4264
  br i1 %cmp95, label %lor.end, label %lor.rhs, !dbg !4265

lor.rhs:                                          ; preds = %lor.lhs.false93
  %68 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4266
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %68, i32 0, i32 6, !dbg !4267, !ctir !3752
  %69 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !4267
  %tobool96 = trunc i8 %69 to i1, !dbg !4267, !ctir !139
  br label %lor.end, !dbg !4265

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false93, %lor.lhs.false91, %lor.lhs.false89, %lor.lhs.false86, %lor.lhs.false83, %lor.lhs.false80, %land.lhs.true78
  %70 = phi i1 [ true, %lor.lhs.false93 ], [ true, %lor.lhs.false91 ], [ true, %lor.lhs.false89 ], [ true, %lor.lhs.false86 ], [ true, %lor.lhs.false83 ], [ true, %lor.lhs.false80 ], [ true, %land.lhs.true78 ], [ %tobool96, %lor.rhs ]
  %frombool97 = zext i1 %70 to i8, !dbg !4243
  store i8 %frombool97, i8* %use_lstat, align 1, !dbg !4243
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags98, metadata !4268, metadata !DIExpression()), !dbg !4269
  %71 = load i8, i8* %use_lstat, align 1, !dbg !4270
  %tobool99 = trunc i8 %71 to i1, !dbg !4270
  %72 = zext i1 %tobool99 to i64, !dbg !4270
  %cond100 = select i1 %tobool99, i32 256, i32 0, !dbg !4270
  store i32 %cond100, i32* %fstatat_flags98, align 4, !dbg !4269
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !4271
  %74 = load i32, i32* %fstatat_flags98, align 4, !dbg !4273
  %call101 = call i32 @follow_fstatat(i32 -100, i8* %73, %struct.stat* %dst_sb, i32 %74), !dbg !4274
  %cmp102 = icmp eq i32 %call101, 0, !dbg !4275
  br i1 %cmp102, label %if.then103, label %if.else, !dbg !4276

if.then103:                                       ; preds = %lor.end
  %75 = load i8, i8* %use_lstat, align 1, !dbg !4277
  %tobool104 = trunc i8 %75 to i1, !dbg !4277
  %frombool105 = zext i1 %tobool104 to i8, !dbg !4279
  store i8 %frombool105, i8* %have_dst_lstat, align 1, !dbg !4279
  store i32 17, i32* %rename_errno, align 4, !dbg !4280
  br label %if.end121, !dbg !4281

if.else:                                          ; preds = %lor.end
  %call106 = call i32* @__errno_location() #15, !dbg !4282
  %76 = load i32, i32* %call106, align 4, !dbg !4282, !ctir !5
  %cmp107 = icmp eq i32 %76, 40, !dbg !4285
  br i1 %cmp107, label %land.lhs.true108, label %if.else111, !dbg !4286

land.lhs.true108:                                 ; preds = %if.else
  %77 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4287
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %77, i32 0, i32 7, !dbg !4288, !ctir !3752
  %78 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !4288
  %tobool109 = trunc i8 %78 to i1, !dbg !4288, !ctir !139
  br i1 %tobool109, label %if.then110, label %if.else111, !dbg !4289

if.then110:                                       ; preds = %land.lhs.true108
  br label %if.end120, !dbg !4289

if.else111:                                       ; preds = %land.lhs.true108, %if.else
  %call112 = call i32* @__errno_location() #15, !dbg !4290
  %79 = load i32, i32* %call112, align 4, !dbg !4290, !ctir !5
  %cmp113 = icmp ne i32 %79, 2, !dbg !4292
  br i1 %cmp113, label %if.then114, label %if.else118, !dbg !4293

if.then114:                                       ; preds = %if.else111
  %call115 = call i32* @__errno_location() #15, !dbg !4294
  %80 = load i32, i32* %call115, align 4, !dbg !4294, !ctir !5
  %call116 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #12, !dbg !4296
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !4297
  %call117 = call i8* @quotearg_style(i32 4, i8* %81), !dbg !4297
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %80, i8* %call116, i8* %call117), !dbg !4298
  store i1 false, i1* %retval, align 1, !dbg !4299
  br label %return, !dbg !4299

if.else118:                                       ; preds = %if.else111
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4300
  br label %if.end119

if.end119:                                        ; preds = %if.else118
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then110
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then103
  br label %if.end122, !dbg !4301

if.end122:                                        ; preds = %if.end121, %land.lhs.true72
  %82 = load i32, i32* %rename_errno, align 4, !dbg !4302
  %cmp123 = icmp eq i32 %82, 17, !dbg !4304
  br i1 %cmp123, label %if.then124, label %if.end344, !dbg !4305

if.then124:                                       ; preds = %if.end122
  call void @llvm.dbg.declare(metadata i8* %return_now, metadata !4306, metadata !DIExpression()), !dbg !4308
  store i8 0, i8* %return_now, align 1, !dbg !4308
  %83 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4309
  %interactive125 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %83, i32 0, i32 2, !dbg !4311, !ctir !3752
  %84 = load i32, i32* %interactive125, align 8, !dbg !4311, !ctir !80
  %cmp126 = icmp ne i32 %84, 2, !dbg !4312
  br i1 %cmp126, label %land.lhs.true127, label %if.end133, !dbg !4313

land.lhs.true127:                                 ; preds = %if.then124
  %85 = load i8*, i8** %src_name.addr, align 8, !dbg !4314
  %86 = load i8*, i8** %dst_name.addr, align 8, !dbg !4315
  %87 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4316
  %call128 = call zeroext i1 @same_file_ok(i8* %85, %struct.stat* %src_sb, i8* %86, %struct.stat* %dst_sb, %struct.cp_options* %87, i8* %return_now), !dbg !4317
  br i1 %call128, label %if.end133, label %if.then129, !dbg !4318

if.then129:                                       ; preds = %land.lhs.true127
  %call130 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16.101, i64 0, i64 0)) #12, !dbg !4319
  %88 = load i8*, i8** %src_name.addr, align 8, !dbg !4321
  %call131 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %88), !dbg !4321
  %89 = load i8*, i8** %dst_name.addr, align 8, !dbg !4322
  %call132 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %89), !dbg !4322
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call130, i8* %call131, i8* %call132), !dbg !4323
  store i1 false, i1* %retval, align 1, !dbg !4324
  br label %return, !dbg !4324

if.end133:                                        ; preds = %land.lhs.true127, %if.then124
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4325
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 30, !dbg !4327, !ctir !3752
  %91 = load i8, i8* %update, align 1, !dbg !4327
  %tobool134 = trunc i8 %91 to i1, !dbg !4327, !ctir !139
  br i1 %tobool134, label %land.lhs.true135, label %if.end164, !dbg !4328

land.lhs.true135:                                 ; preds = %if.end133
  %92 = load i32, i32* %src_mode, align 4, !dbg !4329
  %and136 = and i32 %92, 61440, !dbg !4329
  %cmp137 = icmp eq i32 %and136, 16384, !dbg !4329
  br i1 %cmp137, label %if.end164, label %if.then138, !dbg !4330

if.then138:                                       ; preds = %land.lhs.true135
  call void @llvm.dbg.declare(metadata i32* %options, metadata !4331, metadata !DIExpression()), !dbg !4333
  %93 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4334
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %93, i32 0, i32 16, !dbg !4335, !ctir !3752
  %94 = load i8, i8* %preserve_timestamps, align 1, !dbg !4335
  %tobool139 = trunc i8 %94 to i1, !dbg !4335, !ctir !139
  br i1 %tobool139, label %land.rhs, label %land.end145, !dbg !4336

land.rhs:                                         ; preds = %if.then138
  %95 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4337
  %move_mode140 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %95, i32 0, i32 9, !dbg !4338, !ctir !3752
  %96 = load i8, i8* %move_mode140, align 8, !dbg !4338
  %tobool141 = trunc i8 %96 to i1, !dbg !4338, !ctir !139
  br i1 %tobool141, label %land.rhs142, label %land.end, !dbg !4339

land.rhs142:                                      ; preds = %land.rhs
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !4340, !ctir !335
  %97 = load i64, i64* %st_dev, align 8, !dbg !4340, !ctir !260
  %st_dev143 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4341, !ctir !335
  %98 = load i64, i64* %st_dev143, align 8, !dbg !4341, !ctir !260
  %cmp144 = icmp eq i64 %97, %98, !dbg !4342
  br label %land.end

land.end:                                         ; preds = %land.rhs142, %land.rhs
  %99 = phi i1 [ false, %land.rhs ], [ %cmp144, %land.rhs142 ], !dbg !4343
  %lnot = xor i1 %99, true, !dbg !4344
  br label %land.end145

land.end145:                                      ; preds = %land.end, %if.then138
  %100 = phi i1 [ false, %if.then138 ], [ %lnot, %land.end ], !dbg !4343
  %101 = zext i1 %100 to i64, !dbg !4345
  %cond146 = select i1 %100, i32 1, i32 0, !dbg !4345
  store i32 %cond146, i32* %options, align 4, !dbg !4333
  %102 = load i8*, i8** %dst_name.addr, align 8, !dbg !4346
  %103 = load i32, i32* %options, align 4, !dbg !4348
  %call147 = call i32 @utimecmp(i8* %102, %struct.stat* %dst_sb, %struct.stat* %src_sb, i32 %103), !dbg !4349
  %cmp148 = icmp sle i32 0, %call147, !dbg !4350
  br i1 %cmp148, label %if.then149, label %if.end163, !dbg !4351

if.then149:                                       ; preds = %land.end145
  %104 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4352
  %tobool150 = icmp ne i8* %104, null, !dbg !4352
  br i1 %tobool150, label %if.then151, label %if.end152, !dbg !4355

if.then151:                                       ; preds = %if.then149
  %105 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4356
  store i8 1, i8* %105, align 1, !dbg !4357, !ctir !139
  br label %if.end152, !dbg !4358

if.end152:                                        ; preds = %if.then151, %if.then149
  %106 = load i8*, i8** %dst_name.addr, align 8, !dbg !4359
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4360, !ctir !335
  %107 = load i64, i64* %st_ino, align 8, !dbg !4360, !ctir !257
  %st_dev153 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4361, !ctir !335
  %108 = load i64, i64* %st_dev153, align 8, !dbg !4361, !ctir !260
  %call154 = call i8* @remember_copied(i8* %106, i64 %107, i64 %108), !dbg !4362
  store i8* %call154, i8** %earlier_file, align 8, !dbg !4363
  %109 = load i8*, i8** %earlier_file, align 8, !dbg !4364
  %tobool155 = icmp ne i8* %109, null, !dbg !4364
  br i1 %tobool155, label %if.then156, label %if.end162, !dbg !4366

if.then156:                                       ; preds = %if.end152
  %110 = load i8*, i8** %earlier_file, align 8, !dbg !4367
  %111 = load i8*, i8** %dst_name.addr, align 8, !dbg !4370
  %112 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4371
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %112, i32 0, i32 31, !dbg !4372, !ctir !3752
  %113 = load i8, i8* %verbose, align 2, !dbg !4372
  %tobool157 = trunc i8 %113 to i1, !dbg !4372, !ctir !139
  %114 = load i8, i8* %dereference65, align 1, !dbg !4373
  %tobool158 = trunc i8 %114 to i1, !dbg !4373
  %call159 = call zeroext i1 @create_hard_link(i8* %110, i8* %111, i1 zeroext true, i1 zeroext %tobool157, i1 zeroext %tobool158), !dbg !4374
  br i1 %call159, label %if.end161, label %if.then160, !dbg !4375

if.then160:                                       ; preds = %if.then156
  br label %un_backup, !dbg !4376

if.end161:                                        ; preds = %if.then156
  br label %if.end162, !dbg !4378

if.end162:                                        ; preds = %if.end161, %if.end152
  store i1 true, i1* %retval, align 1, !dbg !4379
  br label %return, !dbg !4379

if.end163:                                        ; preds = %land.end145
  br label %if.end164, !dbg !4380

if.end164:                                        ; preds = %if.end163, %land.lhs.true135, %if.end133
  %115 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4381
  %move_mode165 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %115, i32 0, i32 9, !dbg !4383, !ctir !3752
  %116 = load i8, i8* %move_mode165, align 8, !dbg !4383
  %tobool166 = trunc i8 %116 to i1, !dbg !4383, !ctir !139
  br i1 %tobool166, label %if.then167, label %if.else174, !dbg !4384

if.then167:                                       ; preds = %if.end164
  %117 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4385
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !4388
  %call168 = call zeroext i1 @abandon_move(%struct.cp_options* %117, i8* %118, %struct.stat* %dst_sb), !dbg !4389
  br i1 %call168, label %if.then169, label %if.end173, !dbg !4390

if.then169:                                       ; preds = %if.then167
  %119 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4391
  %tobool170 = icmp ne i8* %119, null, !dbg !4391
  br i1 %tobool170, label %if.then171, label %if.end172, !dbg !4394

if.then171:                                       ; preds = %if.then169
  %120 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4395
  store i8 1, i8* %120, align 1, !dbg !4396, !ctir !139
  br label %if.end172, !dbg !4397

if.end172:                                        ; preds = %if.then171, %if.then169
  store i1 true, i1* %retval, align 1, !dbg !4398
  br label %return, !dbg !4398

if.end173:                                        ; preds = %if.then167
  br label %if.end187, !dbg !4399

if.else174:                                       ; preds = %if.end164
  %121 = load i32, i32* %src_mode, align 4, !dbg !4400
  %and175 = and i32 %121, 61440, !dbg !4400
  %cmp176 = icmp eq i32 %and175, 16384, !dbg !4400
  br i1 %cmp176, label %if.end186, label %land.lhs.true177, !dbg !4403

land.lhs.true177:                                 ; preds = %if.else174
  %122 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4404
  %interactive178 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %122, i32 0, i32 2, !dbg !4405, !ctir !3752
  %123 = load i32, i32* %interactive178, align 8, !dbg !4405, !ctir !80
  %cmp179 = icmp eq i32 %123, 2, !dbg !4406
  br i1 %cmp179, label %if.then185, label %lor.lhs.false180, !dbg !4407

lor.lhs.false180:                                 ; preds = %land.lhs.true177
  %124 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4408
  %interactive181 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %124, i32 0, i32 2, !dbg !4409, !ctir !3752
  %125 = load i32, i32* %interactive181, align 8, !dbg !4409, !ctir !80
  %cmp182 = icmp eq i32 %125, 3, !dbg !4410
  br i1 %cmp182, label %land.lhs.true183, label %if.end186, !dbg !4411

land.lhs.true183:                                 ; preds = %lor.lhs.false180
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4412
  %127 = load i8*, i8** %dst_name.addr, align 8, !dbg !4413
  %call184 = call zeroext i1 @overwrite_ok(%struct.cp_options* %126, i8* %127, %struct.stat* %dst_sb), !dbg !4414
  br i1 %call184, label %if.end186, label %if.then185, !dbg !4415

if.then185:                                       ; preds = %land.lhs.true183, %land.lhs.true177
  store i1 true, i1* %retval, align 1, !dbg !4416
  br label %return, !dbg !4416

if.end186:                                        ; preds = %land.lhs.true183, %lor.lhs.false180, %if.else174
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.end173
  %128 = load i8, i8* %return_now, align 1, !dbg !4417
  %tobool188 = trunc i8 %128 to i1, !dbg !4417
  br i1 %tobool188, label %if.then189, label %if.end190, !dbg !4419

if.then189:                                       ; preds = %if.end187
  store i1 true, i1* %retval, align 1, !dbg !4420
  br label %return, !dbg !4420

if.end190:                                        ; preds = %if.end187
  %st_mode191 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4421, !ctir !335
  %129 = load i32, i32* %st_mode191, align 8, !dbg !4421, !ctir !165
  %and192 = and i32 %129, 61440, !dbg !4421
  %cmp193 = icmp eq i32 %and192, 16384, !dbg !4421
  br i1 %cmp193, label %if.end221, label %if.then194, !dbg !4423

if.then194:                                       ; preds = %if.end190
  %130 = load i32, i32* %src_mode, align 4, !dbg !4424
  %and195 = and i32 %130, 61440, !dbg !4424
  %cmp196 = icmp eq i32 %and195, 16384, !dbg !4424
  br i1 %cmp196, label %if.then197, label %if.end209, !dbg !4427

if.then197:                                       ; preds = %if.then194
  %131 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4428
  %move_mode198 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %131, i32 0, i32 9, !dbg !4431, !ctir !3752
  %132 = load i8, i8* %move_mode198, align 8, !dbg !4431
  %tobool199 = trunc i8 %132 to i1, !dbg !4431, !ctir !139
  br i1 %tobool199, label %land.lhs.true200, label %if.else204, !dbg !4432

land.lhs.true200:                                 ; preds = %if.then197
  %133 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4433
  %backup_type201 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %133, i32 0, i32 0, !dbg !4434, !ctir !3752
  %134 = load i32, i32* %backup_type201, align 8, !dbg !4434, !ctir !65
  %cmp202 = icmp ne i32 %134, 0, !dbg !4435
  br i1 %cmp202, label %if.then203, label %if.else204, !dbg !4436

if.then203:                                       ; preds = %land.lhs.true200
  br label %if.end208, !dbg !4437

if.else204:                                       ; preds = %land.lhs.true200, %if.then197
  %call205 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17.102, i64 0, i64 0)) #12, !dbg !4439
  %135 = load i8*, i8** %dst_name.addr, align 8, !dbg !4441
  %call206 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %135), !dbg !4441
  %136 = load i8*, i8** %src_name.addr, align 8, !dbg !4442
  %call207 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %136), !dbg !4442
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call205, i8* %call206, i8* %call207), !dbg !4443
  store i1 false, i1* %retval, align 1, !dbg !4444
  br label %return, !dbg !4444

if.end208:                                        ; preds = %if.then203
  br label %if.end209, !dbg !4445

if.end209:                                        ; preds = %if.end208, %if.then194
  %137 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4446
  %tobool210 = trunc i8 %137 to i1, !dbg !4446
  br i1 %tobool210, label %land.lhs.true211, label %if.end220, !dbg !4448

land.lhs.true211:                                 ; preds = %if.end209
  %138 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4449
  %backup_type212 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %138, i32 0, i32 0, !dbg !4450, !ctir !3752
  %139 = load i32, i32* %backup_type212, align 8, !dbg !4450, !ctir !65
  %cmp213 = icmp ne i32 %139, 3, !dbg !4451
  br i1 %cmp213, label %land.lhs.true214, label %if.end220, !dbg !4452

land.lhs.true214:                                 ; preds = %land.lhs.true211
  %140 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4453
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %140, i32 0, i32 37, !dbg !4454, !ctir !3752
  %141 = load %struct.hash_table*, %struct.hash_table** %dest_info, align 8, !dbg !4454, !ctir !238
  %142 = load i8*, i8** %dst_name.addr, align 8, !dbg !4455
  %call215 = call zeroext i1 @seen_file(%struct.hash_table* %141, i8* %142, %struct.stat* %dst_sb), !dbg !4456
  br i1 %call215, label %if.then216, label %if.end220, !dbg !4457

if.then216:                                       ; preds = %land.lhs.true214
  %call217 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18.103, i64 0, i64 0)) #12, !dbg !4458
  %143 = load i8*, i8** %dst_name.addr, align 8, !dbg !4460
  %call218 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %143), !dbg !4460
  %144 = load i8*, i8** %src_name.addr, align 8, !dbg !4461
  %call219 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %144), !dbg !4461
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call217, i8* %call218, i8* %call219), !dbg !4462
  store i1 false, i1* %retval, align 1, !dbg !4463
  br label %return, !dbg !4463

if.end220:                                        ; preds = %land.lhs.true214, %land.lhs.true211, %if.end209
  br label %if.end221, !dbg !4464

if.end221:                                        ; preds = %if.end220, %if.end190
  %145 = load i32, i32* %src_mode, align 4, !dbg !4465
  %and222 = and i32 %145, 61440, !dbg !4465
  %cmp223 = icmp eq i32 %and222, 16384, !dbg !4465
  br i1 %cmp223, label %if.end240, label %if.then224, !dbg !4467

if.then224:                                       ; preds = %if.end221
  %st_mode225 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4468, !ctir !335
  %146 = load i32, i32* %st_mode225, align 8, !dbg !4468, !ctir !165
  %and226 = and i32 %146, 61440, !dbg !4468
  %cmp227 = icmp eq i32 %and226, 16384, !dbg !4468
  br i1 %cmp227, label %if.then228, label %if.end239, !dbg !4471

if.then228:                                       ; preds = %if.then224
  %147 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4472
  %move_mode229 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %147, i32 0, i32 9, !dbg !4475, !ctir !3752
  %148 = load i8, i8* %move_mode229, align 8, !dbg !4475
  %tobool230 = trunc i8 %148 to i1, !dbg !4475, !ctir !139
  br i1 %tobool230, label %land.lhs.true231, label %if.else235, !dbg !4476

land.lhs.true231:                                 ; preds = %if.then228
  %149 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4477
  %backup_type232 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %149, i32 0, i32 0, !dbg !4478, !ctir !3752
  %150 = load i32, i32* %backup_type232, align 8, !dbg !4478, !ctir !65
  %cmp233 = icmp ne i32 %150, 0, !dbg !4479
  br i1 %cmp233, label %if.then234, label %if.else235, !dbg !4480

if.then234:                                       ; preds = %land.lhs.true231
  br label %if.end238, !dbg !4481

if.else235:                                       ; preds = %land.lhs.true231, %if.then228
  %call236 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19.104, i64 0, i64 0)) #12, !dbg !4483
  %151 = load i8*, i8** %dst_name.addr, align 8, !dbg !4485
  %call237 = call i8* @quotearg_style(i32 4, i8* %151), !dbg !4485
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call236, i8* %call237), !dbg !4486
  store i1 false, i1* %retval, align 1, !dbg !4487
  br label %return, !dbg !4487

if.end238:                                        ; preds = %if.then234
  br label %if.end239, !dbg !4488

if.end239:                                        ; preds = %if.end238, %if.then224
  br label %if.end240, !dbg !4489

if.end240:                                        ; preds = %if.end239, %if.end221
  %152 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4490
  %move_mode241 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %152, i32 0, i32 9, !dbg !4492, !ctir !3752
  %153 = load i8, i8* %move_mode241, align 8, !dbg !4492
  %tobool242 = trunc i8 %153 to i1, !dbg !4492, !ctir !139
  br i1 %tobool242, label %if.then243, label %if.end259, !dbg !4493

if.then243:                                       ; preds = %if.end240
  %st_mode244 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4494, !ctir !335
  %154 = load i32, i32* %st_mode244, align 8, !dbg !4494, !ctir !165
  %and245 = and i32 %154, 61440, !dbg !4494
  %cmp246 = icmp eq i32 %and245, 16384, !dbg !4494
  br i1 %cmp246, label %land.lhs.true247, label %if.end258, !dbg !4497

land.lhs.true247:                                 ; preds = %if.then243
  %st_mode248 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4498, !ctir !335
  %155 = load i32, i32* %st_mode248, align 8, !dbg !4498, !ctir !165
  %and249 = and i32 %155, 61440, !dbg !4498
  %cmp250 = icmp eq i32 %and249, 16384, !dbg !4498
  br i1 %cmp250, label %if.end258, label %land.lhs.true251, !dbg !4499

land.lhs.true251:                                 ; preds = %land.lhs.true247
  %156 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4500
  %backup_type252 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %156, i32 0, i32 0, !dbg !4501, !ctir !3752
  %157 = load i32, i32* %backup_type252, align 8, !dbg !4501, !ctir !65
  %cmp253 = icmp eq i32 %157, 0, !dbg !4502
  br i1 %cmp253, label %if.then254, label %if.end258, !dbg !4503

if.then254:                                       ; preds = %land.lhs.true251
  %call255 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.105, i64 0, i64 0)) #12, !dbg !4504
  %158 = load i8*, i8** %src_name.addr, align 8, !dbg !4506
  %call256 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %158), !dbg !4506
  %159 = load i8*, i8** %dst_name.addr, align 8, !dbg !4507
  %call257 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %159), !dbg !4507
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call255, i8* %call256, i8* %call257), !dbg !4508
  store i1 false, i1* %retval, align 1, !dbg !4509
  br label %return, !dbg !4509

if.end258:                                        ; preds = %land.lhs.true251, %land.lhs.true247, %if.then243
  br label %if.end259, !dbg !4510

if.end259:                                        ; preds = %if.end258, %if.end240
  call void @llvm.dbg.declare(metadata i8** %srcbase, metadata !4511, metadata !DIExpression()), !dbg !4512
  %160 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4513
  %backup_type260 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %160, i32 0, i32 0, !dbg !4515, !ctir !3752
  %161 = load i32, i32* %backup_type260, align 8, !dbg !4515, !ctir !65
  %cmp261 = icmp ne i32 %161, 0, !dbg !4516
  br i1 %cmp261, label %land.lhs.true262, label %if.else303, !dbg !4517

land.lhs.true262:                                 ; preds = %if.end259
  %162 = load i8*, i8** %src_name.addr, align 8, !dbg !4518
  %call263 = call i8* @last_component(i8* %162) #14, !dbg !4519
  store i8* %call263, i8** %srcbase, align 8, !dbg !4520
  %call264 = call zeroext i1 @dot_or_dotdot.106(i8* %call263), !dbg !4521
  br i1 %call264, label %if.else303, label %land.lhs.true265, !dbg !4522

land.lhs.true265:                                 ; preds = %land.lhs.true262
  %163 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4523
  %move_mode266 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %163, i32 0, i32 9, !dbg !4524, !ctir !3752
  %164 = load i8, i8* %move_mode266, align 8, !dbg !4524
  %tobool267 = trunc i8 %164 to i1, !dbg !4524, !ctir !139
  br i1 %tobool267, label %if.then272, label %lor.lhs.false268, !dbg !4525

lor.lhs.false268:                                 ; preds = %land.lhs.true265
  %st_mode269 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4526, !ctir !335
  %165 = load i32, i32* %st_mode269, align 8, !dbg !4526, !ctir !165
  %and270 = and i32 %165, 61440, !dbg !4526
  %cmp271 = icmp eq i32 %and270, 16384, !dbg !4526
  br i1 %cmp271, label %if.else303, label %if.then272, !dbg !4527

if.then272:                                       ; preds = %lor.lhs.false268, %land.lhs.true265
  %166 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4528
  %backup_type273 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %166, i32 0, i32 0, !dbg !4531, !ctir !3752
  %167 = load i32, i32* %backup_type273, align 8, !dbg !4531, !ctir !65
  %cmp274 = icmp ne i32 %167, 3, !dbg !4532
  br i1 %cmp274, label %land.lhs.true275, label %if.end288, !dbg !4533

land.lhs.true275:                                 ; preds = %if.then272
  %168 = load i8*, i8** %srcbase, align 8, !dbg !4534
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !4535
  %call276 = call zeroext i1 @source_is_dst_backup(i8* %168, %struct.stat* %src_sb, i8* %169), !dbg !4536
  br i1 %call276, label %if.then277, label %if.end288, !dbg !4537

if.then277:                                       ; preds = %land.lhs.true275
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !4538, metadata !DIExpression()), !dbg !4540
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4541
  %move_mode278 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 9, !dbg !4542, !ctir !3752
  %171 = load i8, i8* %move_mode278, align 8, !dbg !4542
  %tobool279 = trunc i8 %171 to i1, !dbg !4542, !ctir !139
  br i1 %tobool279, label %cond.true280, label %cond.false282, !dbg !4541

cond.true280:                                     ; preds = %if.then277
  %call281 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.21.107, i64 0, i64 0)) #12, !dbg !4543
  br label %cond.end284, !dbg !4541

cond.false282:                                    ; preds = %if.then277
  %call283 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22.108, i64 0, i64 0)) #12, !dbg !4544
  br label %cond.end284, !dbg !4541

cond.end284:                                      ; preds = %cond.false282, %cond.true280
  %cond285 = phi i8* [ %call281, %cond.true280 ], [ %call283, %cond.false282 ], !dbg !4541
  store i8* %cond285, i8** %fmt, align 8, !dbg !4545
  %172 = load i8*, i8** %fmt, align 8, !dbg !4546
  %173 = load i8*, i8** %dst_name.addr, align 8, !dbg !4547
  %call286 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %173), !dbg !4547
  %174 = load i8*, i8** %src_name.addr, align 8, !dbg !4548
  %call287 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %174), !dbg !4548
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %172, i8* %call286, i8* %call287), !dbg !4549
  store i1 false, i1* %retval, align 1, !dbg !4550
  br label %return, !dbg !4550

if.end288:                                        ; preds = %land.lhs.true275, %if.then272
  call void @llvm.dbg.declare(metadata i8** %tmp_backup, metadata !4551, metadata !DIExpression()), !dbg !4552
  %175 = load i8*, i8** %dst_name.addr, align 8, !dbg !4553
  %176 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4554
  %backup_type289 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %176, i32 0, i32 0, !dbg !4555, !ctir !3752
  %177 = load i32, i32* %backup_type289, align 8, !dbg !4555, !ctir !65
  %call290 = call i8* @backup_file_rename(i32 -100, i8* %175, i32 %177), !dbg !4556
  store i8* %call290, i8** %tmp_backup, align 8, !dbg !4552
  %178 = load i8*, i8** %tmp_backup, align 8, !dbg !4557
  %tobool291 = icmp ne i8* %178, null, !dbg !4557
  br i1 %tobool291, label %if.then292, label %if.else294, !dbg !4559

if.then292:                                       ; preds = %if.end288
  br label %do.body, !dbg !4560

do.body:                                          ; preds = %if.then292
  call void @llvm.dbg.declare(metadata i8** %__old, metadata !4562, metadata !DIExpression()), !dbg !4565
  %179 = load i8*, i8** %tmp_backup, align 8, !dbg !4565
  store i8* %179, i8** %__old, align 8, !dbg !4565
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !4566, metadata !DIExpression()), !dbg !4565
  %180 = load i8*, i8** %__old, align 8, !dbg !4565
  %call293 = call i64 @strlen(i8* %180) #14, !dbg !4565
  %add = add i64 %call293, 1, !dbg !4565
  store i64 %add, i64* %__len, align 8, !dbg !4565
  call void @llvm.dbg.declare(metadata i8** %__new, metadata !4567, metadata !DIExpression()), !dbg !4565
  %181 = load i64, i64* %__len, align 8, !dbg !4565
  %182 = alloca i8, i64 %181, align 16, !dbg !4565
  store i8* %182, i8** %__new, align 8, !dbg !4565
  %183 = load i8*, i8** %__new, align 8, !dbg !4565
  %184 = load i8*, i8** %__old, align 8, !dbg !4565
  %185 = load i64, i64* %__len, align 8, !dbg !4565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %183, i8* align 1 %184, i64 %185, i1 false), !dbg !4565
  store i8* %183, i8** %tmp, align 8, !dbg !4565
  %186 = load i8*, i8** %tmp, align 8, !dbg !4565
  store i8* %186, i8** %dst_backup, align 8, !dbg !4568
  br label %do.end, !dbg !4568

do.end:                                           ; preds = %do.body
  %187 = load i8*, i8** %tmp_backup, align 8, !dbg !4569
  call void @free(i8* %187) #12, !dbg !4570
  br label %if.end302, !dbg !4571

if.else294:                                       ; preds = %if.end288
  %call295 = call i32* @__errno_location() #15, !dbg !4572
  %188 = load i32, i32* %call295, align 4, !dbg !4572, !ctir !5
  %cmp296 = icmp ne i32 %188, 2, !dbg !4574
  br i1 %cmp296, label %if.then297, label %if.end301, !dbg !4575

if.then297:                                       ; preds = %if.else294
  %call298 = call i32* @__errno_location() #15, !dbg !4576
  %189 = load i32, i32* %call298, align 4, !dbg !4576, !ctir !5
  %call299 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.109, i64 0, i64 0)) #12, !dbg !4578
  %190 = load i8*, i8** %dst_name.addr, align 8, !dbg !4579
  %call300 = call i8* @quotearg_style(i32 4, i8* %190), !dbg !4579
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %189, i8* %call299, i8* %call300), !dbg !4580
  store i1 false, i1* %retval, align 1, !dbg !4581
  br label %return, !dbg !4581

if.end301:                                        ; preds = %if.else294
  br label %if.end302

if.end302:                                        ; preds = %if.end301, %do.end
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4582
  br label %if.end343, !dbg !4583

if.else303:                                       ; preds = %lor.lhs.false268, %land.lhs.true262, %if.end259
  %st_mode304 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4584, !ctir !335
  %191 = load i32, i32* %st_mode304, align 8, !dbg !4584, !ctir !165
  %and305 = and i32 %191, 61440, !dbg !4584
  %cmp306 = icmp eq i32 %and305, 16384, !dbg !4584
  br i1 %cmp306, label %if.end342, label %land.lhs.true307, !dbg !4586

land.lhs.true307:                                 ; preds = %if.else303
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4587
  %move_mode308 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 9, !dbg !4588, !ctir !3752
  %193 = load i8, i8* %move_mode308, align 8, !dbg !4588
  %tobool309 = trunc i8 %193 to i1, !dbg !4588, !ctir !139
  br i1 %tobool309, label %if.end342, label %land.lhs.true310, !dbg !4589

land.lhs.true310:                                 ; preds = %land.lhs.true307
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4590
  %unlink_dest_before_opening311 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 6, !dbg !4591, !ctir !3752
  %195 = load i8, i8* %unlink_dest_before_opening311, align 1, !dbg !4591
  %tobool312 = trunc i8 %195 to i1, !dbg !4591, !ctir !139
  br i1 %tobool312, label %if.then324, label %lor.lhs.false313, !dbg !4592

lor.lhs.false313:                                 ; preds = %land.lhs.true310
  %196 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4593
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %196, i32 0, i32 19, !dbg !4594, !ctir !3752
  %197 = load i8, i8* %preserve_links, align 2, !dbg !4594
  %tobool314 = trunc i8 %197 to i1, !dbg !4594, !ctir !139
  br i1 %tobool314, label %land.lhs.true315, label %lor.lhs.false317, !dbg !4595

land.lhs.true315:                                 ; preds = %lor.lhs.false313
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 2, !dbg !4596, !ctir !335
  %198 = load i64, i64* %st_nlink, align 8, !dbg !4596, !ctir !333
  %cmp316 = icmp ult i64 1, %198, !dbg !4597
  br i1 %cmp316, label %if.then324, label %lor.lhs.false317, !dbg !4598

lor.lhs.false317:                                 ; preds = %land.lhs.true315, %lor.lhs.false313
  %199 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4599
  %dereference318 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %199, i32 0, i32 1, !dbg !4600, !ctir !3752
  %200 = load i32, i32* %dereference318, align 4, !dbg !4600, !ctir !73
  %cmp319 = icmp eq i32 %200, 2, !dbg !4601
  br i1 %cmp319, label %land.lhs.true320, label %if.end342, !dbg !4602

land.lhs.true320:                                 ; preds = %lor.lhs.false317
  %st_mode321 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4603, !ctir !335
  %201 = load i32, i32* %st_mode321, align 8, !dbg !4603, !ctir !165
  %and322 = and i32 %201, 61440, !dbg !4603
  %cmp323 = icmp eq i32 %and322, 32768, !dbg !4603
  br i1 %cmp323, label %if.end342, label %if.then324, !dbg !4604

if.then324:                                       ; preds = %land.lhs.true320, %land.lhs.true315, %land.lhs.true310
  %202 = load i8*, i8** %dst_name.addr, align 8, !dbg !4605
  %call325 = call i32 @unlink(i8* %202) #12, !dbg !4608
  %cmp326 = icmp ne i32 %call325, 0, !dbg !4609
  br i1 %cmp326, label %land.lhs.true327, label %if.end334, !dbg !4610

land.lhs.true327:                                 ; preds = %if.then324
  %call328 = call i32* @__errno_location() #15, !dbg !4611
  %203 = load i32, i32* %call328, align 4, !dbg !4611, !ctir !5
  %cmp329 = icmp ne i32 %203, 2, !dbg !4612
  br i1 %cmp329, label %if.then330, label %if.end334, !dbg !4613

if.then330:                                       ; preds = %land.lhs.true327
  %call331 = call i32* @__errno_location() #15, !dbg !4614
  %204 = load i32, i32* %call331, align 4, !dbg !4614, !ctir !5
  %call332 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.110, i64 0, i64 0)) #12, !dbg !4616
  %205 = load i8*, i8** %dst_name.addr, align 8, !dbg !4617
  %call333 = call i8* @quotearg_style(i32 4, i8* %205), !dbg !4617
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %204, i8* %call332, i8* %call333), !dbg !4618
  store i1 false, i1* %retval, align 1, !dbg !4619
  br label %return, !dbg !4619

if.end334:                                        ; preds = %land.lhs.true327, %if.then324
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4620
  %206 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4621
  %verbose335 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %206, i32 0, i32 31, !dbg !4623, !ctir !3752
  %207 = load i8, i8* %verbose335, align 2, !dbg !4623
  %tobool336 = trunc i8 %207 to i1, !dbg !4623, !ctir !139
  br i1 %tobool336, label %if.then337, label %if.end341, !dbg !4624

if.then337:                                       ; preds = %if.end334
  %call338 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #12, !dbg !4625
  %208 = load i8*, i8** %dst_name.addr, align 8, !dbg !4626
  %call339 = call i8* @quotearg_style(i32 4, i8* %208), !dbg !4626
  %call340 = call i32 (i8*, ...) @printf(i8* %call338, i8* %call339), !dbg !4627
  br label %if.end341, !dbg !4627

if.end341:                                        ; preds = %if.then337, %if.end334
  br label %if.end342, !dbg !4628

if.end342:                                        ; preds = %if.end341, %land.lhs.true320, %lor.lhs.false317, %land.lhs.true307, %if.else303
  br label %if.end343

if.end343:                                        ; preds = %if.end342, %if.end302
  br label %if.end344, !dbg !4629

if.end344:                                        ; preds = %if.end343, %if.end122
  br label %if.end345, !dbg !4630

if.end345:                                        ; preds = %if.end344, %if.end64
  %209 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4631
  %tobool346 = trunc i8 %209 to i1, !dbg !4631
  br i1 %tobool346, label %land.lhs.true347, label %if.end379, !dbg !4633

land.lhs.true347:                                 ; preds = %if.end345
  %210 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4634
  %dest_info348 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %210, i32 0, i32 37, !dbg !4635, !ctir !3752
  %211 = load %struct.hash_table*, %struct.hash_table** %dest_info348, align 8, !dbg !4635, !ctir !238
  %tobool349 = icmp ne %struct.hash_table* %211, null, !dbg !4634
  br i1 %tobool349, label %land.lhs.true350, label %if.end379, !dbg !4636

land.lhs.true350:                                 ; preds = %land.lhs.true347
  %212 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4637
  %move_mode351 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %212, i32 0, i32 9, !dbg !4638, !ctir !3752
  %213 = load i8, i8* %move_mode351, align 8, !dbg !4638
  %tobool352 = trunc i8 %213 to i1, !dbg !4638, !ctir !139
  br i1 %tobool352, label %if.end379, label %land.lhs.true353, !dbg !4639

land.lhs.true353:                                 ; preds = %land.lhs.true350
  %214 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4640
  %backup_type354 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %214, i32 0, i32 0, !dbg !4641, !ctir !3752
  %215 = load i32, i32* %backup_type354, align 8, !dbg !4641, !ctir !65
  %cmp355 = icmp eq i32 %215, 0, !dbg !4642
  br i1 %cmp355, label %if.then356, label %if.end379, !dbg !4643

if.then356:                                       ; preds = %land.lhs.true353
  call void @llvm.dbg.declare(metadata i8* %lstat_ok, metadata !4644, metadata !DIExpression()), !dbg !4646
  store i8 1, i8* %lstat_ok, align 1, !dbg !4646
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_buf, metadata !4647, metadata !DIExpression()), !dbg !4648
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_lstat_sb, metadata !4649, metadata !DIExpression()), !dbg !4650
  %216 = load i8, i8* %have_dst_lstat, align 1, !dbg !4651
  %tobool357 = trunc i8 %216 to i1, !dbg !4651
  br i1 %tobool357, label %if.then358, label %if.else359, !dbg !4653

if.then358:                                       ; preds = %if.then356
  store %struct.stat* %dst_sb, %struct.stat** %dst_lstat_sb, align 8, !dbg !4654
  br label %if.end365, !dbg !4655

if.else359:                                       ; preds = %if.then356
  %217 = load i8*, i8** %dst_name.addr, align 8, !dbg !4656
  %call360 = call i32 @lstat(i8* %217, %struct.stat* %tmp_buf) #12, !dbg !4659
  %cmp361 = icmp eq i32 %call360, 0, !dbg !4660
  br i1 %cmp361, label %if.then362, label %if.else363, !dbg !4661

if.then362:                                       ; preds = %if.else359
  store %struct.stat* %tmp_buf, %struct.stat** %dst_lstat_sb, align 8, !dbg !4662
  br label %if.end364, !dbg !4663

if.else363:                                       ; preds = %if.else359
  store i8 0, i8* %lstat_ok, align 1, !dbg !4664
  br label %if.end364

if.end364:                                        ; preds = %if.else363, %if.then362
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %if.then358
  %218 = load i8, i8* %lstat_ok, align 1, !dbg !4665
  %tobool366 = trunc i8 %218 to i1, !dbg !4665
  br i1 %tobool366, label %land.lhs.true367, label %if.end378, !dbg !4667

land.lhs.true367:                                 ; preds = %if.end365
  %219 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !4668
  %st_mode368 = getelementptr inbounds %struct.stat, %struct.stat* %219, i32 0, i32 3, !dbg !4668, !ctir !335
  %220 = load i32, i32* %st_mode368, align 8, !dbg !4668, !ctir !165
  %and369 = and i32 %220, 61440, !dbg !4668
  %cmp370 = icmp eq i32 %and369, 40960, !dbg !4668
  br i1 %cmp370, label %land.lhs.true371, label %if.end378, !dbg !4669

land.lhs.true371:                                 ; preds = %land.lhs.true367
  %221 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4670
  %dest_info372 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %221, i32 0, i32 37, !dbg !4671, !ctir !3752
  %222 = load %struct.hash_table*, %struct.hash_table** %dest_info372, align 8, !dbg !4671, !ctir !238
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !4672
  %224 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !4673
  %call373 = call zeroext i1 @seen_file(%struct.hash_table* %222, i8* %223, %struct.stat* %224), !dbg !4674
  br i1 %call373, label %if.then374, label %if.end378, !dbg !4675

if.then374:                                       ; preds = %land.lhs.true371
  %call375 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26.112, i64 0, i64 0)) #12, !dbg !4676
  %225 = load i8*, i8** %src_name.addr, align 8, !dbg !4678
  %call376 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %225), !dbg !4678
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !4679
  %call377 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %226), !dbg !4679
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call375, i8* %call376, i8* %call377), !dbg !4680
  store i1 false, i1* %retval, align 1, !dbg !4681
  br label %return, !dbg !4681

if.end378:                                        ; preds = %land.lhs.true371, %land.lhs.true367, %if.end365
  br label %if.end379, !dbg !4682

if.end379:                                        ; preds = %if.end378, %land.lhs.true353, %land.lhs.true350, %land.lhs.true347, %if.end345
  %227 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4683
  %verbose380 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %227, i32 0, i32 31, !dbg !4685, !ctir !3752
  %228 = load i8, i8* %verbose380, align 2, !dbg !4685
  %tobool381 = trunc i8 %228 to i1, !dbg !4685, !ctir !139
  br i1 %tobool381, label %land.lhs.true382, label %if.end389, !dbg !4686

land.lhs.true382:                                 ; preds = %if.end379
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4687
  %move_mode383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 9, !dbg !4688, !ctir !3752
  %230 = load i8, i8* %move_mode383, align 8, !dbg !4688
  %tobool384 = trunc i8 %230 to i1, !dbg !4688, !ctir !139
  br i1 %tobool384, label %if.end389, label %land.lhs.true385, !dbg !4689

land.lhs.true385:                                 ; preds = %land.lhs.true382
  %231 = load i32, i32* %src_mode, align 4, !dbg !4690
  %and386 = and i32 %231, 61440, !dbg !4690
  %cmp387 = icmp eq i32 %and386, 16384, !dbg !4690
  br i1 %cmp387, label %if.end389, label %if.then388, !dbg !4691

if.then388:                                       ; preds = %land.lhs.true385
  %232 = load i8*, i8** %src_name.addr, align 8, !dbg !4692
  %233 = load i8*, i8** %dst_name.addr, align 8, !dbg !4693
  %234 = load i8*, i8** %dst_backup, align 8, !dbg !4694
  call void @emit_verbose(i8* %232, i8* %233, i8* %234), !dbg !4695
  br label %if.end389, !dbg !4695

if.end389:                                        ; preds = %if.then388, %land.lhs.true385, %land.lhs.true382, %if.end379
  %235 = load i32, i32* %rename_errno, align 4, !dbg !4696
  %cmp390 = icmp eq i32 %235, 0, !dbg !4698
  br i1 %cmp390, label %if.then391, label %if.else392, !dbg !4699

if.then391:                                       ; preds = %if.end389
  store i8* null, i8** %earlier_file, align 8, !dbg !4700
  br label %if.end443, !dbg !4701

if.else392:                                       ; preds = %if.end389
  %236 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4702
  %recursive393 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %236, i32 0, i32 27, !dbg !4704, !ctir !3752
  %237 = load i8, i8* %recursive393, align 2, !dbg !4704
  %tobool394 = trunc i8 %237 to i1, !dbg !4704, !ctir !139
  br i1 %tobool394, label %land.lhs.true395, label %if.else409, !dbg !4705

land.lhs.true395:                                 ; preds = %if.else392
  %238 = load i32, i32* %src_mode, align 4, !dbg !4706
  %and396 = and i32 %238, 61440, !dbg !4706
  %cmp397 = icmp eq i32 %and396, 16384, !dbg !4706
  br i1 %cmp397, label %if.then398, label %if.else409, !dbg !4707

if.then398:                                       ; preds = %land.lhs.true395
  %239 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4708
  %tobool399 = trunc i8 %239 to i1, !dbg !4708
  br i1 %tobool399, label %if.then400, label %if.else404, !dbg !4711

if.then400:                                       ; preds = %if.then398
  %240 = load i8*, i8** %dst_name.addr, align 8, !dbg !4712
  %st_ino401 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4713, !ctir !335
  %241 = load i64, i64* %st_ino401, align 8, !dbg !4713, !ctir !257
  %st_dev402 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4714, !ctir !335
  %242 = load i64, i64* %st_dev402, align 8, !dbg !4714, !ctir !260
  %call403 = call i8* @remember_copied(i8* %240, i64 %241, i64 %242), !dbg !4715
  store i8* %call403, i8** %earlier_file, align 8, !dbg !4716
  br label %if.end408, !dbg !4717

if.else404:                                       ; preds = %if.then398
  %st_ino405 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4718, !ctir !335
  %243 = load i64, i64* %st_ino405, align 8, !dbg !4718, !ctir !257
  %st_dev406 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4719, !ctir !335
  %244 = load i64, i64* %st_dev406, align 8, !dbg !4719, !ctir !260
  %call407 = call i8* @src_to_dest_lookup(i64 %243, i64 %244), !dbg !4720
  store i8* %call407, i8** %earlier_file, align 8, !dbg !4721
  br label %if.end408

if.end408:                                        ; preds = %if.else404, %if.then400
  br label %if.end442, !dbg !4722

if.else409:                                       ; preds = %land.lhs.true395, %if.else392
  %245 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4723
  %move_mode410 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %245, i32 0, i32 9, !dbg !4725, !ctir !3752
  %246 = load i8, i8* %move_mode410, align 8, !dbg !4725
  %tobool411 = trunc i8 %246 to i1, !dbg !4725, !ctir !139
  br i1 %tobool411, label %land.lhs.true412, label %if.else419, !dbg !4726

land.lhs.true412:                                 ; preds = %if.else409
  %st_nlink413 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !4727, !ctir !335
  %247 = load i64, i64* %st_nlink413, align 8, !dbg !4727, !ctir !333
  %cmp414 = icmp eq i64 %247, 1, !dbg !4728
  br i1 %cmp414, label %if.then415, label %if.else419, !dbg !4729

if.then415:                                       ; preds = %land.lhs.true412
  %st_ino416 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4730, !ctir !335
  %248 = load i64, i64* %st_ino416, align 8, !dbg !4730, !ctir !257
  %st_dev417 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4732, !ctir !335
  %249 = load i64, i64* %st_dev417, align 8, !dbg !4732, !ctir !260
  %call418 = call i8* @src_to_dest_lookup(i64 %248, i64 %249), !dbg !4733
  store i8* %call418, i8** %earlier_file, align 8, !dbg !4734
  br label %if.end441, !dbg !4735

if.else419:                                       ; preds = %land.lhs.true412, %if.else409
  %250 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4736
  %preserve_links420 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %250, i32 0, i32 19, !dbg !4738, !ctir !3752
  %251 = load i8, i8* %preserve_links420, align 2, !dbg !4738
  %tobool421 = trunc i8 %251 to i1, !dbg !4738, !ctir !139
  br i1 %tobool421, label %land.lhs.true422, label %if.end440, !dbg !4739

land.lhs.true422:                                 ; preds = %if.else419
  %252 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4740
  %hard_link423 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %252, i32 0, i32 8, !dbg !4741, !ctir !3752
  %253 = load i8, i8* %hard_link423, align 1, !dbg !4741
  %tobool424 = trunc i8 %253 to i1, !dbg !4741, !ctir !139
  br i1 %tobool424, label %if.end440, label %land.lhs.true425, !dbg !4742

land.lhs.true425:                                 ; preds = %land.lhs.true422
  %st_nlink426 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !4743, !ctir !335
  %254 = load i64, i64* %st_nlink426, align 8, !dbg !4743, !ctir !333
  %cmp427 = icmp ult i64 1, %254, !dbg !4744
  br i1 %cmp427, label %if.then436, label %lor.lhs.false428, !dbg !4745

lor.lhs.false428:                                 ; preds = %land.lhs.true425
  %255 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4746
  %tobool429 = trunc i8 %255 to i1, !dbg !4746
  br i1 %tobool429, label %land.lhs.true430, label %lor.lhs.false433, !dbg !4747

land.lhs.true430:                                 ; preds = %lor.lhs.false428
  %256 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4748
  %dereference431 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %256, i32 0, i32 1, !dbg !4749, !ctir !3752
  %257 = load i32, i32* %dereference431, align 4, !dbg !4749, !ctir !73
  %cmp432 = icmp eq i32 %257, 3, !dbg !4750
  br i1 %cmp432, label %if.then436, label %lor.lhs.false433, !dbg !4751

lor.lhs.false433:                                 ; preds = %land.lhs.true430, %lor.lhs.false428
  %258 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4752
  %dereference434 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %258, i32 0, i32 1, !dbg !4753, !ctir !3752
  %259 = load i32, i32* %dereference434, align 4, !dbg !4753, !ctir !73
  %cmp435 = icmp eq i32 %259, 4, !dbg !4754
  br i1 %cmp435, label %if.then436, label %if.end440, !dbg !4755

if.then436:                                       ; preds = %lor.lhs.false433, %land.lhs.true430, %land.lhs.true425
  %260 = load i8*, i8** %dst_name.addr, align 8, !dbg !4756
  %st_ino437 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4758, !ctir !335
  %261 = load i64, i64* %st_ino437, align 8, !dbg !4758, !ctir !257
  %st_dev438 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4759, !ctir !335
  %262 = load i64, i64* %st_dev438, align 8, !dbg !4759, !ctir !260
  %call439 = call i8* @remember_copied(i8* %260, i64 %261, i64 %262), !dbg !4760
  store i8* %call439, i8** %earlier_file, align 8, !dbg !4761
  br label %if.end440, !dbg !4762

if.end440:                                        ; preds = %if.then436, %lor.lhs.false433, %land.lhs.true422, %if.else419
  br label %if.end441

if.end441:                                        ; preds = %if.end440, %if.then415
  br label %if.end442

if.end442:                                        ; preds = %if.end441, %if.end408
  br label %if.end443

if.end443:                                        ; preds = %if.end442, %if.then391
  %263 = load i8*, i8** %earlier_file, align 8, !dbg !4763
  %tobool444 = icmp ne i8* %263, null, !dbg !4763
  br i1 %tobool444, label %if.then445, label %if.end489, !dbg !4765

if.then445:                                       ; preds = %if.end443
  %264 = load i32, i32* %src_mode, align 4, !dbg !4766
  %and446 = and i32 %264, 61440, !dbg !4766
  %cmp447 = icmp eq i32 %and446, 16384, !dbg !4766
  br i1 %cmp447, label %if.then448, label %if.else481, !dbg !4769

if.then448:                                       ; preds = %if.then445
  %265 = load i8*, i8** %src_name.addr, align 8, !dbg !4770
  %266 = load i8*, i8** %earlier_file, align 8, !dbg !4773
  %call449 = call zeroext i1 @same_name(i8* %265, i8* %266), !dbg !4774
  br i1 %call449, label %if.then450, label %if.else454, !dbg !4775

if.then450:                                       ; preds = %if.then448
  %call451 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27.113, i64 0, i64 0)) #12, !dbg !4776
  %267 = load i8*, i8** @top_level_src_name, align 8, !dbg !4778
  %call452 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %267), !dbg !4778
  %268 = load i8*, i8** @top_level_dst_name, align 8, !dbg !4779
  %call453 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %268), !dbg !4779
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call451, i8* %call452, i8* %call453), !dbg !4780
  %269 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4781
  store i8 1, i8* %269, align 1, !dbg !4782, !ctir !139
  br label %un_backup, !dbg !4783

if.else454:                                       ; preds = %if.then448
  %270 = load i8*, i8** %dst_name.addr, align 8, !dbg !4784
  %271 = load i8*, i8** %earlier_file, align 8, !dbg !4786
  %call455 = call zeroext i1 @same_name(i8* %270, i8* %271), !dbg !4787
  br i1 %call455, label %if.then456, label %if.else465, !dbg !4788

if.then456:                                       ; preds = %if.else454
  %call457 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.28.114, i64 0, i64 0)) #12, !dbg !4789
  %272 = load i8*, i8** @top_level_src_name, align 8, !dbg !4791
  %call458 = call i8* @quotearg_style(i32 4, i8* %272), !dbg !4791
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call457, i8* %call458), !dbg !4792
  %273 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4793
  %move_mode459 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %273, i32 0, i32 9, !dbg !4795, !ctir !3752
  %274 = load i8, i8* %move_mode459, align 8, !dbg !4795
  %tobool460 = trunc i8 %274 to i1, !dbg !4795, !ctir !139
  br i1 %tobool460, label %land.lhs.true461, label %if.end464, !dbg !4796

land.lhs.true461:                                 ; preds = %if.then456
  %275 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4797
  %tobool462 = icmp ne i8* %275, null, !dbg !4797
  br i1 %tobool462, label %if.then463, label %if.end464, !dbg !4798

if.then463:                                       ; preds = %land.lhs.true461
  %276 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4799
  store i8 1, i8* %276, align 1, !dbg !4800, !ctir !139
  br label %if.end464, !dbg !4801

if.end464:                                        ; preds = %if.then463, %land.lhs.true461, %if.then456
  store i1 true, i1* %retval, align 1, !dbg !4802
  br label %return, !dbg !4802

if.else465:                                       ; preds = %if.else454
  %277 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4803
  %dereference466 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %277, i32 0, i32 1, !dbg !4805, !ctir !3752
  %278 = load i32, i32* %dereference466, align 4, !dbg !4805, !ctir !73
  %cmp467 = icmp eq i32 %278, 4, !dbg !4806
  br i1 %cmp467, label %if.then473, label %lor.lhs.false468, !dbg !4807

lor.lhs.false468:                                 ; preds = %if.else465
  %279 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4808
  %tobool469 = trunc i8 %279 to i1, !dbg !4808
  br i1 %tobool469, label %land.lhs.true470, label %if.else474, !dbg !4809

land.lhs.true470:                                 ; preds = %lor.lhs.false468
  %280 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4810
  %dereference471 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %280, i32 0, i32 1, !dbg !4811, !ctir !3752
  %281 = load i32, i32* %dereference471, align 4, !dbg !4811, !ctir !73
  %cmp472 = icmp eq i32 %281, 3, !dbg !4812
  br i1 %cmp472, label %if.then473, label %if.else474, !dbg !4813

if.then473:                                       ; preds = %land.lhs.true470, %if.else465
  br label %if.end478, !dbg !4814

if.else474:                                       ; preds = %land.lhs.true470, %lor.lhs.false468
  %call475 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29.115, i64 0, i64 0)) #12, !dbg !4816
  %282 = load i8*, i8** %dst_name.addr, align 8, !dbg !4818
  %call476 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %282), !dbg !4818
  %283 = load i8*, i8** %earlier_file, align 8, !dbg !4819
  %call477 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %283), !dbg !4819
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call475, i8* %call476, i8* %call477), !dbg !4820
  br label %un_backup, !dbg !4821

if.end478:                                        ; preds = %if.then473
  br label %if.end479

if.end479:                                        ; preds = %if.end478
  br label %if.end480

if.end480:                                        ; preds = %if.end479
  br label %if.end488, !dbg !4822

if.else481:                                       ; preds = %if.then445
  %284 = load i8*, i8** %earlier_file, align 8, !dbg !4823
  %285 = load i8*, i8** %dst_name.addr, align 8, !dbg !4826
  %286 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4827
  %verbose482 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %286, i32 0, i32 31, !dbg !4828, !ctir !3752
  %287 = load i8, i8* %verbose482, align 2, !dbg !4828
  %tobool483 = trunc i8 %287 to i1, !dbg !4828, !ctir !139
  %288 = load i8, i8* %dereference65, align 1, !dbg !4829
  %tobool484 = trunc i8 %288 to i1, !dbg !4829
  %call485 = call zeroext i1 @create_hard_link(i8* %284, i8* %285, i1 zeroext true, i1 zeroext %tobool483, i1 zeroext %tobool484), !dbg !4830
  br i1 %call485, label %if.end487, label %if.then486, !dbg !4831

if.then486:                                       ; preds = %if.else481
  br label %un_backup, !dbg !4832

if.end487:                                        ; preds = %if.else481
  store i1 true, i1* %retval, align 1, !dbg !4833
  br label %return, !dbg !4833

if.end488:                                        ; preds = %if.end480
  br label %if.end489, !dbg !4834

if.end489:                                        ; preds = %if.end488, %if.end443
  %289 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4835
  %move_mode490 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %289, i32 0, i32 9, !dbg !4837, !ctir !3752
  %290 = load i8, i8* %move_mode490, align 8, !dbg !4837
  %tobool491 = trunc i8 %290 to i1, !dbg !4837, !ctir !139
  br i1 %tobool491, label %if.then492, label %if.end569, !dbg !4838

if.then492:                                       ; preds = %if.end489
  %291 = load i32, i32* %rename_errno, align 4, !dbg !4839
  %cmp493 = icmp eq i32 %291, 17, !dbg !4842
  br i1 %cmp493, label %if.then494, label %if.end502, !dbg !4843

if.then494:                                       ; preds = %if.then492
  %292 = load i8*, i8** %src_name.addr, align 8, !dbg !4844
  %293 = load i8*, i8** %dst_name.addr, align 8, !dbg !4845
  %call495 = call i32 @rename(i8* %292, i8* %293) #12, !dbg !4846
  %cmp496 = icmp eq i32 %call495, 0, !dbg !4847
  br i1 %cmp496, label %cond.true497, label %cond.false498, !dbg !4846

cond.true497:                                     ; preds = %if.then494
  br label %cond.end500, !dbg !4846

cond.false498:                                    ; preds = %if.then494
  %call499 = call i32* @__errno_location() #15, !dbg !4848
  %294 = load i32, i32* %call499, align 4, !dbg !4848, !ctir !5
  br label %cond.end500, !dbg !4846

cond.end500:                                      ; preds = %cond.false498, %cond.true497
  %cond501 = phi i32 [ 0, %cond.true497 ], [ %294, %cond.false498 ], !dbg !4846
  store i32 %cond501, i32* %rename_errno, align 4, !dbg !4849
  br label %if.end502, !dbg !4850

if.end502:                                        ; preds = %cond.end500, %if.then492
  %295 = load i32, i32* %rename_errno, align 4, !dbg !4851
  %cmp503 = icmp eq i32 %295, 0, !dbg !4853
  br i1 %cmp503, label %if.then504, label %if.end525, !dbg !4854

if.then504:                                       ; preds = %if.end502
  %296 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4855
  %verbose505 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %296, i32 0, i32 31, !dbg !4858, !ctir !3752
  %297 = load i8, i8* %verbose505, align 2, !dbg !4858
  %tobool506 = trunc i8 %297 to i1, !dbg !4858, !ctir !139
  br i1 %tobool506, label %if.then507, label %if.end510, !dbg !4859

if.then507:                                       ; preds = %if.then504
  %call508 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.116, i64 0, i64 0)) #12, !dbg !4860
  %call509 = call i32 (i8*, ...) @printf(i8* %call508), !dbg !4862
  %298 = load i8*, i8** %src_name.addr, align 8, !dbg !4863
  %299 = load i8*, i8** %dst_name.addr, align 8, !dbg !4864
  %300 = load i8*, i8** %dst_backup, align 8, !dbg !4865
  call void @emit_verbose(i8* %298, i8* %299, i8* %300), !dbg !4866
  br label %if.end510, !dbg !4867

if.end510:                                        ; preds = %if.then507, %if.then504
  %301 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4868
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %301, i32 0, i32 18, !dbg !4870, !ctir !3752
  %302 = load i8, i8* %set_security_context, align 1, !dbg !4870
  %tobool511 = trunc i8 %302 to i1, !dbg !4870, !ctir !139
  br i1 %tobool511, label %if.then512, label %if.end514, !dbg !4871

if.then512:                                       ; preds = %if.end510
  %303 = load i8*, i8** %dst_name.addr, align 8, !dbg !4872
  %304 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4874
  %call513 = call zeroext i1 @set_file_security_ctx(i8* %303, i1 zeroext false, i1 zeroext true, %struct.cp_options* %304), !dbg !4875
  br label %if.end514, !dbg !4876

if.end514:                                        ; preds = %if.then512, %if.end510
  %305 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4877
  %tobool515 = icmp ne i8* %305, null, !dbg !4877
  br i1 %tobool515, label %if.then516, label %if.end517, !dbg !4879

if.then516:                                       ; preds = %if.end514
  %306 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4880
  store i8 1, i8* %306, align 1, !dbg !4881, !ctir !139
  br label %if.end517, !dbg !4882

if.end517:                                        ; preds = %if.then516, %if.end514
  %307 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4883
  %tobool518 = trunc i8 %307 to i1, !dbg !4883
  br i1 %tobool518, label %land.lhs.true519, label %if.end524, !dbg !4885

land.lhs.true519:                                 ; preds = %if.end517
  %308 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4886
  %last_file520 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %308, i32 0, i32 34, !dbg !4887, !ctir !3752
  %309 = load i8, i8* %last_file520, align 1, !dbg !4887
  %tobool521 = trunc i8 %309 to i1, !dbg !4887, !ctir !139
  br i1 %tobool521, label %if.end524, label %if.then522, !dbg !4888

if.then522:                                       ; preds = %land.lhs.true519
  %310 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4889
  %dest_info523 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %310, i32 0, i32 37, !dbg !4891, !ctir !3752
  %311 = load %struct.hash_table*, %struct.hash_table** %dest_info523, align 8, !dbg !4891, !ctir !238
  %312 = load i8*, i8** %dst_name.addr, align 8, !dbg !4892
  call void @record_file(%struct.hash_table* %311, i8* %312, %struct.stat* %src_sb), !dbg !4893
  br label %if.end524, !dbg !4894

if.end524:                                        ; preds = %if.then522, %land.lhs.true519, %if.end517
  store i1 true, i1* %retval, align 1, !dbg !4895
  br label %return, !dbg !4895

if.end525:                                        ; preds = %if.end502
  %313 = load i32, i32* %rename_errno, align 4, !dbg !4896
  %cmp526 = icmp eq i32 %313, 22, !dbg !4898
  br i1 %cmp526, label %if.then527, label %if.end531, !dbg !4899

if.then527:                                       ; preds = %if.end525
  %call528 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.31.117, i64 0, i64 0)) #12, !dbg !4900
  %314 = load i8*, i8** @top_level_src_name, align 8, !dbg !4902
  %call529 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %314), !dbg !4902
  %315 = load i8*, i8** @top_level_dst_name, align 8, !dbg !4903
  %call530 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %315), !dbg !4903
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call528, i8* %call529, i8* %call530), !dbg !4904
  %316 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4905
  store i8 1, i8* %316, align 1, !dbg !4906, !ctir !139
  store i1 true, i1* %retval, align 1, !dbg !4907
  br label %return, !dbg !4907

if.end531:                                        ; preds = %if.end525
  %317 = load i32, i32* %rename_errno, align 4, !dbg !4908
  %cmp532 = icmp ne i32 %317, 18, !dbg !4910
  br i1 %cmp532, label %if.then533, label %if.end539, !dbg !4911

if.then533:                                       ; preds = %if.end531
  %318 = load i32, i32* %rename_errno, align 4, !dbg !4912
  %call534 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32.118, i64 0, i64 0)) #12, !dbg !4914
  %319 = load i8*, i8** %src_name.addr, align 8, !dbg !4915
  %call535 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %319), !dbg !4915
  %320 = load i8*, i8** %dst_name.addr, align 8, !dbg !4916
  %call536 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %320), !dbg !4916
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %318, i8* %call534, i8* %call535, i8* %call536), !dbg !4917
  %st_ino537 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4918, !ctir !335
  %321 = load i64, i64* %st_ino537, align 8, !dbg !4918, !ctir !257
  %st_dev538 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4919, !ctir !335
  %322 = load i64, i64* %st_dev538, align 8, !dbg !4919, !ctir !260
  call void @forget_created(i64 %321, i64 %322), !dbg !4920
  store i1 false, i1* %retval, align 1, !dbg !4921
  br label %return, !dbg !4921

if.end539:                                        ; preds = %if.end531
  %323 = load i32, i32* %src_mode, align 4, !dbg !4922
  %and540 = and i32 %323, 61440, !dbg !4922
  %cmp541 = icmp eq i32 %and540, 16384, !dbg !4922
  br i1 %cmp541, label %cond.true542, label %cond.false544, !dbg !4922

cond.true542:                                     ; preds = %if.end539
  %324 = load i8*, i8** %dst_name.addr, align 8, !dbg !4924
  %call543 = call i32 @rmdir(i8* %324) #12, !dbg !4925
  br label %cond.end546, !dbg !4922

cond.false544:                                    ; preds = %if.end539
  %325 = load i8*, i8** %dst_name.addr, align 8, !dbg !4926
  %call545 = call i32 @unlink(i8* %325) #12, !dbg !4927
  br label %cond.end546, !dbg !4922

cond.end546:                                      ; preds = %cond.false544, %cond.true542
  %cond547 = phi i32 [ %call543, %cond.true542 ], [ %call545, %cond.false544 ], !dbg !4922
  %cmp548 = icmp ne i32 %cond547, 0, !dbg !4928
  br i1 %cmp548, label %land.lhs.true549, label %if.end559, !dbg !4929

land.lhs.true549:                                 ; preds = %cond.end546
  %call550 = call i32* @__errno_location() #15, !dbg !4930
  %326 = load i32, i32* %call550, align 4, !dbg !4930, !ctir !5
  %cmp551 = icmp ne i32 %326, 2, !dbg !4931
  br i1 %cmp551, label %if.then552, label %if.end559, !dbg !4932

if.then552:                                       ; preds = %land.lhs.true549
  %call553 = call i32* @__errno_location() #15, !dbg !4933
  %327 = load i32, i32* %call553, align 4, !dbg !4933, !ctir !5
  %call554 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.33.119, i64 0, i64 0)) #12, !dbg !4935
  %328 = load i8*, i8** %src_name.addr, align 8, !dbg !4936
  %call555 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %328), !dbg !4936
  %329 = load i8*, i8** %dst_name.addr, align 8, !dbg !4937
  %call556 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %329), !dbg !4937
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %327, i8* %call554, i8* %call555, i8* %call556), !dbg !4938
  %st_ino557 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4939, !ctir !335
  %330 = load i64, i64* %st_ino557, align 8, !dbg !4939, !ctir !257
  %st_dev558 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4940, !ctir !335
  %331 = load i64, i64* %st_dev558, align 8, !dbg !4940, !ctir !260
  call void @forget_created(i64 %330, i64 %331), !dbg !4941
  store i1 false, i1* %retval, align 1, !dbg !4942
  br label %return, !dbg !4942

if.end559:                                        ; preds = %land.lhs.true549, %cond.end546
  %332 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4943
  %verbose560 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %332, i32 0, i32 31, !dbg !4945, !ctir !3752
  %333 = load i8, i8* %verbose560, align 2, !dbg !4945
  %tobool561 = trunc i8 %333 to i1, !dbg !4945, !ctir !139
  br i1 %tobool561, label %land.lhs.true562, label %if.end568, !dbg !4946

land.lhs.true562:                                 ; preds = %if.end559
  %334 = load i32, i32* %src_mode, align 4, !dbg !4947
  %and563 = and i32 %334, 61440, !dbg !4947
  %cmp564 = icmp eq i32 %and563, 16384, !dbg !4947
  br i1 %cmp564, label %if.end568, label %if.then565, !dbg !4948

if.then565:                                       ; preds = %land.lhs.true562
  %call566 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.120, i64 0, i64 0)) #12, !dbg !4949
  %call567 = call i32 (i8*, ...) @printf(i8* %call566), !dbg !4951
  %335 = load i8*, i8** %src_name.addr, align 8, !dbg !4952
  %336 = load i8*, i8** %dst_name.addr, align 8, !dbg !4953
  %337 = load i8*, i8** %dst_backup, align 8, !dbg !4954
  call void @emit_verbose(i8* %335, i8* %336, i8* %337), !dbg !4955
  br label %if.end568, !dbg !4956

if.end568:                                        ; preds = %if.then565, %land.lhs.true562, %if.end559
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4957
  br label %if.end569, !dbg !4958

if.end569:                                        ; preds = %if.end568, %if.end489
  %338 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4959
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %338, i32 0, i32 28, !dbg !4960, !ctir !3752
  %339 = load i8, i8* %set_mode, align 1, !dbg !4960
  %tobool570 = trunc i8 %339 to i1, !dbg !4960, !ctir !139
  br i1 %tobool570, label %cond.true571, label %cond.false572, !dbg !4959

cond.true571:                                     ; preds = %if.end569
  %340 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4961
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %340, i32 0, i32 4, !dbg !4962, !ctir !3752
  %341 = load i32, i32* %mode, align 8, !dbg !4962, !ctir !236
  br label %cond.end573, !dbg !4959

cond.false572:                                    ; preds = %if.end569
  %342 = load i32, i32* %src_mode, align 4, !dbg !4963
  br label %cond.end573, !dbg !4959

cond.end573:                                      ; preds = %cond.false572, %cond.true571
  %cond574 = phi i32 [ %341, %cond.true571 ], [ %342, %cond.false572 ], !dbg !4959
  %and575 = and i32 %cond574, 4095, !dbg !4964
  store i32 %and575, i32* %dst_mode_bits, align 4, !dbg !4965
  %343 = load i32, i32* %dst_mode_bits, align 4, !dbg !4966
  %344 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4967
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %344, i32 0, i32 14, !dbg !4968, !ctir !3752
  %345 = load i8, i8* %preserve_ownership, align 1, !dbg !4968
  %tobool576 = trunc i8 %345 to i1, !dbg !4968, !ctir !139
  br i1 %tobool576, label %cond.true577, label %cond.false578, !dbg !4967

cond.true577:                                     ; preds = %cond.end573
  br label %cond.end582, !dbg !4967

cond.false578:                                    ; preds = %cond.end573
  %346 = load i32, i32* %src_mode, align 4, !dbg !4969
  %and579 = and i32 %346, 61440, !dbg !4969
  %cmp580 = icmp eq i32 %and579, 16384, !dbg !4969
  %347 = zext i1 %cmp580 to i64, !dbg !4969
  %cond581 = select i1 %cmp580, i32 18, i32 0, !dbg !4969
  br label %cond.end582, !dbg !4967

cond.end582:                                      ; preds = %cond.false578, %cond.true577
  %cond583 = phi i32 [ 63, %cond.true577 ], [ %cond581, %cond.false578 ], !dbg !4967
  %and584 = and i32 %343, %cond583, !dbg !4970
  store i32 %and584, i32* %omitted_permissions, align 4, !dbg !4971
  store i8 1, i8* %delayed_ok, align 1, !dbg !4972
  %348 = load i8*, i8** %src_name.addr, align 8, !dbg !4973
  %349 = load i8*, i8** %dst_name.addr, align 8, !dbg !4975
  %350 = load i32, i32* %src_mode, align 4, !dbg !4976
  %351 = load i8, i8* %new_dst.addr, align 1, !dbg !4977
  %tobool585 = trunc i8 %351 to i1, !dbg !4977
  %352 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4978
  %call586 = call zeroext i1 @set_process_security_ctx(i8* %348, i8* %349, i32 %350, i1 zeroext %tobool585, %struct.cp_options* %352), !dbg !4979
  br i1 %call586, label %if.end588, label %if.then587, !dbg !4980

if.then587:                                       ; preds = %cond.end582
  store i1 false, i1* %retval, align 1, !dbg !4981
  br label %return, !dbg !4981

if.end588:                                        ; preds = %cond.end582
  %353 = load i32, i32* %src_mode, align 4, !dbg !4982
  %and589 = and i32 %353, 61440, !dbg !4982
  %cmp590 = icmp eq i32 %and589, 16384, !dbg !4982
  br i1 %cmp590, label %if.then591, label %if.else682, !dbg !4984

if.then591:                                       ; preds = %if.end588
  call void @llvm.dbg.declare(metadata %struct.dir_list** %dir, metadata !4985, metadata !DIExpression()), !dbg !4987
  %354 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !4988
  %call592 = call zeroext i1 @is_ancestor(%struct.stat* %src_sb, %struct.dir_list* %354) #14, !dbg !4990
  br i1 %call592, label %if.then593, label %if.end596, !dbg !4991

if.then593:                                       ; preds = %if.then591
  %call594 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35.121, i64 0, i64 0)) #12, !dbg !4992
  %355 = load i8*, i8** %src_name.addr, align 8, !dbg !4994
  %call595 = call i8* @quotearg_style(i32 4, i8* %355), !dbg !4994
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call594, i8* %call595), !dbg !4995
  br label %un_backup, !dbg !4996

if.end596:                                        ; preds = %if.then591
  %356 = alloca i8, i64 24, align 16, !dbg !4997
  %357 = bitcast i8* %356 to %struct.dir_list*, !dbg !4997
  store %struct.dir_list* %357, %struct.dir_list** %dir, align 8, !dbg !4998
  %358 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !4999
  %359 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5000
  %parent597 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %359, i32 0, i32 0, !dbg !5001, !ctir !373
  store %struct.dir_list* %358, %struct.dir_list** %parent597, align 8, !dbg !5002, !ctir !372
  %st_ino598 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5003, !ctir !335
  %360 = load i64, i64* %st_ino598, align 8, !dbg !5003, !ctir !257
  %361 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5004
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %361, i32 0, i32 1, !dbg !5005, !ctir !373
  store i64 %360, i64* %ino, align 8, !dbg !5006, !ctir !256
  %st_dev599 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5007, !ctir !335
  %362 = load i64, i64* %st_dev599, align 8, !dbg !5007, !ctir !260
  %363 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5008
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %363, i32 0, i32 2, !dbg !5009, !ctir !373
  store i64 %362, i64* %dev, align 8, !dbg !5010, !ctir !259
  %364 = load i8, i8* %new_dst.addr, align 1, !dbg !5011
  %tobool600 = trunc i8 %364 to i1, !dbg !5011
  br i1 %tobool600, label %if.then605, label %lor.lhs.false601, !dbg !5013

lor.lhs.false601:                                 ; preds = %if.end596
  %st_mode602 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5014, !ctir !335
  %365 = load i32, i32* %st_mode602, align 8, !dbg !5014, !ctir !165
  %and603 = and i32 %365, 61440, !dbg !5014
  %cmp604 = icmp eq i32 %and603, 16384, !dbg !5014
  br i1 %cmp604, label %if.else653, label %if.then605, !dbg !5015

if.then605:                                       ; preds = %lor.lhs.false601, %if.end596
  %366 = load i8*, i8** %dst_name.addr, align 8, !dbg !5016
  %367 = load i32, i32* %dst_mode_bits, align 4, !dbg !5019
  %368 = load i32, i32* %omitted_permissions, align 4, !dbg !5020
  %neg = xor i32 %368, -1, !dbg !5021
  %and606 = and i32 %367, %neg, !dbg !5022
  %call607 = call i32 @mkdir(i8* %366, i32 %and606) #12, !dbg !5023
  %cmp608 = icmp ne i32 %call607, 0, !dbg !5024
  br i1 %cmp608, label %if.then609, label %if.end613, !dbg !5025

if.then609:                                       ; preds = %if.then605
  %call610 = call i32* @__errno_location() #15, !dbg !5026
  %369 = load i32, i32* %call610, align 4, !dbg !5026, !ctir !5
  %call611 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36.122, i64 0, i64 0)) #12, !dbg !5028
  %370 = load i8*, i8** %dst_name.addr, align 8, !dbg !5029
  %call612 = call i8* @quotearg_style(i32 4, i8* %370), !dbg !5029
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %369, i8* %call611, i8* %call612), !dbg !5030
  br label %un_backup, !dbg !5031

if.end613:                                        ; preds = %if.then605
  %371 = load i8*, i8** %dst_name.addr, align 8, !dbg !5032
  %call614 = call i32 @lstat(i8* %371, %struct.stat* %dst_sb) #12, !dbg !5034
  %cmp615 = icmp ne i32 %call614, 0, !dbg !5035
  br i1 %cmp615, label %if.then616, label %if.else620, !dbg !5036

if.then616:                                       ; preds = %if.end613
  %call617 = call i32* @__errno_location() #15, !dbg !5037
  %372 = load i32, i32* %call617, align 4, !dbg !5037, !ctir !5
  %call618 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #12, !dbg !5039
  %373 = load i8*, i8** %dst_name.addr, align 8, !dbg !5040
  %call619 = call i8* @quotearg_style(i32 4, i8* %373), !dbg !5040
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %372, i8* %call618, i8* %call619), !dbg !5041
  br label %un_backup, !dbg !5042

if.else620:                                       ; preds = %if.end613
  %st_mode621 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5043, !ctir !335
  %374 = load i32, i32* %st_mode621, align 8, !dbg !5043, !ctir !165
  %and622 = and i32 %374, 448, !dbg !5045
  %cmp623 = icmp ne i32 %and622, 448, !dbg !5046
  br i1 %cmp623, label %if.then624, label %if.end633, !dbg !5047

if.then624:                                       ; preds = %if.else620
  %st_mode625 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5048, !ctir !335
  %375 = load i32, i32* %st_mode625, align 8, !dbg !5048, !ctir !165
  store i32 %375, i32* %dst_mode, align 4, !dbg !5050
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !5051
  %376 = load i8*, i8** %dst_name.addr, align 8, !dbg !5052
  %377 = load i32, i32* %dst_mode, align 4, !dbg !5054
  %or = or i32 %377, 448, !dbg !5055
  %call626 = call i32 @chmod(i8* %376, i32 %or) #12, !dbg !5056
  %cmp627 = icmp ne i32 %call626, 0, !dbg !5057
  br i1 %cmp627, label %if.then628, label %if.end632, !dbg !5058

if.then628:                                       ; preds = %if.then624
  %call629 = call i32* @__errno_location() #15, !dbg !5059
  %378 = load i32, i32* %call629, align 4, !dbg !5059, !ctir !5
  %call630 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37.123, i64 0, i64 0)) #12, !dbg !5061
  %379 = load i8*, i8** %dst_name.addr, align 8, !dbg !5062
  %call631 = call i8* @quotearg_style(i32 4, i8* %379), !dbg !5062
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %378, i8* %call630, i8* %call631), !dbg !5063
  br label %un_backup, !dbg !5064

if.end632:                                        ; preds = %if.then624
  br label %if.end633, !dbg !5065

if.end633:                                        ; preds = %if.end632, %if.else620
  br label %if.end634

if.end634:                                        ; preds = %if.end633
  %380 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5066
  %381 = load i8, i8* %380, align 1, !dbg !5068
  %tobool635 = trunc i8 %381 to i1, !dbg !5068, !ctir !139
  br i1 %tobool635, label %if.end640, label %if.then636, !dbg !5069

if.then636:                                       ; preds = %if.end634
  %382 = load i8*, i8** %dst_name.addr, align 8, !dbg !5070
  %st_ino637 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 1, !dbg !5072, !ctir !335
  %383 = load i64, i64* %st_ino637, align 8, !dbg !5072, !ctir !257
  %st_dev638 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !5073, !ctir !335
  %384 = load i64, i64* %st_dev638, align 8, !dbg !5073, !ctir !260
  %call639 = call i8* @remember_copied(i8* %382, i64 %383, i64 %384), !dbg !5074
  %385 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5075
  store i8 1, i8* %385, align 1, !dbg !5076, !ctir !139
  br label %if.end640, !dbg !5077

if.end640:                                        ; preds = %if.then636, %if.end634
  %386 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5078
  %verbose641 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %386, i32 0, i32 31, !dbg !5080, !ctir !3752
  %387 = load i8, i8* %verbose641, align 2, !dbg !5080
  %tobool642 = trunc i8 %387 to i1, !dbg !5080, !ctir !139
  br i1 %tobool642, label %if.then643, label %if.end652, !dbg !5081

if.then643:                                       ; preds = %if.end640
  %388 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5082
  %move_mode644 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %388, i32 0, i32 9, !dbg !5085, !ctir !3752
  %389 = load i8, i8* %move_mode644, align 8, !dbg !5085
  %tobool645 = trunc i8 %389 to i1, !dbg !5085, !ctir !139
  br i1 %tobool645, label %if.then646, label %if.else650, !dbg !5086

if.then646:                                       ; preds = %if.then643
  %call647 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38.124, i64 0, i64 0)) #12, !dbg !5087
  %390 = load i8*, i8** %dst_name.addr, align 8, !dbg !5088
  %call648 = call i8* @quotearg_style(i32 4, i8* %390), !dbg !5088
  %call649 = call i32 (i8*, ...) @printf(i8* %call647, i8* %call648), !dbg !5089
  br label %if.end651, !dbg !5089

if.else650:                                       ; preds = %if.then643
  %391 = load i8*, i8** %src_name.addr, align 8, !dbg !5090
  %392 = load i8*, i8** %dst_name.addr, align 8, !dbg !5091
  call void @emit_verbose(i8* %391, i8* %392, i8* null), !dbg !5092
  br label %if.end651

if.end651:                                        ; preds = %if.else650, %if.then646
  br label %if.end652, !dbg !5093

if.end652:                                        ; preds = %if.end651, %if.end640
  br label %if.end668, !dbg !5094

if.else653:                                       ; preds = %lor.lhs.false601
  store i32 0, i32* %omitted_permissions, align 4, !dbg !5095
  %393 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5097
  %set_security_context654 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %393, i32 0, i32 18, !dbg !5099, !ctir !3752
  %394 = load i8, i8* %set_security_context654, align 1, !dbg !5099
  %tobool655 = trunc i8 %394 to i1, !dbg !5099, !ctir !139
  br i1 %tobool655, label %if.then658, label %lor.lhs.false656, !dbg !5100

lor.lhs.false656:                                 ; preds = %if.else653
  %395 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5101
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %395, i32 0, i32 22, !dbg !5102, !ctir !3752
  %396 = load i8, i8* %preserve_security_context, align 1, !dbg !5102
  %tobool657 = trunc i8 %396 to i1, !dbg !5102, !ctir !139
  br i1 %tobool657, label %if.then658, label %if.end667, !dbg !5103

if.then658:                                       ; preds = %lor.lhs.false656, %if.else653
  %397 = load i8*, i8** %dst_name.addr, align 8, !dbg !5104
  %398 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5106
  %preserve_security_context659 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %398, i32 0, i32 22, !dbg !5107, !ctir !3752
  %399 = load i8, i8* %preserve_security_context659, align 1, !dbg !5107
  %tobool660 = trunc i8 %399 to i1, !dbg !5107, !ctir !139
  %400 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5108
  %call661 = call zeroext i1 @set_file_security_ctx(i8* %397, i1 zeroext %tobool660, i1 zeroext false, %struct.cp_options* %400), !dbg !5109
  br i1 %call661, label %if.end666, label %if.then662, !dbg !5110

if.then662:                                       ; preds = %if.then658
  %401 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5111
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %401, i32 0, i32 23, !dbg !5114, !ctir !3752
  %402 = load i8, i8* %require_preserve_context, align 2, !dbg !5114
  %tobool663 = trunc i8 %402 to i1, !dbg !5114, !ctir !139
  br i1 %tobool663, label %if.then664, label %if.end665, !dbg !5115

if.then664:                                       ; preds = %if.then662
  br label %un_backup, !dbg !5116

if.end665:                                        ; preds = %if.then662
  br label %if.end666, !dbg !5117

if.end666:                                        ; preds = %if.end665, %if.then658
  br label %if.end667, !dbg !5118

if.end667:                                        ; preds = %if.end666, %lor.lhs.false656
  br label %if.end668

if.end668:                                        ; preds = %if.end667, %if.end652
  %403 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5119
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %403, i32 0, i32 13, !dbg !5121, !ctir !3752
  %404 = load i8, i8* %one_file_system, align 4, !dbg !5121
  %tobool669 = trunc i8 %404 to i1, !dbg !5121, !ctir !139
  br i1 %tobool669, label %land.lhs.true670, label %if.else677, !dbg !5122

land.lhs.true670:                                 ; preds = %if.end668
  %405 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5123
  %tobool671 = icmp ne %struct.stat* %405, null, !dbg !5123
  br i1 %tobool671, label %land.lhs.true672, label %if.else677, !dbg !5124

land.lhs.true672:                                 ; preds = %land.lhs.true670
  %406 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5125
  %st_dev673 = getelementptr inbounds %struct.stat, %struct.stat* %406, i32 0, i32 0, !dbg !5126, !ctir !389
  %407 = load i64, i64* %st_dev673, align 8, !dbg !5126, !ctir !260
  %st_dev674 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5127, !ctir !335
  %408 = load i64, i64* %st_dev674, align 8, !dbg !5127, !ctir !260
  %cmp675 = icmp ne i64 %407, %408, !dbg !5128
  br i1 %cmp675, label %if.then676, label %if.else677, !dbg !5129

if.then676:                                       ; preds = %land.lhs.true672
  br label %if.end681, !dbg !5130

if.else677:                                       ; preds = %land.lhs.true672, %land.lhs.true670, %if.end668
  %409 = load i8*, i8** %src_name.addr, align 8, !dbg !5132
  %410 = load i8*, i8** %dst_name.addr, align 8, !dbg !5134
  %411 = load i8, i8* %new_dst.addr, align 1, !dbg !5135
  %tobool678 = trunc i8 %411 to i1, !dbg !5135
  %412 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5136
  %413 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5137
  %414 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5138
  %415 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5139
  %call679 = call zeroext i1 @copy_dir(i8* %409, i8* %410, i1 zeroext %tobool678, %struct.stat* %src_sb, %struct.dir_list* %412, %struct.cp_options* %413, i8* %414, i8* %415), !dbg !5140
  %frombool680 = zext i1 %call679 to i8, !dbg !5141
  store i8 %frombool680, i8* %delayed_ok, align 1, !dbg !5141
  br label %if.end681

if.end681:                                        ; preds = %if.else677, %if.then676
  br label %if.end894, !dbg !5142

if.else682:                                       ; preds = %if.end588
  %416 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5143
  %symbolic_link683 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %416, i32 0, i32 29, !dbg !5145, !ctir !3752
  %417 = load i8, i8* %symbolic_link683, align 4, !dbg !5145
  %tobool684 = trunc i8 %417 to i1, !dbg !5145, !ctir !139
  br i1 %tobool684, label %if.then685, label %if.else730, !dbg !5146

if.then685:                                       ; preds = %if.else682
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5147
  %418 = load i8*, i8** %src_name.addr, align 8, !dbg !5149
  %419 = load i8, i8* %418, align 1, !dbg !5151, !ctir !114
  %conv = sext i8 %419 to i32, !dbg !5151
  %cmp686 = icmp ne i32 %conv, 47, !dbg !5152
  br i1 %cmp686, label %if.then688, label %if.end719, !dbg !5153

if.then688:                                       ; preds = %if.then685
  call void @llvm.dbg.declare(metadata %struct.stat* %dot_sb, metadata !5154, metadata !DIExpression()), !dbg !5156
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_parent_sb, metadata !5157, metadata !DIExpression()), !dbg !5158
  call void @llvm.dbg.declare(metadata i8** %dst_parent, metadata !5159, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.declare(metadata i8* %in_current_dir, metadata !5161, metadata !DIExpression()), !dbg !5162
  %420 = load i8*, i8** %dst_name.addr, align 8, !dbg !5163
  %call689 = call i8* @dir_name(i8* %420), !dbg !5164
  store i8* %call689, i8** %dst_parent, align 8, !dbg !5165
  %421 = load i8*, i8** %dst_parent, align 8, !dbg !5166
  %call690 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.125, i64 0, i64 0), i8* %421) #14, !dbg !5166
  %cmp691 = icmp eq i32 %call690, 0, !dbg !5166
  br i1 %cmp691, label %lor.end712, label %lor.lhs.false693, !dbg !5167

lor.lhs.false693:                                 ; preds = %if.then688
  %call694 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.125, i64 0, i64 0), %struct.stat* %dot_sb) #12, !dbg !5168
  %cmp695 = icmp ne i32 %call694, 0, !dbg !5169
  br i1 %cmp695, label %lor.end712, label %lor.lhs.false697, !dbg !5170

lor.lhs.false697:                                 ; preds = %lor.lhs.false693
  %422 = load i8*, i8** %dst_parent, align 8, !dbg !5171
  %call698 = call i32 @stat(i8* %422, %struct.stat* %dst_parent_sb) #12, !dbg !5172
  %cmp699 = icmp ne i32 %call698, 0, !dbg !5173
  br i1 %cmp699, label %lor.end712, label %lor.rhs701, !dbg !5174

lor.rhs701:                                       ; preds = %lor.lhs.false697
  %st_ino702 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 1, !dbg !5175, !ctir !335
  %423 = load i64, i64* %st_ino702, align 8, !dbg !5175, !ctir !257
  %st_ino703 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 1, !dbg !5175, !ctir !335
  %424 = load i64, i64* %st_ino703, align 8, !dbg !5175, !ctir !257
  %cmp704 = icmp eq i64 %423, %424, !dbg !5175
  br i1 %cmp704, label %land.rhs706, label %land.end711, !dbg !5175

land.rhs706:                                      ; preds = %lor.rhs701
  %st_dev707 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 0, !dbg !5175, !ctir !335
  %425 = load i64, i64* %st_dev707, align 8, !dbg !5175, !ctir !260
  %st_dev708 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 0, !dbg !5175, !ctir !335
  %426 = load i64, i64* %st_dev708, align 8, !dbg !5175, !ctir !260
  %cmp709 = icmp eq i64 %425, %426, !dbg !5175
  br label %land.end711

land.end711:                                      ; preds = %land.rhs706, %lor.rhs701
  %427 = phi i1 [ false, %lor.rhs701 ], [ %cmp709, %land.rhs706 ], !dbg !5176
  br label %lor.end712, !dbg !5174

lor.end712:                                       ; preds = %land.end711, %lor.lhs.false697, %lor.lhs.false693, %if.then688
  %428 = phi i1 [ true, %lor.lhs.false697 ], [ true, %lor.lhs.false693 ], [ true, %if.then688 ], [ %427, %land.end711 ]
  %frombool713 = zext i1 %428 to i8, !dbg !5177
  store i8 %frombool713, i8* %in_current_dir, align 1, !dbg !5177
  %429 = load i8*, i8** %dst_parent, align 8, !dbg !5178
  call void @free(i8* %429) #12, !dbg !5179
  %430 = load i8, i8* %in_current_dir, align 1, !dbg !5180
  %tobool714 = trunc i8 %430 to i1, !dbg !5180
  br i1 %tobool714, label %if.end718, label %if.then715, !dbg !5182

if.then715:                                       ; preds = %lor.end712
  %call716 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.40.126, i64 0, i64 0)) #12, !dbg !5183
  %431 = load i8*, i8** %dst_name.addr, align 8, !dbg !5185
  %call717 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %431), !dbg !5185
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call716, i8* %call717), !dbg !5186
  br label %un_backup, !dbg !5187

if.end718:                                        ; preds = %lor.end712
  br label %if.end719, !dbg !5188

if.end719:                                        ; preds = %if.end718, %if.then685
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5189, metadata !DIExpression()), !dbg !5190
  %432 = load i8*, i8** %src_name.addr, align 8, !dbg !5191
  %433 = load i8*, i8** %dst_name.addr, align 8, !dbg !5192
  %434 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5193
  %unlink_dest_after_failed_open720 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %434, i32 0, i32 7, !dbg !5194, !ctir !3752
  %435 = load i8, i8* %unlink_dest_after_failed_open720, align 2, !dbg !5194
  %tobool721 = trunc i8 %435 to i1, !dbg !5194, !ctir !139
  %call722 = call i32 @force_symlinkat(i8* %432, i32 -100, i8* %433, i1 zeroext %tobool721, i32 -1), !dbg !5195
  store i32 %call722, i32* %err, align 4, !dbg !5190
  %436 = load i32, i32* %err, align 4, !dbg !5196
  %cmp723 = icmp slt i32 0, %436, !dbg !5198
  br i1 %cmp723, label %if.then725, label %if.end729, !dbg !5199

if.then725:                                       ; preds = %if.end719
  %437 = load i32, i32* %err, align 4, !dbg !5200
  %call726 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.41.127, i64 0, i64 0)) #12, !dbg !5202
  %438 = load i8*, i8** %dst_name.addr, align 8, !dbg !5203
  %call727 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %438), !dbg !5203
  %439 = load i8*, i8** %src_name.addr, align 8, !dbg !5204
  %call728 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %439), !dbg !5204
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %437, i8* %call726, i8* %call727, i8* %call728), !dbg !5205
  br label %un_backup, !dbg !5206

if.end729:                                        ; preds = %if.end719
  br label %if.end893, !dbg !5207

if.else730:                                       ; preds = %if.else682
  %440 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5208
  %hard_link731 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %440, i32 0, i32 8, !dbg !5210, !ctir !3752
  %441 = load i8, i8* %hard_link731, align 1, !dbg !5210
  %tobool732 = trunc i8 %441 to i1, !dbg !5210, !ctir !139
  br i1 %tobool732, label %if.then734, label %if.else749, !dbg !5211

if.then734:                                       ; preds = %if.else730
  call void @llvm.dbg.declare(metadata i8* %replace, metadata !5212, metadata !DIExpression()), !dbg !5214
  %442 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5215
  %unlink_dest_after_failed_open735 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %442, i32 0, i32 7, !dbg !5216, !ctir !3752
  %443 = load i8, i8* %unlink_dest_after_failed_open735, align 2, !dbg !5216
  %tobool736 = trunc i8 %443 to i1, !dbg !5216, !ctir !139
  br i1 %tobool736, label %lor.end742, label %lor.rhs738, !dbg !5217

lor.rhs738:                                       ; preds = %if.then734
  %444 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5218
  %interactive739 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %444, i32 0, i32 2, !dbg !5219, !ctir !3752
  %445 = load i32, i32* %interactive739, align 8, !dbg !5219, !ctir !80
  %cmp740 = icmp eq i32 %445, 3, !dbg !5220
  br label %lor.end742, !dbg !5217

lor.end742:                                       ; preds = %lor.rhs738, %if.then734
  %446 = phi i1 [ true, %if.then734 ], [ %cmp740, %lor.rhs738 ]
  %frombool743 = zext i1 %446 to i8, !dbg !5214
  store i8 %frombool743, i8* %replace, align 1, !dbg !5214
  %447 = load i8*, i8** %src_name.addr, align 8, !dbg !5221
  %448 = load i8*, i8** %dst_name.addr, align 8, !dbg !5223
  %449 = load i8, i8* %replace, align 1, !dbg !5224
  %tobool744 = trunc i8 %449 to i1, !dbg !5224
  %450 = load i8, i8* %dereference65, align 1, !dbg !5225
  %tobool745 = trunc i8 %450 to i1, !dbg !5225
  %call746 = call zeroext i1 @create_hard_link(i8* %447, i8* %448, i1 zeroext %tobool744, i1 zeroext false, i1 zeroext %tobool745), !dbg !5226
  br i1 %call746, label %if.end748, label %if.then747, !dbg !5227

if.then747:                                       ; preds = %lor.end742
  br label %un_backup, !dbg !5228

if.end748:                                        ; preds = %lor.end742
  br label %if.end892, !dbg !5229

if.else749:                                       ; preds = %if.else730
  %451 = load i32, i32* %src_mode, align 4, !dbg !5230
  %and750 = and i32 %451, 61440, !dbg !5230
  %cmp751 = icmp eq i32 %and750, 32768, !dbg !5230
  br i1 %cmp751, label %if.then761, label %lor.lhs.false753, !dbg !5232

lor.lhs.false753:                                 ; preds = %if.else749
  %452 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5233
  %copy_as_regular754 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %452, i32 0, i32 5, !dbg !5234, !ctir !3752
  %453 = load i8, i8* %copy_as_regular754, align 4, !dbg !5234
  %tobool755 = trunc i8 %453 to i1, !dbg !5234, !ctir !139
  br i1 %tobool755, label %land.lhs.true757, label %if.else766, !dbg !5235

land.lhs.true757:                                 ; preds = %lor.lhs.false753
  %454 = load i32, i32* %src_mode, align 4, !dbg !5236
  %and758 = and i32 %454, 61440, !dbg !5236
  %cmp759 = icmp eq i32 %and758, 40960, !dbg !5236
  br i1 %cmp759, label %if.else766, label %if.then761, !dbg !5237

if.then761:                                       ; preds = %land.lhs.true757, %if.else749
  store i8 1, i8* %copied_as_regular, align 1, !dbg !5238
  %455 = load i8*, i8** %src_name.addr, align 8, !dbg !5240
  %456 = load i8*, i8** %dst_name.addr, align 8, !dbg !5242
  %457 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5243
  %458 = load i32, i32* %dst_mode_bits, align 4, !dbg !5244
  %and762 = and i32 %458, 511, !dbg !5245
  %459 = load i32, i32* %omitted_permissions, align 4, !dbg !5246
  %call763 = call zeroext i1 @copy_reg(i8* %455, i8* %456, %struct.cp_options* %457, i32 %and762, i32 %459, i8* %new_dst.addr, %struct.stat* %src_sb), !dbg !5247
  br i1 %call763, label %if.end765, label %if.then764, !dbg !5248

if.then764:                                       ; preds = %if.then761
  br label %un_backup, !dbg !5249

if.end765:                                        ; preds = %if.then761
  br label %if.end891, !dbg !5250

if.else766:                                       ; preds = %land.lhs.true757, %lor.lhs.false753
  %460 = load i32, i32* %src_mode, align 4, !dbg !5251
  %and767 = and i32 %460, 61440, !dbg !5251
  %cmp768 = icmp eq i32 %and767, 4096, !dbg !5251
  br i1 %cmp768, label %if.then770, label %if.else789, !dbg !5253

if.then770:                                       ; preds = %if.else766
  %461 = load i8*, i8** %dst_name.addr, align 8, !dbg !5254
  %462 = load i32, i32* %src_mode, align 4, !dbg !5257
  %463 = load i32, i32* %omitted_permissions, align 4, !dbg !5258
  %neg771 = xor i32 %463, -1, !dbg !5259
  %and772 = and i32 %462, %neg771, !dbg !5260
  %call773 = call i32 @mknod(i8* %461, i32 %and772, i64 0) #12, !dbg !5261
  %cmp774 = icmp ne i32 %call773, 0, !dbg !5262
  br i1 %cmp774, label %if.then776, label %if.end788, !dbg !5263

if.then776:                                       ; preds = %if.then770
  %464 = load i8*, i8** %dst_name.addr, align 8, !dbg !5264
  %465 = load i32, i32* %src_mode, align 4, !dbg !5266
  %and777 = and i32 %465, -4097, !dbg !5267
  %466 = load i32, i32* %omitted_permissions, align 4, !dbg !5268
  %neg778 = xor i32 %466, -1, !dbg !5269
  %and779 = and i32 %and777, %neg778, !dbg !5270
  %call780 = call i32 @mkfifo(i8* %464, i32 %and779) #12, !dbg !5271
  %cmp781 = icmp ne i32 %call780, 0, !dbg !5272
  br i1 %cmp781, label %if.then783, label %if.end787, !dbg !5273

if.then783:                                       ; preds = %if.then776
  %call784 = call i32* @__errno_location() #15, !dbg !5274
  %467 = load i32, i32* %call784, align 4, !dbg !5274, !ctir !5
  %call785 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42.128, i64 0, i64 0)) #12, !dbg !5276
  %468 = load i8*, i8** %dst_name.addr, align 8, !dbg !5277
  %call786 = call i8* @quotearg_style(i32 4, i8* %468), !dbg !5277
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %467, i8* %call785, i8* %call786), !dbg !5278
  br label %un_backup, !dbg !5279

if.end787:                                        ; preds = %if.then776
  br label %if.end788, !dbg !5280

if.end788:                                        ; preds = %if.end787, %if.then770
  br label %if.end890, !dbg !5281

if.else789:                                       ; preds = %if.else766
  %469 = load i32, i32* %src_mode, align 4, !dbg !5282
  %and790 = and i32 %469, 61440, !dbg !5282
  %cmp791 = icmp eq i32 %and790, 24576, !dbg !5282
  br i1 %cmp791, label %if.then801, label %lor.lhs.false793, !dbg !5284

lor.lhs.false793:                                 ; preds = %if.else789
  %470 = load i32, i32* %src_mode, align 4, !dbg !5285
  %and794 = and i32 %470, 61440, !dbg !5285
  %cmp795 = icmp eq i32 %and794, 8192, !dbg !5285
  br i1 %cmp795, label %if.then801, label %lor.lhs.false797, !dbg !5286

lor.lhs.false797:                                 ; preds = %lor.lhs.false793
  %471 = load i32, i32* %src_mode, align 4, !dbg !5287
  %and798 = and i32 %471, 61440, !dbg !5287
  %cmp799 = icmp eq i32 %and798, 49152, !dbg !5287
  br i1 %cmp799, label %if.then801, label %if.else812, !dbg !5288

if.then801:                                       ; preds = %lor.lhs.false797, %lor.lhs.false793, %if.else789
  %472 = load i8*, i8** %dst_name.addr, align 8, !dbg !5289
  %473 = load i32, i32* %src_mode, align 4, !dbg !5292
  %474 = load i32, i32* %omitted_permissions, align 4, !dbg !5293
  %neg802 = xor i32 %474, -1, !dbg !5294
  %and803 = and i32 %473, %neg802, !dbg !5295
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 7, !dbg !5296, !ctir !335
  %475 = load i64, i64* %st_rdev, align 8, !dbg !5296, !ctir !260
  %call804 = call i32 @mknod(i8* %472, i32 %and803, i64 %475) #12, !dbg !5297
  %cmp805 = icmp ne i32 %call804, 0, !dbg !5298
  br i1 %cmp805, label %if.then807, label %if.end811, !dbg !5299

if.then807:                                       ; preds = %if.then801
  %call808 = call i32* @__errno_location() #15, !dbg !5300
  %476 = load i32, i32* %call808, align 4, !dbg !5300, !ctir !5
  %call809 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.129, i64 0, i64 0)) #12, !dbg !5302
  %477 = load i8*, i8** %dst_name.addr, align 8, !dbg !5303
  %call810 = call i8* @quotearg_style(i32 4, i8* %477), !dbg !5303
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %476, i8* %call809, i8* %call810), !dbg !5304
  br label %un_backup, !dbg !5305

if.end811:                                        ; preds = %if.then801
  br label %if.end889, !dbg !5306

if.else812:                                       ; preds = %lor.lhs.false797
  %478 = load i32, i32* %src_mode, align 4, !dbg !5307
  %and813 = and i32 %478, 61440, !dbg !5307
  %cmp814 = icmp eq i32 %and813, 40960, !dbg !5307
  br i1 %cmp814, label %if.then816, label %if.else885, !dbg !5309

if.then816:                                       ; preds = %if.else812
  call void @llvm.dbg.declare(metadata i8** %src_link_val, metadata !5310, metadata !DIExpression()), !dbg !5312
  %479 = load i8*, i8** %src_name.addr, align 8, !dbg !5313
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !5314, !ctir !335
  %480 = load i64, i64* %st_size, align 8, !dbg !5314, !ctir !30
  %call817 = call i8* @areadlink_with_size(i8* %479, i64 %480), !dbg !5315
  store i8* %call817, i8** %src_link_val, align 8, !dbg !5312
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5316
  %481 = load i8*, i8** %src_link_val, align 8, !dbg !5317
  %cmp818 = icmp eq i8* %481, null, !dbg !5319
  br i1 %cmp818, label %if.then820, label %if.end824, !dbg !5320

if.then820:                                       ; preds = %if.then816
  %call821 = call i32* @__errno_location() #15, !dbg !5321
  %482 = load i32, i32* %call821, align 4, !dbg !5321, !ctir !5
  %call822 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44.130, i64 0, i64 0)) #12, !dbg !5323
  %483 = load i8*, i8** %src_name.addr, align 8, !dbg !5324
  %call823 = call i8* @quotearg_style(i32 4, i8* %483), !dbg !5324
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %482, i8* %call822, i8* %call823), !dbg !5325
  br label %un_backup, !dbg !5326

if.end824:                                        ; preds = %if.then816
  call void @llvm.dbg.declare(metadata i32* %symlink_err, metadata !5327, metadata !DIExpression()), !dbg !5328
  %484 = load i8*, i8** %src_link_val, align 8, !dbg !5329
  %485 = load i8*, i8** %dst_name.addr, align 8, !dbg !5330
  %486 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5331
  %unlink_dest_after_failed_open825 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %486, i32 0, i32 7, !dbg !5332, !ctir !3752
  %487 = load i8, i8* %unlink_dest_after_failed_open825, align 2, !dbg !5332
  %tobool826 = trunc i8 %487 to i1, !dbg !5332, !ctir !139
  %call827 = call i32 @force_symlinkat(i8* %484, i32 -100, i8* %485, i1 zeroext %tobool826, i32 -1), !dbg !5333
  store i32 %call827, i32* %symlink_err, align 4, !dbg !5328
  %488 = load i32, i32* %symlink_err, align 4, !dbg !5334
  %cmp828 = icmp slt i32 0, %488, !dbg !5336
  br i1 %cmp828, label %land.lhs.true830, label %if.end857, !dbg !5337

land.lhs.true830:                                 ; preds = %if.end824
  %489 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5338
  %update831 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %489, i32 0, i32 30, !dbg !5339, !ctir !3752
  %490 = load i8, i8* %update831, align 1, !dbg !5339
  %tobool832 = trunc i8 %490 to i1, !dbg !5339, !ctir !139
  br i1 %tobool832, label %land.lhs.true834, label %if.end857, !dbg !5340

land.lhs.true834:                                 ; preds = %land.lhs.true830
  %491 = load i8, i8* %new_dst.addr, align 1, !dbg !5341
  %tobool835 = trunc i8 %491 to i1, !dbg !5341
  br i1 %tobool835, label %if.end857, label %land.lhs.true836, !dbg !5342

land.lhs.true836:                                 ; preds = %land.lhs.true834
  %st_mode837 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5343, !ctir !335
  %492 = load i32, i32* %st_mode837, align 8, !dbg !5343, !ctir !165
  %and838 = and i32 %492, 61440, !dbg !5343
  %cmp839 = icmp eq i32 %and838, 40960, !dbg !5343
  br i1 %cmp839, label %land.lhs.true841, label %if.end857, !dbg !5344

land.lhs.true841:                                 ; preds = %land.lhs.true836
  %st_size842 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !5345, !ctir !335
  %493 = load i64, i64* %st_size842, align 8, !dbg !5345, !ctir !30
  %494 = load i8*, i8** %src_link_val, align 8, !dbg !5346
  %call843 = call i64 @strlen(i8* %494) #14, !dbg !5347
  %cmp844 = icmp eq i64 %493, %call843, !dbg !5348
  br i1 %cmp844, label %if.then846, label %if.end857, !dbg !5349

if.then846:                                       ; preds = %land.lhs.true841
  call void @llvm.dbg.declare(metadata i8** %dest_link_val, metadata !5350, metadata !DIExpression()), !dbg !5352
  %495 = load i8*, i8** %dst_name.addr, align 8, !dbg !5353
  %st_size847 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !5354, !ctir !335
  %496 = load i64, i64* %st_size847, align 8, !dbg !5354, !ctir !30
  %call848 = call i8* @areadlink_with_size(i8* %495, i64 %496), !dbg !5355
  store i8* %call848, i8** %dest_link_val, align 8, !dbg !5352
  %497 = load i8*, i8** %dest_link_val, align 8, !dbg !5356
  %tobool849 = icmp ne i8* %497, null, !dbg !5356
  br i1 %tobool849, label %if.then850, label %if.end856, !dbg !5358

if.then850:                                       ; preds = %if.then846
  %498 = load i8*, i8** %dest_link_val, align 8, !dbg !5359
  %499 = load i8*, i8** %src_link_val, align 8, !dbg !5359
  %call851 = call i32 @strcmp(i8* %498, i8* %499) #14, !dbg !5359
  %cmp852 = icmp eq i32 %call851, 0, !dbg !5359
  br i1 %cmp852, label %if.then854, label %if.end855, !dbg !5362

if.then854:                                       ; preds = %if.then850
  store i32 0, i32* %symlink_err, align 4, !dbg !5363
  br label %if.end855, !dbg !5364

if.end855:                                        ; preds = %if.then854, %if.then850
  %500 = load i8*, i8** %dest_link_val, align 8, !dbg !5365
  call void @free(i8* %500) #12, !dbg !5366
  br label %if.end856, !dbg !5367

if.end856:                                        ; preds = %if.end855, %if.then846
  br label %if.end857, !dbg !5368

if.end857:                                        ; preds = %if.end856, %land.lhs.true841, %land.lhs.true836, %land.lhs.true834, %land.lhs.true830, %if.end824
  %501 = load i8*, i8** %src_link_val, align 8, !dbg !5369
  call void @free(i8* %501) #12, !dbg !5370
  %502 = load i32, i32* %symlink_err, align 4, !dbg !5371
  %cmp858 = icmp slt i32 0, %502, !dbg !5373
  br i1 %cmp858, label %if.then860, label %if.end863, !dbg !5374

if.then860:                                       ; preds = %if.end857
  %503 = load i32, i32* %symlink_err, align 4, !dbg !5375
  %call861 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45.131, i64 0, i64 0)) #12, !dbg !5377
  %504 = load i8*, i8** %dst_name.addr, align 8, !dbg !5378
  %call862 = call i8* @quotearg_style(i32 4, i8* %504), !dbg !5378
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %503, i8* %call861, i8* %call862), !dbg !5379
  br label %un_backup, !dbg !5380

if.end863:                                        ; preds = %if.end857
  %505 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5381
  %preserve_security_context864 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %505, i32 0, i32 22, !dbg !5383, !ctir !3752
  %506 = load i8, i8* %preserve_security_context864, align 1, !dbg !5383
  %tobool865 = trunc i8 %506 to i1, !dbg !5383, !ctir !139
  br i1 %tobool865, label %if.then866, label %if.end867, !dbg !5384

if.then866:                                       ; preds = %if.end863
  call void @restore_default_fscreatecon_or_die(), !dbg !5385
  br label %if.end867, !dbg !5385

if.end867:                                        ; preds = %if.then866, %if.end863
  %507 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5386
  %preserve_ownership868 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %507, i32 0, i32 14, !dbg !5388, !ctir !3752
  %508 = load i8, i8* %preserve_ownership868, align 1, !dbg !5388
  %tobool869 = trunc i8 %508 to i1, !dbg !5388, !ctir !139
  br i1 %tobool869, label %if.then870, label %if.end884, !dbg !5389

if.then870:                                       ; preds = %if.end867
  %509 = load i8*, i8** %dst_name.addr, align 8, !dbg !5390
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !5393, !ctir !335
  %510 = load i32, i32* %st_uid, align 4, !dbg !5393, !ctir !343
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !5394, !ctir !335
  %511 = load i32, i32* %st_gid, align 8, !dbg !5394, !ctir !345
  %call871 = call i32 @lchown(i8* %509, i32 %510, i32 %511) #12, !dbg !5395
  %cmp872 = icmp ne i32 %call871, 0, !dbg !5396
  br i1 %cmp872, label %land.lhs.true874, label %if.else882, !dbg !5397

land.lhs.true874:                                 ; preds = %if.then870
  %512 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5398
  %call875 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %512) #14, !dbg !5399
  br i1 %call875, label %if.else882, label %if.then876, !dbg !5400

if.then876:                                       ; preds = %land.lhs.true874
  %call877 = call i32* @__errno_location() #15, !dbg !5401
  %513 = load i32, i32* %call877, align 4, !dbg !5401, !ctir !5
  %call878 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.132, i64 0, i64 0)) #12, !dbg !5403
  %514 = load i8*, i8** %dst_name.addr, align 8, !dbg !5404
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %513, i8* %call878, i8* %514), !dbg !5405
  %515 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5406
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %515, i32 0, i32 21, !dbg !5408, !ctir !3752
  %516 = load i8, i8* %require_preserve, align 4, !dbg !5408
  %tobool879 = trunc i8 %516 to i1, !dbg !5408, !ctir !139
  br i1 %tobool879, label %if.then880, label %if.end881, !dbg !5409

if.then880:                                       ; preds = %if.then876
  br label %un_backup, !dbg !5410

if.end881:                                        ; preds = %if.then876
  br label %if.end883, !dbg !5411

if.else882:                                       ; preds = %land.lhs.true874, %if.then870
  br label %if.end883

if.end883:                                        ; preds = %if.else882, %if.end881
  br label %if.end884, !dbg !5412

if.end884:                                        ; preds = %if.end883, %if.end867
  br label %if.end888, !dbg !5413

if.else885:                                       ; preds = %if.else812
  %call886 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47.133, i64 0, i64 0)) #12, !dbg !5414
  %517 = load i8*, i8** %src_name.addr, align 8, !dbg !5416
  %call887 = call i8* @quotearg_style(i32 4, i8* %517), !dbg !5416
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call886, i8* %call887), !dbg !5417
  br label %un_backup, !dbg !5418

if.end888:                                        ; preds = %if.end884
  br label %if.end889

if.end889:                                        ; preds = %if.end888, %if.end811
  br label %if.end890

if.end890:                                        ; preds = %if.end889, %if.end788
  br label %if.end891

if.end891:                                        ; preds = %if.end890, %if.end765
  br label %if.end892

if.end892:                                        ; preds = %if.end891, %if.end748
  br label %if.end893

if.end893:                                        ; preds = %if.end892, %if.end729
  br label %if.end894

if.end894:                                        ; preds = %if.end893, %if.end681
  %518 = load i8, i8* %new_dst.addr, align 1, !dbg !5419
  %tobool895 = trunc i8 %518 to i1, !dbg !5419
  br i1 %tobool895, label %if.end921, label %land.lhs.true896, !dbg !5421

land.lhs.true896:                                 ; preds = %if.end894
  %519 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5422
  %copy_as_regular897 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %519, i32 0, i32 5, !dbg !5423, !ctir !3752
  %520 = load i8, i8* %copy_as_regular897, align 4, !dbg !5423
  %tobool898 = trunc i8 %520 to i1, !dbg !5423, !ctir !139
  br i1 %tobool898, label %if.end921, label %land.lhs.true899, !dbg !5424

land.lhs.true899:                                 ; preds = %land.lhs.true896
  %521 = load i32, i32* %src_mode, align 4, !dbg !5425
  %and900 = and i32 %521, 61440, !dbg !5425
  %cmp901 = icmp eq i32 %and900, 16384, !dbg !5425
  br i1 %cmp901, label %if.end921, label %land.lhs.true903, !dbg !5426

land.lhs.true903:                                 ; preds = %land.lhs.true899
  %522 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5427
  %set_security_context904 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %522, i32 0, i32 18, !dbg !5428, !ctir !3752
  %523 = load i8, i8* %set_security_context904, align 1, !dbg !5428
  %tobool905 = trunc i8 %523 to i1, !dbg !5428, !ctir !139
  br i1 %tobool905, label %if.then911, label %lor.lhs.false907, !dbg !5429

lor.lhs.false907:                                 ; preds = %land.lhs.true903
  %524 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5430
  %preserve_security_context908 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %524, i32 0, i32 22, !dbg !5431, !ctir !3752
  %525 = load i8, i8* %preserve_security_context908, align 1, !dbg !5431
  %tobool909 = trunc i8 %525 to i1, !dbg !5431, !ctir !139
  br i1 %tobool909, label %if.then911, label %if.end921, !dbg !5432

if.then911:                                       ; preds = %lor.lhs.false907, %land.lhs.true903
  %526 = load i8*, i8** %dst_name.addr, align 8, !dbg !5433
  %527 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5436
  %preserve_security_context912 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %527, i32 0, i32 22, !dbg !5437, !ctir !3752
  %528 = load i8, i8* %preserve_security_context912, align 1, !dbg !5437
  %tobool913 = trunc i8 %528 to i1, !dbg !5437, !ctir !139
  %529 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5438
  %call914 = call zeroext i1 @set_file_security_ctx(i8* %526, i1 zeroext %tobool913, i1 zeroext false, %struct.cp_options* %529), !dbg !5439
  br i1 %call914, label %if.end920, label %if.then915, !dbg !5440

if.then915:                                       ; preds = %if.then911
  %530 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5441
  %require_preserve_context916 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %530, i32 0, i32 23, !dbg !5444, !ctir !3752
  %531 = load i8, i8* %require_preserve_context916, align 2, !dbg !5444
  %tobool917 = trunc i8 %531 to i1, !dbg !5444, !ctir !139
  br i1 %tobool917, label %if.then918, label %if.end919, !dbg !5445

if.then918:                                       ; preds = %if.then915
  br label %un_backup, !dbg !5446

if.end919:                                        ; preds = %if.then915
  br label %if.end920, !dbg !5447

if.end920:                                        ; preds = %if.end919, %if.then911
  br label %if.end921, !dbg !5448

if.end921:                                        ; preds = %if.end920, %lor.lhs.false907, %land.lhs.true899, %land.lhs.true896, %if.end894
  %532 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5449
  %tobool922 = trunc i8 %532 to i1, !dbg !5449
  br i1 %tobool922, label %land.lhs.true924, label %if.end934, !dbg !5451

land.lhs.true924:                                 ; preds = %if.end921
  %533 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5452
  %dest_info925 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %533, i32 0, i32 37, !dbg !5453, !ctir !3752
  %534 = load %struct.hash_table*, %struct.hash_table** %dest_info925, align 8, !dbg !5453, !ctir !238
  %tobool926 = icmp ne %struct.hash_table* %534, null, !dbg !5452
  br i1 %tobool926, label %if.then927, label %if.end934, !dbg !5454

if.then927:                                       ; preds = %land.lhs.true924
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !5455, metadata !DIExpression()), !dbg !5457
  %535 = load i8*, i8** %dst_name.addr, align 8, !dbg !5458
  %call928 = call i32 @lstat(i8* %535, %struct.stat* %sb) #12, !dbg !5460
  %cmp929 = icmp eq i32 %call928, 0, !dbg !5461
  br i1 %cmp929, label %if.then931, label %if.end933, !dbg !5462

if.then931:                                       ; preds = %if.then927
  %536 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5463
  %dest_info932 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %536, i32 0, i32 37, !dbg !5464, !ctir !3752
  %537 = load %struct.hash_table*, %struct.hash_table** %dest_info932, align 8, !dbg !5464, !ctir !238
  %538 = load i8*, i8** %dst_name.addr, align 8, !dbg !5465
  call void @record_file(%struct.hash_table* %537, i8* %538, %struct.stat* %sb), !dbg !5466
  br label %if.end933, !dbg !5466

if.end933:                                        ; preds = %if.then931, %if.then927
  br label %if.end934, !dbg !5467

if.end934:                                        ; preds = %if.end933, %land.lhs.true924, %if.end921
  %539 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5468
  %hard_link935 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %539, i32 0, i32 8, !dbg !5470, !ctir !3752
  %540 = load i8, i8* %hard_link935, align 1, !dbg !5470
  %tobool936 = trunc i8 %540 to i1, !dbg !5470, !ctir !139
  br i1 %tobool936, label %land.lhs.true938, label %if.end944, !dbg !5471

land.lhs.true938:                                 ; preds = %if.end934
  %541 = load i32, i32* %src_mode, align 4, !dbg !5472
  %and939 = and i32 %541, 61440, !dbg !5472
  %cmp940 = icmp eq i32 %and939, 16384, !dbg !5472
  br i1 %cmp940, label %if.end944, label %if.then942, !dbg !5473

if.then942:                                       ; preds = %land.lhs.true938
  %542 = load i8, i8* %delayed_ok, align 1, !dbg !5474
  %tobool943 = trunc i8 %542 to i1, !dbg !5474
  store i1 %tobool943, i1* %retval, align 1, !dbg !5475
  br label %return, !dbg !5475

if.end944:                                        ; preds = %land.lhs.true938, %if.end934
  %543 = load i8, i8* %copied_as_regular, align 1, !dbg !5476
  %tobool945 = trunc i8 %543 to i1, !dbg !5476
  br i1 %tobool945, label %if.then946, label %if.end948, !dbg !5478

if.then946:                                       ; preds = %if.end944
  %544 = load i8, i8* %delayed_ok, align 1, !dbg !5479
  %tobool947 = trunc i8 %544 to i1, !dbg !5479
  store i1 %tobool947, i1* %retval, align 1, !dbg !5480
  br label %return, !dbg !5480

if.end948:                                        ; preds = %if.end944
  %545 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5481
  %preserve_timestamps949 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %545, i32 0, i32 16, !dbg !5483, !ctir !3752
  %546 = load i8, i8* %preserve_timestamps949, align 1, !dbg !5483
  %tobool950 = trunc i8 %546 to i1, !dbg !5483, !ctir !139
  br i1 %tobool950, label %if.then951, label %if.end977, !dbg !5484

if.then951:                                       ; preds = %if.end948
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !5485, metadata !DIExpression()), !dbg !5487
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5488, !ctir !387
  %call953 = call { i64, i64 } @get_stat_atime(%struct.stat* %src_sb) #14, !dbg !5489
  %547 = bitcast %struct.timespec* %tmp952 to { i64, i64 }*, !dbg !5489
  %548 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %547, i32 0, i32 0, !dbg !5489
  %549 = extractvalue { i64, i64 } %call953, 0, !dbg !5489
  store i64 %549, i64* %548, align 8, !dbg !5489
  %550 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %547, i32 0, i32 1, !dbg !5489
  %551 = extractvalue { i64, i64 } %call953, 1, !dbg !5489
  store i64 %551, i64* %550, align 8, !dbg !5489
  %552 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !5489
  %553 = bitcast %struct.timespec* %tmp952 to i8*, !dbg !5489
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %552, i8* align 8 %553, i64 16, i1 false), !dbg !5489
  %arrayidx954 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !5490, !ctir !387
  %call956 = call { i64, i64 } @get_stat_mtime(%struct.stat* %src_sb) #14, !dbg !5491
  %554 = bitcast %struct.timespec* %tmp955 to { i64, i64 }*, !dbg !5491
  %555 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %554, i32 0, i32 0, !dbg !5491
  %556 = extractvalue { i64, i64 } %call956, 0, !dbg !5491
  store i64 %556, i64* %555, align 8, !dbg !5491
  %557 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %554, i32 0, i32 1, !dbg !5491
  %558 = extractvalue { i64, i64 } %call956, 1, !dbg !5491
  store i64 %558, i64* %557, align 8, !dbg !5491
  %559 = bitcast %struct.timespec* %arrayidx954 to i8*, !dbg !5491
  %560 = bitcast %struct.timespec* %tmp955 to i8*, !dbg !5491
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %559, i8* align 8 %560, i64 16, i1 false), !dbg !5491
  %561 = load i8, i8* %dest_is_symlink, align 1, !dbg !5492
  %tobool957 = trunc i8 %561 to i1, !dbg !5492
  br i1 %tobool957, label %cond.true959, label %cond.false961, !dbg !5492

cond.true959:                                     ; preds = %if.then951
  %562 = load i8*, i8** %dst_name.addr, align 8, !dbg !5494
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5495, !ctir !387
  %call960 = call i32 @utimens_symlink(i8* %562, %struct.timespec* %arraydecay), !dbg !5496
  br label %cond.end964, !dbg !5492

cond.false961:                                    ; preds = %if.then951
  %563 = load i8*, i8** %dst_name.addr, align 8, !dbg !5497
  %arraydecay962 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5498, !ctir !387
  %call963 = call i32 @utimens(i8* %563, %struct.timespec* %arraydecay962), !dbg !5499
  br label %cond.end964, !dbg !5492

cond.end964:                                      ; preds = %cond.false961, %cond.true959
  %cond965 = phi i32 [ %call960, %cond.true959 ], [ %call963, %cond.false961 ], !dbg !5492
  %cmp966 = icmp ne i32 %cond965, 0, !dbg !5500
  br i1 %cmp966, label %if.then968, label %if.end976, !dbg !5501

if.then968:                                       ; preds = %cond.end964
  %call969 = call i32* @__errno_location() #15, !dbg !5502
  %564 = load i32, i32* %call969, align 4, !dbg !5502, !ctir !5
  %call970 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.134, i64 0, i64 0)) #12, !dbg !5504
  %565 = load i8*, i8** %dst_name.addr, align 8, !dbg !5505
  %call971 = call i8* @quotearg_style(i32 4, i8* %565), !dbg !5505
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %564, i8* %call970, i8* %call971), !dbg !5506
  %566 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5507
  %require_preserve972 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %566, i32 0, i32 21, !dbg !5509, !ctir !3752
  %567 = load i8, i8* %require_preserve972, align 4, !dbg !5509
  %tobool973 = trunc i8 %567 to i1, !dbg !5509, !ctir !139
  br i1 %tobool973, label %if.then974, label %if.end975, !dbg !5510

if.then974:                                       ; preds = %if.then968
  store i1 false, i1* %retval, align 1, !dbg !5511
  br label %return, !dbg !5511

if.end975:                                        ; preds = %if.then968
  br label %if.end976, !dbg !5512

if.end976:                                        ; preds = %if.end975, %cond.end964
  br label %if.end977, !dbg !5513

if.end977:                                        ; preds = %if.end976, %if.end948
  %568 = load i8, i8* %dest_is_symlink, align 1, !dbg !5514
  %tobool978 = trunc i8 %568 to i1, !dbg !5514
  br i1 %tobool978, label %if.end1001, label %land.lhs.true979, !dbg !5516

land.lhs.true979:                                 ; preds = %if.end977
  %569 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5517
  %preserve_ownership980 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %569, i32 0, i32 14, !dbg !5518, !ctir !3752
  %570 = load i8, i8* %preserve_ownership980, align 1, !dbg !5518
  %tobool981 = trunc i8 %570 to i1, !dbg !5518, !ctir !139
  br i1 %tobool981, label %land.lhs.true983, label %if.end1001, !dbg !5519

land.lhs.true983:                                 ; preds = %land.lhs.true979
  %571 = load i8, i8* %new_dst.addr, align 1, !dbg !5520
  %tobool984 = trunc i8 %571 to i1, !dbg !5520
  br i1 %tobool984, label %if.then996, label %lor.lhs.false986, !dbg !5521

lor.lhs.false986:                                 ; preds = %land.lhs.true983
  %st_uid987 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !5522, !ctir !335
  %572 = load i32, i32* %st_uid987, align 4, !dbg !5522, !ctir !343
  %st_uid988 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 4, !dbg !5522, !ctir !335
  %573 = load i32, i32* %st_uid988, align 4, !dbg !5522, !ctir !343
  %cmp989 = icmp eq i32 %572, %573, !dbg !5522
  br i1 %cmp989, label %land.lhs.true991, label %if.then996, !dbg !5522

land.lhs.true991:                                 ; preds = %lor.lhs.false986
  %st_gid992 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !5522, !ctir !335
  %574 = load i32, i32* %st_gid992, align 8, !dbg !5522, !ctir !345
  %st_gid993 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 5, !dbg !5522, !ctir !335
  %575 = load i32, i32* %st_gid993, align 8, !dbg !5522, !ctir !345
  %cmp994 = icmp eq i32 %574, %575, !dbg !5522
  br i1 %cmp994, label %if.end1001, label %if.then996, !dbg !5523

if.then996:                                       ; preds = %land.lhs.true991, %lor.lhs.false986, %land.lhs.true983
  %576 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5524
  %577 = load i8*, i8** %dst_name.addr, align 8, !dbg !5526
  %578 = load i8, i8* %new_dst.addr, align 1, !dbg !5527
  %tobool997 = trunc i8 %578 to i1, !dbg !5527
  %call998 = call i32 @set_owner(%struct.cp_options* %576, i8* %577, i32 -1, %struct.stat* %src_sb, i1 zeroext %tobool997, %struct.stat* %dst_sb), !dbg !5528
  switch i32 %call998, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb999
  ], !dbg !5529

sw.bb:                                            ; preds = %if.then996
  store i1 false, i1* %retval, align 1, !dbg !5530
  br label %return, !dbg !5530

sw.bb999:                                         ; preds = %if.then996
  %579 = load i32, i32* %src_mode, align 4, !dbg !5532
  %and1000 = and i32 %579, -3585, !dbg !5532
  store i32 %and1000, i32* %src_mode, align 4, !dbg !5532
  br label %sw.epilog, !dbg !5533

sw.epilog:                                        ; preds = %if.then996, %sw.bb999
  br label %if.end1001, !dbg !5534

if.end1001:                                       ; preds = %sw.epilog, %land.lhs.true991, %land.lhs.true979, %if.end977
  %580 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5535
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %580, i32 0, i32 24, !dbg !5537, !ctir !3752
  %581 = load i8, i8* %preserve_xattr, align 1, !dbg !5537
  %tobool1002 = trunc i8 %581 to i1, !dbg !5537, !ctir !139
  br i1 %tobool1002, label %land.lhs.true1004, label %if.end1010, !dbg !5538

land.lhs.true1004:                                ; preds = %if.end1001
  %582 = load i8*, i8** %src_name.addr, align 8, !dbg !5539
  %583 = load i8*, i8** %dst_name.addr, align 8, !dbg !5540
  %584 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5541
  %call1005 = call zeroext i1 @copy_attr(i8* %582, i32 -1, i8* %583, i32 -1, %struct.cp_options* %584), !dbg !5542
  br i1 %call1005, label %if.end1010, label %land.lhs.true1006, !dbg !5543

land.lhs.true1006:                                ; preds = %land.lhs.true1004
  %585 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5544
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %585, i32 0, i32 25, !dbg !5545, !ctir !3752
  %586 = load i8, i8* %require_preserve_xattr, align 8, !dbg !5545
  %tobool1007 = trunc i8 %586 to i1, !dbg !5545, !ctir !139
  br i1 %tobool1007, label %if.then1009, label %if.end1010, !dbg !5546

if.then1009:                                      ; preds = %land.lhs.true1006
  store i1 false, i1* %retval, align 1, !dbg !5547
  br label %return, !dbg !5547

if.end1010:                                       ; preds = %land.lhs.true1006, %land.lhs.true1004, %if.end1001
  %587 = load i8, i8* %dest_is_symlink, align 1, !dbg !5548
  %tobool1011 = trunc i8 %587 to i1, !dbg !5548
  br i1 %tobool1011, label %if.then1012, label %if.end1014, !dbg !5550

if.then1012:                                      ; preds = %if.end1010
  %588 = load i8, i8* %delayed_ok, align 1, !dbg !5551
  %tobool1013 = trunc i8 %588 to i1, !dbg !5551
  store i1 %tobool1013, i1* %retval, align 1, !dbg !5552
  br label %return, !dbg !5552

if.end1014:                                       ; preds = %if.end1010
  %589 = load i8*, i8** %dst_name.addr, align 8, !dbg !5553
  call void @set_author(i8* %589, i32 -1, %struct.stat* %src_sb), !dbg !5554
  %590 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5555
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %590, i32 0, i32 15, !dbg !5557, !ctir !3752
  %591 = load i8, i8* %preserve_mode, align 2, !dbg !5557
  %tobool1015 = trunc i8 %591 to i1, !dbg !5557, !ctir !139
  br i1 %tobool1015, label %if.then1021, label %lor.lhs.false1017, !dbg !5558

lor.lhs.false1017:                                ; preds = %if.end1014
  %592 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5559
  %move_mode1018 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %592, i32 0, i32 9, !dbg !5560, !ctir !3752
  %593 = load i8, i8* %move_mode1018, align 8, !dbg !5560
  %tobool1019 = trunc i8 %593 to i1, !dbg !5560, !ctir !139
  br i1 %tobool1019, label %if.then1021, label %if.else1031, !dbg !5561

if.then1021:                                      ; preds = %lor.lhs.false1017, %if.end1014
  %594 = load i8*, i8** %src_name.addr, align 8, !dbg !5562
  %595 = load i8*, i8** %dst_name.addr, align 8, !dbg !5565
  %596 = load i32, i32* %src_mode, align 4, !dbg !5566
  %call1022 = call i32 @copy_acl(i8* %594, i32 -1, i8* %595, i32 -1, i32 %596), !dbg !5567
  %cmp1023 = icmp ne i32 %call1022, 0, !dbg !5568
  br i1 %cmp1023, label %land.lhs.true1025, label %if.end1030, !dbg !5569

land.lhs.true1025:                                ; preds = %if.then1021
  %597 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5570
  %require_preserve1026 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %597, i32 0, i32 21, !dbg !5571, !ctir !3752
  %598 = load i8, i8* %require_preserve1026, align 4, !dbg !5571
  %tobool1027 = trunc i8 %598 to i1, !dbg !5571, !ctir !139
  br i1 %tobool1027, label %if.then1029, label %if.end1030, !dbg !5572

if.then1029:                                      ; preds = %land.lhs.true1025
  store i1 false, i1* %retval, align 1, !dbg !5573
  br label %return, !dbg !5573

if.end1030:                                       ; preds = %land.lhs.true1025, %if.then1021
  br label %if.end1112, !dbg !5574

if.else1031:                                      ; preds = %lor.lhs.false1017
  %599 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5575
  %set_mode1032 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %599, i32 0, i32 28, !dbg !5577, !ctir !3752
  %600 = load i8, i8* %set_mode1032, align 1, !dbg !5577
  %tobool1033 = trunc i8 %600 to i1, !dbg !5577, !ctir !139
  br i1 %tobool1033, label %if.then1034, label %if.else1041, !dbg !5578

if.then1034:                                      ; preds = %if.else1031
  %601 = load i8*, i8** %dst_name.addr, align 8, !dbg !5579
  %602 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5582
  %mode1035 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %602, i32 0, i32 4, !dbg !5583, !ctir !3752
  %603 = load i32, i32* %mode1035, align 8, !dbg !5583, !ctir !236
  %call1036 = call i32 @set_acl(i8* %601, i32 -1, i32 %603), !dbg !5584
  %cmp1037 = icmp ne i32 %call1036, 0, !dbg !5585
  br i1 %cmp1037, label %if.then1039, label %if.end1040, !dbg !5586

if.then1039:                                      ; preds = %if.then1034
  store i1 false, i1* %retval, align 1, !dbg !5587
  br label %return, !dbg !5587

if.end1040:                                       ; preds = %if.then1034
  br label %if.end1111, !dbg !5588

if.else1041:                                      ; preds = %if.else1031
  %604 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5589
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %604, i32 0, i32 17, !dbg !5591, !ctir !3752
  %605 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !5591
  %tobool1042 = trunc i8 %605 to i1, !dbg !5591, !ctir !139
  br i1 %tobool1042, label %land.lhs.true1044, label %if.else1065, !dbg !5592

land.lhs.true1044:                                ; preds = %if.else1041
  %606 = load i8, i8* %new_dst.addr, align 1, !dbg !5593
  %tobool1045 = trunc i8 %606 to i1, !dbg !5593
  br i1 %tobool1045, label %if.then1047, label %if.else1065, !dbg !5594

if.then1047:                                      ; preds = %land.lhs.true1044
  call void @llvm.dbg.declare(metadata i32* %default_permissions, metadata !5595, metadata !DIExpression()), !dbg !5597
  %607 = load i32, i32* %src_mode, align 4, !dbg !5598
  %and1048 = and i32 %607, 61440, !dbg !5598
  %cmp1049 = icmp eq i32 %and1048, 16384, !dbg !5598
  br i1 %cmp1049, label %lor.end1055, label %lor.rhs1051, !dbg !5599

lor.rhs1051:                                      ; preds = %if.then1047
  %608 = load i32, i32* %src_mode, align 4, !dbg !5600
  %and1052 = and i32 %608, 61440, !dbg !5600
  %cmp1053 = icmp eq i32 %and1052, 49152, !dbg !5600
  br label %lor.end1055, !dbg !5599

lor.end1055:                                      ; preds = %lor.rhs1051, %if.then1047
  %609 = phi i1 [ true, %if.then1047 ], [ %cmp1053, %lor.rhs1051 ]
  %610 = zext i1 %609 to i64, !dbg !5598
  %cond1056 = select i1 %609, i32 511, i32 438, !dbg !5598
  store i32 %cond1056, i32* %default_permissions, align 4, !dbg !5597
  %611 = load i8*, i8** %dst_name.addr, align 8, !dbg !5601
  %612 = load i32, i32* %default_permissions, align 4, !dbg !5603
  %call1057 = call i32 @cached_umask(), !dbg !5604
  %neg1058 = xor i32 %call1057, -1, !dbg !5605
  %and1059 = and i32 %612, %neg1058, !dbg !5606
  %call1060 = call i32 @set_acl(i8* %611, i32 -1, i32 %and1059), !dbg !5607
  %cmp1061 = icmp ne i32 %call1060, 0, !dbg !5608
  br i1 %cmp1061, label %if.then1063, label %if.end1064, !dbg !5609

if.then1063:                                      ; preds = %lor.end1055
  store i1 false, i1* %retval, align 1, !dbg !5610
  br label %return, !dbg !5610

if.end1064:                                       ; preds = %lor.end1055
  br label %if.end1110, !dbg !5611

if.else1065:                                      ; preds = %land.lhs.true1044, %if.else1041
  %613 = load i32, i32* %omitted_permissions, align 4, !dbg !5612
  %tobool1066 = icmp ne i32 %613, 0, !dbg !5612
  br i1 %tobool1066, label %if.then1067, label %if.end1093, !dbg !5615

if.then1067:                                      ; preds = %if.else1065
  %call1068 = call i32 @cached_umask(), !dbg !5616
  %neg1069 = xor i32 %call1068, -1, !dbg !5618
  %614 = load i32, i32* %omitted_permissions, align 4, !dbg !5619
  %and1070 = and i32 %614, %neg1069, !dbg !5619
  store i32 %and1070, i32* %omitted_permissions, align 4, !dbg !5619
  %615 = load i32, i32* %omitted_permissions, align 4, !dbg !5620
  %tobool1071 = icmp ne i32 %615, 0, !dbg !5620
  br i1 %tobool1071, label %land.lhs.true1072, label %if.end1092, !dbg !5622

land.lhs.true1072:                                ; preds = %if.then1067
  %616 = load i8, i8* %restore_dst_mode, align 1, !dbg !5623
  %tobool1073 = trunc i8 %616 to i1, !dbg !5623
  br i1 %tobool1073, label %if.end1092, label %if.then1074, !dbg !5624

if.then1074:                                      ; preds = %land.lhs.true1072
  %617 = load i8, i8* %new_dst.addr, align 1, !dbg !5625
  %tobool1075 = trunc i8 %617 to i1, !dbg !5625
  br i1 %tobool1075, label %land.lhs.true1077, label %if.end1085, !dbg !5628

land.lhs.true1077:                                ; preds = %if.then1074
  %618 = load i8*, i8** %dst_name.addr, align 8, !dbg !5629
  %call1078 = call i32 @lstat(i8* %618, %struct.stat* %dst_sb) #12, !dbg !5630
  %cmp1079 = icmp ne i32 %call1078, 0, !dbg !5631
  br i1 %cmp1079, label %if.then1081, label %if.end1085, !dbg !5632

if.then1081:                                      ; preds = %land.lhs.true1077
  %call1082 = call i32* @__errno_location() #15, !dbg !5633
  %619 = load i32, i32* %call1082, align 4, !dbg !5633, !ctir !5
  %call1083 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #12, !dbg !5635
  %620 = load i8*, i8** %dst_name.addr, align 8, !dbg !5636
  %call1084 = call i8* @quotearg_style(i32 4, i8* %620), !dbg !5636
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %619, i8* %call1083, i8* %call1084), !dbg !5637
  store i1 false, i1* %retval, align 1, !dbg !5638
  br label %return, !dbg !5638

if.end1085:                                       ; preds = %land.lhs.true1077, %if.then1074
  %st_mode1086 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5639, !ctir !335
  %621 = load i32, i32* %st_mode1086, align 8, !dbg !5639, !ctir !165
  store i32 %621, i32* %dst_mode, align 4, !dbg !5640
  %622 = load i32, i32* %omitted_permissions, align 4, !dbg !5641
  %623 = load i32, i32* %dst_mode, align 4, !dbg !5643
  %neg1087 = xor i32 %623, -1, !dbg !5644
  %and1088 = and i32 %622, %neg1087, !dbg !5645
  %tobool1089 = icmp ne i32 %and1088, 0, !dbg !5645
  br i1 %tobool1089, label %if.then1090, label %if.end1091, !dbg !5646

if.then1090:                                      ; preds = %if.end1085
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !5647
  br label %if.end1091, !dbg !5648

if.end1091:                                       ; preds = %if.then1090, %if.end1085
  br label %if.end1092, !dbg !5649

if.end1092:                                       ; preds = %if.end1091, %land.lhs.true1072, %if.then1067
  br label %if.end1093, !dbg !5650

if.end1093:                                       ; preds = %if.end1092, %if.else1065
  %624 = load i8, i8* %restore_dst_mode, align 1, !dbg !5651
  %tobool1094 = trunc i8 %624 to i1, !dbg !5651
  br i1 %tobool1094, label %if.then1095, label %if.end1109, !dbg !5653

if.then1095:                                      ; preds = %if.end1093
  %625 = load i8*, i8** %dst_name.addr, align 8, !dbg !5654
  %626 = load i32, i32* %dst_mode, align 4, !dbg !5657
  %627 = load i32, i32* %omitted_permissions, align 4, !dbg !5658
  %or1096 = or i32 %626, %627, !dbg !5659
  %call1097 = call i32 @chmod(i8* %625, i32 %or1096) #12, !dbg !5660
  %cmp1098 = icmp ne i32 %call1097, 0, !dbg !5661
  br i1 %cmp1098, label %if.then1100, label %if.end1108, !dbg !5662

if.then1100:                                      ; preds = %if.then1095
  %call1101 = call i32* @__errno_location() #15, !dbg !5663
  %628 = load i32, i32* %call1101, align 4, !dbg !5663, !ctir !5
  %call1102 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.135, i64 0, i64 0)) #12, !dbg !5665
  %629 = load i8*, i8** %dst_name.addr, align 8, !dbg !5666
  %call1103 = call i8* @quotearg_style(i32 4, i8* %629), !dbg !5666
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %628, i8* %call1102, i8* %call1103), !dbg !5667
  %630 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5668
  %require_preserve1104 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %630, i32 0, i32 21, !dbg !5670, !ctir !3752
  %631 = load i8, i8* %require_preserve1104, align 4, !dbg !5670
  %tobool1105 = trunc i8 %631 to i1, !dbg !5670, !ctir !139
  br i1 %tobool1105, label %if.then1106, label %if.end1107, !dbg !5671

if.then1106:                                      ; preds = %if.then1100
  store i1 false, i1* %retval, align 1, !dbg !5672
  br label %return, !dbg !5672

if.end1107:                                       ; preds = %if.then1100
  br label %if.end1108, !dbg !5673

if.end1108:                                       ; preds = %if.end1107, %if.then1095
  br label %if.end1109, !dbg !5674

if.end1109:                                       ; preds = %if.end1108, %if.end1093
  br label %if.end1110

if.end1110:                                       ; preds = %if.end1109, %if.end1064
  br label %if.end1111

if.end1111:                                       ; preds = %if.end1110, %if.end1040
  br label %if.end1112

if.end1112:                                       ; preds = %if.end1111, %if.end1030
  %632 = load i8, i8* %delayed_ok, align 1, !dbg !5675
  %tobool1113 = trunc i8 %632 to i1, !dbg !5675
  store i1 %tobool1113, i1* %retval, align 1, !dbg !5676
  br label %return, !dbg !5676

un_backup:                                        ; preds = %if.then918, %if.else885, %if.then880, %if.then860, %if.then820, %if.then807, %if.then783, %if.then764, %if.then747, %if.then725, %if.then715, %if.then664, %if.then628, %if.then616, %if.then609, %if.then593, %if.then486, %if.else474, %if.then450, %if.then160
  call void @llvm.dbg.label(metadata !5677), !dbg !5678
  %633 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5679
  %preserve_security_context1114 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %633, i32 0, i32 22, !dbg !5681, !ctir !3752
  %634 = load i8, i8* %preserve_security_context1114, align 1, !dbg !5681
  %tobool1115 = trunc i8 %634 to i1, !dbg !5681, !ctir !139
  br i1 %tobool1115, label %if.then1116, label %if.end1117, !dbg !5682

if.then1116:                                      ; preds = %un_backup
  call void @restore_default_fscreatecon_or_die(), !dbg !5683
  br label %if.end1117, !dbg !5683

if.end1117:                                       ; preds = %if.then1116, %un_backup
  %635 = load i8*, i8** %earlier_file, align 8, !dbg !5684
  %cmp1118 = icmp eq i8* %635, null, !dbg !5686
  br i1 %cmp1118, label %if.then1120, label %if.end1123, !dbg !5687

if.then1120:                                      ; preds = %if.end1117
  %st_ino1121 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5688, !ctir !335
  %636 = load i64, i64* %st_ino1121, align 8, !dbg !5688, !ctir !257
  %st_dev1122 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5689, !ctir !335
  %637 = load i64, i64* %st_dev1122, align 8, !dbg !5689, !ctir !260
  call void @forget_created(i64 %636, i64 %637), !dbg !5690
  br label %if.end1123, !dbg !5690

if.end1123:                                       ; preds = %if.then1120, %if.end1117
  %638 = load i8*, i8** %dst_backup, align 8, !dbg !5691
  %tobool1124 = icmp ne i8* %638, null, !dbg !5691
  br i1 %tobool1124, label %if.then1125, label %if.end1143, !dbg !5693

if.then1125:                                      ; preds = %if.end1123
  %639 = load i8*, i8** %dst_backup, align 8, !dbg !5694
  %640 = load i8*, i8** %dst_name.addr, align 8, !dbg !5697
  %call1126 = call i32 @rename(i8* %639, i8* %640) #12, !dbg !5698
  %cmp1127 = icmp ne i32 %call1126, 0, !dbg !5699
  br i1 %cmp1127, label %if.then1129, label %if.else1133, !dbg !5700

if.then1129:                                      ; preds = %if.then1125
  %call1130 = call i32* @__errno_location() #15, !dbg !5701
  %641 = load i32, i32* %call1130, align 4, !dbg !5701, !ctir !5
  %call1131 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50.136, i64 0, i64 0)) #12, !dbg !5702
  %642 = load i8*, i8** %dst_name.addr, align 8, !dbg !5703
  %call1132 = call i8* @quotearg_style(i32 4, i8* %642), !dbg !5703
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %641, i8* %call1131, i8* %call1132), !dbg !5704
  br label %if.end1142, !dbg !5704

if.else1133:                                      ; preds = %if.then1125
  %643 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5705
  %verbose1134 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %643, i32 0, i32 31, !dbg !5708, !ctir !3752
  %644 = load i8, i8* %verbose1134, align 2, !dbg !5708
  %tobool1135 = trunc i8 %644 to i1, !dbg !5708, !ctir !139
  br i1 %tobool1135, label %if.then1136, label %if.end1141, !dbg !5709

if.then1136:                                      ; preds = %if.else1133
  %call1137 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51.137, i64 0, i64 0)) #12, !dbg !5710
  %645 = load i8*, i8** %dst_backup, align 8, !dbg !5711
  %call1138 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %645), !dbg !5711
  %646 = load i8*, i8** %dst_name.addr, align 8, !dbg !5712
  %call1139 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %646), !dbg !5712
  %call1140 = call i32 (i8*, ...) @printf(i8* %call1137, i8* %call1138, i8* %call1139), !dbg !5713
  br label %if.end1141, !dbg !5713

if.end1141:                                       ; preds = %if.then1136, %if.else1133
  br label %if.end1142

if.end1142:                                       ; preds = %if.end1141, %if.then1129
  br label %if.end1143, !dbg !5714

if.end1143:                                       ; preds = %if.end1142, %if.end1123
  store i1 false, i1* %retval, align 1, !dbg !5715
  br label %return, !dbg !5715

return:                                           ; preds = %if.end1143, %if.end1112, %if.then1106, %if.then1081, %if.then1063, %if.then1039, %if.then1029, %if.then1012, %if.then1009, %sw.bb, %if.then974, %if.then946, %if.then942, %if.then587, %if.then552, %if.then533, %if.then527, %if.end524, %if.end487, %if.end464, %if.then374, %if.then330, %if.then297, %cond.end284, %if.then254, %if.else235, %if.then216, %if.else204, %if.then189, %if.then185, %if.end172, %if.end162, %if.then129, %if.then114, %if.then59, %cond.end43, %if.then30
  %647 = load i1, i1* %retval, align 1, !dbg !5716
  ret i1 %647, !dbg !5716
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @follow_fstatat(i32 %dirfd, i8* %filename, %struct.stat* %st, i32 %flags) #4 !dbg !5717 {
entry:
  %dirfd.addr = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %flags.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !5
  store i32 %dirfd, i32* %dirfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dirfd.addr, metadata !5720, metadata !DIExpression()), !dbg !5721
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !5722, metadata !DIExpression()), !dbg !5723
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !5724, metadata !DIExpression()), !dbg !5725
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5726, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5728, metadata !DIExpression()), !dbg !5729
  %0 = load i32, i32* %dirfd.addr, align 4, !dbg !5730
  %1 = load i8*, i8** %filename.addr, align 8, !dbg !5731
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !5732
  %3 = load i32, i32* %flags.addr, align 4, !dbg !5733
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 %3) #12, !dbg !5734
  store i32 %call, i32* %result, align 4, !dbg !5729
  %4 = load i32, i32* %result, align 4, !dbg !5735
  ret i32 %4, !dbg !5736
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @should_dereference(%struct.cp_options* %x, i1 zeroext %command_line_arg) #9 !dbg !5737 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !5740, metadata !DIExpression()), !dbg !5741
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !5742, metadata !DIExpression()), !dbg !5743
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5744
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 1, !dbg !5745, !ctir !3752
  %1 = load i32, i32* %dereference, align 4, !dbg !5745, !ctir !73
  %cmp = icmp eq i32 %1, 4, !dbg !5746
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5747

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5748
  %dereference1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 1, !dbg !5749, !ctir !3752
  %3 = load i32, i32* %dereference1, align 4, !dbg !5749, !ctir !73
  %cmp2 = icmp eq i32 %3, 3, !dbg !5750
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !5751

land.rhs:                                         ; preds = %lor.rhs
  %4 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5752
  %tobool = trunc i8 %4 to i1, !dbg !5752
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %5 = phi i1 [ false, %lor.rhs ], [ %tobool, %land.rhs ], !dbg !5753
  br label %lor.end, !dbg !5747

lor.end:                                          ; preds = %land.end, %entry
  %6 = phi i1 [ true, %entry ], [ %5, %land.end ]
  ret i1 %6, !dbg !5754
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @same_file_ok(i8* %src_name, %struct.stat* %src_sb, i8* %dst_name, %struct.stat* %dst_sb, %struct.cp_options* %x, i8* %return_now) #4 !dbg !5755 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %return_now.addr = alloca i8*, align 8
  %src_sb_link = alloca %struct.stat*, align 8, !ctir !388
  %dst_sb_link = alloca %struct.stat*, align 8, !ctir !388
  %tmp_dst_sb = alloca %struct.stat, align 8, !ctir !335
  %tmp_src_sb = alloca %struct.stat, align 8, !ctir !335
  %same_link = alloca i8, align 1, !ctir !139
  %same = alloca i8, align 1, !ctir !139
  %sn = alloca i8, align 1, !ctir !139
  %abs_src = alloca i8*, align 8, !ctir !7
  %result = alloca i8, align 1, !ctir !139
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !5758, metadata !DIExpression()), !dbg !5759
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !5760, metadata !DIExpression()), !dbg !5761
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !5762, metadata !DIExpression()), !dbg !5763
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !5764, metadata !DIExpression()), !dbg !5765
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !5766, metadata !DIExpression()), !dbg !5767
  store i8* %return_now, i8** %return_now.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %return_now.addr, metadata !5768, metadata !DIExpression()), !dbg !5769
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb_link, metadata !5770, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb_link, metadata !5772, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_dst_sb, metadata !5774, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_src_sb, metadata !5776, metadata !DIExpression()), !dbg !5777
  call void @llvm.dbg.declare(metadata i8* %same_link, metadata !5778, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.declare(metadata i8* %same, metadata !5780, metadata !DIExpression()), !dbg !5781
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5782
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 1, !dbg !5782, !ctir !389
  %1 = load i64, i64* %st_ino, align 8, !dbg !5782, !ctir !257
  %2 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5782
  %st_ino1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !5782, !ctir !389
  %3 = load i64, i64* %st_ino1, align 8, !dbg !5782, !ctir !257
  %cmp = icmp eq i64 %1, %3, !dbg !5782
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5782

land.rhs:                                         ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5782
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !5782, !ctir !389
  %5 = load i64, i64* %st_dev, align 8, !dbg !5782, !ctir !260
  %6 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5782
  %st_dev2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 0, !dbg !5782, !ctir !389
  %7 = load i64, i64* %st_dev2, align 8, !dbg !5782, !ctir !260
  %cmp3 = icmp eq i64 %5, %7, !dbg !5782
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !5783
  %frombool = zext i1 %8 to i8, !dbg !5781
  store i8 %frombool, i8* %same, align 1, !dbg !5781
  %9 = load i8*, i8** %return_now.addr, align 8, !dbg !5784
  store i8 0, i8* %9, align 1, !dbg !5785, !ctir !139
  %10 = load i8, i8* %same, align 1, !dbg !5786
  %tobool = trunc i8 %10 to i1, !dbg !5786
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5788

land.lhs.true:                                    ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5789
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 8, !dbg !5790, !ctir !3752
  %12 = load i8, i8* %hard_link, align 1, !dbg !5790
  %tobool4 = trunc i8 %12 to i1, !dbg !5790, !ctir !139
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5791

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %return_now.addr, align 8, !dbg !5792
  store i8 1, i8* %13, align 1, !dbg !5794, !ctir !139
  store i1 true, i1* %retval, align 1, !dbg !5795
  br label %return, !dbg !5795

if.end:                                           ; preds = %land.lhs.true, %land.end
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5796
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 1, !dbg !5798, !ctir !3752
  %15 = load i32, i32* %dereference, align 4, !dbg !5798, !ctir !73
  %cmp5 = icmp eq i32 %15, 2, !dbg !5799
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !5800

if.then6:                                         ; preds = %if.end
  %16 = load i8, i8* %same, align 1, !dbg !5801
  %tobool7 = trunc i8 %16 to i1, !dbg !5801
  %frombool8 = zext i1 %tobool7 to i8, !dbg !5803
  store i8 %frombool8, i8* %same_link, align 1, !dbg !5803
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5804
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !5804, !ctir !389
  %18 = load i32, i32* %st_mode, align 8, !dbg !5804, !ctir !165
  %and = and i32 %18, 61440, !dbg !5804
  %cmp9 = icmp eq i32 %and, 40960, !dbg !5804
  br i1 %cmp9, label %land.lhs.true10, label %if.end28, !dbg !5806

land.lhs.true10:                                  ; preds = %if.then6
  %19 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5807
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 3, !dbg !5807, !ctir !389
  %20 = load i32, i32* %st_mode11, align 8, !dbg !5807, !ctir !165
  %and12 = and i32 %20, 61440, !dbg !5807
  %cmp13 = icmp eq i32 %and12, 40960, !dbg !5807
  br i1 %cmp13, label %if.then14, label %if.end28, !dbg !5808

if.then14:                                        ; preds = %land.lhs.true10
  call void @llvm.dbg.declare(metadata i8* %sn, metadata !5809, metadata !DIExpression()), !dbg !5811
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !5812
  %22 = load i8*, i8** %dst_name.addr, align 8, !dbg !5813
  %call = call zeroext i1 @same_name(i8* %21, i8* %22), !dbg !5814
  %frombool15 = zext i1 %call to i8, !dbg !5811
  store i8 %frombool15, i8* %sn, align 1, !dbg !5811
  %23 = load i8, i8* %sn, align 1, !dbg !5815
  %tobool16 = trunc i8 %23 to i1, !dbg !5815
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !5817

if.then17:                                        ; preds = %if.then14
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5818
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 0, !dbg !5821, !ctir !3752
  %25 = load i32, i32* %backup_type, align 8, !dbg !5821, !ctir !65
  %cmp18 = icmp ne i32 %25, 0, !dbg !5822
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !5823

if.then19:                                        ; preds = %if.then17
  store i1 true, i1* %retval, align 1, !dbg !5824
  br label %return, !dbg !5824

if.end20:                                         ; preds = %if.then17
  %26 = load i8, i8* %same_link, align 1, !dbg !5825
  %tobool21 = trunc i8 %26 to i1, !dbg !5825
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !5827

if.then22:                                        ; preds = %if.end20
  %27 = load i8*, i8** %return_now.addr, align 8, !dbg !5828
  store i8 1, i8* %27, align 1, !dbg !5830, !ctir !139
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5831
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 9, !dbg !5832, !ctir !3752
  %29 = load i8, i8* %move_mode, align 8, !dbg !5832
  %tobool23 = trunc i8 %29 to i1, !dbg !5832, !ctir !139
  %lnot = xor i1 %tobool23, true, !dbg !5833
  store i1 %lnot, i1* %retval, align 1, !dbg !5834
  br label %return, !dbg !5834

if.end24:                                         ; preds = %if.end20
  br label %if.end25, !dbg !5835

if.end25:                                         ; preds = %if.end24, %if.then14
  %30 = load i8, i8* %sn, align 1, !dbg !5836
  %tobool26 = trunc i8 %30 to i1, !dbg !5836
  %lnot27 = xor i1 %tobool26, true, !dbg !5837
  store i1 %lnot27, i1* %retval, align 1, !dbg !5838
  br label %return, !dbg !5838

if.end28:                                         ; preds = %land.lhs.true10, %if.then6
  %31 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5839
  store %struct.stat* %31, %struct.stat** %src_sb_link, align 8, !dbg !5840
  %32 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5841
  store %struct.stat* %32, %struct.stat** %dst_sb_link, align 8, !dbg !5842
  br label %if.end58, !dbg !5843

if.else:                                          ; preds = %if.end
  %33 = load i8, i8* %same, align 1, !dbg !5844
  %tobool29 = trunc i8 %33 to i1, !dbg !5844
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !5847

if.then30:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !5848
  br label %return, !dbg !5848

if.end31:                                         ; preds = %if.else
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !5849
  %call32 = call i32 @lstat(i8* %34, %struct.stat* %tmp_dst_sb) #12, !dbg !5851
  %cmp33 = icmp ne i32 %call32, 0, !dbg !5852
  br i1 %cmp33, label %if.then36, label %lor.lhs.false, !dbg !5853

lor.lhs.false:                                    ; preds = %if.end31
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !5854
  %call34 = call i32 @lstat(i8* %35, %struct.stat* %tmp_src_sb) #12, !dbg !5855
  %cmp35 = icmp ne i32 %call34, 0, !dbg !5856
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !5857

if.then36:                                        ; preds = %lor.lhs.false, %if.end31
  store i1 true, i1* %retval, align 1, !dbg !5858
  br label %return, !dbg !5858

if.end37:                                         ; preds = %lor.lhs.false
  store %struct.stat* %tmp_src_sb, %struct.stat** %src_sb_link, align 8, !dbg !5859
  store %struct.stat* %tmp_dst_sb, %struct.stat** %dst_sb_link, align 8, !dbg !5860
  %36 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5861
  %st_ino38 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 1, !dbg !5861, !ctir !389
  %37 = load i64, i64* %st_ino38, align 8, !dbg !5861, !ctir !257
  %38 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5861
  %st_ino39 = getelementptr inbounds %struct.stat, %struct.stat* %38, i32 0, i32 1, !dbg !5861, !ctir !389
  %39 = load i64, i64* %st_ino39, align 8, !dbg !5861, !ctir !257
  %cmp40 = icmp eq i64 %37, %39, !dbg !5861
  br i1 %cmp40, label %land.rhs41, label %land.end45, !dbg !5861

land.rhs41:                                       ; preds = %if.end37
  %40 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5861
  %st_dev42 = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 0, !dbg !5861, !ctir !389
  %41 = load i64, i64* %st_dev42, align 8, !dbg !5861, !ctir !260
  %42 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5861
  %st_dev43 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 0, !dbg !5861, !ctir !389
  %43 = load i64, i64* %st_dev43, align 8, !dbg !5861, !ctir !260
  %cmp44 = icmp eq i64 %41, %43, !dbg !5861
  br label %land.end45

land.end45:                                       ; preds = %land.rhs41, %if.end37
  %44 = phi i1 [ false, %if.end37 ], [ %cmp44, %land.rhs41 ], !dbg !5862
  %frombool46 = zext i1 %44 to i8, !dbg !5863
  store i8 %frombool46, i8* %same_link, align 1, !dbg !5863
  %45 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5864
  %st_mode47 = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 3, !dbg !5864, !ctir !389
  %46 = load i32, i32* %st_mode47, align 8, !dbg !5864, !ctir !165
  %and48 = and i32 %46, 61440, !dbg !5864
  %cmp49 = icmp eq i32 %and48, 40960, !dbg !5864
  br i1 %cmp49, label %land.lhs.true50, label %if.end57, !dbg !5866

land.lhs.true50:                                  ; preds = %land.end45
  %47 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5867
  %st_mode51 = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 3, !dbg !5867, !ctir !389
  %48 = load i32, i32* %st_mode51, align 8, !dbg !5867, !ctir !165
  %and52 = and i32 %48, 61440, !dbg !5867
  %cmp53 = icmp eq i32 %and52, 40960, !dbg !5867
  br i1 %cmp53, label %land.lhs.true54, label %if.end57, !dbg !5868

land.lhs.true54:                                  ; preds = %land.lhs.true50
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5869
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %49, i32 0, i32 6, !dbg !5870, !ctir !3752
  %50 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !5870
  %tobool55 = trunc i8 %50 to i1, !dbg !5870, !ctir !139
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !5871

if.then56:                                        ; preds = %land.lhs.true54
  store i1 true, i1* %retval, align 1, !dbg !5872
  br label %return, !dbg !5872

if.end57:                                         ; preds = %land.lhs.true54, %land.lhs.true50, %land.end45
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end28
  %51 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5873
  %backup_type59 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %51, i32 0, i32 0, !dbg !5875, !ctir !3752
  %52 = load i32, i32* %backup_type59, align 8, !dbg !5875, !ctir !65
  %cmp60 = icmp ne i32 %52, 0, !dbg !5876
  br i1 %cmp60, label %if.then61, label %if.end82, !dbg !5877

if.then61:                                        ; preds = %if.end58
  %53 = load i8, i8* %same_link, align 1, !dbg !5878
  %tobool62 = trunc i8 %53 to i1, !dbg !5878
  br i1 %tobool62, label %if.end79, label %if.then63, !dbg !5881

if.then63:                                        ; preds = %if.then61
  %54 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5882
  %move_mode64 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %54, i32 0, i32 9, !dbg !5885, !ctir !3752
  %55 = load i8, i8* %move_mode64, align 8, !dbg !5885
  %tobool65 = trunc i8 %55 to i1, !dbg !5885, !ctir !139
  br i1 %tobool65, label %if.end78, label %land.lhs.true66, !dbg !5886

land.lhs.true66:                                  ; preds = %if.then63
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5887
  %dereference67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 1, !dbg !5888, !ctir !3752
  %57 = load i32, i32* %dereference67, align 4, !dbg !5888, !ctir !73
  %cmp68 = icmp ne i32 %57, 2, !dbg !5889
  br i1 %cmp68, label %land.lhs.true69, label %if.end78, !dbg !5890

land.lhs.true69:                                  ; preds = %land.lhs.true66
  %58 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5891
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %58, i32 0, i32 3, !dbg !5891, !ctir !389
  %59 = load i32, i32* %st_mode70, align 8, !dbg !5891, !ctir !165
  %and71 = and i32 %59, 61440, !dbg !5891
  %cmp72 = icmp eq i32 %and71, 40960, !dbg !5891
  br i1 %cmp72, label %land.lhs.true73, label %if.end78, !dbg !5892

land.lhs.true73:                                  ; preds = %land.lhs.true69
  %60 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5893
  %st_mode74 = getelementptr inbounds %struct.stat, %struct.stat* %60, i32 0, i32 3, !dbg !5893, !ctir !389
  %61 = load i32, i32* %st_mode74, align 8, !dbg !5893, !ctir !165
  %and75 = and i32 %61, 61440, !dbg !5893
  %cmp76 = icmp eq i32 %and75, 40960, !dbg !5893
  br i1 %cmp76, label %if.end78, label %if.then77, !dbg !5894

if.then77:                                        ; preds = %land.lhs.true73
  store i1 false, i1* %retval, align 1, !dbg !5895
  br label %return, !dbg !5895

if.end78:                                         ; preds = %land.lhs.true73, %land.lhs.true69, %land.lhs.true66, %if.then63
  store i1 true, i1* %retval, align 1, !dbg !5896
  br label %return, !dbg !5896

if.end79:                                         ; preds = %if.then61
  %62 = load i8*, i8** %src_name.addr, align 8, !dbg !5897
  %63 = load i8*, i8** %dst_name.addr, align 8, !dbg !5898
  %call80 = call zeroext i1 @same_name(i8* %62, i8* %63), !dbg !5899
  %lnot81 = xor i1 %call80, true, !dbg !5900
  store i1 %lnot81, i1* %retval, align 1, !dbg !5901
  br label %return, !dbg !5901

if.end82:                                         ; preds = %if.end58
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5902
  %move_mode83 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 9, !dbg !5904, !ctir !3752
  %65 = load i8, i8* %move_mode83, align 8, !dbg !5904
  %tobool84 = trunc i8 %65 to i1, !dbg !5904, !ctir !139
  br i1 %tobool84, label %if.then88, label %lor.lhs.false85, !dbg !5905

lor.lhs.false85:                                  ; preds = %if.end82
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5906
  %unlink_dest_before_opening86 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 6, !dbg !5907, !ctir !3752
  %67 = load i8, i8* %unlink_dest_before_opening86, align 1, !dbg !5907
  %tobool87 = trunc i8 %67 to i1, !dbg !5907, !ctir !139
  br i1 %tobool87, label %if.then88, label %if.end104, !dbg !5908

if.then88:                                        ; preds = %lor.lhs.false85, %if.end82
  %68 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5909
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %68, i32 0, i32 3, !dbg !5909, !ctir !389
  %69 = load i32, i32* %st_mode89, align 8, !dbg !5909, !ctir !165
  %and90 = and i32 %69, 61440, !dbg !5909
  %cmp91 = icmp eq i32 %and90, 40960, !dbg !5909
  br i1 %cmp91, label %if.then92, label %if.end93, !dbg !5912

if.then92:                                        ; preds = %if.then88
  store i1 true, i1* %retval, align 1, !dbg !5913
  br label %return, !dbg !5913

if.end93:                                         ; preds = %if.then88
  %70 = load i8, i8* %same_link, align 1, !dbg !5914
  %tobool94 = trunc i8 %70 to i1, !dbg !5914
  br i1 %tobool94, label %land.lhs.true95, label %if.end103, !dbg !5916

land.lhs.true95:                                  ; preds = %if.end93
  %71 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5917
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %71, i32 0, i32 2, !dbg !5918, !ctir !389
  %72 = load i64, i64* %st_nlink, align 8, !dbg !5918, !ctir !333
  %cmp96 = icmp ult i64 1, %72, !dbg !5919
  br i1 %cmp96, label %land.lhs.true97, label %if.end103, !dbg !5920

land.lhs.true97:                                  ; preds = %land.lhs.true95
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !5921
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !5922
  %call98 = call zeroext i1 @same_name(i8* %73, i8* %74), !dbg !5923
  br i1 %call98, label %if.end103, label %if.then99, !dbg !5924

if.then99:                                        ; preds = %land.lhs.true97
  %75 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5925
  %move_mode100 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %75, i32 0, i32 9, !dbg !5926, !ctir !3752
  %76 = load i8, i8* %move_mode100, align 8, !dbg !5926
  %tobool101 = trunc i8 %76 to i1, !dbg !5926, !ctir !139
  %lnot102 = xor i1 %tobool101, true, !dbg !5927
  store i1 %lnot102, i1* %retval, align 1, !dbg !5928
  br label %return, !dbg !5928

if.end103:                                        ; preds = %land.lhs.true97, %land.lhs.true95, %if.end93
  br label %if.end104, !dbg !5929

if.end104:                                        ; preds = %if.end103, %lor.lhs.false85
  %77 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5930
  %st_mode105 = getelementptr inbounds %struct.stat, %struct.stat* %77, i32 0, i32 3, !dbg !5930, !ctir !389
  %78 = load i32, i32* %st_mode105, align 8, !dbg !5930, !ctir !165
  %and106 = and i32 %78, 61440, !dbg !5930
  %cmp107 = icmp eq i32 %and106, 40960, !dbg !5930
  br i1 %cmp107, label %if.end126, label %land.lhs.true108, !dbg !5932

land.lhs.true108:                                 ; preds = %if.end104
  %79 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5933
  %st_mode109 = getelementptr inbounds %struct.stat, %struct.stat* %79, i32 0, i32 3, !dbg !5933, !ctir !389
  %80 = load i32, i32* %st_mode109, align 8, !dbg !5933, !ctir !165
  %and110 = and i32 %80, 61440, !dbg !5933
  %cmp111 = icmp eq i32 %and110, 40960, !dbg !5933
  br i1 %cmp111, label %if.end126, label %if.then112, !dbg !5934

if.then112:                                       ; preds = %land.lhs.true108
  %81 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5935
  %st_ino113 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 1, !dbg !5935, !ctir !389
  %82 = load i64, i64* %st_ino113, align 8, !dbg !5935, !ctir !257
  %83 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5935
  %st_ino114 = getelementptr inbounds %struct.stat, %struct.stat* %83, i32 0, i32 1, !dbg !5935, !ctir !389
  %84 = load i64, i64* %st_ino114, align 8, !dbg !5935, !ctir !257
  %cmp115 = icmp eq i64 %82, %84, !dbg !5935
  br i1 %cmp115, label %land.lhs.true116, label %if.then120, !dbg !5935

land.lhs.true116:                                 ; preds = %if.then112
  %85 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5935
  %st_dev117 = getelementptr inbounds %struct.stat, %struct.stat* %85, i32 0, i32 0, !dbg !5935, !ctir !389
  %86 = load i64, i64* %st_dev117, align 8, !dbg !5935, !ctir !260
  %87 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5935
  %st_dev118 = getelementptr inbounds %struct.stat, %struct.stat* %87, i32 0, i32 0, !dbg !5935, !ctir !389
  %88 = load i64, i64* %st_dev118, align 8, !dbg !5935, !ctir !260
  %cmp119 = icmp eq i64 %86, %88, !dbg !5935
  br i1 %cmp119, label %if.end121, label %if.then120, !dbg !5938

if.then120:                                       ; preds = %land.lhs.true116, %if.then112
  store i1 true, i1* %retval, align 1, !dbg !5939
  br label %return, !dbg !5939

if.end121:                                        ; preds = %land.lhs.true116
  %89 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5940
  %hard_link122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 8, !dbg !5942, !ctir !3752
  %90 = load i8, i8* %hard_link122, align 1, !dbg !5942
  %tobool123 = trunc i8 %90 to i1, !dbg !5942, !ctir !139
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !5943

if.then124:                                       ; preds = %if.end121
  %91 = load i8*, i8** %return_now.addr, align 8, !dbg !5944
  store i8 1, i8* %91, align 1, !dbg !5946, !ctir !139
  store i1 true, i1* %retval, align 1, !dbg !5947
  br label %return, !dbg !5947

if.end125:                                        ; preds = %if.end121
  br label %if.end126, !dbg !5948

if.end126:                                        ; preds = %if.end125, %land.lhs.true108, %if.end104
  %92 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5949
  %move_mode127 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %92, i32 0, i32 9, !dbg !5951, !ctir !3752
  %93 = load i8, i8* %move_mode127, align 8, !dbg !5951
  %tobool128 = trunc i8 %93 to i1, !dbg !5951, !ctir !139
  br i1 %tobool128, label %land.lhs.true129, label %if.end145, !dbg !5952

land.lhs.true129:                                 ; preds = %if.end126
  %94 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5953
  %st_mode130 = getelementptr inbounds %struct.stat, %struct.stat* %94, i32 0, i32 3, !dbg !5953, !ctir !389
  %95 = load i32, i32* %st_mode130, align 8, !dbg !5953, !ctir !165
  %and131 = and i32 %95, 61440, !dbg !5953
  %cmp132 = icmp eq i32 %and131, 40960, !dbg !5953
  br i1 %cmp132, label %land.lhs.true133, label %if.end145, !dbg !5954

land.lhs.true133:                                 ; preds = %land.lhs.true129
  %96 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5955
  %st_nlink134 = getelementptr inbounds %struct.stat, %struct.stat* %96, i32 0, i32 2, !dbg !5956, !ctir !389
  %97 = load i64, i64* %st_nlink134, align 8, !dbg !5956, !ctir !333
  %cmp135 = icmp ult i64 1, %97, !dbg !5957
  br i1 %cmp135, label %if.then136, label %if.end145, !dbg !5958

if.then136:                                       ; preds = %land.lhs.true133
  call void @llvm.dbg.declare(metadata i8** %abs_src, metadata !5959, metadata !DIExpression()), !dbg !5961
  %98 = load i8*, i8** %src_name.addr, align 8, !dbg !5962
  %call137 = call i8* @canonicalize_file_name(i8* %98) #12, !dbg !5963
  store i8* %call137, i8** %abs_src, align 8, !dbg !5961
  %99 = load i8*, i8** %abs_src, align 8, !dbg !5964
  %tobool138 = icmp ne i8* %99, null, !dbg !5964
  br i1 %tobool138, label %if.then139, label %if.end144, !dbg !5966

if.then139:                                       ; preds = %if.then136
  call void @llvm.dbg.declare(metadata i8* %result, metadata !5967, metadata !DIExpression()), !dbg !5969
  %100 = load i8*, i8** %abs_src, align 8, !dbg !5970
  %101 = load i8*, i8** %dst_name.addr, align 8, !dbg !5971
  %call140 = call zeroext i1 @same_name(i8* %100, i8* %101), !dbg !5972
  %lnot141 = xor i1 %call140, true, !dbg !5973
  %frombool142 = zext i1 %lnot141 to i8, !dbg !5969
  store i8 %frombool142, i8* %result, align 1, !dbg !5969
  %102 = load i8*, i8** %abs_src, align 8, !dbg !5974
  call void @free(i8* %102) #12, !dbg !5975
  %103 = load i8, i8* %result, align 1, !dbg !5976
  %tobool143 = trunc i8 %103 to i1, !dbg !5976
  store i1 %tobool143, i1* %retval, align 1, !dbg !5977
  br label %return, !dbg !5977

if.end144:                                        ; preds = %if.then136
  br label %if.end145, !dbg !5978

if.end145:                                        ; preds = %if.end144, %land.lhs.true133, %land.lhs.true129, %if.end126
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5979
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 29, !dbg !5981, !ctir !3752
  %105 = load i8, i8* %symbolic_link, align 4, !dbg !5981
  %tobool146 = trunc i8 %105 to i1, !dbg !5981, !ctir !139
  br i1 %tobool146, label %land.lhs.true147, label %if.end152, !dbg !5982

land.lhs.true147:                                 ; preds = %if.end145
  %106 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5983
  %st_mode148 = getelementptr inbounds %struct.stat, %struct.stat* %106, i32 0, i32 3, !dbg !5983, !ctir !389
  %107 = load i32, i32* %st_mode148, align 8, !dbg !5983, !ctir !165
  %and149 = and i32 %107, 61440, !dbg !5983
  %cmp150 = icmp eq i32 %and149, 40960, !dbg !5983
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !5984

if.then151:                                       ; preds = %land.lhs.true147
  store i1 true, i1* %retval, align 1, !dbg !5985
  br label %return, !dbg !5985

if.end152:                                        ; preds = %land.lhs.true147, %if.end145
  %108 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5986
  %dereference153 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %108, i32 0, i32 1, !dbg !5988, !ctir !3752
  %109 = load i32, i32* %dereference153, align 4, !dbg !5988, !ctir !73
  %cmp154 = icmp eq i32 %109, 2, !dbg !5989
  br i1 %cmp154, label %if.then155, label %if.end194, !dbg !5990

if.then155:                                       ; preds = %if.end152
  %110 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5991
  %st_mode156 = getelementptr inbounds %struct.stat, %struct.stat* %110, i32 0, i32 3, !dbg !5991, !ctir !389
  %111 = load i32, i32* %st_mode156, align 8, !dbg !5991, !ctir !165
  %and157 = and i32 %111, 61440, !dbg !5991
  %cmp158 = icmp eq i32 %and157, 40960, !dbg !5991
  br i1 %cmp158, label %if.else160, label %if.then159, !dbg !5994

if.then159:                                       ; preds = %if.then155
  %112 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5995
  %113 = bitcast %struct.stat* %tmp_src_sb to i8*, !dbg !5996
  %114 = bitcast %struct.stat* %112 to i8*, !dbg !5996
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 144, i1 false), !dbg !5996
  br label %if.end165, !dbg !5997

if.else160:                                       ; preds = %if.then155
  %115 = load i8*, i8** %src_name.addr, align 8, !dbg !5998
  %call161 = call i32 @stat(i8* %115, %struct.stat* %tmp_src_sb) #12, !dbg !6000
  %cmp162 = icmp ne i32 %call161, 0, !dbg !6001
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !6002

if.then163:                                       ; preds = %if.else160
  store i1 true, i1* %retval, align 1, !dbg !6003
  br label %return, !dbg !6003

if.end164:                                        ; preds = %if.else160
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then159
  %116 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6004
  %st_mode166 = getelementptr inbounds %struct.stat, %struct.stat* %116, i32 0, i32 3, !dbg !6004, !ctir !389
  %117 = load i32, i32* %st_mode166, align 8, !dbg !6004, !ctir !165
  %and167 = and i32 %117, 61440, !dbg !6004
  %cmp168 = icmp eq i32 %and167, 40960, !dbg !6004
  br i1 %cmp168, label %if.else170, label %if.then169, !dbg !6006

if.then169:                                       ; preds = %if.end165
  %118 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6007
  %119 = bitcast %struct.stat* %tmp_dst_sb to i8*, !dbg !6008
  %120 = bitcast %struct.stat* %118 to i8*, !dbg !6008
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 144, i1 false), !dbg !6008
  br label %if.end175, !dbg !6009

if.else170:                                       ; preds = %if.end165
  %121 = load i8*, i8** %dst_name.addr, align 8, !dbg !6010
  %call171 = call i32 @stat(i8* %121, %struct.stat* %tmp_dst_sb) #12, !dbg !6012
  %cmp172 = icmp ne i32 %call171, 0, !dbg !6013
  br i1 %cmp172, label %if.then173, label %if.end174, !dbg !6014

if.then173:                                       ; preds = %if.else170
  store i1 true, i1* %retval, align 1, !dbg !6015
  br label %return, !dbg !6015

if.end174:                                        ; preds = %if.else170
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then169
  %st_ino176 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 1, !dbg !6016, !ctir !335
  %122 = load i64, i64* %st_ino176, align 8, !dbg !6016, !ctir !257
  %st_ino177 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 1, !dbg !6016, !ctir !335
  %123 = load i64, i64* %st_ino177, align 8, !dbg !6016, !ctir !257
  %cmp178 = icmp eq i64 %122, %123, !dbg !6016
  br i1 %cmp178, label %land.lhs.true179, label %if.then183, !dbg !6016

land.lhs.true179:                                 ; preds = %if.end175
  %st_dev180 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 0, !dbg !6016, !ctir !335
  %124 = load i64, i64* %st_dev180, align 8, !dbg !6016, !ctir !260
  %st_dev181 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 0, !dbg !6016, !ctir !335
  %125 = load i64, i64* %st_dev181, align 8, !dbg !6016, !ctir !260
  %cmp182 = icmp eq i64 %124, %125, !dbg !6016
  br i1 %cmp182, label %if.end184, label %if.then183, !dbg !6018

if.then183:                                       ; preds = %land.lhs.true179, %if.end175
  store i1 true, i1* %retval, align 1, !dbg !6019
  br label %return, !dbg !6019

if.end184:                                        ; preds = %land.lhs.true179
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6020
  %hard_link185 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %126, i32 0, i32 8, !dbg !6022, !ctir !3752
  %127 = load i8, i8* %hard_link185, align 1, !dbg !6022
  %tobool186 = trunc i8 %127 to i1, !dbg !6022, !ctir !139
  br i1 %tobool186, label %if.then187, label %if.end193, !dbg !6023

if.then187:                                       ; preds = %if.end184
  %128 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6024
  %st_mode188 = getelementptr inbounds %struct.stat, %struct.stat* %128, i32 0, i32 3, !dbg !6024, !ctir !389
  %129 = load i32, i32* %st_mode188, align 8, !dbg !6024, !ctir !165
  %and189 = and i32 %129, 61440, !dbg !6024
  %cmp190 = icmp eq i32 %and189, 40960, !dbg !6024
  %lnot191 = xor i1 %cmp190, true, !dbg !6026
  %130 = load i8*, i8** %return_now.addr, align 8, !dbg !6027
  %frombool192 = zext i1 %lnot191 to i8, !dbg !6028
  store i8 %frombool192, i8* %130, align 1, !dbg !6028, !ctir !139
  store i1 true, i1* %retval, align 1, !dbg !6029
  br label %return, !dbg !6029

if.end193:                                        ; preds = %if.end184
  br label %if.end194, !dbg !6030

if.end194:                                        ; preds = %if.end193, %if.end152
  store i1 false, i1* %retval, align 1, !dbg !6031
  br label %return, !dbg !6031

return:                                           ; preds = %if.end194, %if.then187, %if.then183, %if.then173, %if.then163, %if.then151, %if.then139, %if.then124, %if.then120, %if.then99, %if.then92, %if.end79, %if.end78, %if.then77, %if.then56, %if.then36, %if.then30, %if.end25, %if.then22, %if.then19, %if.then
  %131 = load i1, i1* %retval, align 1, !dbg !6032
  ret i1 %131, !dbg !6032
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hard_link(i8* %src_name, i8* %dst_name, i1 zeroext %replace, i1 zeroext %verbose, i1 zeroext %dereference) #4 !dbg !6033 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %replace.addr = alloca i8, align 1
  %verbose.addr = alloca i8, align 1
  %dereference.addr = alloca i8, align 1
  %err = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6036, metadata !DIExpression()), !dbg !6037
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6038, metadata !DIExpression()), !dbg !6039
  %frombool = zext i1 %replace to i8
  store i8 %frombool, i8* %replace.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %replace.addr, metadata !6040, metadata !DIExpression()), !dbg !6041
  %frombool1 = zext i1 %verbose to i8
  store i8 %frombool1, i8* %verbose.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %verbose.addr, metadata !6042, metadata !DIExpression()), !dbg !6043
  %frombool2 = zext i1 %dereference to i8
  store i8 %frombool2, i8* %dereference.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dereference.addr, metadata !6044, metadata !DIExpression()), !dbg !6045
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6046, metadata !DIExpression()), !dbg !6047
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !6048
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !6049
  %2 = load i8, i8* %dereference.addr, align 1, !dbg !6050
  %tobool = trunc i8 %2 to i1, !dbg !6050
  %3 = zext i1 %tobool to i64, !dbg !6050
  %cond = select i1 %tobool, i32 1024, i32 0, !dbg !6050
  %4 = load i8, i8* %replace.addr, align 1, !dbg !6051
  %tobool3 = trunc i8 %4 to i1, !dbg !6051
  %call = call i32 @force_linkat(i32 -100, i8* %0, i32 -100, i8* %1, i32 %cond, i1 zeroext %tobool3, i32 -1), !dbg !6052
  store i32 %call, i32* %err, align 4, !dbg !6047
  %5 = load i32, i32* %err, align 4, !dbg !6053
  %cmp = icmp slt i32 0, %5, !dbg !6055
  br i1 %cmp, label %if.then, label %if.end, !dbg !6056

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !6057
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52.148, i64 0, i64 0)) #12, !dbg !6059
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !6060
  %call5 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %7), !dbg !6060
  %8 = load i8*, i8** %src_name.addr, align 8, !dbg !6061
  %call6 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %8), !dbg !6061
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call4, i8* %call5, i8* %call6), !dbg !6062
  store i1 false, i1* %retval, align 1, !dbg !6063
  br label %return, !dbg !6063

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %err, align 4, !dbg !6064
  %cmp7 = icmp slt i32 %9, 0, !dbg !6066
  br i1 %cmp7, label %land.lhs.true, label %if.end13, !dbg !6067

land.lhs.true:                                    ; preds = %if.end
  %10 = load i8, i8* %verbose.addr, align 1, !dbg !6068
  %tobool8 = trunc i8 %10 to i1, !dbg !6068
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !6069

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #12, !dbg !6070
  %11 = load i8*, i8** %dst_name.addr, align 8, !dbg !6071
  %call11 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !6071
  %call12 = call i32 (i8*, ...) @printf(i8* %call10, i8* %call11), !dbg !6072
  br label %if.end13, !dbg !6072

if.end13:                                         ; preds = %if.then9, %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !6073
  br label %return, !dbg !6073

return:                                           ; preds = %if.end13, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !6074
  ret i1 %12, !dbg !6074
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abandon_move(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6075 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6078, metadata !DIExpression()), !dbg !6079
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6080, metadata !DIExpression()), !dbg !6081
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6082, metadata !DIExpression()), !dbg !6083
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6084
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 9, !dbg !6084, !ctir !3752
  %1 = load i8, i8* %move_mode, align 8, !dbg !6084
  %tobool = trunc i8 %1 to i1, !dbg !6084, !ctir !139
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6084

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6084

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53.147, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 1782, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.abandon_move, i64 0, i64 0)) #13, !dbg !6084
  unreachable, !dbg !6084

2:                                                ; No predecessors!
  br label %cond.end, !dbg !6084

cond.end:                                         ; preds = %2, %cond.true
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6085
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 2, !dbg !6086, !ctir !3752
  %4 = load i32, i32* %interactive, align 8, !dbg !6086, !ctir !80
  %cmp = icmp eq i32 %4, 2, !dbg !6087
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6088

lor.rhs:                                          ; preds = %cond.end
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6089
  %interactive1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 2, !dbg !6090, !ctir !3752
  %6 = load i32, i32* %interactive1, align 8, !dbg !6090, !ctir !80
  %cmp2 = icmp eq i32 %6, 3, !dbg !6091
  br i1 %cmp2, label %land.rhs, label %lor.lhs.false, !dbg !6092

lor.lhs.false:                                    ; preds = %lor.rhs
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6093
  %interactive3 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 2, !dbg !6094, !ctir !3752
  %8 = load i32, i32* %interactive3, align 8, !dbg !6094, !ctir !80
  %cmp4 = icmp eq i32 %8, 4, !dbg !6095
  br i1 %cmp4, label %land.lhs.true, label %land.end, !dbg !6096

land.lhs.true:                                    ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6097
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 32, !dbg !6098, !ctir !3752
  %10 = load i8, i8* %stdin_tty, align 1, !dbg !6098
  %tobool5 = trunc i8 %10 to i1, !dbg !6098, !ctir !139
  br i1 %tobool5, label %land.lhs.true6, label %land.end, !dbg !6099

land.lhs.true6:                                   ; preds = %land.lhs.true
  %11 = load i8*, i8** %dst_name.addr, align 8, !dbg !6100
  %12 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6101
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 3, !dbg !6102, !ctir !389
  %13 = load i32, i32* %st_mode, align 8, !dbg !6102, !ctir !165
  %call = call zeroext i1 @writable_destination(i8* %11, i32 %13), !dbg !6103
  br i1 %call, label %land.end, label %land.rhs, !dbg !6104

land.rhs:                                         ; preds = %land.lhs.true6, %lor.rhs
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6105
  %15 = load i8*, i8** %dst_name.addr, align 8, !dbg !6106
  %16 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6107
  %call7 = call zeroext i1 @overwrite_ok(%struct.cp_options* %14, i8* %15, %struct.stat* %16), !dbg !6108
  %lnot = xor i1 %call7, true, !dbg !6109
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %land.lhs.true, %lor.lhs.false
  %17 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !6110
  br label %lor.end, !dbg !6088

lor.end:                                          ; preds = %land.end, %cond.end
  %18 = phi i1 [ true, %cond.end ], [ %17, %land.end ]
  ret i1 %18, !dbg !6111
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @overwrite_ok(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6112 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %perms = alloca [12 x i8], align 1, !ctir !170
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6113, metadata !DIExpression()), !dbg !6114
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6115, metadata !DIExpression()), !dbg !6116
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6117, metadata !DIExpression()), !dbg !6118
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !6119
  %1 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6121
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %1, i32 0, i32 3, !dbg !6122, !ctir !389
  %2 = load i32, i32* %st_mode, align 8, !dbg !6122, !ctir !165
  %call = call zeroext i1 @writable_destination(i8* %0, i32 %2), !dbg !6123
  br i1 %call, label %if.else, label %if.then, !dbg !6124

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [12 x i8]* %perms, metadata !6125, metadata !DIExpression()), !dbg !6127
  %3 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6128
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !6129, !ctir !389
  %4 = load i32, i32* %st_mode1, align 8, !dbg !6129, !ctir !165
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 0, !dbg !6130, !ctir !170
  call void @strmode(i32 %4, i8* %arraydecay), !dbg !6131
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 10, !dbg !6132, !ctir !170
  store i8 0, i8* %arrayidx, align 1, !dbg !6133
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6134
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6135
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 9, !dbg !6136, !ctir !3752
  %7 = load i8, i8* %move_mode, align 8, !dbg !6136
  %tobool = trunc i8 %7 to i1, !dbg !6136, !ctir !139
  br i1 %tobool, label %cond.true, label %lor.lhs.false, !dbg !6137

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6138
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 6, !dbg !6139, !ctir !3752
  %9 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !6139
  %tobool2 = trunc i8 %9 to i1, !dbg !6139, !ctir !139
  br i1 %tobool2, label %cond.true, label %lor.lhs.false3, !dbg !6140

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6141
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 7, !dbg !6142, !ctir !3752
  %11 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6142
  %tobool4 = trunc i8 %11 to i1, !dbg !6142, !ctir !139
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !6143

cond.true:                                        ; preds = %lor.lhs.false3, %lor.lhs.false, %if.then
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.54.144, i64 0, i64 0)) #12, !dbg !6144
  br label %cond.end, !dbg !6143

cond.false:                                       ; preds = %lor.lhs.false3
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55.145, i64 0, i64 0)) #12, !dbg !6145
  br label %cond.end, !dbg !6143

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %call6, %cond.false ], !dbg !6143
  %12 = load i8*, i8** @program_name, align 8, !dbg !6146
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !6147
  %call7 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6147
  %14 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6148
  %st_mode8 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !6149, !ctir !389
  %15 = load i32, i32* %st_mode8, align 8, !dbg !6149, !ctir !165
  %and = and i32 %15, 4095, !dbg !6150
  %conv = zext i32 %and to i64, !dbg !6151
  %arrayidx9 = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 1, !dbg !6152, !ctir !170
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %cond, i8* %12, i8* %call7, i64 %conv, i8* %arrayidx9), !dbg !6153
  br label %if.end, !dbg !6154

if.else:                                          ; preds = %entry
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6155
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56.146, i64 0, i64 0)) #12, !dbg !6157
  %17 = load i8*, i8** @program_name, align 8, !dbg !6158
  %18 = load i8*, i8** %dst_name.addr, align 8, !dbg !6159
  %call12 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !6159
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call11, i8* %17, i8* %call12), !dbg !6160
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %call14 = call zeroext i1 @yesno(), !dbg !6161
  ret i1 %call14, !dbg !6162
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot.106(i8* %file_name) #4 !dbg !6163 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !8
  store i8* %file_name, i8** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !6164, metadata !DIExpression()), !dbg !6165
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !6166
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !6166, !ctir !113
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6166
  %conv = sext i8 %1 to i32, !dbg !6166
  %cmp = icmp eq i32 %conv, 46, !dbg !6168
  br i1 %cmp, label %if.then, label %if.else, !dbg !6169

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !6170, metadata !DIExpression()), !dbg !6172
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !6173
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !6174
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !6174, !ctir !113
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !6174
  %conv3 = sext i8 %4 to i32, !dbg !6174
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !6175
  %conv5 = zext i1 %cmp4 to i32, !dbg !6175
  %add = add nsw i32 %conv5, 1, !dbg !6176
  %idxprom = sext i32 %add to i64, !dbg !6173
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !6173, !ctir !113
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !6173
  store i8 %5, i8* %sep, align 1, !dbg !6172
  %6 = load i8, i8* %sep, align 1, !dbg !6177
  %tobool = icmp ne i8 %6, 0, !dbg !6177
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6178

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !6179
  %conv7 = sext i8 %7 to i32, !dbg !6179
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !6179
  br label %lor.end, !dbg !6178

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !6180
  br label %return, !dbg !6180

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !6181
  br label %return, !dbg !6181

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !6182
  ret i1 %9, !dbg !6182
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @source_is_dst_backup(i8* %srcbase, %struct.stat* %src_st, i8* %dst_name) #4 !dbg !6183 {
entry:
  %retval = alloca i1, align 1
  %srcbase.addr = alloca i8*, align 8
  %src_st.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %srcbaselen = alloca i64, align 8, !ctir !52
  %dstbase = alloca i8*, align 8, !ctir !113
  %dstbaselen = alloca i64, align 8, !ctir !52
  %suffixlen = alloca i64, align 8, !ctir !52
  %dstlen = alloca i64, align 8, !ctir !52
  %dst_back = alloca i8*, align 8, !ctir !7
  %dst_back_sb = alloca %struct.stat, align 8, !ctir !335
  %dst_back_status = alloca i32, align 4, !ctir !5
  store i8* %srcbase, i8** %srcbase.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcbase.addr, metadata !6186, metadata !DIExpression()), !dbg !6187
  store %struct.stat* %src_st, %struct.stat** %src_st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_st.addr, metadata !6188, metadata !DIExpression()), !dbg !6189
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6190, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.declare(metadata i64* %srcbaselen, metadata !6192, metadata !DIExpression()), !dbg !6193
  %0 = load i8*, i8** %srcbase.addr, align 8, !dbg !6194
  %call = call i64 @strlen(i8* %0) #14, !dbg !6195
  store i64 %call, i64* %srcbaselen, align 8, !dbg !6193
  call void @llvm.dbg.declare(metadata i8** %dstbase, metadata !6196, metadata !DIExpression()), !dbg !6197
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !6198
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !6199
  store i8* %call1, i8** %dstbase, align 8, !dbg !6197
  call void @llvm.dbg.declare(metadata i64* %dstbaselen, metadata !6200, metadata !DIExpression()), !dbg !6201
  %2 = load i8*, i8** %dstbase, align 8, !dbg !6202
  %call2 = call i64 @strlen(i8* %2) #14, !dbg !6203
  store i64 %call2, i64* %dstbaselen, align 8, !dbg !6201
  call void @llvm.dbg.declare(metadata i64* %suffixlen, metadata !6204, metadata !DIExpression()), !dbg !6205
  %3 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6206
  %call3 = call i64 @strlen(i8* %3) #14, !dbg !6207
  store i64 %call3, i64* %suffixlen, align 8, !dbg !6205
  %4 = load i64, i64* %srcbaselen, align 8, !dbg !6208
  %5 = load i64, i64* %dstbaselen, align 8, !dbg !6210
  %6 = load i64, i64* %suffixlen, align 8, !dbg !6211
  %add = add i64 %5, %6, !dbg !6212
  %cmp = icmp eq i64 %4, %add, !dbg !6213
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !6214

land.lhs.true:                                    ; preds = %entry
  %7 = load i8*, i8** %srcbase.addr, align 8, !dbg !6215
  %8 = load i8*, i8** %dstbase, align 8, !dbg !6216
  %9 = load i64, i64* %dstbaselen, align 8, !dbg !6217
  %call4 = call i32 @memcmp(i8* %7, i8* %8, i64 %9) #14, !dbg !6218
  %cmp5 = icmp eq i32 %call4, 0, !dbg !6219
  br i1 %cmp5, label %land.lhs.true6, label %if.then, !dbg !6220

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %srcbase.addr, align 8, !dbg !6221
  %11 = load i64, i64* %dstbaselen, align 8, !dbg !6221
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !6221, !ctir !114
  %12 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6221
  %call7 = call i32 @strcmp(i8* %add.ptr, i8* %12) #14, !dbg !6221
  %cmp8 = icmp eq i32 %call7, 0, !dbg !6221
  br i1 %cmp8, label %if.end, label %if.then, !dbg !6222

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !6223
  br label %return, !dbg !6223

if.end:                                           ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata i64* %dstlen, metadata !6224, metadata !DIExpression()), !dbg !6225
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !6226
  %call9 = call i64 @strlen(i8* %13) #14, !dbg !6227
  store i64 %call9, i64* %dstlen, align 8, !dbg !6225
  call void @llvm.dbg.declare(metadata i8** %dst_back, metadata !6228, metadata !DIExpression()), !dbg !6229
  %14 = load i64, i64* %dstlen, align 8, !dbg !6230
  %15 = load i64, i64* %suffixlen, align 8, !dbg !6231
  %add10 = add i64 %14, %15, !dbg !6232
  %add11 = add i64 %add10, 1, !dbg !6233
  %call12 = call noalias i8* @xmalloc(i64 %add11), !dbg !6234
  store i8* %call12, i8** %dst_back, align 8, !dbg !6229
  %16 = load i8*, i8** %dst_back, align 8, !dbg !6235
  %17 = load i8*, i8** %dst_name.addr, align 8, !dbg !6236
  %18 = load i64, i64* %dstlen, align 8, !dbg !6237
  %call13 = call i8* @mempcpy(i8* %16, i8* %17, i64 %18) #12, !dbg !6238
  %19 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6239
  %call14 = call i8* @strcpy(i8* %call13, i8* %19) #12, !dbg !6240
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_back_sb, metadata !6241, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.declare(metadata i32* %dst_back_status, metadata !6243, metadata !DIExpression()), !dbg !6244
  %20 = load i8*, i8** %dst_back, align 8, !dbg !6245
  %call15 = call i32 @stat(i8* %20, %struct.stat* %dst_back_sb) #12, !dbg !6246
  store i32 %call15, i32* %dst_back_status, align 4, !dbg !6244
  %21 = load i8*, i8** %dst_back, align 8, !dbg !6247
  call void @free(i8* %21) #12, !dbg !6248
  %22 = load i32, i32* %dst_back_status, align 4, !dbg !6249
  %cmp16 = icmp eq i32 %22, 0, !dbg !6250
  br i1 %cmp16, label %land.rhs, label %land.end22, !dbg !6251

land.rhs:                                         ; preds = %if.end
  %23 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !6252
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !6252, !ctir !389
  %24 = load i64, i64* %st_ino, align 8, !dbg !6252, !ctir !257
  %st_ino17 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 1, !dbg !6252, !ctir !335
  %25 = load i64, i64* %st_ino17, align 8, !dbg !6252, !ctir !257
  %cmp18 = icmp eq i64 %24, %25, !dbg !6252
  br i1 %cmp18, label %land.rhs19, label %land.end, !dbg !6252

land.rhs19:                                       ; preds = %land.rhs
  %26 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !6252
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 0, !dbg !6252, !ctir !389
  %27 = load i64, i64* %st_dev, align 8, !dbg !6252, !ctir !260
  %st_dev20 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 0, !dbg !6252, !ctir !335
  %28 = load i64, i64* %st_dev20, align 8, !dbg !6252, !ctir !260
  %cmp21 = icmp eq i64 %27, %28, !dbg !6252
  br label %land.end

land.end:                                         ; preds = %land.rhs19, %land.rhs
  %29 = phi i1 [ false, %land.rhs ], [ %cmp21, %land.rhs19 ], !dbg !6253
  br label %land.end22

land.end22:                                       ; preds = %land.end, %if.end
  %30 = phi i1 [ false, %if.end ], [ %29, %land.end ], !dbg !6253
  store i1 %30, i1* %retval, align 1, !dbg !6254
  br label %return, !dbg !6254

return:                                           ; preds = %land.end22, %if.then
  %31 = load i1, i1* %retval, align 1, !dbg !6255
  ret i1 %31, !dbg !6255
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_verbose(i8* %src, i8* %dst, i8* %backup_dst_name) #4 !dbg !6256 {
entry:
  %src.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  %backup_dst_name.addr = alloca i8*, align 8
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6261, metadata !DIExpression()), !dbg !6262
  store i8* %backup_dst_name, i8** %backup_dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %backup_dst_name.addr, metadata !6263, metadata !DIExpression()), !dbg !6264
  %0 = load i8*, i8** %src.addr, align 8, !dbg !6265
  %call = call i8* @quotearg_n_style(i32 0, i32 4, i8* %0), !dbg !6265
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !6266
  %call1 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %1), !dbg !6266
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57.142, i64 0, i64 0), i8* %call, i8* %call1), !dbg !6267
  %2 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !6268
  %tobool = icmp ne i8* %2, null, !dbg !6268
  br i1 %tobool, label %if.then, label %if.end, !dbg !6270

if.then:                                          ; preds = %entry
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58.143, i64 0, i64 0)) #12, !dbg !6271
  %3 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !6272
  %call4 = call i8* @quotearg_style(i32 4, i8* %3), !dbg !6272
  %call5 = call i32 (i8*, ...) @printf(i8* %call3, i8* %call4), !dbg !6273
  br label %if.end, !dbg !6273

if.end:                                           ; preds = %if.then, %entry
  %call6 = call i32 @putchar_unlocked(i32 10), !dbg !6274
  ret void, !dbg !6275
}

; Function Attrs: nounwind
declare dso_local i32 @rename(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @rmdir(i8*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_ancestor(%struct.stat* %sb, %struct.dir_list* %ancestors) #9 !dbg !6276 {
entry:
  %retval = alloca i1, align 1
  %sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !6281, metadata !DIExpression()), !dbg !6282
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !6283, metadata !DIExpression()), !dbg !6284
  br label %while.cond, !dbg !6285

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6286
  %cmp = icmp ne %struct.dir_list* %0, null, !dbg !6287
  br i1 %cmp, label %while.body, label %while.end, !dbg !6285

while.body:                                       ; preds = %while.cond
  %1 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6288
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %1, i32 0, i32 1, !dbg !6291, !ctir !6280
  %2 = load i64, i64* %ino, align 8, !dbg !6291, !ctir !256
  %3 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !6292
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 1, !dbg !6293, !ctir !389
  %4 = load i64, i64* %st_ino, align 8, !dbg !6293, !ctir !257
  %cmp1 = icmp eq i64 %2, %4, !dbg !6294
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !6295

land.lhs.true:                                    ; preds = %while.body
  %5 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6296
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %5, i32 0, i32 2, !dbg !6297, !ctir !6280
  %6 = load i64, i64* %dev, align 8, !dbg !6297, !ctir !259
  %7 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !6298
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !6299, !ctir !389
  %8 = load i64, i64* %st_dev, align 8, !dbg !6299, !ctir !260
  %cmp2 = icmp eq i64 %6, %8, !dbg !6300
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6301

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !6302
  br label %return, !dbg !6302

if.end:                                           ; preds = %land.lhs.true, %while.body
  %9 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6303
  %parent = getelementptr inbounds %struct.dir_list, %struct.dir_list* %9, i32 0, i32 0, !dbg !6304, !ctir !6280
  %10 = load %struct.dir_list*, %struct.dir_list** %parent, align 8, !dbg !6304, !ctir !372
  store %struct.dir_list* %10, %struct.dir_list** %ancestors.addr, align 8, !dbg !6305
  br label %while.cond, !dbg !6285, !llvm.loop !6306

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !6308
  br label %return, !dbg !6308

return:                                           ; preds = %while.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !6309
  ret i1 %11, !dbg !6309
}

; Function Attrs: nounwind
declare dso_local i32 @mkdir(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_dir(i8* %src_name_in, i8* %dst_name_in, i1 zeroext %new_dst, %struct.stat* %src_sb, %struct.dir_list* %ancestors, %struct.cp_options* %x, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self) #4 !dbg !6310 {
entry:
  %retval = alloca i1, align 1
  %src_name_in.addr = alloca i8*, align 8
  %dst_name_in.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %src_sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %name_space = alloca i8*, align 8, !ctir !7
  %namep = alloca i8*, align 8, !ctir !7
  %non_command_line_options = alloca %struct.cp_options, align 8, !ctir !3753
  %ok = alloca i8, align 1, !ctir !139
  %new_first_dir_created = alloca i8, align 1, !ctir !139
  %local_copy_into_self = alloca i8, align 1, !ctir !139
  %src_name = alloca i8*, align 8, !ctir !7
  %dst_name = alloca i8*, align 8, !ctir !7
  %first_dir_created = alloca i8, align 1, !ctir !139
  store i8* %src_name_in, i8** %src_name_in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name_in.addr, metadata !6313, metadata !DIExpression()), !dbg !6314
  store i8* %dst_name_in, i8** %dst_name_in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name_in.addr, metadata !6315, metadata !DIExpression()), !dbg !6316
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !6317, metadata !DIExpression()), !dbg !6318
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6319, metadata !DIExpression()), !dbg !6320
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !6321, metadata !DIExpression()), !dbg !6322
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6323, metadata !DIExpression()), !dbg !6324
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !6325, metadata !DIExpression()), !dbg !6326
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !6327, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !6329, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.declare(metadata i8** %namep, metadata !6331, metadata !DIExpression()), !dbg !6332
  call void @llvm.dbg.declare(metadata %struct.cp_options* %non_command_line_options, metadata !6333, metadata !DIExpression()), !dbg !6334
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6335
  %1 = bitcast %struct.cp_options* %non_command_line_options to i8*, !dbg !6336
  %2 = bitcast %struct.cp_options* %0 to i8*, !dbg !6336
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 80, i1 false), !dbg !6336
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !6337, metadata !DIExpression()), !dbg !6338
  store i8 1, i8* %ok, align 1, !dbg !6338
  %3 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6339
  %call = call i8* @savedir(i8* %3, i32 2), !dbg !6340
  store i8* %call, i8** %name_space, align 8, !dbg !6341
  %4 = load i8*, i8** %name_space, align 8, !dbg !6342
  %cmp = icmp eq i8* %4, null, !dbg !6344
  br i1 %cmp, label %if.then, label %if.end, !dbg !6345

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !6346
  %5 = load i32, i32* %call1, align 4, !dbg !6346, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59.141, i64 0, i64 0)) #12, !dbg !6348
  %6 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6349
  %call3 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !6349
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call2, i8* %call3), !dbg !6350
  store i1 false, i1* %retval, align 1, !dbg !6351
  br label %return, !dbg !6351

if.end:                                           ; preds = %entry
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6352
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 1, !dbg !6354, !ctir !3752
  %8 = load i32, i32* %dereference, align 4, !dbg !6354, !ctir !73
  %cmp4 = icmp eq i32 %8, 3, !dbg !6355
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !6356

if.then5:                                         ; preds = %if.end
  %dereference6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %non_command_line_options, i32 0, i32 1, !dbg !6357, !ctir !3753
  store i32 2, i32* %dereference6, align 4, !dbg !6358, !ctir !73
  br label %if.end7, !dbg !6359

if.end7:                                          ; preds = %if.then5, %if.end
  call void @llvm.dbg.declare(metadata i8* %new_first_dir_created, metadata !6360, metadata !DIExpression()), !dbg !6361
  store i8 0, i8* %new_first_dir_created, align 1, !dbg !6361
  %9 = load i8*, i8** %name_space, align 8, !dbg !6362
  store i8* %9, i8** %namep, align 8, !dbg !6363
  br label %while.cond, !dbg !6364

while.cond:                                       ; preds = %if.end28, %if.end7
  %10 = load i8*, i8** %namep, align 8, !dbg !6365
  %11 = load i8, i8* %10, align 1, !dbg !6366, !ctir !8
  %conv = sext i8 %11 to i32, !dbg !6366
  %cmp8 = icmp ne i32 %conv, 0, !dbg !6367
  br i1 %cmp8, label %while.body, label %while.end, !dbg !6364

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %local_copy_into_self, metadata !6368, metadata !DIExpression()), !dbg !6370
  call void @llvm.dbg.declare(metadata i8** %src_name, metadata !6371, metadata !DIExpression()), !dbg !6372
  %12 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6373
  %13 = load i8*, i8** %namep, align 8, !dbg !6374
  %call10 = call i8* @file_name_concat(i8* %12, i8* %13, i8** null), !dbg !6375
  store i8* %call10, i8** %src_name, align 8, !dbg !6372
  call void @llvm.dbg.declare(metadata i8** %dst_name, metadata !6376, metadata !DIExpression()), !dbg !6377
  %14 = load i8*, i8** %dst_name_in.addr, align 8, !dbg !6378
  %15 = load i8*, i8** %namep, align 8, !dbg !6379
  %call11 = call i8* @file_name_concat(i8* %14, i8* %15, i8** null), !dbg !6380
  store i8* %call11, i8** %dst_name, align 8, !dbg !6377
  call void @llvm.dbg.declare(metadata i8* %first_dir_created, metadata !6381, metadata !DIExpression()), !dbg !6382
  %16 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !6383
  %17 = load i8, i8* %16, align 1, !dbg !6384
  %tobool = trunc i8 %17 to i1, !dbg !6384, !ctir !139
  %frombool12 = zext i1 %tobool to i8, !dbg !6382
  store i8 %frombool12, i8* %first_dir_created, align 1, !dbg !6382
  %18 = load i8*, i8** %src_name, align 8, !dbg !6385
  %19 = load i8*, i8** %dst_name, align 8, !dbg !6386
  %20 = load i8, i8* %new_dst.addr, align 1, !dbg !6387
  %tobool13 = trunc i8 %20 to i1, !dbg !6387
  %21 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6388
  %22 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6389
  %call14 = call zeroext i1 @copy_internal(i8* %18, i8* %19, i1 zeroext %tobool13, %struct.stat* %21, %struct.dir_list* %22, %struct.cp_options* %non_command_line_options, i1 zeroext false, i8* %first_dir_created, i8* %local_copy_into_self, i8* null), !dbg !6390
  %conv15 = zext i1 %call14 to i32, !dbg !6390
  %23 = load i8, i8* %ok, align 1, !dbg !6391
  %tobool16 = trunc i8 %23 to i1, !dbg !6391
  %conv17 = zext i1 %tobool16 to i32, !dbg !6391
  %and = and i32 %conv17, %conv15, !dbg !6391
  %tobool18 = icmp ne i32 %and, 0, !dbg !6391
  %frombool19 = zext i1 %tobool18 to i8, !dbg !6391
  store i8 %frombool19, i8* %ok, align 1, !dbg !6391
  %24 = load i8, i8* %local_copy_into_self, align 1, !dbg !6392
  %tobool20 = trunc i8 %24 to i1, !dbg !6392
  %conv21 = zext i1 %tobool20 to i32, !dbg !6392
  %25 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !6393
  %26 = load i8, i8* %25, align 1, !dbg !6394
  %tobool22 = trunc i8 %26 to i1, !dbg !6394, !ctir !139
  %conv23 = zext i1 %tobool22 to i32, !dbg !6394
  %or = or i32 %conv23, %conv21, !dbg !6394
  %tobool24 = icmp ne i32 %or, 0, !dbg !6394
  %frombool25 = zext i1 %tobool24 to i8, !dbg !6394
  store i8 %frombool25, i8* %25, align 1, !dbg !6394, !ctir !139
  %27 = load i8*, i8** %dst_name, align 8, !dbg !6395
  call void @free(i8* %27) #12, !dbg !6396
  %28 = load i8*, i8** %src_name, align 8, !dbg !6397
  call void @free(i8* %28) #12, !dbg !6398
  %29 = load i8, i8* %local_copy_into_self, align 1, !dbg !6399
  %tobool26 = trunc i8 %29 to i1, !dbg !6399
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !6401

if.then27:                                        ; preds = %while.body
  br label %while.end, !dbg !6402

if.end28:                                         ; preds = %while.body
  %30 = load i8, i8* %first_dir_created, align 1, !dbg !6403
  %tobool29 = trunc i8 %30 to i1, !dbg !6403
  %conv30 = zext i1 %tobool29 to i32, !dbg !6403
  %31 = load i8, i8* %new_first_dir_created, align 1, !dbg !6404
  %tobool31 = trunc i8 %31 to i1, !dbg !6404
  %conv32 = zext i1 %tobool31 to i32, !dbg !6404
  %or33 = or i32 %conv32, %conv30, !dbg !6404
  %tobool34 = icmp ne i32 %or33, 0, !dbg !6404
  %frombool35 = zext i1 %tobool34 to i8, !dbg !6404
  store i8 %frombool35, i8* %new_first_dir_created, align 1, !dbg !6404
  %32 = load i8*, i8** %namep, align 8, !dbg !6405
  %call36 = call i64 @strlen(i8* %32) #14, !dbg !6406
  %add = add i64 %call36, 1, !dbg !6407
  %33 = load i8*, i8** %namep, align 8, !dbg !6408
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %add, !dbg !6408, !ctir !8
  store i8* %add.ptr, i8** %namep, align 8, !dbg !6408
  br label %while.cond, !dbg !6364, !llvm.loop !6409

while.end:                                        ; preds = %if.then27, %while.cond
  %34 = load i8*, i8** %name_space, align 8, !dbg !6411
  call void @free(i8* %34) #12, !dbg !6412
  %35 = load i8, i8* %new_first_dir_created, align 1, !dbg !6413
  %tobool37 = trunc i8 %35 to i1, !dbg !6413
  %36 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !6414
  %frombool38 = zext i1 %tobool37 to i8, !dbg !6415
  store i8 %frombool38, i8* %36, align 1, !dbg !6415, !ctir !139
  %37 = load i8, i8* %ok, align 1, !dbg !6416
  %tobool39 = trunc i8 %37 to i1, !dbg !6416
  store i1 %tobool39, i1* %retval, align 1, !dbg !6417
  br label %return, !dbg !6417

return:                                           ; preds = %while.end, %if.then
  %38 = load i1, i1* %retval, align 1, !dbg !6418
  ret i1 %38, !dbg !6418
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_reg(i8* %src_name, i8* %dst_name, %struct.cp_options* %x, i32 %dst_mode, i32 %omitted_permissions, i8* %new_dst, %struct.stat* %src_sb) #4 !dbg !6419 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_mode.addr = alloca i32, align 4
  %omitted_permissions.addr = alloca i32, align 4
  %new_dst.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %buf = alloca i8*, align 8, !ctir !7
  %buf_alloc = alloca i8*, align 8, !ctir !7
  %name_alloc = alloca i8*, align 8, !ctir !7
  %dest_desc = alloca i32, align 4, !ctir !5
  %dest_errno = alloca i32, align 4, !ctir !5
  %source_desc = alloca i32, align 4, !ctir !5
  %src_mode = alloca i32, align 4, !ctir !236
  %sb = alloca %struct.stat, align 8, !ctir !335
  %src_open_sb = alloca %struct.stat, align 8, !ctir !335
  %return_val = alloca i8, align 1, !ctir !139
  %data_copy_required = alloca i8, align 1, !ctir !139
  %open_flags = alloca i32, align 4, !ctir !5
  %open_flags72 = alloca i32, align 4, !ctir !5
  %dangling_link_sb = alloca %struct.stat, align 8, !ctir !335
  %clone_ok = alloca i8, align 1, !ctir !139
  %buf_alignment = alloca i64, align 8, !ctir !52
  %buf_size = alloca i64, align 8, !ctir !52
  %hole_size = alloca i64, align 8, !ctir !52
  %make_holes = alloca i8, align 1, !ctir !139
  %sparse_src = alloca i8, align 1, !ctir !139
  %blcm_max = alloca i64, align 8, !ctir !52
  %blcm = alloca i64, align 8, !ctir !52
  %normal_copy_required = alloca i8, align 1, !ctir !139
  %n_read = alloca i64, align 8, !ctir !292
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !139
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !387
  %tmp = alloca %struct.timespec, align 8
  %tmp271 = alloca %struct.timespec, align 8
  %access_changed = alloca i8, align 1, !ctir !139
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6422, metadata !DIExpression()), !dbg !6423
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6424, metadata !DIExpression()), !dbg !6425
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6426, metadata !DIExpression()), !dbg !6427
  store i32 %dst_mode, i32* %dst_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst_mode.addr, metadata !6428, metadata !DIExpression()), !dbg !6429
  store i32 %omitted_permissions, i32* %omitted_permissions.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions.addr, metadata !6430, metadata !DIExpression()), !dbg !6431
  store i8* %new_dst, i8** %new_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %new_dst.addr, metadata !6432, metadata !DIExpression()), !dbg !6433
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6434, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6436, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.declare(metadata i8** %buf_alloc, metadata !6438, metadata !DIExpression()), !dbg !6439
  store i8* null, i8** %buf_alloc, align 8, !dbg !6439
  call void @llvm.dbg.declare(metadata i8** %name_alloc, metadata !6440, metadata !DIExpression()), !dbg !6441
  store i8* null, i8** %name_alloc, align 8, !dbg !6441
  call void @llvm.dbg.declare(metadata i32* %dest_desc, metadata !6442, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.declare(metadata i32* %dest_errno, metadata !6444, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.declare(metadata i32* %source_desc, metadata !6446, metadata !DIExpression()), !dbg !6447
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !6448, metadata !DIExpression()), !dbg !6449
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6450
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !6451, !ctir !389
  %1 = load i32, i32* %st_mode, align 8, !dbg !6451, !ctir !165
  store i32 %1, i32* %src_mode, align 4, !dbg !6449
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !6452, metadata !DIExpression()), !dbg !6453
  call void @llvm.dbg.declare(metadata %struct.stat* %src_open_sb, metadata !6454, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.declare(metadata i8* %return_val, metadata !6456, metadata !DIExpression()), !dbg !6457
  store i8 1, i8* %return_val, align 1, !dbg !6457
  call void @llvm.dbg.declare(metadata i8* %data_copy_required, metadata !6458, metadata !DIExpression()), !dbg !6459
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6460
  %data_copy_required1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !6461, !ctir !3752
  %3 = load i8, i8* %data_copy_required1, align 1, !dbg !6461
  %tobool = trunc i8 %3 to i1, !dbg !6461, !ctir !139
  %frombool = zext i1 %tobool to i8, !dbg !6459
  store i8 %frombool, i8* %data_copy_required, align 1, !dbg !6459
  %4 = load i8*, i8** %src_name.addr, align 8, !dbg !6462
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6463
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 1, !dbg !6464, !ctir !3752
  %6 = load i32, i32* %dereference, align 4, !dbg !6464, !ctir !73
  %cmp = icmp eq i32 %6, 2, !dbg !6465
  %7 = zext i1 %cmp to i64, !dbg !6463
  %cond = select i1 %cmp, i32 131072, i32 0, !dbg !6463
  %or = or i32 0, %cond, !dbg !6466
  %call = call i32 (i8*, i32, ...) @open_safer(i8* %4, i32 %or), !dbg !6467
  store i32 %call, i32* %source_desc, align 4, !dbg !6468
  %8 = load i32, i32* %source_desc, align 4, !dbg !6469
  %cmp2 = icmp slt i32 %8, 0, !dbg !6471
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6472

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #15, !dbg !6473
  %9 = load i32, i32* %call3, align 4, !dbg !6473, !ctir !5
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60.138, i64 0, i64 0)) #12, !dbg !6475
  %10 = load i8*, i8** %src_name.addr, align 8, !dbg !6476
  %call5 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !6476
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call4, i8* %call5), !dbg !6477
  store i1 false, i1* %retval, align 1, !dbg !6478
  br label %return, !dbg !6478

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %source_desc, align 4, !dbg !6479
  %call6 = call i32 @fstat(i32 %11, %struct.stat* %src_open_sb) #12, !dbg !6481
  %cmp7 = icmp ne i32 %call6, 0, !dbg !6482
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !6483

if.then8:                                         ; preds = %if.end
  %call9 = call i32* @__errno_location() #15, !dbg !6484
  %12 = load i32, i32* %call9, align 4, !dbg !6484, !ctir !5
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.139, i64 0, i64 0)) #12, !dbg !6486
  %13 = load i8*, i8** %src_name.addr, align 8, !dbg !6487
  %call11 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6487
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call10, i8* %call11), !dbg !6488
  store i8 0, i8* %return_val, align 1, !dbg !6489
  br label %close_src_desc, !dbg !6490

if.end12:                                         ; preds = %if.end
  %14 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6491
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 1, !dbg !6491, !ctir !389
  %15 = load i64, i64* %st_ino, align 8, !dbg !6491, !ctir !257
  %st_ino13 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 1, !dbg !6491, !ctir !335
  %16 = load i64, i64* %st_ino13, align 8, !dbg !6491, !ctir !257
  %cmp14 = icmp eq i64 %15, %16, !dbg !6491
  br i1 %cmp14, label %land.lhs.true, label %if.then17, !dbg !6491

land.lhs.true:                                    ; preds = %if.end12
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6491
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !6491, !ctir !389
  %18 = load i64, i64* %st_dev, align 8, !dbg !6491, !ctir !260
  %st_dev15 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 0, !dbg !6491, !ctir !335
  %19 = load i64, i64* %st_dev15, align 8, !dbg !6491, !ctir !260
  %cmp16 = icmp eq i64 %18, %19, !dbg !6491
  br i1 %cmp16, label %if.end20, label %if.then17, !dbg !6493

if.then17:                                        ; preds = %land.lhs.true, %if.end12
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.62.140, i64 0, i64 0)) #12, !dbg !6494
  %20 = load i8*, i8** %src_name.addr, align 8, !dbg !6496
  %call19 = call i8* @quotearg_style(i32 4, i8* %20), !dbg !6496
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call18, i8* %call19), !dbg !6497
  store i8 0, i8* %return_val, align 1, !dbg !6498
  br label %close_src_desc, !dbg !6499

if.end20:                                         ; preds = %land.lhs.true
  %21 = load i8*, i8** %new_dst.addr, align 8, !dbg !6500
  %22 = load i8, i8* %21, align 1, !dbg !6502
  %tobool21 = trunc i8 %22 to i1, !dbg !6502, !ctir !139
  br i1 %tobool21, label %if.end69, label %if.then22, !dbg !6503

if.then22:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !6504, metadata !DIExpression()), !dbg !6506
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6507
  %data_copy_required23 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 20, !dbg !6508, !ctir !3752
  %24 = load i8, i8* %data_copy_required23, align 1, !dbg !6508
  %tobool24 = trunc i8 %24 to i1, !dbg !6508, !ctir !139
  %25 = zext i1 %tobool24 to i64, !dbg !6507
  %cond25 = select i1 %tobool24, i32 512, i32 0, !dbg !6507
  %or26 = or i32 1, %cond25, !dbg !6509
  store i32 %or26, i32* %open_flags, align 4, !dbg !6506
  %26 = load i8*, i8** %dst_name.addr, align 8, !dbg !6510
  %27 = load i32, i32* %open_flags, align 4, !dbg !6511
  %call27 = call i32 (i8*, i32, ...) @open_safer(i8* %26, i32 %27), !dbg !6512
  store i32 %call27, i32* %dest_desc, align 4, !dbg !6513
  %call28 = call i32* @__errno_location() #15, !dbg !6514
  %28 = load i32, i32* %call28, align 4, !dbg !6514, !ctir !5
  store i32 %28, i32* %dest_errno, align 4, !dbg !6515
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6516
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !6518, !ctir !3752
  %30 = load i8, i8* %set_security_context, align 1, !dbg !6518
  %tobool29 = trunc i8 %30 to i1, !dbg !6518, !ctir !139
  br i1 %tobool29, label %land.lhs.true31, label %lor.lhs.false, !dbg !6519

lor.lhs.false:                                    ; preds = %if.then22
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6520
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 22, !dbg !6521, !ctir !3752
  %32 = load i8, i8* %preserve_security_context, align 1, !dbg !6521
  %tobool30 = trunc i8 %32 to i1, !dbg !6521, !ctir !139
  br i1 %tobool30, label %land.lhs.true31, label %if.end42, !dbg !6522

land.lhs.true31:                                  ; preds = %lor.lhs.false, %if.then22
  %33 = load i32, i32* %dest_desc, align 4, !dbg !6523
  %cmp32 = icmp sle i32 0, %33, !dbg !6524
  br i1 %cmp32, label %if.then33, label %if.end42, !dbg !6525

if.then33:                                        ; preds = %land.lhs.true31
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !6526
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6529
  %preserve_security_context34 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 22, !dbg !6530, !ctir !3752
  %36 = load i8, i8* %preserve_security_context34, align 1, !dbg !6530
  %tobool35 = trunc i8 %36 to i1, !dbg !6530, !ctir !139
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6531
  %call36 = call zeroext i1 @set_file_security_ctx(i8* %34, i1 zeroext %tobool35, i1 zeroext false, %struct.cp_options* %37), !dbg !6532
  br i1 %call36, label %if.end41, label %if.then37, !dbg !6533

if.then37:                                        ; preds = %if.then33
  %38 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6534
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %38, i32 0, i32 23, !dbg !6537, !ctir !3752
  %39 = load i8, i8* %require_preserve_context, align 2, !dbg !6537
  %tobool38 = trunc i8 %39 to i1, !dbg !6537, !ctir !139
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6538

if.then39:                                        ; preds = %if.then37
  store i8 0, i8* %return_val, align 1, !dbg !6539
  br label %close_src_and_dst_desc, !dbg !6541

if.end40:                                         ; preds = %if.then37
  br label %if.end41, !dbg !6542

if.end41:                                         ; preds = %if.end40, %if.then33
  br label %if.end42, !dbg !6543

if.end42:                                         ; preds = %if.end41, %land.lhs.true31, %lor.lhs.false
  %40 = load i32, i32* %dest_desc, align 4, !dbg !6544
  %cmp43 = icmp slt i32 %40, 0, !dbg !6546
  br i1 %cmp43, label %land.lhs.true44, label %if.end68, !dbg !6547

land.lhs.true44:                                  ; preds = %if.end42
  %41 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6548
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %41, i32 0, i32 7, !dbg !6549, !ctir !3752
  %42 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6549
  %tobool45 = trunc i8 %42 to i1, !dbg !6549, !ctir !139
  br i1 %tobool45, label %if.then46, label %if.end68, !dbg !6550

if.then46:                                        ; preds = %land.lhs.true44
  %43 = load i8*, i8** %dst_name.addr, align 8, !dbg !6551
  %call47 = call i32 @unlink(i8* %43) #12, !dbg !6554
  %cmp48 = icmp ne i32 %call47, 0, !dbg !6555
  br i1 %cmp48, label %if.then49, label %if.end53, !dbg !6556

if.then49:                                        ; preds = %if.then46
  %call50 = call i32* @__errno_location() #15, !dbg !6557
  %44 = load i32, i32* %call50, align 4, !dbg !6557, !ctir !5
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.110, i64 0, i64 0)) #12, !dbg !6559
  %45 = load i8*, i8** %dst_name.addr, align 8, !dbg !6560
  %call52 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !6560
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %44, i8* %call51, i8* %call52), !dbg !6561
  store i8 0, i8* %return_val, align 1, !dbg !6562
  br label %close_src_desc, !dbg !6563

if.end53:                                         ; preds = %if.then46
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6564
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 31, !dbg !6566, !ctir !3752
  %47 = load i8, i8* %verbose, align 2, !dbg !6566
  %tobool54 = trunc i8 %47 to i1, !dbg !6566, !ctir !139
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !6567

if.then55:                                        ; preds = %if.end53
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #12, !dbg !6568
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !6569
  %call57 = call i8* @quotearg_style(i32 4, i8* %48), !dbg !6569
  %call58 = call i32 (i8*, ...) @printf(i8* %call56, i8* %call57), !dbg !6570
  br label %if.end59, !dbg !6570

if.end59:                                         ; preds = %if.then55, %if.end53
  %49 = load i8*, i8** %new_dst.addr, align 8, !dbg !6571
  store i8 1, i8* %49, align 1, !dbg !6572, !ctir !139
  %50 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6573
  %set_security_context60 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %50, i32 0, i32 18, !dbg !6575, !ctir !3752
  %51 = load i8, i8* %set_security_context60, align 1, !dbg !6575
  %tobool61 = trunc i8 %51 to i1, !dbg !6575, !ctir !139
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !6576

if.then62:                                        ; preds = %if.end59
  %52 = load i8*, i8** %src_name.addr, align 8, !dbg !6577
  %53 = load i8*, i8** %dst_name.addr, align 8, !dbg !6580
  %54 = load i32, i32* %dst_mode.addr, align 4, !dbg !6581
  %55 = load i8*, i8** %new_dst.addr, align 8, !dbg !6582
  %56 = load i8, i8* %55, align 1, !dbg !6583
  %tobool63 = trunc i8 %56 to i1, !dbg !6583, !ctir !139
  %57 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6584
  %call64 = call zeroext i1 @set_process_security_ctx(i8* %52, i8* %53, i32 %54, i1 zeroext %tobool63, %struct.cp_options* %57), !dbg !6585
  br i1 %call64, label %if.end66, label %if.then65, !dbg !6586

if.then65:                                        ; preds = %if.then62
  store i8 0, i8* %return_val, align 1, !dbg !6587
  br label %close_src_desc, !dbg !6589

if.end66:                                         ; preds = %if.then62
  br label %if.end67, !dbg !6590

if.end67:                                         ; preds = %if.end66, %if.end59
  br label %if.end68, !dbg !6591

if.end68:                                         ; preds = %if.end67, %land.lhs.true44, %if.end42
  br label %if.end69, !dbg !6592

if.end69:                                         ; preds = %if.end68, %if.end20
  %58 = load i8*, i8** %new_dst.addr, align 8, !dbg !6593
  %59 = load i8, i8* %58, align 1, !dbg !6595
  %tobool70 = trunc i8 %59 to i1, !dbg !6595, !ctir !139
  br i1 %tobool70, label %if.then71, label %if.else112, !dbg !6596

if.then71:                                        ; preds = %if.end69
  br label %open_with_O_CREAT, !dbg !6597

open_with_O_CREAT:                                ; preds = %if.then124, %if.then71
  call void @llvm.dbg.label(metadata !6598), !dbg !6600
  call void @llvm.dbg.declare(metadata i32* %open_flags72, metadata !6601, metadata !DIExpression()), !dbg !6602
  store i32 65, i32* %open_flags72, align 4, !dbg !6602
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !6603
  %61 = load i32, i32* %open_flags72, align 4, !dbg !6604
  %or73 = or i32 %61, 128, !dbg !6605
  %62 = load i32, i32* %dst_mode.addr, align 4, !dbg !6606
  %63 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6607
  %neg = xor i32 %63, -1, !dbg !6608
  %and = and i32 %62, %neg, !dbg !6609
  %call74 = call i32 (i8*, i32, ...) @open_safer(i8* %60, i32 %or73, i32 %and), !dbg !6610
  store i32 %call74, i32* %dest_desc, align 4, !dbg !6611
  %call75 = call i32* @__errno_location() #15, !dbg !6612
  %64 = load i32, i32* %call75, align 4, !dbg !6612, !ctir !5
  store i32 %64, i32* %dest_errno, align 4, !dbg !6613
  %65 = load i32, i32* %dest_desc, align 4, !dbg !6614
  %cmp76 = icmp slt i32 %65, 0, !dbg !6616
  br i1 %cmp76, label %land.lhs.true77, label %if.end99, !dbg !6617

land.lhs.true77:                                  ; preds = %open_with_O_CREAT
  %66 = load i32, i32* %dest_errno, align 4, !dbg !6618
  %cmp78 = icmp eq i32 %66, 17, !dbg !6619
  br i1 %cmp78, label %land.lhs.true79, label %if.end99, !dbg !6620

land.lhs.true79:                                  ; preds = %land.lhs.true77
  %67 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6621
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 9, !dbg !6622, !ctir !3752
  %68 = load i8, i8* %move_mode, align 8, !dbg !6622
  %tobool80 = trunc i8 %68 to i1, !dbg !6622, !ctir !139
  br i1 %tobool80, label %if.end99, label %if.then81, !dbg !6623

if.then81:                                        ; preds = %land.lhs.true79
  call void @llvm.dbg.declare(metadata %struct.stat* %dangling_link_sb, metadata !6624, metadata !DIExpression()), !dbg !6626
  %69 = load i8*, i8** %dst_name.addr, align 8, !dbg !6627
  %call82 = call i32 @lstat(i8* %69, %struct.stat* %dangling_link_sb) #12, !dbg !6629
  %cmp83 = icmp eq i32 %call82, 0, !dbg !6630
  br i1 %cmp83, label %land.lhs.true84, label %if.end98, !dbg !6631

land.lhs.true84:                                  ; preds = %if.then81
  %st_mode85 = getelementptr inbounds %struct.stat, %struct.stat* %dangling_link_sb, i32 0, i32 3, !dbg !6632, !ctir !335
  %70 = load i32, i32* %st_mode85, align 8, !dbg !6632, !ctir !165
  %and86 = and i32 %70, 61440, !dbg !6632
  %cmp87 = icmp eq i32 %and86, 40960, !dbg !6632
  br i1 %cmp87, label %if.then88, label %if.end98, !dbg !6633

if.then88:                                        ; preds = %land.lhs.true84
  %71 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6634
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %71, i32 0, i32 33, !dbg !6637, !ctir !3752
  %72 = load i8, i8* %open_dangling_dest_symlink, align 8, !dbg !6637
  %tobool89 = trunc i8 %72 to i1, !dbg !6637, !ctir !139
  br i1 %tobool89, label %if.then90, label %if.else, !dbg !6638

if.then90:                                        ; preds = %if.then88
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !6639
  %74 = load i32, i32* %open_flags72, align 4, !dbg !6641
  %75 = load i32, i32* %dst_mode.addr, align 4, !dbg !6642
  %76 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6643
  %neg91 = xor i32 %76, -1, !dbg !6644
  %and92 = and i32 %75, %neg91, !dbg !6645
  %call93 = call i32 (i8*, i32, ...) @open_safer(i8* %73, i32 %74, i32 %and92), !dbg !6646
  store i32 %call93, i32* %dest_desc, align 4, !dbg !6647
  %call94 = call i32* @__errno_location() #15, !dbg !6648
  %77 = load i32, i32* %call94, align 4, !dbg !6648, !ctir !5
  store i32 %77, i32* %dest_errno, align 4, !dbg !6649
  br label %if.end97, !dbg !6650

if.else:                                          ; preds = %if.then88
  %call95 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63, i64 0, i64 0)) #12, !dbg !6651
  %78 = load i8*, i8** %dst_name.addr, align 8, !dbg !6653
  %call96 = call i8* @quotearg_style(i32 4, i8* %78), !dbg !6653
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call95, i8* %call96), !dbg !6654
  store i8 0, i8* %return_val, align 1, !dbg !6655
  br label %close_src_desc, !dbg !6656

if.end97:                                         ; preds = %if.then90
  br label %if.end98, !dbg !6657

if.end98:                                         ; preds = %if.end97, %land.lhs.true84, %if.then81
  br label %if.end99, !dbg !6658

if.end99:                                         ; preds = %if.end98, %land.lhs.true79, %land.lhs.true77, %open_with_O_CREAT
  %79 = load i32, i32* %dest_desc, align 4, !dbg !6659
  %cmp100 = icmp slt i32 %79, 0, !dbg !6661
  br i1 %cmp100, label %land.lhs.true101, label %if.end111, !dbg !6662

land.lhs.true101:                                 ; preds = %if.end99
  %80 = load i32, i32* %dest_errno, align 4, !dbg !6663
  %cmp102 = icmp eq i32 %80, 21, !dbg !6664
  br i1 %cmp102, label %land.lhs.true103, label %if.end111, !dbg !6665

land.lhs.true103:                                 ; preds = %land.lhs.true101
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !6666
  %82 = load i8, i8* %81, align 1, !dbg !6667, !ctir !114
  %conv = sext i8 %82 to i32, !dbg !6667
  %tobool104 = icmp ne i32 %conv, 0, !dbg !6667
  br i1 %tobool104, label %land.lhs.true105, label %if.end111, !dbg !6668

land.lhs.true105:                                 ; preds = %land.lhs.true103
  %83 = load i8*, i8** %dst_name.addr, align 8, !dbg !6669
  %84 = load i8*, i8** %dst_name.addr, align 8, !dbg !6670
  %call106 = call i64 @strlen(i8* %84) #14, !dbg !6671
  %sub = sub i64 %call106, 1, !dbg !6672
  %arrayidx = getelementptr inbounds i8, i8* %83, i64 %sub, !dbg !6669, !ctir !113
  %85 = load i8, i8* %arrayidx, align 1, !dbg !6669
  %conv107 = sext i8 %85 to i32, !dbg !6669
  %cmp108 = icmp eq i32 %conv107, 47, !dbg !6673
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !6674

if.then110:                                       ; preds = %land.lhs.true105
  store i32 20, i32* %dest_errno, align 4, !dbg !6675
  br label %if.end111, !dbg !6676

if.end111:                                        ; preds = %if.then110, %land.lhs.true105, %land.lhs.true103, %land.lhs.true101, %if.end99
  br label %if.end113, !dbg !6677

if.else112:                                       ; preds = %if.end69
  store i32 0, i32* %omitted_permissions.addr, align 4, !dbg !6678
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.end111
  %86 = load i32, i32* %dest_desc, align 4, !dbg !6680
  %cmp114 = icmp slt i32 %86, 0, !dbg !6682
  br i1 %cmp114, label %if.then116, label %if.end128, !dbg !6683

if.then116:                                       ; preds = %if.end113
  %87 = load i32, i32* %dest_errno, align 4, !dbg !6684
  %cmp117 = icmp eq i32 %87, 2, !dbg !6687
  br i1 %cmp117, label %land.lhs.true119, label %if.end125, !dbg !6688

land.lhs.true119:                                 ; preds = %if.then116
  %88 = load i8*, i8** %new_dst.addr, align 8, !dbg !6689
  %89 = load i8, i8* %88, align 1, !dbg !6690
  %tobool120 = trunc i8 %89 to i1, !dbg !6690, !ctir !139
  br i1 %tobool120, label %if.end125, label %land.lhs.true121, !dbg !6691

land.lhs.true121:                                 ; preds = %land.lhs.true119
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6692
  %move_mode122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 9, !dbg !6693, !ctir !3752
  %91 = load i8, i8* %move_mode122, align 8, !dbg !6693
  %tobool123 = trunc i8 %91 to i1, !dbg !6693, !ctir !139
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !6694

if.then124:                                       ; preds = %land.lhs.true121
  %92 = load i8*, i8** %new_dst.addr, align 8, !dbg !6695
  store i8 1, i8* %92, align 1, !dbg !6697, !ctir !139
  br label %open_with_O_CREAT, !dbg !6698

if.end125:                                        ; preds = %land.lhs.true121, %land.lhs.true119, %if.then116
  %93 = load i32, i32* %dest_errno, align 4, !dbg !6699
  %call126 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i64 0, i64 0)) #12, !dbg !6700
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !6701
  %call127 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !6701
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call126, i8* %call127), !dbg !6702
  store i8 0, i8* %return_val, align 1, !dbg !6703
  br label %close_src_desc, !dbg !6704

if.end128:                                        ; preds = %if.end113
  %95 = load i32, i32* %dest_desc, align 4, !dbg !6705
  %call129 = call i32 @fstat(i32 %95, %struct.stat* %sb) #12, !dbg !6707
  %cmp130 = icmp ne i32 %call129, 0, !dbg !6708
  br i1 %cmp130, label %if.then132, label %if.end136, !dbg !6709

if.then132:                                       ; preds = %if.end128
  %call133 = call i32* @__errno_location() #15, !dbg !6710
  %96 = load i32, i32* %call133, align 4, !dbg !6710, !ctir !5
  %call134 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.139, i64 0, i64 0)) #12, !dbg !6712
  %97 = load i8*, i8** %dst_name.addr, align 8, !dbg !6713
  %call135 = call i8* @quotearg_style(i32 4, i8* %97), !dbg !6713
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %96, i8* %call134, i8* %call135), !dbg !6714
  store i8 0, i8* %return_val, align 1, !dbg !6715
  br label %close_src_and_dst_desc, !dbg !6716

if.end136:                                        ; preds = %if.end128
  %98 = load i8, i8* %data_copy_required, align 1, !dbg !6717
  %tobool137 = trunc i8 %98 to i1, !dbg !6717
  br i1 %tobool137, label %land.lhs.true139, label %if.end161, !dbg !6719

land.lhs.true139:                                 ; preds = %if.end136
  %99 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6720
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %99, i32 0, i32 36, !dbg !6721, !ctir !3752
  %100 = load i32, i32* %reflink_mode, align 8, !dbg !6721, !ctir !92
  %tobool140 = icmp ne i32 %100, 0, !dbg !6720
  br i1 %tobool140, label %if.then141, label %if.end161, !dbg !6722

if.then141:                                       ; preds = %land.lhs.true139
  call void @llvm.dbg.declare(metadata i8* %clone_ok, metadata !6723, metadata !DIExpression()), !dbg !6725
  %101 = load i32, i32* %dest_desc, align 4, !dbg !6726
  %102 = load i32, i32* %source_desc, align 4, !dbg !6727
  %call142 = call i32 @clone_file(i32 %101, i32 %102), !dbg !6728
  %cmp143 = icmp eq i32 %call142, 0, !dbg !6729
  %frombool145 = zext i1 %cmp143 to i8, !dbg !6725
  store i8 %frombool145, i8* %clone_ok, align 1, !dbg !6725
  %103 = load i8, i8* %clone_ok, align 1, !dbg !6730
  %tobool146 = trunc i8 %103 to i1, !dbg !6730
  br i1 %tobool146, label %if.then152, label %lor.lhs.false148, !dbg !6732

lor.lhs.false148:                                 ; preds = %if.then141
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6733
  %reflink_mode149 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 36, !dbg !6734, !ctir !3752
  %105 = load i32, i32* %reflink_mode149, align 8, !dbg !6734, !ctir !92
  %cmp150 = icmp eq i32 %105, 2, !dbg !6735
  br i1 %cmp150, label %if.then152, label %if.end160, !dbg !6736

if.then152:                                       ; preds = %lor.lhs.false148, %if.then141
  %106 = load i8, i8* %clone_ok, align 1, !dbg !6737
  %tobool153 = trunc i8 %106 to i1, !dbg !6737
  br i1 %tobool153, label %if.end159, label %if.then154, !dbg !6740

if.then154:                                       ; preds = %if.then152
  %call155 = call i32* @__errno_location() #15, !dbg !6741
  %107 = load i32, i32* %call155, align 4, !dbg !6741, !ctir !5
  %call156 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !6743
  %108 = load i8*, i8** %dst_name.addr, align 8, !dbg !6744
  %call157 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %108), !dbg !6744
  %109 = load i8*, i8** %src_name.addr, align 8, !dbg !6745
  %call158 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %109), !dbg !6745
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %107, i8* %call156, i8* %call157, i8* %call158), !dbg !6746
  store i8 0, i8* %return_val, align 1, !dbg !6747
  br label %close_src_and_dst_desc, !dbg !6748

if.end159:                                        ; preds = %if.then152
  store i8 0, i8* %data_copy_required, align 1, !dbg !6749
  br label %if.end160, !dbg !6750

if.end160:                                        ; preds = %if.end159, %lor.lhs.false148
  br label %if.end161, !dbg !6751

if.end161:                                        ; preds = %if.end160, %land.lhs.true139, %if.end136
  %110 = load i8, i8* %data_copy_required, align 1, !dbg !6752
  %tobool162 = trunc i8 %110 to i1, !dbg !6752
  br i1 %tobool162, label %if.then163, label %if.end265, !dbg !6754

if.then163:                                       ; preds = %if.end161
  call void @llvm.dbg.declare(metadata i64* %buf_alignment, metadata !6755, metadata !DIExpression()), !dbg !6757
  %call164 = call i32 @getpagesize() #15, !dbg !6758
  %conv165 = sext i32 %call164 to i64, !dbg !6758
  store i64 %conv165, i64* %buf_alignment, align 8, !dbg !6757
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !6759, metadata !DIExpression()), !dbg !6760
  %call166 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb), !dbg !6761
  store i64 %call166, i64* %buf_size, align 8, !dbg !6760
  call void @llvm.dbg.declare(metadata i64* %hole_size, metadata !6762, metadata !DIExpression()), !dbg !6763
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !6764, !ctir !335
  %111 = load i64, i64* %st_blksize, align 8, !dbg !6764, !ctir !350
  %cmp167 = icmp slt i64 0, %111, !dbg !6764
  br i1 %cmp167, label %land.lhs.true169, label %cond.false, !dbg !6764

land.lhs.true169:                                 ; preds = %if.then163
  %st_blksize170 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !6764, !ctir !335
  %112 = load i64, i64* %st_blksize170, align 8, !dbg !6764, !ctir !350
  %cmp171 = icmp ule i64 %112, 2305843009213693952, !dbg !6764
  br i1 %cmp171, label %cond.true, label %cond.false, !dbg !6764

cond.true:                                        ; preds = %land.lhs.true169
  %st_blksize173 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !6764, !ctir !335
  %113 = load i64, i64* %st_blksize173, align 8, !dbg !6764, !ctir !350
  br label %cond.end, !dbg !6764

cond.false:                                       ; preds = %land.lhs.true169, %if.then163
  br label %cond.end, !dbg !6764

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond174 = phi i64 [ %113, %cond.true ], [ 512, %cond.false ], !dbg !6764
  store i64 %cond174, i64* %hole_size, align 8, !dbg !6763
  %114 = load i32, i32* %source_desc, align 4, !dbg !6765
  call void @fdadvise(i32 %114, i64 0, i64 0, i32 2), !dbg !6766
  call void @llvm.dbg.declare(metadata i8* %make_holes, metadata !6767, metadata !DIExpression()), !dbg !6768
  store i8 0, i8* %make_holes, align 1, !dbg !6768
  call void @llvm.dbg.declare(metadata i8* %sparse_src, metadata !6769, metadata !DIExpression()), !dbg !6770
  %call175 = call zeroext i1 @is_probably_sparse(%struct.stat* %src_open_sb), !dbg !6771
  %frombool176 = zext i1 %call175 to i8, !dbg !6770
  store i8 %frombool176, i8* %sparse_src, align 1, !dbg !6770
  %st_mode177 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !6772, !ctir !335
  %115 = load i32, i32* %st_mode177, align 8, !dbg !6772, !ctir !165
  %and178 = and i32 %115, 61440, !dbg !6772
  %cmp179 = icmp eq i32 %and178, 32768, !dbg !6772
  br i1 %cmp179, label %if.then181, label %if.end194, !dbg !6774

if.then181:                                       ; preds = %cond.end
  %116 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6775
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %116, i32 0, i32 3, !dbg !6778, !ctir !3752
  %117 = load i32, i32* %sparse_mode, align 4, !dbg !6778, !ctir !86
  %cmp182 = icmp eq i32 %117, 3, !dbg !6779
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !6780

if.then184:                                       ; preds = %if.then181
  store i8 1, i8* %make_holes, align 1, !dbg !6781
  br label %if.end185, !dbg !6782

if.end185:                                        ; preds = %if.then184, %if.then181
  %118 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6783
  %sparse_mode186 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %118, i32 0, i32 3, !dbg !6785, !ctir !3752
  %119 = load i32, i32* %sparse_mode186, align 4, !dbg !6785, !ctir !86
  %cmp187 = icmp eq i32 %119, 2, !dbg !6786
  br i1 %cmp187, label %land.lhs.true189, label %if.end193, !dbg !6787

land.lhs.true189:                                 ; preds = %if.end185
  %120 = load i8, i8* %sparse_src, align 1, !dbg !6788
  %tobool190 = trunc i8 %120 to i1, !dbg !6788
  br i1 %tobool190, label %if.then192, label %if.end193, !dbg !6789

if.then192:                                       ; preds = %land.lhs.true189
  store i8 1, i8* %make_holes, align 1, !dbg !6790
  br label %if.end193, !dbg !6791

if.end193:                                        ; preds = %if.then192, %land.lhs.true189, %if.end185
  br label %if.end194, !dbg !6792

if.end194:                                        ; preds = %if.end193, %cond.end
  %121 = load i8, i8* %make_holes, align 1, !dbg !6793
  %tobool195 = trunc i8 %121 to i1, !dbg !6793
  br i1 %tobool195, label %if.end220, label %if.then196, !dbg !6795

if.then196:                                       ; preds = %if.end194
  call void @llvm.dbg.declare(metadata i64* %blcm_max, metadata !6796, metadata !DIExpression()), !dbg !6798
  %122 = load i64, i64* %buf_alignment, align 8, !dbg !6799
  %sub197 = sub i64 9223372036854775807, %122, !dbg !6800
  store i64 %sub197, i64* %blcm_max, align 8, !dbg !6798
  call void @llvm.dbg.declare(metadata i64* %blcm, metadata !6801, metadata !DIExpression()), !dbg !6802
  %call198 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %src_open_sb), !dbg !6803
  %123 = load i64, i64* %buf_size, align 8, !dbg !6804
  %124 = load i64, i64* %blcm_max, align 8, !dbg !6805
  %call199 = call i64 @buffer_lcm(i64 %call198, i64 %123, i64 %124) #15, !dbg !6806
  store i64 %call199, i64* %blcm, align 8, !dbg !6802
  %st_mode200 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 3, !dbg !6807, !ctir !335
  %125 = load i32, i32* %st_mode200, align 8, !dbg !6807, !ctir !165
  %and201 = and i32 %125, 61440, !dbg !6807
  %cmp202 = icmp eq i32 %and201, 32768, !dbg !6807
  br i1 %cmp202, label %land.lhs.true204, label %if.end209, !dbg !6809

land.lhs.true204:                                 ; preds = %if.then196
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !6810, !ctir !335
  %126 = load i64, i64* %st_size, align 8, !dbg !6810, !ctir !30
  %127 = load i64, i64* %buf_size, align 8, !dbg !6811
  %cmp205 = icmp ult i64 %126, %127, !dbg !6812
  br i1 %cmp205, label %if.then207, label %if.end209, !dbg !6813

if.then207:                                       ; preds = %land.lhs.true204
  %st_size208 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !6814, !ctir !335
  %128 = load i64, i64* %st_size208, align 8, !dbg !6814, !ctir !30
  %add = add nsw i64 %128, 1, !dbg !6815
  store i64 %add, i64* %buf_size, align 8, !dbg !6816
  br label %if.end209, !dbg !6817

if.end209:                                        ; preds = %if.then207, %land.lhs.true204, %if.then196
  %129 = load i64, i64* %blcm, align 8, !dbg !6818
  %sub210 = sub i64 %129, 1, !dbg !6819
  %130 = load i64, i64* %buf_size, align 8, !dbg !6820
  %add211 = add i64 %130, %sub210, !dbg !6820
  store i64 %add211, i64* %buf_size, align 8, !dbg !6820
  %131 = load i64, i64* %buf_size, align 8, !dbg !6821
  %132 = load i64, i64* %blcm, align 8, !dbg !6822
  %rem = urem i64 %131, %132, !dbg !6823
  %133 = load i64, i64* %buf_size, align 8, !dbg !6824
  %sub212 = sub i64 %133, %rem, !dbg !6824
  store i64 %sub212, i64* %buf_size, align 8, !dbg !6824
  %134 = load i64, i64* %buf_size, align 8, !dbg !6825
  %cmp213 = icmp eq i64 %134, 0, !dbg !6827
  br i1 %cmp213, label %if.then218, label %lor.lhs.false215, !dbg !6828

lor.lhs.false215:                                 ; preds = %if.end209
  %135 = load i64, i64* %blcm_max, align 8, !dbg !6829
  %136 = load i64, i64* %buf_size, align 8, !dbg !6830
  %cmp216 = icmp ult i64 %135, %136, !dbg !6831
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !6832

if.then218:                                       ; preds = %lor.lhs.false215, %if.end209
  %137 = load i64, i64* %blcm, align 8, !dbg !6833
  store i64 %137, i64* %buf_size, align 8, !dbg !6834
  br label %if.end219, !dbg !6835

if.end219:                                        ; preds = %if.then218, %lor.lhs.false215
  br label %if.end220, !dbg !6836

if.end220:                                        ; preds = %if.end219, %if.end194
  %138 = load i64, i64* %buf_size, align 8, !dbg !6837
  %139 = load i64, i64* %buf_alignment, align 8, !dbg !6838
  %add221 = add i64 %138, %139, !dbg !6839
  %call222 = call noalias i8* @xmalloc(i64 %add221), !dbg !6840
  store i8* %call222, i8** %buf_alloc, align 8, !dbg !6841
  %140 = load i8*, i8** %buf_alloc, align 8, !dbg !6842
  %141 = load i64, i64* %buf_alignment, align 8, !dbg !6843
  %call223 = call i8* @ptr_align(i8* %140, i64 %141), !dbg !6844
  store i8* %call223, i8** %buf, align 8, !dbg !6845
  %142 = load i8, i8* %sparse_src, align 1, !dbg !6846
  %tobool224 = trunc i8 %142 to i1, !dbg !6846
  br i1 %tobool224, label %if.then225, label %if.end240, !dbg !6848

if.then225:                                       ; preds = %if.end220
  call void @llvm.dbg.declare(metadata i8* %normal_copy_required, metadata !6849, metadata !DIExpression()), !dbg !6851
  %143 = load i32, i32* %source_desc, align 4, !dbg !6852
  %144 = load i32, i32* %dest_desc, align 4, !dbg !6854
  %145 = load i8*, i8** %buf, align 8, !dbg !6855
  %146 = load i64, i64* %buf_size, align 8, !dbg !6856
  %147 = load i64, i64* %hole_size, align 8, !dbg !6857
  %st_size226 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !6858, !ctir !335
  %148 = load i64, i64* %st_size226, align 8, !dbg !6858, !ctir !30
  %149 = load i8, i8* %make_holes, align 1, !dbg !6859
  %tobool227 = trunc i8 %149 to i1, !dbg !6859
  br i1 %tobool227, label %cond.true229, label %cond.false231, !dbg !6859

cond.true229:                                     ; preds = %if.then225
  %150 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6860
  %sparse_mode230 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %150, i32 0, i32 3, !dbg !6861, !ctir !3752
  %151 = load i32, i32* %sparse_mode230, align 4, !dbg !6861, !ctir !86
  br label %cond.end232, !dbg !6859

cond.false231:                                    ; preds = %if.then225
  br label %cond.end232, !dbg !6859

cond.end232:                                      ; preds = %cond.false231, %cond.true229
  %cond233 = phi i32 [ %151, %cond.true229 ], [ 1, %cond.false231 ], !dbg !6859
  %152 = load i8*, i8** %src_name.addr, align 8, !dbg !6862
  %153 = load i8*, i8** %dst_name.addr, align 8, !dbg !6863
  %call234 = call zeroext i1 @extent_copy(i32 %143, i32 %144, i8* %145, i64 %146, i64 %147, i64 %148, i32 %cond233, i8* %152, i8* %153, i8* %normal_copy_required), !dbg !6864
  br i1 %call234, label %if.then235, label %if.end236, !dbg !6865

if.then235:                                       ; preds = %cond.end232
  br label %preserve_metadata, !dbg !6866

if.end236:                                        ; preds = %cond.end232
  %154 = load i8, i8* %normal_copy_required, align 1, !dbg !6867
  %tobool237 = trunc i8 %154 to i1, !dbg !6867
  br i1 %tobool237, label %if.end239, label %if.then238, !dbg !6869

if.then238:                                       ; preds = %if.end236
  store i8 0, i8* %return_val, align 1, !dbg !6870
  br label %close_src_and_dst_desc, !dbg !6872

if.end239:                                        ; preds = %if.end236
  br label %if.end240, !dbg !6873

if.end240:                                        ; preds = %if.end239, %if.end220
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !6874, metadata !DIExpression()), !dbg !6875
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !6876, metadata !DIExpression()), !dbg !6877
  %155 = load i32, i32* %source_desc, align 4, !dbg !6878
  %156 = load i32, i32* %dest_desc, align 4, !dbg !6880
  %157 = load i8*, i8** %buf, align 8, !dbg !6881
  %158 = load i64, i64* %buf_size, align 8, !dbg !6882
  %159 = load i8, i8* %make_holes, align 1, !dbg !6883
  %tobool241 = trunc i8 %159 to i1, !dbg !6883
  br i1 %tobool241, label %cond.true243, label %cond.false244, !dbg !6883

cond.true243:                                     ; preds = %if.end240
  %160 = load i64, i64* %hole_size, align 8, !dbg !6884
  br label %cond.end245, !dbg !6883

cond.false244:                                    ; preds = %if.end240
  br label %cond.end245, !dbg !6883

cond.end245:                                      ; preds = %cond.false244, %cond.true243
  %cond246 = phi i64 [ %160, %cond.true243 ], [ 0, %cond.false244 ], !dbg !6883
  %161 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6885
  %sparse_mode247 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %161, i32 0, i32 3, !dbg !6886, !ctir !3752
  %162 = load i32, i32* %sparse_mode247, align 4, !dbg !6886, !ctir !86
  %cmp248 = icmp eq i32 %162, 3, !dbg !6887
  %163 = load i8*, i8** %src_name.addr, align 8, !dbg !6888
  %164 = load i8*, i8** %dst_name.addr, align 8, !dbg !6889
  %call250 = call zeroext i1 @sparse_copy(i32 %155, i32 %156, i8* %157, i64 %158, i64 %cond246, i1 zeroext %cmp248, i8* %163, i8* %164, i64 -1, i64* %n_read, i8* %wrote_hole_at_eof), !dbg !6890
  br i1 %call250, label %if.else252, label %if.then251, !dbg !6891

if.then251:                                       ; preds = %cond.end245
  store i8 0, i8* %return_val, align 1, !dbg !6892
  br label %close_src_and_dst_desc, !dbg !6894

if.else252:                                       ; preds = %cond.end245
  %165 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !6895
  %tobool253 = trunc i8 %165 to i1, !dbg !6895
  br i1 %tobool253, label %land.lhs.true255, label %if.end263, !dbg !6897

land.lhs.true255:                                 ; preds = %if.else252
  %166 = load i32, i32* %dest_desc, align 4, !dbg !6898
  %167 = load i64, i64* %n_read, align 8, !dbg !6899
  %call256 = call i32 @ftruncate(i32 %166, i64 %167) #12, !dbg !6900
  %cmp257 = icmp slt i32 %call256, 0, !dbg !6901
  br i1 %cmp257, label %if.then259, label %if.end263, !dbg !6902

if.then259:                                       ; preds = %land.lhs.true255
  %call260 = call i32* @__errno_location() #15, !dbg !6903
  %168 = load i32, i32* %call260, align 4, !dbg !6903, !ctir !5
  %call261 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i64 0, i64 0)) #12, !dbg !6905
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !6906
  %call262 = call i8* @quotearg_style(i32 4, i8* %169), !dbg !6906
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %168, i8* %call261, i8* %call262), !dbg !6907
  store i8 0, i8* %return_val, align 1, !dbg !6908
  br label %close_src_and_dst_desc, !dbg !6909

if.end263:                                        ; preds = %land.lhs.true255, %if.else252
  br label %if.end264

if.end264:                                        ; preds = %if.end263
  br label %if.end265, !dbg !6910

if.end265:                                        ; preds = %if.end264, %if.end161
  br label %preserve_metadata, !dbg !6752

preserve_metadata:                                ; preds = %if.end265, %if.then235
  call void @llvm.dbg.label(metadata !6911), !dbg !6912
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6913
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 16, !dbg !6915, !ctir !3752
  %171 = load i8, i8* %preserve_timestamps, align 1, !dbg !6915
  %tobool266 = trunc i8 %171 to i1, !dbg !6915, !ctir !139
  br i1 %tobool266, label %if.then267, label %if.end284, !dbg !6916

if.then267:                                       ; preds = %preserve_metadata
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !6917, metadata !DIExpression()), !dbg !6919
  %arrayidx268 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6920, !ctir !387
  %172 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6921
  %call269 = call { i64, i64 } @get_stat_atime(%struct.stat* %172) #14, !dbg !6922
  %173 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !6922
  %174 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 0, !dbg !6922
  %175 = extractvalue { i64, i64 } %call269, 0, !dbg !6922
  store i64 %175, i64* %174, align 8, !dbg !6922
  %176 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 1, !dbg !6922
  %177 = extractvalue { i64, i64 } %call269, 1, !dbg !6922
  store i64 %177, i64* %176, align 8, !dbg !6922
  %178 = bitcast %struct.timespec* %arrayidx268 to i8*, !dbg !6922
  %179 = bitcast %struct.timespec* %tmp to i8*, !dbg !6922
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %178, i8* align 8 %179, i64 16, i1 false), !dbg !6922
  %arrayidx270 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !6923, !ctir !387
  %180 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6924
  %call272 = call { i64, i64 } @get_stat_mtime(%struct.stat* %180) #14, !dbg !6925
  %181 = bitcast %struct.timespec* %tmp271 to { i64, i64 }*, !dbg !6925
  %182 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 0, !dbg !6925
  %183 = extractvalue { i64, i64 } %call272, 0, !dbg !6925
  store i64 %183, i64* %182, align 8, !dbg !6925
  %184 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 1, !dbg !6925
  %185 = extractvalue { i64, i64 } %call272, 1, !dbg !6925
  store i64 %185, i64* %184, align 8, !dbg !6925
  %186 = bitcast %struct.timespec* %arrayidx270 to i8*, !dbg !6925
  %187 = bitcast %struct.timespec* %tmp271 to i8*, !dbg !6925
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %186, i8* align 8 %187, i64 16, i1 false), !dbg !6925
  %188 = load i32, i32* %dest_desc, align 4, !dbg !6926
  %189 = load i8*, i8** %dst_name.addr, align 8, !dbg !6928
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6929, !ctir !387
  %call273 = call i32 @fdutimens(i32 %188, i8* %189, %struct.timespec* %arraydecay), !dbg !6930
  %cmp274 = icmp ne i32 %call273, 0, !dbg !6931
  br i1 %cmp274, label %if.then276, label %if.end283, !dbg !6932

if.then276:                                       ; preds = %if.then267
  %call277 = call i32* @__errno_location() #15, !dbg !6933
  %190 = load i32, i32* %call277, align 4, !dbg !6933, !ctir !5
  %call278 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.134, i64 0, i64 0)) #12, !dbg !6935
  %191 = load i8*, i8** %dst_name.addr, align 8, !dbg !6936
  %call279 = call i8* @quotearg_style(i32 4, i8* %191), !dbg !6936
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %190, i8* %call278, i8* %call279), !dbg !6937
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6938
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 21, !dbg !6940, !ctir !3752
  %193 = load i8, i8* %require_preserve, align 4, !dbg !6940
  %tobool280 = trunc i8 %193 to i1, !dbg !6940, !ctir !139
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !6941

if.then281:                                       ; preds = %if.then276
  store i8 0, i8* %return_val, align 1, !dbg !6942
  br label %close_src_and_dst_desc, !dbg !6944

if.end282:                                        ; preds = %if.then276
  br label %if.end283, !dbg !6945

if.end283:                                        ; preds = %if.end282, %if.then267
  br label %if.end284, !dbg !6946

if.end284:                                        ; preds = %if.end283, %preserve_metadata
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6947
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 14, !dbg !6949, !ctir !3752
  %195 = load i8, i8* %preserve_ownership, align 1, !dbg !6949
  %tobool285 = trunc i8 %195 to i1, !dbg !6949, !ctir !139
  br i1 %tobool285, label %land.lhs.true287, label %if.end300, !dbg !6950

land.lhs.true287:                                 ; preds = %if.end284
  %196 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6951
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %196, i32 0, i32 4, !dbg !6951, !ctir !389
  %197 = load i32, i32* %st_uid, align 4, !dbg !6951, !ctir !343
  %st_uid288 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 4, !dbg !6951, !ctir !335
  %198 = load i32, i32* %st_uid288, align 4, !dbg !6951, !ctir !343
  %cmp289 = icmp eq i32 %197, %198, !dbg !6951
  br i1 %cmp289, label %land.lhs.true291, label %if.then295, !dbg !6951

land.lhs.true291:                                 ; preds = %land.lhs.true287
  %199 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6951
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %199, i32 0, i32 5, !dbg !6951, !ctir !389
  %200 = load i32, i32* %st_gid, align 8, !dbg !6951, !ctir !345
  %st_gid292 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 5, !dbg !6951, !ctir !335
  %201 = load i32, i32* %st_gid292, align 8, !dbg !6951, !ctir !345
  %cmp293 = icmp eq i32 %200, %201, !dbg !6951
  br i1 %cmp293, label %if.end300, label %if.then295, !dbg !6952

if.then295:                                       ; preds = %land.lhs.true291, %land.lhs.true287
  %202 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6953
  %203 = load i8*, i8** %dst_name.addr, align 8, !dbg !6955
  %204 = load i32, i32* %dest_desc, align 4, !dbg !6956
  %205 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6957
  %206 = load i8*, i8** %new_dst.addr, align 8, !dbg !6958
  %207 = load i8, i8* %206, align 1, !dbg !6959
  %tobool296 = trunc i8 %207 to i1, !dbg !6959, !ctir !139
  %call297 = call i32 @set_owner(%struct.cp_options* %202, i8* %203, i32 %204, %struct.stat* %205, i1 zeroext %tobool296, %struct.stat* %sb), !dbg !6960
  switch i32 %call297, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb298
  ], !dbg !6961

sw.bb:                                            ; preds = %if.then295
  store i8 0, i8* %return_val, align 1, !dbg !6962
  br label %close_src_and_dst_desc, !dbg !6964

sw.bb298:                                         ; preds = %if.then295
  %208 = load i32, i32* %src_mode, align 4, !dbg !6965
  %and299 = and i32 %208, -3585, !dbg !6965
  store i32 %and299, i32* %src_mode, align 4, !dbg !6965
  br label %sw.epilog, !dbg !6966

sw.epilog:                                        ; preds = %if.then295, %sw.bb298
  br label %if.end300, !dbg !6967

if.end300:                                        ; preds = %sw.epilog, %land.lhs.true291, %if.end284
  %209 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6968
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %209, i32 0, i32 24, !dbg !6970, !ctir !3752
  %210 = load i8, i8* %preserve_xattr, align 1, !dbg !6970
  %tobool301 = trunc i8 %210 to i1, !dbg !6970, !ctir !139
  br i1 %tobool301, label %if.then302, label %if.end328, !dbg !6971

if.then302:                                       ; preds = %if.end300
  call void @llvm.dbg.declare(metadata i8* %access_changed, metadata !6972, metadata !DIExpression()), !dbg !6974
  store i8 0, i8* %access_changed, align 1, !dbg !6974
  %st_mode303 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !6975, !ctir !335
  %211 = load i32, i32* %st_mode303, align 8, !dbg !6975, !ctir !165
  %and304 = and i32 %211, 128, !dbg !6977
  %tobool305 = icmp ne i32 %and304, 0, !dbg !6977
  br i1 %tobool305, label %if.end315, label %land.lhs.true306, !dbg !6978

land.lhs.true306:                                 ; preds = %if.then302
  %call307 = call i32 @geteuid() #12, !dbg !6979
  %cmp308 = icmp ne i32 %call307, 0, !dbg !6980
  br i1 %cmp308, label %if.then310, label %if.end315, !dbg !6981

if.then310:                                       ; preds = %land.lhs.true306
  %212 = load i32, i32* %dest_desc, align 4, !dbg !6982
  %213 = load i8*, i8** %dst_name.addr, align 8, !dbg !6984
  %call311 = call i32 @fchmod_or_lchmod(i32 %212, i8* %213, i32 384), !dbg !6985
  %cmp312 = icmp eq i32 %call311, 0, !dbg !6986
  %frombool314 = zext i1 %cmp312 to i8, !dbg !6987
  store i8 %frombool314, i8* %access_changed, align 1, !dbg !6987
  br label %if.end315, !dbg !6988

if.end315:                                        ; preds = %if.then310, %land.lhs.true306, %if.then302
  %214 = load i8*, i8** %src_name.addr, align 8, !dbg !6989
  %215 = load i32, i32* %source_desc, align 4, !dbg !6991
  %216 = load i8*, i8** %dst_name.addr, align 8, !dbg !6992
  %217 = load i32, i32* %dest_desc, align 4, !dbg !6993
  %218 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6994
  %call316 = call zeroext i1 @copy_attr(i8* %214, i32 %215, i8* %216, i32 %217, %struct.cp_options* %218), !dbg !6995
  br i1 %call316, label %if.end321, label %land.lhs.true317, !dbg !6996

land.lhs.true317:                                 ; preds = %if.end315
  %219 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6997
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %219, i32 0, i32 25, !dbg !6998, !ctir !3752
  %220 = load i8, i8* %require_preserve_xattr, align 8, !dbg !6998
  %tobool318 = trunc i8 %220 to i1, !dbg !6998, !ctir !139
  br i1 %tobool318, label %if.then320, label %if.end321, !dbg !6999

if.then320:                                       ; preds = %land.lhs.true317
  store i8 0, i8* %return_val, align 1, !dbg !7000
  br label %if.end321, !dbg !7001

if.end321:                                        ; preds = %if.then320, %land.lhs.true317, %if.end315
  %221 = load i8, i8* %access_changed, align 1, !dbg !7002
  %tobool322 = trunc i8 %221 to i1, !dbg !7002
  br i1 %tobool322, label %if.then323, label %if.end327, !dbg !7004

if.then323:                                       ; preds = %if.end321
  %222 = load i32, i32* %dest_desc, align 4, !dbg !7005
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !7006
  %224 = load i32, i32* %dst_mode.addr, align 4, !dbg !7007
  %225 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7008
  %neg324 = xor i32 %225, -1, !dbg !7009
  %and325 = and i32 %224, %neg324, !dbg !7010
  %call326 = call i32 @fchmod_or_lchmod(i32 %222, i8* %223, i32 %and325), !dbg !7011
  br label %if.end327, !dbg !7011

if.end327:                                        ; preds = %if.then323, %if.end321
  br label %if.end328, !dbg !7012

if.end328:                                        ; preds = %if.end327, %if.end300
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !7013
  %227 = load i32, i32* %dest_desc, align 4, !dbg !7014
  %228 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7015
  call void @set_author(i8* %226, i32 %227, %struct.stat* %228), !dbg !7016
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7017
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 15, !dbg !7019, !ctir !3752
  %230 = load i8, i8* %preserve_mode, align 2, !dbg !7019
  %tobool329 = trunc i8 %230 to i1, !dbg !7019, !ctir !139
  br i1 %tobool329, label %if.then335, label %lor.lhs.false331, !dbg !7020

lor.lhs.false331:                                 ; preds = %if.end328
  %231 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7021
  %move_mode332 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %231, i32 0, i32 9, !dbg !7022, !ctir !3752
  %232 = load i8, i8* %move_mode332, align 8, !dbg !7022
  %tobool333 = trunc i8 %232 to i1, !dbg !7022, !ctir !139
  br i1 %tobool333, label %if.then335, label %if.else345, !dbg !7023

if.then335:                                       ; preds = %lor.lhs.false331, %if.end328
  %233 = load i8*, i8** %src_name.addr, align 8, !dbg !7024
  %234 = load i32, i32* %source_desc, align 4, !dbg !7027
  %235 = load i8*, i8** %dst_name.addr, align 8, !dbg !7028
  %236 = load i32, i32* %dest_desc, align 4, !dbg !7029
  %237 = load i32, i32* %src_mode, align 4, !dbg !7030
  %call336 = call i32 @copy_acl(i8* %233, i32 %234, i8* %235, i32 %236, i32 %237), !dbg !7031
  %cmp337 = icmp ne i32 %call336, 0, !dbg !7032
  br i1 %cmp337, label %land.lhs.true339, label %if.end344, !dbg !7033

land.lhs.true339:                                 ; preds = %if.then335
  %238 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7034
  %require_preserve340 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %238, i32 0, i32 21, !dbg !7035, !ctir !3752
  %239 = load i8, i8* %require_preserve340, align 4, !dbg !7035
  %tobool341 = trunc i8 %239 to i1, !dbg !7035, !ctir !139
  br i1 %tobool341, label %if.then343, label %if.end344, !dbg !7036

if.then343:                                       ; preds = %land.lhs.true339
  store i8 0, i8* %return_val, align 1, !dbg !7037
  br label %if.end344, !dbg !7038

if.end344:                                        ; preds = %if.then343, %land.lhs.true339, %if.then335
  br label %if.end391, !dbg !7039

if.else345:                                       ; preds = %lor.lhs.false331
  %240 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7040
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %240, i32 0, i32 28, !dbg !7042, !ctir !3752
  %241 = load i8, i8* %set_mode, align 1, !dbg !7042
  %tobool346 = trunc i8 %241 to i1, !dbg !7042, !ctir !139
  br i1 %tobool346, label %if.then347, label %if.else353, !dbg !7043

if.then347:                                       ; preds = %if.else345
  %242 = load i8*, i8** %dst_name.addr, align 8, !dbg !7044
  %243 = load i32, i32* %dest_desc, align 4, !dbg !7047
  %244 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7048
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %244, i32 0, i32 4, !dbg !7049, !ctir !3752
  %245 = load i32, i32* %mode, align 8, !dbg !7049, !ctir !236
  %call348 = call i32 @set_acl(i8* %242, i32 %243, i32 %245), !dbg !7050
  %cmp349 = icmp ne i32 %call348, 0, !dbg !7051
  br i1 %cmp349, label %if.then351, label %if.end352, !dbg !7052

if.then351:                                       ; preds = %if.then347
  store i8 0, i8* %return_val, align 1, !dbg !7053
  br label %if.end352, !dbg !7054

if.end352:                                        ; preds = %if.then351, %if.then347
  br label %if.end390, !dbg !7055

if.else353:                                       ; preds = %if.else345
  %246 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7056
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %246, i32 0, i32 17, !dbg !7058, !ctir !3752
  %247 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !7058
  %tobool354 = trunc i8 %247 to i1, !dbg !7058, !ctir !139
  br i1 %tobool354, label %land.lhs.true356, label %if.else368, !dbg !7059

land.lhs.true356:                                 ; preds = %if.else353
  %248 = load i8*, i8** %new_dst.addr, align 8, !dbg !7060
  %249 = load i8, i8* %248, align 1, !dbg !7061
  %tobool357 = trunc i8 %249 to i1, !dbg !7061, !ctir !139
  br i1 %tobool357, label %if.then359, label %if.else368, !dbg !7062

if.then359:                                       ; preds = %land.lhs.true356
  %250 = load i8*, i8** %dst_name.addr, align 8, !dbg !7063
  %251 = load i32, i32* %dest_desc, align 4, !dbg !7066
  %call360 = call i32 @cached_umask(), !dbg !7067
  %neg361 = xor i32 %call360, -1, !dbg !7068
  %and362 = and i32 438, %neg361, !dbg !7069
  %call363 = call i32 @set_acl(i8* %250, i32 %251, i32 %and362), !dbg !7070
  %cmp364 = icmp ne i32 %call363, 0, !dbg !7071
  br i1 %cmp364, label %if.then366, label %if.end367, !dbg !7072

if.then366:                                       ; preds = %if.then359
  store i8 0, i8* %return_val, align 1, !dbg !7073
  br label %if.end367, !dbg !7074

if.end367:                                        ; preds = %if.then366, %if.then359
  br label %if.end389, !dbg !7075

if.else368:                                       ; preds = %land.lhs.true356, %if.else353
  %252 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7076
  %tobool369 = icmp ne i32 %252, 0, !dbg !7076
  br i1 %tobool369, label %if.then370, label %if.end388, !dbg !7078

if.then370:                                       ; preds = %if.else368
  %call371 = call i32 @cached_umask(), !dbg !7079
  %neg372 = xor i32 %call371, -1, !dbg !7081
  %253 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7082
  %and373 = and i32 %253, %neg372, !dbg !7082
  store i32 %and373, i32* %omitted_permissions.addr, align 4, !dbg !7082
  %254 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7083
  %tobool374 = icmp ne i32 %254, 0, !dbg !7083
  br i1 %tobool374, label %land.lhs.true375, label %if.end387, !dbg !7085

land.lhs.true375:                                 ; preds = %if.then370
  %255 = load i32, i32* %dest_desc, align 4, !dbg !7086
  %256 = load i8*, i8** %dst_name.addr, align 8, !dbg !7087
  %257 = load i32, i32* %dst_mode.addr, align 4, !dbg !7088
  %call376 = call i32 @fchmod_or_lchmod(i32 %255, i8* %256, i32 %257), !dbg !7089
  %cmp377 = icmp ne i32 %call376, 0, !dbg !7090
  br i1 %cmp377, label %if.then379, label %if.end387, !dbg !7091

if.then379:                                       ; preds = %land.lhs.true375
  %call380 = call i32* @__errno_location() #15, !dbg !7092
  %258 = load i32, i32* %call380, align 4, !dbg !7092, !ctir !5
  %call381 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.135, i64 0, i64 0)) #12, !dbg !7094
  %259 = load i8*, i8** %dst_name.addr, align 8, !dbg !7095
  %call382 = call i8* @quotearg_style(i32 4, i8* %259), !dbg !7095
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %258, i8* %call381, i8* %call382), !dbg !7096
  %260 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7097
  %require_preserve383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %260, i32 0, i32 21, !dbg !7099, !ctir !3752
  %261 = load i8, i8* %require_preserve383, align 4, !dbg !7099
  %tobool384 = trunc i8 %261 to i1, !dbg !7099, !ctir !139
  br i1 %tobool384, label %if.then385, label %if.end386, !dbg !7100

if.then385:                                       ; preds = %if.then379
  store i8 0, i8* %return_val, align 1, !dbg !7101
  br label %if.end386, !dbg !7102

if.end386:                                        ; preds = %if.then385, %if.then379
  br label %if.end387, !dbg !7103

if.end387:                                        ; preds = %if.end386, %land.lhs.true375, %if.then370
  br label %if.end388, !dbg !7104

if.end388:                                        ; preds = %if.end387, %if.else368
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.end367
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.end352
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %if.end344
  br label %close_src_and_dst_desc, !dbg !7022

close_src_and_dst_desc:                           ; preds = %if.end391, %sw.bb, %if.then281, %if.then259, %if.then251, %if.then238, %if.then154, %if.then132, %if.then39
  call void @llvm.dbg.label(metadata !7105), !dbg !7106
  %262 = load i32, i32* %dest_desc, align 4, !dbg !7107
  %call392 = call i32 @close(i32 %262), !dbg !7109
  %cmp393 = icmp slt i32 %call392, 0, !dbg !7110
  br i1 %cmp393, label %if.then395, label %if.end399, !dbg !7111

if.then395:                                       ; preds = %close_src_and_dst_desc
  %call396 = call i32* @__errno_location() #15, !dbg !7112
  %263 = load i32, i32* %call396, align 4, !dbg !7112, !ctir !5
  %call397 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0)) #12, !dbg !7114
  %264 = load i8*, i8** %dst_name.addr, align 8, !dbg !7115
  %call398 = call i8* @quotearg_style(i32 4, i8* %264), !dbg !7115
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %263, i8* %call397, i8* %call398), !dbg !7116
  store i8 0, i8* %return_val, align 1, !dbg !7117
  br label %if.end399, !dbg !7118

if.end399:                                        ; preds = %if.then395, %close_src_and_dst_desc
  br label %close_src_desc, !dbg !7119

close_src_desc:                                   ; preds = %if.end399, %if.end125, %if.else, %if.then65, %if.then49, %if.then17, %if.then8
  call void @llvm.dbg.label(metadata !7120), !dbg !7121
  %265 = load i32, i32* %source_desc, align 4, !dbg !7122
  %call400 = call i32 @close(i32 %265), !dbg !7124
  %cmp401 = icmp slt i32 %call400, 0, !dbg !7125
  br i1 %cmp401, label %if.then403, label %if.end407, !dbg !7126

if.then403:                                       ; preds = %close_src_desc
  %call404 = call i32* @__errno_location() #15, !dbg !7127
  %266 = load i32, i32* %call404, align 4, !dbg !7127, !ctir !5
  %call405 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0)) #12, !dbg !7129
  %267 = load i8*, i8** %src_name.addr, align 8, !dbg !7130
  %call406 = call i8* @quotearg_style(i32 4, i8* %267), !dbg !7130
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %266, i8* %call405, i8* %call406), !dbg !7131
  store i8 0, i8* %return_val, align 1, !dbg !7132
  br label %if.end407, !dbg !7133

if.end407:                                        ; preds = %if.then403, %close_src_desc
  %268 = load i8*, i8** %buf_alloc, align 8, !dbg !7134
  call void @free(i8* %268) #12, !dbg !7135
  %269 = load i8*, i8** %name_alloc, align 8, !dbg !7136
  call void @free(i8* %269) #12, !dbg !7137
  %270 = load i8, i8* %return_val, align 1, !dbg !7138
  %tobool408 = trunc i8 %270 to i1, !dbg !7138
  store i1 %tobool408, i1* %retval, align 1, !dbg !7139
  br label %return, !dbg !7139

return:                                           ; preds = %if.end407, %if.then
  %271 = load i1, i1* %retval, align 1, !dbg !7140
  ret i1 %271, !dbg !7140
}

; Function Attrs: nounwind
declare dso_local i32 @mknod(i8*, i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @mkfifo(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_fscreatecon_or_die() #4 !dbg !7141 {
entry:
  %call = call i32 @setfscreatecon(i8* null), !dbg !7142
  %cmp = icmp ne i32 %call, 0, !dbg !7144
  br i1 %cmp, label %if.then, label %if.end, !dbg !7145

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7146
  %0 = load i32, i32* %call1, align 4, !dbg !7146, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.75, i64 0, i64 0)) #12, !dbg !7146
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %0, i8* %call2), !dbg !7146
  unreachable, !dbg !7146

if.end:                                           ; preds = %entry
  ret void, !dbg !7147
}

; Function Attrs: nounwind
declare dso_local i32 @lchown(i8*, i32, i32) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @chown_failure_ok(%struct.cp_options* %x) #9 !dbg !7148 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7149, metadata !DIExpression()), !dbg !7150
  %call = call i32* @__errno_location() #15, !dbg !7151
  %0 = load i32, i32* %call, align 4, !dbg !7151, !ctir !5
  %cmp = icmp eq i32 %0, 1, !dbg !7152
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7153

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7154
  %1 = load i32, i32* %call1, align 4, !dbg !7154, !ctir !5
  %cmp2 = icmp eq i32 %1, 22, !dbg !7155
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7156

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7157
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 11, !dbg !7158, !ctir !3752
  %3 = load i8, i8* %chown_privileges, align 2, !dbg !7158
  %tobool = trunc i8 %3 to i1, !dbg !7158, !ctir !139
  %lnot = xor i1 %tobool, true, !dbg !7159
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7160
  ret i1 %4, !dbg !7161
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @utimens_symlink(i8* %file, %struct.timespec* %timespec) #4 !dbg !7162 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %err = alloca i32, align 4, !ctir !5
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !7167, metadata !DIExpression()), !dbg !7168
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !7169, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7171, metadata !DIExpression()), !dbg !7172
  %0 = load i8*, i8** %file.addr, align 8, !dbg !7173
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !7174
  %call = call i32 @lutimens(i8* %0, %struct.timespec* %1), !dbg !7175
  store i32 %call, i32* %err, align 4, !dbg !7172
  %2 = load i32, i32* %err, align 4, !dbg !7176
  %tobool = icmp ne i32 %2, 0, !dbg !7176
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7178

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7179
  %3 = load i32, i32* %call1, align 4, !dbg !7179, !ctir !5
  %cmp = icmp eq i32 %3, 38, !dbg !7180
  br i1 %cmp, label %if.then, label %if.end, !dbg !7181

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %err, align 4, !dbg !7182
  br label %if.end, !dbg !7183

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i32, i32* %err, align 4, !dbg !7184
  ret i32 %4, !dbg !7185
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_owner(%struct.cp_options* %x, i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb, i1 zeroext %new_dst, %struct.stat* %dst_sb) #4 !dbg !7186 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  %new_dst.addr = alloca i8, align 1
  %dst_sb.addr = alloca %struct.stat*, align 8
  %uid = alloca i32, align 4, !ctir !452
  %gid = alloca i32, align 4, !ctir !453
  %old_mode = alloca i32, align 4, !ctir !236
  %new_mode = alloca i32, align 4, !ctir !236
  %restrictive_temp_mode = alloca i32, align 4, !ctir !236
  %saved_errno = alloca i32, align 4, !ctir !5
  %__x = alloca i32, align 4, !ctir !5
  %saved_errno60 = alloca i32, align 4, !ctir !5
  %__x62 = alloca i32, align 4, !ctir !5
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7189, metadata !DIExpression()), !dbg !7190
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7191, metadata !DIExpression()), !dbg !7192
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !7193, metadata !DIExpression()), !dbg !7194
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7195, metadata !DIExpression()), !dbg !7196
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !7197, metadata !DIExpression()), !dbg !7198
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !7199, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !7201, metadata !DIExpression()), !dbg !7202
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7203
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 4, !dbg !7204, !ctir !389
  %1 = load i32, i32* %st_uid, align 4, !dbg !7204, !ctir !343
  store i32 %1, i32* %uid, align 4, !dbg !7202
  call void @llvm.dbg.declare(metadata i32* %gid, metadata !7205, metadata !DIExpression()), !dbg !7206
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7207
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 5, !dbg !7208, !ctir !389
  %3 = load i32, i32* %st_gid, align 8, !dbg !7208, !ctir !345
  store i32 %3, i32* %gid, align 4, !dbg !7206
  %4 = load i8, i8* %new_dst.addr, align 1, !dbg !7209
  %tobool = trunc i8 %4 to i1, !dbg !7209
  br i1 %tobool, label %if.end26, label %land.lhs.true, !dbg !7211

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7212
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 15, !dbg !7213, !ctir !3752
  %6 = load i8, i8* %preserve_mode, align 2, !dbg !7213
  %tobool1 = trunc i8 %6 to i1, !dbg !7213, !ctir !139
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !7214

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7215
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 9, !dbg !7216, !ctir !3752
  %8 = load i8, i8* %move_mode, align 8, !dbg !7216
  %tobool2 = trunc i8 %8 to i1, !dbg !7216, !ctir !139
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !7217

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7218
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 28, !dbg !7219, !ctir !3752
  %10 = load i8, i8* %set_mode, align 1, !dbg !7219
  %tobool4 = trunc i8 %10 to i1, !dbg !7219, !ctir !139
  br i1 %tobool4, label %if.then, label %if.end26, !dbg !7220

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %old_mode, metadata !7221, metadata !DIExpression()), !dbg !7223
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !7224
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !7225, !ctir !389
  %12 = load i32, i32* %st_mode, align 8, !dbg !7225, !ctir !165
  store i32 %12, i32* %old_mode, align 4, !dbg !7223
  call void @llvm.dbg.declare(metadata i32* %new_mode, metadata !7226, metadata !DIExpression()), !dbg !7227
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7228
  %preserve_mode5 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !7229, !ctir !3752
  %14 = load i8, i8* %preserve_mode5, align 2, !dbg !7229
  %tobool6 = trunc i8 %14 to i1, !dbg !7229, !ctir !139
  br i1 %tobool6, label %cond.true, label %lor.lhs.false7, !dbg !7230

lor.lhs.false7:                                   ; preds = %if.then
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7231
  %move_mode8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 9, !dbg !7232, !ctir !3752
  %16 = load i8, i8* %move_mode8, align 8, !dbg !7232
  %tobool9 = trunc i8 %16 to i1, !dbg !7232, !ctir !139
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !7228

cond.true:                                        ; preds = %lor.lhs.false7, %if.then
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7233
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !7234, !ctir !389
  %18 = load i32, i32* %st_mode10, align 8, !dbg !7234, !ctir !165
  br label %cond.end, !dbg !7228

cond.false:                                       ; preds = %lor.lhs.false7
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7235
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 4, !dbg !7236, !ctir !3752
  %20 = load i32, i32* %mode, align 8, !dbg !7236, !ctir !236
  br label %cond.end, !dbg !7228

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %20, %cond.false ], !dbg !7228
  store i32 %cond, i32* %new_mode, align 4, !dbg !7227
  call void @llvm.dbg.declare(metadata i32* %restrictive_temp_mode, metadata !7237, metadata !DIExpression()), !dbg !7238
  %21 = load i32, i32* %old_mode, align 4, !dbg !7239
  %22 = load i32, i32* %new_mode, align 4, !dbg !7240
  %and = and i32 %21, %22, !dbg !7241
  %and11 = and i32 %and, 448, !dbg !7242
  store i32 %and11, i32* %restrictive_temp_mode, align 4, !dbg !7238
  %23 = load i32, i32* %old_mode, align 4, !dbg !7243
  %and12 = and i32 %23, 4095, !dbg !7245
  %24 = load i32, i32* %new_mode, align 4, !dbg !7246
  %neg = xor i32 %24, -1, !dbg !7247
  %or = or i32 %neg, 2048, !dbg !7248
  %or13 = or i32 %or, 1024, !dbg !7249
  %or14 = or i32 %or13, 512, !dbg !7250
  %and15 = and i32 %and12, %or14, !dbg !7251
  %tobool16 = icmp ne i32 %and15, 0, !dbg !7251
  br i1 %tobool16, label %land.lhs.true17, label %if.end25, !dbg !7252

land.lhs.true17:                                  ; preds = %cond.end
  %25 = load i8*, i8** %dst_name.addr, align 8, !dbg !7253
  %26 = load i32, i32* %dest_desc.addr, align 4, !dbg !7254
  %27 = load i32, i32* %restrictive_temp_mode, align 4, !dbg !7255
  %call = call i32 @qset_acl(i8* %25, i32 %26, i32 %27), !dbg !7256
  %cmp = icmp ne i32 %call, 0, !dbg !7257
  br i1 %cmp, label %if.then18, label %if.end25, !dbg !7258

if.then18:                                        ; preds = %land.lhs.true17
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7259
  %call19 = call zeroext i1 @owner_failure_ok(%struct.cp_options* %28), !dbg !7262
  br i1 %call19, label %if.end, label %if.then20, !dbg !7263

if.then20:                                        ; preds = %if.then18
  %call21 = call i32* @__errno_location() #15, !dbg !7264
  %29 = load i32, i32* %call21, align 4, !dbg !7264, !ctir !5
  %call22 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76, i64 0, i64 0)) #12, !dbg !7265
  %30 = load i8*, i8** %dst_name.addr, align 8, !dbg !7266
  %call23 = call i8* @quotearg_style(i32 4, i8* %30), !dbg !7266
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %29, i8* %call22, i8* %call23), !dbg !7267
  br label %if.end, !dbg !7267

if.end:                                           ; preds = %if.then20, %if.then18
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7268
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 21, !dbg !7269, !ctir !3752
  %32 = load i8, i8* %require_preserve, align 4, !dbg !7269
  %tobool24 = trunc i8 %32 to i1, !dbg !7269, !ctir !139
  %conv = zext i1 %tobool24 to i32, !dbg !7268
  %sub = sub nsw i32 0, %conv, !dbg !7270
  store i32 %sub, i32* %retval, align 4, !dbg !7271
  br label %return, !dbg !7271

if.end25:                                         ; preds = %land.lhs.true17, %cond.end
  br label %if.end26, !dbg !7272

if.end26:                                         ; preds = %if.end25, %lor.lhs.false3, %entry
  %33 = load i32, i32* %dest_desc.addr, align 4, !dbg !7273
  %cmp27 = icmp ne i32 %33, -1, !dbg !7275
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !7276

if.then29:                                        ; preds = %if.end26
  %34 = load i32, i32* %dest_desc.addr, align 4, !dbg !7277
  %35 = load i32, i32* %uid, align 4, !dbg !7280
  %36 = load i32, i32* %gid, align 4, !dbg !7281
  %call30 = call i32 @fchown(i32 %34, i32 %35, i32 %36) #12, !dbg !7282
  %cmp31 = icmp eq i32 %call30, 0, !dbg !7283
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !7284

if.then33:                                        ; preds = %if.then29
  store i32 1, i32* %retval, align 4, !dbg !7285
  br label %return, !dbg !7285

if.end34:                                         ; preds = %if.then29
  %call35 = call i32* @__errno_location() #15, !dbg !7286
  %37 = load i32, i32* %call35, align 4, !dbg !7286, !ctir !5
  %cmp36 = icmp eq i32 %37, 1, !dbg !7288
  br i1 %cmp36, label %if.then42, label %lor.lhs.false38, !dbg !7289

lor.lhs.false38:                                  ; preds = %if.end34
  %call39 = call i32* @__errno_location() #15, !dbg !7290
  %38 = load i32, i32* %call39, align 4, !dbg !7290, !ctir !5
  %cmp40 = icmp eq i32 %38, 22, !dbg !7291
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !7292

if.then42:                                        ; preds = %lor.lhs.false38, %if.end34
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !7293, metadata !DIExpression()), !dbg !7295
  %call43 = call i32* @__errno_location() #15, !dbg !7296
  %39 = load i32, i32* %call43, align 4, !dbg !7296, !ctir !5
  store i32 %39, i32* %saved_errno, align 4, !dbg !7295
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !7297, metadata !DIExpression()), !dbg !7299
  %40 = load i32, i32* %dest_desc.addr, align 4, !dbg !7299
  %41 = load i32, i32* %gid, align 4, !dbg !7299
  %call44 = call i32 @fchown(i32 %40, i32 -1, i32 %41) #12, !dbg !7299
  store i32 %call44, i32* %__x, align 4, !dbg !7299
  %42 = load i32, i32* %__x, align 4, !dbg !7299
  %43 = load i32, i32* %saved_errno, align 4, !dbg !7300
  %call45 = call i32* @__errno_location() #15, !dbg !7301
  store i32 %43, i32* %call45, align 4, !dbg !7302, !ctir !5
  br label %if.end46, !dbg !7303

if.end46:                                         ; preds = %if.then42, %lor.lhs.false38
  br label %if.end66, !dbg !7304

if.else:                                          ; preds = %if.end26
  %44 = load i8*, i8** %dst_name.addr, align 8, !dbg !7305
  %45 = load i32, i32* %uid, align 4, !dbg !7308
  %46 = load i32, i32* %gid, align 4, !dbg !7309
  %call47 = call i32 @lchown(i8* %44, i32 %45, i32 %46) #12, !dbg !7310
  %cmp48 = icmp eq i32 %call47, 0, !dbg !7311
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !7312

if.then50:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !7313
  br label %return, !dbg !7313

if.end51:                                         ; preds = %if.else
  %call52 = call i32* @__errno_location() #15, !dbg !7314
  %47 = load i32, i32* %call52, align 4, !dbg !7314, !ctir !5
  %cmp53 = icmp eq i32 %47, 1, !dbg !7316
  br i1 %cmp53, label %if.then59, label %lor.lhs.false55, !dbg !7317

lor.lhs.false55:                                  ; preds = %if.end51
  %call56 = call i32* @__errno_location() #15, !dbg !7318
  %48 = load i32, i32* %call56, align 4, !dbg !7318, !ctir !5
  %cmp57 = icmp eq i32 %48, 22, !dbg !7319
  br i1 %cmp57, label %if.then59, label %if.end65, !dbg !7320

if.then59:                                        ; preds = %lor.lhs.false55, %if.end51
  call void @llvm.dbg.declare(metadata i32* %saved_errno60, metadata !7321, metadata !DIExpression()), !dbg !7323
  %call61 = call i32* @__errno_location() #15, !dbg !7324
  %49 = load i32, i32* %call61, align 4, !dbg !7324, !ctir !5
  store i32 %49, i32* %saved_errno60, align 4, !dbg !7323
  call void @llvm.dbg.declare(metadata i32* %__x62, metadata !7325, metadata !DIExpression()), !dbg !7327
  %50 = load i8*, i8** %dst_name.addr, align 8, !dbg !7327
  %51 = load i32, i32* %gid, align 4, !dbg !7327
  %call63 = call i32 @lchown(i8* %50, i32 -1, i32 %51) #12, !dbg !7327
  store i32 %call63, i32* %__x62, align 4, !dbg !7327
  %52 = load i32, i32* %__x62, align 4, !dbg !7327
  %53 = load i32, i32* %saved_errno60, align 4, !dbg !7328
  %call64 = call i32* @__errno_location() #15, !dbg !7329
  store i32 %53, i32* %call64, align 4, !dbg !7330, !ctir !5
  br label %if.end65, !dbg !7331

if.end65:                                         ; preds = %if.then59, %lor.lhs.false55
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end46
  %54 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7332
  %call67 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %54) #14, !dbg !7334
  br i1 %call67, label %if.end76, label %if.then68, !dbg !7335

if.then68:                                        ; preds = %if.end66
  %call69 = call i32* @__errno_location() #15, !dbg !7336
  %55 = load i32, i32* %call69, align 4, !dbg !7336, !ctir !5
  %call70 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.132, i64 0, i64 0)) #12, !dbg !7338
  %56 = load i8*, i8** %dst_name.addr, align 8, !dbg !7339
  %call71 = call i8* @quotearg_style(i32 4, i8* %56), !dbg !7339
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %55, i8* %call70, i8* %call71), !dbg !7340
  %57 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7341
  %require_preserve72 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %57, i32 0, i32 21, !dbg !7343, !ctir !3752
  %58 = load i8, i8* %require_preserve72, align 4, !dbg !7343
  %tobool73 = trunc i8 %58 to i1, !dbg !7343, !ctir !139
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !7344

if.then74:                                        ; preds = %if.then68
  store i32 -1, i32* %retval, align 4, !dbg !7345
  br label %return, !dbg !7345

if.end75:                                         ; preds = %if.then68
  br label %if.end76, !dbg !7346

if.end76:                                         ; preds = %if.end75, %if.end66
  store i32 0, i32* %retval, align 4, !dbg !7347
  br label %return, !dbg !7347

return:                                           ; preds = %if.end76, %if.then74, %if.then50, %if.then33, %if.end
  %59 = load i32, i32* %retval, align 4, !dbg !7348
  ret i32 %59, !dbg !7348
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_attr(i8* %src_path, i32 %src_fd, i8* %dst_path, i32 %dst_fd, %struct.cp_options* %x) #4 !dbg !7349 {
entry:
  %src_path.addr = alloca i8*, align 8
  %src_fd.addr = alloca i32, align 4
  %dst_path.addr = alloca i8*, align 8
  %dst_fd.addr = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  store i8* %src_path, i8** %src_path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_path.addr, metadata !7352, metadata !DIExpression()), !dbg !7353
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7354, metadata !DIExpression()), !dbg !7355
  store i8* %dst_path, i8** %dst_path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_path.addr, metadata !7356, metadata !DIExpression()), !dbg !7357
  store i32 %dst_fd, i32* %dst_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst_fd.addr, metadata !7358, metadata !DIExpression()), !dbg !7359
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7360, metadata !DIExpression()), !dbg !7361
  ret i1 true, !dbg !7362
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_author(i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb) #4 !dbg !7363 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7366, metadata !DIExpression()), !dbg !7367
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !7368, metadata !DIExpression()), !dbg !7369
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7370, metadata !DIExpression()), !dbg !7371
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !7372
  %1 = load i32, i32* %dest_desc.addr, align 4, !dbg !7373
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7374
  ret void, !dbg !7375
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @cached_umask() #4 !dbg !457 {
entry:
  %0 = load i32, i32* @cached_umask.mask, align 4, !dbg !7376
  %cmp = icmp eq i32 %0, -1, !dbg !7378
  br i1 %cmp, label %if.then, label %if.end, !dbg !7379

if.then:                                          ; preds = %entry
  %call = call i32 @umask(i32 0) #12, !dbg !7380
  store i32 %call, i32* @cached_umask.mask, align 4, !dbg !7382
  %1 = load i32, i32* @cached_umask.mask, align 4, !dbg !7383
  %call1 = call i32 @umask(i32 %1) #12, !dbg !7384
  br label %if.end, !dbg !7385

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* @cached_umask.mask, align 4, !dbg !7386
  ret i32 %2, !dbg !7387
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @owner_failure_ok(%struct.cp_options* %x) #4 !dbg !7388 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7389, metadata !DIExpression()), !dbg !7390
  %call = call i32* @__errno_location() #15, !dbg !7391
  %0 = load i32, i32* %call, align 4, !dbg !7391, !ctir !5
  %cmp = icmp eq i32 %0, 1, !dbg !7392
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7393

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7394
  %1 = load i32, i32* %call1, align 4, !dbg !7394, !ctir !5
  %cmp2 = icmp eq i32 %1, 22, !dbg !7395
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7396

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7397
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !7398, !ctir !3752
  %3 = load i8, i8* %owner_privileges, align 1, !dbg !7398
  %tobool = trunc i8 %3 to i1, !dbg !7398, !ctir !139
  %lnot = xor i1 %tobool, true, !dbg !7399
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7400
  ret i1 %4, !dbg !7401
}

; Function Attrs: nounwind
declare dso_local i32 @fchown(i32, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @clone_file(i32 %dest_fd, i32 %src_fd) #4 !dbg !7402 {
entry:
  %dest_fd.addr = alloca i32, align 4
  %src_fd.addr = alloca i32, align 4
  store i32 %dest_fd, i32* %dest_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7403, metadata !DIExpression()), !dbg !7404
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7405, metadata !DIExpression()), !dbg !7406
  %0 = load i32, i32* %dest_fd.addr, align 4, !dbg !7407
  %1 = load i32, i32* %src_fd.addr, align 4, !dbg !7408
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 1074041865, i32 %1) #12, !dbg !7409
  ret i32 %call, !dbg !7410
}

; Function Attrs: nounwind readnone
declare dso_local i32 @getpagesize() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb) #4 !dbg !7411 {
entry:
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !7415, metadata !DIExpression()), !dbg !7416
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7417, !ctir !335
  %0 = load i64, i64* %st_blksize, align 8, !dbg !7417, !ctir !350
  %cmp = icmp slt i64 0, %0, !dbg !7417
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !7417

land.lhs.true:                                    ; preds = %entry
  %st_blksize1 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7417, !ctir !335
  %1 = load i64, i64* %st_blksize1, align 8, !dbg !7417, !ctir !350
  %cmp2 = icmp ule i64 %1, 2305843009213693952, !dbg !7417
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !7417

cond.true:                                        ; preds = %land.lhs.true
  %st_blksize3 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7417, !ctir !335
  %2 = load i64, i64* %st_blksize3, align 8, !dbg !7417, !ctir !350
  br label %cond.end, !dbg !7417

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !7417

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 512, %cond.false ], !dbg !7417
  %cmp4 = icmp sgt i64 131072, %cond, !dbg !7417
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !7417

cond.true5:                                       ; preds = %cond.end
  br label %cond.end17, !dbg !7417

cond.false6:                                      ; preds = %cond.end
  %st_blksize7 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7417, !ctir !335
  %3 = load i64, i64* %st_blksize7, align 8, !dbg !7417, !ctir !350
  %cmp8 = icmp slt i64 0, %3, !dbg !7417
  br i1 %cmp8, label %land.lhs.true9, label %cond.false14, !dbg !7417

land.lhs.true9:                                   ; preds = %cond.false6
  %st_blksize10 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7417, !ctir !335
  %4 = load i64, i64* %st_blksize10, align 8, !dbg !7417, !ctir !350
  %cmp11 = icmp ule i64 %4, 2305843009213693952, !dbg !7417
  br i1 %cmp11, label %cond.true12, label %cond.false14, !dbg !7417

cond.true12:                                      ; preds = %land.lhs.true9
  %st_blksize13 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7417, !ctir !335
  %5 = load i64, i64* %st_blksize13, align 8, !dbg !7417, !ctir !350
  br label %cond.end15, !dbg !7417

cond.false14:                                     ; preds = %land.lhs.true9, %cond.false6
  br label %cond.end15, !dbg !7417

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi i64 [ %5, %cond.true12 ], [ 512, %cond.false14 ], !dbg !7417
  br label %cond.end17, !dbg !7417

cond.end17:                                       ; preds = %cond.end15, %cond.true5
  %cond18 = phi i64 [ 131072, %cond.true5 ], [ %cond16, %cond.end15 ], !dbg !7417
  ret i64 %cond18, !dbg !7418
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_probably_sparse(%struct.stat* %sb) #4 !dbg !7419 {
entry:
  %sb.addr = alloca %struct.stat*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !7422, metadata !DIExpression()), !dbg !7423
  %0 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7424
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !7424, !ctir !389
  %1 = load i32, i32* %st_mode, align 8, !dbg !7424, !ctir !165
  %and = and i32 %1, 61440, !dbg !7424
  %cmp = icmp eq i32 %and, 32768, !dbg !7424
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7425

land.rhs:                                         ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7426
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 10, !dbg !7426, !ctir !389
  %3 = load i64, i64* %st_blocks, align 8, !dbg !7426, !ctir !352
  %4 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7427
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 8, !dbg !7428, !ctir !389
  %5 = load i64, i64* %st_size, align 8, !dbg !7428, !ctir !30
  %div = sdiv i64 %5, 512, !dbg !7429
  %cmp1 = icmp slt i64 %3, %div, !dbg !7430
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !7431
  ret i1 %6, !dbg !7432
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @ptr_align(i8* %ptr, i64 %alignment) #4 !dbg !7433 {
entry:
  %ptr.addr = alloca i8*, align 8
  %alignment.addr = alloca i64, align 8
  %p0 = alloca i8*, align 8, !ctir !113
  %p1 = alloca i8*, align 8, !ctir !113
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7436, metadata !DIExpression()), !dbg !7437
  store i64 %alignment, i64* %alignment.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !7438, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !7440, metadata !DIExpression()), !dbg !7441
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7442
  store i8* %0, i8** %p0, align 8, !dbg !7441
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !7443, metadata !DIExpression()), !dbg !7444
  %1 = load i8*, i8** %p0, align 8, !dbg !7445
  %2 = load i64, i64* %alignment.addr, align 8, !dbg !7446
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !7447, !ctir !114
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !7448, !ctir !114
  store i8* %add.ptr1, i8** %p1, align 8, !dbg !7444
  %3 = load i8*, i8** %p1, align 8, !dbg !7449
  %4 = load i8*, i8** %p1, align 8, !dbg !7450
  %5 = ptrtoint i8* %4 to i64, !dbg !7451
  %6 = load i64, i64* %alignment.addr, align 8, !dbg !7452
  %rem = urem i64 %5, %6, !dbg !7453
  %idx.neg = sub i64 0, %rem, !dbg !7454
  %add.ptr2 = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !7454, !ctir !114
  ret i8* %add.ptr2, !dbg !7455
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i64 %src_total_size, i32 %sparse_mode, i8* %src_name, i8* %dst_name, i8* %require_normal_copy) #4 !dbg !7456 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %src_total_size.addr = alloca i64, align 8
  %sparse_mode.addr = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %require_normal_copy.addr = alloca i8*, align 8
  %scan = alloca %struct.extent_scan, align 8, !ctir !7459
  %last_ext_start = alloca i64, align 8, !ctir !292
  %last_ext_len = alloca i64, align 8, !ctir !292
  %dest_pos = alloca i64, align 8, !ctir !292
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !139
  %ok = alloca i8, align 1, !ctir !139
  %empty_extent = alloca i8, align 1, !ctir !139
  %i = alloca i32, align 4, !ctir !67
  %ext_start = alloca i64, align 8, !ctir !292
  %ext_len = alloca i64, align 8, !ctir !292
  %ext_hole_size = alloca i64, align 8, !ctir !292
  %nzeros = alloca i64, align 8, !ctir !292
  %n_read = alloca i64, align 8, !ctir !292
  %read_hole = alloca i8, align 1, !ctir !139
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7468, metadata !DIExpression()), !dbg !7469
  store i32 %dest_fd, i32* %dest_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7470, metadata !DIExpression()), !dbg !7471
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7472, metadata !DIExpression()), !dbg !7473
  store i64 %buf_size, i64* %buf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !7474, metadata !DIExpression()), !dbg !7475
  store i64 %hole_size, i64* %hole_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !7476, metadata !DIExpression()), !dbg !7477
  store i64 %src_total_size, i64* %src_total_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %src_total_size.addr, metadata !7478, metadata !DIExpression()), !dbg !7479
  store i32 %sparse_mode, i32* %sparse_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sparse_mode.addr, metadata !7480, metadata !DIExpression()), !dbg !7481
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !7482, metadata !DIExpression()), !dbg !7483
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7484, metadata !DIExpression()), !dbg !7485
  store i8* %require_normal_copy, i8** %require_normal_copy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %require_normal_copy.addr, metadata !7486, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.declare(metadata %struct.extent_scan* %scan, metadata !7488, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.declare(metadata i64* %last_ext_start, metadata !7490, metadata !DIExpression()), !dbg !7491
  store i64 0, i64* %last_ext_start, align 8, !dbg !7491
  call void @llvm.dbg.declare(metadata i64* %last_ext_len, metadata !7492, metadata !DIExpression()), !dbg !7493
  store i64 0, i64* %last_ext_len, align 8, !dbg !7493
  call void @llvm.dbg.declare(metadata i64* %dest_pos, metadata !7494, metadata !DIExpression()), !dbg !7495
  store i64 0, i64* %dest_pos, align 8, !dbg !7495
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !7496
  call void @extent_scan_init(i32 %0, %struct.extent_scan* %scan), !dbg !7497
  %1 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !7498
  store i8 0, i8* %1, align 1, !dbg !7499, !ctir !139
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !7500, metadata !DIExpression()), !dbg !7501
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !7501
  br label %do.body, !dbg !7502

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !7503, metadata !DIExpression()), !dbg !7505
  %call = call zeroext i1 @extent_scan_read(%struct.extent_scan* %scan), !dbg !7506
  %frombool = zext i1 %call to i8, !dbg !7505
  store i8 %frombool, i8* %ok, align 1, !dbg !7505
  %2 = load i8, i8* %ok, align 1, !dbg !7507
  %tobool = trunc i8 %2 to i1, !dbg !7507
  br i1 %tobool, label %if.end9, label %if.then, !dbg !7509

if.then:                                          ; preds = %do.body
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !7510, !ctir !7459
  %3 = load i8, i8* %hit_final_extent, align 1, !dbg !7510
  %tobool1 = trunc i8 %3 to i1, !dbg !7510, !ctir !139
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7513

if.then2:                                         ; preds = %if.then
  br label %do.end, !dbg !7514

if.end:                                           ; preds = %if.then
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 4, !dbg !7515, !ctir !7459
  %4 = load i8, i8* %initial_scan_failed, align 8, !dbg !7515
  %tobool3 = trunc i8 %4 to i1, !dbg !7515, !ctir !139
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7517

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !7518
  store i8 1, i8* %5, align 1, !dbg !7520, !ctir !139
  store i1 false, i1* %retval, align 1, !dbg !7521
  br label %return, !dbg !7521

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #15, !dbg !7522
  %6 = load i32, i32* %call6, align 4, !dbg !7522, !ctir !5
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.68, i64 0, i64 0)) #12, !dbg !7523
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !7524
  %call8 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %7), !dbg !7524
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call7, i8* %call8), !dbg !7525
  store i1 false, i1* %retval, align 1, !dbg !7526
  br label %return, !dbg !7526

if.end9:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8* %empty_extent, metadata !7527, metadata !DIExpression()), !dbg !7528
  store i8 0, i8* %empty_extent, align 1, !dbg !7528
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7529, metadata !DIExpression()), !dbg !7531
  store i32 0, i32* %i, align 4, !dbg !7531
  br label %for.cond, !dbg !7532

for.cond:                                         ; preds = %for.inc, %if.end9
  %8 = load i32, i32* %i, align 4, !dbg !7533
  %conv = zext i32 %8 to i64, !dbg !7533
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !7535, !ctir !7459
  %9 = load i64, i64* %ei_count, align 8, !dbg !7535, !ctir !52
  %cmp = icmp ult i64 %conv, %9, !dbg !7536
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7537

lor.rhs:                                          ; preds = %for.cond
  %10 = load i8, i8* %empty_extent, align 1, !dbg !7538
  %tobool11 = trunc i8 %10 to i1, !dbg !7538
  br label %lor.end, !dbg !7537

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %11 = phi i1 [ true, %for.cond ], [ %tobool11, %lor.rhs ]
  br i1 %11, label %for.body, label %for.end, !dbg !7539

for.body:                                         ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i64* %ext_start, metadata !7540, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.declare(metadata i64* %ext_len, metadata !7543, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.declare(metadata i64* %ext_hole_size, metadata !7545, metadata !DIExpression()), !dbg !7546
  %12 = load i32, i32* %i, align 4, !dbg !7547
  %conv13 = zext i32 %12 to i64, !dbg !7547
  %ei_count14 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !7549, !ctir !7459
  %13 = load i64, i64* %ei_count14, align 8, !dbg !7549, !ctir !52
  %cmp15 = icmp ult i64 %conv13, %13, !dbg !7550
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !7551

if.then17:                                        ; preds = %for.body
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7552, !ctir !7459
  %14 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !7552, !ctir !437
  %15 = load i32, i32* %i, align 4, !dbg !7554
  %idxprom = zext i32 %15 to i64, !dbg !7555
  %arrayidx = getelementptr inbounds %struct.extent_info, %struct.extent_info* %14, i64 %idxprom, !dbg !7555, !ctir !437
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx, i32 0, i32 0, !dbg !7556, !ctir !438
  %16 = load i64, i64* %ext_logical, align 8, !dbg !7556, !ctir !292
  store i64 %16, i64* %ext_start, align 8, !dbg !7557
  %ext_info18 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7558, !ctir !7459
  %17 = load %struct.extent_info*, %struct.extent_info** %ext_info18, align 8, !dbg !7558, !ctir !437
  %18 = load i32, i32* %i, align 4, !dbg !7559
  %idxprom19 = zext i32 %18 to i64, !dbg !7560
  %arrayidx20 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %17, i64 %idxprom19, !dbg !7560, !ctir !437
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx20, i32 0, i32 1, !dbg !7561, !ctir !438
  %19 = load i64, i64* %ext_length, align 8, !dbg !7561, !ctir !292
  store i64 %19, i64* %ext_len, align 8, !dbg !7562
  br label %if.end25, !dbg !7563

if.else:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !7564
  %dec = add i32 %20, -1, !dbg !7564
  store i32 %dec, i32* %i, align 4, !dbg !7564
  %21 = load i64, i64* %last_ext_start, align 8, !dbg !7566
  %ext_info21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7567, !ctir !7459
  %22 = load %struct.extent_info*, %struct.extent_info** %ext_info21, align 8, !dbg !7567, !ctir !437
  %23 = load i32, i32* %i, align 4, !dbg !7568
  %idxprom22 = zext i32 %23 to i64, !dbg !7569
  %arrayidx23 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %22, i64 %idxprom22, !dbg !7569, !ctir !437
  %ext_length24 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx23, i32 0, i32 1, !dbg !7570, !ctir !438
  %24 = load i64, i64* %ext_length24, align 8, !dbg !7570, !ctir !292
  %add = add nsw i64 %21, %24, !dbg !7571
  store i64 %add, i64* %ext_start, align 8, !dbg !7572
  store i64 0, i64* %ext_len, align 8, !dbg !7573
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17
  %25 = load i64, i64* %src_total_size.addr, align 8, !dbg !7574
  %26 = load i64, i64* %ext_start, align 8, !dbg !7576
  %27 = load i64, i64* %ext_len, align 8, !dbg !7577
  %add26 = add nsw i64 %26, %27, !dbg !7578
  %cmp27 = icmp slt i64 %25, %add26, !dbg !7579
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !7580

if.then29:                                        ; preds = %if.end25
  %28 = load i64, i64* %src_total_size.addr, align 8, !dbg !7581
  %29 = load i64, i64* %ext_start, align 8, !dbg !7584
  %cmp30 = icmp slt i64 %28, %29, !dbg !7585
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !7586

if.then32:                                        ; preds = %if.then29
  %30 = load i64, i64* %src_total_size.addr, align 8, !dbg !7587
  store i64 %30, i64* %ext_start, align 8, !dbg !7588
  br label %if.end33, !dbg !7589

if.end33:                                         ; preds = %if.then32, %if.then29
  %31 = load i64, i64* %src_total_size.addr, align 8, !dbg !7590
  %32 = load i64, i64* %ext_start, align 8, !dbg !7591
  %sub = sub nsw i64 %31, %32, !dbg !7592
  store i64 %sub, i64* %ext_len, align 8, !dbg !7593
  br label %if.end34, !dbg !7594

if.end34:                                         ; preds = %if.end33, %if.end25
  %33 = load i64, i64* %ext_start, align 8, !dbg !7595
  %34 = load i64, i64* %last_ext_start, align 8, !dbg !7596
  %sub35 = sub nsw i64 %33, %34, !dbg !7597
  %35 = load i64, i64* %last_ext_len, align 8, !dbg !7598
  %sub36 = sub nsw i64 %sub35, %35, !dbg !7599
  store i64 %sub36, i64* %ext_hole_size, align 8, !dbg !7600
  store i8 0, i8* %wrote_hole_at_eof, align 1, !dbg !7601
  %36 = load i64, i64* %ext_hole_size, align 8, !dbg !7602
  %tobool37 = icmp ne i64 %36, 0, !dbg !7602
  br i1 %tobool37, label %if.then38, label %if.end82, !dbg !7604

if.then38:                                        ; preds = %if.end34
  %37 = load i32, i32* %src_fd.addr, align 4, !dbg !7605
  %38 = load i64, i64* %ext_start, align 8, !dbg !7608
  %call39 = call i64 @lseek(i32 %37, i64 %38, i32 0) #12, !dbg !7609
  %cmp40 = icmp slt i64 %call39, 0, !dbg !7610
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !7611

if.then42:                                        ; preds = %if.then38
  %call43 = call i32* @__errno_location() #15, !dbg !7612
  %39 = load i32, i32* %call43, align 4, !dbg !7612, !ctir !5
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i64 0, i64 0)) #12, !dbg !7614
  %40 = load i8*, i8** %src_name.addr, align 8, !dbg !7615
  %call45 = call i8* @quotearg_style(i32 4, i8* %40), !dbg !7615
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %39, i8* %call44, i8* %call45), !dbg !7616
  br label %fail, !dbg !7616

fail:                                             ; preds = %if.then90, %if.then70, %if.then59, %if.then42
  call void @llvm.dbg.label(metadata !7617), !dbg !7618
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !7619
  store i1 false, i1* %retval, align 1, !dbg !7620
  br label %return, !dbg !7620

if.end46:                                         ; preds = %if.then38
  %41 = load i8, i8* %empty_extent, align 1, !dbg !7621
  %tobool47 = trunc i8 %41 to i1, !dbg !7621
  br i1 %tobool47, label %land.lhs.true, label %lor.lhs.false, !dbg !7623

land.lhs.true:                                    ; preds = %if.end46
  %42 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7624
  %cmp49 = icmp eq i32 %42, 3, !dbg !7625
  br i1 %cmp49, label %if.then55, label %lor.lhs.false, !dbg !7626

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end46
  %43 = load i8, i8* %empty_extent, align 1, !dbg !7627
  %tobool51 = trunc i8 %43 to i1, !dbg !7627
  br i1 %tobool51, label %if.else61, label %land.lhs.true52, !dbg !7628

land.lhs.true52:                                  ; preds = %lor.lhs.false
  %44 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7629
  %cmp53 = icmp ne i32 %44, 1, !dbg !7630
  br i1 %cmp53, label %if.then55, label %if.else61, !dbg !7631

if.then55:                                        ; preds = %land.lhs.true52, %land.lhs.true
  %45 = load i32, i32* %dest_fd.addr, align 4, !dbg !7632
  %46 = load i8*, i8** %dst_name.addr, align 8, !dbg !7635
  %47 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7636
  %cmp56 = icmp eq i32 %47, 3, !dbg !7637
  %48 = load i64, i64* %ext_hole_size, align 8, !dbg !7638
  %call58 = call zeroext i1 @create_hole(i32 %45, i8* %46, i1 zeroext %cmp56, i64 %48), !dbg !7639
  br i1 %call58, label %if.end60, label %if.then59, !dbg !7640

if.then59:                                        ; preds = %if.then55
  br label %fail, !dbg !7641

if.end60:                                         ; preds = %if.then55
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !7642
  br label %if.end81, !dbg !7643

if.else61:                                        ; preds = %land.lhs.true52, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %nzeros, metadata !7644, metadata !DIExpression()), !dbg !7646
  %49 = load i64, i64* %ext_hole_size, align 8, !dbg !7647
  store i64 %49, i64* %nzeros, align 8, !dbg !7646
  %50 = load i8, i8* %empty_extent, align 1, !dbg !7648
  %tobool62 = trunc i8 %50 to i1, !dbg !7648
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !7650

if.then63:                                        ; preds = %if.else61
  %51 = load i64, i64* %src_total_size.addr, align 8, !dbg !7651
  %52 = load i64, i64* %dest_pos, align 8, !dbg !7651
  %sub64 = sub nsw i64 %51, %52, !dbg !7651
  %53 = load i64, i64* %ext_hole_size, align 8, !dbg !7651
  %cmp65 = icmp slt i64 %sub64, %53, !dbg !7651
  br i1 %cmp65, label %cond.true, label %cond.false, !dbg !7651

cond.true:                                        ; preds = %if.then63
  %54 = load i64, i64* %src_total_size.addr, align 8, !dbg !7651
  %55 = load i64, i64* %dest_pos, align 8, !dbg !7651
  %sub67 = sub nsw i64 %54, %55, !dbg !7651
  br label %cond.end, !dbg !7651

cond.false:                                       ; preds = %if.then63
  %56 = load i64, i64* %ext_hole_size, align 8, !dbg !7651
  br label %cond.end, !dbg !7651

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub67, %cond.true ], [ %56, %cond.false ], !dbg !7651
  store i64 %cond, i64* %nzeros, align 8, !dbg !7652
  br label %if.end68, !dbg !7653

if.end68:                                         ; preds = %cond.end, %if.else61
  %57 = load i32, i32* %dest_fd.addr, align 4, !dbg !7654
  %58 = load i64, i64* %nzeros, align 8, !dbg !7656
  %call69 = call zeroext i1 @write_zeros(i32 %57, i64 %58), !dbg !7657
  br i1 %call69, label %if.end74, label %if.then70, !dbg !7658

if.then70:                                        ; preds = %if.end68
  %call71 = call i32* @__errno_location() #15, !dbg !7659
  %59 = load i32, i32* %call71, align 4, !dbg !7659, !ctir !5
  %call72 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i64 0, i64 0)) #12, !dbg !7661
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !7662
  %call73 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %60), !dbg !7662
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %59, i8* %call72, i8* %call73), !dbg !7663
  br label %fail, !dbg !7664

if.end74:                                         ; preds = %if.end68
  %61 = load i64, i64* %src_total_size.addr, align 8, !dbg !7665
  %62 = load i64, i64* %ext_start, align 8, !dbg !7665
  %cmp75 = icmp slt i64 %61, %62, !dbg !7665
  br i1 %cmp75, label %cond.true77, label %cond.false78, !dbg !7665

cond.true77:                                      ; preds = %if.end74
  %63 = load i64, i64* %src_total_size.addr, align 8, !dbg !7665
  br label %cond.end79, !dbg !7665

cond.false78:                                     ; preds = %if.end74
  %64 = load i64, i64* %ext_start, align 8, !dbg !7665
  br label %cond.end79, !dbg !7665

cond.end79:                                       ; preds = %cond.false78, %cond.true77
  %cond80 = phi i64 [ %63, %cond.true77 ], [ %64, %cond.false78 ], !dbg !7665
  store i64 %cond80, i64* %dest_pos, align 8, !dbg !7666
  br label %if.end81

if.end81:                                         ; preds = %cond.end79, %if.end60
  br label %if.end82, !dbg !7667

if.end82:                                         ; preds = %if.end81, %if.end34
  %65 = load i64, i64* %ext_start, align 8, !dbg !7668
  store i64 %65, i64* %last_ext_start, align 8, !dbg !7669
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !7670, metadata !DIExpression()), !dbg !7673
  store i8 0, i8* %empty_extent, align 1, !dbg !7674
  %66 = load i64, i64* %ext_len, align 8, !dbg !7675
  store i64 %66, i64* %last_ext_len, align 8, !dbg !7676
  call void @llvm.dbg.declare(metadata i8* %read_hole, metadata !7677, metadata !DIExpression()), !dbg !7678
  %67 = load i32, i32* %src_fd.addr, align 4, !dbg !7679
  %68 = load i32, i32* %dest_fd.addr, align 4, !dbg !7681
  %69 = load i8*, i8** %buf.addr, align 8, !dbg !7682
  %70 = load i64, i64* %buf_size.addr, align 8, !dbg !7683
  %71 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7684
  %cmp83 = icmp eq i32 %71, 3, !dbg !7685
  br i1 %cmp83, label %cond.true85, label %cond.false86, !dbg !7684

cond.true85:                                      ; preds = %if.end82
  %72 = load i64, i64* %hole_size.addr, align 8, !dbg !7686
  br label %cond.end87, !dbg !7684

cond.false86:                                     ; preds = %if.end82
  br label %cond.end87, !dbg !7684

cond.end87:                                       ; preds = %cond.false86, %cond.true85
  %cond88 = phi i64 [ %72, %cond.true85 ], [ 0, %cond.false86 ], !dbg !7684
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !7687
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !7688
  %75 = load i64, i64* %ext_len, align 8, !dbg !7689
  %call89 = call zeroext i1 @sparse_copy(i32 %67, i32 %68, i8* %69, i64 %70, i64 %cond88, i1 zeroext true, i8* %73, i8* %74, i64 %75, i64* %n_read, i8* %read_hole), !dbg !7690
  br i1 %call89, label %if.end91, label %if.then90, !dbg !7691

if.then90:                                        ; preds = %cond.end87
  br label %fail, !dbg !7692

if.end91:                                         ; preds = %cond.end87
  %76 = load i64, i64* %ext_start, align 8, !dbg !7693
  %77 = load i64, i64* %n_read, align 8, !dbg !7694
  %add92 = add nsw i64 %76, %77, !dbg !7695
  store i64 %add92, i64* %dest_pos, align 8, !dbg !7696
  %78 = load i64, i64* %n_read, align 8, !dbg !7697
  %tobool93 = icmp ne i64 %78, 0, !dbg !7697
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !7699

if.then94:                                        ; preds = %if.end91
  %79 = load i8, i8* %read_hole, align 1, !dbg !7700
  %tobool95 = trunc i8 %79 to i1, !dbg !7700
  %frombool96 = zext i1 %tobool95 to i8, !dbg !7701
  store i8 %frombool96, i8* %wrote_hole_at_eof, align 1, !dbg !7701
  br label %if.end97, !dbg !7702

if.end97:                                         ; preds = %if.then94, %if.end91
  %80 = load i64, i64* %dest_pos, align 8, !dbg !7703
  %81 = load i64, i64* %src_total_size.addr, align 8, !dbg !7705
  %cmp98 = icmp eq i64 %80, %81, !dbg !7706
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !7707

if.then100:                                       ; preds = %if.end97
  %hit_final_extent101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !7708, !ctir !7459
  store i8 1, i8* %hit_final_extent101, align 1, !dbg !7710, !ctir !139
  br label %for.end, !dbg !7711

if.end102:                                        ; preds = %if.end97
  br label %for.inc, !dbg !7712

for.inc:                                          ; preds = %if.end102
  %82 = load i32, i32* %i, align 4, !dbg !7713
  %inc = add i32 %82, 1, !dbg !7713
  store i32 %inc, i32* %i, align 4, !dbg !7713
  br label %for.cond, !dbg !7714, !llvm.loop !7715

for.end:                                          ; preds = %if.then100, %lor.end
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !7717
  br label %do.cond, !dbg !7718

do.cond:                                          ; preds = %for.end
  %hit_final_extent103 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !7719, !ctir !7459
  %83 = load i8, i8* %hit_final_extent103, align 1, !dbg !7719
  %tobool104 = trunc i8 %83 to i1, !dbg !7719, !ctir !139
  %lnot = xor i1 %tobool104, true, !dbg !7720
  br i1 %lnot, label %do.body, label %do.end, !dbg !7718, !llvm.loop !7721

do.end:                                           ; preds = %do.cond, %if.then2
  %84 = load i64, i64* %dest_pos, align 8, !dbg !7723
  %85 = load i64, i64* %src_total_size.addr, align 8, !dbg !7725
  %cmp105 = icmp slt i64 %84, %85, !dbg !7726
  br i1 %cmp105, label %land.lhs.true110, label %lor.lhs.false107, !dbg !7727

lor.lhs.false107:                                 ; preds = %do.end
  %86 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !7728
  %tobool108 = trunc i8 %86 to i1, !dbg !7728
  br i1 %tobool108, label %land.lhs.true110, label %if.end123, !dbg !7729

land.lhs.true110:                                 ; preds = %lor.lhs.false107, %do.end
  %87 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7730
  %cmp111 = icmp ne i32 %87, 1, !dbg !7731
  br i1 %cmp111, label %cond.true113, label %cond.false116, !dbg !7732

cond.true113:                                     ; preds = %land.lhs.true110
  %88 = load i32, i32* %dest_fd.addr, align 4, !dbg !7733
  %89 = load i64, i64* %src_total_size.addr, align 8, !dbg !7734
  %call114 = call i32 @ftruncate(i32 %88, i64 %89) #12, !dbg !7735
  %tobool115 = icmp ne i32 %call114, 0, !dbg !7735
  br i1 %tobool115, label %if.then119, label %if.end123, !dbg !7730

cond.false116:                                    ; preds = %land.lhs.true110
  %90 = load i32, i32* %dest_fd.addr, align 4, !dbg !7736
  %91 = load i64, i64* %src_total_size.addr, align 8, !dbg !7737
  %92 = load i64, i64* %dest_pos, align 8, !dbg !7738
  %sub117 = sub nsw i64 %91, %92, !dbg !7739
  %call118 = call zeroext i1 @write_zeros(i32 %90, i64 %sub117), !dbg !7740
  br i1 %call118, label %if.end123, label %if.then119, !dbg !7732

if.then119:                                       ; preds = %cond.false116, %cond.true113
  %call120 = call i32* @__errno_location() #15, !dbg !7741
  %93 = load i32, i32* %call120, align 4, !dbg !7741, !ctir !5
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i64 0, i64 0)) #12, !dbg !7743
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !7744
  %call122 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !7744
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call121, i8* %call122), !dbg !7745
  store i1 false, i1* %retval, align 1, !dbg !7746
  br label %return, !dbg !7746

if.end123:                                        ; preds = %cond.false116, %cond.true113, %lor.lhs.false107
  %95 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7747
  %cmp124 = icmp eq i32 %95, 3, !dbg !7749
  br i1 %cmp124, label %land.lhs.true126, label %if.end138, !dbg !7750

land.lhs.true126:                                 ; preds = %if.end123
  %96 = load i64, i64* %dest_pos, align 8, !dbg !7751
  %97 = load i64, i64* %src_total_size.addr, align 8, !dbg !7752
  %cmp127 = icmp slt i64 %96, %97, !dbg !7753
  br i1 %cmp127, label %land.lhs.true129, label %if.end138, !dbg !7754

land.lhs.true129:                                 ; preds = %land.lhs.true126
  %98 = load i32, i32* %dest_fd.addr, align 4, !dbg !7755
  %99 = load i64, i64* %dest_pos, align 8, !dbg !7756
  %100 = load i64, i64* %src_total_size.addr, align 8, !dbg !7757
  %101 = load i64, i64* %dest_pos, align 8, !dbg !7758
  %sub130 = sub nsw i64 %100, %101, !dbg !7759
  %call131 = call i32 @punch_hole(i32 %98, i64 %99, i64 %sub130), !dbg !7760
  %cmp132 = icmp slt i32 %call131, 0, !dbg !7761
  br i1 %cmp132, label %if.then134, label %if.end138, !dbg !7762

if.then134:                                       ; preds = %land.lhs.true129
  %call135 = call i32* @__errno_location() #15, !dbg !7763
  %102 = load i32, i32* %call135, align 4, !dbg !7763, !ctir !5
  %call136 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0)) #12, !dbg !7765
  %103 = load i8*, i8** %dst_name.addr, align 8, !dbg !7766
  %call137 = call i8* @quotearg_style(i32 4, i8* %103), !dbg !7766
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %102, i8* %call136, i8* %call137), !dbg !7767
  store i1 false, i1* %retval, align 1, !dbg !7768
  br label %return, !dbg !7768

if.end138:                                        ; preds = %land.lhs.true129, %land.lhs.true126, %if.end123
  store i1 true, i1* %retval, align 1, !dbg !7769
  br label %return, !dbg !7769

return:                                           ; preds = %if.end138, %if.then134, %if.then119, %fail, %if.end5, %if.then4
  %104 = load i1, i1* %retval, align 1, !dbg !7770
  ret i1 %104, !dbg !7770
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @sparse_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i1 zeroext %punch_holes, i8* %src_name, i8* %dst_name, i64 %max_n_read, i64* %total_n_read, i8* %last_write_made_hole) #4 !dbg !7771 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %punch_holes.addr = alloca i8, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %max_n_read.addr = alloca i64, align 8
  %total_n_read.addr = alloca i64*, align 8
  %last_write_made_hole.addr = alloca i8*, align 8
  %make_hole = alloca i8, align 1, !ctir !139
  %psize = alloca i64, align 8, !ctir !292
  %n_read = alloca i64, align 8, !ctir !447
  %csize = alloca i64, align 8, !ctir !52
  %cbuf = alloca i8*, align 8, !ctir !7
  %pbuf = alloca i8*, align 8, !ctir !7
  %prev_hole = alloca i8, align 1, !ctir !139
  %transition = alloca i8, align 1, !ctir !139
  %last_chunk = alloca i8, align 1, !ctir !139
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7775, metadata !DIExpression()), !dbg !7776
  store i32 %dest_fd, i32* %dest_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7777, metadata !DIExpression()), !dbg !7778
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7779, metadata !DIExpression()), !dbg !7780
  store i64 %buf_size, i64* %buf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !7781, metadata !DIExpression()), !dbg !7782
  store i64 %hole_size, i64* %hole_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !7783, metadata !DIExpression()), !dbg !7784
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !7785, metadata !DIExpression()), !dbg !7786
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !7787, metadata !DIExpression()), !dbg !7788
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7789, metadata !DIExpression()), !dbg !7790
  store i64 %max_n_read, i64* %max_n_read.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %max_n_read.addr, metadata !7791, metadata !DIExpression()), !dbg !7792
  store i64* %total_n_read, i64** %total_n_read.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %total_n_read.addr, metadata !7793, metadata !DIExpression()), !dbg !7794
  store i8* %last_write_made_hole, i8** %last_write_made_hole.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %last_write_made_hole.addr, metadata !7795, metadata !DIExpression()), !dbg !7796
  %0 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !7797
  store i8 0, i8* %0, align 1, !dbg !7798, !ctir !139
  %1 = load i64*, i64** %total_n_read.addr, align 8, !dbg !7799
  store i64 0, i64* %1, align 8, !dbg !7800, !ctir !292
  call void @llvm.dbg.declare(metadata i8* %make_hole, metadata !7801, metadata !DIExpression()), !dbg !7802
  store i8 0, i8* %make_hole, align 1, !dbg !7802
  call void @llvm.dbg.declare(metadata i64* %psize, metadata !7803, metadata !DIExpression()), !dbg !7804
  store i64 0, i64* %psize, align 8, !dbg !7804
  br label %while.cond, !dbg !7805

while.cond:                                       ; preds = %while.end, %if.then4, %entry
  %2 = load i64, i64* %max_n_read.addr, align 8, !dbg !7806
  %tobool = icmp ne i64 %2, 0, !dbg !7805
  br i1 %tobool, label %while.body, label %while.end94, !dbg !7805

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !7807, metadata !DIExpression()), !dbg !7809
  %3 = load i32, i32* %src_fd.addr, align 4, !dbg !7810
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !7811
  %5 = load i64, i64* %max_n_read.addr, align 8, !dbg !7812
  %6 = load i64, i64* %buf_size.addr, align 8, !dbg !7812
  %cmp = icmp ult i64 %5, %6, !dbg !7812
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7812

cond.true:                                        ; preds = %while.body
  %7 = load i64, i64* %max_n_read.addr, align 8, !dbg !7812
  br label %cond.end, !dbg !7812

cond.false:                                       ; preds = %while.body
  %8 = load i64, i64* %buf_size.addr, align 8, !dbg !7812
  br label %cond.end, !dbg !7812

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !7812
  %call = call i64 @read(i32 %3, i8* %4, i64 %cond), !dbg !7813
  store i64 %call, i64* %n_read, align 8, !dbg !7809
  %9 = load i64, i64* %n_read, align 8, !dbg !7814
  %cmp1 = icmp slt i64 %9, 0, !dbg !7816
  br i1 %cmp1, label %if.then, label %if.end8, !dbg !7817

if.then:                                          ; preds = %cond.end
  %call2 = call i32* @__errno_location() #15, !dbg !7818
  %10 = load i32, i32* %call2, align 4, !dbg !7818, !ctir !5
  %cmp3 = icmp eq i32 %10, 4, !dbg !7821
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !7822

if.then4:                                         ; preds = %if.then
  br label %while.cond, !dbg !7823, !llvm.loop !7824

if.end:                                           ; preds = %if.then
  %call5 = call i32* @__errno_location() #15, !dbg !7826
  %11 = load i32, i32* %call5, align 4, !dbg !7826, !ctir !5
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i64 0, i64 0)) #12, !dbg !7827
  %12 = load i8*, i8** %src_name.addr, align 8, !dbg !7828
  %call7 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !7828
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %11, i8* %call6, i8* %call7), !dbg !7829
  store i1 false, i1* %retval, align 1, !dbg !7830
  br label %return, !dbg !7830

if.end8:                                          ; preds = %cond.end
  %13 = load i64, i64* %n_read, align 8, !dbg !7831
  %cmp9 = icmp eq i64 %13, 0, !dbg !7833
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7834

if.then10:                                        ; preds = %if.end8
  br label %while.end94, !dbg !7835

if.end11:                                         ; preds = %if.end8
  %14 = load i64, i64* %n_read, align 8, !dbg !7836
  %15 = load i64, i64* %max_n_read.addr, align 8, !dbg !7837
  %sub = sub i64 %15, %14, !dbg !7837
  store i64 %sub, i64* %max_n_read.addr, align 8, !dbg !7837
  %16 = load i64, i64* %n_read, align 8, !dbg !7838
  %17 = load i64*, i64** %total_n_read.addr, align 8, !dbg !7839
  %18 = load i64, i64* %17, align 8, !dbg !7840, !ctir !292
  %add = add nsw i64 %18, %16, !dbg !7840
  store i64 %add, i64* %17, align 8, !dbg !7840, !ctir !292
  call void @llvm.dbg.declare(metadata i64* %csize, metadata !7841, metadata !DIExpression()), !dbg !7842
  %19 = load i64, i64* %hole_size.addr, align 8, !dbg !7843
  %tobool12 = icmp ne i64 %19, 0, !dbg !7843
  br i1 %tobool12, label %cond.true13, label %cond.false14, !dbg !7843

cond.true13:                                      ; preds = %if.end11
  %20 = load i64, i64* %hole_size.addr, align 8, !dbg !7844
  br label %cond.end15, !dbg !7843

cond.false14:                                     ; preds = %if.end11
  %21 = load i64, i64* %buf_size.addr, align 8, !dbg !7845
  br label %cond.end15, !dbg !7843

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i64 [ %20, %cond.true13 ], [ %21, %cond.false14 ], !dbg !7843
  store i64 %cond16, i64* %csize, align 8, !dbg !7842
  call void @llvm.dbg.declare(metadata i8** %cbuf, metadata !7846, metadata !DIExpression()), !dbg !7847
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !7848
  store i8* %22, i8** %cbuf, align 8, !dbg !7847
  call void @llvm.dbg.declare(metadata i8** %pbuf, metadata !7849, metadata !DIExpression()), !dbg !7850
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !7851
  store i8* %23, i8** %pbuf, align 8, !dbg !7850
  br label %while.cond17, !dbg !7852

while.cond17:                                     ; preds = %if.end90, %cond.end15
  %24 = load i64, i64* %n_read, align 8, !dbg !7853
  %tobool18 = icmp ne i64 %24, 0, !dbg !7852
  br i1 %tobool18, label %while.body19, label %while.end, !dbg !7852

while.body19:                                     ; preds = %while.cond17
  call void @llvm.dbg.declare(metadata i8* %prev_hole, metadata !7854, metadata !DIExpression()), !dbg !7856
  %25 = load i8, i8* %make_hole, align 1, !dbg !7857
  %tobool20 = trunc i8 %25 to i1, !dbg !7857
  %frombool21 = zext i1 %tobool20 to i8, !dbg !7856
  store i8 %frombool21, i8* %prev_hole, align 1, !dbg !7856
  %26 = load i64, i64* %csize, align 8, !dbg !7858
  %27 = load i64, i64* %n_read, align 8, !dbg !7858
  %cmp22 = icmp ult i64 %26, %27, !dbg !7858
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !7858

cond.true23:                                      ; preds = %while.body19
  %28 = load i64, i64* %csize, align 8, !dbg !7858
  br label %cond.end25, !dbg !7858

cond.false24:                                     ; preds = %while.body19
  %29 = load i64, i64* %n_read, align 8, !dbg !7858
  br label %cond.end25, !dbg !7858

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i64 [ %28, %cond.true23 ], [ %29, %cond.false24 ], !dbg !7858
  store i64 %cond26, i64* %csize, align 8, !dbg !7859
  %30 = load i64, i64* %hole_size.addr, align 8, !dbg !7860
  %tobool27 = icmp ne i64 %30, 0, !dbg !7860
  br i1 %tobool27, label %land.lhs.true, label %if.end32, !dbg !7862

land.lhs.true:                                    ; preds = %cond.end25
  %31 = load i64, i64* %csize, align 8, !dbg !7863
  %tobool28 = icmp ne i64 %31, 0, !dbg !7863
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !7864

if.then29:                                        ; preds = %land.lhs.true
  %32 = load i8*, i8** %cbuf, align 8, !dbg !7865
  %33 = load i64, i64* %csize, align 8, !dbg !7866
  %call30 = call zeroext i1 @is_nul(i8* %32, i64 %33) #14, !dbg !7867
  %frombool31 = zext i1 %call30 to i8, !dbg !7868
  store i8 %frombool31, i8* %make_hole, align 1, !dbg !7868
  br label %if.end32, !dbg !7869

if.end32:                                         ; preds = %if.then29, %land.lhs.true, %cond.end25
  call void @llvm.dbg.declare(metadata i8* %transition, metadata !7870, metadata !DIExpression()), !dbg !7871
  %34 = load i8, i8* %make_hole, align 1, !dbg !7872
  %tobool33 = trunc i8 %34 to i1, !dbg !7872
  %conv = zext i1 %tobool33 to i32, !dbg !7872
  %35 = load i8, i8* %prev_hole, align 1, !dbg !7873
  %tobool34 = trunc i8 %35 to i1, !dbg !7873
  %conv35 = zext i1 %tobool34 to i32, !dbg !7873
  %cmp36 = icmp ne i32 %conv, %conv35, !dbg !7874
  br i1 %cmp36, label %land.rhs, label %land.end, !dbg !7875

land.rhs:                                         ; preds = %if.end32
  %36 = load i64, i64* %psize, align 8, !dbg !7876
  %tobool38 = icmp ne i64 %36, 0, !dbg !7875
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end32
  %37 = phi i1 [ false, %if.end32 ], [ %tobool38, %land.rhs ], !dbg !7877
  %frombool39 = zext i1 %37 to i8, !dbg !7871
  store i8 %frombool39, i8* %transition, align 1, !dbg !7871
  call void @llvm.dbg.declare(metadata i8* %last_chunk, metadata !7878, metadata !DIExpression()), !dbg !7879
  %38 = load i64, i64* %n_read, align 8, !dbg !7880
  %39 = load i64, i64* %csize, align 8, !dbg !7881
  %cmp40 = icmp eq i64 %38, %39, !dbg !7882
  br i1 %cmp40, label %land.lhs.true42, label %lor.rhs, !dbg !7883

land.lhs.true42:                                  ; preds = %land.end
  %40 = load i8, i8* %make_hole, align 1, !dbg !7884
  %tobool43 = trunc i8 %40 to i1, !dbg !7884
  br i1 %tobool43, label %lor.rhs, label %lor.end, !dbg !7885

lor.rhs:                                          ; preds = %land.lhs.true42, %land.end
  %41 = load i64, i64* %csize, align 8, !dbg !7886
  %tobool44 = icmp ne i64 %41, 0, !dbg !7887
  %lnot = xor i1 %tobool44, true, !dbg !7887
  br label %lor.end, !dbg !7885

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true42
  %42 = phi i1 [ true, %land.lhs.true42 ], [ %lnot, %lor.rhs ]
  %frombool45 = zext i1 %42 to i8, !dbg !7879
  store i8 %frombool45, i8* %last_chunk, align 1, !dbg !7879
  %43 = load i8, i8* %transition, align 1, !dbg !7888
  %tobool46 = trunc i8 %43 to i1, !dbg !7888
  br i1 %tobool46, label %if.then50, label %lor.lhs.false, !dbg !7890

lor.lhs.false:                                    ; preds = %lor.end
  %44 = load i8, i8* %last_chunk, align 1, !dbg !7891
  %tobool48 = trunc i8 %44 to i1, !dbg !7891
  br i1 %tobool48, label %if.then50, label %if.else80, !dbg !7892

if.then50:                                        ; preds = %lor.lhs.false, %lor.end
  %45 = load i8, i8* %transition, align 1, !dbg !7893
  %tobool51 = trunc i8 %45 to i1, !dbg !7893
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !7896

if.then52:                                        ; preds = %if.then50
  %46 = load i64, i64* %csize, align 8, !dbg !7897
  %47 = load i64, i64* %psize, align 8, !dbg !7898
  %add53 = add i64 %47, %46, !dbg !7898
  store i64 %add53, i64* %psize, align 8, !dbg !7898
  br label %if.end54, !dbg !7899

if.end54:                                         ; preds = %if.then52, %if.then50
  %48 = load i8, i8* %prev_hole, align 1, !dbg !7900
  %tobool55 = trunc i8 %48 to i1, !dbg !7900
  br i1 %tobool55, label %if.else, label %if.then56, !dbg !7902

if.then56:                                        ; preds = %if.end54
  %49 = load i32, i32* %dest_fd.addr, align 4, !dbg !7903
  %50 = load i8*, i8** %pbuf, align 8, !dbg !7906
  %51 = load i64, i64* %psize, align 8, !dbg !7907
  %call57 = call i64 @full_write(i32 %49, i8* %50, i64 %51), !dbg !7908
  %52 = load i64, i64* %psize, align 8, !dbg !7909
  %cmp58 = icmp ne i64 %call57, %52, !dbg !7910
  br i1 %cmp58, label %if.then60, label %if.end64, !dbg !7911

if.then60:                                        ; preds = %if.then56
  %call61 = call i32* @__errno_location() #15, !dbg !7912
  %53 = load i32, i32* %call61, align 4, !dbg !7912, !ctir !5
  %call62 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73, i64 0, i64 0)) #12, !dbg !7914
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !7915
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !7915
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call62, i8* %call63), !dbg !7916
  store i1 false, i1* %retval, align 1, !dbg !7917
  br label %return, !dbg !7917

if.end64:                                         ; preds = %if.then56
  br label %if.end69, !dbg !7918

if.else:                                          ; preds = %if.end54
  %55 = load i32, i32* %dest_fd.addr, align 4, !dbg !7919
  %56 = load i8*, i8** %dst_name.addr, align 8, !dbg !7922
  %57 = load i8, i8* %punch_holes.addr, align 1, !dbg !7923
  %tobool65 = trunc i8 %57 to i1, !dbg !7923
  %58 = load i64, i64* %psize, align 8, !dbg !7924
  %call66 = call zeroext i1 @create_hole(i32 %55, i8* %56, i1 zeroext %tobool65, i64 %58), !dbg !7925
  br i1 %call66, label %if.end68, label %if.then67, !dbg !7926

if.then67:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !7927
  br label %return, !dbg !7927

if.end68:                                         ; preds = %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end64
  %59 = load i8*, i8** %cbuf, align 8, !dbg !7928
  store i8* %59, i8** %pbuf, align 8, !dbg !7929
  %60 = load i64, i64* %csize, align 8, !dbg !7930
  store i64 %60, i64* %psize, align 8, !dbg !7931
  %61 = load i8, i8* %last_chunk, align 1, !dbg !7932
  %tobool70 = trunc i8 %61 to i1, !dbg !7932
  br i1 %tobool70, label %if.then71, label %if.end79, !dbg !7934

if.then71:                                        ; preds = %if.end69
  %62 = load i64, i64* %csize, align 8, !dbg !7935
  %tobool72 = icmp ne i64 %62, 0, !dbg !7935
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !7938

if.then73:                                        ; preds = %if.then71
  store i64 0, i64* %n_read, align 8, !dbg !7939
  br label %if.end74, !dbg !7940

if.end74:                                         ; preds = %if.then73, %if.then71
  %63 = load i8, i8* %transition, align 1, !dbg !7941
  %tobool75 = trunc i8 %63 to i1, !dbg !7941
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !7943

if.then76:                                        ; preds = %if.end74
  store i64 0, i64* %csize, align 8, !dbg !7944
  br label %if.end78, !dbg !7945

if.else77:                                        ; preds = %if.end74
  store i64 0, i64* %psize, align 8, !dbg !7946
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  br label %if.end79, !dbg !7947

if.end79:                                         ; preds = %if.end78, %if.end69
  br label %if.end90, !dbg !7948

if.else80:                                        ; preds = %lor.lhs.false
  %64 = load i64, i64* %psize, align 8, !dbg !7949
  %65 = load i64, i64* %csize, align 8, !dbg !7952
  %sub81 = sub i64 9223372036854775807, %65, !dbg !7953
  %cmp82 = icmp ule i64 %64, %sub81, !dbg !7954
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !7955

if.then84:                                        ; preds = %if.else80
  %66 = load i64, i64* %csize, align 8, !dbg !7956
  %67 = load i64, i64* %psize, align 8, !dbg !7957
  %add85 = add i64 %67, %66, !dbg !7957
  store i64 %add85, i64* %psize, align 8, !dbg !7957
  br label %if.end89, !dbg !7958

if.else86:                                        ; preds = %if.else80
  %call87 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74, i64 0, i64 0)) #12, !dbg !7959
  %68 = load i8*, i8** %src_name.addr, align 8, !dbg !7961
  %call88 = call i8* @quotearg_style(i32 4, i8* %68), !dbg !7961
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call87, i8* %call88), !dbg !7962
  store i1 false, i1* %retval, align 1, !dbg !7963
  br label %return, !dbg !7963

if.end89:                                         ; preds = %if.then84
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end79
  %69 = load i64, i64* %csize, align 8, !dbg !7964
  %70 = load i64, i64* %n_read, align 8, !dbg !7965
  %sub91 = sub i64 %70, %69, !dbg !7965
  store i64 %sub91, i64* %n_read, align 8, !dbg !7965
  %71 = load i64, i64* %csize, align 8, !dbg !7966
  %72 = load i8*, i8** %cbuf, align 8, !dbg !7967
  %add.ptr = getelementptr inbounds i8, i8* %72, i64 %71, !dbg !7967, !ctir !8
  store i8* %add.ptr, i8** %cbuf, align 8, !dbg !7967
  br label %while.cond17, !dbg !7852, !llvm.loop !7968

while.end:                                        ; preds = %while.cond17
  %73 = load i8, i8* %make_hole, align 1, !dbg !7970
  %tobool92 = trunc i8 %73 to i1, !dbg !7970
  %74 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !7971
  %frombool93 = zext i1 %tobool92 to i8, !dbg !7972
  store i8 %frombool93, i8* %74, align 1, !dbg !7972, !ctir !139
  br label %while.cond, !dbg !7805, !llvm.loop !7824

while.end94:                                      ; preds = %if.then10, %while.cond
  %75 = load i8, i8* %make_hole, align 1, !dbg !7973
  %tobool95 = trunc i8 %75 to i1, !dbg !7973
  br i1 %tobool95, label %land.lhs.true97, label %if.else101, !dbg !7975

land.lhs.true97:                                  ; preds = %while.end94
  %76 = load i32, i32* %dest_fd.addr, align 4, !dbg !7976
  %77 = load i8*, i8** %dst_name.addr, align 8, !dbg !7977
  %78 = load i8, i8* %punch_holes.addr, align 1, !dbg !7978
  %tobool98 = trunc i8 %78 to i1, !dbg !7978
  %79 = load i64, i64* %psize, align 8, !dbg !7979
  %call99 = call zeroext i1 @create_hole(i32 %76, i8* %77, i1 zeroext %tobool98, i64 %79), !dbg !7980
  br i1 %call99, label %if.else101, label %if.then100, !dbg !7981

if.then100:                                       ; preds = %land.lhs.true97
  store i1 false, i1* %retval, align 1, !dbg !7982
  br label %return, !dbg !7982

if.else101:                                       ; preds = %land.lhs.true97, %while.end94
  store i1 true, i1* %retval, align 1, !dbg !7983
  br label %return, !dbg !7983

return:                                           ; preds = %if.else101, %if.then100, %if.else86, %if.then67, %if.then60, %if.end
  %80 = load i1, i1* %retval, align 1, !dbg !7984
  ret i1 %80, !dbg !7984
}

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fchmod_or_lchmod(i32 %desc, i8* %name, i32 %mode) #4 !dbg !7985 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !7988, metadata !DIExpression()), !dbg !7989
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7990, metadata !DIExpression()), !dbg !7991
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7992, metadata !DIExpression()), !dbg !7993
  %0 = load i32, i32* %desc.addr, align 4, !dbg !7994
  %cmp = icmp sle i32 0, %0, !dbg !7996
  br i1 %cmp, label %if.then, label %if.end, !dbg !7997

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !7998
  %2 = load i32, i32* %mode.addr, align 4, !dbg !7999
  %call = call i32 @fchmod(i32 %1, i32 %2) #12, !dbg !8000
  store i32 %call, i32* %retval, align 4, !dbg !8001
  br label %return, !dbg !8001

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8002
  %4 = load i32, i32* %mode.addr, align 4, !dbg !8003
  %call1 = call i32 @chmod(i8* %3, i32 %4) #12, !dbg !8004
  store i32 %call1, i32* %retval, align 4, !dbg !8005
  br label %return, !dbg !8005

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8006
  ret i32 %5, !dbg !8006
}

; Function Attrs: nounwind
declare dso_local i32 @fchmod(i32, i32) #2

declare dso_local i64 @read(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_nul(i8* %buf, i64 %length) #9 !dbg !8007 {
entry:
  %retval = alloca i1, align 1
  %buf.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !449
  %word = alloca i8, align 1, !ctir !451
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8010, metadata !DIExpression()), !dbg !8011
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8012, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8014, metadata !DIExpression()), !dbg !8015
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !8016
  store i8* %0, i8** %p, align 8, !dbg !8015
  call void @llvm.dbg.declare(metadata i8* %word, metadata !8017, metadata !DIExpression()), !dbg !8018
  %1 = load i64, i64* %length.addr, align 8, !dbg !8019
  %tobool = icmp ne i64 %1, 0, !dbg !8019
  br i1 %tobool, label %if.end, label %if.then, !dbg !8021

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !8022
  br label %return, !dbg !8022

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !8023

while.cond:                                       ; preds = %if.end7, %if.end
  %2 = load i64, i64* %length.addr, align 8, !dbg !8024
  %and = and i64 %2, 0, !dbg !8024
  %tobool1 = icmp ne i64 %and, 0, !dbg !8023
  br i1 %tobool1, label %while.body, label %while.end, !dbg !8023

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %p, align 8, !dbg !8025
  %4 = load i8, i8* %3, align 1, !dbg !8028, !ctir !450
  %tobool2 = icmp ne i8 %4, 0, !dbg !8028
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8029

if.then3:                                         ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !8030
  br label %return, !dbg !8030

if.end4:                                          ; preds = %while.body
  %5 = load i8*, i8** %p, align 8, !dbg !8031
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8031, !ctir !450
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8031
  %6 = load i64, i64* %length.addr, align 8, !dbg !8032
  %dec = add i64 %6, -1, !dbg !8032
  store i64 %dec, i64* %length.addr, align 8, !dbg !8032
  %7 = load i64, i64* %length.addr, align 8, !dbg !8033
  %tobool5 = icmp ne i64 %7, 0, !dbg !8033
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8035

if.then6:                                         ; preds = %if.end4
  store i1 true, i1* %retval, align 1, !dbg !8036
  br label %return, !dbg !8036

if.end7:                                          ; preds = %if.end4
  br label %while.cond, !dbg !8023, !llvm.loop !8037

while.end:                                        ; preds = %while.cond
  br label %for.cond, !dbg !8039

for.cond:                                         ; preds = %if.end16, %while.end
  %8 = load i8*, i8** %p, align 8, !dbg !8040
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %word, i8* align 1 %8, i64 1, i1 false), !dbg !8044
  %9 = load i8, i8* %word, align 1, !dbg !8045
  %tobool8 = icmp ne i8 %9, 0, !dbg !8045
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8047

if.then9:                                         ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !8048
  br label %return, !dbg !8048

if.end10:                                         ; preds = %for.cond
  %10 = load i8*, i8** %p, align 8, !dbg !8049
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 1, !dbg !8049, !ctir !450
  store i8* %add.ptr, i8** %p, align 8, !dbg !8049
  %11 = load i64, i64* %length.addr, align 8, !dbg !8050
  %sub = sub i64 %11, 1, !dbg !8050
  store i64 %sub, i64* %length.addr, align 8, !dbg !8050
  %12 = load i64, i64* %length.addr, align 8, !dbg !8051
  %tobool11 = icmp ne i64 %12, 0, !dbg !8051
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8053

if.then12:                                        ; preds = %if.end10
  store i1 true, i1* %retval, align 1, !dbg !8054
  br label %return, !dbg !8054

if.end13:                                         ; preds = %if.end10
  %13 = load i64, i64* %length.addr, align 8, !dbg !8055
  %and14 = and i64 %13, 15, !dbg !8055
  %cmp = icmp eq i64 %and14, 0, !dbg !8057
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !8058

if.then15:                                        ; preds = %if.end13
  br label %for.end, !dbg !8059

if.end16:                                         ; preds = %if.end13
  br label %for.cond, !dbg !8060, !llvm.loop !8061

for.end:                                          ; preds = %if.then15
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !8064
  %15 = load i8*, i8** %p, align 8, !dbg !8065
  %16 = load i64, i64* %length.addr, align 8, !dbg !8066
  %call = call i32 @memcmp(i8* %14, i8* %15, i64 %16) #14, !dbg !8067
  %cmp17 = icmp eq i32 %call, 0, !dbg !8068
  store i1 %cmp17, i1* %retval, align 1, !dbg !8069
  br label %return, !dbg !8069

return:                                           ; preds = %for.end, %if.then12, %if.then9, %if.then6, %if.then3, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !8070
  ret i1 %17, !dbg !8070
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hole(i32 %fd, i8* %name, i1 zeroext %punch_holes, i64 %size) #4 !dbg !8071 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %punch_holes.addr = alloca i8, align 1
  %size.addr = alloca i64, align 8
  %file_end = alloca i64, align 8, !ctir !292
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8074, metadata !DIExpression()), !dbg !8075
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8076, metadata !DIExpression()), !dbg !8077
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !8078, metadata !DIExpression()), !dbg !8079
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8080, metadata !DIExpression()), !dbg !8081
  call void @llvm.dbg.declare(metadata i64* %file_end, metadata !8082, metadata !DIExpression()), !dbg !8083
  %0 = load i32, i32* %fd.addr, align 4, !dbg !8084
  %1 = load i64, i64* %size.addr, align 8, !dbg !8085
  %call = call i64 @lseek(i32 %0, i64 %1, i32 1) #12, !dbg !8086
  store i64 %call, i64* %file_end, align 8, !dbg !8083
  %2 = load i64, i64* %file_end, align 8, !dbg !8087
  %cmp = icmp slt i64 %2, 0, !dbg !8089
  br i1 %cmp, label %if.then, label %if.end, !dbg !8090

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !8091
  %3 = load i32, i32* %call1, align 4, !dbg !8091, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i64 0, i64 0)) #12, !dbg !8093
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8094
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !8094
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !8095
  store i1 false, i1* %retval, align 1, !dbg !8096
  br label %return, !dbg !8096

if.end:                                           ; preds = %entry
  %5 = load i8, i8* %punch_holes.addr, align 1, !dbg !8097
  %tobool = trunc i8 %5 to i1, !dbg !8097
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !8099

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %fd.addr, align 4, !dbg !8100
  %7 = load i64, i64* %file_end, align 8, !dbg !8101
  %8 = load i64, i64* %size.addr, align 8, !dbg !8102
  %sub = sub nsw i64 %7, %8, !dbg !8103
  %9 = load i64, i64* %size.addr, align 8, !dbg !8104
  %call4 = call i32 @punch_hole(i32 %6, i64 %sub, i64 %9), !dbg !8105
  %cmp5 = icmp slt i32 %call4, 0, !dbg !8106
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !8107

if.then6:                                         ; preds = %land.lhs.true
  %call7 = call i32* @__errno_location() #15, !dbg !8108
  %10 = load i32, i32* %call7, align 4, !dbg !8108, !ctir !5
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0)) #12, !dbg !8110
  %11 = load i8*, i8** %name.addr, align 8, !dbg !8111
  %call9 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !8111
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call8, i8* %call9), !dbg !8112
  store i1 false, i1* %retval, align 1, !dbg !8113
  br label %return, !dbg !8113

if.end10:                                         ; preds = %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !8114
  br label %return, !dbg !8114

return:                                           ; preds = %if.end10, %if.then6, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !8115
  ret i1 %12, !dbg !8115
}

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @punch_hole(i32 %fd, i64 %offset, i64 %length) #4 !dbg !8116 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %length.addr = alloca i64, align 8
  %ret = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8119, metadata !DIExpression()), !dbg !8120
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !8121, metadata !DIExpression()), !dbg !8122
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8123, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8125, metadata !DIExpression()), !dbg !8126
  store i32 0, i32* %ret, align 4, !dbg !8126
  %0 = load i32, i32* %fd.addr, align 4, !dbg !8127
  %1 = load i64, i64* %offset.addr, align 8, !dbg !8128
  %2 = load i64, i64* %length.addr, align 8, !dbg !8129
  %call = call i32 @fallocate(i32 %0, i32 3, i64 %1, i64 %2), !dbg !8130
  store i32 %call, i32* %ret, align 4, !dbg !8131
  %3 = load i32, i32* %ret, align 4, !dbg !8132
  %cmp = icmp slt i32 %3, 0, !dbg !8134
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8135

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !8136
  %4 = load i32, i32* %call1, align 4, !dbg !8136, !ctir !5
  %call2 = call zeroext i1 @is_ENOTSUP(i32 %4), !dbg !8137
  br i1 %call2, label %if.then, label %lor.lhs.false, !dbg !8138

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call3 = call i32* @__errno_location() #15, !dbg !8139
  %5 = load i32, i32* %call3, align 4, !dbg !8139, !ctir !5
  %cmp4 = icmp eq i32 %5, 38, !dbg !8140
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8141

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !8142
  br label %if.end, !dbg !8143

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !8144
  ret i32 %6, !dbg !8145
}

declare dso_local i32 @fallocate(i32, i32, i64, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %err) #4 !dbg !8146 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8147, metadata !DIExpression()), !dbg !8148
  %0 = load i32, i32* %err.addr, align 4, !dbg !8149
  %cmp = icmp eq i32 %0, 95, !dbg !8150
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8151

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !8151

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  ret i1 %1, !dbg !8152
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extent_scan_free(%struct.extent_scan* %scan) #4 !dbg !8153 {
entry:
  %scan.addr = alloca %struct.extent_scan*, align 8
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8157, metadata !DIExpression()), !dbg !8158
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8159
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !8160, !ctir !7459
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8160, !ctir !437
  %2 = bitcast %struct.extent_info* %1 to i8*, !dbg !8159
  call void @free(i8* %2) #12, !dbg !8161
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8162
  %ext_info1 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !8163, !ctir !7459
  store %struct.extent_info* null, %struct.extent_info** %ext_info1, align 8, !dbg !8164, !ctir !437
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8165
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 3, !dbg !8166, !ctir !7459
  store i64 0, i64* %ei_count, align 8, !dbg !8167, !ctir !52
  ret void, !dbg !8168
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @write_zeros(i32 %fd, i64 %n_bytes) #4 !dbg !464 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %n_bytes.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !52
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8169, metadata !DIExpression()), !dbg !8170
  store i64 %n_bytes, i64* %n_bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_bytes.addr, metadata !8171, metadata !DIExpression()), !dbg !8172
  %0 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8173
  %cmp = icmp eq i8* %0, null, !dbg !8175
  br i1 %cmp, label %if.then, label %if.end3, !dbg !8176

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @write_zeros.nz, align 8, !dbg !8177
  %call = call noalias i8* @calloc(i64 %1, i64 1) #12, !dbg !8179
  store i8* %call, i8** @write_zeros.zeros, align 8, !dbg !8180
  %2 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8181
  %cmp1 = icmp eq i8* %2, null, !dbg !8183
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !8184

if.then2:                                         ; preds = %if.then
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @write_zeros.fallback, i64 0, i64 0), i8** @write_zeros.zeros, align 8, !dbg !8185
  store i64 1024, i64* @write_zeros.nz, align 8, !dbg !8187
  br label %if.end, !dbg !8188

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !8189

if.end3:                                          ; preds = %if.end, %entry
  br label %while.cond, !dbg !8190

while.cond:                                       ; preds = %if.end8, %if.end3
  %3 = load i64, i64* %n_bytes.addr, align 8, !dbg !8191
  %tobool = icmp ne i64 %3, 0, !dbg !8190
  br i1 %tobool, label %while.body, label %while.end, !dbg !8190

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n, metadata !8192, metadata !DIExpression()), !dbg !8194
  %4 = load i64, i64* @write_zeros.nz, align 8, !dbg !8195
  %5 = load i64, i64* %n_bytes.addr, align 8, !dbg !8195
  %cmp4 = icmp ult i64 %4, %5, !dbg !8195
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !8195

cond.true:                                        ; preds = %while.body
  %6 = load i64, i64* @write_zeros.nz, align 8, !dbg !8195
  br label %cond.end, !dbg !8195

cond.false:                                       ; preds = %while.body
  %7 = load i64, i64* %n_bytes.addr, align 8, !dbg !8195
  br label %cond.end, !dbg !8195

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !8195
  store i64 %cond, i64* %n, align 8, !dbg !8194
  %8 = load i32, i32* %fd.addr, align 4, !dbg !8196
  %9 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8198
  %10 = load i64, i64* %n, align 8, !dbg !8199
  %call5 = call i64 @full_write(i32 %8, i8* %9, i64 %10), !dbg !8200
  %11 = load i64, i64* %n, align 8, !dbg !8201
  %cmp6 = icmp ne i64 %call5, %11, !dbg !8202
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8203

if.then7:                                         ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !8204
  br label %return, !dbg !8204

if.end8:                                          ; preds = %cond.end
  %12 = load i64, i64* %n, align 8, !dbg !8205
  %13 = load i64, i64* %n_bytes.addr, align 8, !dbg !8206
  %sub = sub i64 %13, %12, !dbg !8206
  store i64 %sub, i64* %n_bytes.addr, align 8, !dbg !8206
  br label %while.cond, !dbg !8190, !llvm.loop !8207

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !8209
  br label %return, !dbg !8209

return:                                           ; preds = %while.end, %if.then7
  %14 = load i1, i1* %retval, align 1, !dbg !8210
  ret i1 %14, !dbg !8210
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: nounwind
declare dso_local i8* @mempcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @writable_destination(i8* %file, i32 %mode) #4 !dbg !8211 {
entry:
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8214, metadata !DIExpression()), !dbg !8215
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8216, metadata !DIExpression()), !dbg !8217
  %0 = load i32, i32* %mode.addr, align 4, !dbg !8218
  %and = and i32 %0, 61440, !dbg !8218
  %cmp = icmp eq i32 %and, 40960, !dbg !8218
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8219

lor.lhs.false:                                    ; preds = %entry
  %call = call zeroext i1 @can_write_any_file(), !dbg !8220
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !8221

lor.rhs:                                          ; preds = %lor.lhs.false
  %1 = load i8*, i8** %file.addr, align 8, !dbg !8222
  %call1 = call i32 @euidaccess(i8* %1, i32 2) #12, !dbg !8223
  %cmp2 = icmp eq i32 %call1, 0, !dbg !8224
  br label %lor.end, !dbg !8221

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %2 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %2, !dbg !8225
}

; Function Attrs: nounwind
declare dso_local i32 @euidaccess(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i8* @canonicalize_file_name(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cp_options_default(%struct.cp_options* %x) #4 !dbg !8226 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !8227, metadata !DIExpression()), !dbg !8228
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8229
  %1 = bitcast %struct.cp_options* %0 to i8*, !dbg !8230
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 80, i1 false), !dbg !8230
  %call = call i32 @geteuid() #12, !dbg !8231
  %cmp = icmp eq i32 %call, 0, !dbg !8232
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8233
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !8234, !ctir !3753
  %frombool = zext i1 %cmp to i8, !dbg !8235
  store i8 %frombool, i8* %owner_privileges, align 1, !dbg !8235, !ctir !139
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8236
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 11, !dbg !8237, !ctir !3753
  %frombool1 = zext i1 %cmp to i8, !dbg !8238
  store i8 %frombool1, i8* %chown_privileges, align 2, !dbg !8238, !ctir !139
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8239
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 35, !dbg !8240, !ctir !3753
  store i32 -1, i32* %rename_errno, align 4, !dbg !8241, !ctir !5
  ret void, !dbg !8242
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_created(i64 %ino, i64 %dev) #4 !dbg !8243 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %probe = alloca %struct.Src_to_dest, align 8, !ctir !479
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !478
  store i64 %ino, i64* %ino.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8246, metadata !DIExpression()), !dbg !8247
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8248, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %probe, metadata !8250, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !8252, metadata !DIExpression()), !dbg !8253
  %0 = load i64, i64* %ino.addr, align 8, !dbg !8254
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 0, !dbg !8255, !ctir !479
  store i64 %0, i64* %st_ino, align 8, !dbg !8256, !ctir !256
  %1 = load i64, i64* %dev.addr, align 8, !dbg !8257
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 1, !dbg !8258, !ctir !479
  store i64 %1, i64* %st_dev, align 8, !dbg !8259, !ctir !259
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 2, !dbg !8260, !ctir !479
  store i8* null, i8** %name, align 8, !dbg !8261, !ctir !7
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8262
  %3 = bitcast %struct.Src_to_dest* %probe to i8*, !dbg !8263
  %call = call i8* @hash_delete(%struct.hash_table* %2, i8* %3), !dbg !8264
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8264
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %ent, align 8, !dbg !8265
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8266
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !8266
  br i1 %tobool, label %if.then, label %if.end, !dbg !8268

if.then:                                          ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8269
  %7 = bitcast %struct.Src_to_dest* %6 to i8*, !dbg !8269
  call void @src_to_dest_free(i8* %7), !dbg !8270
  br label %if.end, !dbg !8270

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8271
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @src_to_dest_free(i8* %x) #4 !dbg !8272 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !478
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8273, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !8275, metadata !DIExpression()), !dbg !8276
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8277
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8277
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !8276
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8278
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !8279, !ctir !479
  %3 = load i8*, i8** %name, align 8, !dbg !8279, !ctir !7
  call void @free(i8* %3) #12, !dbg !8280
  %4 = load i8*, i8** %x.addr, align 8, !dbg !8281
  call void @free(i8* %4) #12, !dbg !8282
  ret void, !dbg !8283
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @src_to_dest_lookup(i64 %ino, i64 %dev) #4 !dbg !8284 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest, align 8, !ctir !479
  %e = alloca %struct.Src_to_dest*, align 8, !ctir !484
  store i64 %ino, i64* %ino.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8287, metadata !DIExpression()), !dbg !8288
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8289, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %ent, metadata !8291, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %e, metadata !8293, metadata !DIExpression()), !dbg !8294
  %0 = load i64, i64* %ino.addr, align 8, !dbg !8295
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 0, !dbg !8296, !ctir !479
  store i64 %0, i64* %st_ino, align 8, !dbg !8297, !ctir !256
  %1 = load i64, i64* %dev.addr, align 8, !dbg !8298
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 1, !dbg !8299, !ctir !479
  store i64 %1, i64* %st_dev, align 8, !dbg !8300, !ctir !259
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8301
  %3 = bitcast %struct.Src_to_dest* %ent to i8*, !dbg !8302
  %call = call i8* @hash_lookup(%struct.hash_table* %2, i8* %3), !dbg !8303
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8303
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %e, align 8, !dbg !8304
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !8305
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !8305
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8305

cond.true:                                        ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !8306
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 2, !dbg !8307, !ctir !485
  %7 = load i8*, i8** %name, align 8, !dbg !8307, !ctir !7
  br label %cond.end, !dbg !8305

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8305

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ null, %cond.false ], !dbg !8305
  ret i8* %cond, !dbg !8308
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @remember_copied(i8* %name, i64 %ino, i64 %dev) #4 !dbg !8309 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !478
  %ent_from_table = alloca %struct.Src_to_dest*, align 8, !ctir !478
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8312, metadata !DIExpression()), !dbg !8313
  store i64 %ino, i64* %ino.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8314, metadata !DIExpression()), !dbg !8315
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8316, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !8318, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent_from_table, metadata !8320, metadata !DIExpression()), !dbg !8321
  %call = call noalias i8* @xmalloc(i64 24), !dbg !8322
  %0 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8322
  store %struct.Src_to_dest* %0, %struct.Src_to_dest** %ent, align 8, !dbg !8323
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8324
  %call1 = call noalias i8* @xstrdup(i8* %1), !dbg !8325
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8326
  %name2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !8327, !ctir !479
  store i8* %call1, i8** %name2, align 8, !dbg !8328, !ctir !7
  %3 = load i64, i64* %ino.addr, align 8, !dbg !8329
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8330
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !8331, !ctir !479
  store i64 %3, i64* %st_ino, align 8, !dbg !8332, !ctir !256
  %5 = load i64, i64* %dev.addr, align 8, !dbg !8333
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8334
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 1, !dbg !8335, !ctir !479
  store i64 %5, i64* %st_dev, align 8, !dbg !8336, !ctir !259
  %7 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8337
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8338
  %9 = bitcast %struct.Src_to_dest* %8 to i8*, !dbg !8338
  %call3 = call i8* @hash_insert(%struct.hash_table* %7, i8* %9), !dbg !8339
  %10 = bitcast i8* %call3 to %struct.Src_to_dest*, !dbg !8339
  store %struct.Src_to_dest* %10, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8340
  %11 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8341
  %cmp = icmp eq %struct.Src_to_dest* %11, null, !dbg !8343
  br i1 %cmp, label %if.then, label %if.end, !dbg !8344

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !8345
  unreachable, !dbg !8345

if.end:                                           ; preds = %entry
  %12 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8347
  %13 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8349
  %cmp4 = icmp ne %struct.Src_to_dest* %12, %13, !dbg !8350
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !8351

if.then5:                                         ; preds = %if.end
  %14 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8352
  %15 = bitcast %struct.Src_to_dest* %14 to i8*, !dbg !8352
  call void @src_to_dest_free(i8* %15), !dbg !8354
  %16 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8355
  %name6 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %16, i32 0, i32 2, !dbg !8356, !ctir !479
  %17 = load i8*, i8** %name6, align 8, !dbg !8356, !ctir !7
  store i8* %17, i8** %retval, align 8, !dbg !8357
  br label %return, !dbg !8357

if.end7:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !8358
  br label %return, !dbg !8358

return:                                           ; preds = %if.end7, %if.then5
  %18 = load i8*, i8** %retval, align 8, !dbg !8359
  ret i8* %18, !dbg !8359
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_init() #4 !dbg !8360 {
entry:
  %call = call %struct.hash_table* @hash_initialize(i64 103, %struct.hash_tuning* null, i64 (i8*, i64)* @src_to_dest_hash, i1 (i8*, i8*)* @src_to_dest_compare, void (i8*)* @src_to_dest_free), !dbg !8361
  store %struct.hash_table* %call, %struct.hash_table** @src_to_dest, align 8, !dbg !8362
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8363
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !8365
  br i1 %cmp, label %if.then, label %if.end, !dbg !8366

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !8367
  unreachable, !dbg !8367

if.end:                                           ; preds = %entry
  ret void, !dbg !8368
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @src_to_dest_hash(i8* %x, i64 %table_size) #4 !dbg !8369 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.Src_to_dest*, align 8, !ctir !484
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8370, metadata !DIExpression()), !dbg !8371
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !8372, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %p, metadata !8374, metadata !DIExpression()), !dbg !8375
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8376
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8376
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %p, align 8, !dbg !8375
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %p, align 8, !dbg !8377
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 0, !dbg !8378, !ctir !485
  %3 = load i64, i64* %st_ino, align 8, !dbg !8378, !ctir !256
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !8379
  %rem = urem i64 %3, %4, !dbg !8380
  ret i64 %rem, !dbg !8381
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @src_to_dest_compare(i8* %x, i8* %y) #4 !dbg !8382 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !484
  %b = alloca %struct.Src_to_dest*, align 8, !ctir !484
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8383, metadata !DIExpression()), !dbg !8384
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !8385, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !8387, metadata !DIExpression()), !dbg !8388
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8389
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8389
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !8388
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %b, metadata !8390, metadata !DIExpression()), !dbg !8391
  %2 = load i8*, i8** %y.addr, align 8, !dbg !8392
  %3 = bitcast i8* %2 to %struct.Src_to_dest*, !dbg !8392
  store %struct.Src_to_dest* %3, %struct.Src_to_dest** %b, align 8, !dbg !8391
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8393
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !8393, !ctir !485
  %5 = load i64, i64* %st_ino, align 8, !dbg !8393, !ctir !256
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !8393
  %st_ino1 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 0, !dbg !8393, !ctir !485
  %7 = load i64, i64* %st_ino1, align 8, !dbg !8393, !ctir !256
  %cmp = icmp eq i64 %5, %7, !dbg !8393
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8393

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8393
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %8, i32 0, i32 1, !dbg !8393, !ctir !485
  %9 = load i64, i64* %st_dev, align 8, !dbg !8393, !ctir !259
  %10 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !8393
  %st_dev2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %10, i32 0, i32 1, !dbg !8393, !ctir !485
  %11 = load i64, i64* %st_dev2, align 8, !dbg !8393, !ctir !259
  %cmp3 = icmp eq i64 %9, %11, !dbg !8393
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !8394
  %13 = zext i1 %12 to i64, !dbg !8393
  %cond = select i1 %12, i32 1, i32 0, !dbg !8393
  %tobool = icmp ne i32 %cond, 0, !dbg !8393
  ret i1 %tobool, !dbg !8395
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_all() #4 !dbg !8396 {
entry:
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8397
  call void @hash_free(%struct.hash_table* %0), !dbg !8398
  ret void, !dbg !8399
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extent_scan_init(i32 %src_fd, %struct.extent_scan* %scan) #4 !dbg !8400 {
entry:
  %src_fd.addr = alloca i32, align 4
  %scan.addr = alloca %struct.extent_scan*, align 8
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8413, metadata !DIExpression()), !dbg !8414
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8415, metadata !DIExpression()), !dbg !8416
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !8417
  %1 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8418
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %1, i32 0, i32 0, !dbg !8419, !ctir !8404
  store i32 %0, i32* %fd, align 8, !dbg !8420, !ctir !5
  %2 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8421
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %2, i32 0, i32 3, !dbg !8422, !ctir !8404
  store i64 0, i64* %ei_count, align 8, !dbg !8423, !ctir !52
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8424
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !8425, !ctir !8404
  store %struct.extent_info* null, %struct.extent_info** %ext_info, align 8, !dbg !8426, !ctir !1238
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8427
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !8428, !ctir !8404
  store i64 0, i64* %scan_start, align 8, !dbg !8429, !ctir !1237
  %5 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8430
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %5, i32 0, i32 4, !dbg !8431, !ctir !8404
  store i8 0, i8* %initial_scan_failed, align 8, !dbg !8432, !ctir !139
  %6 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8433
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %6, i32 0, i32 5, !dbg !8434, !ctir !8404
  store i8 0, i8* %hit_final_extent, align 1, !dbg !8435, !ctir !139
  %call = call zeroext i1 @extent_need_sync(), !dbg !8436
  %7 = zext i1 %call to i64, !dbg !8436
  %cond = select i1 %call, i32 1, i32 0, !dbg !8436
  %8 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8437
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %8, i32 0, i32 2, !dbg !8438, !ctir !8404
  store i32 %cond, i32* %fm_flags, align 8, !dbg !8439, !ctir !67
  ret void, !dbg !8440
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_need_sync() #4 !dbg !8441 {
entry:
  ret i1 true, !dbg !8442
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @extent_scan_read(%struct.extent_scan* %scan) #4 !dbg !8443 {
entry:
  %retval = alloca i1, align 1
  %scan.addr = alloca %struct.extent_scan*, align 8
  %si = alloca i32, align 4, !ctir !67
  %last_ei = alloca %struct.extent_info*, align 8, !ctir !1238
  %fiemap_buf = alloca %union.anon.16, align 8, !ctir !8446
  %fiemap = alloca %struct.fiemap*, align 8, !ctir !1244
  %fm_extents = alloca %struct.fiemap_extent*, align 8, !ctir !1268
  %prev_idx = alloca i64, align 8, !ctir !52
  %i = alloca i32, align 4, !ctir !67
  %new_logical = alloca i64, align 8, !ctir !1249
  %length_adjust = alloca i64, align 8, !ctir !1249
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8450, metadata !DIExpression()), !dbg !8451
  call void @llvm.dbg.declare(metadata i32* %si, metadata !8452, metadata !DIExpression()), !dbg !8453
  store i32 0, i32* %si, align 4, !dbg !8453
  call void @llvm.dbg.declare(metadata %struct.extent_info** %last_ei, metadata !8454, metadata !DIExpression()), !dbg !8455
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8456
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !8457, !ctir !8404
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8457, !ctir !1238
  store %struct.extent_info* %1, %struct.extent_info** %last_ei, align 8, !dbg !8455
  br label %while.body, !dbg !8458

while.body:                                       ; preds = %entry, %if.end162
  call void @llvm.dbg.declare(metadata %union.anon.16* %fiemap_buf, metadata !8459, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.declare(metadata %struct.fiemap** %fiemap, metadata !8462, metadata !DIExpression()), !dbg !8463
  %f = bitcast %union.anon.16* %fiemap_buf to %struct.fiemap*, !dbg !8464
  store %struct.fiemap* %f, %struct.fiemap** %fiemap, align 8, !dbg !8463
  call void @llvm.dbg.declare(metadata %struct.fiemap_extent** %fm_extents, metadata !8465, metadata !DIExpression()), !dbg !8466
  %2 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8467
  %fm_extents1 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %2, i32 0, i32 6, !dbg !8468, !ctir !1245
  %arrayidx = getelementptr inbounds [0 x %struct.fiemap_extent], [0 x %struct.fiemap_extent]* %fm_extents1, i64 0, i64 0, !dbg !8467, !ctir !1257
  store %struct.fiemap_extent* %arrayidx, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8466
  %3 = bitcast %union.anon.16* %fiemap_buf to i8*, !dbg !8469
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 4096, i1 false), !dbg !8469
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8470
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !8471, !ctir !8404
  %5 = load i64, i64* %scan_start, align 8, !dbg !8471, !ctir !1237
  %6 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8472
  %fm_start = getelementptr inbounds %struct.fiemap, %struct.fiemap* %6, i32 0, i32 0, !dbg !8473, !ctir !1245
  store i64 %5, i64* %fm_start, align 8, !dbg !8474, !ctir !1249
  %7 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8475
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %7, i32 0, i32 2, !dbg !8476, !ctir !8404
  %8 = load i32, i32* %fm_flags, align 8, !dbg !8476, !ctir !67
  %9 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8477
  %fm_flags2 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %9, i32 0, i32 2, !dbg !8478, !ctir !1245
  store i32 %8, i32* %fm_flags2, align 8, !dbg !8479, !ctir !1252
  %10 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8480
  %fm_extent_count = getelementptr inbounds %struct.fiemap, %struct.fiemap* %10, i32 0, i32 4, !dbg !8481, !ctir !1245
  store i32 72, i32* %fm_extent_count, align 8, !dbg !8482, !ctir !1252
  %11 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8483
  %scan_start3 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %11, i32 0, i32 1, !dbg !8484, !ctir !8404
  %12 = load i64, i64* %scan_start3, align 8, !dbg !8484, !ctir !1237
  %sub = sub i64 -1, %12, !dbg !8485
  %13 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8486
  %fm_length = getelementptr inbounds %struct.fiemap, %struct.fiemap* %13, i32 0, i32 1, !dbg !8487, !ctir !1245
  store i64 %sub, i64* %fm_length, align 8, !dbg !8488, !ctir !1249
  %14 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8489
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %14, i32 0, i32 0, !dbg !8491, !ctir !8404
  %15 = load i32, i32* %fd, align 8, !dbg !8491, !ctir !5
  %16 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8492
  %call = call i32 (i32, i64, ...) @ioctl(i32 %15, i64 3223348747, %struct.fiemap* %16) #12, !dbg !8493
  %cmp = icmp slt i32 %call, 0, !dbg !8494
  br i1 %cmp, label %if.then, label %if.end7, !dbg !8495

if.then:                                          ; preds = %while.body
  %17 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8496
  %scan_start4 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %17, i32 0, i32 1, !dbg !8499, !ctir !8404
  %18 = load i64, i64* %scan_start4, align 8, !dbg !8499, !ctir !1237
  %cmp5 = icmp eq i64 %18, 0, !dbg !8500
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !8501

if.then6:                                         ; preds = %if.then
  %19 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8502
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %19, i32 0, i32 4, !dbg !8503, !ctir !8404
  store i8 1, i8* %initial_scan_failed, align 8, !dbg !8504, !ctir !139
  br label %if.end, !dbg !8502

if.end:                                           ; preds = %if.then6, %if.then
  store i1 false, i1* %retval, align 1, !dbg !8505
  br label %return, !dbg !8505

if.end7:                                          ; preds = %while.body
  %20 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8506
  %fm_mapped_extents = getelementptr inbounds %struct.fiemap, %struct.fiemap* %20, i32 0, i32 3, !dbg !8508, !ctir !1245
  %21 = load i32, i32* %fm_mapped_extents, align 4, !dbg !8508, !ctir !1252
  %cmp8 = icmp eq i32 %21, 0, !dbg !8509
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !8510

if.then9:                                         ; preds = %if.end7
  %22 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8511
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 5, !dbg !8513, !ctir !8404
  store i8 1, i8* %hit_final_extent, align 1, !dbg !8514, !ctir !139
  %23 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8515
  %scan_start10 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %23, i32 0, i32 1, !dbg !8516, !ctir !8404
  %24 = load i64, i64* %scan_start10, align 8, !dbg !8516, !ctir !1237
  %cmp11 = icmp ne i64 %24, 0, !dbg !8517
  store i1 %cmp11, i1* %retval, align 1, !dbg !8518
  br label %return, !dbg !8518

if.end12:                                         ; preds = %if.end7
  %25 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8519
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %25, i32 0, i32 3, !dbg !8519, !ctir !8404
  %26 = load i64, i64* %ei_count, align 8, !dbg !8519, !ctir !52
  %27 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8519
  %fm_mapped_extents13 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %27, i32 0, i32 3, !dbg !8519, !ctir !1245
  %28 = load i32, i32* %fm_mapped_extents13, align 4, !dbg !8519, !ctir !1252
  %conv = zext i32 %28 to i64, !dbg !8519
  %sub14 = sub i64 -1, %conv, !dbg !8519
  %cmp15 = icmp ule i64 %26, %sub14, !dbg !8519
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !8519

cond.true:                                        ; preds = %if.end12
  br label %cond.end, !dbg !8519

cond.false:                                       ; preds = %if.end12
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.170, i64 0, i64 0), i32 127, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !8519
  unreachable, !dbg !8519

29:                                               ; No predecessors!
  br label %cond.end, !dbg !8519

cond.end:                                         ; preds = %29, %cond.true
  %30 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8520
  %fm_mapped_extents17 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %30, i32 0, i32 3, !dbg !8521, !ctir !1245
  %31 = load i32, i32* %fm_mapped_extents17, align 4, !dbg !8521, !ctir !1252
  %conv18 = zext i32 %31 to i64, !dbg !8520
  %32 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8522
  %ei_count19 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %32, i32 0, i32 3, !dbg !8523, !ctir !8404
  %33 = load i64, i64* %ei_count19, align 8, !dbg !8524, !ctir !52
  %add = add i64 %33, %conv18, !dbg !8524
  store i64 %add, i64* %ei_count19, align 8, !dbg !8524, !ctir !52
  call void @llvm.dbg.declare(metadata i64* %prev_idx, metadata !8525, metadata !DIExpression()), !dbg !8527
  %34 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8528
  %35 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8529
  %ext_info20 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %35, i32 0, i32 6, !dbg !8530, !ctir !8404
  %36 = load %struct.extent_info*, %struct.extent_info** %ext_info20, align 8, !dbg !8530, !ctir !1238
  %sub.ptr.lhs.cast = ptrtoint %struct.extent_info* %34 to i64, !dbg !8531
  %sub.ptr.rhs.cast = ptrtoint %struct.extent_info* %36 to i64, !dbg !8531
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8531
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !8531
  store i64 %sub.ptr.div, i64* %prev_idx, align 8, !dbg !8527
  %37 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8532
  %ext_info21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %37, i32 0, i32 6, !dbg !8533, !ctir !8404
  %38 = load %struct.extent_info*, %struct.extent_info** %ext_info21, align 8, !dbg !8533, !ctir !1238
  %39 = bitcast %struct.extent_info* %38 to i8*, !dbg !8532
  %40 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8534
  %ei_count22 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %40, i32 0, i32 3, !dbg !8535, !ctir !8404
  %41 = load i64, i64* %ei_count22, align 8, !dbg !8535, !ctir !52
  %call23 = call i8* @xnrealloc(i8* %39, i64 %41, i64 24), !dbg !8536
  %42 = bitcast i8* %call23 to %struct.extent_info*, !dbg !8536
  %43 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8537
  %ext_info24 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %43, i32 0, i32 6, !dbg !8538, !ctir !8404
  store %struct.extent_info* %42, %struct.extent_info** %ext_info24, align 8, !dbg !8539, !ctir !1238
  %44 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8540
  %ext_info25 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %44, i32 0, i32 6, !dbg !8541, !ctir !8404
  %45 = load %struct.extent_info*, %struct.extent_info** %ext_info25, align 8, !dbg !8541, !ctir !1238
  %46 = load i64, i64* %prev_idx, align 8, !dbg !8542
  %add.ptr = getelementptr inbounds %struct.extent_info, %struct.extent_info* %45, i64 %46, !dbg !8543, !ctir !1239
  store %struct.extent_info* %add.ptr, %struct.extent_info** %last_ei, align 8, !dbg !8544
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8545, metadata !DIExpression()), !dbg !8546
  store i32 0, i32* %i, align 4, !dbg !8546
  store i32 0, i32* %i, align 4, !dbg !8547
  br label %for.cond, !dbg !8549

for.cond:                                         ; preds = %for.inc, %cond.end
  %47 = load i32, i32* %i, align 4, !dbg !8550
  %48 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8552
  %fm_mapped_extents26 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %48, i32 0, i32 3, !dbg !8553, !ctir !1245
  %49 = load i32, i32* %fm_mapped_extents26, align 4, !dbg !8553, !ctir !1252
  %cmp27 = icmp ult i32 %47, %49, !dbg !8554
  br i1 %cmp27, label %for.body, label %for.end, !dbg !8555

for.body:                                         ; preds = %for.cond
  %50 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8556
  %51 = load i32, i32* %i, align 4, !dbg !8556
  %idxprom = zext i32 %51 to i64, !dbg !8556
  %arrayidx29 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %50, i64 %idxprom, !dbg !8556, !ctir !1268
  %fe_logical = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx29, i32 0, i32 0, !dbg !8556, !ctir !1258
  %52 = load i64, i64* %fe_logical, align 8, !dbg !8556, !ctir !1249
  %53 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8556
  %54 = load i32, i32* %i, align 4, !dbg !8556
  %idxprom30 = zext i32 %54 to i64, !dbg !8556
  %arrayidx31 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %53, i64 %idxprom30, !dbg !8556, !ctir !1268
  %fe_length = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx31, i32 0, i32 2, !dbg !8556, !ctir !1258
  %55 = load i64, i64* %fe_length, align 8, !dbg !8556, !ctir !1249
  %sub32 = sub i64 9223372036854775807, %55, !dbg !8556
  %cmp33 = icmp ule i64 %52, %sub32, !dbg !8556
  br i1 %cmp33, label %cond.true35, label %cond.false36, !dbg !8556

cond.true35:                                      ; preds = %for.body
  br label %cond.end37, !dbg !8556

cond.false36:                                     ; preds = %for.body
  call void @__assert_fail(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.171, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.170, i64 0, i64 0), i32 142, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !8556
  unreachable, !dbg !8556

56:                                               ; No predecessors!
  br label %cond.end37, !dbg !8556

cond.end37:                                       ; preds = %56, %cond.true35
  %57 = load i32, i32* %si, align 4, !dbg !8558
  %tobool = icmp ne i32 %57, 0, !dbg !8558
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8560

land.lhs.true:                                    ; preds = %cond.end37
  %58 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8561
  %ext_flags = getelementptr inbounds %struct.extent_info, %struct.extent_info* %58, i32 0, i32 2, !dbg !8562, !ctir !1239
  %59 = load i32, i32* %ext_flags, align 8, !dbg !8562, !ctir !67
  %60 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8563
  %61 = load i32, i32* %i, align 4, !dbg !8564
  %idxprom38 = zext i32 %61 to i64, !dbg !8563
  %arrayidx39 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %60, i64 %idxprom38, !dbg !8563, !ctir !1268
  %fe_flags = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx39, i32 0, i32 4, !dbg !8565, !ctir !1258
  %62 = load i32, i32* %fe_flags, align 8, !dbg !8565, !ctir !1252
  %and = and i32 %62, -2, !dbg !8566
  %cmp40 = icmp eq i32 %59, %and, !dbg !8567
  br i1 %cmp40, label %land.lhs.true42, label %if.else, !dbg !8568

land.lhs.true42:                                  ; preds = %land.lhs.true
  %63 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8569
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %63, i32 0, i32 0, !dbg !8570, !ctir !1239
  %64 = load i64, i64* %ext_logical, align 8, !dbg !8570, !ctir !1237
  %65 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8571
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %65, i32 0, i32 1, !dbg !8572, !ctir !1239
  %66 = load i64, i64* %ext_length, align 8, !dbg !8572, !ctir !1237
  %add43 = add nsw i64 %64, %66, !dbg !8573
  %67 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8574
  %68 = load i32, i32* %i, align 4, !dbg !8575
  %idxprom44 = zext i32 %68 to i64, !dbg !8574
  %arrayidx45 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %67, i64 %idxprom44, !dbg !8574, !ctir !1268
  %fe_logical46 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx45, i32 0, i32 0, !dbg !8576, !ctir !1258
  %69 = load i64, i64* %fe_logical46, align 8, !dbg !8576, !ctir !1249
  %cmp47 = icmp eq i64 %add43, %69, !dbg !8577
  br i1 %cmp47, label %if.then49, label %if.else, !dbg !8578

if.then49:                                        ; preds = %land.lhs.true42
  %70 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8579
  %71 = load i32, i32* %i, align 4, !dbg !8581
  %idxprom50 = zext i32 %71 to i64, !dbg !8579
  %arrayidx51 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %70, i64 %idxprom50, !dbg !8579, !ctir !1268
  %fe_length52 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx51, i32 0, i32 2, !dbg !8582, !ctir !1258
  %72 = load i64, i64* %fe_length52, align 8, !dbg !8582, !ctir !1249
  %73 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8583
  %ext_length53 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %73, i32 0, i32 1, !dbg !8584, !ctir !1239
  %74 = load i64, i64* %ext_length53, align 8, !dbg !8585, !ctir !1237
  %add54 = add i64 %74, %72, !dbg !8585
  store i64 %add54, i64* %ext_length53, align 8, !dbg !8585, !ctir !1237
  %75 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8586
  %76 = load i32, i32* %i, align 4, !dbg !8587
  %idxprom55 = zext i32 %76 to i64, !dbg !8586
  %arrayidx56 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %75, i64 %idxprom55, !dbg !8586, !ctir !1268
  %fe_flags57 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx56, i32 0, i32 4, !dbg !8588, !ctir !1258
  %77 = load i32, i32* %fe_flags57, align 8, !dbg !8588, !ctir !1252
  %78 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8589
  %ext_flags58 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %78, i32 0, i32 2, !dbg !8590, !ctir !1239
  store i32 %77, i32* %ext_flags58, align 8, !dbg !8591, !ctir !67
  br label %if.end128, !dbg !8592

if.else:                                          ; preds = %land.lhs.true42, %land.lhs.true, %cond.end37
  %79 = load i32, i32* %si, align 4, !dbg !8593
  %cmp59 = icmp eq i32 %79, 0, !dbg !8595
  br i1 %cmp59, label %land.lhs.true61, label %lor.lhs.false, !dbg !8596

land.lhs.true61:                                  ; preds = %if.else
  %80 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8597
  %scan_start62 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %80, i32 0, i32 1, !dbg !8598, !ctir !8404
  %81 = load i64, i64* %scan_start62, align 8, !dbg !8598, !ctir !1237
  %82 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8599
  %83 = load i32, i32* %i, align 4, !dbg !8600
  %idxprom63 = zext i32 %83 to i64, !dbg !8599
  %arrayidx64 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %82, i64 %idxprom63, !dbg !8599, !ctir !1268
  %fe_logical65 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx64, i32 0, i32 0, !dbg !8601, !ctir !1258
  %84 = load i64, i64* %fe_logical65, align 8, !dbg !8601, !ctir !1249
  %cmp66 = icmp ugt i64 %81, %84, !dbg !8602
  br i1 %cmp66, label %if.then78, label %lor.lhs.false, !dbg !8603

lor.lhs.false:                                    ; preds = %land.lhs.true61, %if.else
  %85 = load i32, i32* %si, align 4, !dbg !8604
  %tobool68 = icmp ne i32 %85, 0, !dbg !8604
  br i1 %tobool68, label %land.lhs.true69, label %if.else112, !dbg !8605

land.lhs.true69:                                  ; preds = %lor.lhs.false
  %86 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8606
  %ext_logical70 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %86, i32 0, i32 0, !dbg !8607, !ctir !1239
  %87 = load i64, i64* %ext_logical70, align 8, !dbg !8607, !ctir !1237
  %88 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8608
  %ext_length71 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %88, i32 0, i32 1, !dbg !8609, !ctir !1239
  %89 = load i64, i64* %ext_length71, align 8, !dbg !8609, !ctir !1237
  %add72 = add nsw i64 %87, %89, !dbg !8610
  %90 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8611
  %91 = load i32, i32* %i, align 4, !dbg !8612
  %idxprom73 = zext i32 %91 to i64, !dbg !8611
  %arrayidx74 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %90, i64 %idxprom73, !dbg !8611, !ctir !1268
  %fe_logical75 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx74, i32 0, i32 0, !dbg !8613, !ctir !1258
  %92 = load i64, i64* %fe_logical75, align 8, !dbg !8613, !ctir !1249
  %cmp76 = icmp ugt i64 %add72, %92, !dbg !8614
  br i1 %cmp76, label %if.then78, label %if.else112, !dbg !8615

if.then78:                                        ; preds = %land.lhs.true69, %land.lhs.true61
  call void @llvm.dbg.declare(metadata i64* %new_logical, metadata !8616, metadata !DIExpression()), !dbg !8618
  call void @llvm.dbg.declare(metadata i64* %length_adjust, metadata !8619, metadata !DIExpression()), !dbg !8620
  %93 = load i32, i32* %si, align 4, !dbg !8621
  %cmp79 = icmp eq i32 %93, 0, !dbg !8623
  br i1 %cmp79, label %if.then81, label %if.else83, !dbg !8624

if.then81:                                        ; preds = %if.then78
  %94 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8625
  %scan_start82 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %94, i32 0, i32 1, !dbg !8626, !ctir !8404
  %95 = load i64, i64* %scan_start82, align 8, !dbg !8626, !ctir !1237
  store i64 %95, i64* %new_logical, align 8, !dbg !8627
  br label %if.end87, !dbg !8628

if.else83:                                        ; preds = %if.then78
  %96 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8629
  %ext_logical84 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %96, i32 0, i32 0, !dbg !8631, !ctir !1239
  %97 = load i64, i64* %ext_logical84, align 8, !dbg !8631, !ctir !1237
  %98 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8632
  %ext_length85 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %98, i32 0, i32 1, !dbg !8633, !ctir !1239
  %99 = load i64, i64* %ext_length85, align 8, !dbg !8633, !ctir !1237
  %add86 = add nsw i64 %97, %99, !dbg !8634
  store i64 %add86, i64* %new_logical, align 8, !dbg !8635
  br label %if.end87

if.end87:                                         ; preds = %if.else83, %if.then81
  %100 = load i64, i64* %new_logical, align 8, !dbg !8636
  %101 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8637
  %102 = load i32, i32* %i, align 4, !dbg !8638
  %idxprom88 = zext i32 %102 to i64, !dbg !8637
  %arrayidx89 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %101, i64 %idxprom88, !dbg !8637, !ctir !1268
  %fe_logical90 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx89, i32 0, i32 0, !dbg !8639, !ctir !1258
  %103 = load i64, i64* %fe_logical90, align 8, !dbg !8639, !ctir !1249
  %sub91 = sub i64 %100, %103, !dbg !8640
  store i64 %sub91, i64* %length_adjust, align 8, !dbg !8641
  %104 = load i64, i64* %length_adjust, align 8, !dbg !8642
  %105 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8644
  %106 = load i32, i32* %i, align 4, !dbg !8645
  %idxprom92 = zext i32 %106 to i64, !dbg !8644
  %arrayidx93 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %105, i64 %idxprom92, !dbg !8644, !ctir !1268
  %fe_length94 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx93, i32 0, i32 2, !dbg !8646, !ctir !1258
  %107 = load i64, i64* %fe_length94, align 8, !dbg !8646, !ctir !1249
  %cmp95 = icmp ult i64 %104, %107, !dbg !8647
  br i1 %cmp95, label %if.then97, label %if.end104, !dbg !8648

if.then97:                                        ; preds = %if.end87
  %108 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8649
  %scan_start98 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %108, i32 0, i32 1, !dbg !8652, !ctir !8404
  %109 = load i64, i64* %scan_start98, align 8, !dbg !8652, !ctir !1237
  %cmp99 = icmp eq i64 %109, 0, !dbg !8653
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !8654

if.then101:                                       ; preds = %if.then97
  %110 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8655
  %initial_scan_failed102 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %110, i32 0, i32 4, !dbg !8656, !ctir !8404
  store i8 1, i8* %initial_scan_failed102, align 8, !dbg !8657, !ctir !139
  br label %if.end103, !dbg !8655

if.end103:                                        ; preds = %if.then101, %if.then97
  store i1 false, i1* %retval, align 1, !dbg !8658
  br label %return, !dbg !8658

if.end104:                                        ; preds = %if.end87
  %111 = load i64, i64* %new_logical, align 8, !dbg !8659
  %112 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8660
  %113 = load i32, i32* %i, align 4, !dbg !8661
  %idxprom105 = zext i32 %113 to i64, !dbg !8660
  %arrayidx106 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %112, i64 %idxprom105, !dbg !8660, !ctir !1268
  %fe_logical107 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx106, i32 0, i32 0, !dbg !8662, !ctir !1258
  store i64 %111, i64* %fe_logical107, align 8, !dbg !8663, !ctir !1249
  %114 = load i64, i64* %length_adjust, align 8, !dbg !8664
  %115 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8665
  %116 = load i32, i32* %i, align 4, !dbg !8666
  %idxprom108 = zext i32 %116 to i64, !dbg !8665
  %arrayidx109 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %115, i64 %idxprom108, !dbg !8665, !ctir !1268
  %fe_length110 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx109, i32 0, i32 2, !dbg !8667, !ctir !1258
  %117 = load i64, i64* %fe_length110, align 8, !dbg !8668, !ctir !1249
  %sub111 = sub i64 %117, %114, !dbg !8668
  store i64 %sub111, i64* %fe_length110, align 8, !dbg !8668, !ctir !1249
  %118 = load i32, i32* %i, align 4, !dbg !8669
  %dec = add i32 %118, -1, !dbg !8669
  store i32 %dec, i32* %i, align 4, !dbg !8669
  br label %for.inc, !dbg !8670

if.else112:                                       ; preds = %land.lhs.true69, %lor.lhs.false
  %119 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8671
  %ext_info113 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %119, i32 0, i32 6, !dbg !8673, !ctir !8404
  %120 = load %struct.extent_info*, %struct.extent_info** %ext_info113, align 8, !dbg !8673, !ctir !1238
  %121 = load i32, i32* %si, align 4, !dbg !8674
  %idx.ext = zext i32 %121 to i64, !dbg !8675
  %add.ptr114 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %120, i64 %idx.ext, !dbg !8675, !ctir !1239
  store %struct.extent_info* %add.ptr114, %struct.extent_info** %last_ei, align 8, !dbg !8676
  %122 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8677
  %123 = load i32, i32* %i, align 4, !dbg !8678
  %idxprom115 = zext i32 %123 to i64, !dbg !8677
  %arrayidx116 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %122, i64 %idxprom115, !dbg !8677, !ctir !1268
  %fe_logical117 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx116, i32 0, i32 0, !dbg !8679, !ctir !1258
  %124 = load i64, i64* %fe_logical117, align 8, !dbg !8679, !ctir !1249
  %125 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8680
  %ext_logical118 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %125, i32 0, i32 0, !dbg !8681, !ctir !1239
  store i64 %124, i64* %ext_logical118, align 8, !dbg !8682, !ctir !1237
  %126 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8683
  %127 = load i32, i32* %i, align 4, !dbg !8684
  %idxprom119 = zext i32 %127 to i64, !dbg !8683
  %arrayidx120 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %126, i64 %idxprom119, !dbg !8683, !ctir !1268
  %fe_length121 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx120, i32 0, i32 2, !dbg !8685, !ctir !1258
  %128 = load i64, i64* %fe_length121, align 8, !dbg !8685, !ctir !1249
  %129 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8686
  %ext_length122 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %129, i32 0, i32 1, !dbg !8687, !ctir !1239
  store i64 %128, i64* %ext_length122, align 8, !dbg !8688, !ctir !1237
  %130 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8689
  %131 = load i32, i32* %i, align 4, !dbg !8690
  %idxprom123 = zext i32 %131 to i64, !dbg !8689
  %arrayidx124 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %130, i64 %idxprom123, !dbg !8689, !ctir !1268
  %fe_flags125 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx124, i32 0, i32 4, !dbg !8691, !ctir !1258
  %132 = load i32, i32* %fe_flags125, align 8, !dbg !8691, !ctir !1252
  %133 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8692
  %ext_flags126 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %133, i32 0, i32 2, !dbg !8693, !ctir !1239
  store i32 %132, i32* %ext_flags126, align 8, !dbg !8694, !ctir !67
  %134 = load i32, i32* %si, align 4, !dbg !8695
  %inc = add i32 %134, 1, !dbg !8695
  store i32 %inc, i32* %si, align 4, !dbg !8695
  br label %if.end127

if.end127:                                        ; preds = %if.else112
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then49
  br label %for.inc, !dbg !8696

for.inc:                                          ; preds = %if.end128, %if.end104
  %135 = load i32, i32* %i, align 4, !dbg !8697
  %inc129 = add i32 %135, 1, !dbg !8697
  store i32 %inc129, i32* %i, align 4, !dbg !8697
  br label %for.cond, !dbg !8698, !llvm.loop !8699

for.end:                                          ; preds = %for.cond
  %136 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8701
  %ext_flags130 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %136, i32 0, i32 2, !dbg !8703, !ctir !1239
  %137 = load i32, i32* %ext_flags130, align 8, !dbg !8703, !ctir !67
  %and131 = and i32 %137, 1, !dbg !8704
  %tobool132 = icmp ne i32 %and131, 0, !dbg !8704
  br i1 %tobool132, label %if.then133, label %if.end135, !dbg !8705

if.then133:                                       ; preds = %for.end
  %138 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8706
  %hit_final_extent134 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %138, i32 0, i32 5, !dbg !8707, !ctir !8404
  store i8 1, i8* %hit_final_extent134, align 1, !dbg !8708, !ctir !139
  br label %if.end135, !dbg !8706

if.end135:                                        ; preds = %if.then133, %for.end
  %139 = load i32, i32* %si, align 4, !dbg !8709
  %cmp136 = icmp ugt i32 %139, 72, !dbg !8711
  br i1 %cmp136, label %land.lhs.true138, label %if.end147, !dbg !8712

land.lhs.true138:                                 ; preds = %if.end135
  %140 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8713
  %hit_final_extent139 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %140, i32 0, i32 5, !dbg !8714, !ctir !8404
  %141 = load i8, i8* %hit_final_extent139, align 1, !dbg !8714
  %tobool140 = trunc i8 %141 to i1, !dbg !8714, !ctir !139
  br i1 %tobool140, label %if.end147, label %if.then141, !dbg !8715

if.then141:                                       ; preds = %land.lhs.true138
  %142 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8716
  %ext_info142 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %142, i32 0, i32 6, !dbg !8717, !ctir !8404
  %143 = load %struct.extent_info*, %struct.extent_info** %ext_info142, align 8, !dbg !8717, !ctir !1238
  %144 = load i32, i32* %si, align 4, !dbg !8718
  %dec143 = add i32 %144, -1, !dbg !8718
  store i32 %dec143, i32* %si, align 4, !dbg !8718
  %idx.ext144 = zext i32 %dec143 to i64, !dbg !8719
  %add.ptr145 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %143, i64 %idx.ext144, !dbg !8719, !ctir !1239
  %add.ptr146 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %add.ptr145, i64 -1, !dbg !8720, !ctir !1239
  store %struct.extent_info* %add.ptr146, %struct.extent_info** %last_ei, align 8, !dbg !8721
  br label %if.end147, !dbg !8722

if.end147:                                        ; preds = %if.then141, %land.lhs.true138, %if.end135
  %145 = load i32, i32* %si, align 4, !dbg !8723
  %conv148 = zext i32 %145 to i64, !dbg !8723
  %146 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8724
  %ei_count149 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %146, i32 0, i32 3, !dbg !8725, !ctir !8404
  store i64 %conv148, i64* %ei_count149, align 8, !dbg !8726, !ctir !52
  %147 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8727
  %hit_final_extent150 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %147, i32 0, i32 5, !dbg !8729, !ctir !8404
  %148 = load i8, i8* %hit_final_extent150, align 1, !dbg !8729
  %tobool151 = trunc i8 %148 to i1, !dbg !8729, !ctir !139
  br i1 %tobool151, label %if.then152, label %if.else153, !dbg !8730

if.then152:                                       ; preds = %if.end147
  br label %while.end, !dbg !8731

if.else153:                                       ; preds = %if.end147
  %149 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8732
  %ext_logical154 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %149, i32 0, i32 0, !dbg !8733, !ctir !1239
  %150 = load i64, i64* %ext_logical154, align 8, !dbg !8733, !ctir !1237
  %151 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8734
  %ext_length155 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %151, i32 0, i32 1, !dbg !8735, !ctir !1239
  %152 = load i64, i64* %ext_length155, align 8, !dbg !8735, !ctir !1237
  %add156 = add nsw i64 %150, %152, !dbg !8736
  %153 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8737
  %scan_start157 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %153, i32 0, i32 1, !dbg !8738, !ctir !8404
  store i64 %add156, i64* %scan_start157, align 8, !dbg !8739, !ctir !1237
  br label %if.end158

if.end158:                                        ; preds = %if.else153
  %154 = load i32, i32* %si, align 4, !dbg !8740
  %cmp159 = icmp uge i32 %154, 72, !dbg !8742
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !8743

if.then161:                                       ; preds = %if.end158
  br label %while.end, !dbg !8744

if.end162:                                        ; preds = %if.end158
  br label %while.body, !dbg !8458, !llvm.loop !8745

while.end:                                        ; preds = %if.then161, %if.then152
  store i1 true, i1* %retval, align 1, !dbg !8747
  br label %return, !dbg !8747

return:                                           ; preds = %while.end, %if.end103, %if.then9, %if.end
  %155 = load i1, i1* %retval, align 1, !dbg !8748
  ret i1 %155, !dbg !8748
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_linkat(i32 %srcdir, i8* %srcname, i32 %dstdir, i8* %dstname, i32 %flags, i1 zeroext %force, i32 %linkat_errno) #4 !dbg !8749 {
entry:
  %retval = alloca i32, align 4
  %srcdir.addr = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %force.addr = alloca i8, align 1
  %linkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !492
  %dsttmp = alloca i8*, align 8, !ctir !7
  %arg = alloca %struct.link_arg, align 8, !ctir !498
  %err = alloca i32, align 4, !ctir !5
  store i32 %srcdir, i32* %srcdir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcdir.addr, metadata !8752, metadata !DIExpression()), !dbg !8753
  store i8* %srcname, i8** %srcname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !8754, metadata !DIExpression()), !dbg !8755
  store i32 %dstdir, i32* %dstdir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !8756, metadata !DIExpression()), !dbg !8757
  store i8* %dstname, i8** %dstname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !8758, metadata !DIExpression()), !dbg !8759
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8760, metadata !DIExpression()), !dbg !8761
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !8762, metadata !DIExpression()), !dbg !8763
  store i32 %linkat_errno, i32* %linkat_errno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %linkat_errno.addr, metadata !8764, metadata !DIExpression()), !dbg !8765
  %0 = load i32, i32* %linkat_errno.addr, align 4, !dbg !8766
  %cmp = icmp slt i32 %0, 0, !dbg !8768
  br i1 %cmp, label %if.then, label %if.end, !dbg !8769

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %srcdir.addr, align 4, !dbg !8770
  %2 = load i8*, i8** %srcname.addr, align 8, !dbg !8771
  %3 = load i32, i32* %dstdir.addr, align 4, !dbg !8772
  %4 = load i8*, i8** %dstname.addr, align 8, !dbg !8773
  %5 = load i32, i32* %flags.addr, align 4, !dbg !8774
  %call = call i32 @linkat(i32 %1, i8* %2, i32 %3, i8* %4, i32 %5) #12, !dbg !8775
  %cmp1 = icmp eq i32 %call, 0, !dbg !8776
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8775

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !8775

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !8777
  %6 = load i32, i32* %call2, align 4, !dbg !8777, !ctir !5
  br label %cond.end, !dbg !8775

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %6, %cond.false ], !dbg !8775
  store i32 %cond, i32* %linkat_errno.addr, align 4, !dbg !8778
  br label %if.end, !dbg !8779

if.end:                                           ; preds = %cond.end, %entry
  %7 = load i8, i8* %force.addr, align 1, !dbg !8780
  %tobool = trunc i8 %7 to i1, !dbg !8780
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !8782

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %linkat_errno.addr, align 4, !dbg !8783
  %cmp3 = icmp ne i32 %8, 17, !dbg !8784
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8785

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load i32, i32* %linkat_errno.addr, align 4, !dbg !8786
  store i32 %9, i32* %retval, align 4, !dbg !8787
  br label %return, !dbg !8787

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !8788, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !8790, metadata !DIExpression()), !dbg !8791
  %10 = load i8*, i8** %dstname.addr, align 8, !dbg !8792
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !8793, !ctir !492
  %call6 = call i8* @samedir_template(i8* %10, i8* %arraydecay), !dbg !8794
  store i8* %call6, i8** %dsttmp, align 8, !dbg !8791
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !8795
  %tobool7 = icmp ne i8* %11, null, !dbg !8795
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !8797

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #15, !dbg !8798
  %12 = load i32, i32* %call9, align 4, !dbg !8798, !ctir !5
  store i32 %12, i32* %retval, align 4, !dbg !8799
  br label %return, !dbg !8799

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.link_arg* %arg, metadata !8800, metadata !DIExpression()), !dbg !8801
  %srcdir11 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 0, !dbg !8802
  %13 = load i32, i32* %srcdir.addr, align 4, !dbg !8803
  store i32 %13, i32* %srcdir11, align 8, !dbg !8802
  %srcname12 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 1, !dbg !8802
  %14 = load i8*, i8** %srcname.addr, align 8, !dbg !8804
  store i8* %14, i8** %srcname12, align 8, !dbg !8802
  %dstdir13 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 2, !dbg !8802
  %15 = load i32, i32* %dstdir.addr, align 4, !dbg !8805
  store i32 %15, i32* %dstdir13, align 8, !dbg !8802
  %flags14 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 3, !dbg !8802
  %16 = load i32, i32* %flags.addr, align 4, !dbg !8806
  store i32 %16, i32* %flags14, align 4, !dbg !8802
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8807, metadata !DIExpression()), !dbg !8808
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !8809
  %18 = bitcast %struct.link_arg* %arg to i8*, !dbg !8811
  %call15 = call i32 @try_tempname_len(i8* %17, i32 0, i8* %18, i32 (i8*, i8*)* @try_link, i64 6), !dbg !8812
  %cmp16 = icmp ne i32 %call15, 0, !dbg !8813
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !8814

if.then17:                                        ; preds = %if.end10
  %call18 = call i32* @__errno_location() #15, !dbg !8815
  %19 = load i32, i32* %call18, align 4, !dbg !8815, !ctir !5
  store i32 %19, i32* %err, align 4, !dbg !8816
  br label %if.end27, !dbg !8817

if.else:                                          ; preds = %if.end10
  %20 = load i32, i32* %dstdir.addr, align 4, !dbg !8818
  %21 = load i8*, i8** %dsttmp, align 8, !dbg !8820
  %22 = load i32, i32* %dstdir.addr, align 4, !dbg !8821
  %23 = load i8*, i8** %dstname.addr, align 8, !dbg !8822
  %call19 = call i32 @renameat(i32 %20, i8* %21, i32 %22, i8* %23) #12, !dbg !8823
  %cmp20 = icmp eq i32 %call19, 0, !dbg !8824
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !8823

cond.true21:                                      ; preds = %if.else
  br label %cond.end24, !dbg !8823

cond.false22:                                     ; preds = %if.else
  %call23 = call i32* @__errno_location() #15, !dbg !8825
  %24 = load i32, i32* %call23, align 4, !dbg !8825, !ctir !5
  br label %cond.end24, !dbg !8823

cond.end24:                                       ; preds = %cond.false22, %cond.true21
  %cond25 = phi i32 [ -1, %cond.true21 ], [ %24, %cond.false22 ], !dbg !8823
  store i32 %cond25, i32* %err, align 4, !dbg !8826
  %25 = load i32, i32* %dstdir.addr, align 4, !dbg !8827
  %26 = load i8*, i8** %dsttmp, align 8, !dbg !8828
  %call26 = call i32 @unlinkat(i32 %25, i8* %26, i32 0) #12, !dbg !8829
  br label %if.end27

if.end27:                                         ; preds = %cond.end24, %if.then17
  %27 = load i8*, i8** %dsttmp, align 8, !dbg !8830
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !8832, !ctir !492
  %cmp29 = icmp ne i8* %27, %arraydecay28, !dbg !8833
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !8834

if.then30:                                        ; preds = %if.end27
  %28 = load i8*, i8** %dsttmp, align 8, !dbg !8835
  call void @free(i8* %28) #12, !dbg !8836
  br label %if.end31, !dbg !8836

if.end31:                                         ; preds = %if.then30, %if.end27
  %29 = load i32, i32* %err, align 4, !dbg !8837
  store i32 %29, i32* %retval, align 4, !dbg !8838
  br label %return, !dbg !8838

return:                                           ; preds = %if.end31, %if.then8, %if.then4
  %30 = load i32, i32* %retval, align 4, !dbg !8839
  ret i32 %30, !dbg !8839
}

; Function Attrs: nounwind
declare dso_local i32 @linkat(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @samedir_template(i8* %dstname, i8* %buf) #4 !dbg !8840 {
entry:
  %retval = alloca i8*, align 8
  %dstname.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %dstdirlen = alloca i64, align 8, !ctir !495
  %dsttmpsize = alloca i64, align 8, !ctir !52
  %dsttmp = alloca i8*, align 8, !ctir !7
  store i8* %dstname, i8** %dstname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !8843, metadata !DIExpression()), !dbg !8844
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8845, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.declare(metadata i64* %dstdirlen, metadata !8847, metadata !DIExpression()), !dbg !8848
  %0 = load i8*, i8** %dstname.addr, align 8, !dbg !8849
  %call = call i8* @last_component(i8* %0) #14, !dbg !8850
  %1 = load i8*, i8** %dstname.addr, align 8, !dbg !8851
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !8852
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !8852
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8852
  store i64 %sub.ptr.sub, i64* %dstdirlen, align 8, !dbg !8848
  call void @llvm.dbg.declare(metadata i64* %dsttmpsize, metadata !8853, metadata !DIExpression()), !dbg !8854
  %2 = load i64, i64* %dstdirlen, align 8, !dbg !8855
  %add = add i64 %2, 9, !dbg !8856
  store i64 %add, i64* %dsttmpsize, align 8, !dbg !8854
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !8857, metadata !DIExpression()), !dbg !8858
  %3 = load i64, i64* %dsttmpsize, align 8, !dbg !8859
  %cmp = icmp ule i64 %3, 256, !dbg !8861
  br i1 %cmp, label %if.then, label %if.else, !dbg !8862

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !8863
  store i8* %4, i8** %dsttmp, align 8, !dbg !8864
  br label %if.end3, !dbg !8865

if.else:                                          ; preds = %entry
  %5 = load i64, i64* %dsttmpsize, align 8, !dbg !8866
  %call1 = call noalias i8* @malloc(i64 %5) #12, !dbg !8868
  store i8* %call1, i8** %dsttmp, align 8, !dbg !8869
  %6 = load i8*, i8** %dsttmp, align 8, !dbg !8870
  %tobool = icmp ne i8* %6, null, !dbg !8870
  br i1 %tobool, label %if.end, label %if.then2, !dbg !8872

if.then2:                                         ; preds = %if.else
  %7 = load i8*, i8** %dsttmp, align 8, !dbg !8873
  store i8* %7, i8** %retval, align 8, !dbg !8874
  br label %return, !dbg !8874

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %dsttmp, align 8, !dbg !8875
  %9 = load i8*, i8** %dstname.addr, align 8, !dbg !8876
  %10 = load i64, i64* %dstdirlen, align 8, !dbg !8877
  %call4 = call i8* @mempcpy(i8* %8, i8* %9, i64 %10) #12, !dbg !8878
  %call5 = call i8* @strcpy(i8* %call4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @simple_pattern, i64 0, i64 0)) #12, !dbg !8879
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !8880
  store i8* %11, i8** %retval, align 8, !dbg !8881
  br label %return, !dbg !8881

return:                                           ; preds = %if.end3, %if.then2
  %12 = load i8*, i8** %retval, align 8, !dbg !8882
  ret i8* %12, !dbg !8882
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_link(i8* %dest, i8* %arg) #4 !dbg !8883 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.link_arg*, align 8, !ctir !497
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !8884, metadata !DIExpression()), !dbg !8885
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8886, metadata !DIExpression()), !dbg !8887
  call void @llvm.dbg.declare(metadata %struct.link_arg** %a, metadata !8888, metadata !DIExpression()), !dbg !8889
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8890
  %1 = bitcast i8* %0 to %struct.link_arg*, !dbg !8890
  store %struct.link_arg* %1, %struct.link_arg** %a, align 8, !dbg !8889
  %2 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !8891
  %srcdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %2, i32 0, i32 0, !dbg !8892, !ctir !498
  %3 = load i32, i32* %srcdir, align 8, !dbg !8892, !ctir !5
  %4 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !8893
  %srcname = getelementptr inbounds %struct.link_arg, %struct.link_arg* %4, i32 0, i32 1, !dbg !8894, !ctir !498
  %5 = load i8*, i8** %srcname, align 8, !dbg !8894, !ctir !113
  %6 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !8895
  %dstdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %6, i32 0, i32 2, !dbg !8896, !ctir !498
  %7 = load i32, i32* %dstdir, align 8, !dbg !8896, !ctir !5
  %8 = load i8*, i8** %dest.addr, align 8, !dbg !8897
  %9 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !8898
  %flags = getelementptr inbounds %struct.link_arg, %struct.link_arg* %9, i32 0, i32 3, !dbg !8899, !ctir !498
  %10 = load i32, i32* %flags, align 4, !dbg !8899, !ctir !5
  %call = call i32 @linkat(i32 %3, i8* %5, i32 %7, i8* %8, i32 %10) #12, !dbg !8900
  ret i32 %call, !dbg !8901
}

; Function Attrs: nounwind
declare dso_local i32 @renameat(i32, i8*, i32, i8*) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_symlinkat(i8* %srcname, i32 %dstdir, i8* %dstname, i1 zeroext %force, i32 %symlinkat_errno) #4 !dbg !8902 {
entry:
  %retval = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %force.addr = alloca i8, align 1
  %symlinkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !492
  %dsttmp = alloca i8*, align 8, !ctir !7
  %arg = alloca %struct.symlink_arg, align 8, !ctir !505
  %err = alloca i32, align 4, !ctir !5
  store i8* %srcname, i8** %srcname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !8905, metadata !DIExpression()), !dbg !8906
  store i32 %dstdir, i32* %dstdir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !8907, metadata !DIExpression()), !dbg !8908
  store i8* %dstname, i8** %dstname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !8909, metadata !DIExpression()), !dbg !8910
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !8911, metadata !DIExpression()), !dbg !8912
  store i32 %symlinkat_errno, i32* %symlinkat_errno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %symlinkat_errno.addr, metadata !8913, metadata !DIExpression()), !dbg !8914
  %0 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !8915
  %cmp = icmp slt i32 %0, 0, !dbg !8917
  br i1 %cmp, label %if.then, label %if.end, !dbg !8918

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %srcname.addr, align 8, !dbg !8919
  %2 = load i32, i32* %dstdir.addr, align 4, !dbg !8920
  %3 = load i8*, i8** %dstname.addr, align 8, !dbg !8921
  %call = call i32 @symlinkat(i8* %1, i32 %2, i8* %3) #12, !dbg !8922
  %cmp1 = icmp eq i32 %call, 0, !dbg !8923
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8922

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !8922

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !8924
  %4 = load i32, i32* %call2, align 4, !dbg !8924, !ctir !5
  br label %cond.end, !dbg !8922

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !8922
  store i32 %cond, i32* %symlinkat_errno.addr, align 4, !dbg !8925
  br label %if.end, !dbg !8926

if.end:                                           ; preds = %cond.end, %entry
  %5 = load i8, i8* %force.addr, align 1, !dbg !8927
  %tobool = trunc i8 %5 to i1, !dbg !8927
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !8929

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !8930
  %cmp3 = icmp ne i32 %6, 17, !dbg !8931
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8932

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !8933
  store i32 %7, i32* %retval, align 4, !dbg !8934
  br label %return, !dbg !8934

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !8935, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !8937, metadata !DIExpression()), !dbg !8938
  %8 = load i8*, i8** %dstname.addr, align 8, !dbg !8939
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !8940, !ctir !492
  %call6 = call i8* @samedir_template(i8* %8, i8* %arraydecay), !dbg !8941
  store i8* %call6, i8** %dsttmp, align 8, !dbg !8938
  %9 = load i8*, i8** %dsttmp, align 8, !dbg !8942
  %tobool7 = icmp ne i8* %9, null, !dbg !8942
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !8944

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #15, !dbg !8945
  %10 = load i32, i32* %call9, align 4, !dbg !8945, !ctir !5
  store i32 %10, i32* %retval, align 4, !dbg !8946
  br label %return, !dbg !8946

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.symlink_arg* %arg, metadata !8947, metadata !DIExpression()), !dbg !8948
  %srcname11 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 0, !dbg !8949
  %11 = load i8*, i8** %srcname.addr, align 8, !dbg !8950
  store i8* %11, i8** %srcname11, align 8, !dbg !8949
  %dstdir12 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 1, !dbg !8949
  %12 = load i32, i32* %dstdir.addr, align 4, !dbg !8951
  store i32 %12, i32* %dstdir12, align 8, !dbg !8949
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8952, metadata !DIExpression()), !dbg !8953
  %13 = load i8*, i8** %dsttmp, align 8, !dbg !8954
  %14 = bitcast %struct.symlink_arg* %arg to i8*, !dbg !8956
  %call13 = call i32 @try_tempname_len(i8* %13, i32 0, i8* %14, i32 (i8*, i8*)* @try_symlink, i64 6), !dbg !8957
  %cmp14 = icmp ne i32 %call13, 0, !dbg !8958
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !8959

if.then15:                                        ; preds = %if.end10
  %call16 = call i32* @__errno_location() #15, !dbg !8960
  %15 = load i32, i32* %call16, align 4, !dbg !8960, !ctir !5
  store i32 %15, i32* %err, align 4, !dbg !8961
  br label %if.end24, !dbg !8962

if.else:                                          ; preds = %if.end10
  %16 = load i32, i32* %dstdir.addr, align 4, !dbg !8963
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !8965
  %18 = load i32, i32* %dstdir.addr, align 4, !dbg !8966
  %19 = load i8*, i8** %dstname.addr, align 8, !dbg !8967
  %call17 = call i32 @renameat(i32 %16, i8* %17, i32 %18, i8* %19) #12, !dbg !8968
  %cmp18 = icmp ne i32 %call17, 0, !dbg !8969
  br i1 %cmp18, label %if.then19, label %if.else22, !dbg !8970

if.then19:                                        ; preds = %if.else
  %call20 = call i32* @__errno_location() #15, !dbg !8971
  %20 = load i32, i32* %call20, align 4, !dbg !8971, !ctir !5
  store i32 %20, i32* %err, align 4, !dbg !8973
  %21 = load i32, i32* %dstdir.addr, align 4, !dbg !8974
  %22 = load i8*, i8** %dsttmp, align 8, !dbg !8975
  %call21 = call i32 @unlinkat(i32 %21, i8* %22, i32 0) #12, !dbg !8976
  br label %if.end23, !dbg !8977

if.else22:                                        ; preds = %if.else
  store i32 -1, i32* %err, align 4, !dbg !8978
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then15
  %23 = load i8*, i8** %dsttmp, align 8, !dbg !8980
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !8982, !ctir !492
  %cmp26 = icmp ne i8* %23, %arraydecay25, !dbg !8983
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !8984

if.then27:                                        ; preds = %if.end24
  %24 = load i8*, i8** %dsttmp, align 8, !dbg !8985
  call void @free(i8* %24) #12, !dbg !8986
  br label %if.end28, !dbg !8986

if.end28:                                         ; preds = %if.then27, %if.end24
  %25 = load i32, i32* %err, align 4, !dbg !8987
  store i32 %25, i32* %retval, align 4, !dbg !8988
  br label %return, !dbg !8988

return:                                           ; preds = %if.end28, %if.then8, %if.then4
  %26 = load i32, i32* %retval, align 4, !dbg !8989
  ret i32 %26, !dbg !8989
}

; Function Attrs: nounwind
declare dso_local i32 @symlinkat(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_symlink(i8* %dest, i8* %arg) #4 !dbg !8990 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.symlink_arg*, align 8, !ctir !504
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !8991, metadata !DIExpression()), !dbg !8992
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8993, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.declare(metadata %struct.symlink_arg** %a, metadata !8995, metadata !DIExpression()), !dbg !8996
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8997
  %1 = bitcast i8* %0 to %struct.symlink_arg*, !dbg !8997
  store %struct.symlink_arg* %1, %struct.symlink_arg** %a, align 8, !dbg !8996
  %2 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !8998
  %srcname = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %2, i32 0, i32 0, !dbg !8999, !ctir !505
  %3 = load i8*, i8** %srcname, align 8, !dbg !8999, !ctir !113
  %4 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9000
  %dstdir = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %4, i32 0, i32 1, !dbg !9001, !ctir !505
  %5 = load i32, i32* %dstdir, align 8, !dbg !9001, !ctir !5
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !9002
  %call = call i32 @symlinkat(i8* %3, i32 %5, i8* %6) #12, !dbg !9003
  ret i32 %call, !dbg !9004
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @copy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !9005 {
entry:
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !9009, metadata !DIExpression()), !dbg !9010
  store i32 %source_desc, i32* %source_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !9011, metadata !DIExpression()), !dbg !9012
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !9013, metadata !DIExpression()), !dbg !9014
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !9015, metadata !DIExpression()), !dbg !9016
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9017, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9019, metadata !DIExpression()), !dbg !9020
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !9021
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !9022
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !9023
  %3 = load i32, i32* %dest_desc.addr, align 4, !dbg !9024
  %4 = load i32, i32* %mode.addr, align 4, !dbg !9025
  %call = call i32 @qcopy_acl(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4), !dbg !9026
  store i32 %call, i32* %ret, align 4, !dbg !9020
  %5 = load i32, i32* %ret, align 4, !dbg !9027
  switch i32 %5, label %sw.default [
    i32 -2, label %sw.bb
    i32 -1, label %sw.bb3
  ], !dbg !9028

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !9029
  %6 = load i32, i32* %call1, align 4, !dbg !9029, !ctir !5
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !9031
  %call2 = call i8* @quote(i8* %7), !dbg !9032
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.181, i64 0, i64 0), i8* %call2), !dbg !9033
  br label %sw.epilog, !dbg !9034

sw.bb3:                                           ; preds = %entry
  %call4 = call i32* @__errno_location() #15, !dbg !9035
  %8 = load i32, i32* %call4, align 4, !dbg !9035, !ctir !5
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.182, i64 0, i64 0)) #12, !dbg !9036
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !9037
  %call6 = call i8* @quote(i8* %9), !dbg !9038
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call5, i8* %call6), !dbg !9039
  br label %sw.epilog, !dbg !9040

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !9041

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb
  %10 = load i32, i32* %ret, align 4, !dbg !9042
  ret i32 %10, !dbg !9043
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !9044 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !5
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9048, metadata !DIExpression()), !dbg !9049
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !9050, metadata !DIExpression()), !dbg !9051
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9052, metadata !DIExpression()), !dbg !9053
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9054, metadata !DIExpression()), !dbg !9055
  %0 = load i8*, i8** %name.addr, align 8, !dbg !9056
  %1 = load i32, i32* %desc.addr, align 4, !dbg !9057
  %2 = load i32, i32* %mode.addr, align 4, !dbg !9058
  %call = call i32 @qset_acl(i8* %0, i32 %1, i32 %2), !dbg !9059
  store i32 %call, i32* %ret, align 4, !dbg !9055
  %3 = load i32, i32* %ret, align 4, !dbg !9060
  %cmp = icmp ne i32 %3, 0, !dbg !9062
  br i1 %cmp, label %if.then, label %if.end, !dbg !9063

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !9064
  %4 = load i32, i32* %call1, align 4, !dbg !9064, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.185, i64 0, i64 0)) #12, !dbg !9065
  %5 = load i8*, i8** %name.addr, align 8, !dbg !9066
  %call3 = call i8* @quote(i8* %5), !dbg !9067
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* %call2, i8* %call3), !dbg !9068
  br label %if.end, !dbg !9068

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !9069
  ret i32 %6, !dbg !9070
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @areadlink_with_size(i8* %file, i64 %size) #4 !dbg !9071 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %symlink_max = alloca i64, align 8, !ctir !52
  %INITIAL_LIMIT_BOUND = alloca i64, align 8, !ctir !52
  %initial_limit = alloca i64, align 8, !ctir !52
  %buf_size = alloca i64, align 8, !ctir !52
  %r = alloca i64, align 8, !ctir !529
  %link_length = alloca i64, align 8, !ctir !52
  %stackbuf = alloca [128 x i8], align 16, !ctir !1290
  %buf = alloca i8*, align 8, !ctir !7
  %buffer = alloca i8*, align 8, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !5
  %shrinked_buffer = alloca i8*, align 8, !ctir !7
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9075, metadata !DIExpression()), !dbg !9076
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9077, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.declare(metadata i64* %symlink_max, metadata !9079, metadata !DIExpression()), !dbg !9080
  store i64 1024, i64* %symlink_max, align 8, !dbg !9080
  call void @llvm.dbg.declare(metadata i64* %INITIAL_LIMIT_BOUND, metadata !9081, metadata !DIExpression()), !dbg !9082
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9082
  call void @llvm.dbg.declare(metadata i64* %initial_limit, metadata !9083, metadata !DIExpression()), !dbg !9084
  %0 = load i64, i64* %symlink_max, align 8, !dbg !9085
  %1 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9086
  %cmp = icmp ult i64 %0, %1, !dbg !9087
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9085

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %symlink_max, align 8, !dbg !9088
  %add = add i64 %2, 1, !dbg !9089
  br label %cond.end, !dbg !9085

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9090
  br label %cond.end, !dbg !9085

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !9085
  store i64 %cond, i64* %initial_limit, align 8, !dbg !9084
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !9091, metadata !DIExpression()), !dbg !9092
  %4 = load i64, i64* %size.addr, align 8, !dbg !9093
  %cmp1 = icmp eq i64 %4, 0, !dbg !9094
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !9093

cond.true2:                                       ; preds = %cond.end
  br label %cond.end10, !dbg !9093

cond.false3:                                      ; preds = %cond.end
  %5 = load i64, i64* %size.addr, align 8, !dbg !9095
  %6 = load i64, i64* %initial_limit, align 8, !dbg !9096
  %cmp4 = icmp ult i64 %5, %6, !dbg !9097
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !9095

cond.true5:                                       ; preds = %cond.false3
  %7 = load i64, i64* %size.addr, align 8, !dbg !9098
  %add6 = add i64 %7, 1, !dbg !9099
  br label %cond.end8, !dbg !9095

cond.false7:                                      ; preds = %cond.false3
  %8 = load i64, i64* %initial_limit, align 8, !dbg !9100
  br label %cond.end8, !dbg !9095

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi i64 [ %add6, %cond.true5 ], [ %8, %cond.false7 ], !dbg !9095
  br label %cond.end10, !dbg !9093

cond.end10:                                       ; preds = %cond.end8, %cond.true2
  %cond11 = phi i64 [ 128, %cond.true2 ], [ %cond9, %cond.end8 ], !dbg !9093
  store i64 %cond11, i64* %buf_size, align 8, !dbg !9092
  br label %while.body, !dbg !9101

while.body:                                       ; preds = %cond.end10, %if.end54
  call void @llvm.dbg.declare(metadata i64* %r, metadata !9102, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.declare(metadata i64* %link_length, metadata !9105, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.declare(metadata [128 x i8]* %stackbuf, metadata !9107, metadata !DIExpression()), !dbg !9108
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9109, metadata !DIExpression()), !dbg !9110
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %stackbuf, i64 0, i64 0, !dbg !9111, !ctir !1290
  store i8* %arraydecay, i8** %buf, align 8, !dbg !9110
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !9112, metadata !DIExpression()), !dbg !9113
  store i8* null, i8** %buffer, align 8, !dbg !9113
  %9 = load i64, i64* %size.addr, align 8, !dbg !9114
  %cmp12 = icmp eq i64 %9, 0, !dbg !9116
  br i1 %cmp12, label %land.lhs.true, label %if.then, !dbg !9117

land.lhs.true:                                    ; preds = %while.body
  %10 = load i64, i64* %buf_size, align 8, !dbg !9118
  %cmp13 = icmp eq i64 %10, 128, !dbg !9119
  br i1 %cmp13, label %if.end15, label %if.then, !dbg !9120

if.then:                                          ; preds = %land.lhs.true, %while.body
  %11 = load i64, i64* %buf_size, align 8, !dbg !9121
  %call = call noalias i8* @malloc(i64 %11) #12, !dbg !9123
  store i8* %call, i8** %buffer, align 8, !dbg !9124
  store i8* %call, i8** %buf, align 8, !dbg !9125
  %12 = load i8*, i8** %buffer, align 8, !dbg !9126
  %tobool = icmp ne i8* %12, null, !dbg !9126
  br i1 %tobool, label %if.end, label %if.then14, !dbg !9128

if.then14:                                        ; preds = %if.then
  store i8* null, i8** %retval, align 8, !dbg !9129
  br label %return, !dbg !9129

if.end:                                           ; preds = %if.then
  br label %if.end15, !dbg !9130

if.end15:                                         ; preds = %if.end, %land.lhs.true
  %13 = load i8*, i8** %file.addr, align 8, !dbg !9131
  %14 = load i8*, i8** %buf, align 8, !dbg !9132
  %15 = load i64, i64* %buf_size, align 8, !dbg !9133
  %call16 = call i64 @readlink(i8* %13, i8* %14, i64 %15) #12, !dbg !9134
  store i64 %call16, i64* %r, align 8, !dbg !9135
  %16 = load i64, i64* %r, align 8, !dbg !9136
  store i64 %16, i64* %link_length, align 8, !dbg !9137
  %17 = load i64, i64* %r, align 8, !dbg !9138
  %cmp17 = icmp slt i64 %17, 0, !dbg !9140
  br i1 %cmp17, label %land.lhs.true18, label %if.end24, !dbg !9141

land.lhs.true18:                                  ; preds = %if.end15
  %call19 = call i32* @__errno_location() #15, !dbg !9142
  %18 = load i32, i32* %call19, align 4, !dbg !9142, !ctir !5
  %cmp20 = icmp ne i32 %18, 34, !dbg !9143
  br i1 %cmp20, label %if.then21, label %if.end24, !dbg !9144

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !9145, metadata !DIExpression()), !dbg !9147
  %call22 = call i32* @__errno_location() #15, !dbg !9148
  %19 = load i32, i32* %call22, align 4, !dbg !9148, !ctir !5
  store i32 %19, i32* %saved_errno, align 4, !dbg !9147
  %20 = load i8*, i8** %buffer, align 8, !dbg !9149
  call void @free(i8* %20) #12, !dbg !9150
  %21 = load i32, i32* %saved_errno, align 4, !dbg !9151
  %call23 = call i32* @__errno_location() #15, !dbg !9152
  store i32 %21, i32* %call23, align 4, !dbg !9153, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !9154
  br label %return, !dbg !9154

if.end24:                                         ; preds = %land.lhs.true18, %if.end15
  %22 = load i64, i64* %link_length, align 8, !dbg !9155
  %23 = load i64, i64* %buf_size, align 8, !dbg !9157
  %cmp25 = icmp ult i64 %22, %23, !dbg !9158
  br i1 %cmp25, label %if.then26, label %if.end45, !dbg !9159

if.then26:                                        ; preds = %if.end24
  %24 = load i8*, i8** %buf, align 8, !dbg !9160
  %25 = load i64, i64* %link_length, align 8, !dbg !9162
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !9160, !ctir !7
  store i8 0, i8* %arrayidx, align 1, !dbg !9163
  %26 = load i8*, i8** %buffer, align 8, !dbg !9164
  %tobool27 = icmp ne i8* %26, null, !dbg !9164
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !9166

if.then28:                                        ; preds = %if.then26
  %27 = load i64, i64* %link_length, align 8, !dbg !9167
  %add29 = add i64 %27, 1, !dbg !9169
  %call30 = call noalias i8* @malloc(i64 %add29) #12, !dbg !9170
  store i8* %call30, i8** %buffer, align 8, !dbg !9171
  %28 = load i8*, i8** %buffer, align 8, !dbg !9172
  %tobool31 = icmp ne i8* %28, null, !dbg !9172
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !9174

if.then32:                                        ; preds = %if.then28
  %29 = load i8*, i8** %buffer, align 8, !dbg !9175
  %30 = load i8*, i8** %buf, align 8, !dbg !9176
  %31 = load i64, i64* %link_length, align 8, !dbg !9177
  %add33 = add i64 %31, 1, !dbg !9178
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 %add33, i1 false), !dbg !9179
  store i8* %29, i8** %retval, align 8, !dbg !9180
  br label %return, !dbg !9180

if.end34:                                         ; preds = %if.then28
  br label %if.end44, !dbg !9181

if.else:                                          ; preds = %if.then26
  %32 = load i64, i64* %link_length, align 8, !dbg !9182
  %add35 = add i64 %32, 1, !dbg !9184
  %33 = load i64, i64* %buf_size, align 8, !dbg !9185
  %cmp36 = icmp ult i64 %add35, %33, !dbg !9186
  br i1 %cmp36, label %if.then37, label %if.end43, !dbg !9187

if.then37:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %shrinked_buffer, metadata !9188, metadata !DIExpression()), !dbg !9190
  %34 = load i8*, i8** %buffer, align 8, !dbg !9191
  %35 = load i64, i64* %link_length, align 8, !dbg !9192
  %add38 = add i64 %35, 1, !dbg !9193
  %call39 = call i8* @realloc(i8* %34, i64 %add38) #12, !dbg !9194
  store i8* %call39, i8** %shrinked_buffer, align 8, !dbg !9190
  %36 = load i8*, i8** %shrinked_buffer, align 8, !dbg !9195
  %cmp40 = icmp ne i8* %36, null, !dbg !9197
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !9198

if.then41:                                        ; preds = %if.then37
  %37 = load i8*, i8** %shrinked_buffer, align 8, !dbg !9199
  store i8* %37, i8** %buffer, align 8, !dbg !9200
  br label %if.end42, !dbg !9201

if.end42:                                         ; preds = %if.then41, %if.then37
  br label %if.end43, !dbg !9202

if.end43:                                         ; preds = %if.end42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end34
  %38 = load i8*, i8** %buffer, align 8, !dbg !9203
  store i8* %38, i8** %retval, align 8, !dbg !9204
  br label %return, !dbg !9204

if.end45:                                         ; preds = %if.end24
  %39 = load i8*, i8** %buffer, align 8, !dbg !9205
  call void @free(i8* %39) #12, !dbg !9206
  %40 = load i64, i64* %buf_size, align 8, !dbg !9207
  %cmp46 = icmp ule i64 %40, 4611686018427387903, !dbg !9209
  br i1 %cmp46, label %if.then47, label %if.else48, !dbg !9210

if.then47:                                        ; preds = %if.end45
  %41 = load i64, i64* %buf_size, align 8, !dbg !9211
  %mul = mul i64 %41, 2, !dbg !9211
  store i64 %mul, i64* %buf_size, align 8, !dbg !9211
  br label %if.end54, !dbg !9212

if.else48:                                        ; preds = %if.end45
  %42 = load i64, i64* %buf_size, align 8, !dbg !9213
  %cmp49 = icmp ult i64 %42, 9223372036854775807, !dbg !9215
  br i1 %cmp49, label %if.then50, label %if.else51, !dbg !9216

if.then50:                                        ; preds = %if.else48
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !9217
  br label %if.end53, !dbg !9218

if.else51:                                        ; preds = %if.else48
  %call52 = call i32* @__errno_location() #15, !dbg !9219
  store i32 12, i32* %call52, align 4, !dbg !9221, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !9222
  br label %return, !dbg !9222

if.end53:                                         ; preds = %if.then50
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then47
  br label %while.body, !dbg !9101, !llvm.loop !9223

return:                                           ; preds = %if.else51, %if.end44, %if.then32, %if.then21, %if.then14
  %43 = load i8*, i8** %retval, align 8, !dbg !9225
  ret i8* %43, !dbg !9225
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_simple_backup_suffix(i8* %s) #4 !dbg !9226 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !9227, metadata !DIExpression()), !dbg !9228
  %0 = load i8*, i8** %s.addr, align 8, !dbg !9229
  %tobool = icmp ne i8* %0, null, !dbg !9229
  br i1 %tobool, label %if.end, label %if.then, !dbg !9231

if.then:                                          ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.192, i64 0, i64 0)) #12, !dbg !9232
  store i8* %call, i8** %s.addr, align 8, !dbg !9233
  br label %if.end, !dbg !9234

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !9235
  %tobool1 = icmp ne i8* %1, null, !dbg !9235
  br i1 %tobool1, label %land.lhs.true, label %cond.false, !dbg !9236

land.lhs.true:                                    ; preds = %if.end
  %2 = load i8*, i8** %s.addr, align 8, !dbg !9237
  %3 = load i8, i8* %2, align 1, !dbg !9238, !ctir !114
  %conv = sext i8 %3 to i32, !dbg !9238
  %tobool2 = icmp ne i32 %conv, 0, !dbg !9238
  br i1 %tobool2, label %land.lhs.true3, label %cond.false, !dbg !9239

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %s.addr, align 8, !dbg !9240
  %5 = load i8*, i8** %s.addr, align 8, !dbg !9241
  %call4 = call i8* @last_component(i8* %5) #14, !dbg !9242
  %cmp = icmp eq i8* %4, %call4, !dbg !9243
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9235

cond.true:                                        ; preds = %land.lhs.true3
  %6 = load i8*, i8** %s.addr, align 8, !dbg !9244
  br label %cond.end, !dbg !9235

cond.false:                                       ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  br label %cond.end, !dbg !9235

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.193, i64 0, i64 0), %cond.false ], !dbg !9235
  store i8* %cond, i8** @simple_backup_suffix, align 8, !dbg !9245
  ret void, !dbg !9246
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backupfile_internal(i32 %dir_fd, i8* %file, i32 %backup_type, i1 zeroext %rename) #4 !dbg !9247 {
entry:
  %retval = alloca i8*, align 8
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %rename.addr = alloca i8, align 1
  %base_offset = alloca i64, align 8, !ctir !495
  %filelen = alloca i64, align 8, !ctir !52
  %simple_backup_suffix_size = alloca i64, align 8, !ctir !52
  %backup_suffix_size_guess = alloca i64, align 8, !ctir !52
  %ssize = alloca i64, align 8, !ctir !529
  %s = alloca i8*, align 8, !ctir !7
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !530
  %sdir = alloca i32, align 4, !ctir !5
  %base_max = alloca i64, align 8, !ctir !52
  %flags = alloca i32, align 4, !ctir !67
  %e = alloca i32, align 4, !ctir !5
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9250, metadata !DIExpression()), !dbg !9251
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9252, metadata !DIExpression()), !dbg !9253
  store i32 %backup_type, i32* %backup_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9254, metadata !DIExpression()), !dbg !9255
  %frombool = zext i1 %rename to i8
  store i8 %frombool, i8* %rename.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rename.addr, metadata !9256, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.declare(metadata i64* %base_offset, metadata !9258, metadata !DIExpression()), !dbg !9259
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9260
  %call = call i8* @last_component(i8* %0) #14, !dbg !9261
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9262
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9263
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9263
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9263
  store i64 %sub.ptr.sub, i64* %base_offset, align 8, !dbg !9259
  call void @llvm.dbg.declare(metadata i64* %filelen, metadata !9264, metadata !DIExpression()), !dbg !9265
  %2 = load i64, i64* %base_offset, align 8, !dbg !9266
  %3 = load i8*, i8** %file.addr, align 8, !dbg !9267
  %4 = load i64, i64* %base_offset, align 8, !dbg !9268
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !9269, !ctir !114
  %call1 = call i64 @strlen(i8* %add.ptr) #14, !dbg !9270
  %add = add i64 %2, %call1, !dbg !9271
  store i64 %add, i64* %filelen, align 8, !dbg !9265
  %5 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9272
  %tobool = icmp ne i8* %5, null, !dbg !9272
  br i1 %tobool, label %if.end, label %if.then, !dbg !9274

if.then:                                          ; preds = %entry
  call void @set_simple_backup_suffix(i8* null), !dbg !9275
  br label %if.end, !dbg !9275

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i64* %simple_backup_suffix_size, metadata !9276, metadata !DIExpression()), !dbg !9277
  %6 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9278
  %call2 = call i64 @strlen(i8* %6) #14, !dbg !9279
  %add3 = add i64 %call2, 1, !dbg !9280
  store i64 %add3, i64* %simple_backup_suffix_size, align 8, !dbg !9277
  call void @llvm.dbg.declare(metadata i64* %backup_suffix_size_guess, metadata !9281, metadata !DIExpression()), !dbg !9282
  %7 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9283
  store i64 %7, i64* %backup_suffix_size_guess, align 8, !dbg !9282
  %8 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !9284
  %cmp = icmp ult i64 %8, 9, !dbg !9286
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !9287

if.then4:                                         ; preds = %if.end
  store i64 9, i64* %backup_suffix_size_guess, align 8, !dbg !9288
  br label %if.end5, !dbg !9289

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.dbg.declare(metadata i64* %ssize, metadata !9290, metadata !DIExpression()), !dbg !9291
  %9 = load i64, i64* %filelen, align 8, !dbg !9292
  %10 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !9293
  %add6 = add i64 %9, %10, !dbg !9294
  %add7 = add i64 %add6, 1, !dbg !9295
  store i64 %add7, i64* %ssize, align 8, !dbg !9291
  call void @llvm.dbg.declare(metadata i8** %s, metadata !9296, metadata !DIExpression()), !dbg !9297
  %11 = load i64, i64* %ssize, align 8, !dbg !9298
  %call8 = call noalias i8* @malloc(i64 %11) #12, !dbg !9299
  store i8* %call8, i8** %s, align 8, !dbg !9297
  %12 = load i8*, i8** %s, align 8, !dbg !9300
  %tobool9 = icmp ne i8* %12, null, !dbg !9300
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9302

if.then10:                                        ; preds = %if.end5
  %13 = load i8*, i8** %s, align 8, !dbg !9303
  store i8* %13, i8** %retval, align 8, !dbg !9304
  br label %return, !dbg !9304

if.end11:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !9305, metadata !DIExpression()), !dbg !9306
  store %struct.__dirstream* null, %struct.__dirstream** %dirp, align 8, !dbg !9306
  call void @llvm.dbg.declare(metadata i32* %sdir, metadata !9307, metadata !DIExpression()), !dbg !9308
  store i32 -1, i32* %sdir, align 4, !dbg !9308
  call void @llvm.dbg.declare(metadata i64* %base_max, metadata !9309, metadata !DIExpression()), !dbg !9310
  store i64 0, i64* %base_max, align 8, !dbg !9310
  br label %while.body, !dbg !9311

while.body:                                       ; preds = %if.end11, %if.end50
  %14 = load i8*, i8** %s, align 8, !dbg !9312
  %15 = load i8*, i8** %file.addr, align 8, !dbg !9314
  %16 = load i64, i64* %filelen, align 8, !dbg !9315
  %add12 = add i64 %16, 1, !dbg !9316
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %add12, i1 false), !dbg !9317
  %17 = load i32, i32* %backup_type.addr, align 4, !dbg !9318
  %cmp13 = icmp eq i32 %17, 1, !dbg !9320
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !9321

if.then14:                                        ; preds = %while.body
  %18 = load i8*, i8** %s, align 8, !dbg !9322
  %19 = load i64, i64* %filelen, align 8, !dbg !9323
  %add.ptr15 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !9324, !ctir !8
  %20 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9325
  %21 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr15, i8* align 1 %20, i64 %21, i1 false), !dbg !9327
  br label %if.end29, !dbg !9327

if.else:                                          ; preds = %while.body
  %22 = load i32, i32* %dir_fd.addr, align 4, !dbg !9328
  %23 = load i64, i64* %ssize, align 8, !dbg !9329
  %24 = load i64, i64* %filelen, align 8, !dbg !9330
  %25 = load i64, i64* %base_offset, align 8, !dbg !9331
  %call16 = call i32 @numbered_backup(i32 %22, i8** %s, i64 %23, i64 %24, i64 %25, %struct.__dirstream** %dirp, i32* %sdir), !dbg !9332
  switch i32 %call16, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb17
    i32 1, label %sw.bb22
    i32 3, label %sw.bb23
  ], !dbg !9333

sw.bb:                                            ; preds = %if.else
  br label %sw.epilog, !dbg !9334

sw.bb17:                                          ; preds = %if.else
  %26 = load i32, i32* %backup_type.addr, align 4, !dbg !9336
  %cmp18 = icmp eq i32 %26, 2, !dbg !9338
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !9339

if.then19:                                        ; preds = %sw.bb17
  store i32 1, i32* %backup_type.addr, align 4, !dbg !9340
  %27 = load i8*, i8** %s, align 8, !dbg !9342
  %28 = load i64, i64* %filelen, align 8, !dbg !9343
  %add.ptr20 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !9344, !ctir !8
  %29 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9345
  %30 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9346
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr20, i8* align 1 %29, i64 %30, i1 false), !dbg !9347
  br label %if.end21, !dbg !9348

if.end21:                                         ; preds = %if.then19, %sw.bb17
  br label %sw.bb22, !dbg !9349

sw.bb22:                                          ; preds = %if.else, %if.end21
  %31 = load i8*, i8** %s, align 8, !dbg !9350
  %32 = load i64, i64* %filelen, align 8, !dbg !9351
  %33 = load i32, i32* %sdir, align 4, !dbg !9352
  call void @check_extension(i8* %31, i64 %32, i8 signext 126, i32 %33, i64* %base_max), !dbg !9353
  br label %sw.epilog, !dbg !9354

sw.bb23:                                          ; preds = %if.else
  %34 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9355
  %tobool24 = icmp ne %struct.__dirstream* %34, null, !dbg !9355
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !9357

if.then25:                                        ; preds = %sw.bb23
  %35 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9358
  %call26 = call i32 @closedir(%struct.__dirstream* %35), !dbg !9359
  br label %if.end27, !dbg !9359

if.end27:                                         ; preds = %if.then25, %sw.bb23
  %36 = load i8*, i8** %s, align 8, !dbg !9360
  call void @free(i8* %36) #12, !dbg !9361
  %call28 = call i32* @__errno_location() #15, !dbg !9362
  store i32 12, i32* %call28, align 4, !dbg !9363, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !9364
  br label %return, !dbg !9364

sw.epilog:                                        ; preds = %if.else, %sw.bb22, %sw.bb
  br label %if.end29

if.end29:                                         ; preds = %sw.epilog, %if.then14
  %37 = load i8, i8* %rename.addr, align 1, !dbg !9365
  %tobool30 = trunc i8 %37 to i1, !dbg !9365
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !9367

if.then31:                                        ; preds = %if.end29
  br label %while.end, !dbg !9368

if.end32:                                         ; preds = %if.end29
  %38 = load i32, i32* %sdir, align 4, !dbg !9369
  %cmp33 = icmp slt i32 %38, 0, !dbg !9371
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !9372

if.then34:                                        ; preds = %if.end32
  store i32 -100, i32* %sdir, align 4, !dbg !9373
  store i64 0, i64* %base_offset, align 8, !dbg !9375
  br label %if.end35, !dbg !9376

if.end35:                                         ; preds = %if.then34, %if.end32
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !9377, metadata !DIExpression()), !dbg !9378
  %39 = load i32, i32* %backup_type.addr, align 4, !dbg !9379
  %cmp36 = icmp eq i32 %39, 1, !dbg !9380
  %40 = zext i1 %cmp36 to i64, !dbg !9379
  %cond = select i1 %cmp36, i32 0, i32 1, !dbg !9379
  store i32 %cond, i32* %flags, align 4, !dbg !9378
  %41 = load i8*, i8** %file.addr, align 8, !dbg !9381
  %42 = load i32, i32* %sdir, align 4, !dbg !9383
  %43 = load i8*, i8** %s, align 8, !dbg !9384
  %44 = load i64, i64* %base_offset, align 8, !dbg !9385
  %add.ptr37 = getelementptr inbounds i8, i8* %43, i64 %44, !dbg !9386, !ctir !8
  %45 = load i32, i32* %flags, align 4, !dbg !9387
  %call38 = call i32 @renameatu(i32 -100, i8* %41, i32 %42, i8* %add.ptr37, i32 %45), !dbg !9388
  %cmp39 = icmp eq i32 %call38, 0, !dbg !9389
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !9390

if.then40:                                        ; preds = %if.end35
  br label %while.end, !dbg !9391

if.end41:                                         ; preds = %if.end35
  call void @llvm.dbg.declare(metadata i32* %e, metadata !9392, metadata !DIExpression()), !dbg !9393
  %call42 = call i32* @__errno_location() #15, !dbg !9394
  %46 = load i32, i32* %call42, align 4, !dbg !9394, !ctir !5
  store i32 %46, i32* %e, align 4, !dbg !9393
  %47 = load i32, i32* %e, align 4, !dbg !9395
  %cmp43 = icmp ne i32 %47, 17, !dbg !9397
  br i1 %cmp43, label %if.then44, label %if.end50, !dbg !9398

if.then44:                                        ; preds = %if.end41
  %48 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9399
  %tobool45 = icmp ne %struct.__dirstream* %48, null, !dbg !9399
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !9402

if.then46:                                        ; preds = %if.then44
  %49 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9403
  %call47 = call i32 @closedir(%struct.__dirstream* %49), !dbg !9404
  br label %if.end48, !dbg !9404

if.end48:                                         ; preds = %if.then46, %if.then44
  %50 = load i8*, i8** %s, align 8, !dbg !9405
  call void @free(i8* %50) #12, !dbg !9406
  %51 = load i32, i32* %e, align 4, !dbg !9407
  %call49 = call i32* @__errno_location() #15, !dbg !9408
  store i32 %51, i32* %call49, align 4, !dbg !9409, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !9410
  br label %return, !dbg !9410

if.end50:                                         ; preds = %if.end41
  br label %while.body, !dbg !9311, !llvm.loop !9411

while.end:                                        ; preds = %if.then40, %if.then31
  %52 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9413
  %tobool51 = icmp ne %struct.__dirstream* %52, null, !dbg !9413
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !9415

if.then52:                                        ; preds = %while.end
  %53 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9416
  %call53 = call i32 @closedir(%struct.__dirstream* %53), !dbg !9417
  br label %if.end54, !dbg !9417

if.end54:                                         ; preds = %if.then52, %while.end
  %54 = load i8*, i8** %s, align 8, !dbg !9418
  store i8* %54, i8** %retval, align 8, !dbg !9419
  br label %return, !dbg !9419

return:                                           ; preds = %if.end54, %if.end48, %if.end27, %if.then10
  %55 = load i8*, i8** %retval, align 8, !dbg !9420
  ret i8* %55, !dbg !9420
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @numbered_backup(i32 %dir_fd, i8** %buffer, i64 %buffer_size, i64 %filelen, i64 %base_offset, %struct.__dirstream** %dirpp, i32* %pnew_fd) #4 !dbg !9421 {
entry:
  %retval = alloca i32, align 4
  %dir_fd.addr = alloca i32, align 4
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %filelen.addr = alloca i64, align 8
  %base_offset.addr = alloca i64, align 8
  %dirpp.addr = alloca %struct.__dirstream**, align 8
  %pnew_fd.addr = alloca i32*, align 8
  %result = alloca i32, align 4, !ctir !521
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !530
  %dp = alloca %struct.dirent*, align 8, !ctir !534
  %buf = alloca i8*, align 8, !ctir !7
  %versionlenmax = alloca i64, align 8, !ctir !52
  %base = alloca i8*, align 8, !ctir !7
  %baselen = alloca i64, align 8, !ctir !52
  %tmp = alloca [2 x i8], align 1, !ctir !264
  %p = alloca i8*, align 8, !ctir !113
  %q = alloca i8*, align 8, !ctir !7
  %all_9s = alloca i8, align 1, !ctir !139
  %versionlen = alloca i64, align 8, !ctir !52
  %new_buffer_size = alloca i64, align 8, !ctir !52
  %new_buf = alloca i8*, align 8, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9425, metadata !DIExpression()), !dbg !9426
  store i8** %buffer, i8*** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !9427, metadata !DIExpression()), !dbg !9428
  store i64 %buffer_size, i64* %buffer_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !9429, metadata !DIExpression()), !dbg !9430
  store i64 %filelen, i64* %filelen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !9431, metadata !DIExpression()), !dbg !9432
  store i64 %base_offset, i64* %base_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %base_offset.addr, metadata !9433, metadata !DIExpression()), !dbg !9434
  store %struct.__dirstream** %dirpp, %struct.__dirstream*** %dirpp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__dirstream*** %dirpp.addr, metadata !9435, metadata !DIExpression()), !dbg !9436
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !9437, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9439, metadata !DIExpression()), !dbg !9440
  store i32 2, i32* %result, align 4, !dbg !9440
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !9441, metadata !DIExpression()), !dbg !9442
  %0 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !9443
  %1 = load %struct.__dirstream*, %struct.__dirstream** %0, align 8, !dbg !9444, !ctir !530
  store %struct.__dirstream* %1, %struct.__dirstream** %dirp, align 8, !dbg !9442
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !9445, metadata !DIExpression()), !dbg !9446
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9447, metadata !DIExpression()), !dbg !9448
  %2 = load i8**, i8*** %buffer.addr, align 8, !dbg !9449
  %3 = load i8*, i8** %2, align 8, !dbg !9450, !ctir !7
  store i8* %3, i8** %buf, align 8, !dbg !9448
  call void @llvm.dbg.declare(metadata i64* %versionlenmax, metadata !9451, metadata !DIExpression()), !dbg !9452
  store i64 1, i64* %versionlenmax, align 8, !dbg !9452
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9453, metadata !DIExpression()), !dbg !9454
  %4 = load i8*, i8** %buf, align 8, !dbg !9455
  %5 = load i64, i64* %base_offset.addr, align 8, !dbg !9456
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !9457, !ctir !8
  store i8* %add.ptr, i8** %base, align 8, !dbg !9454
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !9458, metadata !DIExpression()), !dbg !9459
  %6 = load i8*, i8** %base, align 8, !dbg !9460
  %call = call i64 @base_len(i8* %6) #14, !dbg !9461
  store i64 %call, i64* %baselen, align 8, !dbg !9459
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9462
  %tobool = icmp ne %struct.__dirstream* %7, null, !dbg !9462
  br i1 %tobool, label %if.then, label %if.else, !dbg !9464

if.then:                                          ; preds = %entry
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9465
  call void @rewinddir(%struct.__dirstream* %8) #12, !dbg !9466
  br label %if.end12, !dbg !9466

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !9467, metadata !DIExpression()), !dbg !9469
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9470, !ctir !264
  %9 = load i8*, i8** %base, align 8, !dbg !9471
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %9, i64 2, i1 false), !dbg !9470
  %10 = load i8*, i8** %base, align 8, !dbg !9472
  %call1 = call i8* @strcpy(i8* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.194, i64 0, i64 0)) #12, !dbg !9473
  %11 = load i32, i32* %dir_fd.addr, align 4, !dbg !9474
  %12 = load i8*, i8** %buf, align 8, !dbg !9475
  %13 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !9476
  %call2 = call %struct.__dirstream* @opendirat(i32 %11, i8* %12, i32 0, i32* %13), !dbg !9477
  store %struct.__dirstream* %call2, %struct.__dirstream** %dirp, align 8, !dbg !9478
  %14 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9479
  %tobool3 = icmp ne %struct.__dirstream* %14, null, !dbg !9479
  br i1 %tobool3, label %if.end, label %land.lhs.true, !dbg !9481

land.lhs.true:                                    ; preds = %if.else
  %call4 = call i32* @__errno_location() #15, !dbg !9482
  %15 = load i32, i32* %call4, align 4, !dbg !9482, !ctir !5
  %cmp = icmp eq i32 %15, 12, !dbg !9483
  br i1 %cmp, label %if.then5, label %if.end, !dbg !9484

if.then5:                                         ; preds = %land.lhs.true
  store i32 3, i32* %result, align 4, !dbg !9485
  br label %if.end, !dbg !9486

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.else
  %16 = load i8*, i8** %base, align 8, !dbg !9487
  %arraydecay6 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9488, !ctir !264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %arraydecay6, i64 2, i1 false), !dbg !9488
  %17 = load i8*, i8** %base, align 8, !dbg !9489
  %18 = load i64, i64* %baselen, align 8, !dbg !9490
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !9491, !ctir !8
  %call8 = call i8* @strcpy(i8* %add.ptr7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.195, i64 0, i64 0)) #12, !dbg !9492
  %19 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9493
  %tobool9 = icmp ne %struct.__dirstream* %19, null, !dbg !9493
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9495

if.then10:                                        ; preds = %if.end
  %20 = load i32, i32* %result, align 4, !dbg !9496
  store i32 %20, i32* %retval, align 4, !dbg !9497
  br label %return, !dbg !9497

if.end11:                                         ; preds = %if.end
  %21 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9498
  %22 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !9499
  store %struct.__dirstream* %21, %struct.__dirstream** %22, align 8, !dbg !9500, !ctir !530
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  br label %while.cond, !dbg !9501

while.cond:                                       ; preds = %while.end, %if.then73, %if.then38, %if.then26, %if.then18, %if.end12
  %23 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9502
  %call13 = call %struct.dirent* @readdir(%struct.__dirstream* %23), !dbg !9503
  store %struct.dirent* %call13, %struct.dirent** %dp, align 8, !dbg !9504
  %cmp14 = icmp ne %struct.dirent* %call13, null, !dbg !9505
  br i1 %cmp14, label %while.body, label %while.end109, !dbg !9501

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9506, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.declare(metadata i8** %q, metadata !9509, metadata !DIExpression()), !dbg !9510
  call void @llvm.dbg.declare(metadata i8* %all_9s, metadata !9511, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.declare(metadata i64* %versionlen, metadata !9513, metadata !DIExpression()), !dbg !9514
  %24 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9515
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %24, i32 0, i32 4, !dbg !9515, !ctir !535
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !9515, !ctir !492
  %call16 = call i64 @strlen(i8* %arraydecay15) #14, !dbg !9515
  %25 = load i64, i64* %baselen, align 8, !dbg !9517
  %add = add i64 %25, 4, !dbg !9518
  %cmp17 = icmp ult i64 %call16, %add, !dbg !9519
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !9520

if.then18:                                        ; preds = %while.body
  br label %while.cond, !dbg !9521, !llvm.loop !9522

if.end19:                                         ; preds = %while.body
  %26 = load i8*, i8** %buf, align 8, !dbg !9524
  %27 = load i64, i64* %base_offset.addr, align 8, !dbg !9526
  %add.ptr20 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !9527, !ctir !8
  %28 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9528
  %d_name21 = getelementptr inbounds %struct.dirent, %struct.dirent* %28, i32 0, i32 4, !dbg !9529, !ctir !535
  %arraydecay22 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name21, i64 0, i64 0, !dbg !9528, !ctir !492
  %29 = load i64, i64* %baselen, align 8, !dbg !9530
  %add23 = add i64 %29, 2, !dbg !9531
  %call24 = call i32 @memcmp(i8* %add.ptr20, i8* %arraydecay22, i64 %add23) #14, !dbg !9532
  %cmp25 = icmp ne i32 %call24, 0, !dbg !9533
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !9534

if.then26:                                        ; preds = %if.end19
  br label %while.cond, !dbg !9535, !llvm.loop !9522

if.end27:                                         ; preds = %if.end19
  %30 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9536
  %d_name28 = getelementptr inbounds %struct.dirent, %struct.dirent* %30, i32 0, i32 4, !dbg !9537, !ctir !535
  %arraydecay29 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name28, i64 0, i64 0, !dbg !9536, !ctir !492
  %31 = load i64, i64* %baselen, align 8, !dbg !9538
  %add.ptr30 = getelementptr inbounds i8, i8* %arraydecay29, i64 %31, !dbg !9539, !ctir !8
  %add.ptr31 = getelementptr inbounds i8, i8* %add.ptr30, i64 2, !dbg !9540, !ctir !8
  store i8* %add.ptr31, i8** %p, align 8, !dbg !9541
  %32 = load i8*, i8** %p, align 8, !dbg !9542
  %33 = load i8, i8* %32, align 1, !dbg !9544, !ctir !114
  %conv = sext i8 %33 to i32, !dbg !9544
  %cmp32 = icmp sle i32 49, %conv, !dbg !9545
  br i1 %cmp32, label %land.lhs.true34, label %if.then38, !dbg !9546

land.lhs.true34:                                  ; preds = %if.end27
  %34 = load i8*, i8** %p, align 8, !dbg !9547
  %35 = load i8, i8* %34, align 1, !dbg !9548, !ctir !114
  %conv35 = sext i8 %35 to i32, !dbg !9548
  %cmp36 = icmp sle i32 %conv35, 57, !dbg !9549
  br i1 %cmp36, label %if.end39, label %if.then38, !dbg !9550

if.then38:                                        ; preds = %land.lhs.true34, %if.end27
  br label %while.cond, !dbg !9551, !llvm.loop !9522

if.end39:                                         ; preds = %land.lhs.true34
  %36 = load i8*, i8** %p, align 8, !dbg !9552
  %37 = load i8, i8* %36, align 1, !dbg !9553, !ctir !114
  %conv40 = sext i8 %37 to i32, !dbg !9553
  %cmp41 = icmp eq i32 %conv40, 57, !dbg !9554
  %frombool = zext i1 %cmp41 to i8, !dbg !9555
  store i8 %frombool, i8* %all_9s, align 1, !dbg !9555
  store i64 1, i64* %versionlen, align 8, !dbg !9556
  br label %for.cond, !dbg !9558

for.cond:                                         ; preds = %for.inc, %if.end39
  %38 = load i8*, i8** %p, align 8, !dbg !9559
  %39 = load i64, i64* %versionlen, align 8, !dbg !9559
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !9559, !ctir !113
  %40 = load i8, i8* %arrayidx, align 1, !dbg !9559
  %conv43 = sext i8 %40 to i32, !dbg !9559
  %sub = sub i32 %conv43, 48, !dbg !9559
  %cmp44 = icmp ule i32 %sub, 9, !dbg !9559
  br i1 %cmp44, label %for.body, label %for.end, !dbg !9561

for.body:                                         ; preds = %for.cond
  %41 = load i8*, i8** %p, align 8, !dbg !9562
  %42 = load i64, i64* %versionlen, align 8, !dbg !9563
  %arrayidx46 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !9562, !ctir !113
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !9562
  %conv47 = sext i8 %43 to i32, !dbg !9562
  %cmp48 = icmp eq i32 %conv47, 57, !dbg !9564
  %conv49 = zext i1 %cmp48 to i32, !dbg !9564
  %44 = load i8, i8* %all_9s, align 1, !dbg !9565
  %tobool50 = trunc i8 %44 to i1, !dbg !9565
  %conv51 = zext i1 %tobool50 to i32, !dbg !9565
  %and = and i32 %conv51, %conv49, !dbg !9565
  %tobool52 = icmp ne i32 %and, 0, !dbg !9565
  %frombool53 = zext i1 %tobool52 to i8, !dbg !9565
  store i8 %frombool53, i8* %all_9s, align 1, !dbg !9565
  br label %for.inc, !dbg !9566

for.inc:                                          ; preds = %for.body
  %45 = load i64, i64* %versionlen, align 8, !dbg !9567
  %inc = add i64 %45, 1, !dbg !9567
  store i64 %inc, i64* %versionlen, align 8, !dbg !9567
  br label %for.cond, !dbg !9568, !llvm.loop !9569

for.end:                                          ; preds = %for.cond
  %46 = load i8*, i8** %p, align 8, !dbg !9571
  %47 = load i64, i64* %versionlen, align 8, !dbg !9573
  %arrayidx54 = getelementptr inbounds i8, i8* %46, i64 %47, !dbg !9571, !ctir !113
  %48 = load i8, i8* %arrayidx54, align 1, !dbg !9571
  %conv55 = sext i8 %48 to i32, !dbg !9571
  %cmp56 = icmp eq i32 %conv55, 126, !dbg !9574
  br i1 %cmp56, label %land.lhs.true58, label %if.then73, !dbg !9575

land.lhs.true58:                                  ; preds = %for.end
  %49 = load i8*, i8** %p, align 8, !dbg !9576
  %50 = load i64, i64* %versionlen, align 8, !dbg !9577
  %add59 = add i64 %50, 1, !dbg !9578
  %arrayidx60 = getelementptr inbounds i8, i8* %49, i64 %add59, !dbg !9576, !ctir !113
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !9576
  %tobool61 = icmp ne i8 %51, 0, !dbg !9576
  br i1 %tobool61, label %if.then73, label %land.lhs.true62, !dbg !9579

land.lhs.true62:                                  ; preds = %land.lhs.true58
  %52 = load i64, i64* %versionlenmax, align 8, !dbg !9580
  %53 = load i64, i64* %versionlen, align 8, !dbg !9581
  %cmp63 = icmp ult i64 %52, %53, !dbg !9582
  br i1 %cmp63, label %if.end74, label %lor.lhs.false, !dbg !9583

lor.lhs.false:                                    ; preds = %land.lhs.true62
  %54 = load i64, i64* %versionlenmax, align 8, !dbg !9584
  %55 = load i64, i64* %versionlen, align 8, !dbg !9585
  %cmp65 = icmp eq i64 %54, %55, !dbg !9586
  br i1 %cmp65, label %land.lhs.true67, label %if.then73, !dbg !9587

land.lhs.true67:                                  ; preds = %lor.lhs.false
  %56 = load i8*, i8** %buf, align 8, !dbg !9588
  %57 = load i64, i64* %filelen.addr, align 8, !dbg !9589
  %add.ptr68 = getelementptr inbounds i8, i8* %56, i64 %57, !dbg !9590, !ctir !8
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr68, i64 2, !dbg !9591, !ctir !8
  %58 = load i8*, i8** %p, align 8, !dbg !9592
  %59 = load i64, i64* %versionlen, align 8, !dbg !9593
  %call70 = call i32 @memcmp(i8* %add.ptr69, i8* %58, i64 %59) #14, !dbg !9594
  %cmp71 = icmp sle i32 %call70, 0, !dbg !9595
  br i1 %cmp71, label %if.end74, label %if.then73, !dbg !9596

if.then73:                                        ; preds = %land.lhs.true67, %lor.lhs.false, %land.lhs.true58, %for.end
  br label %while.cond, !dbg !9597, !llvm.loop !9522

if.end74:                                         ; preds = %land.lhs.true67, %land.lhs.true62
  %60 = load i8, i8* %all_9s, align 1, !dbg !9598
  %tobool75 = trunc i8 %60 to i1, !dbg !9598
  %conv76 = zext i1 %tobool75 to i64, !dbg !9598
  %61 = load i64, i64* %versionlen, align 8, !dbg !9599
  %add77 = add i64 %conv76, %61, !dbg !9600
  store i64 %add77, i64* %versionlenmax, align 8, !dbg !9601
  %62 = load i8, i8* %all_9s, align 1, !dbg !9602
  %tobool78 = trunc i8 %62 to i1, !dbg !9602
  %63 = zext i1 %tobool78 to i64, !dbg !9602
  %cond = select i1 %tobool78, i32 1, i32 0, !dbg !9602
  store i32 %cond, i32* %result, align 4, !dbg !9603
  call void @llvm.dbg.declare(metadata i64* %new_buffer_size, metadata !9604, metadata !DIExpression()), !dbg !9605
  %64 = load i64, i64* %filelen.addr, align 8, !dbg !9606
  %add80 = add i64 %64, 2, !dbg !9607
  %65 = load i64, i64* %versionlenmax, align 8, !dbg !9608
  %add81 = add i64 %add80, %65, !dbg !9609
  %add82 = add i64 %add81, 2, !dbg !9610
  store i64 %add82, i64* %new_buffer_size, align 8, !dbg !9605
  %66 = load i64, i64* %buffer_size.addr, align 8, !dbg !9611
  %67 = load i64, i64* %new_buffer_size, align 8, !dbg !9613
  %cmp83 = icmp ult i64 %66, %67, !dbg !9614
  br i1 %cmp83, label %if.then85, label %if.end94, !dbg !9615

if.then85:                                        ; preds = %if.end74
  %68 = load i64, i64* %new_buffer_size, align 8, !dbg !9616
  %cmp86 = icmp ult i64 4611686018427387903, %68, !dbg !9616
  br i1 %cmp86, label %if.end89, label %if.then88, !dbg !9619

if.then88:                                        ; preds = %if.then85
  %69 = load i64, i64* %new_buffer_size, align 8, !dbg !9620
  %mul = mul i64 %69, 2, !dbg !9620
  store i64 %mul, i64* %new_buffer_size, align 8, !dbg !9620
  br label %if.end89, !dbg !9621

if.end89:                                         ; preds = %if.then88, %if.then85
  call void @llvm.dbg.declare(metadata i8** %new_buf, metadata !9622, metadata !DIExpression()), !dbg !9623
  %70 = load i8*, i8** %buf, align 8, !dbg !9624
  %71 = load i64, i64* %new_buffer_size, align 8, !dbg !9625
  %call90 = call i8* @realloc(i8* %70, i64 %71) #12, !dbg !9626
  store i8* %call90, i8** %new_buf, align 8, !dbg !9623
  %72 = load i8*, i8** %new_buf, align 8, !dbg !9627
  %tobool91 = icmp ne i8* %72, null, !dbg !9627
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !9629

if.then92:                                        ; preds = %if.end89
  %73 = load i8*, i8** %buf, align 8, !dbg !9630
  %74 = load i8**, i8*** %buffer.addr, align 8, !dbg !9632
  store i8* %73, i8** %74, align 8, !dbg !9633, !ctir !7
  store i32 3, i32* %retval, align 4, !dbg !9634
  br label %return, !dbg !9634

if.end93:                                         ; preds = %if.end89
  %75 = load i8*, i8** %new_buf, align 8, !dbg !9635
  store i8* %75, i8** %buf, align 8, !dbg !9636
  %76 = load i64, i64* %new_buffer_size, align 8, !dbg !9637
  store i64 %76, i64* %buffer_size.addr, align 8, !dbg !9638
  br label %if.end94, !dbg !9639

if.end94:                                         ; preds = %if.end93, %if.end74
  %77 = load i8*, i8** %buf, align 8, !dbg !9640
  %78 = load i64, i64* %filelen.addr, align 8, !dbg !9641
  %add.ptr95 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !9642, !ctir !8
  store i8* %add.ptr95, i8** %q, align 8, !dbg !9643
  %79 = load i8*, i8** %q, align 8, !dbg !9644
  %incdec.ptr = getelementptr inbounds i8, i8* %79, i32 1, !dbg !9644, !ctir !8
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !9644
  store i8 46, i8* %79, align 1, !dbg !9645, !ctir !8
  %80 = load i8*, i8** %q, align 8, !dbg !9646
  %incdec.ptr96 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !9646, !ctir !8
  store i8* %incdec.ptr96, i8** %q, align 8, !dbg !9646
  store i8 126, i8* %80, align 1, !dbg !9647, !ctir !8
  %81 = load i8*, i8** %q, align 8, !dbg !9648
  store i8 48, i8* %81, align 1, !dbg !9649, !ctir !8
  %82 = load i8, i8* %all_9s, align 1, !dbg !9650
  %tobool97 = trunc i8 %82 to i1, !dbg !9650
  %conv98 = zext i1 %tobool97 to i32, !dbg !9650
  %83 = load i8*, i8** %q, align 8, !dbg !9651
  %idx.ext = sext i32 %conv98 to i64, !dbg !9651
  %add.ptr99 = getelementptr inbounds i8, i8* %83, i64 %idx.ext, !dbg !9651, !ctir !8
  store i8* %add.ptr99, i8** %q, align 8, !dbg !9651
  %84 = load i8*, i8** %q, align 8, !dbg !9652
  %85 = load i8*, i8** %p, align 8, !dbg !9653
  %86 = load i64, i64* %versionlen, align 8, !dbg !9654
  %add100 = add i64 %86, 2, !dbg !9655
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %85, i64 %add100, i1 false), !dbg !9656
  %87 = load i64, i64* %versionlen, align 8, !dbg !9657
  %88 = load i8*, i8** %q, align 8, !dbg !9658
  %add.ptr101 = getelementptr inbounds i8, i8* %88, i64 %87, !dbg !9658, !ctir !8
  store i8* %add.ptr101, i8** %q, align 8, !dbg !9658
  br label %while.cond102, !dbg !9659

while.cond102:                                    ; preds = %while.body107, %if.end94
  %89 = load i8*, i8** %q, align 8, !dbg !9660
  %incdec.ptr103 = getelementptr inbounds i8, i8* %89, i32 -1, !dbg !9660, !ctir !8
  store i8* %incdec.ptr103, i8** %q, align 8, !dbg !9660
  %90 = load i8, i8* %incdec.ptr103, align 1, !dbg !9661, !ctir !8
  %conv104 = sext i8 %90 to i32, !dbg !9661
  %cmp105 = icmp eq i32 %conv104, 57, !dbg !9662
  br i1 %cmp105, label %while.body107, label %while.end, !dbg !9659

while.body107:                                    ; preds = %while.cond102
  %91 = load i8*, i8** %q, align 8, !dbg !9663
  store i8 48, i8* %91, align 1, !dbg !9664, !ctir !8
  br label %while.cond102, !dbg !9659, !llvm.loop !9665

while.end:                                        ; preds = %while.cond102
  %92 = load i8*, i8** %q, align 8, !dbg !9667
  %93 = load i8, i8* %92, align 1, !dbg !9668, !ctir !8
  %inc108 = add i8 %93, 1, !dbg !9668
  store i8 %inc108, i8* %92, align 1, !dbg !9668, !ctir !8
  br label %while.cond, !dbg !9501, !llvm.loop !9522

while.end109:                                     ; preds = %while.cond
  %94 = load i8*, i8** %buf, align 8, !dbg !9669
  %95 = load i8**, i8*** %buffer.addr, align 8, !dbg !9670
  store i8* %94, i8** %95, align 8, !dbg !9671, !ctir !7
  %96 = load i32, i32* %result, align 4, !dbg !9672
  store i32 %96, i32* %retval, align 4, !dbg !9673
  br label %return, !dbg !9673

return:                                           ; preds = %while.end109, %if.then92, %if.then10
  %97 = load i32, i32* %retval, align 4, !dbg !9674
  ret i32 %97, !dbg !9674
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_extension(i8* %file, i64 %filelen, i8 signext %e, i32 %dir_fd, i64* %base_max) #4 !dbg !9675 {
entry:
  %file.addr = alloca i8*, align 8
  %filelen.addr = alloca i64, align 8
  %e.addr = alloca i8, align 1
  %dir_fd.addr = alloca i32, align 4
  %base_max.addr = alloca i64*, align 8
  %base = alloca i8*, align 8, !ctir !7
  %baselen = alloca i64, align 8, !ctir !52
  %baselen_max = alloca i64, align 8, !ctir !52
  %name_max = alloca i64, align 8, !ctir !32
  %tmp = alloca [2 x i8], align 1, !ctir !264
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9679, metadata !DIExpression()), !dbg !9680
  store i64 %filelen, i64* %filelen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !9681, metadata !DIExpression()), !dbg !9682
  store i8 %e, i8* %e.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %e.addr, metadata !9683, metadata !DIExpression()), !dbg !9684
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9685, metadata !DIExpression()), !dbg !9686
  store i64* %base_max, i64** %base_max.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %base_max.addr, metadata !9687, metadata !DIExpression()), !dbg !9688
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9689, metadata !DIExpression()), !dbg !9690
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9691
  %call = call i8* @last_component(i8* %0) #14, !dbg !9692
  store i8* %call, i8** %base, align 8, !dbg !9690
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !9693, metadata !DIExpression()), !dbg !9694
  %1 = load i8*, i8** %base, align 8, !dbg !9695
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !9696
  store i64 %call1, i64* %baselen, align 8, !dbg !9694
  call void @llvm.dbg.declare(metadata i64* %baselen_max, metadata !9697, metadata !DIExpression()), !dbg !9698
  store i64 255, i64* %baselen_max, align 8, !dbg !9698
  %2 = load i64, i64* %baselen, align 8, !dbg !9699
  %cmp = icmp ult i64 14, %2, !dbg !9701
  br i1 %cmp, label %if.then, label %if.end27, !dbg !9702

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %base_max.addr, align 8, !dbg !9703
  %4 = load i64, i64* %3, align 8, !dbg !9706, !ctir !52
  %cmp2 = icmp eq i64 %4, 0, !dbg !9707
  br i1 %cmp2, label %if.then3, label %if.end26, !dbg !9708

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %name_max, metadata !9709, metadata !DIExpression()), !dbg !9711
  %5 = load i32, i32* %dir_fd.addr, align 4, !dbg !9712
  %cmp4 = icmp slt i32 %5, 0, !dbg !9714
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !9715

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !9716, metadata !DIExpression()), !dbg !9718
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9719, !ctir !264
  %6 = load i8*, i8** %base, align 8, !dbg !9720
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %6, i64 2, i1 false), !dbg !9719
  %7 = load i8*, i8** %base, align 8, !dbg !9721
  %call6 = call i8* @strcpy(i8* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.194, i64 0, i64 0)) #12, !dbg !9722
  %call7 = call i32* @__errno_location() #15, !dbg !9723
  store i32 0, i32* %call7, align 4, !dbg !9724, !ctir !5
  %8 = load i8*, i8** %file.addr, align 8, !dbg !9725
  %call8 = call i64 @pathconf(i8* %8, i32 3) #12, !dbg !9726
  store i64 %call8, i64* %name_max, align 8, !dbg !9727
  %call9 = call i32* @__errno_location() #15, !dbg !9728
  %9 = load i32, i32* %call9, align 4, !dbg !9728, !ctir !5
  %tobool = icmp ne i32 %9, 0, !dbg !9729
  %lnot = xor i1 %tobool, true, !dbg !9729
  %lnot.ext = zext i1 %lnot to i32, !dbg !9729
  %conv = sext i32 %lnot.ext to i64, !dbg !9729
  %10 = load i64, i64* %name_max, align 8, !dbg !9730
  %sub = sub nsw i64 %10, %conv, !dbg !9730
  store i64 %sub, i64* %name_max, align 8, !dbg !9730
  %11 = load i8*, i8** %base, align 8, !dbg !9731
  %arraydecay10 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9732, !ctir !264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %arraydecay10, i64 2, i1 false), !dbg !9732
  br label %if.end, !dbg !9733

if.else:                                          ; preds = %if.then3
  %call11 = call i32* @__errno_location() #15, !dbg !9734
  store i32 0, i32* %call11, align 4, !dbg !9736, !ctir !5
  %12 = load i32, i32* %dir_fd.addr, align 4, !dbg !9737
  %call12 = call i64 @fpathconf(i32 %12, i32 3) #12, !dbg !9738
  store i64 %call12, i64* %name_max, align 8, !dbg !9739
  %call13 = call i32* @__errno_location() #15, !dbg !9740
  %13 = load i32, i32* %call13, align 4, !dbg !9740, !ctir !5
  %tobool14 = icmp ne i32 %13, 0, !dbg !9741
  %lnot15 = xor i1 %tobool14, true, !dbg !9741
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !9741
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !9741
  %14 = load i64, i64* %name_max, align 8, !dbg !9742
  %sub18 = sub nsw i64 %14, %conv17, !dbg !9742
  store i64 %sub18, i64* %name_max, align 8, !dbg !9742
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %15 = load i64, i64* %name_max, align 8, !dbg !9743
  %cmp19 = icmp sle i64 0, %15, !dbg !9744
  br i1 %cmp19, label %land.lhs.true, label %cond.false, !dbg !9745

land.lhs.true:                                    ; preds = %if.end
  %16 = load i64, i64* %name_max, align 8, !dbg !9746
  %cmp21 = icmp ule i64 %16, -1, !dbg !9747
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !9748

cond.true:                                        ; preds = %land.lhs.true
  %17 = load i64, i64* %name_max, align 8, !dbg !9749
  br label %cond.end, !dbg !9748

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %18 = load i64, i64* %name_max, align 8, !dbg !9750
  %cmp23 = icmp slt i64 %18, -1, !dbg !9751
  %19 = zext i1 %cmp23 to i64, !dbg !9750
  %cond = select i1 %cmp23, i64 14, i64 -1, !dbg !9750
  br label %cond.end, !dbg !9748

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i64 [ %17, %cond.true ], [ %cond, %cond.false ], !dbg !9748
  %20 = load i64*, i64** %base_max.addr, align 8, !dbg !9752
  store i64 %cond25, i64* %20, align 8, !dbg !9753, !ctir !52
  br label %if.end26, !dbg !9754

if.end26:                                         ; preds = %cond.end, %if.then
  %21 = load i64*, i64** %base_max.addr, align 8, !dbg !9755
  %22 = load i64, i64* %21, align 8, !dbg !9756, !ctir !52
  store i64 %22, i64* %baselen_max, align 8, !dbg !9757
  br label %if.end27, !dbg !9758

if.end27:                                         ; preds = %if.end26, %entry
  %23 = load i64, i64* %baselen_max, align 8, !dbg !9759
  %24 = load i64, i64* %baselen, align 8, !dbg !9761
  %cmp28 = icmp ult i64 %23, %24, !dbg !9762
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !9763

if.then30:                                        ; preds = %if.end27
  %25 = load i8*, i8** %file.addr, align 8, !dbg !9764
  %26 = load i64, i64* %filelen.addr, align 8, !dbg !9766
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !9767, !ctir !8
  %27 = load i8*, i8** %base, align 8, !dbg !9768
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !9769
  %sub.ptr.rhs.cast = ptrtoint i8* %27 to i64, !dbg !9769
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9769
  store i64 %sub.ptr.sub, i64* %baselen, align 8, !dbg !9770
  %28 = load i64, i64* %baselen_max, align 8, !dbg !9771
  %29 = load i64, i64* %baselen, align 8, !dbg !9773
  %cmp31 = icmp ule i64 %28, %29, !dbg !9774
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !9775

if.then33:                                        ; preds = %if.then30
  %30 = load i64, i64* %baselen_max, align 8, !dbg !9776
  %sub34 = sub i64 %30, 1, !dbg !9777
  store i64 %sub34, i64* %baselen, align 8, !dbg !9778
  br label %if.end35, !dbg !9779

if.end35:                                         ; preds = %if.then33, %if.then30
  %31 = load i8, i8* %e.addr, align 1, !dbg !9780
  %32 = load i8*, i8** %base, align 8, !dbg !9781
  %33 = load i64, i64* %baselen, align 8, !dbg !9782
  %arrayidx = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !9781, !ctir !7
  store i8 %31, i8* %arrayidx, align 1, !dbg !9783
  %34 = load i8*, i8** %base, align 8, !dbg !9784
  %35 = load i64, i64* %baselen, align 8, !dbg !9785
  %add = add i64 %35, 1, !dbg !9786
  %arrayidx36 = getelementptr inbounds i8, i8* %34, i64 %add, !dbg !9784, !ctir !7
  store i8 0, i8* %arrayidx36, align 1, !dbg !9787
  br label %if.end37, !dbg !9788

if.end37:                                         ; preds = %if.end35, %if.end27
  ret void, !dbg !9789
}

; Function Attrs: nounwind
declare dso_local i64 @pathconf(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i64 @fpathconf(i32, i32) #2

; Function Attrs: nounwind
declare dso_local void @rewinddir(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backup_file_rename(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !9790 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9794, metadata !DIExpression()), !dbg !9795
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9796, metadata !DIExpression()), !dbg !9797
  store i32 %backup_type, i32* %backup_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9798, metadata !DIExpression()), !dbg !9799
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !9800
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9801
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !9802
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext true), !dbg !9803
  ret i8* %call, !dbg !9804
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @find_backup_file_name(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !9805 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %result = alloca i8*, align 8, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9806, metadata !DIExpression()), !dbg !9807
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9808, metadata !DIExpression()), !dbg !9809
  store i32 %backup_type, i32* %backup_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9810, metadata !DIExpression()), !dbg !9811
  call void @llvm.dbg.declare(metadata i8** %result, metadata !9812, metadata !DIExpression()), !dbg !9813
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !9814
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9815
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !9816
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext false), !dbg !9817
  store i8* %call, i8** %result, align 8, !dbg !9813
  %3 = load i8*, i8** %result, align 8, !dbg !9818
  %tobool = icmp ne i8* %3, null, !dbg !9818
  br i1 %tobool, label %if.end, label %if.then, !dbg !9820

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !9821
  unreachable, !dbg !9821

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %result, align 8, !dbg !9822
  ret i8* %4, !dbg !9823
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_version(i8* %context, i8* %version) #4 !dbg !9824 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9827, metadata !DIExpression()), !dbg !9828
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !9829, metadata !DIExpression()), !dbg !9830
  %0 = load i8*, i8** %version.addr, align 8, !dbg !9831
  %cmp = icmp eq i8* %0, null, !dbg !9833
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9834

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !9835
  %2 = load i8, i8* %1, align 1, !dbg !9836, !ctir !114
  %conv = sext i8 %2 to i32, !dbg !9836
  %cmp1 = icmp eq i32 %conv, 0, !dbg !9837
  br i1 %cmp1, label %if.then, label %if.else, !dbg !9838

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !9839
  br label %return, !dbg !9839

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %context.addr, align 8, !dbg !9840
  %4 = load i8*, i8** %version.addr, align 8, !dbg !9840
  %5 = load void ()*, void ()** @argmatch_die, align 8, !dbg !9840
  %call = call i64 @__xargmatch_internal(i8* %3, i8* %4, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @backup_args, i64 0, i64 0), i8* bitcast ([8 x i32]* @backup_types to i8*), i64 4, void ()* %5), !dbg !9840
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @backup_types, i64 0, i64 %call, !dbg !9840, !ctir !555
  %6 = load i32, i32* %arrayidx, align 4, !dbg !9840
  store i32 %6, i32* %retval, align 4, !dbg !9841
  br label %return, !dbg !9841

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !9842
  ret i32 %7, !dbg !9842
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xget_version(i8* %context, i8* %version) #4 !dbg !9843 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9844, metadata !DIExpression()), !dbg !9845
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !9846, metadata !DIExpression()), !dbg !9847
  %0 = load i8*, i8** %version.addr, align 8, !dbg !9848
  %tobool = icmp ne i8* %0, null, !dbg !9848
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9850

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !9851
  %2 = load i8, i8* %1, align 1, !dbg !9852, !ctir !114
  %conv = sext i8 %2 to i32, !dbg !9852
  %tobool1 = icmp ne i32 %conv, 0, !dbg !9852
  br i1 %tobool1, label %if.then, label %if.else, !dbg !9853

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %context.addr, align 8, !dbg !9854
  %4 = load i8*, i8** %version.addr, align 8, !dbg !9855
  %call = call i32 @get_version(i8* %3, i8* %4), !dbg !9856
  store i32 %call, i32* %retval, align 4, !dbg !9857
  br label %return, !dbg !9857

if.else:                                          ; preds = %land.lhs.true, %entry
  %call2 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.208, i64 0, i64 0)) #12, !dbg !9858
  %call3 = call i32 @get_version(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.209, i64 0, i64 0), i8* %call2), !dbg !9859
  store i32 %call3, i32* %retval, align 4, !dbg !9860
  br label %return, !dbg !9860

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !9861
  ret i32 %5, !dbg !9861
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local i64 @buffer_lcm(i64 %a, i64 %b, i64 %lcm_max) #10 !dbg !9862 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %lcm_max.addr = alloca i64, align 8
  %size = alloca i64, align 8, !ctir !52
  %lcm = alloca i64, align 8, !ctir !52
  %m = alloca i64, align 8, !ctir !52
  %n = alloca i64, align 8, !ctir !52
  %q = alloca i64, align 8, !ctir !52
  %r = alloca i64, align 8, !ctir !52
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !9866, metadata !DIExpression()), !dbg !9867
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !9868, metadata !DIExpression()), !dbg !9869
  store i64 %lcm_max, i64* %lcm_max.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %lcm_max.addr, metadata !9870, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.declare(metadata i64* %size, metadata !9872, metadata !DIExpression()), !dbg !9873
  %0 = load i64, i64* %a.addr, align 8, !dbg !9874
  %tobool = icmp ne i64 %0, 0, !dbg !9874
  br i1 %tobool, label %if.else, label %if.then, !dbg !9876

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %b.addr, align 8, !dbg !9877
  %tobool1 = icmp ne i64 %1, 0, !dbg !9877
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !9877

cond.true:                                        ; preds = %if.then
  %2 = load i64, i64* %b.addr, align 8, !dbg !9878
  br label %cond.end, !dbg !9877

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !9877

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 8192, %cond.false ], !dbg !9877
  store i64 %cond, i64* %size, align 8, !dbg !9879
  br label %if.end9, !dbg !9880

if.else:                                          ; preds = %entry
  %3 = load i64, i64* %b.addr, align 8, !dbg !9881
  %tobool2 = icmp ne i64 %3, 0, !dbg !9881
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !9884

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %lcm, metadata !9885, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.declare(metadata i64* %m, metadata !9888, metadata !DIExpression()), !dbg !9889
  call void @llvm.dbg.declare(metadata i64* %n, metadata !9890, metadata !DIExpression()), !dbg !9891
  call void @llvm.dbg.declare(metadata i64* %q, metadata !9892, metadata !DIExpression()), !dbg !9893
  call void @llvm.dbg.declare(metadata i64* %r, metadata !9894, metadata !DIExpression()), !dbg !9895
  %4 = load i64, i64* %a.addr, align 8, !dbg !9896
  store i64 %4, i64* %m, align 8, !dbg !9898
  %5 = load i64, i64* %b.addr, align 8, !dbg !9899
  store i64 %5, i64* %n, align 8, !dbg !9900
  br label %for.cond, !dbg !9901

for.cond:                                         ; preds = %for.inc, %if.then3
  %6 = load i64, i64* %m, align 8, !dbg !9902
  %7 = load i64, i64* %n, align 8, !dbg !9904
  %rem = urem i64 %6, %7, !dbg !9905
  store i64 %rem, i64* %r, align 8, !dbg !9906
  %cmp = icmp ne i64 %rem, 0, !dbg !9907
  br i1 %cmp, label %for.body, label %for.end, !dbg !9908

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !9909

for.inc:                                          ; preds = %for.body
  %8 = load i64, i64* %n, align 8, !dbg !9910
  store i64 %8, i64* %m, align 8, !dbg !9911
  %9 = load i64, i64* %r, align 8, !dbg !9912
  store i64 %9, i64* %n, align 8, !dbg !9913
  br label %for.cond, !dbg !9914, !llvm.loop !9915

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %a.addr, align 8, !dbg !9917
  %11 = load i64, i64* %n, align 8, !dbg !9918
  %div = udiv i64 %10, %11, !dbg !9919
  store i64 %div, i64* %q, align 8, !dbg !9920
  %12 = load i64, i64* %q, align 8, !dbg !9921
  %13 = load i64, i64* %b.addr, align 8, !dbg !9922
  %mul = mul i64 %12, %13, !dbg !9923
  store i64 %mul, i64* %lcm, align 8, !dbg !9924
  %14 = load i64, i64* %lcm, align 8, !dbg !9925
  %15 = load i64, i64* %lcm_max.addr, align 8, !dbg !9927
  %cmp4 = icmp ule i64 %14, %15, !dbg !9928
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !9929

land.lhs.true:                                    ; preds = %for.end
  %16 = load i64, i64* %lcm, align 8, !dbg !9930
  %17 = load i64, i64* %b.addr, align 8, !dbg !9931
  %div5 = udiv i64 %16, %17, !dbg !9932
  %18 = load i64, i64* %q, align 8, !dbg !9933
  %cmp6 = icmp eq i64 %div5, %18, !dbg !9934
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !9935

if.then7:                                         ; preds = %land.lhs.true
  %19 = load i64, i64* %lcm, align 8, !dbg !9936
  store i64 %19, i64* %retval, align 8, !dbg !9937
  br label %return, !dbg !9937

if.end:                                           ; preds = %land.lhs.true, %for.end
  br label %if.end8, !dbg !9938

if.end8:                                          ; preds = %if.end, %if.else
  %20 = load i64, i64* %a.addr, align 8, !dbg !9939
  store i64 %20, i64* %size, align 8, !dbg !9940
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %cond.end
  %21 = load i64, i64* %size, align 8, !dbg !9941
  %22 = load i64, i64* %lcm_max.addr, align 8, !dbg !9942
  %cmp10 = icmp ule i64 %21, %22, !dbg !9943
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !9941

cond.true11:                                      ; preds = %if.end9
  %23 = load i64, i64* %size, align 8, !dbg !9944
  br label %cond.end13, !dbg !9941

cond.false12:                                     ; preds = %if.end9
  %24 = load i64, i64* %lcm_max.addr, align 8, !dbg !9945
  br label %cond.end13, !dbg !9941

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i64 [ %23, %cond.true11 ], [ %24, %cond.false12 ], !dbg !9941
  store i64 %cond14, i64* %retval, align 8, !dbg !9946
  br label %return, !dbg !9946

return:                                           ; preds = %cond.end13, %if.then7
  %25 = load i64, i64* %retval, align 8, !dbg !9947
  ret i64 %25, !dbg !9947
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin_set_file_name(i8* %file) #4 !dbg !9948 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9949, metadata !DIExpression()), !dbg !9950
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9951
  store i8* %0, i8** @file_name, align 8, !dbg !9952
  ret void, !dbg !9953
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin() #4 !dbg !9954 {
entry:
  %fail = alloca i8, align 1, !ctir !139
  %close_error = alloca i8*, align 8, !ctir !113
  call void @llvm.dbg.declare(metadata i8* %fail, metadata !9955, metadata !DIExpression()), !dbg !9956
  store i8 0, i8* %fail, align 1, !dbg !9956
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !9957
  %call = call i64 @freadahead(%struct._IO_FILE* %0) #14, !dbg !9959
  %cmp = icmp ugt i64 %call, 0, !dbg !9960
  br i1 %cmp, label %if.then, label %if.end6, !dbg !9961

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !9962
  %call1 = call i32 @rpl_fseeko(%struct._IO_FILE* %1, i64 0, i32 1), !dbg !9965
  %cmp2 = icmp eq i32 %call1, 0, !dbg !9966
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !9967

land.lhs.true:                                    ; preds = %if.then
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !9968
  %call3 = call i32 @rpl_fflush(%struct._IO_FILE* %2), !dbg !9969
  %cmp4 = icmp ne i32 %call3, 0, !dbg !9970
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !9971

if.then5:                                         ; preds = %land.lhs.true
  store i8 1, i8* %fail, align 1, !dbg !9972
  br label %if.end, !dbg !9973

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end6, !dbg !9974

if.end6:                                          ; preds = %if.end, %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !9975
  %call7 = call i32 @close_stream(%struct._IO_FILE* %3), !dbg !9977
  %cmp8 = icmp ne i32 %call7, 0, !dbg !9978
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !9979

if.then9:                                         ; preds = %if.end6
  store i8 1, i8* %fail, align 1, !dbg !9980
  br label %if.end10, !dbg !9981

if.end10:                                         ; preds = %if.then9, %if.end6
  %4 = load i8, i8* %fail, align 1, !dbg !9982
  %tobool = trunc i8 %4 to i1, !dbg !9982
  br i1 %tobool, label %if.then11, label %if.end19, !dbg !9984

if.then11:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %close_error, metadata !9985, metadata !DIExpression()), !dbg !9987
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.214, i64 0, i64 0)) #12, !dbg !9988
  store i8* %call12, i8** %close_error, align 8, !dbg !9987
  %5 = load i8*, i8** @file_name, align 8, !dbg !9989
  %tobool13 = icmp ne i8* %5, null, !dbg !9989
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !9991

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #15, !dbg !9992
  %6 = load i32, i32* %call15, align 4, !dbg !9992, !ctir !5
  %7 = load i8*, i8** @file_name, align 8, !dbg !9993
  %call16 = call i8* @quotearg_colon(i8* %7), !dbg !9994
  %8 = load i8*, i8** %close_error, align 8, !dbg !9995
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.215, i64 0, i64 0), i8* %call16, i8* %8), !dbg !9996
  br label %if.end18, !dbg !9996

if.else:                                          ; preds = %if.then11
  %call17 = call i32* @__errno_location() #15, !dbg !9997
  %9 = load i32, i32* %call17, align 4, !dbg !9997, !ctir !5
  %10 = load i8*, i8** %close_error, align 8, !dbg !9998
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.216, i64 0, i64 0), i8* %10), !dbg !9999
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then14
  br label %if.end19, !dbg !10000

if.end19:                                         ; preds = %if.end18, %if.end10
  call void @close_stdout(), !dbg !10001
  %11 = load i8, i8* %fail, align 1, !dbg !10002
  %tobool20 = trunc i8 %11 to i1, !dbg !10002
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !10004

if.then21:                                        ; preds = %if.end19
  %12 = load volatile i32, i32* @exit_failure, align 4, !dbg !10005
  call void @_exit(i32 %12) #16, !dbg !10006
  unreachable, !dbg !10006

if.end22:                                         ; preds = %if.end19
  ret void, !dbg !10007
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #11

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #4 !dbg !10008 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10009, metadata !DIExpression()), !dbg !10010
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10011
  store i8* %0, i8** @file_name.217, align 8, !dbg !10012
  ret void, !dbg !10013
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #4 !dbg !10014 {
entry:
  %ignore.addr = alloca i8, align 1
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !10017, metadata !DIExpression()), !dbg !10018
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !10019
  %tobool = trunc i8 %0 to i1, !dbg !10019
  %frombool1 = zext i1 %tobool to i8, !dbg !10020
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !10020
  ret void, !dbg !10021
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #4 !dbg !10022 {
entry:
  %write_error = alloca i8*, align 8, !ctir !113
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10023
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !10025
  %cmp = icmp ne i32 %call, 0, !dbg !10026
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !10027

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !10028
  %tobool = trunc i8 %1 to i1, !dbg !10028
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !10029

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #15, !dbg !10030
  %2 = load i32, i32* %call2, align 4, !dbg !10030, !ctir !5
  %cmp3 = icmp eq i32 %2, 32, !dbg !10031
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !10032

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !10033, metadata !DIExpression()), !dbg !10035
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.220, i64 0, i64 0)) #12, !dbg !10036
  store i8* %call4, i8** %write_error, align 8, !dbg !10035
  %3 = load i8*, i8** @file_name.217, align 8, !dbg !10037
  %tobool5 = icmp ne i8* %3, null, !dbg !10037
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !10039

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #15, !dbg !10040
  %4 = load i32, i32* %call7, align 4, !dbg !10040, !ctir !5
  %5 = load i8*, i8** @file_name.217, align 8, !dbg !10041
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !10042
  %6 = load i8*, i8** %write_error, align 8, !dbg !10043
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.221, i64 0, i64 0), i8* %call8, i8* %6), !dbg !10044
  br label %if.end, !dbg !10044

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #15, !dbg !10045
  %7 = load i32, i32* %call9, align 4, !dbg !10045, !ctir !5
  %8 = load i8*, i8** %write_error, align 8, !dbg !10046
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.222, i64 0, i64 0), i8* %8), !dbg !10047
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !10048
  call void @_exit(i32 %9) #16, !dbg !10049
  unreachable, !dbg !10049

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10050
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !10052
  %cmp12 = icmp ne i32 %call11, 0, !dbg !10053
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10054

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !10055
  call void @_exit(i32 %11) #16, !dbg !10056
  unreachable, !dbg !10056

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !10057
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @dir_name(i8* %file) #4 !dbg !10058 {
entry:
  %file.addr = alloca i8*, align 8
  %result = alloca i8*, align 8, !ctir !7
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10062, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.declare(metadata i8** %result, metadata !10064, metadata !DIExpression()), !dbg !10065
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10066
  %call = call i8* @mdir_name(i8* %0), !dbg !10067
  store i8* %call, i8** %result, align 8, !dbg !10065
  %1 = load i8*, i8** %result, align 8, !dbg !10068
  %tobool = icmp ne i8* %1, null, !dbg !10068
  br i1 %tobool, label %if.end, label %if.then, !dbg !10070

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !10071
  unreachable, !dbg !10071

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %result, align 8, !dbg !10072
  ret i8* %2, !dbg !10073
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @dir_len(i8* %file) #9 !dbg !10074 {
entry:
  %file.addr = alloca i8*, align 8
  %prefix_length = alloca i64, align 8, !ctir !52
  %length = alloca i64, align 8, !ctir !52
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10078, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !10080, metadata !DIExpression()), !dbg !10081
  store i64 0, i64* %prefix_length, align 8, !dbg !10081
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10082, metadata !DIExpression()), !dbg !10083
  %0 = load i64, i64* %prefix_length, align 8, !dbg !10084
  %cmp = icmp ne i64 %0, 0, !dbg !10085
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10084

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10084

cond.false:                                       ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10086
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10086, !ctir !113
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10086
  %conv = sext i8 %2 to i32, !dbg !10086
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10086
  %3 = zext i1 %cmp1 to i64, !dbg !10086
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !10086
  br label %cond.end, !dbg !10084

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !10084
  %conv4 = sext i32 %cond3 to i64, !dbg !10087
  %4 = load i64, i64* %prefix_length, align 8, !dbg !10088
  %add = add i64 %4, %conv4, !dbg !10088
  store i64 %add, i64* %prefix_length, align 8, !dbg !10088
  %5 = load i8*, i8** %file.addr, align 8, !dbg !10089
  %call = call i8* @last_component(i8* %5) #14, !dbg !10091
  %6 = load i8*, i8** %file.addr, align 8, !dbg !10092
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10093
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !10093
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10093
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !10094
  br label %for.cond, !dbg !10095

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i64, i64* %prefix_length, align 8, !dbg !10096
  %8 = load i64, i64* %length, align 8, !dbg !10098
  %cmp5 = icmp ult i64 %7, %8, !dbg !10099
  br i1 %cmp5, label %for.body, label %for.end, !dbg !10100

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %file.addr, align 8, !dbg !10101
  %10 = load i64, i64* %length, align 8, !dbg !10101
  %sub = sub i64 %10, 1, !dbg !10101
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !10101, !ctir !113
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !10101
  %conv8 = sext i8 %11 to i32, !dbg !10101
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10101
  br i1 %cmp9, label %if.end, label %if.then, !dbg !10103

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10104

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10101

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %length, align 8, !dbg !10105
  %dec = add i64 %12, -1, !dbg !10105
  store i64 %dec, i64* %length, align 8, !dbg !10105
  br label %for.cond, !dbg !10106, !llvm.loop !10107

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i64, i64* %length, align 8, !dbg !10109
  ret i64 %13, !dbg !10110
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mdir_name(i8* %file) #4 !dbg !10111 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %length = alloca i64, align 8, !ctir !52
  %append_dot = alloca i8, align 1, !ctir !139
  %dir = alloca i8*, align 8, !ctir !7
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10112, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10114, metadata !DIExpression()), !dbg !10115
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10116
  %call = call i64 @dir_len(i8* %0) #14, !dbg !10117
  store i64 %call, i64* %length, align 8, !dbg !10115
  call void @llvm.dbg.declare(metadata i8* %append_dot, metadata !10118, metadata !DIExpression()), !dbg !10119
  %1 = load i64, i64* %length, align 8, !dbg !10120
  %cmp = icmp eq i64 %1, 0, !dbg !10121
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10122

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !10122

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !10119
  store i8 %frombool, i8* %append_dot, align 1, !dbg !10119
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !10123, metadata !DIExpression()), !dbg !10124
  %3 = load i64, i64* %length, align 8, !dbg !10125
  %4 = load i8, i8* %append_dot, align 1, !dbg !10126
  %tobool = trunc i8 %4 to i1, !dbg !10126
  %conv = zext i1 %tobool to i64, !dbg !10126
  %add = add i64 %3, %conv, !dbg !10127
  %add1 = add i64 %add, 1, !dbg !10128
  %call2 = call noalias i8* @malloc(i64 %add1) #12, !dbg !10129
  store i8* %call2, i8** %dir, align 8, !dbg !10124
  %5 = load i8*, i8** %dir, align 8, !dbg !10130
  %tobool3 = icmp ne i8* %5, null, !dbg !10130
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10132

if.then:                                          ; preds = %lor.end
  store i8* null, i8** %retval, align 8, !dbg !10133
  br label %return, !dbg !10133

if.end:                                           ; preds = %lor.end
  %6 = load i8*, i8** %dir, align 8, !dbg !10134
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10135
  %8 = load i64, i64* %length, align 8, !dbg !10136
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !10137
  %9 = load i8, i8* %append_dot, align 1, !dbg !10138
  %tobool4 = trunc i8 %9 to i1, !dbg !10138
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10140

if.then5:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir, align 8, !dbg !10141
  %11 = load i64, i64* %length, align 8, !dbg !10142
  %inc = add i64 %11, 1, !dbg !10142
  store i64 %inc, i64* %length, align 8, !dbg !10142
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !10141, !ctir !7
  store i8 46, i8* %arrayidx, align 1, !dbg !10143
  br label %if.end6, !dbg !10141

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !10144
  %13 = load i64, i64* %length, align 8, !dbg !10145
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !10144, !ctir !7
  store i8 0, i8* %arrayidx7, align 1, !dbg !10146
  %14 = load i8*, i8** %dir, align 8, !dbg !10147
  store i8* %14, i8** %retval, align 8, !dbg !10148
  br label %return, !dbg !10148

return:                                           ; preds = %if.end6, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !10149
  ret i8* %15, !dbg !10149
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @last_component(i8* %name) #9 !dbg !10150 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !113
  %p = alloca i8*, align 8, !ctir !113
  %saw_slash = alloca i8, align 1, !ctir !139
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10152, metadata !DIExpression()), !dbg !10153
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10154, metadata !DIExpression()), !dbg !10155
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10156
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !10157, !ctir !114
  store i8* %add.ptr, i8** %base, align 8, !dbg !10155
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10158, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.declare(metadata i8* %saw_slash, metadata !10160, metadata !DIExpression()), !dbg !10161
  store i8 0, i8* %saw_slash, align 1, !dbg !10161
  br label %while.cond, !dbg !10162

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !10163
  %2 = load i8, i8* %1, align 1, !dbg !10163, !ctir !114
  %conv = sext i8 %2 to i32, !dbg !10163
  %cmp = icmp eq i32 %conv, 47, !dbg !10163
  br i1 %cmp, label %while.body, label %while.end, !dbg !10162

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %base, align 8, !dbg !10164
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !10164, !ctir !114
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !10164
  br label %while.cond, !dbg !10162, !llvm.loop !10165

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !10166
  store i8* %4, i8** %p, align 8, !dbg !10168
  br label %for.cond, !dbg !10169

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i8*, i8** %p, align 8, !dbg !10170
  %6 = load i8, i8* %5, align 1, !dbg !10172, !ctir !114
  %tobool = icmp ne i8 %6, 0, !dbg !10173
  br i1 %tobool, label %for.body, label %for.end, !dbg !10173

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %p, align 8, !dbg !10174
  %8 = load i8, i8* %7, align 1, !dbg !10174, !ctir !114
  %conv2 = sext i8 %8 to i32, !dbg !10174
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !10174
  br i1 %cmp3, label %if.then, label %if.else, !dbg !10177

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !10178
  br label %if.end7, !dbg !10179

if.else:                                          ; preds = %for.body
  %9 = load i8, i8* %saw_slash, align 1, !dbg !10180
  %tobool5 = trunc i8 %9 to i1, !dbg !10180
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !10182

if.then6:                                         ; preds = %if.else
  %10 = load i8*, i8** %p, align 8, !dbg !10183
  store i8* %10, i8** %base, align 8, !dbg !10185
  store i8 0, i8* %saw_slash, align 1, !dbg !10186
  br label %if.end, !dbg !10187

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10188

for.inc:                                          ; preds = %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !10189
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !10189, !ctir !114
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !10189
  br label %for.cond, !dbg !10190, !llvm.loop !10191

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !10193
  ret i8* %12, !dbg !10194
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @base_len(i8* %name) #9 !dbg !10195 {
entry:
  %name.addr = alloca i8*, align 8
  %len = alloca i64, align 8, !ctir !52
  %prefix_len = alloca i64, align 8, !ctir !52
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10196, metadata !DIExpression()), !dbg !10197
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10198, metadata !DIExpression()), !dbg !10199
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !10200, metadata !DIExpression()), !dbg !10201
  store i64 0, i64* %prefix_len, align 8, !dbg !10201
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10202
  %call = call i64 @strlen(i8* %0) #14, !dbg !10204
  store i64 %call, i64* %len, align 8, !dbg !10205
  br label %for.cond, !dbg !10206

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %len, align 8, !dbg !10207
  %cmp = icmp ult i64 1, %1, !dbg !10209
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10210

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !10211
  %3 = load i64, i64* %len, align 8, !dbg !10211
  %sub = sub i64 %3, 1, !dbg !10211
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !10211, !ctir !113
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10211
  %conv = sext i8 %4 to i32, !dbg !10211
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10211
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !10212
  br i1 %5, label %for.body, label %for.end, !dbg !10213

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !10214

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %len, align 8, !dbg !10215
  %dec = add i64 %6, -1, !dbg !10215
  store i64 %dec, i64* %len, align 8, !dbg !10215
  br label %for.cond, !dbg !10216, !llvm.loop !10217

for.end:                                          ; preds = %land.end
  %7 = load i64, i64* %len, align 8, !dbg !10219
  ret i64 %7, !dbg !10220
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strip_trailing_slashes(i8* %file) #4 !dbg !10221 {
entry:
  %file.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !7
  %base_lim = alloca i8*, align 8, !ctir !7
  %had_slash = alloca i8, align 1, !ctir !139
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10225, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10227, metadata !DIExpression()), !dbg !10228
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10229
  %call = call i8* @last_component(i8* %0) #14, !dbg !10230
  store i8* %call, i8** %base, align 8, !dbg !10228
  call void @llvm.dbg.declare(metadata i8** %base_lim, metadata !10231, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.declare(metadata i8* %had_slash, metadata !10233, metadata !DIExpression()), !dbg !10234
  %1 = load i8*, i8** %base, align 8, !dbg !10235
  %2 = load i8, i8* %1, align 1, !dbg !10237, !ctir !8
  %tobool = icmp ne i8 %2, 0, !dbg !10237
  br i1 %tobool, label %if.end, label %if.then, !dbg !10238

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %file.addr, align 8, !dbg !10239
  store i8* %3, i8** %base, align 8, !dbg !10240
  br label %if.end, !dbg !10241

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8*, i8** %base, align 8, !dbg !10242
  %5 = load i8*, i8** %base, align 8, !dbg !10243
  %call1 = call i64 @base_len(i8* %5) #14, !dbg !10244
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %call1, !dbg !10245, !ctir !8
  store i8* %add.ptr, i8** %base_lim, align 8, !dbg !10246
  %6 = load i8*, i8** %base_lim, align 8, !dbg !10247
  %7 = load i8, i8* %6, align 1, !dbg !10248, !ctir !8
  %conv = sext i8 %7 to i32, !dbg !10248
  %cmp = icmp ne i32 %conv, 0, !dbg !10249
  %frombool = zext i1 %cmp to i8, !dbg !10250
  store i8 %frombool, i8* %had_slash, align 1, !dbg !10250
  %8 = load i8*, i8** %base_lim, align 8, !dbg !10251
  store i8 0, i8* %8, align 1, !dbg !10252, !ctir !8
  %9 = load i8, i8* %had_slash, align 1, !dbg !10253
  %tobool3 = trunc i8 %9 to i1, !dbg !10253
  ret i1 %tobool3, !dbg !10254
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fdadvise(i32 %fd, i64 %offset, i64 %len, i32 %advice) #4 !dbg !10255 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %advice.addr = alloca i32, align 4
  %__x = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10260, metadata !DIExpression()), !dbg !10261
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !10262, metadata !DIExpression()), !dbg !10263
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !10264, metadata !DIExpression()), !dbg !10265
  store i32 %advice, i32* %advice.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10266, metadata !DIExpression()), !dbg !10267
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !10268, metadata !DIExpression()), !dbg !10270
  %0 = load i32, i32* %fd.addr, align 4, !dbg !10270
  %1 = load i64, i64* %offset.addr, align 8, !dbg !10270
  %2 = load i64, i64* %len.addr, align 8, !dbg !10270
  %3 = load i32, i32* %advice.addr, align 4, !dbg !10270
  %call = call i32 @posix_fadvise(i32 %0, i64 %1, i64 %2, i32 %3) #12, !dbg !10270
  store i32 %call, i32* %__x, align 4, !dbg !10270
  %4 = load i32, i32* %__x, align 4, !dbg !10270
  ret void, !dbg !10271
}

; Function Attrs: nounwind
declare dso_local i32 @posix_fadvise(i32, i64, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fadvise(%struct._IO_FILE* %fp, i32 %advice) #4 !dbg !10272 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %advice.addr = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !10315, metadata !DIExpression()), !dbg !10316
  store i32 %advice, i32* %advice.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10317, metadata !DIExpression()), !dbg !10318
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10319
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !10319
  br i1 %tobool, label %if.then, label %if.end, !dbg !10321

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10322
  %call = call i32 @fileno(%struct._IO_FILE* %1) #12, !dbg !10323
  %2 = load i32, i32* %advice.addr, align 4, !dbg !10324
  call void @fdadvise(i32 %call, i64 0, i64 0, i32 %2), !dbg !10325
  br label %if.end, !dbg !10325

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10326
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @open_safer(i8* %file, i32 %flags, ...) #4 !dbg !10327 {
entry:
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !236
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1325
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10331, metadata !DIExpression()), !dbg !10332
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10333, metadata !DIExpression()), !dbg !10334
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !10335, metadata !DIExpression()), !dbg !10336
  store i32 0, i32* %mode, align 4, !dbg !10336
  %0 = load i32, i32* %flags.addr, align 4, !dbg !10337
  %and = and i32 %0, 64, !dbg !10339
  %tobool = icmp ne i32 %and, 0, !dbg !10339
  br i1 %tobool, label %if.then, label %if.end, !dbg !10340

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !10341, metadata !DIExpression()), !dbg !10343
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10344, !ctir !1325
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !10344
  call void @llvm.va_start(i8* %arraydecay1), !dbg !10344
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10345, !ctir !1325
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !10345
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !10345
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !10345
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !10345

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !10345
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !10345
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !10345
  %3 = bitcast i8* %2 to i32*, !dbg !10345
  %4 = add i32 %gp_offset, 8, !dbg !10345
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !10345
  br label %vaarg.end, !dbg !10345

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !10345
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !10345
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !10345
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !10345
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !10345
  br label %vaarg.end, !dbg !10345

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !10345
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !10345
  store i32 %6, i32* %mode, align 4, !dbg !10346
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10347, !ctir !1325
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !10347
  call void @llvm.va_end(i8* %arraydecay34), !dbg !10347
  br label %if.end, !dbg !10348

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10349
  %8 = load i32, i32* %flags.addr, align 4, !dbg !10350
  %9 = load i32, i32* %mode, align 4, !dbg !10351
  %call = call i32 (i8*, i32, ...) @open(i8* %7, i32 %8, i32 %9), !dbg !10352
  %call5 = call i32 @fd_safer(i32 %call), !dbg !10353
  ret i32 %call5, !dbg !10354
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #12

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #12

declare dso_local i32 @open(i8*, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @record_file(%struct.hash_table* %ht, i8* nonnull %file, %struct.stat* nonnull %stats) #4 !dbg !10355 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*, align 8, !ctir !1337
  %ent_from_table = alloca %struct.F_triple*, align 8, !ctir !1337
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10382, metadata !DIExpression()), !dbg !10383
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10384, metadata !DIExpression()), !dbg !10385
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10386, metadata !DIExpression()), !dbg !10387
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent, metadata !10388, metadata !DIExpression()), !dbg !10389
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10390
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10392
  br i1 %cmp, label %if.then, label %if.end, !dbg !10393

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !10394

if.end:                                           ; preds = %entry
  %call = call noalias i8* @xmalloc(i64 24), !dbg !10395
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !10395
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !10396
  %2 = load i8*, i8** %file.addr, align 8, !dbg !10397
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !10398
  %3 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10399
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %3, i32 0, i32 0, !dbg !10400, !ctir !1338
  store i8* %call1, i8** %name, align 8, !dbg !10401, !ctir !7
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10402
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !10403, !ctir !10360
  %5 = load i64, i64* %st_ino, align 8, !dbg !10403, !ctir !257
  %6 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10404
  %st_ino2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !10405, !ctir !1338
  store i64 %5, i64* %st_ino2, align 8, !dbg !10406, !ctir !256
  %7 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10407
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !10408, !ctir !10360
  %8 = load i64, i64* %st_dev, align 8, !dbg !10408, !ctir !260
  %9 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10409
  %st_dev3 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 2, !dbg !10410, !ctir !1338
  store i64 %8, i64* %st_dev3, align 8, !dbg !10411, !ctir !259
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent_from_table, metadata !10412, metadata !DIExpression()), !dbg !10414
  %10 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10415
  %11 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10416
  %12 = bitcast %struct.F_triple* %11 to i8*, !dbg !10416
  %call4 = call i8* @hash_insert(%struct.hash_table* %10, i8* %12), !dbg !10417
  %13 = bitcast i8* %call4 to %struct.F_triple*, !dbg !10417
  store %struct.F_triple* %13, %struct.F_triple** %ent_from_table, align 8, !dbg !10414
  %14 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10418
  %cmp5 = icmp eq %struct.F_triple* %14, null, !dbg !10420
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10421

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #16, !dbg !10422
  unreachable, !dbg !10422

if.end7:                                          ; preds = %if.end
  %15 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10424
  %16 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10426
  %cmp8 = icmp ne %struct.F_triple* %15, %16, !dbg !10427
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10428

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10429
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !10429
  call void @triple_free(i8* %18), !dbg !10431
  br label %if.end10, !dbg !10432

if.end10:                                         ; preds = %if.then, %if.then9, %if.end7
  ret void, !dbg !10433
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #4 !dbg !10434 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %new_ent = alloca %struct.F_triple, align 8, !ctir !1338
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10439, metadata !DIExpression()), !dbg !10440
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10441, metadata !DIExpression()), !dbg !10442
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10443, metadata !DIExpression()), !dbg !10444
  call void @llvm.dbg.declare(metadata %struct.F_triple* %new_ent, metadata !10445, metadata !DIExpression()), !dbg !10446
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10447
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10449
  br i1 %cmp, label %if.then, label %if.end, !dbg !10450

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10451
  br label %return, !dbg !10451

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10452
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !10453, !ctir !1338
  store i8* %1, i8** %name, align 8, !dbg !10454, !ctir !7
  %2 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10455
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !10456, !ctir !10360
  %3 = load i64, i64* %st_ino, align 8, !dbg !10456, !ctir !257
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !10457, !ctir !1338
  store i64 %3, i64* %st_ino1, align 8, !dbg !10458, !ctir !256
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10459
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !10460, !ctir !10360
  %5 = load i64, i64* %st_dev, align 8, !dbg !10460, !ctir !260
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !10461, !ctir !1338
  store i64 %5, i64* %st_dev2, align 8, !dbg !10462, !ctir !259
  %6 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10463
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !10464
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !10465
  %tobool = icmp ne i8* %call, null, !dbg !10466
  %lnot = xor i1 %tobool, true, !dbg !10466
  %lnot3 = xor i1 %lnot, true, !dbg !10467
  store i1 %lnot3, i1* %retval, align 1, !dbg !10468
  br label %return, !dbg !10468

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !10469
  ret i1 %8, !dbg !10469
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @file_type(%struct.stat* %st) #9 !dbg !10470 {
entry:
  %retval = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !10497, metadata !DIExpression()), !dbg !10498
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10499
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !10499, !ctir !10475
  %1 = load i32, i32* %st_mode, align 8, !dbg !10499, !ctir !165
  %and = and i32 %1, 61440, !dbg !10499
  %cmp = icmp eq i32 %and, 32768, !dbg !10499
  br i1 %cmp, label %if.then, label %if.end, !dbg !10501

if.then:                                          ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10502
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 8, !dbg !10503, !ctir !10475
  %3 = load i64, i64* %st_size, align 8, !dbg !10503, !ctir !30
  %cmp1 = icmp eq i64 %3, 0, !dbg !10504
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !10502

cond.true:                                        ; preds = %if.then
  %call = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.245, i64 0, i64 0)) #12, !dbg !10505
  br label %cond.end, !dbg !10502

cond.false:                                       ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.246, i64 0, i64 0)) #12, !dbg !10506
  br label %cond.end, !dbg !10502

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call2, %cond.false ], !dbg !10502
  store i8* %cond, i8** %retval, align 8, !dbg !10507
  br label %return, !dbg !10507

if.end:                                           ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10508
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 3, !dbg !10508, !ctir !10475
  %5 = load i32, i32* %st_mode3, align 8, !dbg !10508, !ctir !165
  %and4 = and i32 %5, 61440, !dbg !10508
  %cmp5 = icmp eq i32 %and4, 16384, !dbg !10508
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !10510

if.then6:                                         ; preds = %if.end
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.247, i64 0, i64 0)) #12, !dbg !10511
  store i8* %call7, i8** %retval, align 8, !dbg !10512
  br label %return, !dbg !10512

if.end8:                                          ; preds = %if.end
  %6 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10513
  %st_mode9 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !10513, !ctir !10475
  %7 = load i32, i32* %st_mode9, align 8, !dbg !10513, !ctir !165
  %and10 = and i32 %7, 61440, !dbg !10513
  %cmp11 = icmp eq i32 %and10, 40960, !dbg !10513
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !10515

if.then12:                                        ; preds = %if.end8
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.248, i64 0, i64 0)) #12, !dbg !10516
  store i8* %call13, i8** %retval, align 8, !dbg !10517
  br label %return, !dbg !10517

if.end14:                                         ; preds = %if.end8
  %8 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10518
  %st_mode15 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !10518, !ctir !10475
  %9 = load i32, i32* %st_mode15, align 8, !dbg !10518, !ctir !165
  %10 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10518
  %st_mode16 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !10518, !ctir !10475
  %11 = load i32, i32* %st_mode16, align 8, !dbg !10518, !ctir !165
  %sub = sub i32 %9, %11, !dbg !10518
  %tobool = icmp ne i32 %sub, 0, !dbg !10518
  br i1 %tobool, label %if.then17, label %if.end19, !dbg !10520

if.then17:                                        ; preds = %if.end14
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.249, i64 0, i64 0)) #12, !dbg !10521
  store i8* %call18, i8** %retval, align 8, !dbg !10522
  br label %return, !dbg !10522

if.end19:                                         ; preds = %if.end14
  %12 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10523
  %st_mode20 = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 3, !dbg !10523, !ctir !10475
  %13 = load i32, i32* %st_mode20, align 8, !dbg !10523, !ctir !165
  %14 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10523
  %st_mode21 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !10523, !ctir !10475
  %15 = load i32, i32* %st_mode21, align 8, !dbg !10523, !ctir !165
  %sub22 = sub i32 %13, %15, !dbg !10523
  %tobool23 = icmp ne i32 %sub22, 0, !dbg !10523
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !10525

if.then24:                                        ; preds = %if.end19
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.250, i64 0, i64 0)) #12, !dbg !10526
  store i8* %call25, i8** %retval, align 8, !dbg !10527
  br label %return, !dbg !10527

if.end26:                                         ; preds = %if.end19
  %16 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10528
  %st_mode27 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !10528, !ctir !10475
  %17 = load i32, i32* %st_mode27, align 8, !dbg !10528, !ctir !165
  %18 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10528
  %st_mode28 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 3, !dbg !10528, !ctir !10475
  %19 = load i32, i32* %st_mode28, align 8, !dbg !10528, !ctir !165
  %sub29 = sub i32 %17, %19, !dbg !10528
  %tobool30 = icmp ne i32 %sub29, 0, !dbg !10528
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !10530

if.then31:                                        ; preds = %if.end26
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.251, i64 0, i64 0)) #12, !dbg !10531
  store i8* %call32, i8** %retval, align 8, !dbg !10532
  br label %return, !dbg !10532

if.end33:                                         ; preds = %if.end26
  %20 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10533
  %st_mode34 = getelementptr inbounds %struct.stat, %struct.stat* %20, i32 0, i32 3, !dbg !10533, !ctir !10475
  %21 = load i32, i32* %st_mode34, align 8, !dbg !10533, !ctir !165
  %and35 = and i32 %21, 61440, !dbg !10533
  %cmp36 = icmp eq i32 %and35, 24576, !dbg !10533
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !10535

if.then37:                                        ; preds = %if.end33
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.252, i64 0, i64 0)) #12, !dbg !10536
  store i8* %call38, i8** %retval, align 8, !dbg !10537
  br label %return, !dbg !10537

if.end39:                                         ; preds = %if.end33
  %22 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10538
  %st_mode40 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 3, !dbg !10538, !ctir !10475
  %23 = load i32, i32* %st_mode40, align 8, !dbg !10538, !ctir !165
  %and41 = and i32 %23, 61440, !dbg !10538
  %cmp42 = icmp eq i32 %and41, 8192, !dbg !10538
  br i1 %cmp42, label %if.then43, label %if.end45, !dbg !10540

if.then43:                                        ; preds = %if.end39
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.253, i64 0, i64 0)) #12, !dbg !10541
  store i8* %call44, i8** %retval, align 8, !dbg !10542
  br label %return, !dbg !10542

if.end45:                                         ; preds = %if.end39
  %24 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10543
  %st_mode46 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 3, !dbg !10543, !ctir !10475
  %25 = load i32, i32* %st_mode46, align 8, !dbg !10543, !ctir !165
  %and47 = and i32 %25, 61440, !dbg !10543
  %cmp48 = icmp eq i32 %and47, 4096, !dbg !10543
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !10545

if.then49:                                        ; preds = %if.end45
  %call50 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.254, i64 0, i64 0)) #12, !dbg !10546
  store i8* %call50, i8** %retval, align 8, !dbg !10547
  br label %return, !dbg !10547

if.end51:                                         ; preds = %if.end45
  %26 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10548
  %st_mode52 = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 3, !dbg !10548, !ctir !10475
  %27 = load i32, i32* %st_mode52, align 8, !dbg !10548, !ctir !165
  %and53 = and i32 %27, 61440, !dbg !10548
  %cmp54 = icmp eq i32 %and53, 49152, !dbg !10548
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !10550

if.then55:                                        ; preds = %if.end51
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10.255, i64 0, i64 0)) #12, !dbg !10551
  store i8* %call56, i8** %retval, align 8, !dbg !10552
  br label %return, !dbg !10552

if.end57:                                         ; preds = %if.end51
  %call58 = call i8* @gettext(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.256, i64 0, i64 0)) #12, !dbg !10553
  store i8* %call58, i8** %retval, align 8, !dbg !10554
  br label %return, !dbg !10554

return:                                           ; preds = %if.end57, %if.then55, %if.then49, %if.then43, %if.then37, %if.then31, %if.then24, %if.then17, %if.then12, %if.then6, %cond.end
  %28 = load i8*, i8** %retval, align 8, !dbg !10555
  ret i8* %28, !dbg !10555
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strmode(i32 %mode, i8* %str) #4 !dbg !10556 {
entry:
  %mode.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10560, metadata !DIExpression()), !dbg !10561
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10562, metadata !DIExpression()), !dbg !10563
  %0 = load i32, i32* %mode.addr, align 4, !dbg !10564
  %call = call signext i8 @ftypelet(i32 %0), !dbg !10565
  %1 = load i8*, i8** %str.addr, align 8, !dbg !10566
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10566, !ctir !7
  store i8 %call, i8* %arrayidx, align 1, !dbg !10567
  %2 = load i32, i32* %mode.addr, align 4, !dbg !10568
  %and = and i32 %2, 256, !dbg !10569
  %tobool = icmp ne i32 %and, 0, !dbg !10568
  %3 = zext i1 %tobool to i64, !dbg !10568
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !10568
  %conv = trunc i32 %cond to i8, !dbg !10568
  %4 = load i8*, i8** %str.addr, align 8, !dbg !10570
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !10570, !ctir !7
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !10571
  %5 = load i32, i32* %mode.addr, align 4, !dbg !10572
  %and2 = and i32 %5, 128, !dbg !10573
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10572
  %6 = zext i1 %tobool3 to i64, !dbg !10572
  %cond4 = select i1 %tobool3, i32 119, i32 45, !dbg !10572
  %conv5 = trunc i32 %cond4 to i8, !dbg !10572
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10574
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !10574, !ctir !7
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !10575
  %8 = load i32, i32* %mode.addr, align 4, !dbg !10576
  %and7 = and i32 %8, 2048, !dbg !10577
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10577
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !10576

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %mode.addr, align 4, !dbg !10578
  %and9 = and i32 %9, 64, !dbg !10579
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10578
  %10 = zext i1 %tobool10 to i64, !dbg !10578
  %cond11 = select i1 %tobool10, i32 115, i32 83, !dbg !10578
  br label %cond.end, !dbg !10576

cond.false:                                       ; preds = %entry
  %11 = load i32, i32* %mode.addr, align 4, !dbg !10580
  %and12 = and i32 %11, 64, !dbg !10581
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10580
  %12 = zext i1 %tobool13 to i64, !dbg !10580
  %cond14 = select i1 %tobool13, i32 120, i32 45, !dbg !10580
  br label %cond.end, !dbg !10576

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond11, %cond.true ], [ %cond14, %cond.false ], !dbg !10576
  %conv16 = trunc i32 %cond15 to i8, !dbg !10582
  %13 = load i8*, i8** %str.addr, align 8, !dbg !10583
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !10583, !ctir !7
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !10584
  %14 = load i32, i32* %mode.addr, align 4, !dbg !10585
  %and18 = and i32 %14, 32, !dbg !10586
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10585
  %15 = zext i1 %tobool19 to i64, !dbg !10585
  %cond20 = select i1 %tobool19, i32 114, i32 45, !dbg !10585
  %conv21 = trunc i32 %cond20 to i8, !dbg !10585
  %16 = load i8*, i8** %str.addr, align 8, !dbg !10587
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !10587, !ctir !7
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !10588
  %17 = load i32, i32* %mode.addr, align 4, !dbg !10589
  %and23 = and i32 %17, 16, !dbg !10590
  %tobool24 = icmp ne i32 %and23, 0, !dbg !10589
  %18 = zext i1 %tobool24 to i64, !dbg !10589
  %cond25 = select i1 %tobool24, i32 119, i32 45, !dbg !10589
  %conv26 = trunc i32 %cond25 to i8, !dbg !10589
  %19 = load i8*, i8** %str.addr, align 8, !dbg !10591
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 5, !dbg !10591, !ctir !7
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !10592
  %20 = load i32, i32* %mode.addr, align 4, !dbg !10593
  %and28 = and i32 %20, 1024, !dbg !10594
  %tobool29 = icmp ne i32 %and28, 0, !dbg !10594
  br i1 %tobool29, label %cond.true30, label %cond.false34, !dbg !10593

cond.true30:                                      ; preds = %cond.end
  %21 = load i32, i32* %mode.addr, align 4, !dbg !10595
  %and31 = and i32 %21, 8, !dbg !10596
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10595
  %22 = zext i1 %tobool32 to i64, !dbg !10595
  %cond33 = select i1 %tobool32, i32 115, i32 83, !dbg !10595
  br label %cond.end38, !dbg !10593

cond.false34:                                     ; preds = %cond.end
  %23 = load i32, i32* %mode.addr, align 4, !dbg !10597
  %and35 = and i32 %23, 8, !dbg !10598
  %tobool36 = icmp ne i32 %and35, 0, !dbg !10597
  %24 = zext i1 %tobool36 to i64, !dbg !10597
  %cond37 = select i1 %tobool36, i32 120, i32 45, !dbg !10597
  br label %cond.end38, !dbg !10593

cond.end38:                                       ; preds = %cond.false34, %cond.true30
  %cond39 = phi i32 [ %cond33, %cond.true30 ], [ %cond37, %cond.false34 ], !dbg !10593
  %conv40 = trunc i32 %cond39 to i8, !dbg !10599
  %25 = load i8*, i8** %str.addr, align 8, !dbg !10600
  %arrayidx41 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !10600, !ctir !7
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !10601
  %26 = load i32, i32* %mode.addr, align 4, !dbg !10602
  %and42 = and i32 %26, 4, !dbg !10603
  %tobool43 = icmp ne i32 %and42, 0, !dbg !10602
  %27 = zext i1 %tobool43 to i64, !dbg !10602
  %cond44 = select i1 %tobool43, i32 114, i32 45, !dbg !10602
  %conv45 = trunc i32 %cond44 to i8, !dbg !10602
  %28 = load i8*, i8** %str.addr, align 8, !dbg !10604
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 7, !dbg !10604, !ctir !7
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !10605
  %29 = load i32, i32* %mode.addr, align 4, !dbg !10606
  %and47 = and i32 %29, 2, !dbg !10607
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10606
  %30 = zext i1 %tobool48 to i64, !dbg !10606
  %cond49 = select i1 %tobool48, i32 119, i32 45, !dbg !10606
  %conv50 = trunc i32 %cond49 to i8, !dbg !10606
  %31 = load i8*, i8** %str.addr, align 8, !dbg !10608
  %arrayidx51 = getelementptr inbounds i8, i8* %31, i64 8, !dbg !10608, !ctir !7
  store i8 %conv50, i8* %arrayidx51, align 1, !dbg !10609
  %32 = load i32, i32* %mode.addr, align 4, !dbg !10610
  %and52 = and i32 %32, 512, !dbg !10611
  %tobool53 = icmp ne i32 %and52, 0, !dbg !10611
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !10610

cond.true54:                                      ; preds = %cond.end38
  %33 = load i32, i32* %mode.addr, align 4, !dbg !10612
  %and55 = and i32 %33, 1, !dbg !10613
  %tobool56 = icmp ne i32 %and55, 0, !dbg !10612
  %34 = zext i1 %tobool56 to i64, !dbg !10612
  %cond57 = select i1 %tobool56, i32 116, i32 84, !dbg !10612
  br label %cond.end62, !dbg !10610

cond.false58:                                     ; preds = %cond.end38
  %35 = load i32, i32* %mode.addr, align 4, !dbg !10614
  %and59 = and i32 %35, 1, !dbg !10615
  %tobool60 = icmp ne i32 %and59, 0, !dbg !10614
  %36 = zext i1 %tobool60 to i64, !dbg !10614
  %cond61 = select i1 %tobool60, i32 120, i32 45, !dbg !10614
  br label %cond.end62, !dbg !10610

cond.end62:                                       ; preds = %cond.false58, %cond.true54
  %cond63 = phi i32 [ %cond57, %cond.true54 ], [ %cond61, %cond.false58 ], !dbg !10610
  %conv64 = trunc i32 %cond63 to i8, !dbg !10616
  %37 = load i8*, i8** %str.addr, align 8, !dbg !10617
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 9, !dbg !10617, !ctir !7
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !10618
  %38 = load i8*, i8** %str.addr, align 8, !dbg !10619
  %arrayidx66 = getelementptr inbounds i8, i8* %38, i64 10, !dbg !10619, !ctir !7
  store i8 32, i8* %arrayidx66, align 1, !dbg !10620
  %39 = load i8*, i8** %str.addr, align 8, !dbg !10621
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 11, !dbg !10621, !ctir !7
  store i8 0, i8* %arrayidx67, align 1, !dbg !10622
  ret void, !dbg !10623
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %bits) #4 !dbg !10624 {
entry:
  %retval = alloca i8, align 1
  %bits.addr = alloca i32, align 4
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !10627, metadata !DIExpression()), !dbg !10628
  %0 = load i32, i32* %bits.addr, align 4, !dbg !10629
  %and = and i32 %0, 61440, !dbg !10629
  %cmp = icmp eq i32 %and, 32768, !dbg !10629
  br i1 %cmp, label %if.then, label %if.end, !dbg !10631

if.then:                                          ; preds = %entry
  store i8 45, i8* %retval, align 1, !dbg !10632
  br label %return, !dbg !10632

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !10633
  %and1 = and i32 %1, 61440, !dbg !10633
  %cmp2 = icmp eq i32 %and1, 16384, !dbg !10633
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10635

if.then3:                                         ; preds = %if.end
  store i8 100, i8* %retval, align 1, !dbg !10636
  br label %return, !dbg !10636

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %bits.addr, align 4, !dbg !10637
  %and5 = and i32 %2, 61440, !dbg !10637
  %cmp6 = icmp eq i32 %and5, 24576, !dbg !10637
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10639

if.then7:                                         ; preds = %if.end4
  store i8 98, i8* %retval, align 1, !dbg !10640
  br label %return, !dbg !10640

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %bits.addr, align 4, !dbg !10641
  %and9 = and i32 %3, 61440, !dbg !10641
  %cmp10 = icmp eq i32 %and9, 8192, !dbg !10641
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10643

if.then11:                                        ; preds = %if.end8
  store i8 99, i8* %retval, align 1, !dbg !10644
  br label %return, !dbg !10644

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %bits.addr, align 4, !dbg !10645
  %and13 = and i32 %4, 61440, !dbg !10645
  %cmp14 = icmp eq i32 %and13, 40960, !dbg !10645
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !10647

if.then15:                                        ; preds = %if.end12
  store i8 108, i8* %retval, align 1, !dbg !10648
  br label %return, !dbg !10648

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %bits.addr, align 4, !dbg !10649
  %and17 = and i32 %5, 61440, !dbg !10649
  %cmp18 = icmp eq i32 %and17, 4096, !dbg !10649
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10651

if.then19:                                        ; preds = %if.end16
  store i8 112, i8* %retval, align 1, !dbg !10652
  br label %return, !dbg !10652

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %bits.addr, align 4, !dbg !10653
  %and21 = and i32 %6, 61440, !dbg !10653
  %cmp22 = icmp eq i32 %and21, 49152, !dbg !10653
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !10655

if.then23:                                        ; preds = %if.end20
  store i8 115, i8* %retval, align 1, !dbg !10656
  br label %return, !dbg !10656

if.end24:                                         ; preds = %if.end20
  store i8 63, i8* %retval, align 1, !dbg !10657
  br label %return, !dbg !10657

return:                                           ; preds = %if.end24, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !10658
  ret i8 %7, !dbg !10658
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @filemodestring(%struct.stat* %statp, i8* %str) #4 !dbg !10659 {
entry:
  %statp.addr = alloca %struct.stat*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.stat* %statp, %struct.stat** %statp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %statp.addr, metadata !10685, metadata !DIExpression()), !dbg !10686
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10687, metadata !DIExpression()), !dbg !10688
  %0 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10689
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !10690, !ctir !10663
  %1 = load i32, i32* %st_mode, align 8, !dbg !10690, !ctir !165
  %2 = load i8*, i8** %str.addr, align 8, !dbg !10691
  call void @strmode(i32 %1, i8* %2), !dbg !10692
  %3 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10693
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !10693, !ctir !10663
  %4 = load i32, i32* %st_mode1, align 8, !dbg !10693, !ctir !165
  %5 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10693
  %st_mode2 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3, !dbg !10693, !ctir !10663
  %6 = load i32, i32* %st_mode2, align 8, !dbg !10693, !ctir !165
  %sub = sub i32 %4, %6, !dbg !10693
  %tobool = icmp ne i32 %sub, 0, !dbg !10693
  br i1 %tobool, label %if.then, label %if.else, !dbg !10695

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10696
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !10696, !ctir !7
  store i8 70, i8* %arrayidx, align 1, !dbg !10697
  br label %if.end18, !dbg !10696

if.else:                                          ; preds = %entry
  %8 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10698
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !10698, !ctir !10663
  %9 = load i32, i32* %st_mode3, align 8, !dbg !10698, !ctir !165
  %10 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10698
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !10698, !ctir !10663
  %11 = load i32, i32* %st_mode4, align 8, !dbg !10698, !ctir !165
  %sub5 = sub i32 %9, %11, !dbg !10698
  %tobool6 = icmp ne i32 %sub5, 0, !dbg !10698
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !10701

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !10702
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !10702, !ctir !7
  store i8 81, i8* %arrayidx8, align 1, !dbg !10703
  br label %if.end17, !dbg !10702

if.else9:                                         ; preds = %if.else
  %13 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10704
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 3, !dbg !10704, !ctir !10663
  %14 = load i32, i32* %st_mode10, align 8, !dbg !10704, !ctir !165
  %15 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10704
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !10704, !ctir !10663
  %16 = load i32, i32* %st_mode11, align 8, !dbg !10704, !ctir !165
  %sub12 = sub i32 %14, %16, !dbg !10704
  %tobool13 = icmp ne i32 %sub12, 0, !dbg !10704
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !10706

if.then14:                                        ; preds = %if.else9
  %17 = load i8*, i8** %str.addr, align 8, !dbg !10707
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !10707, !ctir !7
  store i8 83, i8* %arrayidx15, align 1, !dbg !10708
  br label %if.end, !dbg !10707

if.else16:                                        ; preds = %if.else9
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !10709
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @file_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !10710 {
entry:
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %p = alloca i8*, align 8, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10714, metadata !DIExpression()), !dbg !10715
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10716, metadata !DIExpression()), !dbg !10717
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10718, metadata !DIExpression()), !dbg !10719
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10720, metadata !DIExpression()), !dbg !10721
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10722
  %1 = load i8*, i8** %base.addr, align 8, !dbg !10723
  %2 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10724
  %call = call i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2), !dbg !10725
  store i8* %call, i8** %p, align 8, !dbg !10721
  %3 = load i8*, i8** %p, align 8, !dbg !10726
  %cmp = icmp eq i8* %3, null, !dbg !10728
  br i1 %cmp, label %if.then, label %if.end, !dbg !10729

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !10730
  unreachable, !dbg !10730

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !10731
  ret i8* %4, !dbg !10732
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mfile_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !10733 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %dirbase = alloca i8*, align 8, !ctir !113
  %dirbaselen = alloca i64, align 8, !ctir !52
  %dirlen = alloca i64, align 8, !ctir !52
  %baselen = alloca i64, align 8, !ctir !52
  %sep = alloca i8, align 1, !ctir !8
  %p_concat = alloca i8*, align 8, !ctir !7
  %p = alloca i8*, align 8, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10735, metadata !DIExpression()), !dbg !10736
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10737, metadata !DIExpression()), !dbg !10738
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10739, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.declare(metadata i8** %dirbase, metadata !10741, metadata !DIExpression()), !dbg !10742
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10743
  %call = call i8* @last_component(i8* %0) #14, !dbg !10744
  store i8* %call, i8** %dirbase, align 8, !dbg !10742
  call void @llvm.dbg.declare(metadata i64* %dirbaselen, metadata !10745, metadata !DIExpression()), !dbg !10746
  %1 = load i8*, i8** %dirbase, align 8, !dbg !10747
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !10748
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !10746
  call void @llvm.dbg.declare(metadata i64* %dirlen, metadata !10749, metadata !DIExpression()), !dbg !10750
  %2 = load i8*, i8** %dirbase, align 8, !dbg !10751
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !10752
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !10753
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !10753
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10753
  %4 = load i64, i64* %dirbaselen, align 8, !dbg !10754
  %add = add i64 %sub.ptr.sub, %4, !dbg !10755
  store i64 %add, i64* %dirlen, align 8, !dbg !10750
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10756, metadata !DIExpression()), !dbg !10757
  %5 = load i8*, i8** %base.addr, align 8, !dbg !10758
  %call2 = call i64 @strlen(i8* %5) #14, !dbg !10759
  store i64 %call2, i64* %baselen, align 8, !dbg !10757
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !10760, metadata !DIExpression()), !dbg !10761
  store i8 0, i8* %sep, align 1, !dbg !10761
  %6 = load i64, i64* %dirbaselen, align 8, !dbg !10762
  %tobool = icmp ne i64 %6, 0, !dbg !10762
  br i1 %tobool, label %if.then, label %if.else, !dbg !10764

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !10765
  %8 = load i64, i64* %dirlen, align 8, !dbg !10765
  %sub = sub i64 %8, 1, !dbg !10765
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !10765, !ctir !113
  %9 = load i8, i8* %arrayidx, align 1, !dbg !10765
  %conv = sext i8 %9 to i32, !dbg !10765
  %cmp = icmp eq i32 %conv, 47, !dbg !10765
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !10768

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %base.addr, align 8, !dbg !10769
  %11 = load i8, i8* %10, align 1, !dbg !10769, !ctir !114
  %conv4 = sext i8 %11 to i32, !dbg !10769
  %cmp5 = icmp eq i32 %conv4, 47, !dbg !10769
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !10770

if.then7:                                         ; preds = %land.lhs.true
  store i8 47, i8* %sep, align 1, !dbg !10771
  br label %if.end, !dbg !10772

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %if.end13, !dbg !10773

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base.addr, align 8, !dbg !10774
  %13 = load i8, i8* %12, align 1, !dbg !10774, !ctir !114
  %conv8 = sext i8 %13 to i32, !dbg !10774
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10774
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !10776

if.then11:                                        ; preds = %if.else
  store i8 46, i8* %sep, align 1, !dbg !10777
  br label %if.end12, !dbg !10779

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i8** %p_concat, metadata !10780, metadata !DIExpression()), !dbg !10781
  %14 = load i64, i64* %dirlen, align 8, !dbg !10782
  %15 = load i8, i8* %sep, align 1, !dbg !10783
  %conv14 = sext i8 %15 to i32, !dbg !10783
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !10784
  %conv16 = zext i1 %cmp15 to i32, !dbg !10784
  %conv17 = sext i32 %conv16 to i64, !dbg !10785
  %add18 = add i64 %14, %conv17, !dbg !10786
  %16 = load i64, i64* %baselen, align 8, !dbg !10787
  %add19 = add i64 %add18, %16, !dbg !10788
  %add20 = add i64 %add19, 1, !dbg !10789
  %call21 = call noalias i8* @malloc(i64 %add20) #12, !dbg !10790
  store i8* %call21, i8** %p_concat, align 8, !dbg !10781
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10791, metadata !DIExpression()), !dbg !10792
  %17 = load i8*, i8** %p_concat, align 8, !dbg !10793
  %cmp22 = icmp eq i8* %17, null, !dbg !10795
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !10796

if.then24:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !10797
  br label %return, !dbg !10797

if.end25:                                         ; preds = %if.end13
  %18 = load i8*, i8** %p_concat, align 8, !dbg !10798
  %19 = load i8*, i8** %dir.addr, align 8, !dbg !10799
  %20 = load i64, i64* %dirlen, align 8, !dbg !10800
  %call26 = call i8* @mempcpy(i8* %18, i8* %19, i64 %20) #12, !dbg !10801
  store i8* %call26, i8** %p, align 8, !dbg !10802
  %21 = load i8, i8* %sep, align 1, !dbg !10803
  %22 = load i8*, i8** %p, align 8, !dbg !10804
  store i8 %21, i8* %22, align 1, !dbg !10805, !ctir !8
  %23 = load i8, i8* %sep, align 1, !dbg !10806
  %conv27 = sext i8 %23 to i32, !dbg !10806
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !10807
  %conv29 = zext i1 %cmp28 to i32, !dbg !10807
  %24 = load i8*, i8** %p, align 8, !dbg !10808
  %idx.ext = sext i32 %conv29 to i64, !dbg !10808
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !10808, !ctir !8
  store i8* %add.ptr, i8** %p, align 8, !dbg !10808
  %25 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10809
  %tobool30 = icmp ne i8** %25, null, !dbg !10809
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !10811

if.then31:                                        ; preds = %if.end25
  %26 = load i8*, i8** %p, align 8, !dbg !10812
  %27 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10813
  store i8* %26, i8** %27, align 8, !dbg !10814, !ctir !7
  br label %if.end32, !dbg !10815

if.end32:                                         ; preds = %if.then31, %if.end25
  %28 = load i8*, i8** %p, align 8, !dbg !10816
  %29 = load i8*, i8** %base.addr, align 8, !dbg !10817
  %30 = load i64, i64* %baselen, align 8, !dbg !10818
  %call33 = call i8* @mempcpy(i8* %28, i8* %29, i64 %30) #12, !dbg !10819
  store i8* %call33, i8** %p, align 8, !dbg !10820
  %31 = load i8*, i8** %p, align 8, !dbg !10821
  store i8 0, i8* %31, align 1, !dbg !10822, !ctir !8
  %32 = load i8*, i8** %p_concat, align 8, !dbg !10823
  store i8* %32, i8** %retval, align 8, !dbg !10824
  br label %return, !dbg !10824

return:                                           ; preds = %if.end32, %if.then24
  %33 = load i8*, i8** %retval, align 8, !dbg !10825
  ret i8* %33, !dbg !10825
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !10826 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %total = alloca i64, align 8, !ctir !52
  %ptr = alloca i8*, align 8, !ctir !113
  %n_rw = alloca i64, align 8, !ctir !52
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10830, metadata !DIExpression()), !dbg !10831
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10832, metadata !DIExpression()), !dbg !10833
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10834, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.declare(metadata i64* %total, metadata !10836, metadata !DIExpression()), !dbg !10837
  store i64 0, i64* %total, align 8, !dbg !10837
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !10838, metadata !DIExpression()), !dbg !10839
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10840
  store i8* %0, i8** %ptr, align 8, !dbg !10839
  br label %while.cond, !dbg !10841

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !10842
  %cmp = icmp ugt i64 %1, 0, !dbg !10843
  br i1 %cmp, label %while.body, label %while.end, !dbg !10841

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !10844, metadata !DIExpression()), !dbg !10846
  %2 = load i32, i32* %fd.addr, align 4, !dbg !10847
  %3 = load i8*, i8** %ptr, align 8, !dbg !10848
  %4 = load i64, i64* %count.addr, align 8, !dbg !10849
  %call = call i64 @safe_write(i32 %2, i8* %3, i64 %4), !dbg !10850
  store i64 %call, i64* %n_rw, align 8, !dbg !10846
  %5 = load i64, i64* %n_rw, align 8, !dbg !10851
  %cmp1 = icmp eq i64 %5, -1, !dbg !10853
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10854

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !10855

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !10856
  %cmp2 = icmp eq i64 %6, 0, !dbg !10858
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !10859

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #15, !dbg !10860
  store i32 28, i32* %call4, align 4, !dbg !10862, !ctir !5
  br label %while.end, !dbg !10863

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !10864
  %8 = load i64, i64* %total, align 8, !dbg !10865
  %add = add i64 %8, %7, !dbg !10865
  store i64 %add, i64* %total, align 8, !dbg !10865
  %9 = load i64, i64* %n_rw, align 8, !dbg !10866
  %10 = load i8*, i8** %ptr, align 8, !dbg !10867
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !10867, !ctir !114
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !10867
  %11 = load i64, i64* %n_rw, align 8, !dbg !10868
  %12 = load i64, i64* %count.addr, align 8, !dbg !10869
  %sub = sub i64 %12, %11, !dbg !10869
  store i64 %sub, i64* %count.addr, align 8, !dbg !10869
  br label %while.cond, !dbg !10841, !llvm.loop !10870

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !10872
  ret i64 %13, !dbg !10873
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #9 !dbg !10874 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10878, metadata !DIExpression()), !dbg !10879
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10880
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !10881, !ctir !674
  %1 = load i64, i64* %n_buckets, align 8, !dbg !10881, !ctir !52
  ret i64 %1, !dbg !10882
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #9 !dbg !10883 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10884, metadata !DIExpression()), !dbg !10885
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10886
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !10887, !ctir !674
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !10887, !ctir !52
  ret i64 %1, !dbg !10888
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #9 !dbg !10889 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10890, metadata !DIExpression()), !dbg !10891
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10892
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !10893, !ctir !674
  %1 = load i64, i64* %n_entries, align 8, !dbg !10893, !ctir !52
  ret i64 %1, !dbg !10894
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #9 !dbg !10895 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !686
  %max_bucket_length = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !686
  %bucket_length = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10896, metadata !DIExpression()), !dbg !10897
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10898, metadata !DIExpression()), !dbg !10899
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !10900, metadata !DIExpression()), !dbg !10901
  store i64 0, i64* %max_bucket_length, align 8, !dbg !10901
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10902
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !10904, !ctir !674
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !10904, !ctir !680
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !10905
  br label %for.cond, !dbg !10906

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10907
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10909
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !10910, !ctir !674
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !10910, !ctir !686
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !10911
  br i1 %cmp, label %for.body, label %for.end, !dbg !10912

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10913
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !10916, !ctir !687
  %6 = load i8*, i8** %data, align 8, !dbg !10916, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !10913
  br i1 %tobool, label %if.then, label %if.end5, !dbg !10917

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !10918, metadata !DIExpression()), !dbg !10920
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10921
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !10920
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !10922, metadata !DIExpression()), !dbg !10923
  store i64 1, i64* %bucket_length, align 8, !dbg !10923
  br label %while.cond, !dbg !10924

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10925
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !10926, !ctir !687
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !10926, !ctir !680
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !10927
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10928
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !10924
  br i1 %tobool2, label %while.body, label %while.end, !dbg !10924

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !10929
  %inc = add i64 %11, 1, !dbg !10929
  store i64 %inc, i64* %bucket_length, align 8, !dbg !10929
  br label %while.cond, !dbg !10924, !llvm.loop !10930

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !10931
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !10933
  %cmp3 = icmp ugt i64 %12, %13, !dbg !10934
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !10935

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !10936
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !10937
  br label %if.end, !dbg !10938

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !10939

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !10940

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10941
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !10941, !ctir !687
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !10941
  br label %for.cond, !dbg !10942, !llvm.loop !10943

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !10945
  ret i64 %16, !dbg !10946
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #9 !dbg !10947 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !686
  %n_buckets_used = alloca i64, align 8, !ctir !52
  %n_entries = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !686
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10950, metadata !DIExpression()), !dbg !10951
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10952, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !10954, metadata !DIExpression()), !dbg !10955
  store i64 0, i64* %n_buckets_used, align 8, !dbg !10955
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !10956, metadata !DIExpression()), !dbg !10957
  store i64 0, i64* %n_entries, align 8, !dbg !10957
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10958
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !10960, !ctir !674
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !10960, !ctir !680
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !10961
  br label %for.cond, !dbg !10962

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10963
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10965
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !10966, !ctir !674
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !10966, !ctir !686
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !10967
  br i1 %cmp, label %for.body, label %for.end, !dbg !10968

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10969
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !10972, !ctir !687
  %6 = load i8*, i8** %data, align 8, !dbg !10972, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !10969
  br i1 %tobool, label %if.then, label %if.end, !dbg !10973

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !10974, metadata !DIExpression()), !dbg !10976
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10977
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !10976
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !10978
  %inc = add i64 %8, 1, !dbg !10978
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !10978
  %9 = load i64, i64* %n_entries, align 8, !dbg !10979
  %inc2 = add i64 %9, 1, !dbg !10979
  store i64 %inc2, i64* %n_entries, align 8, !dbg !10979
  br label %while.cond, !dbg !10980

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10981
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !10982, !ctir !687
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !10982, !ctir !680
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !10983
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10984
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !10980
  br i1 %tobool3, label %while.body, label %while.end, !dbg !10980

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !10985
  %inc4 = add i64 %13, 1, !dbg !10985
  store i64 %inc4, i64* %n_entries, align 8, !dbg !10985
  br label %while.cond, !dbg !10980, !llvm.loop !10986

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !10987

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !10988

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10989
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !10989, !ctir !687
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !10989
  br label %for.cond, !dbg !10990, !llvm.loop !10991

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !10993
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10995
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !10996, !ctir !674
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !10996, !ctir !52
  %cmp6 = icmp eq i64 %15, %17, !dbg !10997
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !10998

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !10999
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11000
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11001, !ctir !674
  %20 = load i64, i64* %n_entries7, align 8, !dbg !11001, !ctir !52
  %cmp8 = icmp eq i64 %18, %20, !dbg !11002
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11003

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !11004
  br label %return, !dbg !11004

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !11005
  br label %return, !dbg !11005

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !11006
  ret i1 %21, !dbg !11006
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #4 !dbg !11007 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %n_entries = alloca i64, align 8, !ctir !52
  %n_buckets = alloca i64, align 8, !ctir !52
  %n_buckets_used = alloca i64, align 8, !ctir !52
  %max_bucket_length = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11050, metadata !DIExpression()), !dbg !11051
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11052, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11054, metadata !DIExpression()), !dbg !11055
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11056
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #14, !dbg !11057
  store i64 %call, i64* %n_entries, align 8, !dbg !11055
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !11058, metadata !DIExpression()), !dbg !11059
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11060
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #14, !dbg !11061
  store i64 %call1, i64* %n_buckets, align 8, !dbg !11059
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11062, metadata !DIExpression()), !dbg !11063
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11064
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #14, !dbg !11065
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !11063
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11066, metadata !DIExpression()), !dbg !11067
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11068
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #14, !dbg !11069
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !11067
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11070
  %5 = load i64, i64* %n_entries, align 8, !dbg !11071
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.265, i64 0, i64 0), i64 %5), !dbg !11072
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11073
  %7 = load i64, i64* %n_buckets, align 8, !dbg !11074
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.266, i64 0, i64 0), i64 %7), !dbg !11075
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11076
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !11077
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !11078
  %conv = uitofp i64 %10 to double, !dbg !11078
  %mul = fmul double 1.000000e+02, %conv, !dbg !11079
  %11 = load i64, i64* %n_buckets, align 8, !dbg !11080
  %conv6 = uitofp i64 %11 to double, !dbg !11080
  %div = fdiv double %mul, %conv6, !dbg !11081
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.267, i64 0, i64 0), i64 %9, double %div), !dbg !11082
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11083
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11084
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.268, i64 0, i64 0), i64 %13), !dbg !11085
  ret void, !dbg !11086
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11087 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !686
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !686
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11090, metadata !DIExpression()), !dbg !11091
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11092, metadata !DIExpression()), !dbg !11093
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11094, metadata !DIExpression()), !dbg !11095
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11096
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11097
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11098
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11095
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11099, metadata !DIExpression()), !dbg !11100
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11101
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !11103, !ctir !687
  %3 = load i8*, i8** %data, align 8, !dbg !11103, !ctir !47
  %cmp = icmp eq i8* %3, null, !dbg !11104
  br i1 %cmp, label %if.then, label %if.end, !dbg !11105

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11106
  br label %return, !dbg !11106

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11107
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !11109
  br label %for.cond, !dbg !11110

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11111
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !11113
  br i1 %tobool, label %for.body, label %for.end, !dbg !11113

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !11114
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11116
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11117, !ctir !687
  %8 = load i8*, i8** %data2, align 8, !dbg !11117, !ctir !47
  %cmp3 = icmp eq i8* %6, %8, !dbg !11118
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !11119

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11120
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !11121, !ctir !674
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11121, !ctir !709
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !11122
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11123
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11124, !ctir !687
  %13 = load i8*, i8** %data4, align 8, !dbg !11124, !ctir !47
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !11120
  br i1 %call5, label %if.then6, label %if.end8, !dbg !11125

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11126
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11127, !ctir !687
  %15 = load i8*, i8** %data7, align 8, !dbg !11127, !ctir !47
  store i8* %15, i8** %retval, align 8, !dbg !11128
  br label %return, !dbg !11128

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11129

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11130
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11131, !ctir !687
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11131, !ctir !680
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11132
  br label %for.cond, !dbg !11133, !llvm.loop !11134

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !11136
  br label %return, !dbg !11136

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !11137
  ret i8* %18, !dbg !11137
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #4 !dbg !11138 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %key.addr = alloca i8*, align 8
  %n = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11141, metadata !DIExpression()), !dbg !11142
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11143, metadata !DIExpression()), !dbg !11144
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11145, metadata !DIExpression()), !dbg !11146
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11147
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !11148, !ctir !674
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11148, !ctir !704
  %2 = load i8*, i8** %key.addr, align 8, !dbg !11149
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11150
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !11151, !ctir !674
  %4 = load i64, i64* %n_buckets, align 8, !dbg !11151, !ctir !52
  %call = call i64 %1(i8* %2, i64 %4), !dbg !11147
  store i64 %call, i64* %n, align 8, !dbg !11146
  %5 = load i64, i64* %n, align 8, !dbg !11152
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11154
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !11155, !ctir !674
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !11155, !ctir !52
  %cmp = icmp ult i64 %5, %7, !dbg !11156
  br i1 %cmp, label %if.end, label %if.then, !dbg !11157

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !11158
  unreachable, !dbg !11158

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11159
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !11160, !ctir !674
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11160, !ctir !680
  %10 = load i64, i64* %n, align 8, !dbg !11161
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !11162, !ctir !681
  ret %struct.hash_entry* %add.ptr, !dbg !11163
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #9 !dbg !11164 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !686
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11167, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11169, metadata !DIExpression()), !dbg !11170
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11171
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11173, !ctir !674
  %1 = load i64, i64* %n_entries, align 8, !dbg !11173, !ctir !52
  %cmp = icmp eq i64 %1, 0, !dbg !11174
  br i1 %cmp, label %if.then, label %if.end, !dbg !11175

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11176
  br label %return, !dbg !11176

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11177
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !11179, !ctir !674
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11179, !ctir !680
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !11180
  br label %for.cond, !dbg !11181

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11182
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11185
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !11186, !ctir !674
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11186, !ctir !686
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !11187
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !11188

if.then3:                                         ; preds = %for.cond
  call void @abort() #13, !dbg !11189
  unreachable, !dbg !11189

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11190
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11192, !ctir !687
  %8 = load i8*, i8** %data, align 8, !dbg !11192, !ctir !47
  %tobool = icmp ne i8* %8, null, !dbg !11190
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !11193

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11194
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11195, !ctir !687
  %10 = load i8*, i8** %data5, align 8, !dbg !11195, !ctir !47
  store i8* %10, i8** %retval, align 8, !dbg !11196
  br label %return, !dbg !11196

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !11197

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11198
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !11198, !ctir !687
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11198
  br label %for.cond, !dbg !11199, !llvm.loop !11200

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !11203
  ret i8* %12, !dbg !11203
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11204 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !686
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !686
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11205, metadata !DIExpression()), !dbg !11206
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11207, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11209, metadata !DIExpression()), !dbg !11210
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11211
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11212
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11213
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11210
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11214, metadata !DIExpression()), !dbg !11215
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11216
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !11217
  br label %do.body, !dbg !11218

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11219
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !11222, !ctir !687
  %4 = load i8*, i8** %data, align 8, !dbg !11222, !ctir !47
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !11223
  %cmp = icmp eq i8* %4, %5, !dbg !11224
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11225

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11226
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !11227, !ctir !687
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11227, !ctir !680
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !11226
  br i1 %tobool, label %if.then, label %if.end, !dbg !11228

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11229
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11230, !ctir !687
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11230, !ctir !680
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11231, !ctir !681
  %10 = load i8*, i8** %data3, align 8, !dbg !11231, !ctir !47
  store i8* %10, i8** %retval, align 8, !dbg !11232
  br label %return, !dbg !11232

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11233
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !11234, !ctir !687
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !11234, !ctir !680
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !11235
  br label %do.cond, !dbg !11236

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11237
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !11238
  br i1 %cmp5, label %do.body, label %do.end, !dbg !11236, !llvm.loop !11239

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !11241

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11242
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11242, !ctir !687
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11242
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11243
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !11244, !ctir !674
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11244, !ctir !686
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !11245
  br i1 %cmp6, label %while.body, label %while.end, !dbg !11241

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11246
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !11248, !ctir !687
  %18 = load i8*, i8** %data7, align 8, !dbg !11248, !ctir !47
  %tobool8 = icmp ne i8* %18, null, !dbg !11246
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11249

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11250
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !11251, !ctir !687
  %20 = load i8*, i8** %data10, align 8, !dbg !11251, !ctir !47
  store i8* %20, i8** %retval, align 8, !dbg !11252
  br label %return, !dbg !11252

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !11241, !llvm.loop !11253

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !11255
  br label %return, !dbg !11255

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !11256
  ret i8* %21, !dbg !11256
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #4 !dbg !11257 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %counter = alloca i64, align 8, !ctir !52
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !686
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !686
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11260, metadata !DIExpression()), !dbg !11261
  store i8** %buffer, i8*** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !11262, metadata !DIExpression()), !dbg !11263
  store i64 %buffer_size, i64* %buffer_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !11264, metadata !DIExpression()), !dbg !11265
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11266, metadata !DIExpression()), !dbg !11267
  store i64 0, i64* %counter, align 8, !dbg !11267
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11268, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11270, metadata !DIExpression()), !dbg !11271
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11272
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11274, !ctir !674
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11274, !ctir !680
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11275
  br label %for.cond, !dbg !11276

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11277
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11279
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11280, !ctir !674
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11280, !ctir !686
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11281
  br i1 %cmp, label %for.body, label %for.end10, !dbg !11282

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11283
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11286, !ctir !687
  %6 = load i8*, i8** %data, align 8, !dbg !11286, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11283
  br i1 %tobool, label %if.then, label %if.end8, !dbg !11287

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11288
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11291
  br label %for.cond2, !dbg !11292

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11293
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11295
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11295

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !11296
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !11299
  %cmp5 = icmp uge i64 %9, %10, !dbg !11300
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !11301

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !11302
  store i64 %11, i64* %retval, align 8, !dbg !11303
  br label %return, !dbg !11303

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11304
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11305, !ctir !687
  %13 = load i8*, i8** %data7, align 8, !dbg !11305, !ctir !47
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !11306
  %15 = load i64, i64* %counter, align 8, !dbg !11307
  %inc = add i64 %15, 1, !dbg !11307
  store i64 %inc, i64* %counter, align 8, !dbg !11307
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !11306, !ctir !719
  store i8* %13, i8** %arrayidx, align 8, !dbg !11308
  br label %for.inc, !dbg !11309

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11310
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11311, !ctir !687
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11311, !ctir !680
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11312
  br label %for.cond2, !dbg !11313, !llvm.loop !11314

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !11316

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !11317

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11318
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !11318, !ctir !687
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11318
  br label %for.cond, !dbg !11319, !llvm.loop !11320

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !11322
  store i64 %19, i64* %retval, align 8, !dbg !11323
  br label %return, !dbg !11323

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !11324
  ret i64 %20, !dbg !11324
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #4 !dbg !11325 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %processor.addr = alloca i1 (i8*, i8*)*, align 8
  %processor_data.addr = alloca i8*, align 8
  %counter = alloca i64, align 8, !ctir !52
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !686
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !686
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11332, metadata !DIExpression()), !dbg !11333
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !11334, metadata !DIExpression()), !dbg !11335
  store i8* %processor_data, i8** %processor_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !11336, metadata !DIExpression()), !dbg !11337
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11338, metadata !DIExpression()), !dbg !11339
  store i64 0, i64* %counter, align 8, !dbg !11339
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11340, metadata !DIExpression()), !dbg !11341
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11342, metadata !DIExpression()), !dbg !11343
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11344
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11346, !ctir !674
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11346, !ctir !680
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11347
  br label %for.cond, !dbg !11348

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11349
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11351
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11352, !ctir !674
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11352, !ctir !686
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11353
  br i1 %cmp, label %for.body, label %for.end9, !dbg !11354

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11355
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11358, !ctir !687
  %6 = load i8*, i8** %data, align 8, !dbg !11358, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11355
  br i1 %tobool, label %if.then, label %if.end7, !dbg !11359

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11360
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11363
  br label %for.cond2, !dbg !11364

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11365
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11367
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11367

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !11368
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11371
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !11372, !ctir !687
  %11 = load i8*, i8** %data5, align 8, !dbg !11372, !ctir !47
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !11373
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !11368
  br i1 %call, label %if.end, label %if.then6, !dbg !11374

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !11375
  store i64 %13, i64* %retval, align 8, !dbg !11376
  br label %return, !dbg !11376

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !11377
  %inc = add i64 %14, 1, !dbg !11377
  store i64 %inc, i64* %counter, align 8, !dbg !11377
  br label %for.inc, !dbg !11378

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11379
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !11380, !ctir !687
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11380, !ctir !680
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !11381
  br label %for.cond2, !dbg !11382, !llvm.loop !11383

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !11385

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !11386

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11387
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !11387, !ctir !687
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11387
  br label %for.cond, !dbg !11388, !llvm.loop !11389

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !11391
  store i64 %18, i64* %retval, align 8, !dbg !11392
  br label %return, !dbg !11392

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !11393
  ret i64 %19, !dbg !11393
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #9 !dbg !11394 {
entry:
  %string.addr = alloca i8*, align 8
  %n_buckets.addr = alloca i64, align 8
  %value = alloca i64, align 8, !ctir !52
  %ch = alloca i8, align 1, !ctir !451
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !11397, metadata !DIExpression()), !dbg !11398
  store i64 %n_buckets, i64* %n_buckets.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !11399, metadata !DIExpression()), !dbg !11400
  call void @llvm.dbg.declare(metadata i64* %value, metadata !11401, metadata !DIExpression()), !dbg !11402
  store i64 0, i64* %value, align 8, !dbg !11402
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !11403, metadata !DIExpression()), !dbg !11404
  br label %for.cond, !dbg !11405

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !11406
  %1 = load i8, i8* %0, align 1, !dbg !11409, !ctir !114
  store i8 %1, i8* %ch, align 1, !dbg !11410
  %tobool = icmp ne i8 %1, 0, !dbg !11411
  br i1 %tobool, label %for.body, label %for.end, !dbg !11411

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !11412
  %mul = mul i64 %2, 31, !dbg !11413
  %3 = load i8, i8* %ch, align 1, !dbg !11414
  %conv = zext i8 %3 to i64, !dbg !11414
  %add = add i64 %mul, %conv, !dbg !11415
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !11416
  %rem = urem i64 %add, %4, !dbg !11417
  store i64 %rem, i64* %value, align 8, !dbg !11418
  br label %for.inc, !dbg !11419

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !11420
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !11420, !ctir !114
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !11420
  br label %for.cond, !dbg !11421, !llvm.loop !11422

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !11424
  ret i64 %6, !dbg !11425
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #4 !dbg !11426 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11430, metadata !DIExpression()), !dbg !11431
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11432
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !11433
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !11433
  ret void, !dbg !11434
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #4 !dbg !11435 {
entry:
  %retval = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %hasher.addr = alloca i64 (i8*, i64)*, align 8
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8
  %data_freer.addr = alloca void (i8*)*, align 8
  %table = alloca %struct.hash_table*, align 8, !ctir !720
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11438, metadata !DIExpression()), !dbg !11439
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11440, metadata !DIExpression()), !dbg !11441
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !11442, metadata !DIExpression()), !dbg !11443
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !11444, metadata !DIExpression()), !dbg !11445
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !11446, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !11448, metadata !DIExpression()), !dbg !11449
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11450
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !11452
  br i1 %cmp, label %if.then, label %if.end, !dbg !11453

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11454
  br label %if.end, !dbg !11455

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11456
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !11458
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11459

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11460
  br label %if.end3, !dbg !11461

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #12, !dbg !11462
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !11462
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !11463
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11464
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !11466
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11467

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11468
  br label %return, !dbg !11468

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11469
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !11469
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !11471

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11472
  br label %if.end8, !dbg !11473

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11474
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11475
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !11476, !ctir !675
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !11477, !ctir !692
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11478
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !11480
  br i1 %call10, label %if.end12, label %if.then11, !dbg !11481

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !11482

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11484
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11485
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #14, !dbg !11486
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11487
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !11488, !ctir !675
  store i64 %call13, i64* %n_buckets, align 8, !dbg !11489, !ctir !52
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11490
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !11492, !ctir !675
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !11492, !ctir !52
  %tobool15 = icmp ne i64 %12, 0, !dbg !11490
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !11493

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !11494

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11495
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !11496, !ctir !675
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !11496, !ctir !52
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #12, !dbg !11497
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !11497
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11498
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !11499, !ctir !675
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !11500, !ctir !680
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11501
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !11503, !ctir !675
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !11503, !ctir !680
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !11504
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !11505

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !11506

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11507
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !11508, !ctir !675
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !11508, !ctir !680
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11509
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !11510, !ctir !675
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !11510, !ctir !52
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !11511, !ctir !681
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11512
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !11513, !ctir !675
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !11514, !ctir !686
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11515
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !11516, !ctir !675
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11517, !ctir !52
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11518
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !11519, !ctir !675
  store i64 0, i64* %n_entries, align 8, !dbg !11520, !ctir !52
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11521
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11522
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !11523, !ctir !675
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !11524, !ctir !704
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11525
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11526
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !11527, !ctir !675
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !11528, !ctir !709
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !11529
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11530
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !11531, !ctir !675
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !11532, !ctir !714
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11533
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !11534, !ctir !675
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !11535, !ctir !680
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11536
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !11537
  br label %return, !dbg !11537

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !11538), !dbg !11539
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11540
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !11540
  call void @free(i8* %35) #12, !dbg !11541
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11542
  br label %return, !dbg !11542

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !11543
  ret %struct.hash_table* %36, !dbg !11543
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #4 !dbg !11544 {
entry:
  %data.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %val = alloca i64, align 8, !ctir !52
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11545, metadata !DIExpression()), !dbg !11546
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11547, metadata !DIExpression()), !dbg !11548
  call void @llvm.dbg.declare(metadata i64* %val, metadata !11549, metadata !DIExpression()), !dbg !11550
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11551
  %1 = ptrtoint i8* %0 to i64, !dbg !11552
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !11553
  store i64 %call, i64* %val, align 8, !dbg !11550
  %2 = load i64, i64* %val, align 8, !dbg !11554
  %3 = load i64, i64* %n.addr, align 8, !dbg !11555
  %rem = urem i64 %2, %3, !dbg !11556
  ret i64 %rem, !dbg !11557
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #4 !dbg !11558 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !11559, metadata !DIExpression()), !dbg !11560
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !11561, metadata !DIExpression()), !dbg !11562
  %0 = load i8*, i8** %a.addr, align 8, !dbg !11563
  %1 = load i8*, i8** %b.addr, align 8, !dbg !11564
  %cmp = icmp eq i8* %0, %1, !dbg !11565
  ret i1 %cmp, !dbg !11566
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #4 !dbg !11567 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !692
  %epsilon = alloca float, align 4, !ctir !698
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11570, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !11572, metadata !DIExpression()), !dbg !11573
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11574
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !11575, !ctir !675
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !11575, !ctir !692
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !11573
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !11576, metadata !DIExpression()), !dbg !11577
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11578
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !11580
  br i1 %cmp, label %if.then, label %if.end, !dbg !11581

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !11582
  br label %return, !dbg !11582

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !11583
  %3 = load float, float* %epsilon, align 4, !dbg !11584
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11586
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !11587, !ctir !693
  %5 = load float, float* %growth_threshold, align 4, !dbg !11587, !ctir !698
  %cmp2 = fcmp olt float %3, %5, !dbg !11588
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !11589

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11590
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !11591, !ctir !693
  %7 = load float, float* %growth_threshold3, align 4, !dbg !11591, !ctir !698
  %8 = load float, float* %epsilon, align 4, !dbg !11592
  %sub = fsub float 1.000000e+00, %8, !dbg !11593
  %cmp4 = fcmp olt float %7, %sub, !dbg !11594
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !11595

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !11596
  %add = fadd float 1.000000e+00, %9, !dbg !11597
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11598
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !11599, !ctir !693
  %11 = load float, float* %growth_factor, align 4, !dbg !11599, !ctir !698
  %cmp6 = fcmp olt float %add, %11, !dbg !11600
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !11601

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11602
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !11603, !ctir !693
  %13 = load float, float* %shrink_threshold, align 4, !dbg !11603, !ctir !698
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !11604
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !11605

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11606
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !11607, !ctir !693
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !11607, !ctir !698
  %16 = load float, float* %epsilon, align 4, !dbg !11608
  %add11 = fadd float %15, %16, !dbg !11609
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11610
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !11611, !ctir !693
  %18 = load float, float* %shrink_factor, align 4, !dbg !11611, !ctir !698
  %cmp12 = fcmp olt float %add11, %18, !dbg !11612
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !11613

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11614
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !11615, !ctir !693
  %20 = load float, float* %shrink_factor14, align 4, !dbg !11615, !ctir !698
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !11616
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !11617

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11618
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !11619, !ctir !693
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !11619, !ctir !698
  %23 = load float, float* %epsilon, align 4, !dbg !11620
  %add18 = fadd float %22, %23, !dbg !11621
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11622
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !11623, !ctir !693
  %25 = load float, float* %growth_threshold19, align 4, !dbg !11623, !ctir !698
  %cmp20 = fcmp olt float %add18, %25, !dbg !11624
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !11625

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !11626
  br label %return, !dbg !11626

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11627
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !11628, !ctir !675
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !11629, !ctir !692
  store i1 false, i1* %retval, align 1, !dbg !11630
  br label %return, !dbg !11630

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !11631
  ret i1 %27, !dbg !11631
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #9 !dbg !11632 {
entry:
  %retval = alloca i64, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %new_candidate = alloca float, align 4, !ctir !698
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11635, metadata !DIExpression()), !dbg !11636
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11637, metadata !DIExpression()), !dbg !11638
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11639
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !11641, !ctir !693
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !11641
  %tobool = trunc i8 %1 to i1, !dbg !11641, !ctir !139
  br i1 %tobool, label %if.end4, label %if.then, !dbg !11642

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !11643, metadata !DIExpression()), !dbg !11645
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11646
  %conv = uitofp i64 %2 to float, !dbg !11646
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11647
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !11648, !ctir !693
  %4 = load float, float* %growth_threshold, align 4, !dbg !11648, !ctir !698
  %div = fdiv float %conv, %4, !dbg !11649
  store float %div, float* %new_candidate, align 4, !dbg !11645
  %5 = load float, float* %new_candidate, align 4, !dbg !11650
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !11652
  br i1 %cmp, label %if.then2, label %if.end, !dbg !11653

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !11654
  br label %return, !dbg !11654

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !11655
  %conv3 = fptoui float %6 to i64, !dbg !11655
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !11656
  br label %if.end4, !dbg !11657

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !11658
  %call = call i64 @next_prime(i64 %7) #15, !dbg !11659
  store i64 %call, i64* %candidate.addr, align 8, !dbg !11660
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11661
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !11661
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !11663

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !11664
  br label %return, !dbg !11664

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !11665
  store i64 %9, i64* %retval, align 8, !dbg !11666
  br label %return, !dbg !11666

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !11667
  ret i64 %10, !dbg !11667
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #10 !dbg !11668 {
entry:
  %candidate.addr = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11671, metadata !DIExpression()), !dbg !11672
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !11673
  %cmp = icmp ult i64 %0, 10, !dbg !11675
  br i1 %cmp, label %if.then, label %if.end, !dbg !11676

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !11677
  br label %if.end, !dbg !11678

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !11679
  %or = or i64 %1, 1, !dbg !11679
  store i64 %or, i64* %candidate.addr, align 8, !dbg !11679
  br label %while.cond, !dbg !11680

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11681
  %cmp1 = icmp ne i64 -1, %2, !dbg !11682
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !11683

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11684
  %call = call zeroext i1 @is_prime(i64 %3) #15, !dbg !11685
  %lnot = xor i1 %call, true, !dbg !11686
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !11687
  br i1 %4, label %while.body, label %while.end, !dbg !11680

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !11688
  %add = add i64 %5, 2, !dbg !11688
  store i64 %add, i64* %candidate.addr, align 8, !dbg !11688
  br label %while.cond, !dbg !11680, !llvm.loop !11689

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !11691
  ret i64 %6, !dbg !11692
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #10 !dbg !11693 {
entry:
  %candidate.addr = alloca i64, align 8
  %divisor = alloca i64, align 8, !ctir !52
  %square = alloca i64, align 8, !ctir !52
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11696, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !11698, metadata !DIExpression()), !dbg !11699
  store i64 3, i64* %divisor, align 8, !dbg !11699
  call void @llvm.dbg.declare(metadata i64* %square, metadata !11700, metadata !DIExpression()), !dbg !11701
  %0 = load i64, i64* %divisor, align 8, !dbg !11702
  %1 = load i64, i64* %divisor, align 8, !dbg !11703
  %mul = mul i64 %0, %1, !dbg !11704
  store i64 %mul, i64* %square, align 8, !dbg !11701
  br label %while.cond, !dbg !11705

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !11706
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11707
  %cmp = icmp ult i64 %2, %3, !dbg !11708
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11709

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !11710
  %5 = load i64, i64* %divisor, align 8, !dbg !11711
  %rem = urem i64 %4, %5, !dbg !11712
  %tobool = icmp ne i64 %rem, 0, !dbg !11709
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !11713
  br i1 %6, label %while.body, label %while.end, !dbg !11705

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !11714
  %inc = add i64 %7, 1, !dbg !11714
  store i64 %inc, i64* %divisor, align 8, !dbg !11714
  %8 = load i64, i64* %divisor, align 8, !dbg !11716
  %mul1 = mul i64 4, %8, !dbg !11717
  %9 = load i64, i64* %square, align 8, !dbg !11718
  %add = add i64 %9, %mul1, !dbg !11718
  store i64 %add, i64* %square, align 8, !dbg !11718
  %10 = load i64, i64* %divisor, align 8, !dbg !11719
  %inc2 = add i64 %10, 1, !dbg !11719
  store i64 %inc2, i64* %divisor, align 8, !dbg !11719
  br label %while.cond, !dbg !11705, !llvm.loop !11720

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !11722
  %12 = load i64, i64* %divisor, align 8, !dbg !11723
  %rem3 = urem i64 %11, %12, !dbg !11724
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !11722
  %13 = zext i1 %tobool4 to i64, !dbg !11722
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !11722
  %tobool5 = icmp ne i32 %cond, 0, !dbg !11725
  ret i1 %tobool5, !dbg !11726
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #4 !dbg !11727 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !680
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !680
  %next = alloca %struct.hash_entry*, align 8, !ctir !680
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11730, metadata !DIExpression()), !dbg !11731
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11732, metadata !DIExpression()), !dbg !11733
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11734
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11736, !ctir !675
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11736, !ctir !680
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11737
  br label %for.cond, !dbg !11738

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11739
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11741
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11742, !ctir !675
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11742, !ctir !686
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11743
  br i1 %cmp, label %for.body, label %for.end24, !dbg !11744

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11745
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11748, !ctir !681
  %6 = load i8*, i8** %data, align 8, !dbg !11748, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11745
  br i1 %tobool, label %if.then, label %if.end22, !dbg !11749

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11750, metadata !DIExpression()), !dbg !11752
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11753, metadata !DIExpression()), !dbg !11754
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11755
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !11757, !ctir !681
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11757, !ctir !680
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !11758
  br label %for.cond3, !dbg !11759

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11760
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !11762
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !11762

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11763
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !11766, !ctir !675
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !11766, !ctir !714
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !11763
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !11767

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11768
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !11769, !ctir !675
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !11769, !ctir !714
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11770
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11771, !ctir !681
  %15 = load i8*, i8** %data9, align 8, !dbg !11771, !ctir !47
  call void %13(i8* %15), !dbg !11768
  br label %if.end, !dbg !11768

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11772
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !11773, !ctir !681
  store i8* null, i8** %data10, align 8, !dbg !11774, !ctir !47
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11775
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !11776, !ctir !681
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !11776, !ctir !680
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !11777
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11778
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !11779, !ctir !675
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11779, !ctir !680
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11780
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !11781, !ctir !681
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !11782, !ctir !680
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11783
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11784
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !11785, !ctir !675
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !11786, !ctir !680
  br label %for.inc, !dbg !11787

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11788
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !11789
  br label %for.cond3, !dbg !11790, !llvm.loop !11791

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11793
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !11795, !ctir !675
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !11795, !ctir !714
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !11793
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !11796

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11797
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !11798, !ctir !675
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !11798, !ctir !714
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11799
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !11800, !ctir !681
  %30 = load i8*, i8** %data18, align 8, !dbg !11800, !ctir !47
  call void %28(i8* %30), !dbg !11797
  br label %if.end19, !dbg !11797

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11801
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !11802, !ctir !681
  store i8* null, i8** %data20, align 8, !dbg !11803, !ctir !47
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11804
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !11805, !ctir !681
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !11806, !ctir !680
  br label %if.end22, !dbg !11807

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !11808

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11809
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !11809, !ctir !681
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11809
  br label %for.cond, !dbg !11810, !llvm.loop !11811

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11813
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !11814, !ctir !675
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11815, !ctir !52
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11816
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !11817, !ctir !675
  store i64 0, i64* %n_entries, align 8, !dbg !11818, !ctir !52
  ret void, !dbg !11819
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #4 !dbg !11820 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !680
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !680
  %next = alloca %struct.hash_entry*, align 8, !ctir !680
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11821, metadata !DIExpression()), !dbg !11822
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11823, metadata !DIExpression()), !dbg !11824
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11825, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11827, metadata !DIExpression()), !dbg !11828
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11829
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !11831, !ctir !675
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !11831, !ctir !714
  %tobool = icmp ne void (i8*)* %1, null, !dbg !11829
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !11832

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11833
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !11834, !ctir !675
  %3 = load i64, i64* %n_entries, align 8, !dbg !11834, !ctir !52
  %tobool1 = icmp ne i64 %3, 0, !dbg !11833
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !11835

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11836
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !11839, !ctir !675
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !11839, !ctir !680
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !11840
  br label %for.cond, !dbg !11841

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11842
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11844
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !11845, !ctir !675
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11845, !ctir !686
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !11846
  br i1 %cmp, label %for.body, label %for.end12, !dbg !11847

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11848
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11851, !ctir !681
  %10 = load i8*, i8** %data, align 8, !dbg !11851, !ctir !47
  %tobool3 = icmp ne i8* %10, null, !dbg !11848
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !11852

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11853
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11856
  br label %for.cond5, !dbg !11857

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11858
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !11860
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !11860

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11861
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !11862, !ctir !675
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !11862, !ctir !714
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11863
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !11864, !ctir !681
  %16 = load i8*, i8** %data9, align 8, !dbg !11864, !ctir !47
  call void %14(i8* %16), !dbg !11861
  br label %for.inc, !dbg !11861

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11865
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !11866, !ctir !681
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !11866, !ctir !680
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !11867
  br label %for.cond5, !dbg !11868, !llvm.loop !11869

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !11871

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !11872

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11873
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !11873, !ctir !681
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11873
  br label %for.cond, !dbg !11874, !llvm.loop !11875

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !11877

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11878
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !11880, !ctir !675
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !11880, !ctir !680
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !11881
  br label %for.cond15, !dbg !11882

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11883
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11885
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !11886, !ctir !675
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !11886, !ctir !686
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !11887
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !11888

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11889
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !11892, !ctir !681
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !11892, !ctir !680
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !11893
  br label %for.cond20, !dbg !11894

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11895
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !11897
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !11897

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11898
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !11900, !ctir !681
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !11900, !ctir !680
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !11901
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11902
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !11902
  call void @free(i8* %31) #12, !dbg !11903
  br label %for.inc24, !dbg !11904

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11905
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !11906
  br label %for.cond20, !dbg !11907, !llvm.loop !11908

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !11910

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11911
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !11911, !ctir !681
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !11911
  br label %for.cond15, !dbg !11912, !llvm.loop !11913

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11915
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !11917, !ctir !675
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11917, !ctir !680
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !11918
  br label %for.cond29, !dbg !11919

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11920
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !11922
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !11922

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11923
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !11925, !ctir !681
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !11925, !ctir !680
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !11926
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11927
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !11927
  call void @free(i8* %40) #12, !dbg !11928
  br label %for.inc33, !dbg !11929

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11930
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !11931
  br label %for.cond29, !dbg !11932, !llvm.loop !11933

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11935
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !11936, !ctir !675
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !11936, !ctir !680
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !11935
  call void @free(i8* %44) #12, !dbg !11937
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11938
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !11938
  call void @free(i8* %46) #12, !dbg !11939
  ret void, !dbg !11940
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #4 !dbg !11941 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %storage = alloca %struct.hash_table, align 8, !ctir !675
  %new_table = alloca %struct.hash_table*, align 8, !ctir !720
  %new_size = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11944, metadata !DIExpression()), !dbg !11945
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11946, metadata !DIExpression()), !dbg !11947
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !11948, metadata !DIExpression()), !dbg !11949
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !11950, metadata !DIExpression()), !dbg !11951
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !11952, metadata !DIExpression()), !dbg !11953
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !11954
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11955
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !11956, !ctir !675
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11956, !ctir !692
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #14, !dbg !11957
  store i64 %call, i64* %new_size, align 8, !dbg !11953
  %3 = load i64, i64* %new_size, align 8, !dbg !11958
  %tobool = icmp ne i64 %3, 0, !dbg !11958
  br i1 %tobool, label %if.end, label %if.then, !dbg !11960

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11961
  br label %return, !dbg !11961

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !11962
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11964
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !11965, !ctir !675
  %6 = load i64, i64* %n_buckets, align 8, !dbg !11965, !ctir !52
  %cmp = icmp eq i64 %4, %6, !dbg !11966
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !11967

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !11968
  br label %return, !dbg !11968

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !11969
  %7 = load i64, i64* %new_size, align 8, !dbg !11970
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #12, !dbg !11971
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !11971
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11972
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !11973, !ctir !675
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !11974, !ctir !680
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11975
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !11977, !ctir !675
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !11977, !ctir !680
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !11978
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !11979

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !11980
  br label %return, !dbg !11980

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !11981
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11982
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !11983, !ctir !675
  store i64 %12, i64* %n_buckets8, align 8, !dbg !11984, !ctir !52
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11985
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !11986, !ctir !675
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !11986, !ctir !680
  %16 = load i64, i64* %new_size, align 8, !dbg !11987
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !11988, !ctir !681
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11989
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !11990, !ctir !675
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !11991, !ctir !686
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11992
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !11993, !ctir !675
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11994, !ctir !52
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11995
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11996, !ctir !675
  store i64 0, i64* %n_entries, align 8, !dbg !11997, !ctir !52
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11998
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !11999, !ctir !675
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !11999, !ctir !692
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12000
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !12001, !ctir !675
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !12002, !ctir !692
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12003
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !12004, !ctir !675
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !12004, !ctir !704
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12005
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !12006, !ctir !675
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !12007, !ctir !704
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12008
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !12009, !ctir !675
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12009, !ctir !709
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12010
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !12011, !ctir !675
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !12012, !ctir !709
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12013
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !12014, !ctir !675
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12014, !ctir !714
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12015
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12016, !ctir !675
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !12017, !ctir !714
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12018
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12019, !ctir !675
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12019, !ctir !680
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12020
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12021, !ctir !675
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !12022, !ctir !680
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12023
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12025
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !12026
  br i1 %call16, label %if.then17, label %if.end29, !dbg !12027

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12028
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !12030, !ctir !675
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !12030, !ctir !680
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !12028
  call void @free(i8* %39) #12, !dbg !12031
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12032
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !12033, !ctir !675
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !12033, !ctir !680
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12034
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12035, !ctir !675
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !12036, !ctir !680
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12037
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !12038, !ctir !675
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !12038, !ctir !686
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12039
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !12040, !ctir !675
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !12041, !ctir !686
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12042
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !12043, !ctir !675
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !12043, !ctir !52
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12044
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !12045, !ctir !675
  store i64 %47, i64* %n_buckets24, align 8, !dbg !12046, !ctir !52
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12047
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12048, !ctir !675
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !12048, !ctir !52
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12049
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !12050, !ctir !675
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !12051, !ctir !52
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12052
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !12053, !ctir !675
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !12053, !ctir !680
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12054
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !12055, !ctir !675
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !12056, !ctir !680
  store i1 true, i1* %retval, align 1, !dbg !12057
  br label %return, !dbg !12057

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12058
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !12059, !ctir !675
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !12059, !ctir !680
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12060
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !12061, !ctir !675
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !12062, !ctir !680
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12063
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12065
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !12066
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !12067

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12068
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12069
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !12070
  br i1 %call33, label %if.end35, label %if.then34, !dbg !12071

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #13, !dbg !12072
  unreachable, !dbg !12072

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12073
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !12074, !ctir !675
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !12074, !ctir !680
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !12073
  call void @free(i8* %64) #12, !dbg !12075
  store i1 false, i1* %retval, align 1, !dbg !12076
  br label %return, !dbg !12076

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !12077
  ret i1 %65, !dbg !12077
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #4 !dbg !12078 {
entry:
  %retval = alloca i1, align 1
  %dst.addr = alloca %struct.hash_table*, align 8
  %src.addr = alloca %struct.hash_table*, align 8
  %safe.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !680
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !680
  %next = alloca %struct.hash_entry*, align 8, !ctir !680
  %data2 = alloca i8*, align 8, !ctir !47
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !680
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !680
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !12081, metadata !DIExpression()), !dbg !12082
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !12083, metadata !DIExpression()), !dbg !12084
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !12085, metadata !DIExpression()), !dbg !12086
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12087, metadata !DIExpression()), !dbg !12088
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12089, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12091, metadata !DIExpression()), !dbg !12092
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12093
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12095, !ctir !675
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12095, !ctir !680
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12096
  br label %for.cond, !dbg !12097

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12098
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12100
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12101, !ctir !675
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12101, !ctir !686
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12102
  br i1 %cmp, label %for.body, label %for.end42, !dbg !12103

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12104
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12106, !ctir !681
  %6 = load i8*, i8** %data, align 8, !dbg !12106, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !12104
  br i1 %tobool, label %if.then, label %if.end40, !dbg !12107

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !12108, metadata !DIExpression()), !dbg !12110
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !12111, metadata !DIExpression()), !dbg !12112
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12113
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12115, !ctir !681
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !12115, !ctir !680
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12116
  br label %for.cond4, !dbg !12117

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12118
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !12120
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !12120

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12121
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12123, !ctir !681
  %11 = load i8*, i8** %data7, align 8, !dbg !12123, !ctir !47
  store i8* %11, i8** %data2, align 8, !dbg !12124
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12125
  %13 = load i8*, i8** %data2, align 8, !dbg !12126
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !12127
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !12128
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12129
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !12130, !ctir !681
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !12130, !ctir !680
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !12131
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12132
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12134, !ctir !681
  %17 = load i8*, i8** %data9, align 8, !dbg !12134, !ctir !47
  %tobool10 = icmp ne i8* %17, null, !dbg !12132
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12135

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12136
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !12138, !ctir !681
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12138, !ctir !680
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12139
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !12140, !ctir !681
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !12141, !ctir !680
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12142
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12143
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !12144, !ctir !681
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !12145, !ctir !680
  br label %if.end, !dbg !12146

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !12147
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12149
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !12150, !ctir !681
  store i8* %23, i8** %data15, align 8, !dbg !12151, !ctir !47
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12152
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !12153, !ctir !675
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !12154, !ctir !52
  %inc = add i64 %26, 1, !dbg !12154
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !12154, !ctir !52
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12155
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12156
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !12157
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !12158

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12159
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12160
  br label %for.cond4, !dbg !12161, !llvm.loop !12162

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12164
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !12165, !ctir !681
  %31 = load i8*, i8** %data16, align 8, !dbg !12165, !ctir !47
  store i8* %31, i8** %data2, align 8, !dbg !12166
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12167
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12168, !ctir !681
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !12169, !ctir !680
  %33 = load i8, i8* %safe.addr, align 1, !dbg !12170
  %tobool18 = trunc i8 %33 to i1, !dbg !12170
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12172

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !12173

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12174
  %35 = load i8*, i8** %data2, align 8, !dbg !12175
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !12176
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !12177
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12178
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !12180, !ctir !681
  %37 = load i8*, i8** %data22, align 8, !dbg !12180, !ctir !47
  %tobool23 = icmp ne i8* %37, null, !dbg !12178
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !12181

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12182, metadata !DIExpression()), !dbg !12184
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12185
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !12186
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !12184
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12187
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !12189
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !12190

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !12191
  br label %return, !dbg !12191

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !12192
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12193
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !12194, !ctir !681
  store i8* %40, i8** %data29, align 8, !dbg !12195, !ctir !47
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12196
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12197, !ctir !681
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12197, !ctir !680
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12198
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !12199, !ctir !681
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !12200, !ctir !680
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12201
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12202
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12203, !ctir !681
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !12204, !ctir !680
  br label %if.end37, !dbg !12205

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !12206
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12208
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !12209, !ctir !681
  store i8* %47, i8** %data34, align 8, !dbg !12210, !ctir !47
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12211
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12212, !ctir !675
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !12213, !ctir !52
  %inc36 = add i64 %50, 1, !dbg !12213
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !12213, !ctir !52
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12214
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !12215, !ctir !681
  store i8* null, i8** %data38, align 8, !dbg !12216, !ctir !47
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12217
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !12218, !ctir !675
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !12219, !ctir !52
  %dec = add i64 %53, -1, !dbg !12219
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !12219, !ctir !52
  br label %if.end40, !dbg !12220

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !12106

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12221
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !12221, !ctir !681
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12221
  br label %for.cond, !dbg !12222, !llvm.loop !12223

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !12225
  br label %return, !dbg !12225

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !12226
  ret i1 %55, !dbg !12226
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #4 !dbg !12227 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12230, metadata !DIExpression()), !dbg !12231
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !12232, metadata !DIExpression()), !dbg !12233
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12234
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !12235, !ctir !681
  store i8* null, i8** %data, align 8, !dbg !12236, !ctir !47
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12237
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !12238, !ctir !675
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12238, !ctir !680
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12239
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !12240, !ctir !681
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !12241, !ctir !680
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12242
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12243
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !12244, !ctir !675
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12245, !ctir !680
  ret void, !dbg !12246
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #4 !dbg !12247 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %new = alloca %struct.hash_entry*, align 8, !ctir !680
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12250, metadata !DIExpression()), !dbg !12251
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !12252, metadata !DIExpression()), !dbg !12253
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12254
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !12256, !ctir !675
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12256, !ctir !680
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !12254
  br i1 %tobool, label %if.then, label %if.else, !dbg !12257

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12258
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !12260, !ctir !675
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !12260, !ctir !680
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !12261
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12262
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !12263, !ctir !681
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12263, !ctir !680
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12264
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !12265, !ctir !675
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12266, !ctir !680
  br label %if.end, !dbg !12267

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #12, !dbg !12268
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !12268
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !12270
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12271
  ret %struct.hash_entry* %8, !dbg !12272
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #4 !dbg !12273 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent.addr = alloca i8**, align 8
  %data = alloca i8*, align 8, !ctir !47
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !680
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !692
  %candidate = alloca float, align 4, !ctir !698
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !680
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12277, metadata !DIExpression()), !dbg !12278
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12279, metadata !DIExpression()), !dbg !12280
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !12281, metadata !DIExpression()), !dbg !12282
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12283, metadata !DIExpression()), !dbg !12284
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12285, metadata !DIExpression()), !dbg !12286
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !12287
  %tobool = icmp ne i8* %0, null, !dbg !12287
  br i1 %tobool, label %if.end, label %if.then, !dbg !12289

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !12290
  unreachable, !dbg !12290

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12291
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !12293
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12294
  store i8* %call, i8** %data, align 8, !dbg !12295
  %cmp = icmp ne i8* %call, null, !dbg !12296
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !12297

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12298
  %tobool3 = icmp ne i8** %3, null, !dbg !12298
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !12301

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !12302
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12303
  store i8* %4, i8** %5, align 8, !dbg !12304, !ctir !553
  br label %if.end5, !dbg !12305

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !12306
  br label %return, !dbg !12306

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12307
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !12309, !ctir !675
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !12309, !ctir !52
  %conv = uitofp i64 %7 to float, !dbg !12307
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12310
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !12311, !ctir !675
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12311, !ctir !692
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !12312, !ctir !693
  %10 = load float, float* %growth_threshold, align 4, !dbg !12312, !ctir !698
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12313
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12314, !ctir !675
  %12 = load i64, i64* %n_buckets, align 8, !dbg !12314, !ctir !52
  %conv7 = uitofp i64 %12 to float, !dbg !12313
  %mul = fmul float %10, %conv7, !dbg !12315
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !12316
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !12317

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12318
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !12320
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12321
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !12323, !ctir !675
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !12323, !ctir !52
  %conv13 = uitofp i64 %15 to float, !dbg !12321
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12324
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !12325, !ctir !675
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !12325, !ctir !692
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !12326, !ctir !693
  %18 = load float, float* %growth_threshold15, align 4, !dbg !12326, !ctir !698
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12327
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !12328, !ctir !675
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !12328, !ctir !52
  %conv17 = uitofp i64 %20 to float, !dbg !12327
  %mul18 = fmul float %18, %conv17, !dbg !12329
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !12330
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !12331

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !12332, metadata !DIExpression()), !dbg !12334
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12335
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !12336, !ctir !675
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !12336, !ctir !692
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !12334
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !12337, metadata !DIExpression()), !dbg !12338
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12339
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !12340, !ctir !693
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !12340
  %tobool24 = trunc i8 %24 to i1, !dbg !12340, !ctir !139
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !12339

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12341
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !12342, !ctir !675
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !12342, !ctir !52
  %conv27 = uitofp i64 %26 to float, !dbg !12341
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12343
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !12344, !ctir !693
  %28 = load float, float* %growth_factor, align 4, !dbg !12344, !ctir !698
  %mul28 = fmul float %conv27, %28, !dbg !12345
  br label %cond.end, !dbg !12339

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12346
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !12347, !ctir !675
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !12347, !ctir !52
  %conv30 = uitofp i64 %30 to float, !dbg !12346
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12348
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !12349, !ctir !693
  %32 = load float, float* %growth_factor31, align 4, !dbg !12349, !ctir !698
  %mul32 = fmul float %conv30, %32, !dbg !12350
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12351
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !12352, !ctir !693
  %34 = load float, float* %growth_threshold33, align 4, !dbg !12352, !ctir !698
  %mul34 = fmul float %mul32, %34, !dbg !12353
  br label %cond.end, !dbg !12339

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !12339
  store float %cond, float* %candidate, align 4, !dbg !12338
  %35 = load float, float* %candidate, align 4, !dbg !12354
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !12356
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12357

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !12358
  br label %return, !dbg !12358

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12359
  %37 = load float, float* %candidate, align 4, !dbg !12361
  %conv39 = fptoui float %37 to i64, !dbg !12361
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !12362
  br i1 %call40, label %if.end42, label %if.then41, !dbg !12363

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !12364
  br label %return, !dbg !12364

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12365
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !12367
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12368
  %cmp44 = icmp ne i8* %call43, null, !dbg !12369
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !12370

if.then46:                                        ; preds = %if.end42
  call void @abort() #13, !dbg !12371
  unreachable, !dbg !12371

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !12372

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !12373

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12374
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12376, !ctir !681
  %41 = load i8*, i8** %data50, align 8, !dbg !12376, !ctir !47
  %tobool51 = icmp ne i8* %41, null, !dbg !12374
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !12377

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12378, metadata !DIExpression()), !dbg !12380
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12381
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !12382
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !12380
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12383
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !12385
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !12386

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !12387
  br label %return, !dbg !12387

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !12388
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12389
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !12390, !ctir !681
  store i8* %44, i8** %data58, align 8, !dbg !12391, !ctir !47
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12392
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12393, !ctir !681
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12393, !ctir !680
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12394
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12395, !ctir !681
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !12396, !ctir !680
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12397
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12398
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12399, !ctir !681
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !12400, !ctir !680
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12401
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !12402, !ctir !675
  %52 = load i64, i64* %n_entries, align 8, !dbg !12403, !ctir !52
  %inc = add i64 %52, 1, !dbg !12403
  store i64 %inc, i64* %n_entries, align 8, !dbg !12403, !ctir !52
  store i32 1, i32* %retval, align 4, !dbg !12404
  br label %return, !dbg !12404

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !12405
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12406
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !12407, !ctir !681
  store i8* %53, i8** %data62, align 8, !dbg !12408, !ctir !47
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12409
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !12410, !ctir !675
  %56 = load i64, i64* %n_entries63, align 8, !dbg !12411, !ctir !52
  %inc64 = add i64 %56, 1, !dbg !12411
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !12411, !ctir !52
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12412
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !12413, !ctir !675
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !12414, !ctir !52
  %inc66 = add i64 %58, 1, !dbg !12414
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !12414, !ctir !52
  store i32 1, i32* %retval, align 4, !dbg !12415
  br label %return, !dbg !12415

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !12416
  ret i32 %59, !dbg !12416
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #4 !dbg !12417 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket_head.addr = alloca %struct.hash_entry**, align 8
  %delete.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !680
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !680
  %data7 = alloca i8*, align 8, !ctir !47
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !680
  %data29 = alloca i8*, align 8, !ctir !47
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !680
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12421, metadata !DIExpression()), !dbg !12422
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12423, metadata !DIExpression()), !dbg !12424
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !12425, metadata !DIExpression()), !dbg !12426
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !12427, metadata !DIExpression()), !dbg !12428
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12429, metadata !DIExpression()), !dbg !12430
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12431
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12432
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !12433
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !12430
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12434, metadata !DIExpression()), !dbg !12435
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12436
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !12437
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !12438, !ctir !680
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12439
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !12441, !ctir !681
  %5 = load i8*, i8** %data, align 8, !dbg !12441, !ctir !47
  %cmp = icmp eq i8* %5, null, !dbg !12442
  br i1 %cmp, label %if.then, label %if.end, !dbg !12443

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12444
  br label %return, !dbg !12444

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !12445
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12447
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !12448, !ctir !681
  %8 = load i8*, i8** %data2, align 8, !dbg !12448, !ctir !47
  %cmp3 = icmp eq i8* %6, %8, !dbg !12449
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !12450

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12451
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !12452, !ctir !675
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12452, !ctir !709
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !12453
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12454
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !12455, !ctir !681
  %13 = load i8*, i8** %data4, align 8, !dbg !12455, !ctir !47
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !12451
  br i1 %call5, label %if.then6, label %if.end17, !dbg !12456

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !12457, metadata !DIExpression()), !dbg !12459
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12460
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12461, !ctir !681
  %15 = load i8*, i8** %data8, align 8, !dbg !12461, !ctir !47
  store i8* %15, i8** %data7, align 8, !dbg !12459
  %16 = load i8, i8* %delete.addr, align 1, !dbg !12462
  %tobool = trunc i8 %16 to i1, !dbg !12462
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !12464

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12465
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12468, !ctir !681
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12468, !ctir !680
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !12465
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12469

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !12470, metadata !DIExpression()), !dbg !12472
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12473
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !12474, !ctir !681
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !12474, !ctir !680
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12472
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12475
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12476
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !12477
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !12477
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !12477
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12478
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12479
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !12480
  br label %if.end15, !dbg !12481

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12482
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !12484, !ctir !681
  store i8* null, i8** %data14, align 8, !dbg !12485, !ctir !47
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !12486

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !12487
  store i8* %28, i8** %retval, align 8, !dbg !12488
  br label %return, !dbg !12488

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12489
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12491
  br label %for.cond, !dbg !12492

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12493
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !12495, !ctir !681
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !12495, !ctir !680
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !12496
  br i1 %tobool19, label %for.body, label %for.end, !dbg !12496

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !12497
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12500
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !12501, !ctir !681
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !12501, !ctir !680
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !12502, !ctir !681
  %35 = load i8*, i8** %data21, align 8, !dbg !12502, !ctir !47
  %cmp22 = icmp eq i8* %32, %35, !dbg !12503
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !12504

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12505
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !12506, !ctir !675
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !12506, !ctir !709
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !12507
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12508
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !12509, !ctir !681
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !12509, !ctir !680
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12510, !ctir !681
  %41 = load i8*, i8** %data26, align 8, !dbg !12510, !ctir !47
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !12505
  br i1 %call27, label %if.then28, label %if.end39, !dbg !12511

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !12512, metadata !DIExpression()), !dbg !12514
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12515
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12516, !ctir !681
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12516, !ctir !680
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !12517, !ctir !681
  %44 = load i8*, i8** %data31, align 8, !dbg !12517, !ctir !47
  store i8* %44, i8** %data29, align 8, !dbg !12514
  %45 = load i8, i8* %delete.addr, align 1, !dbg !12518
  %tobool32 = trunc i8 %45 to i1, !dbg !12518
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !12520

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !12521, metadata !DIExpression()), !dbg !12523
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12524
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12525, !ctir !681
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !12525, !ctir !680
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !12523
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12526
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12527, !ctir !681
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !12527, !ctir !680
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12528
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12529, !ctir !681
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !12530, !ctir !680
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12531
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12532
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !12533
  br label %if.end38, !dbg !12534

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !12535
  store i8* %53, i8** %retval, align 8, !dbg !12536
  br label %return, !dbg !12536

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !12537

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12538
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !12539, !ctir !681
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !12539, !ctir !680
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !12540
  br label %for.cond, !dbg !12541, !llvm.loop !12542

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !12544
  br label %return, !dbg !12544

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !12545
  ret i8* %56, !dbg !12545
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #4 !dbg !12546 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent = alloca i8*, align 8, !ctir !553
  %err = alloca i32, align 4, !ctir !5
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12549, metadata !DIExpression()), !dbg !12550
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12551, metadata !DIExpression()), !dbg !12552
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !12553, metadata !DIExpression()), !dbg !12554
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12555, metadata !DIExpression()), !dbg !12556
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12557
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12558
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !12559
  store i32 %call, i32* %err, align 4, !dbg !12556
  %2 = load i32, i32* %err, align 4, !dbg !12560
  %cmp = icmp eq i32 %2, -1, !dbg !12561
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12560

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !12560

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !12562
  %cmp2 = icmp eq i32 %3, 0, !dbg !12563
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !12562

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !12564
  br label %cond.end, !dbg !12562

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !12565
  br label %cond.end, !dbg !12562

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !12562
  br label %cond.end5, !dbg !12560

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !12560
  ret i8* %cond6, !dbg !12566
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #4 !dbg !12567 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8, !ctir !47
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !680
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !692
  %candidate = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !680
  %next = alloca %struct.hash_entry*, align 8, !ctir !680
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12568, metadata !DIExpression()), !dbg !12569
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12570, metadata !DIExpression()), !dbg !12571
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12572, metadata !DIExpression()), !dbg !12573
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12574, metadata !DIExpression()), !dbg !12575
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12576
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12577
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !12578
  store i8* %call, i8** %data, align 8, !dbg !12579
  %2 = load i8*, i8** %data, align 8, !dbg !12580
  %tobool = icmp ne i8* %2, null, !dbg !12580
  br i1 %tobool, label %if.end, label %if.then, !dbg !12582

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12583
  br label %return, !dbg !12583

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12584
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !12585, !ctir !675
  %4 = load i64, i64* %n_entries, align 8, !dbg !12586, !ctir !52
  %dec = add i64 %4, -1, !dbg !12586
  store i64 %dec, i64* %n_entries, align 8, !dbg !12586, !ctir !52
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12587
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12589, !ctir !681
  %6 = load i8*, i8** %data2, align 8, !dbg !12589, !ctir !47
  %tobool3 = icmp ne i8* %6, null, !dbg !12587
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !12590

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12591
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !12593, !ctir !675
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !12594, !ctir !52
  %dec5 = add i64 %8, -1, !dbg !12594
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !12594, !ctir !52
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12595
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !12597, !ctir !675
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !12597, !ctir !52
  %conv = uitofp i64 %10 to float, !dbg !12595
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12598
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !12599, !ctir !675
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12599, !ctir !692
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12600, !ctir !693
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12600, !ctir !698
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12601
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !12602, !ctir !675
  %15 = load i64, i64* %n_buckets, align 8, !dbg !12602, !ctir !52
  %conv7 = uitofp i64 %15 to float, !dbg !12601
  %mul = fmul float %13, %conv7, !dbg !12603
  %cmp = fcmp olt float %conv, %mul, !dbg !12604
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !12605

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12606
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !12608
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12609
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !12611, !ctir !675
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !12611, !ctir !52
  %conv12 = uitofp i64 %18 to float, !dbg !12609
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12612
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !12613, !ctir !675
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !12613, !ctir !692
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !12614, !ctir !693
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !12614, !ctir !698
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12615
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !12616, !ctir !675
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !12616, !ctir !52
  %conv16 = uitofp i64 %23 to float, !dbg !12615
  %mul17 = fmul float %21, %conv16, !dbg !12617
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !12618
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !12619

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !12620, metadata !DIExpression()), !dbg !12622
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12623
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !12624, !ctir !675
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12624, !ctir !692
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !12622
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !12625, metadata !DIExpression()), !dbg !12626
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12627
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !12628, !ctir !693
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !12628
  %tobool23 = trunc i8 %27 to i1, !dbg !12628, !ctir !139
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !12627

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12629
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !12630, !ctir !675
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !12630, !ctir !52
  %conv26 = uitofp i64 %29 to float, !dbg !12629
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12631
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !12632, !ctir !693
  %31 = load float, float* %shrink_factor, align 4, !dbg !12632, !ctir !698
  %mul27 = fmul float %conv26, %31, !dbg !12633
  br label %cond.end, !dbg !12627

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12634
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !12635, !ctir !675
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !12635, !ctir !52
  %conv29 = uitofp i64 %33 to float, !dbg !12634
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12636
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !12637, !ctir !693
  %35 = load float, float* %shrink_factor30, align 4, !dbg !12637, !ctir !698
  %mul31 = fmul float %conv29, %35, !dbg !12638
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12639
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !12640, !ctir !693
  %37 = load float, float* %growth_threshold, align 4, !dbg !12640, !ctir !698
  %mul32 = fmul float %mul31, %37, !dbg !12641
  br label %cond.end, !dbg !12627

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !12627
  %conv33 = fptoui float %cond to i64, !dbg !12642
  store i64 %conv33, i64* %candidate, align 8, !dbg !12626
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12643
  %39 = load i64, i64* %candidate, align 8, !dbg !12645
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !12646
  br i1 %call34, label %if.end39, label %if.then35, !dbg !12647

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12648, metadata !DIExpression()), !dbg !12650
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12651
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !12652, !ctir !675
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12652, !ctir !680
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12650
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12653, metadata !DIExpression()), !dbg !12654
  br label %while.cond, !dbg !12655

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12656
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !12655
  br i1 %tobool36, label %while.body, label %while.end, !dbg !12655

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12657
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !12659, !ctir !681
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !12659, !ctir !680
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !12660
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12661
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !12661
  call void @free(i8* %46) #12, !dbg !12662
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12663
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !12664
  br label %while.cond, !dbg !12655, !llvm.loop !12665

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12667
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !12668, !ctir !675
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !12669, !ctir !680
  br label %if.end39, !dbg !12670

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !12671

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !12672

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !12673

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !12674
  store i8* %49, i8** %retval, align 8, !dbg !12675
  br label %return, !dbg !12675

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !12676
  ret i8* %50, !dbg !12676
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash(i8* %x, i64 %table_size) #9 !dbg !12677 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1362
  %tmp = alloca i64, align 8, !ctir !52
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12679, metadata !DIExpression()), !dbg !12680
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12681, metadata !DIExpression()), !dbg !12682
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12683, metadata !DIExpression()), !dbg !12684
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12685
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12685
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12684
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !12686, metadata !DIExpression()), !dbg !12687
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12688
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12689, !ctir !1363
  %3 = load i8*, i8** %name, align 8, !dbg !12689, !ctir !7
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12690
  %call = call i64 @hash_pjw(i8* %3, i64 %4) #14, !dbg !12691
  store i64 %call, i64* %tmp, align 8, !dbg !12687
  %5 = load i64, i64* %tmp, align 8, !dbg !12692
  %6 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12693
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12694, !ctir !1363
  %7 = load i64, i64* %st_ino, align 8, !dbg !12694, !ctir !256
  %xor = xor i64 %5, %7, !dbg !12695
  %8 = load i64, i64* %table_size.addr, align 8, !dbg !12696
  %rem = urem i64 %xor, %8, !dbg !12697
  ret i64 %rem, !dbg !12698
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash_no_name(i8* %x, i64 %table_size) #9 !dbg !12699 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1362
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12700, metadata !DIExpression()), !dbg !12701
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12702, metadata !DIExpression()), !dbg !12703
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12704, metadata !DIExpression()), !dbg !12705
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12706
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12706
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12705
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12707
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 1, !dbg !12708, !ctir !1363
  %3 = load i64, i64* %st_ino, align 8, !dbg !12708, !ctir !256
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12709
  %rem = urem i64 %3, %4, !dbg !12710
  ret i64 %rem, !dbg !12711
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @triple_compare(i8* %x, i8* %y) #4 !dbg !12712 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1362
  %b = alloca %struct.F_triple*, align 8, !ctir !1362
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12713, metadata !DIExpression()), !dbg !12714
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12715, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12717, metadata !DIExpression()), !dbg !12718
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12719
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12719
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12718
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12720, metadata !DIExpression()), !dbg !12721
  %2 = load i8*, i8** %y.addr, align 8, !dbg !12722
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !12722
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12721
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12723
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !12723, !ctir !1363
  %5 = load i64, i64* %st_ino, align 8, !dbg !12723, !ctir !256
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12723
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12723, !ctir !1363
  %7 = load i64, i64* %st_ino1, align 8, !dbg !12723, !ctir !256
  %cmp = icmp eq i64 %5, %7, !dbg !12723
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12723

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12723
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !12723, !ctir !1363
  %9 = load i64, i64* %st_dev, align 8, !dbg !12723, !ctir !259
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12723
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !12723, !ctir !1363
  %11 = load i64, i64* %st_dev2, align 8, !dbg !12723, !ctir !259
  %cmp3 = icmp eq i64 %9, %11, !dbg !12723
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12724

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12725
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !12726, !ctir !1363
  %13 = load i8*, i8** %name, align 8, !dbg !12726, !ctir !7
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12727
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !12728, !ctir !1363
  %15 = load i8*, i8** %name4, align 8, !dbg !12728, !ctir !7
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !12729
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ], !dbg !12730
  %17 = zext i1 %16 to i64, !dbg !12731
  %cond = select i1 %16, i32 1, i32 0, !dbg !12731
  %tobool = icmp ne i32 %cond, 0, !dbg !12731
  ret i1 %tobool, !dbg !12732
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @triple_compare_ino_str(i8* %x, i8* %y) #9 !dbg !12733 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1362
  %b = alloca %struct.F_triple*, align 8, !ctir !1362
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12734, metadata !DIExpression()), !dbg !12735
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12736, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12738, metadata !DIExpression()), !dbg !12739
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12740
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12740
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12739
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12741, metadata !DIExpression()), !dbg !12742
  %2 = load i8*, i8** %y.addr, align 8, !dbg !12743
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !12743
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12742
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12744
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !12744, !ctir !1363
  %5 = load i64, i64* %st_ino, align 8, !dbg !12744, !ctir !256
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12744
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12744, !ctir !1363
  %7 = load i64, i64* %st_ino1, align 8, !dbg !12744, !ctir !256
  %cmp = icmp eq i64 %5, %7, !dbg !12744
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12744

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12744
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !12744, !ctir !1363
  %9 = load i64, i64* %st_dev, align 8, !dbg !12744, !ctir !259
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12744
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !12744, !ctir !1363
  %11 = load i64, i64* %st_dev2, align 8, !dbg !12744, !ctir !259
  %cmp3 = icmp eq i64 %9, %11, !dbg !12744
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12745

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12746
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !12746, !ctir !1363
  %13 = load i8*, i8** %name, align 8, !dbg !12746, !ctir !7
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12746
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !12746, !ctir !1363
  %15 = load i8*, i8** %name4, align 8, !dbg !12746, !ctir !7
  %call = call i32 @strcmp(i8* %13, i8* %15) #14, !dbg !12746
  %cmp5 = icmp eq i32 %call, 0, !dbg !12746
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !12747
  %17 = zext i1 %16 to i64, !dbg !12748
  %cond = select i1 %16, i32 1, i32 0, !dbg !12748
  %tobool = icmp ne i32 %cond, 0, !dbg !12748
  ret i1 %tobool, !dbg !12749
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @triple_free(i8* %x) #4 !dbg !12750 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1369
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12751, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12753, metadata !DIExpression()), !dbg !12754
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12755
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12755
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12754
  %2 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12756
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12757, !ctir !1364
  %3 = load i8*, i8** %name, align 8, !dbg !12757, !ctir !7
  call void @free(i8* %3) #12, !dbg !12758
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12759
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !12759
  call void @free(i8* %5) #12, !dbg !12760
  ret void, !dbg !12761
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendirat(i32 %dir_fd, i8* %dir, i32 %extra_flags, i32* %pnew_fd) #4 !dbg !12762 {
entry:
  %retval = alloca %struct.__dirstream*, align 8
  %dir_fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %extra_flags.addr = alloca i32, align 4
  %pnew_fd.addr = alloca i32*, align 8
  %open_flags = alloca i32, align 4, !ctir !5
  %new_fd = alloca i32, align 4, !ctir !5
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !530
  %fdopendir_errno = alloca i32, align 4, !ctir !5
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !12766, metadata !DIExpression()), !dbg !12767
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !12768, metadata !DIExpression()), !dbg !12769
  store i32 %extra_flags, i32* %extra_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %extra_flags.addr, metadata !12770, metadata !DIExpression()), !dbg !12771
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !12772, metadata !DIExpression()), !dbg !12773
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !12774, metadata !DIExpression()), !dbg !12775
  %0 = load i32, i32* %extra_flags.addr, align 4, !dbg !12776
  %or = or i32 592128, %0, !dbg !12777
  store i32 %or, i32* %open_flags, align 4, !dbg !12775
  call void @llvm.dbg.declare(metadata i32* %new_fd, metadata !12778, metadata !DIExpression()), !dbg !12779
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !12780
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !12781
  %3 = load i32, i32* %open_flags, align 4, !dbg !12782
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %1, i8* %2, i32 %3), !dbg !12783
  store i32 %call, i32* %new_fd, align 4, !dbg !12779
  %4 = load i32, i32* %new_fd, align 4, !dbg !12784
  %cmp = icmp slt i32 %4, 0, !dbg !12786
  br i1 %cmp, label %if.then, label %if.end, !dbg !12787

if.then:                                          ; preds = %entry
  store %struct.__dirstream* null, %struct.__dirstream** %retval, align 8, !dbg !12788
  br label %return, !dbg !12788

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !12789, metadata !DIExpression()), !dbg !12790
  %5 = load i32, i32* %new_fd, align 4, !dbg !12791
  %call1 = call %struct.__dirstream* @fdopendir(i32 %5), !dbg !12792
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !12790
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !12793
  %tobool = icmp ne %struct.__dirstream* %6, null, !dbg !12793
  br i1 %tobool, label %if.then2, label %if.else, !dbg !12795

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %new_fd, align 4, !dbg !12796
  %8 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !12797
  store i32 %7, i32* %8, align 4, !dbg !12798, !ctir !5
  br label %if.end6, !dbg !12799

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %fdopendir_errno, metadata !12800, metadata !DIExpression()), !dbg !12802
  %call3 = call i32* @__errno_location() #15, !dbg !12803
  %9 = load i32, i32* %call3, align 4, !dbg !12803, !ctir !5
  store i32 %9, i32* %fdopendir_errno, align 4, !dbg !12802
  %10 = load i32, i32* %new_fd, align 4, !dbg !12804
  %call4 = call i32 @close(i32 %10), !dbg !12805
  %11 = load i32, i32* %fdopendir_errno, align 4, !dbg !12806
  %call5 = call i32* @__errno_location() #15, !dbg !12807
  store i32 %11, i32* %call5, align 4, !dbg !12808, !ctir !5
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then2
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !12809
  store %struct.__dirstream* %12, %struct.__dirstream** %retval, align 8, !dbg !12810
  br label %return, !dbg !12810

return:                                           ; preds = %if.end6, %if.then
  %13 = load %struct.__dirstream*, %struct.__dirstream** %retval, align 8, !dbg !12811
  ret %struct.__dirstream* %13, !dbg !12811
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @priv_set_remove_linkdir() #4 !dbg !12812 {
entry:
  ret i32 -1, !dbg !12815
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @priv_set_restore_linkdir() #4 !dbg !12816 {
entry:
  ret i32 -1, !dbg !12817
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #4 !dbg !12818 {
entry:
  %argv0.addr = alloca i8*, align 8
  %slash = alloca i8*, align 8, !ctir !113
  %base = alloca i8*, align 8, !ctir !113
  store i8* %argv0, i8** %argv0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !12819, metadata !DIExpression()), !dbg !12820
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !12821, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.declare(metadata i8** %base, metadata !12823, metadata !DIExpression()), !dbg !12824
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !12825
  %cmp = icmp eq i8* %0, null, !dbg !12827
  br i1 %cmp, label %if.then, label %if.end, !dbg !12828

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !12829
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.295, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !12831
  call void @abort() #13, !dbg !12832
  unreachable, !dbg !12832

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !12833
  %call1 = call i8* @strrchr(i8* %2, i32 47) #14, !dbg !12834
  store i8* %call1, i8** %slash, align 8, !dbg !12835
  %3 = load i8*, i8** %slash, align 8, !dbg !12836
  %cmp2 = icmp ne i8* %3, null, !dbg !12837
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !12836

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !12838
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !12839, !ctir !114
  br label %cond.end, !dbg !12836

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !12840
  br label %cond.end, !dbg !12836

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !12836
  store i8* %cond, i8** %base, align 8, !dbg !12841
  %6 = load i8*, i8** %base, align 8, !dbg !12842
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !12844
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !12845
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !12845
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12845
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !12846
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !12847

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !12848
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !12849, !ctir !114
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.296, i64 0, i64 0), i64 7) #14, !dbg !12850
  %cmp6 = icmp eq i32 %call5, 0, !dbg !12851
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !12852

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !12853
  store i8* %9, i8** %argv0.addr, align 8, !dbg !12855
  %10 = load i8*, i8** %base, align 8, !dbg !12856
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.297, i64 0, i64 0), i64 3) #14, !dbg !12858
  %cmp9 = icmp eq i32 %call8, 0, !dbg !12859
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !12860

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !12861
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !12863, !ctir !114
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !12864
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !12865
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !12866
  br label %if.end12, !dbg !12867

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !12868

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !12869
  store i8* %13, i8** @program_name, align 8, !dbg !12870
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !12871
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !12872
  ret void, !dbg !12873
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qcopy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !12874 {
entry:
  %retval = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %struct.permission_context, align 4, !ctir !12876
  %ret = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !12880, metadata !DIExpression()), !dbg !12881
  store i32 %source_desc, i32* %source_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !12882, metadata !DIExpression()), !dbg !12883
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !12884, metadata !DIExpression()), !dbg !12885
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !12886, metadata !DIExpression()), !dbg !12887
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12888, metadata !DIExpression()), !dbg !12889
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !12890, metadata !DIExpression()), !dbg !12891
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12892, metadata !DIExpression()), !dbg !12893
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !12894
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !12895
  %2 = load i32, i32* %mode.addr, align 4, !dbg !12896
  %call = call i32 @get_permissions(i8* %0, i32 %1, i32 %2, %struct.permission_context* %ctx), !dbg !12897
  store i32 %call, i32* %ret, align 4, !dbg !12898
  %3 = load i32, i32* %ret, align 4, !dbg !12899
  %cmp = icmp ne i32 %3, 0, !dbg !12901
  br i1 %cmp, label %if.then, label %if.end, !dbg !12902

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4, !dbg !12903
  br label %return, !dbg !12903

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !12904
  %5 = load i32, i32* %dest_desc.addr, align 4, !dbg !12905
  %call1 = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %4, i32 %5), !dbg !12906
  store i32 %call1, i32* %ret, align 4, !dbg !12907
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !12908
  %6 = load i32, i32* %ret, align 4, !dbg !12909
  store i32 %6, i32* %retval, align 4, !dbg !12910
  br label %return, !dbg !12910

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !12911
  ret i32 %7, !dbg !12911
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qset_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !12912 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %struct.permission_context, align 4, !ctir !12914
  %ret = alloca i32, align 4, !ctir !5
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12917, metadata !DIExpression()), !dbg !12918
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !12919, metadata !DIExpression()), !dbg !12920
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12921, metadata !DIExpression()), !dbg !12922
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !12923, metadata !DIExpression()), !dbg !12924
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12925, metadata !DIExpression()), !dbg !12926
  %0 = bitcast %struct.permission_context* %ctx to i8*, !dbg !12927
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 4, i1 false), !dbg !12927
  %1 = load i32, i32* %mode.addr, align 4, !dbg !12928
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %ctx, i32 0, i32 0, !dbg !12929, !ctir !12914
  store i32 %1, i32* %mode1, align 4, !dbg !12930, !ctir !236
  %2 = load i8*, i8** %name.addr, align 8, !dbg !12931
  %3 = load i32, i32* %desc.addr, align 4, !dbg !12932
  %call = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %2, i32 %3), !dbg !12933
  store i32 %call, i32* %ret, align 4, !dbg !12934
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !12935
  %4 = load i32, i32* %ret, align 4, !dbg !12936
  ret i32 %4, !dbg !12937
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #4 !dbg !12938 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !5
  %p = alloca %struct.quoting_options*, align 8, !ctir !790
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !12941, metadata !DIExpression()), !dbg !12942
  call void @llvm.dbg.declare(metadata i32* %e, metadata !12943, metadata !DIExpression()), !dbg !12944
  %call = call i32* @__errno_location() #15, !dbg !12945
  %0 = load i32, i32* %call, align 4, !dbg !12945, !ctir !5
  store i32 %0, i32* %e, align 4, !dbg !12944
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !12946, metadata !DIExpression()), !dbg !12947
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !12948
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !12948
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12948

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !12949
  br label %cond.end, !dbg !12948

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12948

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !12948
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !12948
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !12950
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !12950
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !12947
  %5 = load i32, i32* %e, align 4, !dbg !12951
  %call2 = call i32* @__errno_location() #15, !dbg !12952
  store i32 %5, i32* %call2, align 4, !dbg !12953, !ctir !5
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !12954
  ret %struct.quoting_options* %6, !dbg !12955
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #4 !dbg !12956 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !12959, metadata !DIExpression()), !dbg !12960
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !12961
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !12961
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12961

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !12962
  br label %cond.end, !dbg !12961

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12961

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !12961
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !12963, !ctir !802
  %2 = load i32, i32* %style, align 8, !dbg !12963, !ctir !772
  ret i32 %2, !dbg !12964
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #4 !dbg !12965 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !12968, metadata !DIExpression()), !dbg !12969
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !12970, metadata !DIExpression()), !dbg !12971
  %0 = load i32, i32* %s.addr, align 4, !dbg !12972
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !12973
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !12973
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12973

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !12974
  br label %cond.end, !dbg !12973

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12973

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !12973
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !12975, !ctir !791
  store i32 %0, i32* %style, align 8, !dbg !12976, !ctir !772
  ret void, !dbg !12977
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #4 !dbg !12978 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1, !ctir !451
  %p = alloca i32*, align 8, !ctir !800
  %shift = alloca i32, align 4, !ctir !5
  %r = alloca i32, align 4, !ctir !5
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !12981, metadata !DIExpression()), !dbg !12982
  store i8 %c, i8* %c.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !12983, metadata !DIExpression()), !dbg !12984
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !12985, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !12987, metadata !DIExpression()), !dbg !12988
  %0 = load i8, i8* %c.addr, align 1, !dbg !12989
  store i8 %0, i8* %uc, align 1, !dbg !12988
  call void @llvm.dbg.declare(metadata i32** %p, metadata !12990, metadata !DIExpression()), !dbg !12991
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !12992
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !12992
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12992

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !12993
  br label %cond.end, !dbg !12992

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12992

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !12992
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !12994, !ctir !791
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !12995, !ctir !797
  %3 = load i8, i8* %uc, align 1, !dbg !12996
  %conv = zext i8 %3 to i64, !dbg !12996
  %div = udiv i64 %conv, 32, !dbg !12997
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !12998, !ctir !67
  store i32* %add.ptr, i32** %p, align 8, !dbg !12991
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !12999, metadata !DIExpression()), !dbg !13000
  %4 = load i8, i8* %uc, align 1, !dbg !13001
  %conv1 = zext i8 %4 to i64, !dbg !13001
  %rem = urem i64 %conv1, 32, !dbg !13002
  %conv2 = trunc i64 %rem to i32, !dbg !13001
  store i32 %conv2, i32* %shift, align 4, !dbg !13000
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13003, metadata !DIExpression()), !dbg !13004
  %5 = load i32*, i32** %p, align 8, !dbg !13005
  %6 = load i32, i32* %5, align 4, !dbg !13006, !ctir !67
  %7 = load i32, i32* %shift, align 4, !dbg !13007
  %shr = lshr i32 %6, %7, !dbg !13008
  %and = and i32 %shr, 1, !dbg !13009
  store i32 %and, i32* %r, align 4, !dbg !13004
  %8 = load i32, i32* %i.addr, align 4, !dbg !13010
  %and3 = and i32 %8, 1, !dbg !13011
  %9 = load i32, i32* %r, align 4, !dbg !13012
  %xor = xor i32 %and3, %9, !dbg !13013
  %10 = load i32, i32* %shift, align 4, !dbg !13014
  %shl = shl i32 %xor, %10, !dbg !13015
  %11 = load i32*, i32** %p, align 8, !dbg !13016
  %12 = load i32, i32* %11, align 4, !dbg !13017, !ctir !67
  %xor4 = xor i32 %12, %shl, !dbg !13017
  store i32 %xor4, i32* %11, align 4, !dbg !13017, !ctir !67
  %13 = load i32, i32* %r, align 4, !dbg !13018
  ret i32 %13, !dbg !13019
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #4 !dbg !13020 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %i.addr = alloca i32, align 4
  %r = alloca i32, align 4, !ctir !5
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13023, metadata !DIExpression()), !dbg !13024
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13025, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13027, metadata !DIExpression()), !dbg !13028
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13029
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13029
  br i1 %tobool, label %if.end, label %if.then, !dbg !13031

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !13032
  br label %if.end, !dbg !13033

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13034
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !13035, !ctir !791
  %2 = load i32, i32* %flags, align 4, !dbg !13035, !ctir !5
  store i32 %2, i32* %r, align 4, !dbg !13036
  %3 = load i32, i32* %i.addr, align 4, !dbg !13037
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13038
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !13039, !ctir !791
  store i32 %3, i32* %flags1, align 4, !dbg !13040, !ctir !5
  %5 = load i32, i32* %r, align 4, !dbg !13041
  ret i32 %5, !dbg !13042
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #4 !dbg !13043 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13046, metadata !DIExpression()), !dbg !13047
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !13048, metadata !DIExpression()), !dbg !13049
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !13050, metadata !DIExpression()), !dbg !13051
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13052
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13052
  br i1 %tobool, label %if.end, label %if.then, !dbg !13054

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !13055
  br label %if.end, !dbg !13056

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13057
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !13058, !ctir !791
  store i32 10, i32* %style, align 8, !dbg !13059, !ctir !772
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !13060
  %tobool1 = icmp ne i8* %2, null, !dbg !13060
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !13062

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !13063
  %tobool2 = icmp ne i8* %3, null, !dbg !13063
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !13064

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #13, !dbg !13065
  unreachable, !dbg !13065

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !13066
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13067
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !13068, !ctir !791
  store i8* %4, i8** %left_quote5, align 8, !dbg !13069, !ctir !113
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !13070
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13071
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !13072, !ctir !791
  store i8* %6, i8** %right_quote6, align 8, !dbg !13073, !ctir !113
  ret void, !dbg !13074
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !13075 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !801
  %e = alloca i32, align 4, !ctir !5
  %r = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13078, metadata !DIExpression()), !dbg !13079
  store i64 %buffersize, i64* %buffersize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !13080, metadata !DIExpression()), !dbg !13081
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13082, metadata !DIExpression()), !dbg !13083
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !13084, metadata !DIExpression()), !dbg !13085
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13086, metadata !DIExpression()), !dbg !13087
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !13088, metadata !DIExpression()), !dbg !13089
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13090
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13090
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13090

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13091
  br label %cond.end, !dbg !13090

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13090

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13090
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !13089
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13092, metadata !DIExpression()), !dbg !13093
  %call = call i32* @__errno_location() #15, !dbg !13094
  %2 = load i32, i32* %call, align 4, !dbg !13094, !ctir !5
  store i32 %2, i32* %e, align 4, !dbg !13093
  call void @llvm.dbg.declare(metadata i64* %r, metadata !13095, metadata !DIExpression()), !dbg !13096
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !13097
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !13098
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !13099
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !13100
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13101
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !13102, !ctir !802
  %8 = load i32, i32* %style, align 8, !dbg !13102, !ctir !772
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13103
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !13104, !ctir !802
  %10 = load i32, i32* %flags, align 4, !dbg !13104, !ctir !5
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13105
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !13106, !ctir !802
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !13105, !ctir !803
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13107
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !13108, !ctir !802
  %13 = load i8*, i8** %left_quote, align 8, !dbg !13108, !ctir !113
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13109
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !13110, !ctir !802
  %15 = load i8*, i8** %right_quote, align 8, !dbg !13110, !ctir !113
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !13111
  store i64 %call1, i64* %r, align 8, !dbg !13096
  %16 = load i32, i32* %e, align 4, !dbg !13112
  %call2 = call i32* @__errno_location() #15, !dbg !13113
  store i32 %16, i32* %call2, align 4, !dbg !13114, !ctir !5
  %17 = load i64, i64* %r, align 8, !dbg !13115
  ret i64 %17, !dbg !13116
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #4 !dbg !13117 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %quote_these_too.addr = alloca i32*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !52
  %len = alloca i64, align 8, !ctir !52
  %orig_buffersize = alloca i64, align 8, !ctir !52
  %quote_string = alloca i8*, align 8, !ctir !113
  %quote_string_len = alloca i64, align 8, !ctir !52
  %backslash_escapes = alloca i8, align 1, !ctir !139
  %unibyte_locale = alloca i8, align 1, !ctir !139
  %elide_outer_quotes = alloca i8, align 1, !ctir !139
  %pending_shell_escape_end = alloca i8, align 1, !ctir !139
  %encountered_single_quote = alloca i8, align 1, !ctir !139
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !139
  %c = alloca i8, align 1, !ctir !451
  %esc = alloca i8, align 1, !ctir !451
  %is_right_quote = alloca i8, align 1, !ctir !139
  %escaping = alloca i8, align 1, !ctir !139
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !139
  %m = alloca i64, align 8, !ctir !52
  %printable = alloca i8, align 1, !ctir !139
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !811
  %w = alloca i32, align 4, !ctir !822
  %bytes = alloca i64, align 8, !ctir !52
  %j = alloca i64, align 8, !ctir !52
  %ilim = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13120, metadata !DIExpression()), !dbg !13121
  store i64 %buffersize, i64* %buffersize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !13122, metadata !DIExpression()), !dbg !13123
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13124, metadata !DIExpression()), !dbg !13125
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !13126, metadata !DIExpression()), !dbg !13127
  store i32 %quoting_style, i32* %quoting_style.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !13128, metadata !DIExpression()), !dbg !13129
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13130, metadata !DIExpression()), !dbg !13131
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !13132, metadata !DIExpression()), !dbg !13133
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !13134, metadata !DIExpression()), !dbg !13135
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !13136, metadata !DIExpression()), !dbg !13137
  call void @llvm.dbg.declare(metadata i64* %i, metadata !13138, metadata !DIExpression()), !dbg !13139
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13140, metadata !DIExpression()), !dbg !13141
  store i64 0, i64* %len, align 8, !dbg !13141
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !13142, metadata !DIExpression()), !dbg !13143
  store i64 0, i64* %orig_buffersize, align 8, !dbg !13143
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !13144, metadata !DIExpression()), !dbg !13145
  store i8* null, i8** %quote_string, align 8, !dbg !13145
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !13146, metadata !DIExpression()), !dbg !13147
  store i64 0, i64* %quote_string_len, align 8, !dbg !13147
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !13148, metadata !DIExpression()), !dbg !13149
  store i8 0, i8* %backslash_escapes, align 1, !dbg !13149
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !13150, metadata !DIExpression()), !dbg !13151
  %call = call i64 @__ctype_get_mb_cur_max() #12, !dbg !13152
  %cmp = icmp eq i64 %call, 1, !dbg !13153
  %frombool = zext i1 %cmp to i8, !dbg !13151
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !13151
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !13154, metadata !DIExpression()), !dbg !13155
  %0 = load i32, i32* %flags.addr, align 4, !dbg !13156
  %and = and i32 %0, 2, !dbg !13157
  %cmp1 = icmp ne i32 %and, 0, !dbg !13158
  %frombool2 = zext i1 %cmp1 to i8, !dbg !13155
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !13155
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !13159, metadata !DIExpression()), !dbg !13160
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !13160
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !13161, metadata !DIExpression()), !dbg !13162
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !13162
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !13163, metadata !DIExpression()), !dbg !13164
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !13164
  br label %process_input, !dbg !13165

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !13166), !dbg !13167
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !13168
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !13169

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !13170
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !13172
  br label %sw.bb3, !dbg !13173

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13174
  %tobool = trunc i8 %2 to i1, !dbg !13174
  br i1 %tobool, label %if.end6, label %if.then, !dbg !13176

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !13177

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !13178
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !13178
  %cmp4 = icmp ult i64 %3, %4, !dbg !13178
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !13181

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !13178
  %6 = load i64, i64* %len, align 8, !dbg !13178
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !13178, !ctir !7
  store i8 34, i8* %arrayidx, align 1, !dbg !13178
  br label %if.end, !dbg !13178

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !13181
  %inc = add i64 %7, 1, !dbg !13181
  store i64 %inc, i64* %len, align 8, !dbg !13181
  br label %do.end, !dbg !13181

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !13181

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13182
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.312, i64 0, i64 0), i8** %quote_string, align 8, !dbg !13183
  store i64 1, i64* %quote_string_len, align 8, !dbg !13184
  br label %sw.epilog, !dbg !13185

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13186
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !13187
  br label %sw.epilog, !dbg !13188

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !13189
  %cmp9 = icmp ne i32 %8, 10, !dbg !13192
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !13193

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !13194
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.313, i64 0, i64 0), i32 %9), !dbg !13196
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !13197
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !13198
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), i32 %10), !dbg !13199
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !13200
  br label %if.end13, !dbg !13201

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13202
  %tobool14 = trunc i8 %11 to i1, !dbg !13202
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !13204

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !13205
  store i8* %12, i8** %quote_string, align 8, !dbg !13207
  br label %for.cond, !dbg !13208

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !13209
  %14 = load i8, i8* %13, align 1, !dbg !13211, !ctir !114
  %tobool16 = icmp ne i8 %14, 0, !dbg !13212
  br i1 %tobool16, label %for.body, label %for.end, !dbg !13212

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !13213

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !13214
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !13214
  %cmp18 = icmp ult i64 %15, %16, !dbg !13214
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !13217

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !13214
  %18 = load i8, i8* %17, align 1, !dbg !13214, !ctir !114
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !13214
  %20 = load i64, i64* %len, align 8, !dbg !13214
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !13214, !ctir !7
  store i8 %18, i8* %arrayidx20, align 1, !dbg !13214
  br label %if.end21, !dbg !13214

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !13217
  %inc22 = add i64 %21, 1, !dbg !13217
  store i64 %inc22, i64* %len, align 8, !dbg !13217
  br label %do.end23, !dbg !13217

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !13217

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !13218
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !13218, !ctir !114
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !13218
  br label %for.cond, !dbg !13219, !llvm.loop !13220

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !13221

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13222
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !13223
  store i8* %23, i8** %quote_string, align 8, !dbg !13224
  %24 = load i8*, i8** %quote_string, align 8, !dbg !13225
  %call25 = call i64 @strlen(i8* %24) #14, !dbg !13226
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !13227
  br label %sw.epilog, !dbg !13228

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13229
  br label %sw.bb27, !dbg !13230

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !13231
  br label %sw.bb28, !dbg !13232

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13233
  %tobool29 = trunc i8 %25 to i1, !dbg !13233
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !13235

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13236
  br label %if.end31, !dbg !13237

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !13238

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !13239
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13240
  %tobool33 = trunc i8 %26 to i1, !dbg !13240
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !13242

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !13243

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !13244
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !13244
  %cmp36 = icmp ult i64 %27, %28, !dbg !13244
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !13247

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !13244
  %30 = load i64, i64* %len, align 8, !dbg !13244
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !13244, !ctir !7
  store i8 39, i8* %arrayidx38, align 1, !dbg !13244
  br label %if.end39, !dbg !13244

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !13247
  %inc40 = add i64 %31, 1, !dbg !13247
  store i64 %inc40, i64* %len, align 8, !dbg !13247
  br label %do.end41, !dbg !13247

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !13247

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), i8** %quote_string, align 8, !dbg !13248
  store i64 1, i64* %quote_string_len, align 8, !dbg !13249
  br label %sw.epilog, !dbg !13250

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !13251
  br label %sw.epilog, !dbg !13252

sw.default:                                       ; preds = %process_input
  call void @abort() #13, !dbg !13253
  unreachable, !dbg !13253

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !13254
  br label %for.cond44, !dbg !13256

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !13257
  %cmp45 = icmp eq i64 %32, -1, !dbg !13259
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !13257

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !13260
  %34 = load i64, i64* %i, align 8, !dbg !13261
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !13260, !ctir !113
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !13260
  %conv = sext i8 %35 to i32, !dbg !13260
  %cmp47 = icmp eq i32 %conv, 0, !dbg !13262
  %conv48 = zext i1 %cmp47 to i32, !dbg !13262
  br label %cond.end, !dbg !13257

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !13263
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !13264
  %cmp49 = icmp eq i64 %36, %37, !dbg !13265
  %conv50 = zext i1 %cmp49 to i32, !dbg !13265
  br label %cond.end, !dbg !13257

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !13257
  %tobool51 = icmp ne i32 %cond, 0, !dbg !13266
  %lnot = xor i1 %tobool51, true, !dbg !13266
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !13267

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !13268, metadata !DIExpression()), !dbg !13270
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !13271, metadata !DIExpression()), !dbg !13272
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !13273, metadata !DIExpression()), !dbg !13274
  store i8 0, i8* %is_right_quote, align 1, !dbg !13274
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !13275, metadata !DIExpression()), !dbg !13276
  store i8 0, i8* %escaping, align 1, !dbg !13276
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !13277, metadata !DIExpression()), !dbg !13278
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !13278
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !13279
  %tobool53 = trunc i8 %38 to i1, !dbg !13279
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !13281

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !13282
  %cmp55 = icmp ne i32 %39, 2, !dbg !13283
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !13284

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !13285
  %tobool58 = icmp ne i64 %40, 0, !dbg !13285
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !13286

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !13287
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !13288
  %add = add i64 %41, %42, !dbg !13289
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !13290
  %cmp60 = icmp eq i64 %43, -1, !dbg !13291
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !13292

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !13293
  %cmp63 = icmp ult i64 1, %44, !dbg !13294
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !13290

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !13295
  %call66 = call i64 @strlen(i8* %45) #14, !dbg !13296
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !13297
  br label %cond.end68, !dbg !13290

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !13298
  br label %cond.end68, !dbg !13290

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !13290
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !13299
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !13300

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !13301
  %48 = load i64, i64* %i, align 8, !dbg !13302
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !13303, !ctir !114
  %49 = load i8*, i8** %quote_string, align 8, !dbg !13304
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !13305
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #14, !dbg !13306
  %cmp74 = icmp eq i32 %call73, 0, !dbg !13307
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !13308

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13309
  %tobool77 = trunc i8 %51 to i1, !dbg !13309
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !13312

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !13313

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !13314
  br label %if.end80, !dbg !13315

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !13316
  %53 = load i64, i64* %i, align 8, !dbg !13317
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !13316, !ctir !113
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !13316
  store i8 %54, i8* %c, align 1, !dbg !13318
  %55 = load i8, i8* %c, align 1, !dbg !13319
  %conv82 = zext i8 %55 to i32, !dbg !13319
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !13320

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !13321
  %tobool84 = trunc i8 %56 to i1, !dbg !13321
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !13324

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !13325

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13327
  %tobool87 = trunc i8 %57 to i1, !dbg !13327
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !13330

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !13327

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !13330
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !13331
  %cmp90 = icmp eq i32 %58, 2, !dbg !13331
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !13331

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !13331
  %tobool93 = trunc i8 %59 to i1, !dbg !13331
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !13330

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !13333

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !13335
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !13335
  %cmp96 = icmp ult i64 %60, %61, !dbg !13335
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !13338

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !13335
  %63 = load i64, i64* %len, align 8, !dbg !13335
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !13335, !ctir !7
  store i8 39, i8* %arrayidx99, align 1, !dbg !13335
  br label %if.end100, !dbg !13335

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !13338
  %inc101 = add i64 %64, 1, !dbg !13338
  store i64 %inc101, i64* %len, align 8, !dbg !13338
  br label %do.end102, !dbg !13338

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !13333

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !13339
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !13339
  %cmp104 = icmp ult i64 %65, %66, !dbg !13339
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !13342

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !13339
  %68 = load i64, i64* %len, align 8, !dbg !13339
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !13339, !ctir !7
  store i8 36, i8* %arrayidx107, align 1, !dbg !13339
  br label %if.end108, !dbg !13339

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !13342
  %inc109 = add i64 %69, 1, !dbg !13342
  store i64 %inc109, i64* %len, align 8, !dbg !13342
  br label %do.end110, !dbg !13342

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !13333

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !13343
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !13343
  %cmp112 = icmp ult i64 %70, %71, !dbg !13343
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !13346

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !13343
  %73 = load i64, i64* %len, align 8, !dbg !13343
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !13343, !ctir !7
  store i8 39, i8* %arrayidx115, align 1, !dbg !13343
  br label %if.end116, !dbg !13343

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !13346
  %inc117 = add i64 %74, 1, !dbg !13346
  store i64 %inc117, i64* %len, align 8, !dbg !13346
  br label %do.end118, !dbg !13346

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !13333
  br label %if.end119, !dbg !13333

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !13330

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !13347
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !13347
  %cmp121 = icmp ult i64 %75, %76, !dbg !13347
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !13350

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !13347
  %78 = load i64, i64* %len, align 8, !dbg !13347
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !13347, !ctir !7
  store i8 92, i8* %arrayidx124, align 1, !dbg !13347
  br label %if.end125, !dbg !13347

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !13350
  %inc126 = add i64 %79, 1, !dbg !13350
  store i64 %inc126, i64* %len, align 8, !dbg !13350
  br label %do.end127, !dbg !13350

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !13330

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !13351
  %cmp129 = icmp ne i32 %80, 2, !dbg !13353
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !13354

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !13355
  %add132 = add i64 %81, 1, !dbg !13356
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !13357
  %cmp133 = icmp ult i64 %add132, %82, !dbg !13358
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !13359

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !13360
  %84 = load i64, i64* %i, align 8, !dbg !13361
  %add136 = add i64 %84, 1, !dbg !13362
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !13360, !ctir !113
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !13360
  %conv138 = sext i8 %85 to i32, !dbg !13360
  %cmp139 = icmp sle i32 48, %conv138, !dbg !13363
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !13364

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !13365
  %87 = load i64, i64* %i, align 8, !dbg !13366
  %add142 = add i64 %87, 1, !dbg !13367
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !13365, !ctir !113
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !13365
  %conv144 = sext i8 %88 to i32, !dbg !13365
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !13368
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !13369

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !13370

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !13372
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !13372
  %cmp149 = icmp ult i64 %89, %90, !dbg !13372
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !13375

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !13372
  %92 = load i64, i64* %len, align 8, !dbg !13372
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !13372, !ctir !7
  store i8 48, i8* %arrayidx152, align 1, !dbg !13372
  br label %if.end153, !dbg !13372

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !13375
  %inc154 = add i64 %93, 1, !dbg !13375
  store i64 %inc154, i64* %len, align 8, !dbg !13375
  br label %do.end155, !dbg !13375

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !13376

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !13377
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !13377
  %cmp157 = icmp ult i64 %94, %95, !dbg !13377
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !13380

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !13377
  %97 = load i64, i64* %len, align 8, !dbg !13377
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !13377, !ctir !7
  store i8 48, i8* %arrayidx160, align 1, !dbg !13377
  br label %if.end161, !dbg !13377

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !13380
  %inc162 = add i64 %98, 1, !dbg !13380
  store i64 %inc162, i64* %len, align 8, !dbg !13380
  br label %do.end163, !dbg !13380

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !13381

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !13382
  br label %if.end169, !dbg !13383

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !13384
  %and165 = and i32 %99, 1, !dbg !13386
  %tobool166 = icmp ne i32 %and165, 0, !dbg !13386
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !13387

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !13388

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !13389

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !13390
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !13391

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13392
  %tobool172 = trunc i8 %101 to i1, !dbg !13392
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !13395

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !13396

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !13397

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !13398
  %and176 = and i32 %102, 4, !dbg !13400
  %tobool177 = icmp ne i32 %and176, 0, !dbg !13400
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !13401

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !13402
  %add179 = add i64 %103, 2, !dbg !13403
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !13404
  %cmp180 = icmp ult i64 %add179, %104, !dbg !13405
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !13406

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !13407
  %106 = load i64, i64* %i, align 8, !dbg !13408
  %add183 = add i64 %106, 1, !dbg !13409
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !13407, !ctir !113
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !13407
  %conv185 = sext i8 %107 to i32, !dbg !13407
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !13410
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !13411

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !13412
  %109 = load i64, i64* %i, align 8, !dbg !13413
  %add189 = add i64 %109, 2, !dbg !13414
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !13412, !ctir !113
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !13412
  %conv191 = sext i8 %110 to i32, !dbg !13412
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !13415

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13416
  %tobool193 = trunc i8 %111 to i1, !dbg !13416
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !13419

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !13420

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !13421
  %113 = load i64, i64* %i, align 8, !dbg !13422
  %add196 = add i64 %113, 2, !dbg !13423
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !13421, !ctir !113
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !13421
  store i8 %114, i8* %c, align 1, !dbg !13424
  %115 = load i64, i64* %i, align 8, !dbg !13425
  %add198 = add i64 %115, 2, !dbg !13425
  store i64 %add198, i64* %i, align 8, !dbg !13425
  br label %do.body199, !dbg !13426

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !13427
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !13427
  %cmp200 = icmp ult i64 %116, %117, !dbg !13427
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !13430

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !13427
  %119 = load i64, i64* %len, align 8, !dbg !13427
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !13427, !ctir !7
  store i8 63, i8* %arrayidx203, align 1, !dbg !13427
  br label %if.end204, !dbg !13427

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !13430
  %inc205 = add i64 %120, 1, !dbg !13430
  store i64 %inc205, i64* %len, align 8, !dbg !13430
  br label %do.end206, !dbg !13430

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !13431

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !13432
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !13432
  %cmp208 = icmp ult i64 %121, %122, !dbg !13432
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !13435

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !13432
  %124 = load i64, i64* %len, align 8, !dbg !13432
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !13432, !ctir !7
  store i8 34, i8* %arrayidx211, align 1, !dbg !13432
  br label %if.end212, !dbg !13432

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !13435
  %inc213 = add i64 %125, 1, !dbg !13435
  store i64 %inc213, i64* %len, align 8, !dbg !13435
  br label %do.end214, !dbg !13435

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !13436

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !13437
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !13437
  %cmp216 = icmp ult i64 %126, %127, !dbg !13437
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !13440

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !13437
  %129 = load i64, i64* %len, align 8, !dbg !13437
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !13437, !ctir !7
  store i8 34, i8* %arrayidx219, align 1, !dbg !13437
  br label %if.end220, !dbg !13437

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !13440
  %inc221 = add i64 %130, 1, !dbg !13440
  store i64 %inc221, i64* %len, align 8, !dbg !13440
  br label %do.end222, !dbg !13440

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !13441

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !13442
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !13442
  %cmp224 = icmp ult i64 %131, %132, !dbg !13442
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !13445

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !13442
  %134 = load i64, i64* %len, align 8, !dbg !13442
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !13442, !ctir !7
  store i8 63, i8* %arrayidx227, align 1, !dbg !13442
  br label %if.end228, !dbg !13442

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !13445
  %inc229 = add i64 %135, 1, !dbg !13445
  store i64 %inc229, i64* %len, align 8, !dbg !13445
  br label %do.end230, !dbg !13445

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !13446

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !13447

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !13448

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !13449

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !13450

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !13451

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !13452
  br label %c_escape, !dbg !13453

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !13454
  br label %c_escape, !dbg !13455

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !13456
  br label %c_escape, !dbg !13457

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !13458
  br label %c_and_shell_escape, !dbg !13459

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !13460
  br label %c_and_shell_escape, !dbg !13461

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !13462
  br label %c_and_shell_escape, !dbg !13463

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !13464
  br label %c_escape, !dbg !13465

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !13466
  store i8 %136, i8* %esc, align 1, !dbg !13467
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !13468
  %cmp244 = icmp eq i32 %137, 2, !dbg !13470
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !13471

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13472
  %tobool247 = trunc i8 %138 to i1, !dbg !13472
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !13475

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !13476

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !13477

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !13478
  %tobool251 = trunc i8 %139 to i1, !dbg !13478
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !13480

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13481
  %tobool254 = trunc i8 %140 to i1, !dbg !13481
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !13482

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !13483
  %tobool257 = icmp ne i64 %141, 0, !dbg !13483
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !13484

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !13485

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !13483

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !13486), !dbg !13487
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !13488
  %cmp260 = icmp eq i32 %142, 2, !dbg !13490
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !13491

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13492
  %tobool263 = trunc i8 %143 to i1, !dbg !13492
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !13493

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !13494

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !13492

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !13495), !dbg !13496
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !13497
  %tobool267 = trunc i8 %144 to i1, !dbg !13497
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !13499

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !13500
  store i8 %145, i8* %c, align 1, !dbg !13502
  br label %store_escape, !dbg !13503

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !13504

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !13505
  %cmp271 = icmp eq i64 %146, -1, !dbg !13507
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !13508

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !13509
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !13509, !ctir !113
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !13509
  %conv275 = sext i8 %148 to i32, !dbg !13509
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !13510
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !13505

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !13511
  %cmp279 = icmp eq i64 %149, 1, !dbg !13512
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !13508

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !13513

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !13514

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !13515
  %cmp284 = icmp ne i64 %150, 0, !dbg !13517
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !13518

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !13519

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !13520

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !13521
  br label %sw.bb289, !dbg !13522

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !13523
  %cmp290 = icmp eq i32 %151, 2, !dbg !13525
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !13526

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13527
  %tobool293 = trunc i8 %152 to i1, !dbg !13527
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !13528

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !13529

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !13530

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !13531
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !13532
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !13533
  %cmp298 = icmp eq i32 %153, 2, !dbg !13535
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !13536

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13537
  %tobool301 = trunc i8 %154 to i1, !dbg !13537
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !13540

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !13541

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !13542
  %tobool304 = icmp ne i64 %155, 0, !dbg !13542
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !13544

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !13545
  %tobool306 = icmp ne i64 %156, 0, !dbg !13545
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !13546

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !13547
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !13549
  store i64 0, i64* %buffersize.addr, align 8, !dbg !13550
  br label %if.end308, !dbg !13551

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !13552

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !13553
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !13553
  %cmp310 = icmp ult i64 %158, %159, !dbg !13553
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !13556

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !13553
  %161 = load i64, i64* %len, align 8, !dbg !13553
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !13553, !ctir !7
  store i8 39, i8* %arrayidx313, align 1, !dbg !13553
  br label %if.end314, !dbg !13553

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !13556
  %inc315 = add i64 %162, 1, !dbg !13556
  store i64 %inc315, i64* %len, align 8, !dbg !13556
  br label %do.end316, !dbg !13556

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !13557

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !13558
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !13558
  %cmp318 = icmp ult i64 %163, %164, !dbg !13558
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !13561

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !13558
  %166 = load i64, i64* %len, align 8, !dbg !13558
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !13558, !ctir !7
  store i8 92, i8* %arrayidx321, align 1, !dbg !13558
  br label %if.end322, !dbg !13558

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !13561
  %inc323 = add i64 %167, 1, !dbg !13561
  store i64 %inc323, i64* %len, align 8, !dbg !13561
  br label %do.end324, !dbg !13561

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !13562

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !13563
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !13563
  %cmp326 = icmp ult i64 %168, %169, !dbg !13563
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !13566

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !13563
  %171 = load i64, i64* %len, align 8, !dbg !13563
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !13563, !ctir !7
  store i8 39, i8* %arrayidx329, align 1, !dbg !13563
  br label %if.end330, !dbg !13563

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !13566
  %inc331 = add i64 %172, 1, !dbg !13566
  store i64 %inc331, i64* %len, align 8, !dbg !13566
  br label %do.end332, !dbg !13566

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !13567
  br label %if.end333, !dbg !13568

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !13569

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !13570
  br label %sw.epilog564, !dbg !13571

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !13572, metadata !DIExpression()), !dbg !13574
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !13575, metadata !DIExpression()), !dbg !13576
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !13577
  %tobool336 = trunc i8 %173 to i1, !dbg !13577
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !13579

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !13580
  %call338 = call i16** @__ctype_b_loc() #15, !dbg !13582
  %174 = load i16*, i16** %call338, align 8, !dbg !13582, !ctir !809
  %175 = load i8, i8* %c, align 1, !dbg !13582
  %conv339 = zext i8 %175 to i32, !dbg !13582
  %idxprom = sext i32 %conv339 to i64, !dbg !13582
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !13582, !ctir !809
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !13582
  %conv341 = zext i16 %176 to i32, !dbg !13582
  %and342 = and i32 %conv341, 16384, !dbg !13582
  %cmp343 = icmp ne i32 %and342, 0, !dbg !13583
  %frombool345 = zext i1 %cmp343 to i8, !dbg !13584
  store i8 %frombool345, i8* %printable, align 1, !dbg !13584
  br label %if.end410, !dbg !13585

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !13586, metadata !DIExpression()), !dbg !13588
  %177 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !13589
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !13589
  store i64 0, i64* %m, align 8, !dbg !13590
  store i8 1, i8* %printable, align 1, !dbg !13591
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !13592
  %cmp347 = icmp eq i64 %178, -1, !dbg !13594
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !13595

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !13596
  %call350 = call i64 @strlen(i8* %179) #14, !dbg !13597
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !13598
  br label %if.end351, !dbg !13599

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !13600

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !13601, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !13604, metadata !DIExpression()), !dbg !13605
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !13606
  %181 = load i64, i64* %i, align 8, !dbg !13607
  %182 = load i64, i64* %m, align 8, !dbg !13608
  %add353 = add i64 %181, %182, !dbg !13609
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !13606, !ctir !113
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !13610
  %184 = load i64, i64* %i, align 8, !dbg !13611
  %185 = load i64, i64* %m, align 8, !dbg !13612
  %add355 = add i64 %184, %185, !dbg !13613
  %sub = sub i64 %183, %add355, !dbg !13614
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.__mbstate_t* %mbstate), !dbg !13615
  store i64 %call356, i64* %bytes, align 8, !dbg !13605
  %186 = load i64, i64* %bytes, align 8, !dbg !13616
  %cmp357 = icmp eq i64 %186, 0, !dbg !13618
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !13619

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !13620

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !13621
  %cmp361 = icmp eq i64 %187, -1, !dbg !13623
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !13624

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !13625
  br label %do.end409, !dbg !13627

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !13628
  %cmp365 = icmp eq i64 %188, -2, !dbg !13630
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !13631

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !13632
  br label %while.cond, !dbg !13634

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !13635
  %190 = load i64, i64* %m, align 8, !dbg !13636
  %add368 = add i64 %189, %190, !dbg !13637
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !13638
  %cmp369 = icmp ult i64 %add368, %191, !dbg !13639
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !13640

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !13641
  %193 = load i64, i64* %i, align 8, !dbg !13642
  %194 = load i64, i64* %m, align 8, !dbg !13643
  %add371 = add i64 %193, %194, !dbg !13644
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !13641, !ctir !113
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !13641
  %conv373 = sext i8 %195 to i32, !dbg !13641
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !13640
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !13645
  br i1 %196, label %while.body, label %while.end, !dbg !13634

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !13646
  %inc375 = add i64 %197, 1, !dbg !13646
  store i64 %inc375, i64* %m, align 8, !dbg !13646
  br label %while.cond, !dbg !13634, !llvm.loop !13647

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !13648

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13649
  %tobool377 = trunc i8 %198 to i1, !dbg !13649
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !13652

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !13653
  %cmp380 = icmp eq i32 %199, 2, !dbg !13654
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !13655

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !13656, metadata !DIExpression()), !dbg !13658
  store i64 1, i64* %j, align 8, !dbg !13659
  br label %for.cond383, !dbg !13661

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !13662
  %201 = load i64, i64* %bytes, align 8, !dbg !13664
  %cmp384 = icmp ult i64 %200, %201, !dbg !13665
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !13666

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !13667
  %203 = load i64, i64* %i, align 8, !dbg !13668
  %204 = load i64, i64* %m, align 8, !dbg !13669
  %add387 = add i64 %203, %204, !dbg !13670
  %205 = load i64, i64* %j, align 8, !dbg !13671
  %add388 = add i64 %add387, %205, !dbg !13672
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !13667, !ctir !113
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !13667
  %conv390 = sext i8 %206 to i32, !dbg !13667
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !13673

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !13674

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !13676

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !13677

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !13678
  %inc395 = add i64 %207, 1, !dbg !13678
  store i64 %inc395, i64* %j, align 8, !dbg !13678
  br label %for.cond383, !dbg !13679, !llvm.loop !13680

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !13682

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !13683
  %call398 = call i32 @iswprint(i32 %208) #12, !dbg !13685
  %tobool399 = icmp ne i32 %call398, 0, !dbg !13685
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !13686

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !13687
  br label %if.end401, !dbg !13688

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !13689
  %210 = load i64, i64* %m, align 8, !dbg !13690
  %add402 = add i64 %210, %209, !dbg !13690
  store i64 %add402, i64* %m, align 8, !dbg !13690
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !13691

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #14, !dbg !13692
  %tobool407 = icmp ne i32 %call406, 0, !dbg !13693
  %lnot408 = xor i1 %tobool407, true, !dbg !13693
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !13691, !llvm.loop !13694

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !13696
  %tobool411 = trunc i8 %211 to i1, !dbg !13696
  %frombool412 = zext i1 %tobool411 to i8, !dbg !13697
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !13697
  %212 = load i64, i64* %m, align 8, !dbg !13698
  %cmp413 = icmp ult i64 1, %212, !dbg !13700
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !13701

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !13702
  %tobool415 = trunc i8 %213 to i1, !dbg !13702
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !13703

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !13704
  %tobool418 = trunc i8 %214 to i1, !dbg !13704
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !13705

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !13706, metadata !DIExpression()), !dbg !13708
  %215 = load i64, i64* %i, align 8, !dbg !13709
  %216 = load i64, i64* %m, align 8, !dbg !13710
  %add420 = add i64 %215, %216, !dbg !13711
  store i64 %add420, i64* %ilim, align 8, !dbg !13708
  br label %for.cond421, !dbg !13712

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !13713
  %tobool422 = trunc i8 %217 to i1, !dbg !13713
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !13718

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !13719
  %tobool425 = trunc i8 %218 to i1, !dbg !13719
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !13720

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !13721

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13723
  %tobool428 = trunc i8 %219 to i1, !dbg !13723
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !13726

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !13723

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !13726
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !13727
  %cmp431 = icmp eq i32 %220, 2, !dbg !13727
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !13727

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !13727
  %tobool434 = trunc i8 %221 to i1, !dbg !13727
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !13726

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !13729

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !13731
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !13731
  %cmp437 = icmp ult i64 %222, %223, !dbg !13731
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !13734

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !13731
  %225 = load i64, i64* %len, align 8, !dbg !13731
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !13731, !ctir !7
  store i8 39, i8* %arrayidx440, align 1, !dbg !13731
  br label %if.end441, !dbg !13731

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !13734
  %inc442 = add i64 %226, 1, !dbg !13734
  store i64 %inc442, i64* %len, align 8, !dbg !13734
  br label %do.end444, !dbg !13734

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !13729

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !13735
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !13735
  %cmp446 = icmp ult i64 %227, %228, !dbg !13735
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !13738

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !13735
  %230 = load i64, i64* %len, align 8, !dbg !13735
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !13735, !ctir !7
  store i8 36, i8* %arrayidx449, align 1, !dbg !13735
  br label %if.end450, !dbg !13735

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !13738
  %inc451 = add i64 %231, 1, !dbg !13738
  store i64 %inc451, i64* %len, align 8, !dbg !13738
  br label %do.end453, !dbg !13738

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !13729

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !13739
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !13739
  %cmp455 = icmp ult i64 %232, %233, !dbg !13739
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !13742

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !13739
  %235 = load i64, i64* %len, align 8, !dbg !13739
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !13739, !ctir !7
  store i8 39, i8* %arrayidx458, align 1, !dbg !13739
  br label %if.end459, !dbg !13739

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !13742
  %inc460 = add i64 %236, 1, !dbg !13742
  store i64 %inc460, i64* %len, align 8, !dbg !13742
  br label %do.end462, !dbg !13742

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !13729
  br label %if.end463, !dbg !13729

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !13726

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !13743
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !13743
  %cmp465 = icmp ult i64 %237, %238, !dbg !13743
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !13746

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !13743
  %240 = load i64, i64* %len, align 8, !dbg !13743
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !13743, !ctir !7
  store i8 92, i8* %arrayidx468, align 1, !dbg !13743
  br label %if.end469, !dbg !13743

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !13746
  %inc470 = add i64 %241, 1, !dbg !13746
  store i64 %inc470, i64* %len, align 8, !dbg !13746
  br label %do.end472, !dbg !13746

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !13726

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !13747

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !13748
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !13748
  %cmp476 = icmp ult i64 %242, %243, !dbg !13748
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !13751

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !13748
  %conv479 = zext i8 %244 to i32, !dbg !13748
  %shr = ashr i32 %conv479, 6, !dbg !13748
  %add480 = add nsw i32 48, %shr, !dbg !13748
  %conv481 = trunc i32 %add480 to i8, !dbg !13748
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !13748
  %246 = load i64, i64* %len, align 8, !dbg !13748
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !13748, !ctir !7
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !13748
  br label %if.end483, !dbg !13748

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !13751
  %inc484 = add i64 %247, 1, !dbg !13751
  store i64 %inc484, i64* %len, align 8, !dbg !13751
  br label %do.end486, !dbg !13751

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !13752

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !13753
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !13753
  %cmp488 = icmp ult i64 %248, %249, !dbg !13753
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !13756

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !13753
  %conv491 = zext i8 %250 to i32, !dbg !13753
  %shr492 = ashr i32 %conv491, 3, !dbg !13753
  %and493 = and i32 %shr492, 7, !dbg !13753
  %add494 = add nsw i32 48, %and493, !dbg !13753
  %conv495 = trunc i32 %add494 to i8, !dbg !13753
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !13753
  %252 = load i64, i64* %len, align 8, !dbg !13753
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !13753, !ctir !7
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !13753
  br label %if.end497, !dbg !13753

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !13756
  %inc498 = add i64 %253, 1, !dbg !13756
  store i64 %inc498, i64* %len, align 8, !dbg !13756
  br label %do.end500, !dbg !13756

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !13757
  %conv501 = zext i8 %254 to i32, !dbg !13757
  %and502 = and i32 %conv501, 7, !dbg !13758
  %add503 = add nsw i32 48, %and502, !dbg !13759
  %conv504 = trunc i32 %add503 to i8, !dbg !13760
  store i8 %conv504, i8* %c, align 1, !dbg !13761
  br label %if.end518, !dbg !13762

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !13763
  %tobool506 = trunc i8 %255 to i1, !dbg !13763
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !13765

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !13766

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !13768
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !13768
  %cmp509 = icmp ult i64 %256, %257, !dbg !13768
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !13771

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !13768
  %259 = load i64, i64* %len, align 8, !dbg !13768
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !13768, !ctir !7
  store i8 92, i8* %arrayidx512, align 1, !dbg !13768
  br label %if.end513, !dbg !13768

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !13771
  %inc514 = add i64 %260, 1, !dbg !13771
  store i64 %inc514, i64* %len, align 8, !dbg !13771
  br label %do.end516, !dbg !13771

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !13772
  br label %if.end517, !dbg !13773

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !13774
  %262 = load i64, i64* %i, align 8, !dbg !13776
  %add519 = add i64 %262, 1, !dbg !13777
  %cmp520 = icmp ule i64 %261, %add519, !dbg !13778
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !13779

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !13780

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !13781

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !13782
  %tobool525 = trunc i8 %263 to i1, !dbg !13782
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !13782

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !13782
  %tobool528 = trunc i8 %264 to i1, !dbg !13782
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !13785

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !13786

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !13788
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !13788
  %cmp531 = icmp ult i64 %265, %266, !dbg !13788
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !13791

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !13788
  %268 = load i64, i64* %len, align 8, !dbg !13788
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !13788, !ctir !7
  store i8 39, i8* %arrayidx534, align 1, !dbg !13788
  br label %if.end535, !dbg !13788

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !13791
  %inc536 = add i64 %269, 1, !dbg !13791
  store i64 %inc536, i64* %len, align 8, !dbg !13791
  br label %do.end538, !dbg !13791

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !13786

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !13792
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !13792
  %cmp540 = icmp ult i64 %270, %271, !dbg !13792
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !13795

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !13792
  %273 = load i64, i64* %len, align 8, !dbg !13792
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !13792, !ctir !7
  store i8 39, i8* %arrayidx543, align 1, !dbg !13792
  br label %if.end544, !dbg !13792

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !13795
  %inc545 = add i64 %274, 1, !dbg !13795
  store i64 %inc545, i64* %len, align 8, !dbg !13795
  br label %do.end547, !dbg !13795

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !13786
  br label %if.end548, !dbg !13786

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !13785

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !13796

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !13797
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !13797
  %cmp552 = icmp ult i64 %275, %276, !dbg !13797
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !13800

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !13797
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !13797
  %279 = load i64, i64* %len, align 8, !dbg !13797
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !13797, !ctir !7
  store i8 %277, i8* %arrayidx555, align 1, !dbg !13797
  br label %if.end556, !dbg !13797

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !13800
  %inc557 = add i64 %280, 1, !dbg !13800
  store i64 %inc557, i64* %len, align 8, !dbg !13800
  br label %do.end559, !dbg !13800

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !13801
  %282 = load i64, i64* %i, align 8, !dbg !13802
  %inc560 = add i64 %282, 1, !dbg !13802
  store i64 %inc560, i64* %i, align 8, !dbg !13802
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !13801, !ctir !113
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !13801
  store i8 %283, i8* %c, align 1, !dbg !13803
  br label %for.cond421, !dbg !13804, !llvm.loop !13805

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !13808

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !13809

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !13810
  %tobool565 = trunc i8 %284 to i1, !dbg !13810
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !13812

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !13813
  %cmp568 = icmp ne i32 %285, 2, !dbg !13814
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !13815

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13816
  %tobool571 = trunc i8 %286 to i1, !dbg !13816
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !13817

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !13818
  %tobool574 = icmp ne i32* %287, null, !dbg !13818
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !13819

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !13820
  %289 = load i8, i8* %c, align 1, !dbg !13821
  %conv576 = zext i8 %289 to i64, !dbg !13821
  %div = udiv i64 %conv576, 32, !dbg !13822
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !13820, !ctir !823
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !13820
  %291 = load i8, i8* %c, align 1, !dbg !13823
  %conv578 = zext i8 %291 to i64, !dbg !13823
  %rem = urem i64 %conv578, 32, !dbg !13824
  %sh_prom = trunc i64 %rem to i32, !dbg !13825
  %shr579 = lshr i32 %290, %sh_prom, !dbg !13825
  %and580 = and i32 %shr579, 1, !dbg !13826
  %tobool581 = icmp ne i32 %and580, 0, !dbg !13826
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !13827

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !13828
  %tobool583 = trunc i8 %292 to i1, !dbg !13828
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !13829

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !13830

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !13828

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !13831), !dbg !13832
  br label %do.body586, !dbg !13833

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13834
  %tobool587 = trunc i8 %293 to i1, !dbg !13834
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !13837

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !13834

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !13837
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !13838
  %cmp590 = icmp eq i32 %294, 2, !dbg !13838
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !13838

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !13838
  %tobool593 = trunc i8 %295 to i1, !dbg !13838
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !13837

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !13840

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !13842
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !13842
  %cmp596 = icmp ult i64 %296, %297, !dbg !13842
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !13845

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !13842
  %299 = load i64, i64* %len, align 8, !dbg !13842
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !13842, !ctir !7
  store i8 39, i8* %arrayidx599, align 1, !dbg !13842
  br label %if.end600, !dbg !13842

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !13845
  %inc601 = add i64 %300, 1, !dbg !13845
  store i64 %inc601, i64* %len, align 8, !dbg !13845
  br label %do.end603, !dbg !13845

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !13840

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !13846
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !13846
  %cmp605 = icmp ult i64 %301, %302, !dbg !13846
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !13849

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !13846
  %304 = load i64, i64* %len, align 8, !dbg !13846
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !13846, !ctir !7
  store i8 36, i8* %arrayidx608, align 1, !dbg !13846
  br label %if.end609, !dbg !13846

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !13849
  %inc610 = add i64 %305, 1, !dbg !13849
  store i64 %inc610, i64* %len, align 8, !dbg !13849
  br label %do.end612, !dbg !13849

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !13840

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !13850
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !13850
  %cmp614 = icmp ult i64 %306, %307, !dbg !13850
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !13853

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !13850
  %309 = load i64, i64* %len, align 8, !dbg !13850
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !13850, !ctir !7
  store i8 39, i8* %arrayidx617, align 1, !dbg !13850
  br label %if.end618, !dbg !13850

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !13853
  %inc619 = add i64 %310, 1, !dbg !13853
  store i64 %inc619, i64* %len, align 8, !dbg !13853
  br label %do.end621, !dbg !13853

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !13840
  br label %if.end622, !dbg !13840

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !13837

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !13854
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !13854
  %cmp624 = icmp ult i64 %311, %312, !dbg !13854
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !13857

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !13854
  %314 = load i64, i64* %len, align 8, !dbg !13854
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !13854, !ctir !7
  store i8 92, i8* %arrayidx627, align 1, !dbg !13854
  br label %if.end628, !dbg !13854

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !13857
  %inc629 = add i64 %315, 1, !dbg !13857
  store i64 %inc629, i64* %len, align 8, !dbg !13857
  br label %do.end631, !dbg !13857

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !13837

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !13837

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !13858), !dbg !13859
  br label %do.body634, !dbg !13860

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !13861
  %tobool635 = trunc i8 %316 to i1, !dbg !13861
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !13861

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !13861
  %tobool638 = trunc i8 %317 to i1, !dbg !13861
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !13864

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !13865

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !13867
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !13867
  %cmp641 = icmp ult i64 %318, %319, !dbg !13867
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !13870

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !13867
  %321 = load i64, i64* %len, align 8, !dbg !13867
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !13867, !ctir !7
  store i8 39, i8* %arrayidx644, align 1, !dbg !13867
  br label %if.end645, !dbg !13867

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !13870
  %inc646 = add i64 %322, 1, !dbg !13870
  store i64 %inc646, i64* %len, align 8, !dbg !13870
  br label %do.end648, !dbg !13870

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !13865

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !13871
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !13871
  %cmp650 = icmp ult i64 %323, %324, !dbg !13871
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !13874

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !13871
  %326 = load i64, i64* %len, align 8, !dbg !13871
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !13871, !ctir !7
  store i8 39, i8* %arrayidx653, align 1, !dbg !13871
  br label %if.end654, !dbg !13871

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !13874
  %inc655 = add i64 %327, 1, !dbg !13874
  store i64 %inc655, i64* %len, align 8, !dbg !13874
  br label %do.end657, !dbg !13874

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !13865
  br label %if.end658, !dbg !13865

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !13864

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !13875

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !13876
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !13876
  %cmp662 = icmp ult i64 %328, %329, !dbg !13876
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !13879

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !13876
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !13876
  %332 = load i64, i64* %len, align 8, !dbg !13876
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !13876, !ctir !7
  store i8 %330, i8* %arrayidx665, align 1, !dbg !13876
  br label %if.end666, !dbg !13876

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !13879
  %inc667 = add i64 %333, 1, !dbg !13879
  store i64 %inc667, i64* %len, align 8, !dbg !13879
  br label %do.end669, !dbg !13879

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !13880
  %tobool670 = trunc i8 %334 to i1, !dbg !13880
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !13882

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !13883
  br label %if.end672, !dbg !13884

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !13885

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !13886
  %inc674 = add i64 %335, 1, !dbg !13886
  store i64 %inc674, i64* %i, align 8, !dbg !13886
  br label %for.cond44, !dbg !13887, !llvm.loop !13888

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !13890
  %cmp676 = icmp eq i64 %336, 0, !dbg !13892
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !13893

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !13894
  %cmp679 = icmp eq i32 %337, 2, !dbg !13895
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !13896

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13897
  %tobool682 = trunc i8 %338 to i1, !dbg !13897
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !13898

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !13899

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !13900
  %cmp686 = icmp eq i32 %339, 2, !dbg !13902
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !13903

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13904
  %tobool689 = trunc i8 %340 to i1, !dbg !13904
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !13905

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !13906
  %tobool691 = trunc i8 %341 to i1, !dbg !13906
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !13907

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !13908
  %tobool694 = trunc i8 %342 to i1, !dbg !13908
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !13911

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !13912
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !13913
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !13914
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !13915
  %347 = load i32, i32* %flags.addr, align 4, !dbg !13916
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !13917
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !13918
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !13919
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !13920
  store i64 %call696, i64* %retval, align 8, !dbg !13921
  br label %return, !dbg !13921

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !13922
  %tobool698 = icmp ne i64 %351, 0, !dbg !13922
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !13924

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !13925
  %tobool700 = icmp ne i64 %352, 0, !dbg !13925
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !13926

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !13927
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !13929
  store i64 0, i64* %len, align 8, !dbg !13930
  br label %process_input, !dbg !13931

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !13932

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !13933
  %tobool705 = icmp ne i8* %354, null, !dbg !13933
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !13935

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13936
  %tobool707 = trunc i8 %355 to i1, !dbg !13936
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !13937

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !13938

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !13939
  %357 = load i8, i8* %356, align 1, !dbg !13942, !ctir !114
  %tobool710 = icmp ne i8 %357, 0, !dbg !13943
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !13943

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !13944

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !13945
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !13945
  %cmp713 = icmp ult i64 %358, %359, !dbg !13945
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !13948

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !13945
  %361 = load i8, i8* %360, align 1, !dbg !13945, !ctir !114
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !13945
  %363 = load i64, i64* %len, align 8, !dbg !13945
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !13945, !ctir !7
  store i8 %361, i8* %arrayidx716, align 1, !dbg !13945
  br label %if.end717, !dbg !13945

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !13948
  %inc718 = add i64 %364, 1, !dbg !13948
  store i64 %inc718, i64* %len, align 8, !dbg !13948
  br label %do.end720, !dbg !13948

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !13948

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !13949
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !13949, !ctir !114
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !13949
  br label %for.cond709, !dbg !13950, !llvm.loop !13951

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !13952

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !13953
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !13955
  %cmp725 = icmp ult i64 %366, %367, !dbg !13956
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !13957

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !13958
  %369 = load i64, i64* %len, align 8, !dbg !13959
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !13958, !ctir !7
  store i8 0, i8* %arrayidx728, align 1, !dbg !13960
  br label %if.end729, !dbg !13958

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !13961
  store i64 %370, i64* %retval, align 8, !dbg !13962
  br label %return, !dbg !13962

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !13963), !dbg !13964
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !13965
  %cmp730 = icmp eq i32 %371, 2, !dbg !13967
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !13968

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !13969
  %tobool733 = trunc i8 %372 to i1, !dbg !13969
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !13970

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !13971
  br label %if.end736, !dbg !13972

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !13973
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !13974
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !13975
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !13976
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !13977
  %378 = load i32, i32* %flags.addr, align 4, !dbg !13978
  %and737 = and i32 %378, -3, !dbg !13979
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !13980
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !13981
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !13982
  store i64 %call738, i64* %retval, align 8, !dbg !13983
  br label %return, !dbg !13983

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !13984
  ret i64 %381, !dbg !13984
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #4 !dbg !13985 {
entry:
  %retval = alloca i8*, align 8
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8, !ctir !113
  %locale_code = alloca i8*, align 8, !ctir !113
  store i8* %msgid, i8** %msgid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !13988, metadata !DIExpression()), !dbg !13989
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !13990, metadata !DIExpression()), !dbg !13991
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !13992, metadata !DIExpression()), !dbg !13993
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !13994
  %call = call i8* @gettext(i8* %0) #12, !dbg !13994
  store i8* %call, i8** %translation, align 8, !dbg !13993
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !13995, metadata !DIExpression()), !dbg !13996
  %1 = load i8*, i8** %translation, align 8, !dbg !13997
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !13999
  %cmp = icmp ne i8* %1, %2, !dbg !14000
  br i1 %cmp, label %if.then, label %if.end, !dbg !14001

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !14002
  store i8* %3, i8** %retval, align 8, !dbg !14003
  br label %return, !dbg !14003

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !14004
  store i8* %call1, i8** %locale_code, align 8, !dbg !14005
  %4 = load i8*, i8** %locale_code, align 8, !dbg !14006
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.315, i64 0, i64 0)) #14, !dbg !14006
  %cmp3 = icmp eq i32 %call2, 0, !dbg !14006
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !14008

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !14009
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !14009, !ctir !113
  %6 = load i8, i8* %arrayidx, align 1, !dbg !14009
  %conv = sext i8 %6 to i32, !dbg !14009
  %cmp5 = icmp eq i32 %conv, 96, !dbg !14010
  %7 = zext i1 %cmp5 to i64, !dbg !14009
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.316, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.317, i64 0, i64 0), !dbg !14009
  store i8* %cond, i8** %retval, align 8, !dbg !14011
  br label %return, !dbg !14011

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !14012
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.318, i64 0, i64 0)) #14, !dbg !14012
  %cmp9 = icmp eq i32 %call8, 0, !dbg !14012
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !14014

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !14015
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !14015, !ctir !113
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !14015
  %conv13 = sext i8 %10 to i32, !dbg !14015
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !14016
  %11 = zext i1 %cmp14 to i64, !dbg !14015
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.319, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.320, i64 0, i64 0), !dbg !14015
  store i8* %cond16, i8** %retval, align 8, !dbg !14017
  br label %return, !dbg !14017

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !14018
  %cmp18 = icmp eq i32 %12, 9, !dbg !14019
  %13 = zext i1 %cmp18 to i64, !dbg !14018
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.312, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), !dbg !14018
  store i8* %cond20, i8** %retval, align 8, !dbg !14020
  br label %return, !dbg !14020

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !14021
  ret i8* %14, !dbg !14021
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !14022 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14025, metadata !DIExpression()), !dbg !14026
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14027, metadata !DIExpression()), !dbg !14028
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14029, metadata !DIExpression()), !dbg !14030
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14031
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14032
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14033
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !14034
  ret i8* %call, !dbg !14035
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #4 !dbg !14036 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %size.addr = alloca i64*, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !801
  %e = alloca i32, align 4, !ctir !5
  %flags = alloca i32, align 4, !ctir !5
  %bufsize = alloca i64, align 8, !ctir !52
  %buf = alloca i8*, align 8, !ctir !7
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14039, metadata !DIExpression()), !dbg !14040
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14041, metadata !DIExpression()), !dbg !14042
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !14043, metadata !DIExpression()), !dbg !14044
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14045, metadata !DIExpression()), !dbg !14046
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14047, metadata !DIExpression()), !dbg !14048
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14049
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14049
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14049

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14050
  br label %cond.end, !dbg !14049

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14049

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14049
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !14048
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14051, metadata !DIExpression()), !dbg !14052
  %call = call i32* @__errno_location() #15, !dbg !14053
  %2 = load i32, i32* %call, align 4, !dbg !14053, !ctir !5
  store i32 %2, i32* %e, align 4, !dbg !14052
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14054, metadata !DIExpression()), !dbg !14055
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14056
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !14057, !ctir !802
  %4 = load i32, i32* %flags1, align 4, !dbg !14057, !ctir !5
  %5 = load i64*, i64** %size.addr, align 8, !dbg !14058
  %tobool2 = icmp ne i64* %5, null, !dbg !14058
  %6 = zext i1 %tobool2 to i64, !dbg !14058
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !14058
  %or = or i32 %4, %cond3, !dbg !14059
  store i32 %or, i32* %flags, align 4, !dbg !14055
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !14060, metadata !DIExpression()), !dbg !14061
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !14062
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !14063
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14064
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !14065, !ctir !802
  %10 = load i32, i32* %style, align 8, !dbg !14065, !ctir !772
  %11 = load i32, i32* %flags, align 4, !dbg !14066
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14067
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !14068, !ctir !802
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14067, !ctir !803
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14069
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !14070, !ctir !802
  %14 = load i8*, i8** %left_quote, align 8, !dbg !14070, !ctir !113
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14071
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !14072, !ctir !802
  %16 = load i8*, i8** %right_quote, align 8, !dbg !14072, !ctir !113
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !14073
  %add = add i64 %call4, 1, !dbg !14074
  store i64 %add, i64* %bufsize, align 8, !dbg !14061
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14075, metadata !DIExpression()), !dbg !14076
  %17 = load i64, i64* %bufsize, align 8, !dbg !14077
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !14078
  store i8* %call5, i8** %buf, align 8, !dbg !14076
  %18 = load i8*, i8** %buf, align 8, !dbg !14079
  %19 = load i64, i64* %bufsize, align 8, !dbg !14080
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !14081
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !14082
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14083
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !14084, !ctir !802
  %23 = load i32, i32* %style6, align 8, !dbg !14084, !ctir !772
  %24 = load i32, i32* %flags, align 4, !dbg !14085
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14086
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !14087, !ctir !802
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !14086, !ctir !803
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14088
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !14089, !ctir !802
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !14089, !ctir !113
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14090
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !14091, !ctir !802
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !14091, !ctir !113
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !14092
  %30 = load i32, i32* %e, align 4, !dbg !14093
  %call12 = call i32* @__errno_location() #15, !dbg !14094
  store i32 %30, i32* %call12, align 4, !dbg !14095, !ctir !5
  %31 = load i64*, i64** %size.addr, align 8, !dbg !14096
  %tobool13 = icmp ne i64* %31, null, !dbg !14096
  br i1 %tobool13, label %if.then, label %if.end, !dbg !14098

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !14099
  %sub = sub i64 %32, 1, !dbg !14100
  %33 = load i64*, i64** %size.addr, align 8, !dbg !14101
  store i64 %sub, i64* %33, align 8, !dbg !14102, !ctir !52
  br label %if.end, !dbg !14103

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !14104
  ret i8* %34, !dbg !14105
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #4 !dbg !14106 {
entry:
  %sv = alloca %struct.slotvec*, align 8, !ctir !804
  %i = alloca i32, align 4, !ctir !5
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !14107, metadata !DIExpression()), !dbg !14108
  %0 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !14109
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !14108
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14110, metadata !DIExpression()), !dbg !14111
  store i32 1, i32* %i, align 4, !dbg !14112
  br label %for.cond, !dbg !14114

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !14115
  %2 = load i32, i32* @nslots, align 4, !dbg !14117
  %cmp = icmp slt i32 %1, %2, !dbg !14118
  br i1 %cmp, label %for.body, label %for.end, !dbg !14119

for.body:                                         ; preds = %for.cond
  %3 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14120
  %4 = load i32, i32* %i, align 4, !dbg !14121
  %idxprom = sext i32 %4 to i64, !dbg !14120
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %3, i64 %idxprom, !dbg !14120, !ctir !804
  %val = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !14122, !ctir !805
  %5 = load i8*, i8** %val, align 8, !dbg !14122, !ctir !7
  call void @free(i8* %5) #12, !dbg !14123
  br label %for.inc, !dbg !14123

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !14124
  %inc = add nsw i32 %6, 1, !dbg !14124
  store i32 %inc, i32* %i, align 4, !dbg !14124
  br label %for.cond, !dbg !14125, !llvm.loop !14126

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14128
  %arrayidx1 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %7, i64 0, !dbg !14128, !ctir !804
  %val2 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !14130, !ctir !805
  %8 = load i8*, i8** %val2, align 8, !dbg !14130, !ctir !7
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !14131
  br i1 %cmp3, label %if.then, label %if.end, !dbg !14132

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14133
  %arrayidx4 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 0, !dbg !14133, !ctir !804
  %val5 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !14135, !ctir !805
  %10 = load i8*, i8** %val5, align 8, !dbg !14135, !ctir !7
  call void @free(i8* %10) #12, !dbg !14136
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !14137, !ctir !52
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !14138, !ctir !7
  br label %if.end, !dbg !14139

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14140
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !14142
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !14143

if.then7:                                         ; preds = %if.end
  %12 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14144
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !14144
  call void @free(i8* %13) #12, !dbg !14146
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !14147
  br label %if.end8, !dbg !14148

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !14149
  ret void, !dbg !14150
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #4 !dbg !14151 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14154, metadata !DIExpression()), !dbg !14155
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14156, metadata !DIExpression()), !dbg !14157
  %0 = load i32, i32* %n.addr, align 4, !dbg !14158
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14159
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !14160
  ret i8* %call, !dbg !14161
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #4 !dbg !14162 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !5
  %sv = alloca %struct.slotvec*, align 8, !ctir !804
  %preallocated = alloca i8, align 1, !ctir !139
  %nmax = alloca i32, align 4, !ctir !5
  %size = alloca i64, align 8, !ctir !52
  %val = alloca i8*, align 8, !ctir !7
  %flags = alloca i32, align 4, !ctir !5
  %qsize = alloca i64, align 8, !ctir !52
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14165, metadata !DIExpression()), !dbg !14166
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14167, metadata !DIExpression()), !dbg !14168
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14169, metadata !DIExpression()), !dbg !14170
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !14171, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14173, metadata !DIExpression()), !dbg !14174
  %call = call i32* @__errno_location() #15, !dbg !14175
  %0 = load i32, i32* %call, align 4, !dbg !14175, !ctir !5
  store i32 %0, i32* %e, align 4, !dbg !14174
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !14176, metadata !DIExpression()), !dbg !14177
  %1 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !14178
  store %struct.slotvec* %1, %struct.slotvec** %sv, align 8, !dbg !14177
  %2 = load i32, i32* %n.addr, align 4, !dbg !14179
  %cmp = icmp slt i32 %2, 0, !dbg !14181
  br i1 %cmp, label %if.then, label %if.end, !dbg !14182

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !14183
  unreachable, !dbg !14183

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !14184
  %4 = load i32, i32* %n.addr, align 4, !dbg !14186
  %cmp1 = icmp sle i32 %3, %4, !dbg !14187
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !14188

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !14189, metadata !DIExpression()), !dbg !14191
  %5 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14192
  %cmp3 = icmp eq %struct.slotvec* %5, @slotvec0, !dbg !14193
  %frombool = zext i1 %cmp3 to i8, !dbg !14191
  store i8 %frombool, i8* %preallocated, align 1, !dbg !14191
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !14194, metadata !DIExpression()), !dbg !14195
  store i32 2147483646, i32* %nmax, align 4, !dbg !14195
  %6 = load i32, i32* %nmax, align 4, !dbg !14196
  %7 = load i32, i32* %n.addr, align 4, !dbg !14198
  %cmp4 = icmp slt i32 %6, %7, !dbg !14199
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !14200

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #16, !dbg !14201
  unreachable, !dbg !14201

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !14202
  %tobool = trunc i8 %8 to i1, !dbg !14202
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14202

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !14202

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14203
  br label %cond.end, !dbg !14202

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.slotvec* [ null, %cond.true ], [ %9, %cond.false ], !dbg !14202
  %10 = bitcast %struct.slotvec* %cond to i8*, !dbg !14202
  %11 = load i32, i32* %n.addr, align 4, !dbg !14204
  %add = add nsw i32 %11, 1, !dbg !14205
  %conv = sext i32 %add to i64, !dbg !14206
  %mul = mul i64 %conv, 16, !dbg !14207
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !14208
  %12 = bitcast i8* %call7 to %struct.slotvec*, !dbg !14208
  store %struct.slotvec* %12, %struct.slotvec** %sv, align 8, !dbg !14209
  store %struct.slotvec* %12, %struct.slotvec** @slotvec, align 8, !dbg !14210
  %13 = load i8, i8* %preallocated, align 1, !dbg !14211
  %tobool8 = trunc i8 %13 to i1, !dbg !14211
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !14213

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14214
  %15 = bitcast %struct.slotvec* %14 to i8*, !dbg !14215
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !14215
  br label %if.end10, !dbg !14216

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14217
  %17 = load i32, i32* @nslots, align 4, !dbg !14218
  %idx.ext = sext i32 %17 to i64, !dbg !14219
  %add.ptr = getelementptr inbounds %struct.slotvec, %struct.slotvec* %16, i64 %idx.ext, !dbg !14219, !ctir !805
  %18 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !14220
  %19 = load i32, i32* %n.addr, align 4, !dbg !14221
  %add11 = add nsw i32 %19, 1, !dbg !14222
  %20 = load i32, i32* @nslots, align 4, !dbg !14223
  %sub = sub nsw i32 %add11, %20, !dbg !14224
  %conv12 = sext i32 %sub to i64, !dbg !14225
  %mul13 = mul i64 %conv12, 16, !dbg !14226
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !14220
  %21 = load i32, i32* %n.addr, align 4, !dbg !14227
  %add14 = add nsw i32 %21, 1, !dbg !14228
  store i32 %add14, i32* @nslots, align 4, !dbg !14229
  br label %if.end15, !dbg !14230

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !14231, metadata !DIExpression()), !dbg !14233
  %22 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14234
  %23 = load i32, i32* %n.addr, align 4, !dbg !14235
  %idxprom = sext i32 %23 to i64, !dbg !14234
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %22, i64 %idxprom, !dbg !14234, !ctir !804
  %size16 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !14236, !ctir !805
  %24 = load i64, i64* %size16, align 8, !dbg !14236, !ctir !52
  store i64 %24, i64* %size, align 8, !dbg !14233
  call void @llvm.dbg.declare(metadata i8** %val, metadata !14237, metadata !DIExpression()), !dbg !14238
  %25 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14239
  %26 = load i32, i32* %n.addr, align 4, !dbg !14240
  %idxprom17 = sext i32 %26 to i64, !dbg !14239
  %arrayidx18 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 %idxprom17, !dbg !14239, !ctir !804
  %val19 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx18, i32 0, i32 1, !dbg !14241, !ctir !805
  %27 = load i8*, i8** %val19, align 8, !dbg !14241, !ctir !7
  store i8* %27, i8** %val, align 8, !dbg !14238
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14242, metadata !DIExpression()), !dbg !14243
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14244
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !14245, !ctir !802
  %29 = load i32, i32* %flags20, align 4, !dbg !14245, !ctir !5
  %or = or i32 %29, 1, !dbg !14246
  store i32 %or, i32* %flags, align 4, !dbg !14243
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !14247, metadata !DIExpression()), !dbg !14248
  %30 = load i8*, i8** %val, align 8, !dbg !14249
  %31 = load i64, i64* %size, align 8, !dbg !14250
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !14251
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !14252
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14253
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !14254, !ctir !802
  %35 = load i32, i32* %style, align 8, !dbg !14254, !ctir !772
  %36 = load i32, i32* %flags, align 4, !dbg !14255
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14256
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !14257, !ctir !802
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14256, !ctir !803
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14258
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !14259, !ctir !802
  %39 = load i8*, i8** %left_quote, align 8, !dbg !14259, !ctir !113
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14260
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !14261, !ctir !802
  %41 = load i8*, i8** %right_quote, align 8, !dbg !14261, !ctir !113
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !14262
  store i64 %call21, i64* %qsize, align 8, !dbg !14248
  %42 = load i64, i64* %size, align 8, !dbg !14263
  %43 = load i64, i64* %qsize, align 8, !dbg !14265
  %cmp22 = icmp ule i64 %42, %43, !dbg !14266
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !14267

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !14268
  %add25 = add i64 %44, 1, !dbg !14270
  store i64 %add25, i64* %size, align 8, !dbg !14271
  %45 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14272
  %46 = load i32, i32* %n.addr, align 4, !dbg !14273
  %idxprom26 = sext i32 %46 to i64, !dbg !14272
  %arrayidx27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %45, i64 %idxprom26, !dbg !14272, !ctir !804
  %size28 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx27, i32 0, i32 0, !dbg !14274, !ctir !805
  store i64 %add25, i64* %size28, align 8, !dbg !14275, !ctir !52
  %47 = load i8*, i8** %val, align 8, !dbg !14276
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !14278
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !14279

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !14280
  call void @free(i8* %48) #12, !dbg !14281
  br label %if.end32, !dbg !14281

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !14282
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !14283
  store i8* %call33, i8** %val, align 8, !dbg !14284
  %50 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14285
  %51 = load i32, i32* %n.addr, align 4, !dbg !14286
  %idxprom34 = sext i32 %51 to i64, !dbg !14285
  %arrayidx35 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %50, i64 %idxprom34, !dbg !14285, !ctir !804
  %val36 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx35, i32 0, i32 1, !dbg !14287, !ctir !805
  store i8* %call33, i8** %val36, align 8, !dbg !14288, !ctir !7
  %52 = load i8*, i8** %val, align 8, !dbg !14289
  %53 = load i64, i64* %size, align 8, !dbg !14290
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !14291
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !14292
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14293
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !14294, !ctir !802
  %57 = load i32, i32* %style37, align 8, !dbg !14294, !ctir !772
  %58 = load i32, i32* %flags, align 4, !dbg !14295
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14296
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !14297, !ctir !802
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !14296, !ctir !803
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14298
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !14299, !ctir !802
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !14299, !ctir !113
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14300
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !14301, !ctir !802
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !14301, !ctir !113
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !14302
  br label %if.end43, !dbg !14303

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !14304
  %call44 = call i32* @__errno_location() #15, !dbg !14305
  store i32 %64, i32* %call44, align 4, !dbg !14306, !ctir !5
  %65 = load i8*, i8** %val, align 8, !dbg !14307
  ret i8* %65, !dbg !14308
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !14309 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14312, metadata !DIExpression()), !dbg !14313
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14314, metadata !DIExpression()), !dbg !14315
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14316, metadata !DIExpression()), !dbg !14317
  %0 = load i32, i32* %n.addr, align 4, !dbg !14318
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14319
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !14320
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !14321
  ret i8* %call, !dbg !14322
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #4 !dbg !14323 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14324, metadata !DIExpression()), !dbg !14325
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14326
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !14327
  ret i8* %call, !dbg !14328
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #4 !dbg !14329 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14330, metadata !DIExpression()), !dbg !14331
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14332, metadata !DIExpression()), !dbg !14333
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14334
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14335
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !14336
  ret i8* %call, !dbg !14337
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #4 !dbg !14338 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !802
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14341, metadata !DIExpression()), !dbg !14342
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14343, metadata !DIExpression()), !dbg !14344
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14345, metadata !DIExpression()), !dbg !14346
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14347, metadata !DIExpression()), !dbg !14348
  %0 = load i32, i32* %s.addr, align 4, !dbg !14349
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !14350
  %1 = load i32, i32* %n.addr, align 4, !dbg !14351
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14352
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !14353
  ret i8* %call, !dbg !14354
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #4 !dbg !14355 {
entry:
  %style.addr = alloca i32, align 4
  store i32 %style, i32* %style.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !14358, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !14360, metadata !DIExpression()), !dbg !14361
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !14361
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !14361
  %1 = load i32, i32* %style.addr, align 4, !dbg !14362
  %cmp = icmp eq i32 %1, 10, !dbg !14364
  br i1 %cmp, label %if.then, label %if.end, !dbg !14365

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !14366
  unreachable, !dbg !14366

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !14367
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !14368, !ctir !791
  store i32 %2, i32* %style1, align 8, !dbg !14369, !ctir !772
  ret void, !dbg !14370
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #4 !dbg !14371 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !802
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14374, metadata !DIExpression()), !dbg !14375
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14376, metadata !DIExpression()), !dbg !14377
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14378, metadata !DIExpression()), !dbg !14379
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14380, metadata !DIExpression()), !dbg !14381
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14382, metadata !DIExpression()), !dbg !14383
  %0 = load i32, i32* %s.addr, align 4, !dbg !14384
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !14385
  %1 = load i32, i32* %n.addr, align 4, !dbg !14386
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14387
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !14388
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !14389
  ret i8* %call, !dbg !14390
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #4 !dbg !14391 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14394, metadata !DIExpression()), !dbg !14395
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14396, metadata !DIExpression()), !dbg !14397
  %0 = load i32, i32* %s.addr, align 4, !dbg !14398
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14399
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !14400
  ret i8* %call, !dbg !14401
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #4 !dbg !14402 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14405, metadata !DIExpression()), !dbg !14406
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14407, metadata !DIExpression()), !dbg !14408
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14409, metadata !DIExpression()), !dbg !14410
  %0 = load i32, i32* %s.addr, align 4, !dbg !14411
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14412
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !14413
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !14414
  ret i8* %call, !dbg !14415
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #4 !dbg !14416 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 8, !ctir !791
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14419, metadata !DIExpression()), !dbg !14420
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14421, metadata !DIExpression()), !dbg !14422
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !14423, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !14425, metadata !DIExpression()), !dbg !14426
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !14427
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !14427
  %1 = load i8, i8* %ch.addr, align 1, !dbg !14428
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !14429
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14430
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !14431
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !14432
  ret i8* %call1, !dbg !14433
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #4 !dbg !14434 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14437, metadata !DIExpression()), !dbg !14438
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !14439, metadata !DIExpression()), !dbg !14440
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14441
  %1 = load i8, i8* %ch.addr, align 1, !dbg !14442
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !14443
  ret i8* %call, !dbg !14444
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #4 !dbg !14445 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14446, metadata !DIExpression()), !dbg !14447
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14448
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !14449
  ret i8* %call, !dbg !14450
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #4 !dbg !14451 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14452, metadata !DIExpression()), !dbg !14453
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14454, metadata !DIExpression()), !dbg !14455
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14456
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14457
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !14458
  ret i8* %call, !dbg !14459
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #4 !dbg !14460 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %options = alloca %struct.quoting_options, align 8, !ctir !791
  %tmp = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14461, metadata !DIExpression()), !dbg !14462
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14463, metadata !DIExpression()), !dbg !14464
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14465, metadata !DIExpression()), !dbg !14466
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !14467, metadata !DIExpression()), !dbg !14468
  %0 = load i32, i32* %s.addr, align 4, !dbg !14469
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !14470
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !14470
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !14470
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !14470
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !14471
  %3 = load i32, i32* %n.addr, align 4, !dbg !14472
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !14473
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !14474
  ret i8* %call1, !dbg !14475
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !14476 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14479, metadata !DIExpression()), !dbg !14480
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14481, metadata !DIExpression()), !dbg !14482
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14483, metadata !DIExpression()), !dbg !14484
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14485, metadata !DIExpression()), !dbg !14486
  %0 = load i32, i32* %n.addr, align 4, !dbg !14487
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !14488
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !14489
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !14490
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !14491
  ret i8* %call, !dbg !14492
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !14493 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !791
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14496, metadata !DIExpression()), !dbg !14497
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14498, metadata !DIExpression()), !dbg !14499
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14500, metadata !DIExpression()), !dbg !14501
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14502, metadata !DIExpression()), !dbg !14503
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14504, metadata !DIExpression()), !dbg !14505
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14506, metadata !DIExpression()), !dbg !14507
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !14508
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !14508
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !14509
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !14510
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !14511
  %3 = load i32, i32* %n.addr, align 4, !dbg !14512
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !14513
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !14514
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !14515
  ret i8* %call, !dbg !14516
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !14517 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14520, metadata !DIExpression()), !dbg !14521
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14522, metadata !DIExpression()), !dbg !14523
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14524, metadata !DIExpression()), !dbg !14525
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !14526
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !14527
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14528
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !14529
  ret i8* %call, !dbg !14530
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !14531 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14534, metadata !DIExpression()), !dbg !14535
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14536, metadata !DIExpression()), !dbg !14537
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14538, metadata !DIExpression()), !dbg !14539
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14540, metadata !DIExpression()), !dbg !14541
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !14542
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !14543
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14544
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !14545
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !14546
  ret i8* %call, !dbg !14547
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !14548 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14551, metadata !DIExpression()), !dbg !14552
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14553, metadata !DIExpression()), !dbg !14554
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14555, metadata !DIExpression()), !dbg !14556
  %0 = load i32, i32* %n.addr, align 4, !dbg !14557
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14558
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !14559
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !14560
  ret i8* %call, !dbg !14561
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #4 !dbg !14562 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14565, metadata !DIExpression()), !dbg !14566
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14567, metadata !DIExpression()), !dbg !14568
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14569
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14570
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !14571
  ret i8* %call, !dbg !14572
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #4 !dbg !14573 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14576, metadata !DIExpression()), !dbg !14577
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14578, metadata !DIExpression()), !dbg !14579
  %0 = load i32, i32* %n.addr, align 4, !dbg !14580
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14581
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !14582
  ret i8* %call, !dbg !14583
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #4 !dbg !14584 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14587, metadata !DIExpression()), !dbg !14588
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14589
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !14590
  ret i8* %call, !dbg !14591
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @renameatu(i32 %fd1, i8* %src, i32 %fd2, i8* %dst, i32 %flags) #4 !dbg !14592 {
entry:
  %retval = alloca i32, align 4
  %fd1.addr = alloca i32, align 4
  %src.addr = alloca i8*, align 8
  %fd2.addr = alloca i32, align 4
  %dst.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %ret_val = alloca i32, align 4, !ctir !5
  %err = alloca i32, align 4, !ctir !5
  %src_len = alloca i64, align 8, !ctir !52
  %dst_len = alloca i64, align 8, !ctir !52
  %src_temp = alloca i8*, align 8, !ctir !7
  %dst_temp = alloca i8*, align 8, !ctir !7
  %src_slash = alloca i8, align 1, !ctir !139
  %dst_slash = alloca i8, align 1, !ctir !139
  %rename_errno = alloca i32, align 4, !ctir !5
  %src_st = alloca %struct.stat, align 8, !ctir !14596
  %dst_st = alloca %struct.stat, align 8, !ctir !14596
  %dst_found_nonexistent = alloca i8, align 1, !ctir !139
  store i32 %fd1, i32* %fd1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd1.addr, metadata !14617, metadata !DIExpression()), !dbg !14618
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !14619, metadata !DIExpression()), !dbg !14620
  store i32 %fd2, i32* %fd2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd2.addr, metadata !14621, metadata !DIExpression()), !dbg !14622
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !14623, metadata !DIExpression()), !dbg !14624
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14625, metadata !DIExpression()), !dbg !14626
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !14627, metadata !DIExpression()), !dbg !14628
  store i32 -1, i32* %ret_val, align 4, !dbg !14628
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14629, metadata !DIExpression()), !dbg !14630
  store i32 22, i32* %err, align 4, !dbg !14630
  %0 = load i32, i32* %fd1.addr, align 4, !dbg !14631
  %1 = load i8*, i8** %src.addr, align 8, !dbg !14632
  %2 = load i32, i32* %fd2.addr, align 4, !dbg !14633
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !14634
  %4 = load i32, i32* %flags.addr, align 4, !dbg !14635
  %call = call i64 (i64, ...) @syscall(i64 316, i32 %0, i8* %1, i32 %2, i8* %3, i32 %4) #12, !dbg !14636
  %conv = trunc i64 %call to i32, !dbg !14636
  store i32 %conv, i32* %ret_val, align 4, !dbg !14637
  %call1 = call i32* @__errno_location() #15, !dbg !14638
  %5 = load i32, i32* %call1, align 4, !dbg !14638, !ctir !5
  store i32 %5, i32* %err, align 4, !dbg !14639
  %6 = load i32, i32* %ret_val, align 4, !dbg !14640
  %cmp = icmp slt i32 %6, 0, !dbg !14642
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !14643

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !14644
  %cmp3 = icmp eq i32 %7, 22, !dbg !14645
  br i1 %cmp3, label %if.end, label %lor.lhs.false, !dbg !14646

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load i32, i32* %err, align 4, !dbg !14647
  %cmp5 = icmp eq i32 %8, 38, !dbg !14648
  br i1 %cmp5, label %if.end, label %lor.lhs.false7, !dbg !14649

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %9 = load i32, i32* %err, align 4, !dbg !14650
  %cmp8 = icmp eq i32 %9, 95, !dbg !14651
  br i1 %cmp8, label %if.end, label %if.then, !dbg !14652

if.then:                                          ; preds = %lor.lhs.false7, %entry
  %10 = load i32, i32* %ret_val, align 4, !dbg !14653
  store i32 %10, i32* %retval, align 4, !dbg !14654
  br label %return, !dbg !14654

if.end:                                           ; preds = %lor.lhs.false7, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %src_len, metadata !14655, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.declare(metadata i64* %dst_len, metadata !14658, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.declare(metadata i8** %src_temp, metadata !14660, metadata !DIExpression()), !dbg !14661
  %11 = load i8*, i8** %src.addr, align 8, !dbg !14662
  store i8* %11, i8** %src_temp, align 8, !dbg !14661
  call void @llvm.dbg.declare(metadata i8** %dst_temp, metadata !14663, metadata !DIExpression()), !dbg !14664
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !14665
  store i8* %12, i8** %dst_temp, align 8, !dbg !14664
  call void @llvm.dbg.declare(metadata i8* %src_slash, metadata !14666, metadata !DIExpression()), !dbg !14667
  call void @llvm.dbg.declare(metadata i8* %dst_slash, metadata !14668, metadata !DIExpression()), !dbg !14669
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !14670, metadata !DIExpression()), !dbg !14671
  store i32 20, i32* %rename_errno, align 4, !dbg !14671
  call void @llvm.dbg.declare(metadata %struct.stat* %src_st, metadata !14672, metadata !DIExpression()), !dbg !14673
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_st, metadata !14674, metadata !DIExpression()), !dbg !14675
  call void @llvm.dbg.declare(metadata i8* %dst_found_nonexistent, metadata !14676, metadata !DIExpression()), !dbg !14677
  store i8 0, i8* %dst_found_nonexistent, align 1, !dbg !14677
  %13 = load i32, i32* %flags.addr, align 4, !dbg !14678
  %cmp10 = icmp ne i32 %13, 0, !dbg !14680
  br i1 %cmp10, label %if.then12, label %if.end31, !dbg !14681

if.then12:                                        ; preds = %if.end
  %14 = load i32, i32* %flags.addr, align 4, !dbg !14682
  %and = and i32 %14, -2, !dbg !14685
  %tobool = icmp ne i32 %and, 0, !dbg !14685
  br i1 %tobool, label %if.then13, label %if.else, !dbg !14686

if.then13:                                        ; preds = %if.then12
  %call14 = call i32 @errno_fail(i32 95), !dbg !14687
  store i32 %call14, i32* %retval, align 4, !dbg !14688
  br label %return, !dbg !14688

if.else:                                          ; preds = %if.then12
  %15 = load i32, i32* %fd2.addr, align 4, !dbg !14689
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !14692
  %call15 = call i32 @lstatat(i32 %15, i8* %16, %struct.stat* %dst_st), !dbg !14693
  %cmp16 = icmp eq i32 %call15, 0, !dbg !14694
  br i1 %cmp16, label %if.then22, label %lor.lhs.false18, !dbg !14695

lor.lhs.false18:                                  ; preds = %if.else
  %call19 = call i32* @__errno_location() #15, !dbg !14696
  %17 = load i32, i32* %call19, align 4, !dbg !14696, !ctir !5
  %cmp20 = icmp eq i32 %17, 75, !dbg !14697
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !14698

if.then22:                                        ; preds = %lor.lhs.false18, %if.else
  %call23 = call i32 @errno_fail(i32 17), !dbg !14699
  store i32 %call23, i32* %retval, align 4, !dbg !14700
  br label %return, !dbg !14700

if.end24:                                         ; preds = %lor.lhs.false18
  %call25 = call i32* @__errno_location() #15, !dbg !14701
  %18 = load i32, i32* %call25, align 4, !dbg !14701, !ctir !5
  %cmp26 = icmp ne i32 %18, 2, !dbg !14703
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !14704

if.then28:                                        ; preds = %if.end24
  store i32 -1, i32* %retval, align 4, !dbg !14705
  br label %return, !dbg !14705

if.end29:                                         ; preds = %if.end24
  store i8 1, i8* %dst_found_nonexistent, align 1, !dbg !14706
  br label %if.end30

if.end30:                                         ; preds = %if.end29
  br label %if.end31, !dbg !14707

if.end31:                                         ; preds = %if.end30, %if.end
  %19 = load i8*, i8** %src.addr, align 8, !dbg !14708
  %call32 = call i64 @strlen(i8* %19) #14, !dbg !14709
  store i64 %call32, i64* %src_len, align 8, !dbg !14710
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !14711
  %call33 = call i64 @strlen(i8* %20) #14, !dbg !14712
  store i64 %call33, i64* %dst_len, align 8, !dbg !14713
  %21 = load i64, i64* %src_len, align 8, !dbg !14714
  %tobool34 = icmp ne i64 %21, 0, !dbg !14714
  br i1 %tobool34, label %lor.lhs.false35, label %if.then37, !dbg !14716

lor.lhs.false35:                                  ; preds = %if.end31
  %22 = load i64, i64* %dst_len, align 8, !dbg !14717
  %tobool36 = icmp ne i64 %22, 0, !dbg !14717
  br i1 %tobool36, label %if.end39, label %if.then37, !dbg !14718

if.then37:                                        ; preds = %lor.lhs.false35, %if.end31
  %23 = load i32, i32* %fd1.addr, align 4, !dbg !14719
  %24 = load i8*, i8** %src.addr, align 8, !dbg !14720
  %25 = load i32, i32* %fd2.addr, align 4, !dbg !14721
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !14722
  %call38 = call i32 @renameat(i32 %23, i8* %24, i32 %25, i8* %26) #12, !dbg !14723
  store i32 %call38, i32* %retval, align 4, !dbg !14724
  br label %return, !dbg !14724

if.end39:                                         ; preds = %lor.lhs.false35
  %27 = load i8*, i8** %src.addr, align 8, !dbg !14725
  %28 = load i64, i64* %src_len, align 8, !dbg !14726
  %sub = sub i64 %28, 1, !dbg !14727
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 %sub, !dbg !14725, !ctir !113
  %29 = load i8, i8* %arrayidx, align 1, !dbg !14725
  %conv40 = sext i8 %29 to i32, !dbg !14725
  %cmp41 = icmp eq i32 %conv40, 47, !dbg !14728
  %frombool = zext i1 %cmp41 to i8, !dbg !14729
  store i8 %frombool, i8* %src_slash, align 1, !dbg !14729
  %30 = load i8*, i8** %dst.addr, align 8, !dbg !14730
  %31 = load i64, i64* %dst_len, align 8, !dbg !14731
  %sub43 = sub i64 %31, 1, !dbg !14732
  %arrayidx44 = getelementptr inbounds i8, i8* %30, i64 %sub43, !dbg !14730, !ctir !113
  %32 = load i8, i8* %arrayidx44, align 1, !dbg !14730
  %conv45 = sext i8 %32 to i32, !dbg !14730
  %cmp46 = icmp eq i32 %conv45, 47, !dbg !14733
  %frombool48 = zext i1 %cmp46 to i8, !dbg !14734
  store i8 %frombool48, i8* %dst_slash, align 1, !dbg !14734
  %33 = load i8, i8* %src_slash, align 1, !dbg !14735
  %tobool49 = trunc i8 %33 to i1, !dbg !14735
  br i1 %tobool49, label %if.end54, label %land.lhs.true50, !dbg !14737

land.lhs.true50:                                  ; preds = %if.end39
  %34 = load i8, i8* %dst_slash, align 1, !dbg !14738
  %tobool51 = trunc i8 %34 to i1, !dbg !14738
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !14739

if.then52:                                        ; preds = %land.lhs.true50
  %35 = load i32, i32* %fd1.addr, align 4, !dbg !14740
  %36 = load i8*, i8** %src.addr, align 8, !dbg !14741
  %37 = load i32, i32* %fd2.addr, align 4, !dbg !14742
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !14743
  %call53 = call i32 @renameat(i32 %35, i8* %36, i32 %37, i8* %38) #12, !dbg !14744
  store i32 %call53, i32* %retval, align 4, !dbg !14745
  br label %return, !dbg !14745

if.end54:                                         ; preds = %land.lhs.true50, %if.end39
  %39 = load i32, i32* %fd1.addr, align 4, !dbg !14746
  %40 = load i8*, i8** %src.addr, align 8, !dbg !14748
  %call55 = call i32 @lstatat(i32 %39, i8* %40, %struct.stat* %src_st), !dbg !14749
  %tobool56 = icmp ne i32 %call55, 0, !dbg !14749
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !14750

if.then57:                                        ; preds = %if.end54
  store i32 -1, i32* %retval, align 4, !dbg !14751
  br label %return, !dbg !14751

if.end58:                                         ; preds = %if.end54
  %41 = load i8, i8* %dst_found_nonexistent, align 1, !dbg !14752
  %tobool59 = trunc i8 %41 to i1, !dbg !14752
  br i1 %tobool59, label %if.then60, label %if.else67, !dbg !14754

if.then60:                                        ; preds = %if.end58
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !14755, !ctir !14596
  %42 = load i32, i32* %st_mode, align 8, !dbg !14755, !ctir !165
  %and61 = and i32 %42, 61440, !dbg !14755
  %cmp62 = icmp eq i32 %and61, 16384, !dbg !14755
  br i1 %cmp62, label %if.end66, label %if.then64, !dbg !14758

if.then64:                                        ; preds = %if.then60
  %call65 = call i32 @errno_fail(i32 2), !dbg !14759
  store i32 %call65, i32* %retval, align 4, !dbg !14760
  br label %return, !dbg !14760

if.end66:                                         ; preds = %if.then60
  br label %if.end98, !dbg !14761

if.else67:                                        ; preds = %if.end58
  %43 = load i32, i32* %fd2.addr, align 4, !dbg !14762
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !14764
  %call68 = call i32 @lstatat(i32 %43, i8* %44, %struct.stat* %dst_st), !dbg !14765
  %tobool69 = icmp ne i32 %call68, 0, !dbg !14765
  br i1 %tobool69, label %if.then70, label %if.else81, !dbg !14766

if.then70:                                        ; preds = %if.else67
  %call71 = call i32* @__errno_location() #15, !dbg !14767
  %45 = load i32, i32* %call71, align 4, !dbg !14767, !ctir !5
  %cmp72 = icmp ne i32 %45, 2, !dbg !14770
  br i1 %cmp72, label %if.then79, label %lor.lhs.false74, !dbg !14771

lor.lhs.false74:                                  ; preds = %if.then70
  %st_mode75 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !14772, !ctir !14596
  %46 = load i32, i32* %st_mode75, align 8, !dbg !14772, !ctir !165
  %and76 = and i32 %46, 61440, !dbg !14772
  %cmp77 = icmp eq i32 %and76, 16384, !dbg !14772
  br i1 %cmp77, label %if.end80, label %if.then79, !dbg !14773

if.then79:                                        ; preds = %lor.lhs.false74, %if.then70
  store i32 -1, i32* %retval, align 4, !dbg !14774
  br label %return, !dbg !14774

if.end80:                                         ; preds = %lor.lhs.false74
  br label %if.end97, !dbg !14775

if.else81:                                        ; preds = %if.else67
  %st_mode82 = getelementptr inbounds %struct.stat, %struct.stat* %dst_st, i32 0, i32 3, !dbg !14776, !ctir !14596
  %47 = load i32, i32* %st_mode82, align 8, !dbg !14776, !ctir !165
  %and83 = and i32 %47, 61440, !dbg !14776
  %cmp84 = icmp eq i32 %and83, 16384, !dbg !14776
  br i1 %cmp84, label %if.else88, label %if.then86, !dbg !14778

if.then86:                                        ; preds = %if.else81
  %call87 = call i32 @errno_fail(i32 20), !dbg !14779
  store i32 %call87, i32* %retval, align 4, !dbg !14780
  br label %return, !dbg !14780

if.else88:                                        ; preds = %if.else81
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !14781, !ctir !14596
  %48 = load i32, i32* %st_mode89, align 8, !dbg !14781, !ctir !165
  %and90 = and i32 %48, 61440, !dbg !14781
  %cmp91 = icmp eq i32 %and90, 16384, !dbg !14781
  br i1 %cmp91, label %if.end95, label %if.then93, !dbg !14783

if.then93:                                        ; preds = %if.else88
  %call94 = call i32 @errno_fail(i32 21), !dbg !14784
  store i32 %call94, i32* %retval, align 4, !dbg !14785
  br label %return, !dbg !14785

if.end95:                                         ; preds = %if.else88
  br label %if.end96

if.end96:                                         ; preds = %if.end95
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end80
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end66
  %49 = load i32, i32* %fd1.addr, align 4, !dbg !14786
  %50 = load i8*, i8** %src_temp, align 8, !dbg !14787
  %51 = load i32, i32* %fd2.addr, align 4, !dbg !14788
  %52 = load i8*, i8** %dst_temp, align 8, !dbg !14789
  %call99 = call i32 @renameat(i32 %49, i8* %50, i32 %51, i8* %52) #12, !dbg !14790
  store i32 %call99, i32* %ret_val, align 4, !dbg !14791
  %call100 = call i32* @__errno_location() #15, !dbg !14792
  %53 = load i32, i32* %call100, align 4, !dbg !14792, !ctir !5
  store i32 %53, i32* %rename_errno, align 4, !dbg !14793
  br label %out, !dbg !14794

out:                                              ; preds = %if.end98
  call void @llvm.dbg.label(metadata !14795), !dbg !14796
  %54 = load i8*, i8** %src_temp, align 8, !dbg !14797
  %55 = load i8*, i8** %src.addr, align 8, !dbg !14799
  %cmp101 = icmp ne i8* %54, %55, !dbg !14800
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !14801

if.then103:                                       ; preds = %out
  %56 = load i8*, i8** %src_temp, align 8, !dbg !14802
  call void @free(i8* %56) #12, !dbg !14803
  br label %if.end104, !dbg !14803

if.end104:                                        ; preds = %if.then103, %out
  %57 = load i8*, i8** %dst_temp, align 8, !dbg !14804
  %58 = load i8*, i8** %dst.addr, align 8, !dbg !14806
  %cmp105 = icmp ne i8* %57, %58, !dbg !14807
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !14808

if.then107:                                       ; preds = %if.end104
  %59 = load i8*, i8** %dst_temp, align 8, !dbg !14809
  call void @free(i8* %59) #12, !dbg !14810
  br label %if.end108, !dbg !14810

if.end108:                                        ; preds = %if.then107, %if.end104
  %60 = load i32, i32* %rename_errno, align 4, !dbg !14811
  %call109 = call i32* @__errno_location() #15, !dbg !14812
  store i32 %60, i32* %call109, align 4, !dbg !14813, !ctir !5
  %61 = load i32, i32* %ret_val, align 4, !dbg !14814
  store i32 %61, i32* %retval, align 4, !dbg !14815
  br label %return, !dbg !14815

return:                                           ; preds = %if.end108, %if.then93, %if.then86, %if.then79, %if.then64, %if.then57, %if.then52, %if.then37, %if.then28, %if.then22, %if.then13, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !14816
  ret i32 %62, !dbg !14816
}

; Function Attrs: nounwind
declare dso_local i64 @syscall(i64, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @errno_fail(i32 %e) #4 !dbg !14817 {
entry:
  %e.addr = alloca i32, align 4
  store i32 %e, i32* %e.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %e.addr, metadata !14820, metadata !DIExpression()), !dbg !14821
  %0 = load i32, i32* %e.addr, align 4, !dbg !14822
  %call = call i32* @__errno_location() #15, !dbg !14823
  store i32 %0, i32* %call, align 4, !dbg !14824, !ctir !5
  ret i32 -1, !dbg !14825
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.timespec* @get_root_dev_ino(%struct.timespec* %root_d_i) #4 !dbg !14826 {
entry:
  %retval = alloca %struct.timespec*, align 8
  %root_d_i.addr = alloca %struct.timespec*, align 8
  %statbuf = alloca %struct.stat, align 8, !ctir !14835
  store %struct.timespec* %root_d_i, %struct.timespec** %root_d_i.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %root_d_i.addr, metadata !14856, metadata !DIExpression()), !dbg !14857
  call void @llvm.dbg.declare(metadata %struct.stat* %statbuf, metadata !14858, metadata !DIExpression()), !dbg !14859
  %call = call i32 @lstat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.335, i64 0, i64 0), %struct.stat* %statbuf) #12, !dbg !14860
  %tobool = icmp ne i32 %call, 0, !dbg !14860
  br i1 %tobool, label %if.then, label %if.end, !dbg !14862

if.then:                                          ; preds = %entry
  store %struct.timespec* null, %struct.timespec** %retval, align 8, !dbg !14863
  br label %return, !dbg !14863

if.end:                                           ; preds = %entry
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 1, !dbg !14864, !ctir !14835
  %0 = load i64, i64* %st_ino, align 8, !dbg !14864, !ctir !257
  %1 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !14865
  %st_ino1 = getelementptr inbounds %struct.timespec, %struct.timespec* %1, i32 0, i32 0, !dbg !14866, !ctir !14831
  store i64 %0, i64* %st_ino1, align 8, !dbg !14867, !ctir !256
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 0, !dbg !14868, !ctir !14835
  %2 = load i64, i64* %st_dev, align 8, !dbg !14868, !ctir !260
  %3 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !14869
  %st_dev2 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i32 0, i32 1, !dbg !14870, !ctir !14831
  store i64 %2, i64* %st_dev2, align 8, !dbg !14871, !ctir !259
  %4 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !14872
  store %struct.timespec* %4, %struct.timespec** %retval, align 8, !dbg !14873
  br label %return, !dbg !14873

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct.timespec*, %struct.timespec** %retval, align 8, !dbg !14874
  ret %struct.timespec* %5, !dbg !14874
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !14875 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i64, align 8, !ctir !529
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !14877, metadata !DIExpression()), !dbg !14878
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14879, metadata !DIExpression()), !dbg !14880
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !14881, metadata !DIExpression()), !dbg !14882
  br label %for.cond, !dbg !14883

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !14884, metadata !DIExpression()), !dbg !14888
  %0 = load i32, i32* %fd.addr, align 4, !dbg !14889
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !14890
  %2 = load i64, i64* %count.addr, align 8, !dbg !14891
  %call = call i64 @write(i32 %0, i8* %1, i64 %2), !dbg !14892
  store i64 %call, i64* %result, align 8, !dbg !14888
  %3 = load i64, i64* %result, align 8, !dbg !14893
  %cmp = icmp sle i64 0, %3, !dbg !14895
  br i1 %cmp, label %if.then, label %if.else, !dbg !14896

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !14897
  store i64 %4, i64* %retval, align 8, !dbg !14898
  br label %return, !dbg !14898

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #15, !dbg !14899
  %5 = load i32, i32* %call1, align 4, !dbg !14899, !ctir !5
  %cmp2 = icmp eq i32 %5, 4, !dbg !14899
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !14901

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !14902, !llvm.loop !14903

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #15, !dbg !14906
  %6 = load i32, i32* %call5, align 4, !dbg !14906, !ctir !5
  %cmp6 = icmp eq i32 %6, 22, !dbg !14908
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !14909

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !14910
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !14911
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !14912

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !14913
  br label %if.end, !dbg !14914

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !14915
  store i64 %8, i64* %retval, align 8, !dbg !14916
  br label %return, !dbg !14916

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !14917, !llvm.loop !14903

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !14918
  ret i64 %9, !dbg !14918
}

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_name(i8* %source, i8* %dest) #4 !dbg !14919 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !14923, metadata !DIExpression()), !dbg !14924
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !14925, metadata !DIExpression()), !dbg !14926
  %0 = load i8*, i8** %source.addr, align 8, !dbg !14927
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !14928
  %call = call zeroext i1 @same_nameat(i32 -100, i8* %0, i32 -100, i8* %1), !dbg !14929
  ret i1 %call, !dbg !14930
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) #4 !dbg !14931 {
entry:
  %source_dfd.addr = alloca i32, align 4
  %source.addr = alloca i8*, align 8
  %dest_dfd.addr = alloca i32, align 4
  %dest.addr = alloca i8*, align 8
  %source_basename = alloca i8*, align 8, !ctir !113
  %dest_basename = alloca i8*, align 8, !ctir !113
  %source_baselen = alloca i64, align 8, !ctir !52
  %dest_baselen = alloca i64, align 8, !ctir !52
  %identical_basenames = alloca i8, align 1, !ctir !139
  %compare_dirs = alloca i8, align 1, !ctir !139
  %same = alloca i8, align 1, !ctir !139
  %source_dir_stats = alloca %struct.stat, align 8, !ctir !14934
  %dest_dir_stats = alloca %struct.stat, align 8, !ctir !14934
  %source_dirname = alloca i8*, align 8, !ctir !7
  %flags = alloca i32, align 4, !ctir !5
  %dest_dirname = alloca i8*, align 8, !ctir !7
  store i32 %source_dfd, i32* %source_dfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_dfd.addr, metadata !14955, metadata !DIExpression()), !dbg !14956
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !14957, metadata !DIExpression()), !dbg !14958
  store i32 %dest_dfd, i32* %dest_dfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_dfd.addr, metadata !14959, metadata !DIExpression()), !dbg !14960
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !14961, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.declare(metadata i8** %source_basename, metadata !14963, metadata !DIExpression()), !dbg !14964
  %0 = load i8*, i8** %source.addr, align 8, !dbg !14965
  %call = call i8* @last_component(i8* %0) #14, !dbg !14966
  store i8* %call, i8** %source_basename, align 8, !dbg !14964
  call void @llvm.dbg.declare(metadata i8** %dest_basename, metadata !14967, metadata !DIExpression()), !dbg !14968
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !14969
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !14970
  store i8* %call1, i8** %dest_basename, align 8, !dbg !14968
  call void @llvm.dbg.declare(metadata i64* %source_baselen, metadata !14971, metadata !DIExpression()), !dbg !14972
  %2 = load i8*, i8** %source_basename, align 8, !dbg !14973
  %call2 = call i64 @base_len(i8* %2) #14, !dbg !14974
  store i64 %call2, i64* %source_baselen, align 8, !dbg !14972
  call void @llvm.dbg.declare(metadata i64* %dest_baselen, metadata !14975, metadata !DIExpression()), !dbg !14976
  %3 = load i8*, i8** %dest_basename, align 8, !dbg !14977
  %call3 = call i64 @base_len(i8* %3) #14, !dbg !14978
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !14976
  call void @llvm.dbg.declare(metadata i8* %identical_basenames, metadata !14979, metadata !DIExpression()), !dbg !14980
  %4 = load i64, i64* %source_baselen, align 8, !dbg !14981
  %5 = load i64, i64* %dest_baselen, align 8, !dbg !14982
  %cmp = icmp eq i64 %4, %5, !dbg !14983
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !14984

land.rhs:                                         ; preds = %entry
  %6 = load i8*, i8** %source_basename, align 8, !dbg !14985
  %7 = load i8*, i8** %dest_basename, align 8, !dbg !14986
  %8 = load i64, i64* %dest_baselen, align 8, !dbg !14987
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #14, !dbg !14988
  %cmp5 = icmp eq i32 %call4, 0, !dbg !14989
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !14990
  %frombool = zext i1 %9 to i8, !dbg !14980
  store i8 %frombool, i8* %identical_basenames, align 1, !dbg !14980
  call void @llvm.dbg.declare(metadata i8* %compare_dirs, metadata !14991, metadata !DIExpression()), !dbg !14992
  %10 = load i8, i8* %identical_basenames, align 1, !dbg !14993
  %tobool = trunc i8 %10 to i1, !dbg !14993
  %frombool6 = zext i1 %tobool to i8, !dbg !14992
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !14992
  call void @llvm.dbg.declare(metadata i8* %same, metadata !14994, metadata !DIExpression()), !dbg !14995
  store i8 0, i8* %same, align 1, !dbg !14995
  %11 = load i8, i8* %compare_dirs, align 1, !dbg !14996
  %tobool7 = trunc i8 %11 to i1, !dbg !14996
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !14998

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.stat* %source_dir_stats, metadata !14999, metadata !DIExpression()), !dbg !15001
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_dir_stats, metadata !15002, metadata !DIExpression()), !dbg !15003
  call void @llvm.dbg.declare(metadata i8** %source_dirname, metadata !15004, metadata !DIExpression()), !dbg !15005
  %12 = load i8*, i8** %source.addr, align 8, !dbg !15006
  %call8 = call i8* @dir_name(i8* %12), !dbg !15007
  store i8* %call8, i8** %source_dirname, align 8, !dbg !15005
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15008, metadata !DIExpression()), !dbg !15009
  store i32 256, i32* %flags, align 4, !dbg !15009
  %13 = load i32, i32* %source_dfd.addr, align 4, !dbg !15010
  %14 = load i8*, i8** %source_dirname, align 8, !dbg !15012
  %15 = load i32, i32* %flags, align 4, !dbg !15013
  %call9 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %source_dir_stats, i32 %15) #12, !dbg !15014
  %cmp10 = icmp ne i32 %call9, 0, !dbg !15015
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !15016

if.then11:                                        ; preds = %if.then
  %call12 = call i32* @__errno_location() #15, !dbg !15017
  %16 = load i32, i32* %call12, align 4, !dbg !15017, !ctir !5
  %17 = load i8*, i8** %source_dirname, align 8, !dbg !15019
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.340, i64 0, i64 0), i8* %17), !dbg !15020
  br label %if.end, !dbg !15021

if.end:                                           ; preds = %if.then11, %if.then
  %18 = load i8*, i8** %source_dirname, align 8, !dbg !15022
  call void @free(i8* %18) #12, !dbg !15023
  call void @llvm.dbg.declare(metadata i8** %dest_dirname, metadata !15024, metadata !DIExpression()), !dbg !15025
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !15026
  %call13 = call i8* @dir_name(i8* %19), !dbg !15027
  store i8* %call13, i8** %dest_dirname, align 8, !dbg !15025
  %20 = load i32, i32* %dest_dfd.addr, align 4, !dbg !15028
  %21 = load i8*, i8** %dest_dirname, align 8, !dbg !15030
  %22 = load i32, i32* %flags, align 4, !dbg !15031
  %call14 = call i32 @fstatat(i32 %20, i8* %21, %struct.stat* %dest_dir_stats, i32 %22) #12, !dbg !15032
  %cmp15 = icmp ne i32 %call14, 0, !dbg !15033
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !15034

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #15, !dbg !15035
  %23 = load i32, i32* %call17, align 4, !dbg !15035, !ctir !5
  %24 = load i8*, i8** %dest_dirname, align 8, !dbg !15037
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.340, i64 0, i64 0), i8* %24), !dbg !15038
  br label %if.end18, !dbg !15039

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !15040, !ctir !14934
  %25 = load i64, i64* %st_ino, align 8, !dbg !15040, !ctir !257
  %st_ino19 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !15040, !ctir !14934
  %26 = load i64, i64* %st_ino19, align 8, !dbg !15040, !ctir !257
  %cmp20 = icmp eq i64 %25, %26, !dbg !15040
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !15040

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !15040, !ctir !14934
  %27 = load i64, i64* %st_dev, align 8, !dbg !15040, !ctir !260
  %st_dev22 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !15040, !ctir !14934
  %28 = load i64, i64* %st_dev22, align 8, !dbg !15040, !ctir !260
  %cmp23 = icmp eq i64 %27, %28, !dbg !15040
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %29 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ], !dbg !15041
  %frombool25 = zext i1 %29 to i8, !dbg !15042
  store i8 %frombool25, i8* %same, align 1, !dbg !15042
  %30 = load i8*, i8** %dest_dirname, align 8, !dbg !15043
  call void @free(i8* %30) #12, !dbg !15044
  br label %if.end26, !dbg !15045

if.end26:                                         ; preds = %land.end24, %land.end
  %31 = load i8, i8* %same, align 1, !dbg !15046
  %tobool27 = trunc i8 %31 to i1, !dbg !15046
  ret i1 %tobool27, !dbg !15047
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @streamsavedir(%struct.__dirstream* %dirp, i32 %option) #4 !dbg !15048 {
entry:
  %retval = alloca i8*, align 8
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %option.addr = alloca i32, align 4
  %name_space = alloca i8*, align 8, !ctir !7
  %allocated = alloca i64, align 8, !ctir !52
  %entries = alloca %struct.direntry_t*, align 8, !ctir !856
  %entries_allocated = alloca i64, align 8, !ctir !52
  %entries_used = alloca i64, align 8, !ctir !52
  %used = alloca i64, align 8, !ctir !52
  %readdir_errno = alloca i32, align 4, !ctir !5
  %cmp = alloca i32 (i8*, i8*)*, align 8, !ctir !864
  %dp = alloca %struct.dirent*, align 8, !ctir !870
  %entry2 = alloca i8*, align 8, !ctir !113
  %entry_size = alloca i64, align 8, !ctir !52
  %n = alloca i64, align 8, !ctir !52
  %n36 = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  %dest = alloca i8*, align 8, !ctir !7
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !15051, metadata !DIExpression()), !dbg !15052
  store i32 %option, i32* %option.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !15053, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !15055, metadata !DIExpression()), !dbg !15056
  store i8* null, i8** %name_space, align 8, !dbg !15056
  call void @llvm.dbg.declare(metadata i64* %allocated, metadata !15057, metadata !DIExpression()), !dbg !15058
  store i64 0, i64* %allocated, align 8, !dbg !15058
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %entries, metadata !15059, metadata !DIExpression()), !dbg !15060
  store %struct.direntry_t* null, %struct.direntry_t** %entries, align 8, !dbg !15060
  call void @llvm.dbg.declare(metadata i64* %entries_allocated, metadata !15061, metadata !DIExpression()), !dbg !15062
  store i64 0, i64* %entries_allocated, align 8, !dbg !15062
  call void @llvm.dbg.declare(metadata i64* %entries_used, metadata !15063, metadata !DIExpression()), !dbg !15064
  store i64 0, i64* %entries_used, align 8, !dbg !15064
  call void @llvm.dbg.declare(metadata i64* %used, metadata !15065, metadata !DIExpression()), !dbg !15066
  store i64 0, i64* %used, align 8, !dbg !15066
  call void @llvm.dbg.declare(metadata i32* %readdir_errno, metadata !15067, metadata !DIExpression()), !dbg !15068
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp, metadata !15069, metadata !DIExpression()), !dbg !15070
  %0 = load i32, i32* %option.addr, align 4, !dbg !15071
  %idxprom = zext i32 %0 to i64, !dbg !15072
  %arrayidx = getelementptr inbounds [3 x i32 (i8*, i8*)*], [3 x i32 (i8*, i8*)*]* @comparison_function_table, i64 0, i64 %idxprom, !dbg !15072, !ctir !868
  %1 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %arrayidx, align 8, !dbg !15072
  store i32 (i8*, i8*)* %1, i32 (i8*, i8*)** %cmp, align 8, !dbg !15070
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !15073
  %cmp1 = icmp eq %struct.__dirstream* %2, null, !dbg !15075
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15076

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15077
  br label %return, !dbg !15077

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !15078

for.cond:                                         ; preds = %if.end46, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !15079, metadata !DIExpression()), !dbg !15083
  call void @llvm.dbg.declare(metadata i8** %entry2, metadata !15084, metadata !DIExpression()), !dbg !15085
  %call = call i32* @__errno_location() #15, !dbg !15086
  store i32 0, i32* %call, align 4, !dbg !15087, !ctir !5
  %3 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !15088
  %call3 = call %struct.dirent* @readdir(%struct.__dirstream* %3), !dbg !15089
  store %struct.dirent* %call3, %struct.dirent** %dp, align 8, !dbg !15090
  %4 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15091
  %tobool = icmp ne %struct.dirent* %4, null, !dbg !15091
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !15093

if.then4:                                         ; preds = %for.cond
  br label %for.end, !dbg !15094

if.end5:                                          ; preds = %for.cond
  %5 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15095
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %5, i32 0, i32 4, !dbg !15096, !ctir !871
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !15095, !ctir !879
  store i8* %arraydecay, i8** %entry2, align 8, !dbg !15097
  %6 = load i8*, i8** %entry2, align 8, !dbg !15098
  %7 = load i8*, i8** %entry2, align 8, !dbg !15100
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !15100, !ctir !113
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !15100
  %conv = sext i8 %8 to i32, !dbg !15100
  %cmp7 = icmp ne i32 %conv, 46, !dbg !15101
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !15100

cond.true:                                        ; preds = %if.end5
  br label %cond.end, !dbg !15100

cond.false:                                       ; preds = %if.end5
  %9 = load i8*, i8** %entry2, align 8, !dbg !15102
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !15102, !ctir !113
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !15102
  %conv10 = sext i8 %10 to i32, !dbg !15102
  %cmp11 = icmp ne i32 %conv10, 46, !dbg !15103
  %11 = zext i1 %cmp11 to i64, !dbg !15102
  %cond = select i1 %cmp11, i32 1, i32 2, !dbg !15102
  br label %cond.end, !dbg !15100

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond13 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !15100
  %idxprom14 = sext i32 %cond13 to i64, !dbg !15098
  %arrayidx15 = getelementptr inbounds i8, i8* %6, i64 %idxprom14, !dbg !15098, !ctir !113
  %12 = load i8, i8* %arrayidx15, align 1, !dbg !15098
  %conv16 = sext i8 %12 to i32, !dbg !15098
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !15104
  br i1 %cmp17, label %if.then19, label %if.end46, !dbg !15105

if.then19:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %entry_size, metadata !15106, metadata !DIExpression()), !dbg !15108
  %13 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15109
  %d_name20 = getelementptr inbounds %struct.dirent, %struct.dirent* %13, i32 0, i32 4, !dbg !15109, !ctir !871
  %arraydecay21 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name20, i64 0, i64 0, !dbg !15109, !ctir !879
  %call22 = call i64 @strlen(i8* %arraydecay21) #14, !dbg !15109
  %add = add i64 %call22, 1, !dbg !15110
  store i64 %add, i64* %entry_size, align 8, !dbg !15108
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15111
  %tobool23 = icmp ne i32 (i8*, i8*)* %14, null, !dbg !15111
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !15113

if.then24:                                        ; preds = %if.then19
  %15 = load i64, i64* %entries_allocated, align 8, !dbg !15114
  %16 = load i64, i64* %entries_used, align 8, !dbg !15117
  %cmp25 = icmp eq i64 %15, %16, !dbg !15118
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !15119

if.then27:                                        ; preds = %if.then24
  call void @llvm.dbg.declare(metadata i64* %n, metadata !15120, metadata !DIExpression()), !dbg !15122
  %17 = load i64, i64* %entries_allocated, align 8, !dbg !15123
  store i64 %17, i64* %n, align 8, !dbg !15122
  %18 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15124
  %19 = bitcast %struct.direntry_t* %18 to i8*, !dbg !15124
  %call28 = call i8* @x2nrealloc(i8* %19, i64* %n, i64 16), !dbg !15125
  %20 = bitcast i8* %call28 to %struct.direntry_t*, !dbg !15125
  store %struct.direntry_t* %20, %struct.direntry_t** %entries, align 8, !dbg !15126
  %21 = load i64, i64* %n, align 8, !dbg !15127
  store i64 %21, i64* %entries_allocated, align 8, !dbg !15128
  br label %if.end29, !dbg !15129

if.end29:                                         ; preds = %if.then27, %if.then24
  %22 = load i8*, i8** %entry2, align 8, !dbg !15130
  %call30 = call noalias i8* @xstrdup(i8* %22), !dbg !15131
  %23 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15132
  %24 = load i64, i64* %entries_used, align 8, !dbg !15133
  %arrayidx31 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %23, i64 %24, !dbg !15132, !ctir !856
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx31, i32 0, i32 0, !dbg !15134, !ctir !857
  store i8* %call30, i8** %name, align 8, !dbg !15135, !ctir !7
  %25 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15136
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %25, i32 0, i32 0, !dbg !15137, !ctir !871
  %26 = load i64, i64* %d_ino, align 8, !dbg !15137, !ctir !257
  %27 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15138
  %28 = load i64, i64* %entries_used, align 8, !dbg !15139
  %arrayidx32 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %27, i64 %28, !dbg !15138, !ctir !856
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx32, i32 0, i32 1, !dbg !15140, !ctir !857
  store i64 %26, i64* %ino, align 8, !dbg !15141, !ctir !863
  %29 = load i64, i64* %entries_used, align 8, !dbg !15142
  %inc = add i64 %29, 1, !dbg !15142
  store i64 %inc, i64* %entries_used, align 8, !dbg !15142
  br label %if.end44, !dbg !15143

if.else:                                          ; preds = %if.then19
  %30 = load i64, i64* %allocated, align 8, !dbg !15144
  %31 = load i64, i64* %used, align 8, !dbg !15147
  %sub = sub i64 %30, %31, !dbg !15148
  %32 = load i64, i64* %entry_size, align 8, !dbg !15149
  %cmp33 = icmp ule i64 %sub, %32, !dbg !15150
  br i1 %cmp33, label %if.then35, label %if.end43, !dbg !15151

if.then35:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %n36, metadata !15152, metadata !DIExpression()), !dbg !15154
  %33 = load i64, i64* %used, align 8, !dbg !15155
  %34 = load i64, i64* %entry_size, align 8, !dbg !15156
  %add37 = add i64 %33, %34, !dbg !15157
  store i64 %add37, i64* %n36, align 8, !dbg !15154
  %35 = load i64, i64* %n36, align 8, !dbg !15158
  %36 = load i64, i64* %used, align 8, !dbg !15160
  %cmp38 = icmp ult i64 %35, %36, !dbg !15161
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !15162

if.then40:                                        ; preds = %if.then35
  call void @xalloc_die() #16, !dbg !15163
  unreachable, !dbg !15163

if.end41:                                         ; preds = %if.then35
  %37 = load i8*, i8** %name_space, align 8, !dbg !15164
  %call42 = call i8* @x2nrealloc(i8* %37, i64* %n36, i64 1), !dbg !15165
  store i8* %call42, i8** %name_space, align 8, !dbg !15166
  %38 = load i64, i64* %n36, align 8, !dbg !15167
  store i64 %38, i64* %allocated, align 8, !dbg !15168
  br label %if.end43, !dbg !15169

if.end43:                                         ; preds = %if.end41, %if.else
  %39 = load i8*, i8** %name_space, align 8, !dbg !15170
  %40 = load i64, i64* %used, align 8, !dbg !15171
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !15172, !ctir !8
  %41 = load i8*, i8** %entry2, align 8, !dbg !15173
  %42 = load i64, i64* %entry_size, align 8, !dbg !15174
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %41, i64 %42, i1 false), !dbg !15175
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end29
  %43 = load i64, i64* %entry_size, align 8, !dbg !15176
  %44 = load i64, i64* %used, align 8, !dbg !15177
  %add45 = add i64 %44, %43, !dbg !15177
  store i64 %add45, i64* %used, align 8, !dbg !15177
  br label %if.end46, !dbg !15178

if.end46:                                         ; preds = %if.end44, %cond.end
  br label %for.cond, !dbg !15179, !llvm.loop !15180

for.end:                                          ; preds = %if.then4
  %call47 = call i32* @__errno_location() #15, !dbg !15183
  %45 = load i32, i32* %call47, align 4, !dbg !15183, !ctir !5
  store i32 %45, i32* %readdir_errno, align 4, !dbg !15184
  %46 = load i32, i32* %readdir_errno, align 4, !dbg !15185
  %cmp48 = icmp ne i32 %46, 0, !dbg !15187
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !15188

if.then50:                                        ; preds = %for.end
  %47 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15189
  %48 = bitcast %struct.direntry_t* %47 to i8*, !dbg !15189
  call void @free(i8* %48) #12, !dbg !15191
  %49 = load i8*, i8** %name_space, align 8, !dbg !15192
  call void @free(i8* %49) #12, !dbg !15193
  %50 = load i32, i32* %readdir_errno, align 4, !dbg !15194
  %call51 = call i32* @__errno_location() #15, !dbg !15195
  store i32 %50, i32* %call51, align 4, !dbg !15196, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !15197
  br label %return, !dbg !15197

if.end52:                                         ; preds = %for.end
  %51 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15198
  %tobool53 = icmp ne i32 (i8*, i8*)* %51, null, !dbg !15198
  br i1 %tobool53, label %if.then54, label %if.else73, !dbg !15200

if.then54:                                        ; preds = %if.end52
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15201, metadata !DIExpression()), !dbg !15203
  %52 = load i64, i64* %entries_used, align 8, !dbg !15204
  %tobool55 = icmp ne i64 %52, 0, !dbg !15204
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !15206

if.then56:                                        ; preds = %if.then54
  %53 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15207
  %54 = bitcast %struct.direntry_t* %53 to i8*, !dbg !15207
  %55 = load i64, i64* %entries_used, align 8, !dbg !15208
  %56 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15209
  call void @qsort(i8* %54, i64 %55, i64 16, i32 (i8*, i8*)* %56), !dbg !15210
  br label %if.end57, !dbg !15210

if.end57:                                         ; preds = %if.then56, %if.then54
  %57 = load i64, i64* %used, align 8, !dbg !15211
  %add58 = add i64 %57, 1, !dbg !15212
  %call59 = call noalias i8* @xmalloc(i64 %add58), !dbg !15213
  store i8* %call59, i8** %name_space, align 8, !dbg !15214
  store i64 0, i64* %used, align 8, !dbg !15215
  store i64 0, i64* %i, align 8, !dbg !15216
  br label %for.cond60, !dbg !15218

for.cond60:                                       ; preds = %for.inc, %if.end57
  %58 = load i64, i64* %i, align 8, !dbg !15219
  %59 = load i64, i64* %entries_used, align 8, !dbg !15221
  %cmp61 = icmp ult i64 %58, %59, !dbg !15222
  br i1 %cmp61, label %for.body, label %for.end72, !dbg !15223

for.body:                                         ; preds = %for.cond60
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !15224, metadata !DIExpression()), !dbg !15226
  %60 = load i8*, i8** %name_space, align 8, !dbg !15227
  %61 = load i64, i64* %used, align 8, !dbg !15228
  %add.ptr63 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !15229, !ctir !8
  store i8* %add.ptr63, i8** %dest, align 8, !dbg !15226
  %62 = load i8*, i8** %dest, align 8, !dbg !15230
  %63 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15231
  %64 = load i64, i64* %i, align 8, !dbg !15232
  %arrayidx64 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %63, i64 %64, !dbg !15231, !ctir !856
  %name65 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx64, i32 0, i32 0, !dbg !15233, !ctir !857
  %65 = load i8*, i8** %name65, align 8, !dbg !15233, !ctir !7
  %call66 = call i8* @stpcpy(i8* %62, i8* %65) #12, !dbg !15234
  %66 = load i8*, i8** %dest, align 8, !dbg !15235
  %sub.ptr.lhs.cast = ptrtoint i8* %call66 to i64, !dbg !15236
  %sub.ptr.rhs.cast = ptrtoint i8* %66 to i64, !dbg !15236
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15236
  %add67 = add nsw i64 %sub.ptr.sub, 1, !dbg !15237
  %67 = load i64, i64* %used, align 8, !dbg !15238
  %add68 = add i64 %67, %add67, !dbg !15238
  store i64 %add68, i64* %used, align 8, !dbg !15238
  %68 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15239
  %69 = load i64, i64* %i, align 8, !dbg !15240
  %arrayidx69 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %68, i64 %69, !dbg !15239, !ctir !856
  %name70 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx69, i32 0, i32 0, !dbg !15241, !ctir !857
  %70 = load i8*, i8** %name70, align 8, !dbg !15241, !ctir !7
  call void @free(i8* %70) #12, !dbg !15242
  br label %for.inc, !dbg !15243

for.inc:                                          ; preds = %for.body
  %71 = load i64, i64* %i, align 8, !dbg !15244
  %inc71 = add i64 %71, 1, !dbg !15244
  store i64 %inc71, i64* %i, align 8, !dbg !15244
  br label %for.cond60, !dbg !15245, !llvm.loop !15246

for.end72:                                        ; preds = %for.cond60
  %72 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15248
  %73 = bitcast %struct.direntry_t* %72 to i8*, !dbg !15248
  call void @free(i8* %73) #12, !dbg !15249
  br label %if.end80, !dbg !15250

if.else73:                                        ; preds = %if.end52
  %74 = load i64, i64* %used, align 8, !dbg !15251
  %75 = load i64, i64* %allocated, align 8, !dbg !15253
  %cmp74 = icmp eq i64 %74, %75, !dbg !15254
  br i1 %cmp74, label %if.then76, label %if.end79, !dbg !15255

if.then76:                                        ; preds = %if.else73
  %76 = load i8*, i8** %name_space, align 8, !dbg !15256
  %77 = load i64, i64* %used, align 8, !dbg !15257
  %add77 = add i64 %77, 1, !dbg !15258
  %call78 = call i8* @xrealloc(i8* %76, i64 %add77), !dbg !15259
  store i8* %call78, i8** %name_space, align 8, !dbg !15260
  br label %if.end79, !dbg !15261

if.end79:                                         ; preds = %if.then76, %if.else73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %for.end72
  %78 = load i8*, i8** %name_space, align 8, !dbg !15262
  %79 = load i64, i64* %used, align 8, !dbg !15263
  %arrayidx81 = getelementptr inbounds i8, i8* %78, i64 %79, !dbg !15262, !ctir !7
  store i8 0, i8* %arrayidx81, align 1, !dbg !15264
  %80 = load i8*, i8** %name_space, align 8, !dbg !15265
  store i8* %80, i8** %retval, align 8, !dbg !15266
  br label %return, !dbg !15266

return:                                           ; preds = %if.end80, %if.then50, %if.then
  %81 = load i8*, i8** %retval, align 8, !dbg !15267
  ret i8* %81, !dbg !15267
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_name(i8* %a, i8* %b) #4 !dbg !15268 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !880
  %deb = alloca %struct.direntry_t*, align 8, !ctir !880
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !15269, metadata !DIExpression()), !dbg !15270
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !15271, metadata !DIExpression()), !dbg !15272
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !15273, metadata !DIExpression()), !dbg !15274
  %0 = load i8*, i8** %a.addr, align 8, !dbg !15275
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !15275
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !15274
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !15276, metadata !DIExpression()), !dbg !15277
  %2 = load i8*, i8** %b.addr, align 8, !dbg !15278
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !15278
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !15277
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15279
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 0, !dbg !15280, !ctir !881
  %5 = load i8*, i8** %name, align 8, !dbg !15280, !ctir !7
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15281
  %name1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 0, !dbg !15282, !ctir !881
  %7 = load i8*, i8** %name1, align 8, !dbg !15282, !ctir !7
  %call = call i32 @strcmp(i8* %5, i8* %7) #14, !dbg !15283
  ret i32 %call, !dbg !15284
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_inode(i8* %a, i8* %b) #4 !dbg !15285 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !880
  %deb = alloca %struct.direntry_t*, align 8, !ctir !880
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !15286, metadata !DIExpression()), !dbg !15287
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !15288, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !15290, metadata !DIExpression()), !dbg !15291
  %0 = load i8*, i8** %a.addr, align 8, !dbg !15292
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !15292
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !15291
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !15293, metadata !DIExpression()), !dbg !15294
  %2 = load i8*, i8** %b.addr, align 8, !dbg !15295
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !15295
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !15294
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15296
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 1, !dbg !15297, !ctir !881
  %5 = load i64, i64* %ino, align 8, !dbg !15297, !ctir !863
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15298
  %ino1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 1, !dbg !15299, !ctir !881
  %7 = load i64, i64* %ino1, align 8, !dbg !15299, !ctir !863
  %cmp = icmp ult i64 %5, %7, !dbg !15300
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15296

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !15296

cond.false:                                       ; preds = %entry
  %8 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15301
  %ino2 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %8, i32 0, i32 1, !dbg !15302, !ctir !881
  %9 = load i64, i64* %ino2, align 8, !dbg !15302, !ctir !863
  %10 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15303
  %ino3 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %10, i32 0, i32 1, !dbg !15304, !ctir !881
  %11 = load i64, i64* %ino3, align 8, !dbg !15304, !ctir !863
  %cmp4 = icmp ugt i64 %9, %11, !dbg !15305
  %conv = zext i1 %cmp4 to i32, !dbg !15305
  br label %cond.end, !dbg !15296

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !15296
  ret i32 %cond, !dbg !15306
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @savedir(i8* %dir, i32 %option) #4 !dbg !15307 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %option.addr = alloca i32, align 4
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !530
  %name_space = alloca i8*, align 8, !ctir !7
  %closedir_errno = alloca i32, align 4, !ctir !5
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !15310, metadata !DIExpression()), !dbg !15311
  store i32 %option, i32* %option.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !15312, metadata !DIExpression()), !dbg !15313
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !15314, metadata !DIExpression()), !dbg !15315
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !15316
  %call = call %struct.__dirstream* @opendir_safer(i8* %0), !dbg !15317
  store %struct.__dirstream* %call, %struct.__dirstream** %dirp, align 8, !dbg !15315
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15318
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !15318
  br i1 %tobool, label %if.else, label %if.then, !dbg !15320

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15321
  br label %return, !dbg !15321

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !15322, metadata !DIExpression()), !dbg !15324
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15325
  %3 = load i32, i32* %option.addr, align 4, !dbg !15326
  %call1 = call i8* @streamsavedir(%struct.__dirstream* %2, i32 %3), !dbg !15327
  store i8* %call1, i8** %name_space, align 8, !dbg !15324
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15328
  %call2 = call i32 @closedir(%struct.__dirstream* %4), !dbg !15330
  %cmp = icmp ne i32 %call2, 0, !dbg !15331
  br i1 %cmp, label %if.then3, label %if.end, !dbg !15332

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %closedir_errno, metadata !15333, metadata !DIExpression()), !dbg !15335
  %call4 = call i32* @__errno_location() #15, !dbg !15336
  %5 = load i32, i32* %call4, align 4, !dbg !15336, !ctir !5
  store i32 %5, i32* %closedir_errno, align 4, !dbg !15335
  %6 = load i8*, i8** %name_space, align 8, !dbg !15337
  call void @free(i8* %6) #12, !dbg !15338
  %7 = load i32, i32* %closedir_errno, align 4, !dbg !15339
  %call5 = call i32* @__errno_location() #15, !dbg !15340
  store i32 %7, i32* %call5, align 4, !dbg !15341, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !15342
  br label %return, !dbg !15342

if.end:                                           ; preds = %if.else
  %8 = load i8*, i8** %name_space, align 8, !dbg !15343
  store i8* %8, i8** %retval, align 8, !dbg !15344
  br label %return, !dbg !15344

return:                                           ; preds = %if.end, %if.then3, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !15345
  ret i8* %9, !dbg !15345
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getcon(i8** %con) #4 !dbg !15346 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15352, metadata !DIExpression()), !dbg !15353
  %call = call i32* @__errno_location() #15, !dbg !15354
  store i32 95, i32* %call, align 4, !dbg !15355, !ctir !5
  ret i32 -1, !dbg !15356
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @freecon(i8* %con) #4 !dbg !15357 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15360, metadata !DIExpression()), !dbg !15361
  ret void, !dbg !15362
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfscreatecon(i8** %con) #4 !dbg !15363 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15364, metadata !DIExpression()), !dbg !15365
  %call = call i32* @__errno_location() #15, !dbg !15366
  store i32 95, i32* %call, align 4, !dbg !15367, !ctir !5
  ret i32 -1, !dbg !15368
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfscreatecon(i8* %con) #4 !dbg !15369 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15372, metadata !DIExpression()), !dbg !15373
  %call = call i32* @__errno_location() #15, !dbg !15374
  store i32 95, i32* %call, align 4, !dbg !15375, !ctir !5
  ret i32 -1, !dbg !15376
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon(i8* %file, i32 %m, i8** %con) #4 !dbg !15377 {
entry:
  %file.addr = alloca i8*, align 8
  %m.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15380, metadata !DIExpression()), !dbg !15381
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !15382, metadata !DIExpression()), !dbg !15383
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15384, metadata !DIExpression()), !dbg !15385
  %call = call i32* @__errno_location() #15, !dbg !15386
  store i32 95, i32* %call, align 4, !dbg !15387, !ctir !5
  ret i32 -1, !dbg !15388
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfilecon(i8* %file, i8** %con) #4 !dbg !15389 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15392, metadata !DIExpression()), !dbg !15393
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15394, metadata !DIExpression()), !dbg !15395
  %call = call i32* @__errno_location() #15, !dbg !15396
  store i32 95, i32* %call, align 4, !dbg !15397, !ctir !5
  ret i32 -1, !dbg !15398
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lgetfilecon(i8* %file, i8** %con) #4 !dbg !15399 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15400, metadata !DIExpression()), !dbg !15401
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15402, metadata !DIExpression()), !dbg !15403
  %call = call i32* @__errno_location() #15, !dbg !15404
  store i32 95, i32* %call, align 4, !dbg !15405, !ctir !5
  ret i32 -1, !dbg !15406
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fgetfilecon(i32 %fd, i8** %con) #4 !dbg !15407 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15410, metadata !DIExpression()), !dbg !15411
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15412, metadata !DIExpression()), !dbg !15413
  %call = call i32* @__errno_location() #15, !dbg !15414
  store i32 95, i32* %call, align 4, !dbg !15415, !ctir !5
  ret i32 -1, !dbg !15416
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfilecon(i8* %file, i8* %con) #4 !dbg !15417 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15420, metadata !DIExpression()), !dbg !15421
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15422, metadata !DIExpression()), !dbg !15423
  %call = call i32* @__errno_location() #15, !dbg !15424
  store i32 95, i32* %call, align 4, !dbg !15425, !ctir !5
  ret i32 -1, !dbg !15426
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsetfilecon(i8* %file, i8* %con) #4 !dbg !15427 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15428, metadata !DIExpression()), !dbg !15429
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15430, metadata !DIExpression()), !dbg !15431
  %call = call i32* @__errno_location() #15, !dbg !15432
  store i32 95, i32* %call, align 4, !dbg !15433, !ctir !5
  ret i32 -1, !dbg !15434
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fsetfilecon(i32 %fd, i8* %con) #4 !dbg !15435 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15438, metadata !DIExpression()), !dbg !15439
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15440, metadata !DIExpression()), !dbg !15441
  %call = call i32* @__errno_location() #15, !dbg !15442
  store i32 95, i32* %call, align 4, !dbg !15443, !ctir !5
  ret i32 -1, !dbg !15444
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context(i8* %con) #4 !dbg !15445 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15446, metadata !DIExpression()), !dbg !15447
  %call = call i32* @__errno_location() #15, !dbg !15448
  store i32 95, i32* %call, align 4, !dbg !15449, !ctir !5
  ret i32 -1, !dbg !15450
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context_raw(i8* %con) #4 !dbg !15451 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15452, metadata !DIExpression()), !dbg !15453
  %call = call i32* @__errno_location() #15, !dbg !15454
  store i32 95, i32* %call, align 4, !dbg !15455, !ctir !5
  ret i32 -1, !dbg !15456
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setexeccon(i8* %con) #4 !dbg !15457 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15458, metadata !DIExpression()), !dbg !15459
  %call = call i32* @__errno_location() #15, !dbg !15460
  store i32 95, i32* %call, align 4, !dbg !15461, !ctir !5
  ret i32 -1, !dbg !15462
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) #4 !dbg !15463 {
entry:
  %scon.addr = alloca i8*, align 8
  %tcon.addr = alloca i8*, align 8
  %tclass.addr = alloca i16, align 2
  %newcon.addr = alloca i8**, align 8
  store i8* %scon, i8** %scon.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %scon.addr, metadata !15467, metadata !DIExpression()), !dbg !15468
  store i8* %tcon, i8** %tcon.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tcon.addr, metadata !15469, metadata !DIExpression()), !dbg !15470
  store i16 %tclass, i16* %tclass.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %tclass.addr, metadata !15471, metadata !DIExpression()), !dbg !15472
  store i8** %newcon, i8*** %newcon.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %newcon.addr, metadata !15473, metadata !DIExpression()), !dbg !15474
  %call = call i32* @__errno_location() #15, !dbg !15475
  store i32 95, i32* %call, align 4, !dbg !15476, !ctir !5
  ret i32 -1, !dbg !15477
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @string_to_security_class(i8* %name) #4 !dbg !15478 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !15481, metadata !DIExpression()), !dbg !15482
  %call = call i32* @__errno_location() #15, !dbg !15483
  store i32 95, i32* %call, align 4, !dbg !15484, !ctir !5
  ret i16 0, !dbg !15485
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) #4 !dbg !15486 {
entry:
  %path.addr = alloca i8*, align 8
  %prefix.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !15489, metadata !DIExpression()), !dbg !15490
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !15491, metadata !DIExpression()), !dbg !15492
  %call = call i32* @__errno_location() #15, !dbg !15493
  store i32 95, i32* %call, align 4, !dbg !15494, !ctir !5
  ret i32 -1, !dbg !15495
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_atime_ns(%struct.stat* %st) #9 !dbg !15496 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15523, metadata !DIExpression()), !dbg !15524
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15525
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !15525, !ctir !15501
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 1, !dbg !15526, !ctir !15516
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !15526, !ctir !360
  ret i64 %1, !dbg !15527
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_ctime_ns(%struct.stat* %st) #9 !dbg !15528 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15529, metadata !DIExpression()), !dbg !15530
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15531
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !15531, !ctir !15501
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 1, !dbg !15532, !ctir !15516
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !15532, !ctir !360
  ret i64 %1, !dbg !15533
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_mtime_ns(%struct.stat* %st) #9 !dbg !15534 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15535, metadata !DIExpression()), !dbg !15536
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15537
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !15537, !ctir !15501
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 1, !dbg !15538, !ctir !15516
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !15538, !ctir !360
  ret i64 %1, !dbg !15539
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_birthtime_ns(%struct.stat* %st) #9 !dbg !15540 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15541, metadata !DIExpression()), !dbg !15542
  ret i64 0, !dbg !15543
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_atime(%struct.stat* %st) #9 !dbg !15544 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15547, metadata !DIExpression()), !dbg !15548
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15549
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !15549, !ctir !15501
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !15549
  %2 = bitcast %struct.timespec* %st_atim to i8*, !dbg !15549
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !15549
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !15550
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !15550
  ret { i64, i64 } %4, !dbg !15550
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_ctime(%struct.stat* %st) #9 !dbg !15551 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15552, metadata !DIExpression()), !dbg !15553
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15554
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !15554, !ctir !15501
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !15554
  %2 = bitcast %struct.timespec* %st_ctim to i8*, !dbg !15554
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !15554
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !15555
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !15555
  ret { i64, i64 } %4, !dbg !15555
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_mtime(%struct.stat* %st) #9 !dbg !15556 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15557, metadata !DIExpression()), !dbg !15558
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15559
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !15559, !ctir !15501
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !15559
  %2 = bitcast %struct.timespec* %st_mtim to i8*, !dbg !15559
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !15559
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !15560
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !15560
  ret { i64, i64 } %4, !dbg !15560
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #9 !dbg !15561 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15562, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !15564, metadata !DIExpression()), !dbg !15565
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 0, !dbg !15566, !ctir !15516
  store i64 -1, i64* %tv_sec, align 8, !dbg !15567, !ctir !358
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 1, !dbg !15568, !ctir !15516
  store i64 -1, i64* %tv_nsec, align 8, !dbg !15569, !ctir !360
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !15570
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !15570
  ret { i64, i64 } %1, !dbg !15570
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stat_time_normalize(i32 %result, %struct.stat* %st) #4 !dbg !15571 {
entry:
  %result.addr = alloca i32, align 4
  %st.addr = alloca %struct.stat*, align 8
  store i32 %result, i32* %result.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !15575, metadata !DIExpression()), !dbg !15576
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15577, metadata !DIExpression()), !dbg !15578
  %0 = load i32, i32* %result.addr, align 4, !dbg !15579
  ret i32 %0, !dbg !15580
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @statat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !15581 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15607, metadata !DIExpression()), !dbg !15608
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !15609, metadata !DIExpression()), !dbg !15610
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15611, metadata !DIExpression()), !dbg !15612
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15613
  %1 = load i8*, i8** %name.addr, align 8, !dbg !15614
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15615
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 0) #12, !dbg !15616
  ret i32 %call, !dbg !15617
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lstatat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !15618 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15619, metadata !DIExpression()), !dbg !15620
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !15621, metadata !DIExpression()), !dbg !15622
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15623, metadata !DIExpression()), !dbg !15624
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15625
  %1 = load i8*, i8** %name.addr, align 8, !dbg !15626
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15627
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256) #12, !dbg !15628
  ret i32 %call, !dbg !15629
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname_len(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc, i64 %x_suffix_len) #4 !dbg !15630 {
entry:
  %retval = alloca i32, align 4
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  %x_suffix_len.addr = alloca i64, align 8
  %len = alloca i64, align 8, !ctir !52
  %XXXXXX = alloca i8*, align 8, !ctir !7
  %count = alloca i32, align 4, !ctir !67
  %fd = alloca i32, align 4, !ctir !5
  %save_errno = alloca i32, align 4, !ctir !5
  %rand_src = alloca %struct.randint_source*, align 8, !ctir !888
  %attempts = alloca i32, align 4, !ctir !67
  %i = alloca i64, align 8, !ctir !52
  %saved_errno = alloca i32, align 4, !ctir !5
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !15633, metadata !DIExpression()), !dbg !15634
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !15635, metadata !DIExpression()), !dbg !15636
  store i8* %args, i8** %args.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !15637, metadata !DIExpression()), !dbg !15638
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !15639, metadata !DIExpression()), !dbg !15640
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !15641, metadata !DIExpression()), !dbg !15642
  call void @llvm.dbg.declare(metadata i64* %len, metadata !15643, metadata !DIExpression()), !dbg !15644
  call void @llvm.dbg.declare(metadata i8** %XXXXXX, metadata !15645, metadata !DIExpression()), !dbg !15646
  call void @llvm.dbg.declare(metadata i32* %count, metadata !15647, metadata !DIExpression()), !dbg !15648
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !15649, metadata !DIExpression()), !dbg !15650
  store i32 -1, i32* %fd, align 4, !dbg !15650
  call void @llvm.dbg.declare(metadata i32* %save_errno, metadata !15651, metadata !DIExpression()), !dbg !15652
  %call = call i32* @__errno_location() #15, !dbg !15653
  %0 = load i32, i32* %call, align 4, !dbg !15653, !ctir !5
  store i32 %0, i32* %save_errno, align 4, !dbg !15652
  call void @llvm.dbg.declare(metadata %struct.randint_source** %rand_src, metadata !15654, metadata !DIExpression()), !dbg !15655
  call void @llvm.dbg.declare(metadata i32* %attempts, metadata !15656, metadata !DIExpression()), !dbg !15657
  store i32 238328, i32* %attempts, align 4, !dbg !15657
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !15658
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !15659
  store i64 %call1, i64* %len, align 8, !dbg !15660
  %2 = load i64, i64* %len, align 8, !dbg !15661
  %3 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !15663
  %4 = load i32, i32* %suffixlen.addr, align 4, !dbg !15664
  %conv = sext i32 %4 to i64, !dbg !15664
  %add = add i64 %3, %conv, !dbg !15665
  %cmp = icmp ult i64 %2, %add, !dbg !15666
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15667

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8*, i8** %tmpl.addr, align 8, !dbg !15668
  %6 = load i64, i64* %len, align 8, !dbg !15669
  %7 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !15670
  %sub = sub i64 %6, %7, !dbg !15671
  %8 = load i32, i32* %suffixlen.addr, align 4, !dbg !15672
  %conv3 = sext i32 %8 to i64, !dbg !15672
  %sub4 = sub i64 %sub, %conv3, !dbg !15673
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !15668, !ctir !7
  %9 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !15674
  %call5 = call zeroext i1 @check_x_suffix(i8* %arrayidx, i64 %9) #14, !dbg !15675
  br i1 %call5, label %if.end, label %if.then, !dbg !15676

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call6 = call i32* @__errno_location() #15, !dbg !15677
  store i32 22, i32* %call6, align 4, !dbg !15677, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !15679
  br label %return, !dbg !15679

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i8*, i8** %tmpl.addr, align 8, !dbg !15680
  %11 = load i64, i64* %len, align 8, !dbg !15681
  %12 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !15682
  %sub7 = sub i64 %11, %12, !dbg !15683
  %13 = load i32, i32* %suffixlen.addr, align 4, !dbg !15684
  %conv8 = sext i32 %13 to i64, !dbg !15684
  %sub9 = sub i64 %sub7, %conv8, !dbg !15685
  %arrayidx10 = getelementptr inbounds i8, i8* %10, i64 %sub9, !dbg !15680, !ctir !7
  store i8* %arrayidx10, i8** %XXXXXX, align 8, !dbg !15686
  %14 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !15687
  %call11 = call %struct.randint_source* @randint_all_new(i8* null, i64 %14), !dbg !15688
  store %struct.randint_source* %call11, %struct.randint_source** %rand_src, align 8, !dbg !15689
  %15 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !15690
  %tobool = icmp ne %struct.randint_source* %15, null, !dbg !15690
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !15692

if.then12:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !15693
  br label %return, !dbg !15693

if.end13:                                         ; preds = %if.end
  store i32 0, i32* %count, align 4, !dbg !15694
  br label %for.cond, !dbg !15696

for.cond:                                         ; preds = %for.inc34, %if.end13
  %16 = load i32, i32* %count, align 4, !dbg !15697
  %17 = load i32, i32* %attempts, align 4, !dbg !15699
  %cmp14 = icmp ult i32 %16, %17, !dbg !15700
  br i1 %cmp14, label %for.body, label %for.end36, !dbg !15701

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15702, metadata !DIExpression()), !dbg !15704
  store i64 0, i64* %i, align 8, !dbg !15705
  br label %for.cond16, !dbg !15707

for.cond16:                                       ; preds = %for.inc, %for.body
  %18 = load i64, i64* %i, align 8, !dbg !15708
  %19 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !15710
  %cmp17 = icmp ult i64 %18, %19, !dbg !15711
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !15712

for.body19:                                       ; preds = %for.cond16
  %20 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !15713
  %call20 = call i64 @randint_genmax(%struct.randint_source* %20, i64 61), !dbg !15714
  %arrayidx21 = getelementptr inbounds [63 x i8], [63 x i8]* @letters, i64 0, i64 %call20, !dbg !15715, !ctir !891
  %21 = load i8, i8* %arrayidx21, align 1, !dbg !15715
  %22 = load i8*, i8** %XXXXXX, align 8, !dbg !15716
  %23 = load i64, i64* %i, align 8, !dbg !15717
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !15716, !ctir !7
  store i8 %21, i8* %arrayidx22, align 1, !dbg !15718
  br label %for.inc, !dbg !15716

for.inc:                                          ; preds = %for.body19
  %24 = load i64, i64* %i, align 8, !dbg !15719
  %inc = add i64 %24, 1, !dbg !15719
  store i64 %inc, i64* %i, align 8, !dbg !15719
  br label %for.cond16, !dbg !15720, !llvm.loop !15721

for.end:                                          ; preds = %for.cond16
  %25 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !15723
  %26 = load i8*, i8** %tmpl.addr, align 8, !dbg !15724
  %27 = load i8*, i8** %args.addr, align 8, !dbg !15725
  %call23 = call i32 %25(i8* %26, i8* %27), !dbg !15723
  store i32 %call23, i32* %fd, align 4, !dbg !15726
  %28 = load i32, i32* %fd, align 4, !dbg !15727
  %cmp24 = icmp sge i32 %28, 0, !dbg !15729
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !15730

if.then26:                                        ; preds = %for.end
  %29 = load i32, i32* %save_errno, align 4, !dbg !15731
  %call27 = call i32* @__errno_location() #15, !dbg !15731
  store i32 %29, i32* %call27, align 4, !dbg !15731, !ctir !5
  br label %done, !dbg !15733

if.else:                                          ; preds = %for.end
  %call28 = call i32* @__errno_location() #15, !dbg !15734
  %30 = load i32, i32* %call28, align 4, !dbg !15734, !ctir !5
  %cmp29 = icmp ne i32 %30, 17, !dbg !15736
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !15737

if.then31:                                        ; preds = %if.else
  store i32 -1, i32* %fd, align 4, !dbg !15738
  br label %done, !dbg !15740

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %for.inc34, !dbg !15741

for.inc34:                                        ; preds = %if.end33
  %31 = load i32, i32* %count, align 4, !dbg !15742
  %inc35 = add i32 %31, 1, !dbg !15742
  store i32 %inc35, i32* %count, align 4, !dbg !15742
  br label %for.cond, !dbg !15743, !llvm.loop !15744

for.end36:                                        ; preds = %for.cond
  %32 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !15746
  %call37 = call i32 @randint_all_free(%struct.randint_source* %32), !dbg !15747
  %call38 = call i32* @__errno_location() #15, !dbg !15748
  store i32 17, i32* %call38, align 4, !dbg !15748, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !15749
  br label %return, !dbg !15749

done:                                             ; preds = %if.then31, %if.then26
  call void @llvm.dbg.label(metadata !15750), !dbg !15751
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !15752, metadata !DIExpression()), !dbg !15754
  %call39 = call i32* @__errno_location() #15, !dbg !15755
  %33 = load i32, i32* %call39, align 4, !dbg !15755, !ctir !5
  store i32 %33, i32* %saved_errno, align 4, !dbg !15754
  %34 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !15756
  %call40 = call i32 @randint_all_free(%struct.randint_source* %34), !dbg !15757
  %35 = load i32, i32* %saved_errno, align 4, !dbg !15758
  %call41 = call i32* @__errno_location() #15, !dbg !15758
  store i32 %35, i32* %call41, align 4, !dbg !15758, !ctir !5
  %36 = load i32, i32* %fd, align 4, !dbg !15759
  store i32 %36, i32* %retval, align 4, !dbg !15760
  br label %return, !dbg !15760

return:                                           ; preds = %done, %for.end36, %if.then12, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !15761
  ret i32 %37, !dbg !15761
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @check_x_suffix(i8* %s, i64 %len) #9 !dbg !15762 {
entry:
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15765, metadata !DIExpression()), !dbg !15766
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !15767, metadata !DIExpression()), !dbg !15768
  %0 = load i64, i64* %len.addr, align 8, !dbg !15769
  %1 = load i8*, i8** %s.addr, align 8, !dbg !15770
  %call = call i64 @strspn(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.357, i64 0, i64 0)) #14, !dbg !15771
  %cmp = icmp ule i64 %0, %call, !dbg !15772
  ret i1 %cmp, !dbg !15773
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname_len(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind, i64 %x_suffix_len) #4 !dbg !15774 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  %x_suffix_len.addr = alloca i64, align 8
  %tryfunc = alloca i32 (i8*, i8*)*, align 8, !ctir !892
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !15777, metadata !DIExpression()), !dbg !15778
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !15779, metadata !DIExpression()), !dbg !15780
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15781, metadata !DIExpression()), !dbg !15782
  store i32 %kind, i32* %kind.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !15783, metadata !DIExpression()), !dbg !15784
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !15785, metadata !DIExpression()), !dbg !15786
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc, metadata !15787, metadata !DIExpression()), !dbg !15788
  %0 = load i32, i32* %kind.addr, align 4, !dbg !15789
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ], !dbg !15790

sw.bb:                                            ; preds = %entry
  store i32 (i8*, i8*)* @try_file, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !15791
  br label %sw.epilog, !dbg !15793

sw.bb1:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_dir, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !15794
  br label %sw.epilog, !dbg !15795

sw.bb2:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_nocreate, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !15796
  br label %sw.epilog, !dbg !15797

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.358, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.359, i64 0, i64 0), i32 327, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.gen_tempname_len, i64 0, i64 0)) #13, !dbg !15798
  unreachable, !dbg !15798

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !15799
  %2 = load i32, i32* %suffixlen.addr, align 4, !dbg !15800
  %3 = bitcast i32* %flags.addr to i8*, !dbg !15801
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !15802
  %5 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !15803
  %call = call i32 @try_tempname_len(i8* %1, i32 %2, i8* %3, i32 (i8*, i8*)* %4, i64 %5), !dbg !15804
  ret i32 %call, !dbg !15805
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_file(i8* %tmpl, i8* %flags) #4 !dbg !15806 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %openflags = alloca i32*, align 8, !ctir !158
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !15807, metadata !DIExpression()), !dbg !15808
  store i8* %flags, i8** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !15809, metadata !DIExpression()), !dbg !15810
  call void @llvm.dbg.declare(metadata i32** %openflags, metadata !15811, metadata !DIExpression()), !dbg !15812
  %0 = load i8*, i8** %flags.addr, align 8, !dbg !15813
  %1 = bitcast i8* %0 to i32*, !dbg !15813
  store i32* %1, i32** %openflags, align 8, !dbg !15812
  %2 = load i8*, i8** %tmpl.addr, align 8, !dbg !15814
  %3 = load i32*, i32** %openflags, align 8, !dbg !15815
  %4 = load i32, i32* %3, align 4, !dbg !15816, !ctir !5
  %and = and i32 %4, -4, !dbg !15817
  %or = or i32 %and, 2, !dbg !15818
  %or1 = or i32 %or, 64, !dbg !15819
  %or2 = or i32 %or1, 128, !dbg !15820
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or2, i32 384), !dbg !15821
  ret i32 %call, !dbg !15822
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_dir(i8* %tmpl, i8* %flags) #4 !dbg !15823 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !15824, metadata !DIExpression()), !dbg !15825
  store i8* %flags, i8** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !15826, metadata !DIExpression()), !dbg !15827
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !15828
  %call = call i32 @mkdir(i8* %0, i32 448) #12, !dbg !15829
  ret i32 %call, !dbg !15830
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_nocreate(i8* %tmpl, i8* %flags) #4 !dbg !15831 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !15832
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !15853, metadata !DIExpression()), !dbg !15854
  store i8* %flags, i8** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !15855, metadata !DIExpression()), !dbg !15856
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !15857, metadata !DIExpression()), !dbg !15858
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !15859
  %call = call i32 @lstat(i8* %0, %struct.stat* %st) #12, !dbg !15859
  %cmp = icmp eq i32 %call, 0, !dbg !15861
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15862

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !15863
  %1 = load i32, i32* %call1, align 4, !dbg !15863, !ctir !5
  %cmp2 = icmp eq i32 %1, 75, !dbg !15864
  br i1 %cmp2, label %if.then, label %if.end, !dbg !15865

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call3 = call i32* @__errno_location() #15, !dbg !15866
  store i32 17, i32* %call3, align 4, !dbg !15866, !ctir !5
  br label %if.end, !dbg !15866

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %call4 = call i32* @__errno_location() #15, !dbg !15867
  %2 = load i32, i32* %call4, align 4, !dbg !15867, !ctir !5
  %cmp5 = icmp eq i32 %2, 2, !dbg !15868
  %3 = zext i1 %cmp5 to i64, !dbg !15867
  %cond = select i1 %cmp5, i32 0, i32 -1, !dbg !15867
  ret i32 %cond, !dbg !15869
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind) #4 !dbg !15870 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !15873, metadata !DIExpression()), !dbg !15874
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !15875, metadata !DIExpression()), !dbg !15876
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15877, metadata !DIExpression()), !dbg !15878
  store i32 %kind, i32* %kind.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !15879, metadata !DIExpression()), !dbg !15880
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !15881
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !15882
  %2 = load i32, i32* %flags.addr, align 4, !dbg !15883
  %3 = load i32, i32* %kind.addr, align 4, !dbg !15884
  %call = call i32 @gen_tempname_len(i8* %0, i32 %1, i32 %2, i32 %3, i64 6), !dbg !15885
  ret i32 %call, !dbg !15886
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc) #4 !dbg !15887 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !15890, metadata !DIExpression()), !dbg !15891
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !15892, metadata !DIExpression()), !dbg !15893
  store i8* %args, i8** %args.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !15894, metadata !DIExpression()), !dbg !15895
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !15896, metadata !DIExpression()), !dbg !15897
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !15898
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !15899
  %2 = load i8*, i8** %args.addr, align 8, !dbg !15900
  %3 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !15901
  %call = call i32 @try_tempname_len(i8* %0, i32 %1, i8* %2, i32 (i8*, i8*)* %3, i64 6), !dbg !15902
  ret i32 %call, !dbg !15903
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fd_safer(i32 %fd) #4 !dbg !15904 {
entry:
  %fd.addr = alloca i32, align 4
  %f = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15906, metadata !DIExpression()), !dbg !15907
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15908
  %cmp = icmp sle i32 0, %0, !dbg !15910
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15911

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !15912
  %cmp1 = icmp sle i32 %1, 2, !dbg !15913
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15914

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !15915, metadata !DIExpression()), !dbg !15917
  %2 = load i32, i32* %fd.addr, align 4, !dbg !15918
  %call = call i32 @dup_safer(i32 %2), !dbg !15919
  store i32 %call, i32* %f, align 4, !dbg !15917
  call void @llvm.dbg.declare(metadata i32* %e, metadata !15920, metadata !DIExpression()), !dbg !15921
  %call2 = call i32* @__errno_location() #15, !dbg !15922
  %3 = load i32, i32* %call2, align 4, !dbg !15922, !ctir !5
  store i32 %3, i32* %e, align 4, !dbg !15921
  %4 = load i32, i32* %fd.addr, align 4, !dbg !15923
  %call3 = call i32 @close(i32 %4), !dbg !15924
  %5 = load i32, i32* %e, align 4, !dbg !15925
  %call4 = call i32* @__errno_location() #15, !dbg !15926
  store i32 %5, i32* %call4, align 4, !dbg !15927, !ctir !5
  %6 = load i32, i32* %f, align 4, !dbg !15928
  store i32 %6, i32* %fd.addr, align 4, !dbg !15929
  br label %if.end, !dbg !15930

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !15931
  ret i32 %7, !dbg !15932
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmp(i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !15933 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !15936, metadata !DIExpression()), !dbg !15937
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !15938, metadata !DIExpression()), !dbg !15939
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !15940, metadata !DIExpression()), !dbg !15941
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !15942, metadata !DIExpression()), !dbg !15943
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !15944
  %1 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !15945
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !15946
  %3 = load i32, i32* %options.addr, align 4, !dbg !15947
  %call = call i32 @utimecmpat(i32 -100, i8* %0, %struct.stat* %1, %struct.stat* %2, i32 %3), !dbg !15948
  ret i32 %call, !dbg !15949
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmpat(i32 %dfd, i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !903 {
entry:
  %retval = alloca i32, align 4
  %dfd.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  %dst_s = alloca i64, align 8, !ctir !933
  %src_s = alloca i64, align 8, !ctir !933
  %dst_ns = alloca i32, align 4, !ctir !5
  %src_ns = alloca i32, align 4, !ctir !5
  %dst_res = alloca %struct.fs_res*, align 8, !ctir !934
  %tmp_dst_res = alloca %struct.fs_res, align 8, !ctir !935
  %res = alloca i32, align 4, !ctir !5
  %dst_a_s = alloca i64, align 8, !ctir !933
  %dst_c_s = alloca i64, align 8, !ctir !933
  %dst_m_s = alloca i64, align 8, !ctir !933
  %dst_a_ns = alloca i32, align 4, !ctir !5
  %dst_c_ns = alloca i32, align 4, !ctir !5
  %dst_m_ns = alloca i32, align 4, !ctir !5
  %odd_second = alloca i8, align 1, !ctir !139
  %a = alloca i32, align 4, !ctir !5
  %c = alloca i32, align 4, !ctir !5
  %m = alloca i32, align 4, !ctir !5
  %SR10 = alloca i32, align 4, !ctir !5
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !940
  %dst_status = alloca %struct.stat, align 8, !ctir !909
  %s = alloca i64, align 8, !ctir !933
  %stat_result = alloca i32, align 4, !ctir !5
  %old_res = alloca i32, align 4, !ctir !5
  %a168 = alloca i32, align 4, !ctir !5
  store i32 %dfd, i32* %dfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dfd.addr, metadata !15950, metadata !DIExpression()), !dbg !15951
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !15952, metadata !DIExpression()), !dbg !15953
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !15954, metadata !DIExpression()), !dbg !15955
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !15956, metadata !DIExpression()), !dbg !15957
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !15958, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.declare(metadata i64* %dst_s, metadata !15960, metadata !DIExpression()), !dbg !15961
  %0 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !15962
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !15963, !ctir !908
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !15963, !ctir !923
  %1 = load i64, i64* %tv_sec, align 8, !dbg !15963, !ctir !358
  store i64 %1, i64* %dst_s, align 8, !dbg !15961
  call void @llvm.dbg.declare(metadata i64* %src_s, metadata !15964, metadata !DIExpression()), !dbg !15965
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !15966
  %st_mtim1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 12, !dbg !15967, !ctir !908
  %tv_sec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim1, i32 0, i32 0, !dbg !15967, !ctir !923
  %3 = load i64, i64* %tv_sec2, align 8, !dbg !15967, !ctir !358
  store i64 %3, i64* %src_s, align 8, !dbg !15965
  call void @llvm.dbg.declare(metadata i32* %dst_ns, metadata !15968, metadata !DIExpression()), !dbg !15969
  %4 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !15970
  %call = call i64 @get_stat_mtime_ns(%struct.stat* %4) #14, !dbg !15971
  %conv = trunc i64 %call to i32, !dbg !15971
  store i32 %conv, i32* %dst_ns, align 4, !dbg !15969
  call void @llvm.dbg.declare(metadata i32* %src_ns, metadata !15972, metadata !DIExpression()), !dbg !15973
  %5 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !15974
  %call3 = call i64 @get_stat_mtime_ns(%struct.stat* %5) #14, !dbg !15975
  %conv4 = trunc i64 %call3 to i32, !dbg !15975
  store i32 %conv4, i32* %src_ns, align 4, !dbg !15973
  %6 = load i32, i32* %options.addr, align 4, !dbg !15976
  %and = and i32 %6, 1, !dbg !15978
  %tobool = icmp ne i32 %and, 0, !dbg !15978
  br i1 %tobool, label %if.then, label %if.end207, !dbg !15979

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.fs_res** %dst_res, metadata !15980, metadata !DIExpression()), !dbg !15982
  store %struct.fs_res* null, %struct.fs_res** %dst_res, align 8, !dbg !15982
  call void @llvm.dbg.declare(metadata %struct.fs_res* %tmp_dst_res, metadata !15983, metadata !DIExpression()), !dbg !15984
  call void @llvm.dbg.declare(metadata i32* %res, metadata !15985, metadata !DIExpression()), !dbg !15986
  %7 = load i64, i64* %dst_s, align 8, !dbg !15987
  %8 = load i64, i64* %src_s, align 8, !dbg !15989
  %cmp = icmp eq i64 %7, %8, !dbg !15990
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15991

land.lhs.true:                                    ; preds = %if.then
  %9 = load i32, i32* %dst_ns, align 4, !dbg !15992
  %10 = load i32, i32* %src_ns, align 4, !dbg !15993
  %cmp6 = icmp eq i32 %9, %10, !dbg !15994
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !15995

if.then8:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !15996
  br label %return, !dbg !15996

if.end:                                           ; preds = %land.lhs.true, %if.then
  %11 = load i64, i64* %dst_s, align 8, !dbg !15997
  %12 = load i64, i64* %src_s, align 8, !dbg !15999
  %sub = sub nsw i64 %12, 2, !dbg !16000
  %cmp9 = icmp sle i64 %11, %sub, !dbg !16001
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !16002

if.then11:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16003
  br label %return, !dbg !16003

if.end12:                                         ; preds = %if.end
  %13 = load i64, i64* %src_s, align 8, !dbg !16004
  %14 = load i64, i64* %dst_s, align 8, !dbg !16006
  %sub13 = sub nsw i64 %14, 2, !dbg !16007
  %cmp14 = icmp sle i64 %13, %sub13, !dbg !16008
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !16009

if.then16:                                        ; preds = %if.end12
  store i32 1, i32* %retval, align 4, !dbg !16010
  br label %return, !dbg !16010

if.end17:                                         ; preds = %if.end12
  %15 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16011
  %tobool18 = icmp ne %struct.hash_table* %15, null, !dbg !16011
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !16013

if.then19:                                        ; preds = %if.end17
  %call20 = call %struct.hash_table* @hash_initialize(i64 16, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_info_hash, i1 (i8*, i8*)* @dev_info_compare, void (i8*)* @free), !dbg !16014
  store %struct.hash_table* %call20, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16015
  br label %if.end21, !dbg !16016

if.end21:                                         ; preds = %if.then19, %if.end17
  %16 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16017
  %tobool22 = icmp ne %struct.hash_table* %16, null, !dbg !16017
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !16019

if.then23:                                        ; preds = %if.end21
  %17 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16020
  %tobool24 = icmp ne %struct.fs_res* %17, null, !dbg !16020
  br i1 %tobool24, label %if.end30, label %if.then25, !dbg !16023

if.then25:                                        ; preds = %if.then23
  %call26 = call noalias i8* @malloc(i64 16) #12, !dbg !16024
  %18 = bitcast i8* %call26 to %struct.fs_res*, !dbg !16024
  store %struct.fs_res* %18, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16026
  %19 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16027
  %tobool27 = icmp ne %struct.fs_res* %19, null, !dbg !16027
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !16029

if.then28:                                        ; preds = %if.then25
  br label %low_memory, !dbg !16030

if.end29:                                         ; preds = %if.then25
  %20 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16031
  %resolution = getelementptr inbounds %struct.fs_res, %struct.fs_res* %20, i32 0, i32 1, !dbg !16032, !ctir !935
  store i32 2000000000, i32* %resolution, align 8, !dbg !16033, !ctir !5
  %21 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16034
  %exact = getelementptr inbounds %struct.fs_res, %struct.fs_res* %21, i32 0, i32 2, !dbg !16035, !ctir !935
  store i8 0, i8* %exact, align 4, !dbg !16036, !ctir !139
  br label %if.end30, !dbg !16037

if.end30:                                         ; preds = %if.end29, %if.then23
  %22 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16038
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0, !dbg !16039, !ctir !908
  %23 = load i64, i64* %st_dev, align 8, !dbg !16039, !ctir !260
  %24 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16040
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %24, i32 0, i32 0, !dbg !16041, !ctir !935
  store i64 %23, i64* %dev, align 8, !dbg !16042, !ctir !259
  %25 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16043
  %26 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16044
  %27 = bitcast %struct.fs_res* %26 to i8*, !dbg !16044
  %call31 = call i8* @hash_insert(%struct.hash_table* %25, i8* %27), !dbg !16045
  %28 = bitcast i8* %call31 to %struct.fs_res*, !dbg !16045
  store %struct.fs_res* %28, %struct.fs_res** %dst_res, align 8, !dbg !16046
  %29 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16047
  %tobool32 = icmp ne %struct.fs_res* %29, null, !dbg !16047
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !16049

if.then33:                                        ; preds = %if.end30
  br label %low_memory, !dbg !16050

if.end34:                                         ; preds = %if.end30
  %30 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16051
  %31 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16053
  %cmp35 = icmp eq %struct.fs_res* %30, %31, !dbg !16054
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !16055

if.then37:                                        ; preds = %if.end34
  store %struct.fs_res* null, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16056
  br label %if.end38, !dbg !16058

if.end38:                                         ; preds = %if.then37, %if.end34
  br label %if.end50, !dbg !16059

if.else:                                          ; preds = %if.end21
  br label %low_memory, !dbg !16060

low_memory:                                       ; preds = %if.else, %if.then33, %if.then28
  call void @llvm.dbg.label(metadata !16061), !dbg !16063
  %32 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16064
  %tobool39 = icmp ne %struct.hash_table* %32, null, !dbg !16064
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !16066

if.then40:                                        ; preds = %low_memory
  %33 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16067
  %st_dev41 = getelementptr inbounds %struct.stat, %struct.stat* %33, i32 0, i32 0, !dbg !16069, !ctir !908
  %34 = load i64, i64* %st_dev41, align 8, !dbg !16069, !ctir !260
  %dev42 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %tmp_dst_res, i32 0, i32 0, !dbg !16070, !ctir !935
  store i64 %34, i64* %dev42, align 8, !dbg !16071, !ctir !259
  %35 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16072
  %36 = bitcast %struct.fs_res* %tmp_dst_res to i8*, !dbg !16073
  %call43 = call i8* @hash_lookup(%struct.hash_table* %35, i8* %36), !dbg !16074
  %37 = bitcast i8* %call43 to %struct.fs_res*, !dbg !16074
  store %struct.fs_res* %37, %struct.fs_res** %dst_res, align 8, !dbg !16075
  br label %if.end44, !dbg !16076

if.end44:                                         ; preds = %if.then40, %low_memory
  %38 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16077
  %tobool45 = icmp ne %struct.fs_res* %38, null, !dbg !16077
  br i1 %tobool45, label %if.end49, label %if.then46, !dbg !16079

if.then46:                                        ; preds = %if.end44
  store %struct.fs_res* %tmp_dst_res, %struct.fs_res** %dst_res, align 8, !dbg !16080
  %39 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16082
  %resolution47 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %39, i32 0, i32 1, !dbg !16083, !ctir !935
  store i32 2000000000, i32* %resolution47, align 8, !dbg !16084, !ctir !5
  %40 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16085
  %exact48 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %40, i32 0, i32 2, !dbg !16086, !ctir !935
  store i8 0, i8* %exact48, align 4, !dbg !16087, !ctir !139
  br label %if.end49, !dbg !16088

if.end49:                                         ; preds = %if.then46, %if.end44
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end38
  %41 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16089
  %resolution51 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %41, i32 0, i32 1, !dbg !16090, !ctir !935
  %42 = load i32, i32* %resolution51, align 8, !dbg !16090, !ctir !5
  store i32 %42, i32* %res, align 4, !dbg !16091
  %43 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16092
  %exact52 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %43, i32 0, i32 2, !dbg !16094, !ctir !935
  %44 = load i8, i8* %exact52, align 4, !dbg !16094
  %tobool53 = trunc i8 %44 to i1, !dbg !16094, !ctir !139
  br i1 %tobool53, label %if.end198, label %if.then54, !dbg !16095

if.then54:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i64* %dst_a_s, metadata !16096, metadata !DIExpression()), !dbg !16098
  %45 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16099
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 11, !dbg !16100, !ctir !908
  %tv_sec55 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !16100, !ctir !923
  %46 = load i64, i64* %tv_sec55, align 8, !dbg !16100, !ctir !358
  store i64 %46, i64* %dst_a_s, align 8, !dbg !16098
  call void @llvm.dbg.declare(metadata i64* %dst_c_s, metadata !16101, metadata !DIExpression()), !dbg !16102
  %47 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16103
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 13, !dbg !16104, !ctir !908
  %tv_sec56 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 0, !dbg !16104, !ctir !923
  %48 = load i64, i64* %tv_sec56, align 8, !dbg !16104, !ctir !358
  store i64 %48, i64* %dst_c_s, align 8, !dbg !16102
  call void @llvm.dbg.declare(metadata i64* %dst_m_s, metadata !16105, metadata !DIExpression()), !dbg !16106
  %49 = load i64, i64* %dst_s, align 8, !dbg !16107
  store i64 %49, i64* %dst_m_s, align 8, !dbg !16106
  call void @llvm.dbg.declare(metadata i32* %dst_a_ns, metadata !16108, metadata !DIExpression()), !dbg !16109
  %50 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16110
  %call57 = call i64 @get_stat_atime_ns(%struct.stat* %50) #14, !dbg !16111
  %conv58 = trunc i64 %call57 to i32, !dbg !16111
  store i32 %conv58, i32* %dst_a_ns, align 4, !dbg !16109
  call void @llvm.dbg.declare(metadata i32* %dst_c_ns, metadata !16112, metadata !DIExpression()), !dbg !16113
  %51 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16114
  %call59 = call i64 @get_stat_ctime_ns(%struct.stat* %51) #14, !dbg !16115
  %conv60 = trunc i64 %call59 to i32, !dbg !16115
  store i32 %conv60, i32* %dst_c_ns, align 4, !dbg !16113
  call void @llvm.dbg.declare(metadata i32* %dst_m_ns, metadata !16116, metadata !DIExpression()), !dbg !16117
  %52 = load i32, i32* %dst_ns, align 4, !dbg !16118
  store i32 %52, i32* %dst_m_ns, align 4, !dbg !16117
  call void @llvm.dbg.declare(metadata i8* %odd_second, metadata !16119, metadata !DIExpression()), !dbg !16121
  %53 = load i64, i64* %dst_a_s, align 8, !dbg !16122
  %54 = load i64, i64* %dst_c_s, align 8, !dbg !16123
  %or = or i64 %53, %54, !dbg !16124
  %55 = load i64, i64* %dst_m_s, align 8, !dbg !16125
  %or61 = or i64 %or, %55, !dbg !16126
  %and62 = and i64 %or61, 1, !dbg !16127
  %tobool63 = icmp ne i64 %and62, 0, !dbg !16128
  %frombool = zext i1 %tobool63 to i8, !dbg !16121
  store i8 %frombool, i8* %odd_second, align 1, !dbg !16121
  call void @llvm.dbg.declare(metadata i32* %a, metadata !16129, metadata !DIExpression()), !dbg !16132
  %56 = load i32, i32* %dst_a_ns, align 4, !dbg !16133
  store i32 %56, i32* %a, align 4, !dbg !16132
  call void @llvm.dbg.declare(metadata i32* %c, metadata !16134, metadata !DIExpression()), !dbg !16135
  %57 = load i32, i32* %dst_c_ns, align 4, !dbg !16136
  store i32 %57, i32* %c, align 4, !dbg !16135
  call void @llvm.dbg.declare(metadata i32* %m, metadata !16137, metadata !DIExpression()), !dbg !16138
  %58 = load i32, i32* %dst_m_ns, align 4, !dbg !16139
  store i32 %58, i32* %m, align 4, !dbg !16138
  call void @llvm.dbg.declare(metadata i32* %SR10, metadata !16140, metadata !DIExpression()), !dbg !16141
  store i32 1, i32* %SR10, align 4, !dbg !16141
  %59 = load i32, i32* %SR10, align 4, !dbg !16142
  %mul = mul nsw i32 %59, 10, !dbg !16142
  store i32 %mul, i32* %SR10, align 4, !dbg !16142
  %60 = load i32, i32* %a, align 4, !dbg !16143
  %61 = load i32, i32* %SR10, align 4, !dbg !16145
  %rem = srem i32 %60, %61, !dbg !16146
  %62 = load i32, i32* %c, align 4, !dbg !16147
  %63 = load i32, i32* %SR10, align 4, !dbg !16148
  %rem64 = srem i32 %62, %63, !dbg !16149
  %or65 = or i32 %rem, %rem64, !dbg !16150
  %64 = load i32, i32* %m, align 4, !dbg !16151
  %65 = load i32, i32* %SR10, align 4, !dbg !16152
  %rem66 = srem i32 %64, %65, !dbg !16153
  %or67 = or i32 %or65, %rem66, !dbg !16154
  %cmp68 = icmp ne i32 %or67, 0, !dbg !16155
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !16156

if.then70:                                        ; preds = %if.then54
  store i32 1, i32* %res, align 4, !dbg !16157
  br label %if.end96, !dbg !16158

if.else71:                                        ; preds = %if.then54
  %66 = load i32, i32* %SR10, align 4, !dbg !16159
  store i32 %66, i32* %res, align 4, !dbg !16161
  %67 = load i32, i32* %SR10, align 4, !dbg !16162
  %68 = load i32, i32* %a, align 4, !dbg !16163
  %div = sdiv i32 %68, %67, !dbg !16163
  store i32 %div, i32* %a, align 4, !dbg !16163
  %69 = load i32, i32* %SR10, align 4, !dbg !16164
  %70 = load i32, i32* %c, align 4, !dbg !16165
  %div72 = sdiv i32 %70, %69, !dbg !16165
  store i32 %div72, i32* %c, align 4, !dbg !16165
  %71 = load i32, i32* %SR10, align 4, !dbg !16166
  %72 = load i32, i32* %m, align 4, !dbg !16167
  %div73 = sdiv i32 %72, %71, !dbg !16167
  store i32 %div73, i32* %m, align 4, !dbg !16167
  br label %for.cond, !dbg !16168

for.cond:                                         ; preds = %for.inc, %if.else71
  %73 = load i32, i32* %res, align 4, !dbg !16169
  %74 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16171
  %resolution74 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %74, i32 0, i32 1, !dbg !16172, !ctir !935
  %75 = load i32, i32* %resolution74, align 8, !dbg !16172, !ctir !5
  %cmp75 = icmp slt i32 %73, %75, !dbg !16173
  br i1 %cmp75, label %land.rhs, label %land.end, !dbg !16174

land.rhs:                                         ; preds = %for.cond
  %76 = load i32, i32* %a, align 4, !dbg !16175
  %rem77 = srem i32 %76, 10, !dbg !16176
  %77 = load i32, i32* %c, align 4, !dbg !16177
  %rem78 = srem i32 %77, 10, !dbg !16178
  %or79 = or i32 %rem77, %rem78, !dbg !16179
  %78 = load i32, i32* %m, align 4, !dbg !16180
  %rem80 = srem i32 %78, 10, !dbg !16181
  %or81 = or i32 %or79, %rem80, !dbg !16182
  %cmp82 = icmp eq i32 %or81, 0, !dbg !16183
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %79 = phi i1 [ false, %for.cond ], [ %cmp82, %land.rhs ], !dbg !16184
  br i1 %79, label %for.body, label %for.end, !dbg !16185

for.body:                                         ; preds = %land.end
  %80 = load i32, i32* %res, align 4, !dbg !16186
  %cmp84 = icmp eq i32 %80, 1000000000, !dbg !16188
  br i1 %cmp84, label %if.then86, label %if.end91, !dbg !16189

if.then86:                                        ; preds = %for.body
  %81 = load i8, i8* %odd_second, align 1, !dbg !16190
  %tobool87 = trunc i8 %81 to i1, !dbg !16190
  br i1 %tobool87, label %if.end90, label %if.then88, !dbg !16193

if.then88:                                        ; preds = %if.then86
  %82 = load i32, i32* %res, align 4, !dbg !16194
  %mul89 = mul nsw i32 %82, 2, !dbg !16194
  store i32 %mul89, i32* %res, align 4, !dbg !16194
  br label %if.end90, !dbg !16195

if.end90:                                         ; preds = %if.then88, %if.then86
  br label %for.end, !dbg !16196

if.end91:                                         ; preds = %for.body
  br label %for.inc, !dbg !16197

for.inc:                                          ; preds = %if.end91
  %83 = load i32, i32* %res, align 4, !dbg !16198
  %mul92 = mul nsw i32 %83, 10, !dbg !16198
  store i32 %mul92, i32* %res, align 4, !dbg !16198
  %84 = load i32, i32* %a, align 4, !dbg !16199
  %div93 = sdiv i32 %84, 10, !dbg !16199
  store i32 %div93, i32* %a, align 4, !dbg !16199
  %85 = load i32, i32* %c, align 4, !dbg !16200
  %div94 = sdiv i32 %85, 10, !dbg !16200
  store i32 %div94, i32* %c, align 4, !dbg !16200
  %86 = load i32, i32* %m, align 4, !dbg !16201
  %div95 = sdiv i32 %86, 10, !dbg !16201
  store i32 %div95, i32* %m, align 4, !dbg !16201
  br label %for.cond, !dbg !16202, !llvm.loop !16203

for.end:                                          ; preds = %if.end90, %land.end
  br label %if.end96

if.end96:                                         ; preds = %for.end, %if.then70
  %87 = load i32, i32* %res, align 4, !dbg !16205
  %88 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16206
  %resolution97 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %88, i32 0, i32 1, !dbg !16207, !ctir !935
  store i32 %87, i32* %resolution97, align 8, !dbg !16208, !ctir !5
  %89 = load i32, i32* %res, align 4, !dbg !16209
  %cmp98 = icmp slt i32 1, %89, !dbg !16211
  br i1 %cmp98, label %if.then100, label %if.end195, !dbg !16212

if.then100:                                       ; preds = %if.end96
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !16213, metadata !DIExpression()), !dbg !16215
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_status, metadata !16216, metadata !DIExpression()), !dbg !16217
  %90 = load i32, i32* %src_ns, align 4, !dbg !16218
  %rem101 = srem i32 %90, 1, !dbg !16219
  %91 = load i32, i32* %src_ns, align 4, !dbg !16220
  %sub102 = sub nsw i32 %91, %rem101, !dbg !16220
  store i32 %sub102, i32* %src_ns, align 4, !dbg !16220
  call void @llvm.dbg.declare(metadata i64* %s, metadata !16221, metadata !DIExpression()), !dbg !16223
  %92 = load i64, i64* %src_s, align 8, !dbg !16224
  %93 = load i32, i32* %res, align 4, !dbg !16225
  %cmp103 = icmp eq i32 %93, 2000000000, !dbg !16226
  %94 = zext i1 %cmp103 to i64, !dbg !16225
  %cond = select i1 %cmp103, i32 1, i32 0, !dbg !16225
  %neg = xor i32 %cond, -1, !dbg !16227
  %conv105 = sext i32 %neg to i64, !dbg !16227
  %and106 = and i64 %92, %conv105, !dbg !16228
  store i64 %and106, i64* %s, align 8, !dbg !16223
  %95 = load i64, i64* %src_s, align 8, !dbg !16229
  %96 = load i64, i64* %dst_s, align 8, !dbg !16231
  %cmp107 = icmp slt i64 %95, %96, !dbg !16232
  br i1 %cmp107, label %if.then114, label %lor.lhs.false, !dbg !16233

lor.lhs.false:                                    ; preds = %if.then100
  %97 = load i64, i64* %src_s, align 8, !dbg !16234
  %98 = load i64, i64* %dst_s, align 8, !dbg !16235
  %cmp109 = icmp eq i64 %97, %98, !dbg !16236
  br i1 %cmp109, label %land.lhs.true111, label %if.end115, !dbg !16237

land.lhs.true111:                                 ; preds = %lor.lhs.false
  %99 = load i32, i32* %src_ns, align 4, !dbg !16238
  %100 = load i32, i32* %dst_ns, align 4, !dbg !16239
  %cmp112 = icmp sle i32 %99, %100, !dbg !16240
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !16241

if.then114:                                       ; preds = %land.lhs.true111, %if.then100
  store i32 1, i32* %retval, align 4, !dbg !16242
  br label %return, !dbg !16242

if.end115:                                        ; preds = %land.lhs.true111, %lor.lhs.false
  %101 = load i64, i64* %dst_s, align 8, !dbg !16243
  %102 = load i64, i64* %s, align 8, !dbg !16245
  %cmp116 = icmp slt i64 %101, %102, !dbg !16246
  br i1 %cmp116, label %if.then126, label %lor.lhs.false118, !dbg !16247

lor.lhs.false118:                                 ; preds = %if.end115
  %103 = load i64, i64* %dst_s, align 8, !dbg !16248
  %104 = load i64, i64* %s, align 8, !dbg !16249
  %cmp119 = icmp eq i64 %103, %104, !dbg !16250
  br i1 %cmp119, label %land.lhs.true121, label %if.end127, !dbg !16251

land.lhs.true121:                                 ; preds = %lor.lhs.false118
  %105 = load i32, i32* %dst_ns, align 4, !dbg !16252
  %106 = load i32, i32* %src_ns, align 4, !dbg !16253
  %107 = load i32, i32* %src_ns, align 4, !dbg !16254
  %108 = load i32, i32* %res, align 4, !dbg !16255
  %rem122 = srem i32 %107, %108, !dbg !16256
  %sub123 = sub nsw i32 %106, %rem122, !dbg !16257
  %cmp124 = icmp slt i32 %105, %sub123, !dbg !16258
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !16259

if.then126:                                       ; preds = %land.lhs.true121, %if.end115
  store i32 -1, i32* %retval, align 4, !dbg !16260
  br label %return, !dbg !16260

if.end127:                                        ; preds = %land.lhs.true121, %lor.lhs.false118
  %109 = load i64, i64* %dst_a_s, align 8, !dbg !16261
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16262, !ctir !940
  %tv_sec128 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 0, !dbg !16263, !ctir !923
  store i64 %109, i64* %tv_sec128, align 16, !dbg !16264, !ctir !358
  %110 = load i32, i32* %dst_a_ns, align 4, !dbg !16265
  %conv129 = sext i32 %110 to i64, !dbg !16265
  %arrayidx130 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16266, !ctir !940
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx130, i32 0, i32 1, !dbg !16267, !ctir !923
  store i64 %conv129, i64* %tv_nsec, align 8, !dbg !16268, !ctir !360
  %111 = load i64, i64* %dst_m_s, align 8, !dbg !16269
  %112 = load i32, i32* %res, align 4, !dbg !16270
  %cmp131 = icmp eq i32 %112, 2000000000, !dbg !16271
  %conv132 = zext i1 %cmp131 to i32, !dbg !16271
  %conv133 = sext i32 %conv132 to i64, !dbg !16272
  %or134 = or i64 %111, %conv133, !dbg !16273
  %arrayidx135 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16274, !ctir !940
  %tv_sec136 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx135, i32 0, i32 0, !dbg !16275, !ctir !923
  store i64 %or134, i64* %tv_sec136, align 16, !dbg !16276, !ctir !358
  %113 = load i32, i32* %dst_m_ns, align 4, !dbg !16277
  %114 = load i32, i32* %res, align 4, !dbg !16278
  %div137 = sdiv i32 %114, 9, !dbg !16279
  %add = add nsw i32 %113, %div137, !dbg !16280
  %conv138 = sext i32 %add to i64, !dbg !16277
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16281, !ctir !940
  %tv_nsec140 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx139, i32 0, i32 1, !dbg !16282, !ctir !923
  store i64 %conv138, i64* %tv_nsec140, align 8, !dbg !16283, !ctir !360
  %115 = load i32, i32* %dfd.addr, align 4, !dbg !16284
  %116 = load i8*, i8** %dst_name.addr, align 8, !dbg !16286
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16287, !ctir !940
  %call141 = call i32 @utimensat(i32 %115, i8* %116, %struct.timespec* %arraydecay, i32 256) #12, !dbg !16288
  %tobool142 = icmp ne i32 %call141, 0, !dbg !16288
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !16289

if.then143:                                       ; preds = %if.end127
  store i32 -2, i32* %retval, align 4, !dbg !16290
  br label %return, !dbg !16290

if.end144:                                        ; preds = %if.end127
  call void @llvm.dbg.declare(metadata i32* %stat_result, metadata !16291, metadata !DIExpression()), !dbg !16293
  %117 = load i32, i32* %dfd.addr, align 4, !dbg !16294
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !16295
  %call145 = call i32 @fstatat(i32 %117, i8* %118, %struct.stat* %dst_status, i32 256) #12, !dbg !16296
  store i32 %call145, i32* %stat_result, align 4, !dbg !16293
  %119 = load i32, i32* %stat_result, align 4, !dbg !16297
  %conv146 = sext i32 %119 to i64, !dbg !16297
  %st_mtim147 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !16299, !ctir !909
  %tv_sec148 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim147, i32 0, i32 0, !dbg !16299, !ctir !923
  %120 = load i64, i64* %tv_sec148, align 8, !dbg !16299, !ctir !358
  %121 = load i64, i64* %dst_m_s, align 8, !dbg !16300
  %xor = xor i64 %120, %121, !dbg !16301
  %or149 = or i64 %conv146, %xor, !dbg !16302
  %call150 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !16303
  %122 = load i32, i32* %dst_m_ns, align 4, !dbg !16304
  %conv151 = sext i32 %122 to i64, !dbg !16304
  %xor152 = xor i64 %call150, %conv151, !dbg !16305
  %or153 = or i64 %or149, %xor152, !dbg !16306
  %tobool154 = icmp ne i64 %or153, 0, !dbg !16306
  br i1 %tobool154, label %if.then155, label %if.end163, !dbg !16307

if.then155:                                       ; preds = %if.end144
  %123 = load i64, i64* %dst_m_s, align 8, !dbg !16308
  %arrayidx156 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16310, !ctir !940
  %tv_sec157 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx156, i32 0, i32 0, !dbg !16311, !ctir !923
  store i64 %123, i64* %tv_sec157, align 16, !dbg !16312, !ctir !358
  %124 = load i32, i32* %dst_m_ns, align 4, !dbg !16313
  %conv158 = sext i32 %124 to i64, !dbg !16313
  %arrayidx159 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16314, !ctir !940
  %tv_nsec160 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx159, i32 0, i32 1, !dbg !16315, !ctir !923
  store i64 %conv158, i64* %tv_nsec160, align 8, !dbg !16316, !ctir !360
  %125 = load i32, i32* %dfd.addr, align 4, !dbg !16317
  %126 = load i8*, i8** %dst_name.addr, align 8, !dbg !16318
  %arraydecay161 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16319, !ctir !940
  %call162 = call i32 @utimensat(i32 %125, i8* %126, %struct.timespec* %arraydecay161, i32 256) #12, !dbg !16320
  br label %if.end163, !dbg !16321

if.end163:                                        ; preds = %if.then155, %if.end144
  %127 = load i32, i32* %stat_result, align 4, !dbg !16322
  %cmp164 = icmp ne i32 %127, 0, !dbg !16324
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !16325

if.then166:                                       ; preds = %if.end163
  store i32 -2, i32* %retval, align 4, !dbg !16326
  br label %return, !dbg !16326

if.end167:                                        ; preds = %if.end163
  call void @llvm.dbg.declare(metadata i32* %old_res, metadata !16327, metadata !DIExpression()), !dbg !16329
  %128 = load i32, i32* %res, align 4, !dbg !16330
  store i32 %128, i32* %old_res, align 4, !dbg !16329
  call void @llvm.dbg.declare(metadata i32* %a168, metadata !16331, metadata !DIExpression()), !dbg !16332
  %st_mtim169 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !16333, !ctir !909
  %tv_sec170 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim169, i32 0, i32 0, !dbg !16333, !ctir !923
  %129 = load i64, i64* %tv_sec170, align 8, !dbg !16333, !ctir !358
  %and171 = and i64 %129, 1, !dbg !16334
  %mul172 = mul nsw i64 1000000000, %and171, !dbg !16335
  %call173 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !16336
  %add174 = add nsw i64 %mul172, %call173, !dbg !16337
  %conv175 = trunc i64 %add174 to i32, !dbg !16338
  store i32 %conv175, i32* %a168, align 4, !dbg !16332
  store i32 1, i32* %res, align 4, !dbg !16339
  %130 = load i32, i32* %res, align 4, !dbg !16340
  %131 = load i32, i32* %a168, align 4, !dbg !16342
  %div176 = sdiv i32 %131, %130, !dbg !16342
  store i32 %div176, i32* %a168, align 4, !dbg !16342
  br label %for.cond177, !dbg !16343

for.cond177:                                      ; preds = %for.inc192, %if.end167
  %132 = load i32, i32* %a168, align 4, !dbg !16344
  %rem178 = srem i32 %132, 10, !dbg !16346
  %cmp179 = icmp eq i32 %rem178, 0, !dbg !16347
  br i1 %cmp179, label %for.body181, label %for.end194, !dbg !16348

for.body181:                                      ; preds = %for.cond177
  %133 = load i32, i32* %res, align 4, !dbg !16349
  %cmp182 = icmp eq i32 %133, 1000000000, !dbg !16352
  br i1 %cmp182, label %if.then184, label %if.end186, !dbg !16353

if.then184:                                       ; preds = %for.body181
  %134 = load i32, i32* %res, align 4, !dbg !16354
  %mul185 = mul nsw i32 %134, 2, !dbg !16354
  store i32 %mul185, i32* %res, align 4, !dbg !16354
  br label %for.end194, !dbg !16356

if.end186:                                        ; preds = %for.body181
  %135 = load i32, i32* %res, align 4, !dbg !16357
  %mul187 = mul nsw i32 %135, 10, !dbg !16357
  store i32 %mul187, i32* %res, align 4, !dbg !16357
  %136 = load i32, i32* %res, align 4, !dbg !16358
  %137 = load i32, i32* %old_res, align 4, !dbg !16360
  %cmp188 = icmp eq i32 %136, %137, !dbg !16361
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !16362

if.then190:                                       ; preds = %if.end186
  br label %for.end194, !dbg !16363

if.end191:                                        ; preds = %if.end186
  br label %for.inc192, !dbg !16364

for.inc192:                                       ; preds = %if.end191
  %138 = load i32, i32* %a168, align 4, !dbg !16365
  %div193 = sdiv i32 %138, 10, !dbg !16365
  store i32 %div193, i32* %a168, align 4, !dbg !16365
  br label %for.cond177, !dbg !16366, !llvm.loop !16367

for.end194:                                       ; preds = %if.then190, %if.then184, %for.cond177
  br label %if.end195, !dbg !16369

if.end195:                                        ; preds = %for.end194, %if.end96
  %139 = load i32, i32* %res, align 4, !dbg !16370
  %140 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16371
  %resolution196 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %140, i32 0, i32 1, !dbg !16372, !ctir !935
  store i32 %139, i32* %resolution196, align 8, !dbg !16373, !ctir !5
  %141 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16374
  %exact197 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %141, i32 0, i32 2, !dbg !16375, !ctir !935
  store i8 1, i8* %exact197, align 4, !dbg !16376, !ctir !139
  br label %if.end198, !dbg !16377

if.end198:                                        ; preds = %if.end195, %if.end50
  %142 = load i32, i32* %res, align 4, !dbg !16378
  %cmp199 = icmp eq i32 %142, 2000000000, !dbg !16379
  %143 = zext i1 %cmp199 to i64, !dbg !16378
  %cond201 = select i1 %cmp199, i32 1, i32 0, !dbg !16378
  %neg202 = xor i32 %cond201, -1, !dbg !16380
  %conv203 = sext i32 %neg202 to i64, !dbg !16380
  %144 = load i64, i64* %src_s, align 8, !dbg !16381
  %and204 = and i64 %144, %conv203, !dbg !16381
  store i64 %and204, i64* %src_s, align 8, !dbg !16381
  %145 = load i32, i32* %src_ns, align 4, !dbg !16382
  %146 = load i32, i32* %res, align 4, !dbg !16383
  %rem205 = srem i32 %145, %146, !dbg !16384
  %147 = load i32, i32* %src_ns, align 4, !dbg !16385
  %sub206 = sub nsw i32 %147, %rem205, !dbg !16385
  store i32 %sub206, i32* %src_ns, align 4, !dbg !16385
  br label %if.end207, !dbg !16386

if.end207:                                        ; preds = %if.end198, %entry
  %148 = load i64, i64* %dst_s, align 8, !dbg !16387
  %149 = load i64, i64* %src_s, align 8, !dbg !16388
  %cmp208 = icmp slt i64 %148, %149, !dbg !16389
  br i1 %cmp208, label %cond.true, label %cond.false, !dbg !16387

cond.true:                                        ; preds = %if.end207
  br label %cond.end223, !dbg !16387

cond.false:                                       ; preds = %if.end207
  %150 = load i64, i64* %dst_s, align 8, !dbg !16390
  %151 = load i64, i64* %src_s, align 8, !dbg !16391
  %cmp210 = icmp sgt i64 %150, %151, !dbg !16392
  br i1 %cmp210, label %cond.true212, label %cond.false213, !dbg !16390

cond.true212:                                     ; preds = %cond.false
  br label %cond.end221, !dbg !16390

cond.false213:                                    ; preds = %cond.false
  %152 = load i32, i32* %dst_ns, align 4, !dbg !16393
  %153 = load i32, i32* %src_ns, align 4, !dbg !16394
  %cmp214 = icmp slt i32 %152, %153, !dbg !16395
  br i1 %cmp214, label %cond.true216, label %cond.false217, !dbg !16393

cond.true216:                                     ; preds = %cond.false213
  br label %cond.end, !dbg !16393

cond.false217:                                    ; preds = %cond.false213
  %154 = load i32, i32* %dst_ns, align 4, !dbg !16396
  %155 = load i32, i32* %src_ns, align 4, !dbg !16397
  %cmp218 = icmp sgt i32 %154, %155, !dbg !16398
  %conv219 = zext i1 %cmp218 to i32, !dbg !16398
  br label %cond.end, !dbg !16393

cond.end:                                         ; preds = %cond.false217, %cond.true216
  %cond220 = phi i32 [ -1, %cond.true216 ], [ %conv219, %cond.false217 ], !dbg !16393
  br label %cond.end221, !dbg !16390

cond.end221:                                      ; preds = %cond.end, %cond.true212
  %cond222 = phi i32 [ 1, %cond.true212 ], [ %cond220, %cond.end ], !dbg !16390
  br label %cond.end223, !dbg !16387

cond.end223:                                      ; preds = %cond.end221, %cond.true
  %cond224 = phi i32 [ -1, %cond.true ], [ %cond222, %cond.end221 ], !dbg !16387
  store i32 %cond224, i32* %retval, align 4, !dbg !16399
  br label %return, !dbg !16399

return:                                           ; preds = %cond.end223, %if.then166, %if.then143, %if.then126, %if.then114, %if.then16, %if.then11, %if.then8
  %156 = load i32, i32* %retval, align 4, !dbg !16400
  ret i32 %156, !dbg !16400
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_info_hash(i8* %x, i64 %table_size) #4 !dbg !16401 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.fs_res*, align 8, !ctir !941
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !16402, metadata !DIExpression()), !dbg !16403
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !16404, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.declare(metadata %struct.fs_res** %p, metadata !16406, metadata !DIExpression()), !dbg !16407
  %0 = load i8*, i8** %x.addr, align 8, !dbg !16408
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !16408
  store %struct.fs_res* %1, %struct.fs_res** %p, align 8, !dbg !16407
  %2 = load %struct.fs_res*, %struct.fs_res** %p, align 8, !dbg !16409
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %2, i32 0, i32 0, !dbg !16410, !ctir !942
  %3 = load i64, i64* %dev, align 8, !dbg !16410, !ctir !259
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !16411
  %rem = urem i64 %3, %4, !dbg !16412
  ret i64 %rem, !dbg !16413
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_info_compare(i8* %x, i8* %y) #4 !dbg !16414 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.fs_res*, align 8, !ctir !941
  %b = alloca %struct.fs_res*, align 8, !ctir !941
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !16415, metadata !DIExpression()), !dbg !16416
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !16417, metadata !DIExpression()), !dbg !16418
  call void @llvm.dbg.declare(metadata %struct.fs_res** %a, metadata !16419, metadata !DIExpression()), !dbg !16420
  %0 = load i8*, i8** %x.addr, align 8, !dbg !16421
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !16421
  store %struct.fs_res* %1, %struct.fs_res** %a, align 8, !dbg !16420
  call void @llvm.dbg.declare(metadata %struct.fs_res** %b, metadata !16422, metadata !DIExpression()), !dbg !16423
  %2 = load i8*, i8** %y.addr, align 8, !dbg !16424
  %3 = bitcast i8* %2 to %struct.fs_res*, !dbg !16424
  store %struct.fs_res* %3, %struct.fs_res** %b, align 8, !dbg !16423
  %4 = load %struct.fs_res*, %struct.fs_res** %a, align 8, !dbg !16425
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %4, i32 0, i32 0, !dbg !16426, !ctir !942
  %5 = load i64, i64* %dev, align 8, !dbg !16426, !ctir !259
  %6 = load %struct.fs_res*, %struct.fs_res** %b, align 8, !dbg !16427
  %dev1 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %6, i32 0, i32 0, !dbg !16428, !ctir !942
  %7 = load i64, i64* %dev1, align 8, !dbg !16428, !ctir !259
  %cmp = icmp eq i64 %5, %7, !dbg !16429
  ret i1 %cmp, !dbg !16430
}

; Function Attrs: nounwind
declare dso_local i32 @utimensat(i32, i8*, %struct.timespec*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimensat(i32 %dir, i8* %file, %struct.timespec* %times) #4 !dbg !16431 {
entry:
  %dir.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %times.addr = alloca %struct.timespec*, align 8
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !16437, metadata !DIExpression()), !dbg !16438
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16439, metadata !DIExpression()), !dbg !16440
  store %struct.timespec* %times, %struct.timespec** %times.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %times.addr, metadata !16441, metadata !DIExpression()), !dbg !16442
  %0 = load i32, i32* %dir.addr, align 4, !dbg !16443
  %1 = load i8*, i8** %file.addr, align 8, !dbg !16444
  %2 = load %struct.timespec*, %struct.timespec** %times.addr, align 8, !dbg !16445
  %call = call i32 @utimensat(i32 %0, i8* %1, %struct.timespec* %2, i32 256) #12, !dbg !16446
  ret i32 %call, !dbg !16447
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fdutimens(i32 %fd, i8* %file, %struct.timespec* %timespec) #4 !dbg !16448 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !951
  %ts = alloca %struct.timespec*, align 8, !ctir !956
  %adjustment_needed = alloca i32, align 4, !ctir !5
  %st = alloca %struct.stat, align 8, !ctir !16449
  %result = alloca i32, align 4, !ctir !5
  %tmp = alloca %struct.timespec, align 8
  %tmp35 = alloca %struct.timespec, align 8
  %timeval = alloca [2 x %struct.timespec], align 16, !ctir !957
  %t = alloca %struct.timespec*, align 8, !ctir !964
  %abig = alloca i8, align 1, !ctir !139
  %mbig = alloca i8, align 1, !ctir !139
  %adiff = alloca i64, align 8, !ctir !933
  %mdiff = alloca i64, align 8, !ctir !933
  %tt = alloca %struct.timespec*, align 8, !ctir !964
  %truncated_timeval = alloca [2 x %struct.timespec], align 16, !ctir !957
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16466, metadata !DIExpression()), !dbg !16467
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16468, metadata !DIExpression()), !dbg !16469
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !16470, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !16472, metadata !DIExpression()), !dbg !16473
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !16474, metadata !DIExpression()), !dbg !16475
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16476
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !16476
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16476

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !16477, !ctir !951
  br label %cond.end, !dbg !16476

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16476

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !16476
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !16475
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !16478, metadata !DIExpression()), !dbg !16479
  store i32 0, i32* %adjustment_needed, align 4, !dbg !16479
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !16480, metadata !DIExpression()), !dbg !16481
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16482
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !16482
  br i1 %tobool1, label %if.then, label %if.end, !dbg !16484

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !16485, !ctir !951
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16487
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !16487, !ctir !16435
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !16487
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !16487
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !16487
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !16488, !ctir !951
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16489
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !16489, !ctir !16435
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !16489
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !16489
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !16489
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16490
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !16491
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !16492
  br label %if.end, !dbg !16493

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !16494
  %cmp = icmp slt i32 %9, 0, !dbg !16496
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !16497

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16498
  br label %return, !dbg !16498

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* %fd.addr, align 4, !dbg !16499
  %cmp7 = icmp slt i32 %10, 0, !dbg !16501
  br i1 %cmp7, label %land.lhs.true, label %if.end11, !dbg !16502

land.lhs.true:                                    ; preds = %if.end6
  %11 = load i8*, i8** %file.addr, align 8, !dbg !16503
  %tobool8 = icmp ne i8* %11, null, !dbg !16503
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !16504

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #15, !dbg !16505
  store i32 9, i32* %call10, align 4, !dbg !16507, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !16508
  br label %return, !dbg !16508

if.end11:                                         ; preds = %land.lhs.true, %if.end6
  %12 = load i32, i32* @utimensat_works_really, align 4, !dbg !16509
  %cmp12 = icmp sle i32 0, %12, !dbg !16511
  br i1 %cmp12, label %if.then13, label %if.end67, !dbg !16512

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %result, metadata !16513, metadata !DIExpression()), !dbg !16515
  %13 = load i32, i32* %adjustment_needed, align 4, !dbg !16516
  %cmp14 = icmp eq i32 %13, 2, !dbg !16518
  br i1 %cmp14, label %if.then15, label %if.end39, !dbg !16519

if.then15:                                        ; preds = %if.then13
  %14 = load i32, i32* %fd.addr, align 4, !dbg !16520
  %cmp16 = icmp slt i32 %14, 0, !dbg !16523
  br i1 %cmp16, label %cond.true17, label %cond.false20, !dbg !16524

cond.true17:                                      ; preds = %if.then15
  %15 = load i8*, i8** %file.addr, align 8, !dbg !16525
  %call18 = call i32 @stat(i8* %15, %struct.stat* %st) #12, !dbg !16526
  %tobool19 = icmp ne i32 %call18, 0, !dbg !16526
  br i1 %tobool19, label %if.then23, label %if.end24, !dbg !16520

cond.false20:                                     ; preds = %if.then15
  %16 = load i32, i32* %fd.addr, align 4, !dbg !16527
  %call21 = call i32 @fstat(i32 %16, %struct.stat* %st) #12, !dbg !16528
  %tobool22 = icmp ne i32 %call21, 0, !dbg !16528
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !16524

if.then23:                                        ; preds = %cond.false20, %cond.true17
  store i32 -1, i32* %retval, align 4, !dbg !16529
  br label %return, !dbg !16529

if.end24:                                         ; preds = %cond.false20, %cond.true17
  %17 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16530
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i64 0, !dbg !16530, !ctir !956
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !16532, !ctir !952
  %18 = load i64, i64* %tv_nsec, align 8, !dbg !16532, !ctir !360
  %cmp26 = icmp eq i64 %18, 1073741822, !dbg !16533
  br i1 %cmp26, label %if.then27, label %if.else, !dbg !16534

if.then27:                                        ; preds = %if.end24
  %19 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16535
  %arrayidx28 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i64 0, !dbg !16535, !ctir !956
  %call29 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !16536
  %20 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !16536
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !16536
  %22 = extractvalue { i64, i64 } %call29, 0, !dbg !16536
  store i64 %22, i64* %21, align 8, !dbg !16536
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !16536
  %24 = extractvalue { i64, i64 } %call29, 1, !dbg !16536
  store i64 %24, i64* %23, align 8, !dbg !16536
  %25 = bitcast %struct.timespec* %arrayidx28 to i8*, !dbg !16536
  %26 = bitcast %struct.timespec* %tmp to i8*, !dbg !16536
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false), !dbg !16536
  br label %if.end38, !dbg !16535

if.else:                                          ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16537
  %arrayidx30 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !16537, !ctir !956
  %tv_nsec31 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx30, i32 0, i32 1, !dbg !16539, !ctir !952
  %28 = load i64, i64* %tv_nsec31, align 8, !dbg !16539, !ctir !360
  %cmp32 = icmp eq i64 %28, 1073741822, !dbg !16540
  br i1 %cmp32, label %if.then33, label %if.end37, !dbg !16541

if.then33:                                        ; preds = %if.else
  %29 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16542
  %arrayidx34 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !16542, !ctir !956
  %call36 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !16543
  %30 = bitcast %struct.timespec* %tmp35 to { i64, i64 }*, !dbg !16543
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0, !dbg !16543
  %32 = extractvalue { i64, i64 } %call36, 0, !dbg !16543
  store i64 %32, i64* %31, align 8, !dbg !16543
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1, !dbg !16543
  %34 = extractvalue { i64, i64 } %call36, 1, !dbg !16543
  store i64 %34, i64* %33, align 8, !dbg !16543
  %35 = bitcast %struct.timespec* %arrayidx34 to i8*, !dbg !16543
  %36 = bitcast %struct.timespec* %tmp35 to i8*, !dbg !16543
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false), !dbg !16543
  br label %if.end37, !dbg !16542

if.end37:                                         ; preds = %if.then33, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then27
  %37 = load i32, i32* %adjustment_needed, align 4, !dbg !16544
  %inc = add nsw i32 %37, 1, !dbg !16544
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !16544
  br label %if.end39, !dbg !16545

if.end39:                                         ; preds = %if.end38, %if.then13
  %38 = load i32, i32* %fd.addr, align 4, !dbg !16546
  %cmp40 = icmp slt i32 %38, 0, !dbg !16548
  br i1 %cmp40, label %if.then41, label %if.end52, !dbg !16549

if.then41:                                        ; preds = %if.end39
  %39 = load i8*, i8** %file.addr, align 8, !dbg !16550
  %40 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16552
  %call42 = call i32 @utimensat(i32 -100, i8* %39, %struct.timespec* %40, i32 0) #12, !dbg !16553
  store i32 %call42, i32* %result, align 4, !dbg !16554
  %41 = load i32, i32* %result, align 4, !dbg !16555
  %cmp43 = icmp slt i32 0, %41, !dbg !16557
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !16558

if.then44:                                        ; preds = %if.then41
  %call45 = call i32* @__errno_location() #15, !dbg !16559
  store i32 38, i32* %call45, align 4, !dbg !16560, !ctir !5
  br label %if.end46, !dbg !16559

if.end46:                                         ; preds = %if.then44, %if.then41
  %42 = load i32, i32* %result, align 4, !dbg !16561
  %cmp47 = icmp eq i32 %42, 0, !dbg !16563
  br i1 %cmp47, label %if.then50, label %lor.lhs.false, !dbg !16564

lor.lhs.false:                                    ; preds = %if.end46
  %call48 = call i32* @__errno_location() #15, !dbg !16565
  %43 = load i32, i32* %call48, align 4, !dbg !16565, !ctir !5
  %cmp49 = icmp ne i32 %43, 38, !dbg !16566
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !16567

if.then50:                                        ; preds = %lor.lhs.false, %if.end46
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !16568
  %44 = load i32, i32* %result, align 4, !dbg !16570
  store i32 %44, i32* %retval, align 4, !dbg !16571
  br label %return, !dbg !16571

if.end51:                                         ; preds = %lor.lhs.false
  br label %if.end52, !dbg !16572

if.end52:                                         ; preds = %if.end51, %if.end39
  %45 = load i32, i32* %fd.addr, align 4, !dbg !16573
  %cmp53 = icmp sle i32 0, %45, !dbg !16575
  br i1 %cmp53, label %if.then54, label %if.end66, !dbg !16576

if.then54:                                        ; preds = %if.end52
  %46 = load i32, i32* %fd.addr, align 4, !dbg !16577
  %47 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16579
  %call55 = call i32 @futimens(i32 %46, %struct.timespec* %47) #12, !dbg !16580
  store i32 %call55, i32* %result, align 4, !dbg !16581
  %48 = load i32, i32* %result, align 4, !dbg !16582
  %cmp56 = icmp slt i32 0, %48, !dbg !16584
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !16585

if.then57:                                        ; preds = %if.then54
  %call58 = call i32* @__errno_location() #15, !dbg !16586
  store i32 38, i32* %call58, align 4, !dbg !16587, !ctir !5
  br label %if.end59, !dbg !16586

if.end59:                                         ; preds = %if.then57, %if.then54
  %49 = load i32, i32* %result, align 4, !dbg !16588
  %cmp60 = icmp eq i32 %49, 0, !dbg !16590
  br i1 %cmp60, label %if.then64, label %lor.lhs.false61, !dbg !16591

lor.lhs.false61:                                  ; preds = %if.end59
  %call62 = call i32* @__errno_location() #15, !dbg !16592
  %50 = load i32, i32* %call62, align 4, !dbg !16592, !ctir !5
  %cmp63 = icmp ne i32 %50, 38, !dbg !16593
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !16594

if.then64:                                        ; preds = %lor.lhs.false61, %if.end59
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !16595
  %51 = load i32, i32* %result, align 4, !dbg !16597
  store i32 %51, i32* %retval, align 4, !dbg !16598
  br label %return, !dbg !16598

if.end65:                                         ; preds = %lor.lhs.false61
  br label %if.end66, !dbg !16599

if.end66:                                         ; preds = %if.end65, %if.end52
  br label %if.end67, !dbg !16600

if.end67:                                         ; preds = %if.end66, %if.end11
  store i32 -1, i32* @utimensat_works_really, align 4, !dbg !16601
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !16602
  %52 = load i32, i32* %adjustment_needed, align 4, !dbg !16603
  %tobool68 = icmp ne i32 %52, 0, !dbg !16603
  br i1 %tobool68, label %if.then69, label %if.end86, !dbg !16605

if.then69:                                        ; preds = %if.end67
  %53 = load i32, i32* %adjustment_needed, align 4, !dbg !16606
  %cmp70 = icmp ne i32 %53, 3, !dbg !16609
  br i1 %cmp70, label %land.lhs.true71, label %if.end80, !dbg !16610

land.lhs.true71:                                  ; preds = %if.then69
  %54 = load i32, i32* %fd.addr, align 4, !dbg !16611
  %cmp72 = icmp slt i32 %54, 0, !dbg !16612
  br i1 %cmp72, label %cond.true73, label %cond.false76, !dbg !16613

cond.true73:                                      ; preds = %land.lhs.true71
  %55 = load i8*, i8** %file.addr, align 8, !dbg !16614
  %call74 = call i32 @stat(i8* %55, %struct.stat* %st) #12, !dbg !16615
  %tobool75 = icmp ne i32 %call74, 0, !dbg !16615
  br i1 %tobool75, label %if.then79, label %if.end80, !dbg !16611

cond.false76:                                     ; preds = %land.lhs.true71
  %56 = load i32, i32* %fd.addr, align 4, !dbg !16616
  %call77 = call i32 @fstat(i32 %56, %struct.stat* %st) #12, !dbg !16617
  %tobool78 = icmp ne i32 %call77, 0, !dbg !16617
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !16613

if.then79:                                        ; preds = %cond.false76, %cond.true73
  store i32 -1, i32* %retval, align 4, !dbg !16618
  br label %return, !dbg !16618

if.end80:                                         ; preds = %cond.false76, %cond.true73, %if.then69
  %57 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16619
  %tobool81 = icmp ne %struct.timespec* %57, null, !dbg !16619
  br i1 %tobool81, label %land.lhs.true82, label %if.end85, !dbg !16621

land.lhs.true82:                                  ; preds = %if.end80
  %call83 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !16622
  br i1 %call83, label %if.then84, label %if.end85, !dbg !16623

if.then84:                                        ; preds = %land.lhs.true82
  store i32 0, i32* %retval, align 4, !dbg !16624
  br label %return, !dbg !16624

if.end85:                                         ; preds = %land.lhs.true82, %if.end80
  br label %if.end86, !dbg !16625

if.end86:                                         ; preds = %if.end85, %if.end67
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timeval, metadata !16626, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.declare(metadata %struct.timespec** %t, metadata !16629, metadata !DIExpression()), !dbg !16630
  %58 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16631
  %tobool87 = icmp ne %struct.timespec* %58, null, !dbg !16631
  br i1 %tobool87, label %if.then88, label %if.else105, !dbg !16633

if.then88:                                        ; preds = %if.end86
  %59 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16634
  %arrayidx89 = getelementptr inbounds %struct.timespec, %struct.timespec* %59, i64 0, !dbg !16634, !ctir !956
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx89, i32 0, i32 0, !dbg !16636, !ctir !952
  %60 = load i64, i64* %tv_sec, align 8, !dbg !16636, !ctir !358
  %arrayidx90 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !16637, !ctir !957
  %tv_sec91 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx90, i32 0, i32 0, !dbg !16638, !ctir !958
  store i64 %60, i64* %tv_sec91, align 16, !dbg !16639, !ctir !358
  %61 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16640
  %arrayidx92 = getelementptr inbounds %struct.timespec, %struct.timespec* %61, i64 0, !dbg !16640, !ctir !956
  %tv_nsec93 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx92, i32 0, i32 1, !dbg !16641, !ctir !952
  %62 = load i64, i64* %tv_nsec93, align 8, !dbg !16641, !ctir !360
  %div = sdiv i64 %62, 1000, !dbg !16642
  %arrayidx94 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !16643, !ctir !957
  %tv_usec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx94, i32 0, i32 1, !dbg !16644, !ctir !958
  store i64 %div, i64* %tv_usec, align 8, !dbg !16645, !ctir !963
  %63 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16646
  %arrayidx95 = getelementptr inbounds %struct.timespec, %struct.timespec* %63, i64 1, !dbg !16646, !ctir !956
  %tv_sec96 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx95, i32 0, i32 0, !dbg !16647, !ctir !952
  %64 = load i64, i64* %tv_sec96, align 8, !dbg !16647, !ctir !358
  %arrayidx97 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !16648, !ctir !957
  %tv_sec98 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx97, i32 0, i32 0, !dbg !16649, !ctir !958
  store i64 %64, i64* %tv_sec98, align 16, !dbg !16650, !ctir !358
  %65 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16651
  %arrayidx99 = getelementptr inbounds %struct.timespec, %struct.timespec* %65, i64 1, !dbg !16651, !ctir !956
  %tv_nsec100 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx99, i32 0, i32 1, !dbg !16652, !ctir !952
  %66 = load i64, i64* %tv_nsec100, align 8, !dbg !16652, !ctir !360
  %div101 = sdiv i64 %66, 1000, !dbg !16653
  %arrayidx102 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !16654, !ctir !957
  %tv_usec103 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx102, i32 0, i32 1, !dbg !16655, !ctir !958
  store i64 %div101, i64* %tv_usec103, align 8, !dbg !16656, !ctir !963
  %arraydecay104 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !16657, !ctir !957
  store %struct.timespec* %arraydecay104, %struct.timespec** %t, align 8, !dbg !16658
  br label %if.end106, !dbg !16659

if.else105:                                       ; preds = %if.end86
  store %struct.timespec* null, %struct.timespec** %t, align 8, !dbg !16660
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then88
  %67 = load i32, i32* %fd.addr, align 4, !dbg !16661
  %cmp107 = icmp slt i32 %67, 0, !dbg !16663
  br i1 %cmp107, label %if.then108, label %if.else110, !dbg !16664

if.then108:                                       ; preds = %if.end106
  %68 = load i8*, i8** %file.addr, align 8, !dbg !16665
  %69 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16667
  %call109 = call i32 @futimesat(i32 -100, i8* %68, %struct.timespec* %69) #12, !dbg !16668
  store i32 %call109, i32* %retval, align 4, !dbg !16669
  br label %return, !dbg !16669

if.else110:                                       ; preds = %if.end106
  %70 = load i32, i32* %fd.addr, align 4, !dbg !16670
  %71 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16670
  %call111 = call i32 @futimesat(i32 %70, i8* null, %struct.timespec* %71) #12, !dbg !16670
  %cmp112 = icmp eq i32 %call111, 0, !dbg !16673
  br i1 %cmp112, label %if.then113, label %if.end177, !dbg !16674

if.then113:                                       ; preds = %if.else110
  %72 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16675
  %tobool114 = icmp ne %struct.timespec* %72, null, !dbg !16675
  br i1 %tobool114, label %if.then115, label %if.end176, !dbg !16678

if.then115:                                       ; preds = %if.then113
  call void @llvm.dbg.declare(metadata i8* %abig, metadata !16679, metadata !DIExpression()), !dbg !16681
  %73 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16682
  %arrayidx116 = getelementptr inbounds %struct.timespec, %struct.timespec* %73, i64 0, !dbg !16682, !ctir !964
  %tv_usec117 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx116, i32 0, i32 1, !dbg !16683, !ctir !958
  %74 = load i64, i64* %tv_usec117, align 8, !dbg !16683, !ctir !963
  %cmp118 = icmp sle i64 500000, %74, !dbg !16684
  %frombool = zext i1 %cmp118 to i8, !dbg !16681
  store i8 %frombool, i8* %abig, align 1, !dbg !16681
  call void @llvm.dbg.declare(metadata i8* %mbig, metadata !16685, metadata !DIExpression()), !dbg !16686
  %75 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16687
  %arrayidx119 = getelementptr inbounds %struct.timespec, %struct.timespec* %75, i64 1, !dbg !16687, !ctir !964
  %tv_usec120 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx119, i32 0, i32 1, !dbg !16688, !ctir !958
  %76 = load i64, i64* %tv_usec120, align 8, !dbg !16688, !ctir !963
  %cmp121 = icmp sle i64 500000, %76, !dbg !16689
  %frombool122 = zext i1 %cmp121 to i8, !dbg !16686
  store i8 %frombool122, i8* %mbig, align 1, !dbg !16686
  %77 = load i8, i8* %abig, align 1, !dbg !16690
  %tobool123 = trunc i8 %77 to i1, !dbg !16690
  %conv = zext i1 %tobool123 to i32, !dbg !16690
  %78 = load i8, i8* %mbig, align 1, !dbg !16692
  %tobool124 = trunc i8 %78 to i1, !dbg !16692
  %conv125 = zext i1 %tobool124 to i32, !dbg !16692
  %or = or i32 %conv, %conv125, !dbg !16693
  %tobool126 = icmp ne i32 %or, 0, !dbg !16693
  br i1 %tobool126, label %land.lhs.true127, label %if.end175, !dbg !16694

land.lhs.true127:                                 ; preds = %if.then115
  %79 = load i32, i32* %fd.addr, align 4, !dbg !16695
  %call128 = call i32 @fstat(i32 %79, %struct.stat* %st) #12, !dbg !16696
  %cmp129 = icmp eq i32 %call128, 0, !dbg !16697
  br i1 %cmp129, label %if.then131, label %if.end175, !dbg !16698

if.then131:                                       ; preds = %land.lhs.true127
  call void @llvm.dbg.declare(metadata i64* %adiff, metadata !16699, metadata !DIExpression()), !dbg !16701
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 11, !dbg !16702, !ctir !16449
  %tv_sec132 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !16702, !ctir !952
  %80 = load i64, i64* %tv_sec132, align 8, !dbg !16702, !ctir !358
  %81 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16703
  %arrayidx133 = getelementptr inbounds %struct.timespec, %struct.timespec* %81, i64 0, !dbg !16703, !ctir !964
  %tv_sec134 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx133, i32 0, i32 0, !dbg !16704, !ctir !958
  %82 = load i64, i64* %tv_sec134, align 8, !dbg !16704, !ctir !358
  %sub = sub nsw i64 %80, %82, !dbg !16705
  store i64 %sub, i64* %adiff, align 8, !dbg !16701
  call void @llvm.dbg.declare(metadata i64* %mdiff, metadata !16706, metadata !DIExpression()), !dbg !16707
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !16708, !ctir !16449
  %tv_sec135 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !16708, !ctir !952
  %83 = load i64, i64* %tv_sec135, align 8, !dbg !16708, !ctir !358
  %84 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16709
  %arrayidx136 = getelementptr inbounds %struct.timespec, %struct.timespec* %84, i64 1, !dbg !16709, !ctir !964
  %tv_sec137 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx136, i32 0, i32 0, !dbg !16710, !ctir !958
  %85 = load i64, i64* %tv_sec137, align 8, !dbg !16710, !ctir !358
  %sub138 = sub nsw i64 %83, %85, !dbg !16711
  store i64 %sub138, i64* %mdiff, align 8, !dbg !16707
  call void @llvm.dbg.declare(metadata %struct.timespec** %tt, metadata !16712, metadata !DIExpression()), !dbg !16713
  store %struct.timespec* null, %struct.timespec** %tt, align 8, !dbg !16713
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %truncated_timeval, metadata !16714, metadata !DIExpression()), !dbg !16715
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !16716, !ctir !957
  %86 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16717
  %arrayidx140 = getelementptr inbounds %struct.timespec, %struct.timespec* %86, i64 0, !dbg !16717, !ctir !964
  %87 = bitcast %struct.timespec* %arrayidx139 to i8*, !dbg !16717
  %88 = bitcast %struct.timespec* %arrayidx140 to i8*, !dbg !16717
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %87, i8* align 8 %88, i64 16, i1 false), !dbg !16717
  %arrayidx141 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 1, !dbg !16718, !ctir !957
  %89 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16719
  %arrayidx142 = getelementptr inbounds %struct.timespec, %struct.timespec* %89, i64 1, !dbg !16719, !ctir !964
  %90 = bitcast %struct.timespec* %arrayidx141 to i8*, !dbg !16719
  %91 = bitcast %struct.timespec* %arrayidx142 to i8*, !dbg !16719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %90, i8* align 8 %91, i64 16, i1 false), !dbg !16719
  %92 = load i8, i8* %abig, align 1, !dbg !16720
  %tobool143 = trunc i8 %92 to i1, !dbg !16720
  br i1 %tobool143, label %land.lhs.true145, label %if.end156, !dbg !16722

land.lhs.true145:                                 ; preds = %if.then131
  %93 = load i64, i64* %adiff, align 8, !dbg !16723
  %cmp146 = icmp eq i64 %93, 1, !dbg !16724
  br i1 %cmp146, label %land.lhs.true148, label %if.end156, !dbg !16725

land.lhs.true148:                                 ; preds = %land.lhs.true145
  %call149 = call i64 @get_stat_atime_ns(%struct.stat* %st) #14, !dbg !16726
  %cmp150 = icmp eq i64 %call149, 0, !dbg !16727
  br i1 %cmp150, label %if.then152, label %if.end156, !dbg !16728

if.then152:                                       ; preds = %land.lhs.true148
  %arraydecay153 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !16729, !ctir !957
  store %struct.timespec* %arraydecay153, %struct.timespec** %tt, align 8, !dbg !16731
  %94 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !16732
  %arrayidx154 = getelementptr inbounds %struct.timespec, %struct.timespec* %94, i64 0, !dbg !16732, !ctir !964
  %tv_usec155 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx154, i32 0, i32 1, !dbg !16733, !ctir !958
  store i64 0, i64* %tv_usec155, align 8, !dbg !16734, !ctir !963
  br label %if.end156, !dbg !16735

if.end156:                                        ; preds = %if.then152, %land.lhs.true148, %land.lhs.true145, %if.then131
  %95 = load i8, i8* %mbig, align 1, !dbg !16736
  %tobool157 = trunc i8 %95 to i1, !dbg !16736
  br i1 %tobool157, label %land.lhs.true159, label %if.end170, !dbg !16738

land.lhs.true159:                                 ; preds = %if.end156
  %96 = load i64, i64* %mdiff, align 8, !dbg !16739
  %cmp160 = icmp eq i64 %96, 1, !dbg !16740
  br i1 %cmp160, label %land.lhs.true162, label %if.end170, !dbg !16741

land.lhs.true162:                                 ; preds = %land.lhs.true159
  %call163 = call i64 @get_stat_mtime_ns(%struct.stat* %st) #14, !dbg !16742
  %cmp164 = icmp eq i64 %call163, 0, !dbg !16743
  br i1 %cmp164, label %if.then166, label %if.end170, !dbg !16744

if.then166:                                       ; preds = %land.lhs.true162
  %arraydecay167 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !16745, !ctir !957
  store %struct.timespec* %arraydecay167, %struct.timespec** %tt, align 8, !dbg !16747
  %97 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !16748
  %arrayidx168 = getelementptr inbounds %struct.timespec, %struct.timespec* %97, i64 1, !dbg !16748, !ctir !964
  %tv_usec169 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx168, i32 0, i32 1, !dbg !16749, !ctir !958
  store i64 0, i64* %tv_usec169, align 8, !dbg !16750, !ctir !963
  br label %if.end170, !dbg !16751

if.end170:                                        ; preds = %if.then166, %land.lhs.true162, %land.lhs.true159, %if.end156
  %98 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !16752
  %tobool171 = icmp ne %struct.timespec* %98, null, !dbg !16752
  br i1 %tobool171, label %if.then172, label %if.end174, !dbg !16754

if.then172:                                       ; preds = %if.end170
  %99 = load i32, i32* %fd.addr, align 4, !dbg !16755
  %100 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !16755
  %call173 = call i32 @futimesat(i32 %99, i8* null, %struct.timespec* %100) #12, !dbg !16755
  br label %if.end174, !dbg !16755

if.end174:                                        ; preds = %if.then172, %if.end170
  br label %if.end175, !dbg !16756

if.end175:                                        ; preds = %if.end174, %land.lhs.true127, %if.then115
  br label %if.end176, !dbg !16757

if.end176:                                        ; preds = %if.end175, %if.then113
  store i32 0, i32* %retval, align 4, !dbg !16758
  br label %return, !dbg !16758

if.end177:                                        ; preds = %if.else110
  br label %if.end178

if.end178:                                        ; preds = %if.end177
  %101 = load i8*, i8** %file.addr, align 8, !dbg !16759
  %tobool179 = icmp ne i8* %101, null, !dbg !16759
  br i1 %tobool179, label %if.end181, label %if.then180, !dbg !16761

if.then180:                                       ; preds = %if.end178
  store i32 -1, i32* %retval, align 4, !dbg !16762
  br label %return, !dbg !16762

if.end181:                                        ; preds = %if.end178
  %102 = load i8*, i8** %file.addr, align 8, !dbg !16764
  %103 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16765
  %call182 = call i32 @utimes(i8* %102, %struct.timespec* %103) #12, !dbg !16766
  store i32 %call182, i32* %retval, align 4, !dbg !16767
  br label %return, !dbg !16767

return:                                           ; preds = %if.end181, %if.then180, %if.end176, %if.then108, %if.then84, %if.then79, %if.then64, %if.then50, %if.then23, %if.then9, %if.then5
  %104 = load i32, i32* %retval, align 4, !dbg !16768
  ret i32 %104, !dbg !16768
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @validate_timespec(%struct.timespec* %timespec) #4 !dbg !16769 {
entry:
  %retval = alloca i32, align 4
  %timespec.addr = alloca %struct.timespec*, align 8
  %result = alloca i32, align 4, !ctir !5
  %utime_omit_count = alloca i32, align 4, !ctir !5
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !16772, metadata !DIExpression()), !dbg !16773
  call void @llvm.dbg.declare(metadata i32* %result, metadata !16774, metadata !DIExpression()), !dbg !16775
  store i32 0, i32* %result, align 4, !dbg !16775
  call void @llvm.dbg.declare(metadata i32* %utime_omit_count, metadata !16776, metadata !DIExpression()), !dbg !16777
  store i32 0, i32* %utime_omit_count, align 4, !dbg !16777
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16778
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %0, i64 0, !dbg !16778, !ctir !956
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !16780, !ctir !952
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16780, !ctir !360
  %cmp = icmp ne i64 %1, 1073741823, !dbg !16781
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !16782

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16783
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !16783, !ctir !956
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !16784, !ctir !952
  %3 = load i64, i64* %tv_nsec2, align 8, !dbg !16784, !ctir !360
  %cmp3 = icmp ne i64 %3, 1073741822, !dbg !16785
  br i1 %cmp3, label %land.lhs.true4, label %lor.lhs.false, !dbg !16786

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16787
  %arrayidx5 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, !dbg !16787, !ctir !956
  %tv_nsec6 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx5, i32 0, i32 1, !dbg !16788, !ctir !952
  %5 = load i64, i64* %tv_nsec6, align 8, !dbg !16788, !ctir !360
  %cmp7 = icmp sle i64 0, %5, !dbg !16789
  br i1 %cmp7, label %land.lhs.true8, label %if.then, !dbg !16790

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %6 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16791
  %arrayidx9 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !16791, !ctir !956
  %tv_nsec10 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx9, i32 0, i32 1, !dbg !16792, !ctir !952
  %7 = load i64, i64* %tv_nsec10, align 8, !dbg !16792, !ctir !360
  %cmp11 = icmp slt i64 %7, 1000000000, !dbg !16793
  br i1 %cmp11, label %lor.lhs.false, label %if.then, !dbg !16794

lor.lhs.false:                                    ; preds = %land.lhs.true8, %land.lhs.true, %entry
  %8 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16795
  %arrayidx12 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !16795, !ctir !956
  %tv_nsec13 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx12, i32 0, i32 1, !dbg !16796, !ctir !952
  %9 = load i64, i64* %tv_nsec13, align 8, !dbg !16796, !ctir !360
  %cmp14 = icmp ne i64 %9, 1073741823, !dbg !16797
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !16798

land.lhs.true15:                                  ; preds = %lor.lhs.false
  %10 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16799
  %arrayidx16 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i64 1, !dbg !16799, !ctir !956
  %tv_nsec17 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx16, i32 0, i32 1, !dbg !16800, !ctir !952
  %11 = load i64, i64* %tv_nsec17, align 8, !dbg !16800, !ctir !360
  %cmp18 = icmp ne i64 %11, 1073741822, !dbg !16801
  br i1 %cmp18, label %land.lhs.true19, label %if.end, !dbg !16802

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %12 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16803
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i64 1, !dbg !16803, !ctir !956
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !16804, !ctir !952
  %13 = load i64, i64* %tv_nsec21, align 8, !dbg !16804, !ctir !360
  %cmp22 = icmp sle i64 0, %13, !dbg !16805
  br i1 %cmp22, label %land.lhs.true23, label %if.then, !dbg !16806

land.lhs.true23:                                  ; preds = %land.lhs.true19
  %14 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16807
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i64 1, !dbg !16807, !ctir !956
  %tv_nsec25 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx24, i32 0, i32 1, !dbg !16808, !ctir !952
  %15 = load i64, i64* %tv_nsec25, align 8, !dbg !16808, !ctir !360
  %cmp26 = icmp slt i64 %15, 1000000000, !dbg !16809
  br i1 %cmp26, label %if.end, label %if.then, !dbg !16810

if.then:                                          ; preds = %land.lhs.true23, %land.lhs.true19, %land.lhs.true8, %land.lhs.true4
  %call = call i32* @__errno_location() #15, !dbg !16811
  store i32 22, i32* %call, align 4, !dbg !16813, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !16814
  br label %return, !dbg !16814

if.end:                                           ; preds = %land.lhs.true23, %land.lhs.true15, %lor.lhs.false
  %16 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16815
  %arrayidx27 = getelementptr inbounds %struct.timespec, %struct.timespec* %16, i64 0, !dbg !16815, !ctir !956
  %tv_nsec28 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx27, i32 0, i32 1, !dbg !16817, !ctir !952
  %17 = load i64, i64* %tv_nsec28, align 8, !dbg !16817, !ctir !360
  %cmp29 = icmp eq i64 %17, 1073741823, !dbg !16818
  br i1 %cmp29, label %if.then34, label %lor.lhs.false30, !dbg !16819

lor.lhs.false30:                                  ; preds = %if.end
  %18 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16820
  %arrayidx31 = getelementptr inbounds %struct.timespec, %struct.timespec* %18, i64 0, !dbg !16820, !ctir !956
  %tv_nsec32 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx31, i32 0, i32 1, !dbg !16821, !ctir !952
  %19 = load i64, i64* %tv_nsec32, align 8, !dbg !16821, !ctir !360
  %cmp33 = icmp eq i64 %19, 1073741822, !dbg !16822
  br i1 %cmp33, label %if.then34, label %if.end41, !dbg !16823

if.then34:                                        ; preds = %lor.lhs.false30, %if.end
  %20 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16824
  %arrayidx35 = getelementptr inbounds %struct.timespec, %struct.timespec* %20, i64 0, !dbg !16824, !ctir !956
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx35, i32 0, i32 0, !dbg !16826, !ctir !952
  store i64 0, i64* %tv_sec, align 8, !dbg !16827, !ctir !358
  store i32 1, i32* %result, align 4, !dbg !16828
  %21 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16829
  %arrayidx36 = getelementptr inbounds %struct.timespec, %struct.timespec* %21, i64 0, !dbg !16829, !ctir !956
  %tv_nsec37 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx36, i32 0, i32 1, !dbg !16831, !ctir !952
  %22 = load i64, i64* %tv_nsec37, align 8, !dbg !16831, !ctir !360
  %cmp38 = icmp eq i64 %22, 1073741822, !dbg !16832
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !16833

if.then39:                                        ; preds = %if.then34
  %23 = load i32, i32* %utime_omit_count, align 4, !dbg !16834
  %inc = add nsw i32 %23, 1, !dbg !16834
  store i32 %inc, i32* %utime_omit_count, align 4, !dbg !16834
  br label %if.end40, !dbg !16835

if.end40:                                         ; preds = %if.then39, %if.then34
  br label %if.end41, !dbg !16836

if.end41:                                         ; preds = %if.end40, %lor.lhs.false30
  %24 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16837
  %arrayidx42 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 1, !dbg !16837, !ctir !956
  %tv_nsec43 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx42, i32 0, i32 1, !dbg !16839, !ctir !952
  %25 = load i64, i64* %tv_nsec43, align 8, !dbg !16839, !ctir !360
  %cmp44 = icmp eq i64 %25, 1073741823, !dbg !16840
  br i1 %cmp44, label %if.then49, label %lor.lhs.false45, !dbg !16841

lor.lhs.false45:                                  ; preds = %if.end41
  %26 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16842
  %arrayidx46 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i64 1, !dbg !16842, !ctir !956
  %tv_nsec47 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx46, i32 0, i32 1, !dbg !16843, !ctir !952
  %27 = load i64, i64* %tv_nsec47, align 8, !dbg !16843, !ctir !360
  %cmp48 = icmp eq i64 %27, 1073741822, !dbg !16844
  br i1 %cmp48, label %if.then49, label %if.end58, !dbg !16845

if.then49:                                        ; preds = %lor.lhs.false45, %if.end41
  %28 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16846
  %arrayidx50 = getelementptr inbounds %struct.timespec, %struct.timespec* %28, i64 1, !dbg !16846, !ctir !956
  %tv_sec51 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx50, i32 0, i32 0, !dbg !16848, !ctir !952
  store i64 0, i64* %tv_sec51, align 8, !dbg !16849, !ctir !358
  store i32 1, i32* %result, align 4, !dbg !16850
  %29 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16851
  %arrayidx52 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !16851, !ctir !956
  %tv_nsec53 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx52, i32 0, i32 1, !dbg !16853, !ctir !952
  %30 = load i64, i64* %tv_nsec53, align 8, !dbg !16853, !ctir !360
  %cmp54 = icmp eq i64 %30, 1073741822, !dbg !16854
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !16855

if.then55:                                        ; preds = %if.then49
  %31 = load i32, i32* %utime_omit_count, align 4, !dbg !16856
  %inc56 = add nsw i32 %31, 1, !dbg !16856
  store i32 %inc56, i32* %utime_omit_count, align 4, !dbg !16856
  br label %if.end57, !dbg !16857

if.end57:                                         ; preds = %if.then55, %if.then49
  br label %if.end58, !dbg !16858

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  %32 = load i32, i32* %result, align 4, !dbg !16859
  %33 = load i32, i32* %utime_omit_count, align 4, !dbg !16860
  %cmp59 = icmp eq i32 %33, 1, !dbg !16861
  %conv = zext i1 %cmp59 to i32, !dbg !16861
  %add = add nsw i32 %32, %conv, !dbg !16862
  store i32 %add, i32* %retval, align 4, !dbg !16863
  br label %return, !dbg !16863

return:                                           ; preds = %if.end58, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !16864
  ret i32 %34, !dbg !16864
}

; Function Attrs: nounwind
declare dso_local i32 @futimens(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @update_timespec(%struct.stat* %statbuf, %struct.timespec** %ts) #4 !dbg !16865 {
entry:
  %retval = alloca i1, align 1
  %statbuf.addr = alloca %struct.stat*, align 8
  %ts.addr = alloca %struct.timespec**, align 8
  %timespec = alloca %struct.timespec*, align 8, !ctir !956
  %tmp = alloca %struct.timespec, align 8
  %tmp30 = alloca %struct.timespec, align 8
  store %struct.stat* %statbuf, %struct.stat** %statbuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %statbuf.addr, metadata !16871, metadata !DIExpression()), !dbg !16872
  store %struct.timespec** %ts, %struct.timespec*** %ts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec*** %ts.addr, metadata !16873, metadata !DIExpression()), !dbg !16874
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec, metadata !16875, metadata !DIExpression()), !dbg !16876
  %0 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !16877
  %1 = load %struct.timespec*, %struct.timespec** %0, align 8, !dbg !16878, !ctir !956
  store %struct.timespec* %1, %struct.timespec** %timespec, align 8, !dbg !16876
  %2 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16879
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !16879, !ctir !956
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !16881, !ctir !952
  %3 = load i64, i64* %tv_nsec, align 8, !dbg !16881, !ctir !360
  %cmp = icmp eq i64 %3, 1073741822, !dbg !16882
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16883

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16884
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 1, !dbg !16884, !ctir !956
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !16885, !ctir !952
  %5 = load i64, i64* %tv_nsec2, align 8, !dbg !16885, !ctir !360
  %cmp3 = icmp eq i64 %5, 1073741822, !dbg !16886
  br i1 %cmp3, label %if.then, label %if.end, !dbg !16887

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !16888
  br label %return, !dbg !16888

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16889
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !16889, !ctir !956
  %tv_nsec5 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx4, i32 0, i32 1, !dbg !16891, !ctir !952
  %7 = load i64, i64* %tv_nsec5, align 8, !dbg !16891, !ctir !360
  %cmp6 = icmp eq i64 %7, 1073741823, !dbg !16892
  br i1 %cmp6, label %land.lhs.true7, label %if.end12, !dbg !16893

land.lhs.true7:                                   ; preds = %if.end
  %8 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16894
  %arrayidx8 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !16894, !ctir !956
  %tv_nsec9 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx8, i32 0, i32 1, !dbg !16895, !ctir !952
  %9 = load i64, i64* %tv_nsec9, align 8, !dbg !16895, !ctir !360
  %cmp10 = icmp eq i64 %9, 1073741823, !dbg !16896
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !16897

if.then11:                                        ; preds = %land.lhs.true7
  %10 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !16898
  store %struct.timespec* null, %struct.timespec** %10, align 8, !dbg !16900, !ctir !956
  store i1 false, i1* %retval, align 1, !dbg !16901
  br label %return, !dbg !16901

if.end12:                                         ; preds = %land.lhs.true7, %if.end
  %11 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16902
  %arrayidx13 = getelementptr inbounds %struct.timespec, %struct.timespec* %11, i64 0, !dbg !16902, !ctir !956
  %tv_nsec14 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx13, i32 0, i32 1, !dbg !16904, !ctir !952
  %12 = load i64, i64* %tv_nsec14, align 8, !dbg !16904, !ctir !360
  %cmp15 = icmp eq i64 %12, 1073741822, !dbg !16905
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !16906

if.then16:                                        ; preds = %if.end12
  %13 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16907
  %arrayidx17 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !16907, !ctir !956
  %14 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !16908
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %14) #14, !dbg !16909
  %15 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !16909
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0, !dbg !16909
  %17 = extractvalue { i64, i64 } %call, 0, !dbg !16909
  store i64 %17, i64* %16, align 8, !dbg !16909
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1, !dbg !16909
  %19 = extractvalue { i64, i64 } %call, 1, !dbg !16909
  store i64 %19, i64* %18, align 8, !dbg !16909
  %20 = bitcast %struct.timespec* %arrayidx17 to i8*, !dbg !16909
  %21 = bitcast %struct.timespec* %tmp to i8*, !dbg !16909
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false), !dbg !16909
  br label %if.end24, !dbg !16907

if.else:                                          ; preds = %if.end12
  %22 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16910
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %22, i64 0, !dbg !16910, !ctir !956
  %tv_nsec19 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx18, i32 0, i32 1, !dbg !16912, !ctir !952
  %23 = load i64, i64* %tv_nsec19, align 8, !dbg !16912, !ctir !360
  %cmp20 = icmp eq i64 %23, 1073741823, !dbg !16913
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !16914

if.then21:                                        ; preds = %if.else
  %24 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16915
  %arrayidx22 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 0, !dbg !16915, !ctir !956
  call void @gettime(%struct.timespec* %arrayidx22), !dbg !16916
  br label %if.end23, !dbg !16916

if.end23:                                         ; preds = %if.then21, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then16
  %25 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16917
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !16917, !ctir !956
  %tv_nsec26 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !16919, !ctir !952
  %26 = load i64, i64* %tv_nsec26, align 8, !dbg !16919, !ctir !360
  %cmp27 = icmp eq i64 %26, 1073741822, !dbg !16920
  br i1 %cmp27, label %if.then28, label %if.else32, !dbg !16921

if.then28:                                        ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16922
  %arrayidx29 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !16922, !ctir !956
  %28 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !16923
  %call31 = call { i64, i64 } @get_stat_mtime(%struct.stat* %28) #14, !dbg !16924
  %29 = bitcast %struct.timespec* %tmp30 to { i64, i64 }*, !dbg !16924
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !16924
  %31 = extractvalue { i64, i64 } %call31, 0, !dbg !16924
  store i64 %31, i64* %30, align 8, !dbg !16924
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !16924
  %33 = extractvalue { i64, i64 } %call31, 1, !dbg !16924
  store i64 %33, i64* %32, align 8, !dbg !16924
  %34 = bitcast %struct.timespec* %arrayidx29 to i8*, !dbg !16924
  %35 = bitcast %struct.timespec* %tmp30 to i8*, !dbg !16924
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !16924
  br label %if.end39, !dbg !16922

if.else32:                                        ; preds = %if.end24
  %36 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16925
  %arrayidx33 = getelementptr inbounds %struct.timespec, %struct.timespec* %36, i64 1, !dbg !16925, !ctir !956
  %tv_nsec34 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx33, i32 0, i32 1, !dbg !16927, !ctir !952
  %37 = load i64, i64* %tv_nsec34, align 8, !dbg !16927, !ctir !360
  %cmp35 = icmp eq i64 %37, 1073741823, !dbg !16928
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !16929

if.then36:                                        ; preds = %if.else32
  %38 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16930
  %arrayidx37 = getelementptr inbounds %struct.timespec, %struct.timespec* %38, i64 1, !dbg !16930, !ctir !956
  call void @gettime(%struct.timespec* %arrayidx37), !dbg !16931
  br label %if.end38, !dbg !16931

if.end38:                                         ; preds = %if.then36, %if.else32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then28
  store i1 false, i1* %retval, align 1, !dbg !16932
  br label %return, !dbg !16932

return:                                           ; preds = %if.end39, %if.then11, %if.then
  %39 = load i1, i1* %retval, align 1, !dbg !16933
  ret i1 %39, !dbg !16933
}

; Function Attrs: nounwind
declare dso_local i32 @futimesat(i32, i8*, %struct.timespec*) #2

; Function Attrs: nounwind
declare dso_local i32 @utimes(i8*, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !16934 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16937, metadata !DIExpression()), !dbg !16938
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !16939, metadata !DIExpression()), !dbg !16940
  %0 = load i8*, i8** %file.addr, align 8, !dbg !16941
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16942
  %call = call i32 @fdutimens(i32 -1, i8* %0, %struct.timespec* %1), !dbg !16943
  ret i32 %call, !dbg !16944
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !16945 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !951
  %ts = alloca %struct.timespec*, align 8, !ctir !956
  %adjustment_needed = alloca i32, align 4, !ctir !5
  %st = alloca %struct.stat, align 8, !ctir !16449
  %result = alloca i32, align 4, !ctir !5
  %tmp = alloca %struct.timespec, align 8
  %tmp25 = alloca %struct.timespec, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16946, metadata !DIExpression()), !dbg !16947
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !16948, metadata !DIExpression()), !dbg !16949
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !16950, metadata !DIExpression()), !dbg !16951
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !16952, metadata !DIExpression()), !dbg !16953
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16954
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !16954
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16954

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !16955, !ctir !951
  br label %cond.end, !dbg !16954

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16954

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !16954
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !16953
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !16956, metadata !DIExpression()), !dbg !16957
  store i32 0, i32* %adjustment_needed, align 4, !dbg !16957
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !16958, metadata !DIExpression()), !dbg !16959
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16960
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !16960
  br i1 %tobool1, label %if.then, label %if.end, !dbg !16962

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !16963, !ctir !951
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16965
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !16965, !ctir !16435
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !16965
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !16965
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !16965
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !16966, !ctir !951
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16967
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !16967, !ctir !16435
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !16967
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !16967
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !16967
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16968
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !16969
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !16970
  br label %if.end, !dbg !16971

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !16972
  %cmp = icmp slt i32 %9, 0, !dbg !16974
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !16975

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16976
  br label %return, !dbg !16976

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* @lutimensat_works_really, align 4, !dbg !16977
  %cmp7 = icmp sle i32 0, %10, !dbg !16979
  br i1 %cmp7, label %if.then8, label %if.end40, !dbg !16980

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %result, metadata !16981, metadata !DIExpression()), !dbg !16983
  %11 = load i32, i32* %adjustment_needed, align 4, !dbg !16984
  %cmp9 = icmp eq i32 %11, 2, !dbg !16986
  br i1 %cmp9, label %if.then10, label %if.end29, !dbg !16987

if.then10:                                        ; preds = %if.then8
  %12 = load i8*, i8** %file.addr, align 8, !dbg !16988
  %call11 = call i32 @lstat(i8* %12, %struct.stat* %st) #12, !dbg !16991
  %tobool12 = icmp ne i32 %call11, 0, !dbg !16991
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !16992

if.then13:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !16993
  br label %return, !dbg !16993

if.end14:                                         ; preds = %if.then10
  %13 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16994
  %arrayidx15 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !16994, !ctir !956
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx15, i32 0, i32 1, !dbg !16996, !ctir !952
  %14 = load i64, i64* %tv_nsec, align 8, !dbg !16996, !ctir !360
  %cmp16 = icmp eq i64 %14, 1073741822, !dbg !16997
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !16998

if.then17:                                        ; preds = %if.end14
  %15 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16999
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i64 0, !dbg !16999, !ctir !956
  %call19 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !17000
  %16 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17000
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !17000
  %18 = extractvalue { i64, i64 } %call19, 0, !dbg !17000
  store i64 %18, i64* %17, align 8, !dbg !17000
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !17000
  %20 = extractvalue { i64, i64 } %call19, 1, !dbg !17000
  store i64 %20, i64* %19, align 8, !dbg !17000
  %21 = bitcast %struct.timespec* %arrayidx18 to i8*, !dbg !17000
  %22 = bitcast %struct.timespec* %tmp to i8*, !dbg !17000
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false), !dbg !17000
  br label %if.end28, !dbg !16999

if.else:                                          ; preds = %if.end14
  %23 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17001
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %23, i64 1, !dbg !17001, !ctir !956
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !17003, !ctir !952
  %24 = load i64, i64* %tv_nsec21, align 8, !dbg !17003, !ctir !360
  %cmp22 = icmp eq i64 %24, 1073741822, !dbg !17004
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !17005

if.then23:                                        ; preds = %if.else
  %25 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17006
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !17006, !ctir !956
  %call26 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !17007
  %26 = bitcast %struct.timespec* %tmp25 to { i64, i64 }*, !dbg !17007
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0, !dbg !17007
  %28 = extractvalue { i64, i64 } %call26, 0, !dbg !17007
  store i64 %28, i64* %27, align 8, !dbg !17007
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1, !dbg !17007
  %30 = extractvalue { i64, i64 } %call26, 1, !dbg !17007
  store i64 %30, i64* %29, align 8, !dbg !17007
  %31 = bitcast %struct.timespec* %arrayidx24 to i8*, !dbg !17007
  %32 = bitcast %struct.timespec* %tmp25 to i8*, !dbg !17007
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false), !dbg !17007
  br label %if.end27, !dbg !17006

if.end27:                                         ; preds = %if.then23, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then17
  %33 = load i32, i32* %adjustment_needed, align 4, !dbg !17008
  %inc = add nsw i32 %33, 1, !dbg !17008
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !17008
  br label %if.end29, !dbg !17009

if.end29:                                         ; preds = %if.end28, %if.then8
  %34 = load i8*, i8** %file.addr, align 8, !dbg !17010
  %35 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17011
  %call30 = call i32 @utimensat(i32 -100, i8* %34, %struct.timespec* %35, i32 256) #12, !dbg !17012
  store i32 %call30, i32* %result, align 4, !dbg !17013
  %36 = load i32, i32* %result, align 4, !dbg !17014
  %cmp31 = icmp slt i32 0, %36, !dbg !17016
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !17017

if.then32:                                        ; preds = %if.end29
  %call33 = call i32* @__errno_location() #15, !dbg !17018
  store i32 38, i32* %call33, align 4, !dbg !17019, !ctir !5
  br label %if.end34, !dbg !17018

if.end34:                                         ; preds = %if.then32, %if.end29
  %37 = load i32, i32* %result, align 4, !dbg !17020
  %cmp35 = icmp eq i32 %37, 0, !dbg !17022
  br i1 %cmp35, label %if.then38, label %lor.lhs.false, !dbg !17023

lor.lhs.false:                                    ; preds = %if.end34
  %call36 = call i32* @__errno_location() #15, !dbg !17024
  %38 = load i32, i32* %call36, align 4, !dbg !17024, !ctir !5
  %cmp37 = icmp ne i32 %38, 38, !dbg !17025
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !17026

if.then38:                                        ; preds = %lor.lhs.false, %if.end34
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17027
  store i32 1, i32* @lutimensat_works_really, align 4, !dbg !17029
  %39 = load i32, i32* %result, align 4, !dbg !17030
  store i32 %39, i32* %retval, align 4, !dbg !17031
  br label %return, !dbg !17031

if.end39:                                         ; preds = %lor.lhs.false
  br label %if.end40, !dbg !17032

if.end40:                                         ; preds = %if.end39, %if.end6
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !17033
  %40 = load i32, i32* %adjustment_needed, align 4, !dbg !17034
  %tobool41 = icmp ne i32 %40, 0, !dbg !17034
  br i1 %tobool41, label %if.then42, label %if.end53, !dbg !17036

if.then42:                                        ; preds = %if.end40
  %41 = load i32, i32* %adjustment_needed, align 4, !dbg !17037
  %cmp43 = icmp ne i32 %41, 3, !dbg !17040
  br i1 %cmp43, label %land.lhs.true, label %if.end47, !dbg !17041

land.lhs.true:                                    ; preds = %if.then42
  %42 = load i8*, i8** %file.addr, align 8, !dbg !17042
  %call44 = call i32 @lstat(i8* %42, %struct.stat* %st) #12, !dbg !17043
  %tobool45 = icmp ne i32 %call44, 0, !dbg !17043
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !17044

if.then46:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !17045
  br label %return, !dbg !17045

if.end47:                                         ; preds = %land.lhs.true, %if.then42
  %43 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17046
  %tobool48 = icmp ne %struct.timespec* %43, null, !dbg !17046
  br i1 %tobool48, label %land.lhs.true49, label %if.end52, !dbg !17048

land.lhs.true49:                                  ; preds = %if.end47
  %call50 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !17049
  br i1 %call50, label %if.then51, label %if.end52, !dbg !17050

if.then51:                                        ; preds = %land.lhs.true49
  store i32 0, i32* %retval, align 4, !dbg !17051
  br label %return, !dbg !17051

if.end52:                                         ; preds = %land.lhs.true49, %if.end47
  br label %if.end53, !dbg !17052

if.end53:                                         ; preds = %if.end52, %if.end40
  %44 = load i32, i32* %adjustment_needed, align 4, !dbg !17053
  %tobool54 = icmp ne i32 %44, 0, !dbg !17053
  br i1 %tobool54, label %if.end59, label %land.lhs.true55, !dbg !17055

land.lhs.true55:                                  ; preds = %if.end53
  %45 = load i8*, i8** %file.addr, align 8, !dbg !17056
  %call56 = call i32 @lstat(i8* %45, %struct.stat* %st) #12, !dbg !17057
  %tobool57 = icmp ne i32 %call56, 0, !dbg !17057
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !17058

if.then58:                                        ; preds = %land.lhs.true55
  store i32 -1, i32* %retval, align 4, !dbg !17059
  br label %return, !dbg !17059

if.end59:                                         ; preds = %land.lhs.true55, %if.end53
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !17060, !ctir !16449
  %46 = load i32, i32* %st_mode, align 8, !dbg !17060, !ctir !165
  %and = and i32 %46, 61440, !dbg !17060
  %cmp60 = icmp eq i32 %and, 40960, !dbg !17060
  br i1 %cmp60, label %if.end63, label %if.then61, !dbg !17062

if.then61:                                        ; preds = %if.end59
  %47 = load i8*, i8** %file.addr, align 8, !dbg !17063
  %48 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17064
  %call62 = call i32 @fdutimens(i32 -1, i8* %47, %struct.timespec* %48), !dbg !17065
  store i32 %call62, i32* %retval, align 4, !dbg !17066
  br label %return, !dbg !17066

if.end63:                                         ; preds = %if.end59
  %call64 = call i32* @__errno_location() #15, !dbg !17067
  store i32 38, i32* %call64, align 4, !dbg !17068, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !17069
  br label %return, !dbg !17069

return:                                           ; preds = %if.end63, %if.then61, %if.then58, %if.then51, %if.then46, %if.then38, %if.then13, %if.then5
  %49 = load i32, i32* %retval, align 4, !dbg !17070
  ret i32 %49, !dbg !17070
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #4 !dbg !17071 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors.addr = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17077, metadata !DIExpression()), !dbg !17078
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17079, metadata !DIExpression()), !dbg !17080
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17081, metadata !DIExpression()), !dbg !17082
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17083, metadata !DIExpression()), !dbg !17084
  store i8** %authors, i8*** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !17085, metadata !DIExpression()), !dbg !17086
  store i64 %n_authors, i64* %n_authors.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !17087, metadata !DIExpression()), !dbg !17088
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !17089
  %tobool = icmp ne i8* %0, null, !dbg !17089
  br i1 %tobool, label %if.then, label %if.else, !dbg !17091

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17092
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !17093
  %3 = load i8*, i8** %package.addr, align 8, !dbg !17094
  %4 = load i8*, i8** %version.addr, align 8, !dbg !17095
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.370, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !17096
  br label %if.end, !dbg !17096

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17097
  %6 = load i8*, i8** %package.addr, align 8, !dbg !17098
  %7 = load i8*, i8** %version.addr, align 8, !dbg !17099
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.371, i64 0, i64 0), i8* %6, i8* %7), !dbg !17100
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17101
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.372, i64 0, i64 0)) #12, !dbg !17102
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !17103
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17104
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.373, i64 0, i64 0), %struct._IO_FILE* %9), !dbg !17104
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17105
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.374, i64 0, i64 0)) #12, !dbg !17106
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* %call5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.375, i64 0, i64 0)), !dbg !17107
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17108
  %call7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.373, i64 0, i64 0), %struct._IO_FILE* %11), !dbg !17108
  %12 = load i64, i64* %n_authors.addr, align 8, !dbg !17109
  switch i64 %12, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb8
    i64 2, label %sw.bb11
    i64 3, label %sw.bb16
    i64 4, label %sw.bb22
    i64 5, label %sw.bb29
    i64 6, label %sw.bb37
    i64 7, label %sw.bb46
    i64 8, label %sw.bb56
    i64 9, label %sw.bb67
  ], !dbg !17110

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !17111

sw.bb8:                                           ; preds = %if.end
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17113
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.376, i64 0, i64 0)) #12, !dbg !17114
  %14 = load i8**, i8*** %authors.addr, align 8, !dbg !17115
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 0, !dbg !17115, !ctir !992
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !17115
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* %call9, i8* %15), !dbg !17116
  br label %sw.epilog, !dbg !17117

sw.bb11:                                          ; preds = %if.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17118
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.377, i64 0, i64 0)) #12, !dbg !17119
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !17120
  %arrayidx13 = getelementptr inbounds i8*, i8** %17, i64 0, !dbg !17120, !ctir !992
  %18 = load i8*, i8** %arrayidx13, align 8, !dbg !17120
  %19 = load i8**, i8*** %authors.addr, align 8, !dbg !17121
  %arrayidx14 = getelementptr inbounds i8*, i8** %19, i64 1, !dbg !17121, !ctir !992
  %20 = load i8*, i8** %arrayidx14, align 8, !dbg !17121
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call12, i8* %18, i8* %20), !dbg !17122
  br label %sw.epilog, !dbg !17123

sw.bb16:                                          ; preds = %if.end
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17124
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.378, i64 0, i64 0)) #12, !dbg !17125
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !17126
  %arrayidx18 = getelementptr inbounds i8*, i8** %22, i64 0, !dbg !17126, !ctir !992
  %23 = load i8*, i8** %arrayidx18, align 8, !dbg !17126
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !17127
  %arrayidx19 = getelementptr inbounds i8*, i8** %24, i64 1, !dbg !17127, !ctir !992
  %25 = load i8*, i8** %arrayidx19, align 8, !dbg !17127
  %26 = load i8**, i8*** %authors.addr, align 8, !dbg !17128
  %arrayidx20 = getelementptr inbounds i8*, i8** %26, i64 2, !dbg !17128, !ctir !992
  %27 = load i8*, i8** %arrayidx20, align 8, !dbg !17128
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* %call17, i8* %23, i8* %25, i8* %27), !dbg !17129
  br label %sw.epilog, !dbg !17130

sw.bb22:                                          ; preds = %if.end
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17131
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.379, i64 0, i64 0)) #12, !dbg !17132
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !17133
  %arrayidx24 = getelementptr inbounds i8*, i8** %29, i64 0, !dbg !17133, !ctir !992
  %30 = load i8*, i8** %arrayidx24, align 8, !dbg !17133
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !17134
  %arrayidx25 = getelementptr inbounds i8*, i8** %31, i64 1, !dbg !17134, !ctir !992
  %32 = load i8*, i8** %arrayidx25, align 8, !dbg !17134
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !17135
  %arrayidx26 = getelementptr inbounds i8*, i8** %33, i64 2, !dbg !17135, !ctir !992
  %34 = load i8*, i8** %arrayidx26, align 8, !dbg !17135
  %35 = load i8**, i8*** %authors.addr, align 8, !dbg !17136
  %arrayidx27 = getelementptr inbounds i8*, i8** %35, i64 3, !dbg !17136, !ctir !992
  %36 = load i8*, i8** %arrayidx27, align 8, !dbg !17136
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* %call23, i8* %30, i8* %32, i8* %34, i8* %36), !dbg !17137
  br label %sw.epilog, !dbg !17138

sw.bb29:                                          ; preds = %if.end
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17139
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.380, i64 0, i64 0)) #12, !dbg !17140
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !17141
  %arrayidx31 = getelementptr inbounds i8*, i8** %38, i64 0, !dbg !17141, !ctir !992
  %39 = load i8*, i8** %arrayidx31, align 8, !dbg !17141
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !17142
  %arrayidx32 = getelementptr inbounds i8*, i8** %40, i64 1, !dbg !17142, !ctir !992
  %41 = load i8*, i8** %arrayidx32, align 8, !dbg !17142
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !17143
  %arrayidx33 = getelementptr inbounds i8*, i8** %42, i64 2, !dbg !17143, !ctir !992
  %43 = load i8*, i8** %arrayidx33, align 8, !dbg !17143
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !17144
  %arrayidx34 = getelementptr inbounds i8*, i8** %44, i64 3, !dbg !17144, !ctir !992
  %45 = load i8*, i8** %arrayidx34, align 8, !dbg !17144
  %46 = load i8**, i8*** %authors.addr, align 8, !dbg !17145
  %arrayidx35 = getelementptr inbounds i8*, i8** %46, i64 4, !dbg !17145, !ctir !992
  %47 = load i8*, i8** %arrayidx35, align 8, !dbg !17145
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* %call30, i8* %39, i8* %41, i8* %43, i8* %45, i8* %47), !dbg !17146
  br label %sw.epilog, !dbg !17147

sw.bb37:                                          ; preds = %if.end
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17148
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.381, i64 0, i64 0)) #12, !dbg !17149
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !17150
  %arrayidx39 = getelementptr inbounds i8*, i8** %49, i64 0, !dbg !17150, !ctir !992
  %50 = load i8*, i8** %arrayidx39, align 8, !dbg !17150
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !17151
  %arrayidx40 = getelementptr inbounds i8*, i8** %51, i64 1, !dbg !17151, !ctir !992
  %52 = load i8*, i8** %arrayidx40, align 8, !dbg !17151
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !17152
  %arrayidx41 = getelementptr inbounds i8*, i8** %53, i64 2, !dbg !17152, !ctir !992
  %54 = load i8*, i8** %arrayidx41, align 8, !dbg !17152
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !17153
  %arrayidx42 = getelementptr inbounds i8*, i8** %55, i64 3, !dbg !17153, !ctir !992
  %56 = load i8*, i8** %arrayidx42, align 8, !dbg !17153
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !17154
  %arrayidx43 = getelementptr inbounds i8*, i8** %57, i64 4, !dbg !17154, !ctir !992
  %58 = load i8*, i8** %arrayidx43, align 8, !dbg !17154
  %59 = load i8**, i8*** %authors.addr, align 8, !dbg !17155
  %arrayidx44 = getelementptr inbounds i8*, i8** %59, i64 5, !dbg !17155, !ctir !992
  %60 = load i8*, i8** %arrayidx44, align 8, !dbg !17155
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* %call38, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58, i8* %60), !dbg !17156
  br label %sw.epilog, !dbg !17157

sw.bb46:                                          ; preds = %if.end
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17158
  %call47 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.382, i64 0, i64 0)) #12, !dbg !17159
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !17160
  %arrayidx48 = getelementptr inbounds i8*, i8** %62, i64 0, !dbg !17160, !ctir !992
  %63 = load i8*, i8** %arrayidx48, align 8, !dbg !17160
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !17161
  %arrayidx49 = getelementptr inbounds i8*, i8** %64, i64 1, !dbg !17161, !ctir !992
  %65 = load i8*, i8** %arrayidx49, align 8, !dbg !17161
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !17162
  %arrayidx50 = getelementptr inbounds i8*, i8** %66, i64 2, !dbg !17162, !ctir !992
  %67 = load i8*, i8** %arrayidx50, align 8, !dbg !17162
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !17163
  %arrayidx51 = getelementptr inbounds i8*, i8** %68, i64 3, !dbg !17163, !ctir !992
  %69 = load i8*, i8** %arrayidx51, align 8, !dbg !17163
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !17164
  %arrayidx52 = getelementptr inbounds i8*, i8** %70, i64 4, !dbg !17164, !ctir !992
  %71 = load i8*, i8** %arrayidx52, align 8, !dbg !17164
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !17165
  %arrayidx53 = getelementptr inbounds i8*, i8** %72, i64 5, !dbg !17165, !ctir !992
  %73 = load i8*, i8** %arrayidx53, align 8, !dbg !17165
  %74 = load i8**, i8*** %authors.addr, align 8, !dbg !17166
  %arrayidx54 = getelementptr inbounds i8*, i8** %74, i64 6, !dbg !17166, !ctir !992
  %75 = load i8*, i8** %arrayidx54, align 8, !dbg !17166
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %call47, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73, i8* %75), !dbg !17167
  br label %sw.epilog, !dbg !17168

sw.bb56:                                          ; preds = %if.end
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17169
  %call57 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.383, i64 0, i64 0)) #12, !dbg !17170
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !17171
  %arrayidx58 = getelementptr inbounds i8*, i8** %77, i64 0, !dbg !17171, !ctir !992
  %78 = load i8*, i8** %arrayidx58, align 8, !dbg !17171
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !17172
  %arrayidx59 = getelementptr inbounds i8*, i8** %79, i64 1, !dbg !17172, !ctir !992
  %80 = load i8*, i8** %arrayidx59, align 8, !dbg !17172
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !17173
  %arrayidx60 = getelementptr inbounds i8*, i8** %81, i64 2, !dbg !17173, !ctir !992
  %82 = load i8*, i8** %arrayidx60, align 8, !dbg !17173
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !17174
  %arrayidx61 = getelementptr inbounds i8*, i8** %83, i64 3, !dbg !17174, !ctir !992
  %84 = load i8*, i8** %arrayidx61, align 8, !dbg !17174
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !17175
  %arrayidx62 = getelementptr inbounds i8*, i8** %85, i64 4, !dbg !17175, !ctir !992
  %86 = load i8*, i8** %arrayidx62, align 8, !dbg !17175
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !17176
  %arrayidx63 = getelementptr inbounds i8*, i8** %87, i64 5, !dbg !17176, !ctir !992
  %88 = load i8*, i8** %arrayidx63, align 8, !dbg !17176
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !17177
  %arrayidx64 = getelementptr inbounds i8*, i8** %89, i64 6, !dbg !17177, !ctir !992
  %90 = load i8*, i8** %arrayidx64, align 8, !dbg !17177
  %91 = load i8**, i8*** %authors.addr, align 8, !dbg !17178
  %arrayidx65 = getelementptr inbounds i8*, i8** %91, i64 7, !dbg !17178, !ctir !992
  %92 = load i8*, i8** %arrayidx65, align 8, !dbg !17178
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* %call57, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90, i8* %92), !dbg !17179
  br label %sw.epilog, !dbg !17180

sw.bb67:                                          ; preds = %if.end
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17181
  %call68 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.384, i64 0, i64 0)) #12, !dbg !17182
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !17183
  %arrayidx69 = getelementptr inbounds i8*, i8** %94, i64 0, !dbg !17183, !ctir !992
  %95 = load i8*, i8** %arrayidx69, align 8, !dbg !17183
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !17184
  %arrayidx70 = getelementptr inbounds i8*, i8** %96, i64 1, !dbg !17184, !ctir !992
  %97 = load i8*, i8** %arrayidx70, align 8, !dbg !17184
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !17185
  %arrayidx71 = getelementptr inbounds i8*, i8** %98, i64 2, !dbg !17185, !ctir !992
  %99 = load i8*, i8** %arrayidx71, align 8, !dbg !17185
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !17186
  %arrayidx72 = getelementptr inbounds i8*, i8** %100, i64 3, !dbg !17186, !ctir !992
  %101 = load i8*, i8** %arrayidx72, align 8, !dbg !17186
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !17187
  %arrayidx73 = getelementptr inbounds i8*, i8** %102, i64 4, !dbg !17187, !ctir !992
  %103 = load i8*, i8** %arrayidx73, align 8, !dbg !17187
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !17188
  %arrayidx74 = getelementptr inbounds i8*, i8** %104, i64 5, !dbg !17188, !ctir !992
  %105 = load i8*, i8** %arrayidx74, align 8, !dbg !17188
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !17189
  %arrayidx75 = getelementptr inbounds i8*, i8** %106, i64 6, !dbg !17189, !ctir !992
  %107 = load i8*, i8** %arrayidx75, align 8, !dbg !17189
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !17190
  %arrayidx76 = getelementptr inbounds i8*, i8** %108, i64 7, !dbg !17190, !ctir !992
  %109 = load i8*, i8** %arrayidx76, align 8, !dbg !17190
  %110 = load i8**, i8*** %authors.addr, align 8, !dbg !17191
  %arrayidx77 = getelementptr inbounds i8*, i8** %110, i64 8, !dbg !17191, !ctir !992
  %111 = load i8*, i8** %arrayidx77, align 8, !dbg !17191
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* %call68, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109, i8* %111), !dbg !17192
  br label %sw.epilog, !dbg !17193

sw.default:                                       ; preds = %if.end
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17194
  %call79 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.385, i64 0, i64 0)) #12, !dbg !17195
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !17196
  %arrayidx80 = getelementptr inbounds i8*, i8** %113, i64 0, !dbg !17196, !ctir !992
  %114 = load i8*, i8** %arrayidx80, align 8, !dbg !17196
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !17197
  %arrayidx81 = getelementptr inbounds i8*, i8** %115, i64 1, !dbg !17197, !ctir !992
  %116 = load i8*, i8** %arrayidx81, align 8, !dbg !17197
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !17198
  %arrayidx82 = getelementptr inbounds i8*, i8** %117, i64 2, !dbg !17198, !ctir !992
  %118 = load i8*, i8** %arrayidx82, align 8, !dbg !17198
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !17199
  %arrayidx83 = getelementptr inbounds i8*, i8** %119, i64 3, !dbg !17199, !ctir !992
  %120 = load i8*, i8** %arrayidx83, align 8, !dbg !17199
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !17200
  %arrayidx84 = getelementptr inbounds i8*, i8** %121, i64 4, !dbg !17200, !ctir !992
  %122 = load i8*, i8** %arrayidx84, align 8, !dbg !17200
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !17201
  %arrayidx85 = getelementptr inbounds i8*, i8** %123, i64 5, !dbg !17201, !ctir !992
  %124 = load i8*, i8** %arrayidx85, align 8, !dbg !17201
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !17202
  %arrayidx86 = getelementptr inbounds i8*, i8** %125, i64 6, !dbg !17202, !ctir !992
  %126 = load i8*, i8** %arrayidx86, align 8, !dbg !17202
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !17203
  %arrayidx87 = getelementptr inbounds i8*, i8** %127, i64 7, !dbg !17203, !ctir !992
  %128 = load i8*, i8** %arrayidx87, align 8, !dbg !17203
  %129 = load i8**, i8*** %authors.addr, align 8, !dbg !17204
  %arrayidx88 = getelementptr inbounds i8*, i8** %129, i64 8, !dbg !17204, !ctir !992
  %130 = load i8*, i8** %arrayidx88, align 8, !dbg !17204
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* %call79, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128, i8* %130), !dbg !17205
  br label %sw.epilog, !dbg !17206

sw.epilog:                                        ; preds = %sw.default, %sw.bb67, %sw.bb56, %sw.bb46, %sw.bb37, %sw.bb29, %sw.bb22, %sw.bb16, %sw.bb11, %sw.bb8, %sw.bb
  ret void, !dbg !17207
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #4 !dbg !17208 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors = alloca i64, align 8, !ctir !52
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17211, metadata !DIExpression()), !dbg !17212
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17213, metadata !DIExpression()), !dbg !17214
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17215, metadata !DIExpression()), !dbg !17216
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17217, metadata !DIExpression()), !dbg !17218
  store i8** %authors, i8*** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !17219, metadata !DIExpression()), !dbg !17220
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !17221, metadata !DIExpression()), !dbg !17222
  store i64 0, i64* %n_authors, align 8, !dbg !17223
  br label %for.cond, !dbg !17225

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !17226
  %1 = load i64, i64* %n_authors, align 8, !dbg !17228
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !17226, !ctir !992
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !17226
  %tobool = icmp ne i8* %2, null, !dbg !17229
  br i1 %tobool, label %for.body, label %for.end, !dbg !17229

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !17229

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !17230
  %inc = add i64 %3, 1, !dbg !17230
  store i64 %inc, i64* %n_authors, align 8, !dbg !17230
  br label %for.cond, !dbg !17231, !llvm.loop !17232

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17234
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !17235
  %6 = load i8*, i8** %package.addr, align 8, !dbg !17236
  %7 = load i8*, i8** %version.addr, align 8, !dbg !17237
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !17238
  %9 = load i64, i64* %n_authors, align 8, !dbg !17239
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !17240
  ret void, !dbg !17241
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #4 !dbg !17242 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8, !ctir !52
  %authtab = alloca [10 x i8*], align 16, !ctir !1415
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17246, metadata !DIExpression()), !dbg !17247
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17248, metadata !DIExpression()), !dbg !17249
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17250, metadata !DIExpression()), !dbg !17251
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17252, metadata !DIExpression()), !dbg !17253
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !17254, metadata !DIExpression()), !dbg !17255
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !17256, metadata !DIExpression()), !dbg !17257
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !17258, metadata !DIExpression()), !dbg !17259
  store i64 0, i64* %n_authors, align 8, !dbg !17260
  br label %for.cond, !dbg !17262

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !17263
  %cmp = icmp ult i64 %0, 10, !dbg !17265
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !17266

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !17267
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !17267
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !17267
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !17267
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !17267

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !17267
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !17267
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !17267
  %4 = bitcast i8* %3 to i8**, !dbg !17267
  %5 = add i32 %gp_offset, 8, !dbg !17267
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !17267
  br label %vaarg.end, !dbg !17267

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !17267
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !17267
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !17267
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !17267
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !17267
  br label %vaarg.end, !dbg !17267

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !17267
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !17267
  %8 = load i64, i64* %n_authors, align 8, !dbg !17268
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !17269, !ctir !1415
  store i8* %7, i8** %arrayidx, align 8, !dbg !17270
  %cmp1 = icmp ne i8* %7, null, !dbg !17271
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !17272
  br i1 %9, label %for.body, label %for.end, !dbg !17273

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !17273

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !17274
  %inc = add i64 %10, 1, !dbg !17274
  store i64 %inc, i64* %n_authors, align 8, !dbg !17274
  br label %for.cond, !dbg !17275, !llvm.loop !17276

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17278
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !17279
  %13 = load i8*, i8** %package.addr, align 8, !dbg !17280
  %14 = load i8*, i8** %version.addr, align 8, !dbg !17281
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !17282, !ctir !1415
  %15 = load i64, i64* %n_authors, align 8, !dbg !17283
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !17284
  ret void, !dbg !17285
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #4 !dbg !17286 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1416
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17289, metadata !DIExpression()), !dbg !17290
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17291, metadata !DIExpression()), !dbg !17292
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17293, metadata !DIExpression()), !dbg !17294
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17295, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !17297, metadata !DIExpression()), !dbg !17298
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17299, !ctir !1416
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !17299
  call void @llvm.va_start(i8* %arraydecay1), !dbg !17299
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17300
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !17301
  %2 = load i8*, i8** %package.addr, align 8, !dbg !17302
  %3 = load i8*, i8** %version.addr, align 8, !dbg !17303
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17304, !ctir !1416
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !17305
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17306, !ctir !1416
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !17306
  call void @llvm.va_end(i8* %arraydecay34), !dbg !17306
  ret void, !dbg !17307
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #4 !dbg !17308 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !17309
  %call = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.373, i64 0, i64 0), %struct._IO_FILE* %0), !dbg !17309
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.388, i64 0, i64 0)) #12, !dbg !17310
  %call2 = call i32 (i8*, ...) @printf(i8* %call1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.389, i64 0, i64 0)), !dbg !17311
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.390, i64 0, i64 0)) #12, !dbg !17312
  %call4 = call i32 (i8*, ...) @printf(i8* %call3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19.391, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20.392, i64 0, i64 0)), !dbg !17313
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.393, i64 0, i64 0)) #12, !dbg !17314
  %call6 = call i32 (i8*, ...) @printf(i8* %call5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.394, i64 0, i64 0)), !dbg !17315
  ret void, !dbg !17316
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @can_write_any_file() #4 !dbg !978 {
entry:
  %can = alloca i8, align 1, !ctir !139
  %0 = load i8, i8* @can_write_any_file.initialized, align 1, !dbg !17317
  %tobool = trunc i8 %0 to i1, !dbg !17317
  br i1 %tobool, label %if.end, label %if.then, !dbg !17319

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %can, metadata !17320, metadata !DIExpression()), !dbg !17322
  store i8 0, i8* %can, align 1, !dbg !17322
  %call = call i32 @geteuid() #12, !dbg !17323
  %cmp = icmp eq i32 %call, 0, !dbg !17324
  %frombool = zext i1 %cmp to i8, !dbg !17325
  store i8 %frombool, i8* %can, align 1, !dbg !17325
  %1 = load i8, i8* %can, align 1, !dbg !17326
  %tobool1 = trunc i8 %1 to i1, !dbg !17326
  %frombool2 = zext i1 %tobool1 to i8, !dbg !17327
  store i8 %frombool2, i8* @can_write_any_file.can_write, align 1, !dbg !17327
  store i8 1, i8* @can_write_any_file.initialized, align 1, !dbg !17328
  br label %if.end, !dbg !17329

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* @can_write_any_file.can_write, align 1, !dbg !17330
  %tobool3 = trunc i8 %2 to i1, !dbg !17330
  ret i1 %tobool3, !dbg !17331
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #4 !dbg !17332 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17336, metadata !DIExpression()), !dbg !17337
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17338, metadata !DIExpression()), !dbg !17339
  %0 = load i64, i64* %s.addr, align 8, !dbg !17340
  %div = udiv i64 9223372036854775807, %0, !dbg !17340
  %1 = load i64, i64* %n.addr, align 8, !dbg !17340
  %cmp = icmp ult i64 %div, %1, !dbg !17340
  br i1 %cmp, label %if.then, label %if.end, !dbg !17342

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !17343
  unreachable, !dbg !17343

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17344
  %3 = load i64, i64* %s.addr, align 8, !dbg !17345
  %mul = mul i64 %2, %3, !dbg !17346
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !17347
  ret i8* %call, !dbg !17348
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #4 !dbg !17349 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !47
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17353, metadata !DIExpression()), !dbg !17354
  call void @llvm.dbg.declare(metadata i8** %p, metadata !17355, metadata !DIExpression()), !dbg !17356
  %0 = load i64, i64* %n.addr, align 8, !dbg !17357
  %call = call noalias i8* @malloc(i64 %0) #12, !dbg !17358
  store i8* %call, i8** %p, align 8, !dbg !17356
  %1 = load i8*, i8** %p, align 8, !dbg !17359
  %tobool = icmp ne i8* %1, null, !dbg !17359
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17361

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17362
  %cmp = icmp ne i64 %2, 0, !dbg !17363
  br i1 %cmp, label %if.then, label %if.end, !dbg !17364

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #16, !dbg !17365
  unreachable, !dbg !17365

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !17366
  ret i8* %3, !dbg !17367
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #4 !dbg !17368 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17371, metadata !DIExpression()), !dbg !17372
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17373, metadata !DIExpression()), !dbg !17374
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17375, metadata !DIExpression()), !dbg !17376
  %0 = load i64, i64* %s.addr, align 8, !dbg !17377
  %div = udiv i64 9223372036854775807, %0, !dbg !17377
  %1 = load i64, i64* %n.addr, align 8, !dbg !17377
  %cmp = icmp ult i64 %div, %1, !dbg !17377
  br i1 %cmp, label %if.then, label %if.end, !dbg !17379

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !17380
  unreachable, !dbg !17380

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17381
  %3 = load i64, i64* %n.addr, align 8, !dbg !17382
  %4 = load i64, i64* %s.addr, align 8, !dbg !17383
  %mul = mul i64 %3, %4, !dbg !17384
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !17385
  ret i8* %call, !dbg !17386
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #4 !dbg !17387 {
entry:
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17390, metadata !DIExpression()), !dbg !17391
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17392, metadata !DIExpression()), !dbg !17393
  %0 = load i64, i64* %n.addr, align 8, !dbg !17394
  %tobool = icmp ne i64 %0, 0, !dbg !17394
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17396

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !17397
  %tobool1 = icmp ne i8* %1, null, !dbg !17397
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17398

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17399
  call void @free(i8* %2) #12, !dbg !17401
  store i8* null, i8** %retval, align 8, !dbg !17402
  br label %return, !dbg !17402

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !17403
  %4 = load i64, i64* %n.addr, align 8, !dbg !17404
  %call = call i8* @realloc(i8* %3, i64 %4) #12, !dbg !17405
  store i8* %call, i8** %p.addr, align 8, !dbg !17406
  %5 = load i8*, i8** %p.addr, align 8, !dbg !17407
  %tobool2 = icmp ne i8* %5, null, !dbg !17407
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !17409

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !17410
  %tobool4 = icmp ne i64 %6, 0, !dbg !17410
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !17411

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #16, !dbg !17412
  unreachable, !dbg !17412

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !17413
  store i8* %7, i8** %retval, align 8, !dbg !17414
  br label %return, !dbg !17414

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !17415
  ret i8* %8, !dbg !17415
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #4 !dbg !17416 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !52
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17419, metadata !DIExpression()), !dbg !17420
  store i64* %pn, i64** %pn.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !17421, metadata !DIExpression()), !dbg !17422
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17423, metadata !DIExpression()), !dbg !17424
  call void @llvm.dbg.declare(metadata i64* %n, metadata !17425, metadata !DIExpression()), !dbg !17426
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !17427
  %1 = load i64, i64* %0, align 8, !dbg !17428, !ctir !52
  store i64 %1, i64* %n, align 8, !dbg !17426
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17429
  %tobool = icmp ne i8* %2, null, !dbg !17429
  br i1 %tobool, label %if.else, label %if.then, !dbg !17431

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !17432
  %tobool1 = icmp ne i64 %3, 0, !dbg !17432
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !17435

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !17436
  %div = udiv i64 128, %4, !dbg !17438
  store i64 %div, i64* %n, align 8, !dbg !17439
  %5 = load i64, i64* %n, align 8, !dbg !17440
  %tobool3 = icmp ne i64 %5, 0, !dbg !17441
  %lnot = xor i1 %tobool3, true, !dbg !17441
  %lnot.ext = zext i1 %lnot to i32, !dbg !17441
  %conv = sext i32 %lnot.ext to i64, !dbg !17441
  %6 = load i64, i64* %n, align 8, !dbg !17442
  %add = add i64 %6, %conv, !dbg !17442
  store i64 %add, i64* %n, align 8, !dbg !17442
  br label %if.end, !dbg !17443

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !17444
  %div4 = udiv i64 9223372036854775807, %7, !dbg !17444
  %8 = load i64, i64* %n, align 8, !dbg !17444
  %cmp = icmp ult i64 %div4, %8, !dbg !17444
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !17446

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #16, !dbg !17447
  unreachable, !dbg !17447

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !17448

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !17449
  %div8 = udiv i64 6148914691236517204, %9, !dbg !17452
  %10 = load i64, i64* %n, align 8, !dbg !17453
  %cmp9 = icmp ule i64 %div8, %10, !dbg !17454
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !17455

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #16, !dbg !17456
  unreachable, !dbg !17456

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !17457
  %div13 = udiv i64 %11, 2, !dbg !17458
  %add14 = add i64 %div13, 1, !dbg !17459
  %12 = load i64, i64* %n, align 8, !dbg !17460
  %add15 = add i64 %12, %add14, !dbg !17460
  store i64 %add15, i64* %n, align 8, !dbg !17460
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !17461
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !17462
  store i64 %13, i64* %14, align 8, !dbg !17463, !ctir !52
  %15 = load i8*, i8** %p.addr, align 8, !dbg !17464
  %16 = load i64, i64* %n, align 8, !dbg !17465
  %17 = load i64, i64* %s.addr, align 8, !dbg !17466
  %mul = mul i64 %16, %17, !dbg !17467
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !17468
  ret i8* %call, !dbg !17469
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #4 !dbg !17470 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17473, metadata !DIExpression()), !dbg !17474
  %0 = load i64, i64* %n.addr, align 8, !dbg !17475
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17475
  ret i8* %call, !dbg !17476
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #4 !dbg !17477 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17480, metadata !DIExpression()), !dbg !17481
  store i64* %pn, i64** %pn.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !17482, metadata !DIExpression()), !dbg !17483
  %0 = load i8*, i8** %p.addr, align 8, !dbg !17484
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !17485
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !17486
  ret i8* %call, !dbg !17487
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #4 !dbg !17488 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17489, metadata !DIExpression()), !dbg !17490
  %0 = load i64, i64* %s.addr, align 8, !dbg !17491
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17492
  %1 = load i64, i64* %s.addr, align 8, !dbg !17493
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !17494
  ret i8* %call, !dbg !17495
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #4 !dbg !17496 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !47
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17497, metadata !DIExpression()), !dbg !17498
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17499, metadata !DIExpression()), !dbg !17500
  call void @llvm.dbg.declare(metadata i8** %p, metadata !17501, metadata !DIExpression()), !dbg !17502
  %0 = load i64, i64* %s.addr, align 8, !dbg !17503
  %div = udiv i64 9223372036854775807, %0, !dbg !17503
  %1 = load i64, i64* %n.addr, align 8, !dbg !17503
  %cmp = icmp ult i64 %div, %1, !dbg !17503
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17505

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17506
  %3 = load i64, i64* %s.addr, align 8, !dbg !17507
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #12, !dbg !17508
  store i8* %call, i8** %p, align 8, !dbg !17509
  %tobool = icmp ne i8* %call, null, !dbg !17509
  br i1 %tobool, label %if.end, label %if.then, !dbg !17510

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #16, !dbg !17511
  unreachable, !dbg !17511

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !17512
  ret i8* %4, !dbg !17513
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #4 !dbg !17514 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17515, metadata !DIExpression()), !dbg !17516
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17517, metadata !DIExpression()), !dbg !17518
  %0 = load i64, i64* %s.addr, align 8, !dbg !17519
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17520
  %1 = load i8*, i8** %p.addr, align 8, !dbg !17521
  %2 = load i64, i64* %s.addr, align 8, !dbg !17522
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !17523
  ret i8* %call, !dbg !17524
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #4 !dbg !17525 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !17526, metadata !DIExpression()), !dbg !17527
  %0 = load i8*, i8** %string.addr, align 8, !dbg !17528
  %1 = load i8*, i8** %string.addr, align 8, !dbg !17529
  %call = call i64 @strlen(i8* %1) #14, !dbg !17530
  %add = add i64 %call, 1, !dbg !17531
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !17532
  ret i8* %call1, !dbg !17533
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #0 !dbg !17534 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !17536
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.415, i64 0, i64 0)) #12, !dbg !17537
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.416, i64 0, i64 0), i8* %call), !dbg !17538
  call void @abort() #13, !dbg !17539
  unreachable, !dbg !17539
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.FTS* @xfts_open(i8** %argv, i32 %options, i32 (%struct._ftsent**, %struct._ftsent**)* %compar) #4 !dbg !17540 {
entry:
  %argv.addr = alloca i8**, align 8
  %options.addr = alloca i32, align 4
  %compar.addr = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8
  %fts = alloca %struct.FTS*, align 8, !ctir !1473
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !17549, metadata !DIExpression()), !dbg !17550
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !17551, metadata !DIExpression()), !dbg !17552
  store i32 (%struct._ftsent**, %struct._ftsent**)* %compar, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, metadata !17553, metadata !DIExpression()), !dbg !17554
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts, metadata !17555, metadata !DIExpression()), !dbg !17556
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !17557
  %1 = load i32, i32* %options.addr, align 4, !dbg !17558
  %or = or i32 %1, 512, !dbg !17559
  %2 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !17560
  %call = call %struct.FTS* @rpl_fts_open(i8** %0, i32 %or, i32 (%struct._ftsent**, %struct._ftsent**)* %2), !dbg !17561
  store %struct.FTS* %call, %struct.FTS** %fts, align 8, !dbg !17556
  %3 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !17562
  %cmp = icmp eq %struct.FTS* %3, null, !dbg !17564
  br i1 %cmp, label %if.then, label %if.end, !dbg !17565

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !17566
  %4 = load i32, i32* %call1, align 4, !dbg !17566, !ctir !5
  %cmp2 = icmp ne i32 %4, 22, !dbg !17566
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !17566

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !17566

cond.false:                                       ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.419, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.420, i64 0, i64 0), i32 41, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__.xfts_open, i64 0, i64 0)) #13, !dbg !17566
  unreachable, !dbg !17566

5:                                                ; No predecessors!
  br label %cond.end, !dbg !17566

cond.end:                                         ; preds = %5, %cond.true
  call void @xalloc_die() #16, !dbg !17568
  unreachable, !dbg !17568

if.end:                                           ; preds = %entry
  %6 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !17569
  ret %struct.FTS* %6, !dbg !17570
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @cycle_warning_required(%struct.FTS* %fts, %struct._ftsent* %ent) #9 !dbg !17571 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !17575, metadata !DIExpression()), !dbg !17576
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !17577, metadata !DIExpression()), !dbg !17578
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !17579
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !17579, !ctir !1558
  %1 = load i32, i32* %fts_options, align 8, !dbg !17579, !ctir !5
  %and = and i32 %1, 16, !dbg !17579
  %tobool = icmp ne i32 %and, 0, !dbg !17579
  br i1 %tobool, label %land.lhs.true, label %lor.rhs, !dbg !17580

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !17581
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !17581, !ctir !1558
  %3 = load i32, i32* %fts_options1, align 8, !dbg !17581, !ctir !5
  %and2 = and i32 %3, 1, !dbg !17581
  %tobool3 = icmp ne i32 %and2, 0, !dbg !17581
  br i1 %tobool3, label %lor.rhs, label %lor.end, !dbg !17582

lor.rhs:                                          ; preds = %land.lhs.true, %entry
  %4 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !17583
  %fts_options4 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !17583, !ctir !1558
  %5 = load i32, i32* %fts_options4, align 8, !dbg !17583, !ctir !5
  %and5 = and i32 %5, 16, !dbg !17583
  %tobool6 = icmp ne i32 %and5, 0, !dbg !17583
  br i1 %tobool6, label %land.lhs.true7, label %land.end, !dbg !17584

land.lhs.true7:                                   ; preds = %lor.rhs
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !17585
  %fts_options8 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 10, !dbg !17585, !ctir !1558
  %7 = load i32, i32* %fts_options8, align 8, !dbg !17585, !ctir !5
  %and9 = and i32 %7, 1, !dbg !17585
  %tobool10 = icmp ne i32 %and9, 0, !dbg !17585
  br i1 %tobool10, label %land.rhs, label %land.end, !dbg !17586

land.rhs:                                         ; preds = %land.lhs.true7
  %8 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !17587
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 12, !dbg !17588, !ctir !1559
  %9 = load i64, i64* %fts_level, align 8, !dbg !17588, !ctir !495
  %cmp = icmp ne i64 %9, 0, !dbg !17589
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true7, %lor.rhs
  %10 = phi i1 [ false, %land.lhs.true7 ], [ false, %lor.rhs ], [ %cmp, %land.rhs ], !dbg !17590
  br label %lor.end, !dbg !17582

lor.end:                                          ; preds = %land.end, %land.lhs.true
  %11 = phi i1 [ true, %land.lhs.true ], [ %10, %land.end ]
  ret i1 %11, !dbg !17591
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @yesno() #4 !dbg !17592 {
entry:
  %yes = alloca i8, align 1, !ctir !139
  %response = alloca i8*, align 8, !ctir !7
  %response_size = alloca i64, align 8, !ctir !52
  %response_len = alloca i64, align 8, !ctir !529
  call void @llvm.dbg.declare(metadata i8* %yes, metadata !17594, metadata !DIExpression()), !dbg !17595
  call void @llvm.dbg.declare(metadata i8** %response, metadata !17596, metadata !DIExpression()), !dbg !17597
  store i8* null, i8** %response, align 8, !dbg !17597
  call void @llvm.dbg.declare(metadata i64* %response_size, metadata !17598, metadata !DIExpression()), !dbg !17599
  store i64 0, i64* %response_size, align 8, !dbg !17599
  call void @llvm.dbg.declare(metadata i64* %response_len, metadata !17600, metadata !DIExpression()), !dbg !17601
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !17602
  %call = call i64 @getline(i8** %response, i64* %response_size, %struct._IO_FILE* %0), !dbg !17603
  store i64 %call, i64* %response_len, align 8, !dbg !17601
  %1 = load i64, i64* %response_len, align 8, !dbg !17604
  %cmp = icmp sle i64 %1, 0, !dbg !17606
  br i1 %cmp, label %if.then, label %if.else, !dbg !17607

if.then:                                          ; preds = %entry
  store i8 0, i8* %yes, align 1, !dbg !17608
  br label %if.end9, !dbg !17609

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %response, align 8, !dbg !17610
  %3 = load i64, i64* %response_len, align 8, !dbg !17613
  %sub = sub nsw i64 %3, 1, !dbg !17614
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !17610, !ctir !7
  %4 = load i8, i8* %arrayidx, align 1, !dbg !17610
  %conv = sext i8 %4 to i32, !dbg !17610
  %cmp1 = icmp eq i32 %conv, 10, !dbg !17615
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !17616

if.then3:                                         ; preds = %if.else
  %5 = load i8*, i8** %response, align 8, !dbg !17617
  %6 = load i64, i64* %response_len, align 8, !dbg !17618
  %sub4 = sub nsw i64 %6, 1, !dbg !17619
  %arrayidx5 = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !17617, !ctir !7
  store i8 0, i8* %arrayidx5, align 1, !dbg !17620
  br label %if.end, !dbg !17617

if.end:                                           ; preds = %if.then3, %if.else
  %7 = load i8*, i8** %response, align 8, !dbg !17621
  %call6 = call i32 @rpmatch(i8* %7) #12, !dbg !17622
  %cmp7 = icmp slt i32 0, %call6, !dbg !17623
  %frombool = zext i1 %cmp7 to i8, !dbg !17624
  store i8 %frombool, i8* %yes, align 1, !dbg !17624
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %response, align 8, !dbg !17625
  call void @free(i8* %8) #12, !dbg !17626
  %9 = load i8, i8* %yes, align 1, !dbg !17627
  %tobool = trunc i8 %9 to i1, !dbg !17627
  ret i1 %tobool, !dbg !17628
}

declare dso_local i64 @getline(i8**, i64*, %struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @rpmatch(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #4 !dbg !17629 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17634, metadata !DIExpression()), !dbg !17635
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17636
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !17638
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17639

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17640
  %call = call i32 @__freading(%struct._IO_FILE* %1) #12, !dbg !17640
  %cmp1 = icmp ne i32 %call, 0, !dbg !17640
  br i1 %cmp1, label %if.end, label %if.then, !dbg !17641

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17642
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !17643
  store i32 %call2, i32* %retval, align 4, !dbg !17644
  br label %return, !dbg !17644

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17645
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !17646
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17647
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !17648
  store i32 %call3, i32* %retval, align 4, !dbg !17649
  br label %return, !dbg !17649

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !17650
  ret i32 %5, !dbg !17650
}

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #4 !dbg !17651 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !17654, metadata !DIExpression()), !dbg !17655
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17656
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !17658, !ctir !1605
  %1 = load i32, i32* %_flags, align 8, !dbg !17658, !ctir !5
  %and = and i32 %1, 256, !dbg !17659
  %tobool = icmp ne i32 %and, 0, !dbg !17659
  br i1 %tobool, label %if.then, label %if.end, !dbg !17660

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17661
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !17662
  br label %if.end, !dbg !17662

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17663
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @freadahead(%struct._IO_FILE* %fp) #9 !dbg !17664 {
entry:
  %retval = alloca i64, align 8
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !17669, metadata !DIExpression()), !dbg !17670
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17671
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 5, !dbg !17673, !ctir !1647
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !17673, !ctir !7
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17674
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 4, !dbg !17675, !ctir !1647
  %3 = load i8*, i8** %_IO_write_base, align 8, !dbg !17675, !ctir !7
  %cmp = icmp ugt i8* %1, %3, !dbg !17676
  br i1 %cmp, label %if.then, label %if.end, !dbg !17677

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !17678
  br label %return, !dbg !17678

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17679
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 2, !dbg !17680, !ctir !1647
  %5 = load i8*, i8** %_IO_read_end, align 8, !dbg !17680, !ctir !7
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17681
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 1, !dbg !17682, !ctir !1647
  %7 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !17682, !ctir !7
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !17683
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !17683
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17683
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17684
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 0, !dbg !17685, !ctir !1647
  %9 = load i32, i32* %_flags, align 8, !dbg !17685, !ctir !5
  %and = and i32 %9, 256, !dbg !17686
  %tobool = icmp ne i32 %and, 0, !dbg !17686
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17684

cond.true:                                        ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17687
  %_IO_save_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %10, i32 0, i32 11, !dbg !17688, !ctir !1647
  %11 = load i8*, i8** %_IO_save_end, align 8, !dbg !17688, !ctir !7
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17689
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 9, !dbg !17690, !ctir !1647
  %13 = load i8*, i8** %_IO_save_base, align 8, !dbg !17690, !ctir !7
  %sub.ptr.lhs.cast1 = ptrtoint i8* %11 to i64, !dbg !17691
  %sub.ptr.rhs.cast2 = ptrtoint i8* %13 to i64, !dbg !17691
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !17691
  br label %cond.end, !dbg !17684

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !17684

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub.ptr.sub3, %cond.true ], [ 0, %cond.false ], !dbg !17684
  %add = add nsw i64 %sub.ptr.sub, %cond, !dbg !17692
  store i64 %add, i64* %retval, align 8, !dbg !17693
  br label %return, !dbg !17693

return:                                           ; preds = %cond.end, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !17694
  ret i64 %14, !dbg !17694
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #4 !dbg !17695 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %pos = alloca i64, align 8, !ctir !292
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !17700, metadata !DIExpression()), !dbg !17701
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !17702, metadata !DIExpression()), !dbg !17703
  store i32 %whence, i32* %whence.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !17704, metadata !DIExpression()), !dbg !17705
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17706
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !17708, !ctir !1689
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !17708, !ctir !7
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17709
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !17710, !ctir !1689
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !17710, !ctir !7
  %cmp = icmp eq i8* %1, %3, !dbg !17711
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !17712

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17713
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !17714, !ctir !1689
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !17714, !ctir !7
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17715
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !17716, !ctir !1689
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !17716, !ctir !7
  %cmp1 = icmp eq i8* %5, %7, !dbg !17717
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !17718

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17719
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !17720, !ctir !1689
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !17720, !ctir !7
  %cmp3 = icmp eq i8* %9, null, !dbg !17721
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !17722

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !17723, metadata !DIExpression()), !dbg !17725
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17726
  %call = call i32 @fileno(%struct._IO_FILE* %10) #12, !dbg !17727
  %11 = load i64, i64* %offset.addr, align 8, !dbg !17728
  %12 = load i32, i32* %whence.addr, align 4, !dbg !17729
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #12, !dbg !17730
  store i64 %call4, i64* %pos, align 8, !dbg !17725
  %13 = load i64, i64* %pos, align 8, !dbg !17731
  %cmp5 = icmp eq i64 %13, -1, !dbg !17733
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !17734

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !17735
  br label %return, !dbg !17735

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17737
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !17738, !ctir !1689
  %15 = load i32, i32* %_flags, align 8, !dbg !17739, !ctir !5
  %and = and i32 %15, -17, !dbg !17739
  store i32 %and, i32* %_flags, align 8, !dbg !17739, !ctir !5
  %16 = load i64, i64* %pos, align 8, !dbg !17740
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17741
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !17742, !ctir !1689
  store i64 %16, i64* %_offset, align 8, !dbg !17743, !ctir !45
  store i32 0, i32* %retval, align 4, !dbg !17744
  br label %return, !dbg !17744

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17745
  %19 = load i64, i64* %offset.addr, align 8, !dbg !17746
  %20 = load i32, i32* %whence.addr, align 4, !dbg !17747
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !17748
  store i32 %call8, i32* %retval, align 4, !dbg !17749
  br label %return, !dbg !17749

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !17750
  ret i32 %21, !dbg !17750
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.FTS* @rpl_fts_open(i8** %argv, i32 %options, i32 (%struct._ftsent**, %struct._ftsent**)* %compar) #4 !dbg !17751 {
entry:
  %retval = alloca %struct.FTS*, align 8
  %argv.addr = alloca i8**, align 8
  %options.addr = alloca i32, align 4
  %compar.addr = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8
  %sp = alloca %struct.FTS*, align 8, !ctir !1757
  %p = alloca %struct._ftsent*, align 8, !ctir !1835
  %root = alloca %struct._ftsent*, align 8, !ctir !1835
  %nitems = alloca i64, align 8, !ctir !52
  %parent = alloca %struct._ftsent*, align 8, !ctir !1835
  %tmp = alloca %struct._ftsent*, align 8, !ctir !1835
  %defer_stat = alloca i8, align 1, !ctir !139
  %fd = alloca i32, align 4, !ctir !5
  %maxarglen = alloca i64, align 8, !ctir !52
  %len = alloca i64, align 8, !ctir !52
  %v = alloca i8*, align 8, !ctir !113
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !17757, metadata !DIExpression()), !dbg !17758
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !17759, metadata !DIExpression()), !dbg !17760
  store i32 (%struct._ftsent**, %struct._ftsent**)* %compar, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, metadata !17761, metadata !DIExpression()), !dbg !17762
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp, metadata !17763, metadata !DIExpression()), !dbg !17764
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !17765, metadata !DIExpression()), !dbg !17766
  call void @llvm.dbg.declare(metadata %struct._ftsent** %root, metadata !17767, metadata !DIExpression()), !dbg !17768
  call void @llvm.dbg.declare(metadata i64* %nitems, metadata !17769, metadata !DIExpression()), !dbg !17770
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !17771, metadata !DIExpression()), !dbg !17772
  store %struct._ftsent* null, %struct._ftsent** %parent, align 8, !dbg !17772
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tmp, metadata !17773, metadata !DIExpression()), !dbg !17774
  store %struct._ftsent* null, %struct._ftsent** %tmp, align 8, !dbg !17774
  call void @llvm.dbg.declare(metadata i8* %defer_stat, metadata !17775, metadata !DIExpression()), !dbg !17776
  %0 = load i32, i32* %options.addr, align 4, !dbg !17777
  %and = and i32 %0, -4096, !dbg !17779
  %tobool = icmp ne i32 %and, 0, !dbg !17779
  br i1 %tobool, label %if.then, label %if.end, !dbg !17780

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #15, !dbg !17781
  store i32 22, i32* %call, align 4, !dbg !17781, !ctir !5
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !17783
  br label %return, !dbg !17783

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %options.addr, align 4, !dbg !17784
  %and1 = and i32 %1, 4, !dbg !17786
  %tobool2 = icmp ne i32 %and1, 0, !dbg !17786
  br i1 %tobool2, label %land.lhs.true, label %if.end7, !dbg !17787

land.lhs.true:                                    ; preds = %if.end
  %2 = load i32, i32* %options.addr, align 4, !dbg !17788
  %and3 = and i32 %2, 512, !dbg !17789
  %tobool4 = icmp ne i32 %and3, 0, !dbg !17789
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !17790

if.then5:                                         ; preds = %land.lhs.true
  %call6 = call i32* @__errno_location() #15, !dbg !17791
  store i32 22, i32* %call6, align 4, !dbg !17791, !ctir !5
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !17793
  br label %return, !dbg !17793

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %3 = load i32, i32* %options.addr, align 4, !dbg !17794
  %and8 = and i32 %3, 18, !dbg !17796
  %tobool9 = icmp ne i32 %and8, 0, !dbg !17796
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !17797

if.then10:                                        ; preds = %if.end7
  %call11 = call i32* @__errno_location() #15, !dbg !17798
  store i32 22, i32* %call11, align 4, !dbg !17798, !ctir !5
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !17800
  br label %return, !dbg !17800

if.end12:                                         ; preds = %if.end7
  %call13 = call noalias i8* @malloc(i64 128) #12, !dbg !17801
  %4 = bitcast i8* %call13 to %struct.FTS*, !dbg !17801
  store %struct.FTS* %4, %struct.FTS** %sp, align 8, !dbg !17803
  %cmp = icmp eq %struct.FTS* %4, null, !dbg !17804
  br i1 %cmp, label %if.then14, label %if.end15, !dbg !17805

if.then14:                                        ; preds = %if.end12
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !17806
  br label %return, !dbg !17806

if.end15:                                         ; preds = %if.end12
  %5 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !17807
  %6 = bitcast %struct.FTS* %5 to i8*, !dbg !17808
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 128, i1 false), !dbg !17808
  %7 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !17809
  %8 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !17810
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %8, i32 0, i32 9, !dbg !17811, !ctir !1758
  store i32 (%struct._ftsent**, %struct._ftsent**)* %7, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !17812, !ctir !1772
  %9 = load i32, i32* %options.addr, align 4, !dbg !17813
  %10 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !17814
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 10, !dbg !17815, !ctir !1758
  store i32 %9, i32* %fts_options, align 8, !dbg !17816, !ctir !5
  %11 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !17817
  %fts_options16 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 10, !dbg !17817, !ctir !1758
  %12 = load i32, i32* %fts_options16, align 8, !dbg !17817, !ctir !5
  %and17 = and i32 %12, 2, !dbg !17817
  %tobool18 = icmp ne i32 %and17, 0, !dbg !17817
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !17819

if.then19:                                        ; preds = %if.end15
  %13 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !17820
  %fts_options20 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 10, !dbg !17820, !ctir !1758
  %14 = load i32, i32* %fts_options20, align 8, !dbg !17820, !ctir !5
  %or = or i32 %14, 4, !dbg !17820
  store i32 %or, i32* %fts_options20, align 8, !dbg !17820, !ctir !5
  %15 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !17822
  %fts_options21 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 10, !dbg !17822, !ctir !1758
  %16 = load i32, i32* %fts_options21, align 8, !dbg !17822, !ctir !5
  %and22 = and i32 %16, -513, !dbg !17822
  store i32 %and22, i32* %fts_options21, align 8, !dbg !17822, !ctir !5
  br label %if.end23, !dbg !17823

if.end23:                                         ; preds = %if.then19, %if.end15
  %17 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !17824
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 6, !dbg !17825, !ctir !1758
  store i32 -100, i32* %fts_cwd_fd, align 4, !dbg !17826, !ctir !5
  %18 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !17827
  %fts_options24 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 10, !dbg !17827, !ctir !1758
  %19 = load i32, i32* %fts_options24, align 8, !dbg !17827, !ctir !5
  %and25 = and i32 %19, 512, !dbg !17827
  %tobool26 = icmp ne i32 %and25, 0, !dbg !17827
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !17829

land.lhs.true27:                                  ; preds = %if.end23
  br i1 true, label %if.end34, label %if.then28, !dbg !17830

if.then28:                                        ; preds = %land.lhs.true27
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !17831, metadata !DIExpression()), !dbg !17833
  %call29 = call i32 (i8*, i32, ...) @open_safer(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.431, i64 0, i64 0), i32 0), !dbg !17834
  store i32 %call29, i32* %fd, align 4, !dbg !17833
  %20 = load i32, i32* %fd, align 4, !dbg !17835
  %cmp30 = icmp slt i32 %20, 0, !dbg !17837
  br i1 %cmp30, label %if.then31, label %if.else, !dbg !17838

if.then31:                                        ; preds = %if.then28
  br label %if.end33, !dbg !17839

if.else:                                          ; preds = %if.then28
  %21 = load i32, i32* %fd, align 4, !dbg !17841
  %call32 = call i32 @close(i32 %21), !dbg !17843
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then31
  br label %if.end34, !dbg !17844

if.end34:                                         ; preds = %if.end33, %land.lhs.true27, %if.end23
  call void @llvm.dbg.declare(metadata i64* %maxarglen, metadata !17845, metadata !DIExpression()), !dbg !17847
  %22 = load i8**, i8*** %argv.addr, align 8, !dbg !17848
  %call35 = call i64 @fts_maxarglen(i8** %22), !dbg !17849
  store i64 %call35, i64* %maxarglen, align 8, !dbg !17847
  %23 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !17850
  %24 = load i64, i64* %maxarglen, align 8, !dbg !17852
  %cmp36 = icmp ugt i64 %24, 4096, !dbg !17852
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !17852

cond.true:                                        ; preds = %if.end34
  %25 = load i64, i64* %maxarglen, align 8, !dbg !17852
  br label %cond.end, !dbg !17852

cond.false:                                       ; preds = %if.end34
  br label %cond.end, !dbg !17852

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %25, %cond.true ], [ 4096, %cond.false ], !dbg !17852
  %call37 = call zeroext i1 @fts_palloc(%struct.FTS* %23, i64 %cond), !dbg !17853
  br i1 %call37, label %if.end39, label %if.then38, !dbg !17854

if.then38:                                        ; preds = %cond.end
  br label %mem1, !dbg !17855

if.end39:                                         ; preds = %cond.end
  %26 = load i8**, i8*** %argv.addr, align 8, !dbg !17856
  %27 = load i8*, i8** %26, align 8, !dbg !17858, !ctir !1066
  %cmp40 = icmp ne i8* %27, null, !dbg !17859
  br i1 %cmp40, label %if.then41, label %if.end46, !dbg !17860

if.then41:                                        ; preds = %if.end39
  %28 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !17861
  %call42 = call %struct._ftsent* @fts_alloc(%struct.FTS* %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.432, i64 0, i64 0), i64 0), !dbg !17864
  store %struct._ftsent* %call42, %struct._ftsent** %parent, align 8, !dbg !17865
  %cmp43 = icmp eq %struct._ftsent* %call42, null, !dbg !17866
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !17867

if.then44:                                        ; preds = %if.then41
  br label %mem2, !dbg !17868

if.end45:                                         ; preds = %if.then41
  %29 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !17869
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 12, !dbg !17870, !ctir !1741
  store i64 -1, i64* %fts_level, align 8, !dbg !17871, !ctir !495
  %30 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !17872
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 14, !dbg !17873, !ctir !1741
  store i64 -1, i64* %fts_n_dirs_remaining, align 8, !dbg !17874, !ctir !1091
  br label %if.end46, !dbg !17875

if.end46:                                         ; preds = %if.end45, %if.end39
  %31 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !17876
  %cmp47 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %31, null, !dbg !17877
  br i1 %cmp47, label %lor.end, label %lor.rhs, !dbg !17878

lor.rhs:                                          ; preds = %if.end46
  %32 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !17879
  %fts_options48 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 10, !dbg !17879, !ctir !1758
  %33 = load i32, i32* %fts_options48, align 8, !dbg !17879, !ctir !5
  %and49 = and i32 %33, 1024, !dbg !17879
  %tobool50 = icmp ne i32 %and49, 0, !dbg !17878
  br label %lor.end, !dbg !17878

lor.end:                                          ; preds = %lor.rhs, %if.end46
  %34 = phi i1 [ true, %if.end46 ], [ %tobool50, %lor.rhs ]
  %frombool = zext i1 %34 to i8, !dbg !17880
  store i8 %frombool, i8* %defer_stat, align 1, !dbg !17880
  store %struct._ftsent* null, %struct._ftsent** %root, align 8, !dbg !17881
  store i64 0, i64* %nitems, align 8, !dbg !17883
  br label %for.cond, !dbg !17884

for.cond:                                         ; preds = %for.inc, %lor.end
  %35 = load i8**, i8*** %argv.addr, align 8, !dbg !17885
  %36 = load i8*, i8** %35, align 8, !dbg !17887, !ctir !1066
  %cmp51 = icmp ne i8* %36, null, !dbg !17888
  br i1 %cmp51, label %for.body, label %for.end, !dbg !17889

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %len, metadata !17890, metadata !DIExpression()), !dbg !17892
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !17893
  %38 = load i8*, i8** %37, align 8, !dbg !17894, !ctir !1066
  %call52 = call i64 @strlen(i8* %38) #14, !dbg !17895
  store i64 %call52, i64* %len, align 8, !dbg !17892
  %39 = load i32, i32* %options.addr, align 4, !dbg !17896
  %and53 = and i32 %39, 2048, !dbg !17898
  %tobool54 = icmp ne i32 %and53, 0, !dbg !17898
  br i1 %tobool54, label %if.end69, label %if.then55, !dbg !17899

if.then55:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %v, metadata !17900, metadata !DIExpression()), !dbg !17902
  %40 = load i8**, i8*** %argv.addr, align 8, !dbg !17903
  %41 = load i8*, i8** %40, align 8, !dbg !17904, !ctir !1066
  store i8* %41, i8** %v, align 8, !dbg !17902
  %42 = load i64, i64* %len, align 8, !dbg !17905
  %cmp56 = icmp ult i64 2, %42, !dbg !17907
  br i1 %cmp56, label %land.lhs.true57, label %if.end68, !dbg !17908

land.lhs.true57:                                  ; preds = %if.then55
  %43 = load i8*, i8** %v, align 8, !dbg !17909
  %44 = load i64, i64* %len, align 8, !dbg !17910
  %sub = sub i64 %44, 1, !dbg !17911
  %arrayidx = getelementptr inbounds i8, i8* %43, i64 %sub, !dbg !17909, !ctir !113
  %45 = load i8, i8* %arrayidx, align 1, !dbg !17909
  %conv = sext i8 %45 to i32, !dbg !17909
  %cmp58 = icmp eq i32 %conv, 47, !dbg !17912
  br i1 %cmp58, label %if.then60, label %if.end68, !dbg !17913

if.then60:                                        ; preds = %land.lhs.true57
  br label %while.cond, !dbg !17914

while.cond:                                       ; preds = %while.body, %if.then60
  %46 = load i64, i64* %len, align 8, !dbg !17915
  %cmp61 = icmp ult i64 1, %46, !dbg !17916
  br i1 %cmp61, label %land.rhs, label %land.end, !dbg !17917

land.rhs:                                         ; preds = %while.cond
  %47 = load i8*, i8** %v, align 8, !dbg !17918
  %48 = load i64, i64* %len, align 8, !dbg !17919
  %sub63 = sub i64 %48, 2, !dbg !17920
  %arrayidx64 = getelementptr inbounds i8, i8* %47, i64 %sub63, !dbg !17918, !ctir !113
  %49 = load i8, i8* %arrayidx64, align 1, !dbg !17918
  %conv65 = sext i8 %49 to i32, !dbg !17918
  %cmp66 = icmp eq i32 %conv65, 47, !dbg !17921
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %50 = phi i1 [ false, %while.cond ], [ %cmp66, %land.rhs ], !dbg !17922
  br i1 %50, label %while.body, label %while.end, !dbg !17914

while.body:                                       ; preds = %land.end
  %51 = load i64, i64* %len, align 8, !dbg !17923
  %dec = add i64 %51, -1, !dbg !17923
  store i64 %dec, i64* %len, align 8, !dbg !17923
  br label %while.cond, !dbg !17914, !llvm.loop !17924

while.end:                                        ; preds = %land.end
  br label %if.end68, !dbg !17914

if.end68:                                         ; preds = %while.end, %land.lhs.true57, %if.then55
  br label %if.end69, !dbg !17926

if.end69:                                         ; preds = %if.end68, %for.body
  %52 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !17927
  %53 = load i8**, i8*** %argv.addr, align 8, !dbg !17929
  %54 = load i8*, i8** %53, align 8, !dbg !17930, !ctir !1066
  %55 = load i64, i64* %len, align 8, !dbg !17931
  %call70 = call %struct._ftsent* @fts_alloc(%struct.FTS* %52, i8* %54, i64 %55), !dbg !17932
  store %struct._ftsent* %call70, %struct._ftsent** %p, align 8, !dbg !17933
  %cmp71 = icmp eq %struct._ftsent* %call70, null, !dbg !17934
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !17935

if.then73:                                        ; preds = %if.end69
  br label %mem3, !dbg !17936

if.end74:                                         ; preds = %if.end69
  %56 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !17937
  %fts_level75 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %56, i32 0, i32 12, !dbg !17938, !ctir !1741
  store i64 0, i64* %fts_level75, align 8, !dbg !17939, !ctir !495
  %57 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !17940
  %58 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !17941
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %58, i32 0, i32 1, !dbg !17942, !ctir !1741
  store %struct._ftsent* %57, %struct._ftsent** %fts_parent, align 8, !dbg !17943, !ctir !1745
  %59 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !17944
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %59, i32 0, i32 19, !dbg !17945, !ctir !1741
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !17944, !ctir !1119
  %60 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !17946
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %60, i32 0, i32 6, !dbg !17947, !ctir !1741
  store i8* %arraydecay, i8** %fts_accpath, align 8, !dbg !17948, !ctir !7
  %61 = load i8, i8* %defer_stat, align 1, !dbg !17949
  %tobool76 = trunc i8 %61 to i1, !dbg !17949
  br i1 %tobool76, label %land.lhs.true78, label %if.else82, !dbg !17951

land.lhs.true78:                                  ; preds = %if.end74
  %62 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !17952
  %cmp79 = icmp ne %struct._ftsent* %62, null, !dbg !17953
  br i1 %cmp79, label %if.then81, label %if.else82, !dbg !17954

if.then81:                                        ; preds = %land.lhs.true78
  %63 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !17955
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %63, i32 0, i32 15, !dbg !17957, !ctir !1741
  store i16 11, i16* %fts_info, align 8, !dbg !17958, !ctir !34
  %64 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !17959
  call void @fts_set_stat_required(%struct._ftsent* %64, i1 zeroext true), !dbg !17960
  br label %if.end85, !dbg !17961

if.else82:                                        ; preds = %land.lhs.true78, %if.end74
  %65 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !17962
  %66 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !17964
  %call83 = call zeroext i16 @fts_stat(%struct.FTS* %65, %struct._ftsent* %66, i1 zeroext false), !dbg !17965
  %67 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !17966
  %fts_info84 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %67, i32 0, i32 15, !dbg !17967, !ctir !1741
  store i16 %call83, i16* %fts_info84, align 8, !dbg !17968, !ctir !34
  br label %if.end85

if.end85:                                         ; preds = %if.else82, %if.then81
  %68 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !17969
  %tobool86 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %68, null, !dbg !17969
  br i1 %tobool86, label %if.then87, label %if.else88, !dbg !17971

if.then87:                                        ; preds = %if.end85
  %69 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !17972
  %70 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !17974
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %70, i32 0, i32 2, !dbg !17975, !ctir !1741
  store %struct._ftsent* %69, %struct._ftsent** %fts_link, align 8, !dbg !17976, !ctir !1745
  %71 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !17977
  store %struct._ftsent* %71, %struct._ftsent** %root, align 8, !dbg !17978
  br label %if.end96, !dbg !17979

if.else88:                                        ; preds = %if.end85
  %72 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !17980
  %fts_link89 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %72, i32 0, i32 2, !dbg !17982, !ctir !1741
  store %struct._ftsent* null, %struct._ftsent** %fts_link89, align 8, !dbg !17983, !ctir !1745
  %73 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !17984
  %cmp90 = icmp eq %struct._ftsent* %73, null, !dbg !17986
  br i1 %cmp90, label %if.then92, label %if.else93, !dbg !17987

if.then92:                                        ; preds = %if.else88
  %74 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !17988
  store %struct._ftsent* %74, %struct._ftsent** %root, align 8, !dbg !17989
  store %struct._ftsent* %74, %struct._ftsent** %tmp, align 8, !dbg !17990
  br label %if.end95, !dbg !17991

if.else93:                                        ; preds = %if.else88
  %75 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !17992
  %76 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !17994
  %fts_link94 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %76, i32 0, i32 2, !dbg !17995, !ctir !1741
  store %struct._ftsent* %75, %struct._ftsent** %fts_link94, align 8, !dbg !17996, !ctir !1745
  %77 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !17997
  store %struct._ftsent* %77, %struct._ftsent** %tmp, align 8, !dbg !17998
  br label %if.end95

if.end95:                                         ; preds = %if.else93, %if.then92
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then87
  br label %for.inc, !dbg !17999

for.inc:                                          ; preds = %if.end96
  %78 = load i8**, i8*** %argv.addr, align 8, !dbg !18000
  %incdec.ptr = getelementptr inbounds i8*, i8** %78, i32 1, !dbg !18000, !ctir !1066
  store i8** %incdec.ptr, i8*** %argv.addr, align 8, !dbg !18000
  %79 = load i64, i64* %nitems, align 8, !dbg !18001
  %inc = add i64 %79, 1, !dbg !18001
  store i64 %inc, i64* %nitems, align 8, !dbg !18001
  br label %for.cond, !dbg !18002, !llvm.loop !18003

for.end:                                          ; preds = %for.cond
  %80 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18005
  %tobool97 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %80, null, !dbg !18005
  br i1 %tobool97, label %land.lhs.true98, label %if.end103, !dbg !18007

land.lhs.true98:                                  ; preds = %for.end
  %81 = load i64, i64* %nitems, align 8, !dbg !18008
  %cmp99 = icmp ugt i64 %81, 1, !dbg !18009
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !18010

if.then101:                                       ; preds = %land.lhs.true98
  %82 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18011
  %83 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18012
  %84 = load i64, i64* %nitems, align 8, !dbg !18013
  %call102 = call %struct._ftsent* @fts_sort(%struct.FTS* %82, %struct._ftsent* %83, i64 %84), !dbg !18014
  store %struct._ftsent* %call102, %struct._ftsent** %root, align 8, !dbg !18015
  br label %if.end103, !dbg !18016

if.end103:                                        ; preds = %if.then101, %land.lhs.true98, %for.end
  %85 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18017
  %call104 = call %struct._ftsent* @fts_alloc(%struct.FTS* %85, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.432, i64 0, i64 0), i64 0), !dbg !18019
  %86 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18020
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %86, i32 0, i32 0, !dbg !18021, !ctir !1758
  store %struct._ftsent* %call104, %struct._ftsent** %fts_cur, align 8, !dbg !18022, !ctir !1745
  %cmp105 = icmp eq %struct._ftsent* %call104, null, !dbg !18023
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !18024

if.then107:                                       ; preds = %if.end103
  br label %mem3, !dbg !18025

if.end108:                                        ; preds = %if.end103
  %87 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18026
  %88 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18027
  %fts_cur109 = getelementptr inbounds %struct.FTS, %struct.FTS* %88, i32 0, i32 0, !dbg !18028, !ctir !1758
  %89 = load %struct._ftsent*, %struct._ftsent** %fts_cur109, align 8, !dbg !18028, !ctir !1745
  %fts_link110 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %89, i32 0, i32 2, !dbg !18029, !ctir !1742
  store %struct._ftsent* %87, %struct._ftsent** %fts_link110, align 8, !dbg !18030, !ctir !1745
  %90 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18031
  %fts_cur111 = getelementptr inbounds %struct.FTS, %struct.FTS* %90, i32 0, i32 0, !dbg !18032, !ctir !1758
  %91 = load %struct._ftsent*, %struct._ftsent** %fts_cur111, align 8, !dbg !18032, !ctir !1745
  %fts_info112 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 15, !dbg !18033, !ctir !1742
  store i16 9, i16* %fts_info112, align 8, !dbg !18034, !ctir !34
  %92 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18035
  %fts_cur113 = getelementptr inbounds %struct.FTS, %struct.FTS* %92, i32 0, i32 0, !dbg !18036, !ctir !1758
  %93 = load %struct._ftsent*, %struct._ftsent** %fts_cur113, align 8, !dbg !18036, !ctir !1745
  %fts_level114 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %93, i32 0, i32 12, !dbg !18037, !ctir !1742
  store i64 1, i64* %fts_level114, align 8, !dbg !18038, !ctir !495
  %94 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18039
  %call115 = call zeroext i1 @setup_dir(%struct.FTS* %94), !dbg !18041
  br i1 %call115, label %if.end117, label %if.then116, !dbg !18042

if.then116:                                       ; preds = %if.end108
  br label %mem3, !dbg !18043

if.end117:                                        ; preds = %if.end108
  %95 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18044
  %fts_options118 = getelementptr inbounds %struct.FTS, %struct.FTS* %95, i32 0, i32 10, !dbg !18044, !ctir !1758
  %96 = load i32, i32* %fts_options118, align 8, !dbg !18044, !ctir !5
  %and119 = and i32 %96, 4, !dbg !18044
  %tobool120 = icmp ne i32 %and119, 0, !dbg !18044
  br i1 %tobool120, label %if.end132, label %land.lhs.true121, !dbg !18046

land.lhs.true121:                                 ; preds = %if.end117
  %97 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18047
  %fts_options122 = getelementptr inbounds %struct.FTS, %struct.FTS* %97, i32 0, i32 10, !dbg !18047, !ctir !1758
  %98 = load i32, i32* %fts_options122, align 8, !dbg !18047, !ctir !5
  %and123 = and i32 %98, 512, !dbg !18047
  %tobool124 = icmp ne i32 %and123, 0, !dbg !18047
  br i1 %tobool124, label %if.end132, label %land.lhs.true125, !dbg !18048

land.lhs.true125:                                 ; preds = %land.lhs.true121
  %99 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18049
  %call126 = call i32 @diropen(%struct.FTS* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.431, i64 0, i64 0)), !dbg !18050
  %100 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18051
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %100, i32 0, i32 5, !dbg !18052, !ctir !1758
  store i32 %call126, i32* %fts_rfd, align 8, !dbg !18053, !ctir !5
  %cmp127 = icmp slt i32 %call126, 0, !dbg !18054
  br i1 %cmp127, label %if.then129, label %if.end132, !dbg !18055

if.then129:                                       ; preds = %land.lhs.true125
  %101 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18056
  %fts_options130 = getelementptr inbounds %struct.FTS, %struct.FTS* %101, i32 0, i32 10, !dbg !18056, !ctir !1758
  %102 = load i32, i32* %fts_options130, align 8, !dbg !18056, !ctir !5
  %or131 = or i32 %102, 4, !dbg !18056
  store i32 %or131, i32* %fts_options130, align 8, !dbg !18056, !ctir !5
  br label %if.end132, !dbg !18056

if.end132:                                        ; preds = %if.then129, %land.lhs.true125, %land.lhs.true121, %if.end117
  %103 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18057
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %103, i32 0, i32 13, !dbg !18058, !ctir !1758
  call void @i_ring_init(%struct.I_ring* %fts_fd_ring, i32 -1), !dbg !18059
  %104 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18060
  store %struct.FTS* %104, %struct.FTS** %retval, align 8, !dbg !18061
  br label %return, !dbg !18061

mem3:                                             ; preds = %if.then116, %if.then107, %if.then73
  call void @llvm.dbg.label(metadata !18062), !dbg !18063
  %105 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18064
  call void @fts_lfree(%struct._ftsent* %105), !dbg !18065
  %106 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18066
  %107 = bitcast %struct._ftsent* %106 to i8*, !dbg !18066
  call void @free(i8* %107) #12, !dbg !18067
  br label %mem2, !dbg !18067

mem2:                                             ; preds = %mem3, %if.then44
  call void @llvm.dbg.label(metadata !18068), !dbg !18069
  %108 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18070
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %108, i32 0, i32 4, !dbg !18071, !ctir !1758
  %109 = load i8*, i8** %fts_path, align 8, !dbg !18071, !ctir !7
  call void @free(i8* %109) #12, !dbg !18072
  br label %mem1, !dbg !18072

mem1:                                             ; preds = %mem2, %if.then38
  call void @llvm.dbg.label(metadata !18073), !dbg !18074
  %110 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18075
  %111 = bitcast %struct.FTS* %110 to i8*, !dbg !18075
  call void @free(i8* %111) #12, !dbg !18076
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18077
  br label %return, !dbg !18077

return:                                           ; preds = %mem1, %if.end132, %if.then14, %if.then10, %if.then5, %if.then
  %112 = load %struct.FTS*, %struct.FTS** %retval, align 8, !dbg !18078
  ret %struct.FTS* %112, !dbg !18078
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @fts_maxarglen(i8** %argv) #4 !dbg !18079 {
entry:
  %argv.addr = alloca i8**, align 8
  %len = alloca i64, align 8, !ctir !52
  %max = alloca i64, align 8, !ctir !52
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !18082, metadata !DIExpression()), !dbg !18083
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18084, metadata !DIExpression()), !dbg !18085
  call void @llvm.dbg.declare(metadata i64* %max, metadata !18086, metadata !DIExpression()), !dbg !18087
  store i64 0, i64* %max, align 8, !dbg !18088
  br label %for.cond, !dbg !18090

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !18091
  %1 = load i8*, i8** %0, align 8, !dbg !18093, !ctir !1066
  %tobool = icmp ne i8* %1, null, !dbg !18094
  br i1 %tobool, label %for.body, label %for.end, !dbg !18094

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !18095
  %3 = load i8*, i8** %2, align 8, !dbg !18097, !ctir !1066
  %call = call i64 @strlen(i8* %3) #14, !dbg !18098
  store i64 %call, i64* %len, align 8, !dbg !18099
  %4 = load i64, i64* %max, align 8, !dbg !18100
  %cmp = icmp ugt i64 %call, %4, !dbg !18101
  br i1 %cmp, label %if.then, label %if.end, !dbg !18102

if.then:                                          ; preds = %for.body
  %5 = load i64, i64* %len, align 8, !dbg !18103
  store i64 %5, i64* %max, align 8, !dbg !18104
  br label %if.end, !dbg !18105

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !18100

for.inc:                                          ; preds = %if.end
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !18106
  %incdec.ptr = getelementptr inbounds i8*, i8** %6, i32 1, !dbg !18106, !ctir !1066
  store i8** %incdec.ptr, i8*** %argv.addr, align 8, !dbg !18106
  br label %for.cond, !dbg !18107, !llvm.loop !18108

for.end:                                          ; preds = %for.cond
  %7 = load i64, i64* %max, align 8, !dbg !18110
  %add = add i64 %7, 1, !dbg !18111
  ret i64 %add, !dbg !18112
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @fts_palloc(%struct.FTS* %sp, i64 %more) #4 !dbg !18113 {
entry:
  %retval = alloca i1, align 1
  %sp.addr = alloca %struct.FTS*, align 8
  %more.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !7
  %new_len = alloca i64, align 8, !ctir !52
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18116, metadata !DIExpression()), !dbg !18117
  store i64 %more, i64* %more.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %more.addr, metadata !18118, metadata !DIExpression()), !dbg !18119
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18120, metadata !DIExpression()), !dbg !18121
  call void @llvm.dbg.declare(metadata i64* %new_len, metadata !18122, metadata !DIExpression()), !dbg !18123
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18124
  %fts_pathlen = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 7, !dbg !18125, !ctir !1758
  %1 = load i64, i64* %fts_pathlen, align 8, !dbg !18125, !ctir !52
  %2 = load i64, i64* %more.addr, align 8, !dbg !18126
  %add = add i64 %1, %2, !dbg !18127
  %add1 = add i64 %add, 256, !dbg !18128
  store i64 %add1, i64* %new_len, align 8, !dbg !18123
  %3 = load i64, i64* %new_len, align 8, !dbg !18129
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18131
  %fts_pathlen2 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 7, !dbg !18132, !ctir !1758
  %5 = load i64, i64* %fts_pathlen2, align 8, !dbg !18132, !ctir !52
  %cmp = icmp ult i64 %3, %5, !dbg !18133
  br i1 %cmp, label %if.then, label %if.end, !dbg !18134

if.then:                                          ; preds = %entry
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18135
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 4, !dbg !18137, !ctir !1758
  %7 = load i8*, i8** %fts_path, align 8, !dbg !18137, !ctir !7
  call void @free(i8* %7) #12, !dbg !18138
  %8 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18139
  %fts_path3 = getelementptr inbounds %struct.FTS, %struct.FTS* %8, i32 0, i32 4, !dbg !18140, !ctir !1758
  store i8* null, i8** %fts_path3, align 8, !dbg !18141, !ctir !7
  %call = call i32* @__errno_location() #15, !dbg !18142
  store i32 36, i32* %call, align 4, !dbg !18142, !ctir !5
  store i1 false, i1* %retval, align 1, !dbg !18143
  br label %return, !dbg !18143

if.end:                                           ; preds = %entry
  %9 = load i64, i64* %new_len, align 8, !dbg !18144
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18145
  %fts_pathlen4 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 7, !dbg !18146, !ctir !1758
  store i64 %9, i64* %fts_pathlen4, align 8, !dbg !18147, !ctir !52
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18148
  %fts_path5 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 4, !dbg !18149, !ctir !1758
  %12 = load i8*, i8** %fts_path5, align 8, !dbg !18149, !ctir !7
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18150
  %fts_pathlen6 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 7, !dbg !18151, !ctir !1758
  %14 = load i64, i64* %fts_pathlen6, align 8, !dbg !18151, !ctir !52
  %call7 = call i8* @realloc(i8* %12, i64 %14) #12, !dbg !18152
  store i8* %call7, i8** %p, align 8, !dbg !18153
  %15 = load i8*, i8** %p, align 8, !dbg !18154
  %cmp8 = icmp eq i8* %15, null, !dbg !18156
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !18157

if.then9:                                         ; preds = %if.end
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18158
  %fts_path10 = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 4, !dbg !18160, !ctir !1758
  %17 = load i8*, i8** %fts_path10, align 8, !dbg !18160, !ctir !7
  call void @free(i8* %17) #12, !dbg !18161
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18162
  %fts_path11 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 4, !dbg !18163, !ctir !1758
  store i8* null, i8** %fts_path11, align 8, !dbg !18164, !ctir !7
  store i1 false, i1* %retval, align 1, !dbg !18165
  br label %return, !dbg !18165

if.end12:                                         ; preds = %if.end
  %19 = load i8*, i8** %p, align 8, !dbg !18166
  %20 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18167
  %fts_path13 = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 4, !dbg !18168, !ctir !1758
  store i8* %19, i8** %fts_path13, align 8, !dbg !18169, !ctir !7
  store i1 true, i1* %retval, align 1, !dbg !18170
  br label %return, !dbg !18170

return:                                           ; preds = %if.end12, %if.then9, %if.then
  %21 = load i1, i1* %retval, align 1, !dbg !18171
  ret i1 %21, !dbg !18171
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_alloc(%struct.FTS* %sp, i8* %name, i64 %namelen) #4 !dbg !18172 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %name.addr = alloca i8*, align 8
  %namelen.addr = alloca i64, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !1835
  %len = alloca i64, align 8, !ctir !52
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18175, metadata !DIExpression()), !dbg !18176
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !18177, metadata !DIExpression()), !dbg !18178
  store i64 %namelen, i64* %namelen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %namelen.addr, metadata !18179, metadata !DIExpression()), !dbg !18180
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18181, metadata !DIExpression()), !dbg !18182
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18183, metadata !DIExpression()), !dbg !18184
  %0 = load i64, i64* %namelen.addr, align 8, !dbg !18185
  %add = add i64 %0, 1, !dbg !18185
  %add1 = add i64 271, %add, !dbg !18185
  %and = and i64 %add1, -8, !dbg !18185
  store i64 %and, i64* %len, align 8, !dbg !18186
  %1 = load i64, i64* %len, align 8, !dbg !18187
  %call = call noalias i8* @malloc(i64 %1) #12, !dbg !18189
  %2 = bitcast i8* %call to %struct._ftsent*, !dbg !18189
  store %struct._ftsent* %2, %struct._ftsent** %p, align 8, !dbg !18190
  %cmp = icmp eq %struct._ftsent* %2, null, !dbg !18191
  br i1 %cmp, label %if.then, label %if.end, !dbg !18192

if.then:                                          ; preds = %entry
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !18193
  br label %return, !dbg !18193

if.end:                                           ; preds = %entry
  %3 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18194
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %3, i32 0, i32 19, !dbg !18195, !ctir !1741
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !18196, !ctir !1119
  %4 = load i8*, i8** %name.addr, align 8, !dbg !18197
  %5 = load i64, i64* %namelen.addr, align 8, !dbg !18198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %4, i64 %5, i1 false), !dbg !18196
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18199
  %fts_name2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 19, !dbg !18200, !ctir !1741
  %7 = load i64, i64* %namelen.addr, align 8, !dbg !18201
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name2, i64 0, i64 %7, !dbg !18199, !ctir !1119
  store i8 0, i8* %arrayidx, align 1, !dbg !18202
  %8 = load i64, i64* %namelen.addr, align 8, !dbg !18203
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18204
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 13, !dbg !18205, !ctir !1741
  store i64 %8, i64* %fts_namelen, align 8, !dbg !18206, !ctir !52
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18207
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18208
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 11, !dbg !18209, !ctir !1741
  store %struct.FTS* %10, %struct.FTS** %fts_fts, align 8, !dbg !18210, !ctir !1757
  %12 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18211
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 4, !dbg !18212, !ctir !1758
  %13 = load i8*, i8** %fts_path, align 8, !dbg !18212, !ctir !7
  %14 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18213
  %fts_path3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 7, !dbg !18214, !ctir !1741
  store i8* %13, i8** %fts_path3, align 8, !dbg !18215, !ctir !7
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18216
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 8, !dbg !18217, !ctir !1741
  store i32 0, i32* %fts_errno, align 8, !dbg !18218, !ctir !5
  %16 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18219
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 3, !dbg !18220, !ctir !1741
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp, align 8, !dbg !18221, !ctir !530
  %17 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18222
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 16, !dbg !18223, !ctir !1741
  store i16 0, i16* %fts_flags, align 2, !dbg !18224, !ctir !34
  %18 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18225
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %18, i32 0, i32 17, !dbg !18226, !ctir !1741
  store i16 3, i16* %fts_instr, align 4, !dbg !18227, !ctir !34
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18228
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 4, !dbg !18229, !ctir !1741
  store i64 0, i64* %fts_number, align 8, !dbg !18230, !ctir !32
  %20 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18231
  %fts_pointer = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 5, !dbg !18232, !ctir !1741
  store i8* null, i8** %fts_pointer, align 8, !dbg !18233, !ctir !47
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18234
  store %struct._ftsent* %21, %struct._ftsent** %retval, align 8, !dbg !18235
  br label %return, !dbg !18235

return:                                           ; preds = %if.end, %if.then
  %22 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !18236
  ret %struct._ftsent* %22, !dbg !18236
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_set_stat_required(%struct._ftsent* %p, i1 zeroext %required) #4 !dbg !18237 {
entry:
  %p.addr = alloca %struct._ftsent*, align 8
  %required.addr = alloca i8, align 1
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !18240, metadata !DIExpression()), !dbg !18241
  %frombool = zext i1 %required to i8
  store i8 %frombool, i8* %required.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %required.addr, metadata !18242, metadata !DIExpression()), !dbg !18243
  br label %do.body, !dbg !18244

do.body:                                          ; preds = %entry
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18245
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 15, !dbg !18245, !ctir !1741
  %1 = load i16, i16* %fts_info, align 8, !dbg !18245, !ctir !34
  %conv = zext i16 %1 to i32, !dbg !18245
  %cmp = icmp eq i32 %conv, 11, !dbg !18245
  br i1 %cmp, label %if.end, label %if.then, !dbg !18248

if.then:                                          ; preds = %do.body
  call void @abort() #13, !dbg !18245
  unreachable, !dbg !18245

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !18248

do.end:                                           ; preds = %if.end
  %2 = load i8, i8* %required.addr, align 1, !dbg !18249
  %tobool = trunc i8 %2 to i1, !dbg !18249
  %3 = zext i1 %tobool to i64, !dbg !18249
  %cond = select i1 %tobool, i32 2, i32 1, !dbg !18249
  %conv3 = sext i32 %cond to i64, !dbg !18250
  %4 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18251
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 18, !dbg !18252, !ctir !1741
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !18253, !ctir !1812
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 8, !dbg !18253, !ctir !1813
  store i64 %conv3, i64* %st_size, align 8, !dbg !18254, !ctir !30
  ret void, !dbg !18255
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i16 @fts_stat(%struct.FTS* %sp, %struct._ftsent* %p, i1 zeroext %follow) #4 !dbg !18256 {
entry:
  %retval = alloca i16, align 2
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %follow.addr = alloca i8, align 1
  %sbp = alloca %struct.stat*, align 8, !ctir !1868
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18259, metadata !DIExpression()), !dbg !18260
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !18261, metadata !DIExpression()), !dbg !18262
  %frombool = zext i1 %follow to i8
  store i8 %frombool, i8* %follow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %follow.addr, metadata !18263, metadata !DIExpression()), !dbg !18264
  call void @llvm.dbg.declare(metadata %struct.stat** %sbp, metadata !18265, metadata !DIExpression()), !dbg !18266
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18267
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 18, !dbg !18268, !ctir !1741
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !18267, !ctir !1812
  store %struct.stat* %arraydecay, %struct.stat** %sbp, align 8, !dbg !18266
  %1 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18269
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 12, !dbg !18271, !ctir !1741
  %2 = load i64, i64* %fts_level, align 8, !dbg !18271, !ctir !495
  %cmp = icmp eq i64 %2, 0, !dbg !18272
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !18273

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18274
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !18274, !ctir !1758
  %4 = load i32, i32* %fts_options, align 8, !dbg !18274, !ctir !5
  %and = and i32 %4, 1, !dbg !18274
  %tobool = icmp ne i32 %and, 0, !dbg !18274
  br i1 %tobool, label %if.then, label %if.end, !dbg !18275

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %follow.addr, align 1, !dbg !18276
  br label %if.end, !dbg !18277

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18278
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !18278, !ctir !1758
  %6 = load i32, i32* %fts_options1, align 8, !dbg !18278, !ctir !5
  %and2 = and i32 %6, 2, !dbg !18278
  %tobool3 = icmp ne i32 %and2, 0, !dbg !18278
  br i1 %tobool3, label %if.then5, label %lor.lhs.false, !dbg !18280

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i8, i8* %follow.addr, align 1, !dbg !18281
  %tobool4 = trunc i8 %7 to i1, !dbg !18281
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !18282

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18283
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 6, !dbg !18286, !ctir !1741
  %9 = load i8*, i8** %fts_accpath, align 8, !dbg !18286, !ctir !7
  %10 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18287
  %call = call i32 @stat(i8* %9, %struct.stat* %10) #12, !dbg !18288
  %tobool6 = icmp ne i32 %call, 0, !dbg !18288
  br i1 %tobool6, label %if.then7, label %if.end18, !dbg !18289

if.then7:                                         ; preds = %if.then5
  %call8 = call i32* @__errno_location() #15, !dbg !18290
  %11 = load i32, i32* %call8, align 4, !dbg !18290, !ctir !5
  %cmp9 = icmp eq i32 %11, 2, !dbg !18293
  br i1 %cmp9, label %land.lhs.true10, label %if.end16, !dbg !18294

land.lhs.true10:                                  ; preds = %if.then7
  %12 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18295
  %fts_accpath11 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 6, !dbg !18296, !ctir !1741
  %13 = load i8*, i8** %fts_accpath11, align 8, !dbg !18296, !ctir !7
  %14 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18297
  %call12 = call i32 @lstat(i8* %13, %struct.stat* %14) #12, !dbg !18298
  %cmp13 = icmp eq i32 %call12, 0, !dbg !18299
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !18300

if.then14:                                        ; preds = %land.lhs.true10
  %call15 = call i32* @__errno_location() #15, !dbg !18301
  store i32 0, i32* %call15, align 4, !dbg !18301, !ctir !5
  store i16 13, i16* %retval, align 2, !dbg !18303
  br label %return, !dbg !18303

if.end16:                                         ; preds = %land.lhs.true10, %if.then7
  %call17 = call i32* @__errno_location() #15, !dbg !18304
  %15 = load i32, i32* %call17, align 4, !dbg !18304, !ctir !5
  %16 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18305
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 8, !dbg !18306, !ctir !1741
  store i32 %15, i32* %fts_errno, align 8, !dbg !18307, !ctir !5
  br label %err, !dbg !18308

if.end18:                                         ; preds = %if.then5
  br label %if.end26, !dbg !18309

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18310
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 6, !dbg !18312, !ctir !1758
  %18 = load i32, i32* %fts_cwd_fd, align 4, !dbg !18312, !ctir !5
  %19 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18313
  %fts_accpath19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 6, !dbg !18314, !ctir !1741
  %20 = load i8*, i8** %fts_accpath19, align 8, !dbg !18314, !ctir !7
  %21 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18315
  %call20 = call i32 @fstatat(i32 %18, i8* %20, %struct.stat* %21, i32 256) #12, !dbg !18316
  %tobool21 = icmp ne i32 %call20, 0, !dbg !18316
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !18317

if.then22:                                        ; preds = %if.else
  %call23 = call i32* @__errno_location() #15, !dbg !18318
  %22 = load i32, i32* %call23, align 4, !dbg !18318, !ctir !5
  %23 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18320
  %fts_errno24 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 8, !dbg !18321, !ctir !1741
  store i32 %22, i32* %fts_errno24, align 8, !dbg !18322, !ctir !5
  br label %err, !dbg !18320

err:                                              ; preds = %if.then22, %if.end16
  call void @llvm.dbg.label(metadata !18323), !dbg !18324
  %24 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18325
  %25 = bitcast %struct.stat* %24 to i8*, !dbg !18326
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 144, i1 false), !dbg !18326
  store i16 10, i16* %retval, align 2, !dbg !18327
  br label %return, !dbg !18327

if.end25:                                         ; preds = %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end18
  %26 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18328
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 3, !dbg !18328, !ctir !1813
  %27 = load i32, i32* %st_mode, align 8, !dbg !18328, !ctir !165
  %and27 = and i32 %27, 61440, !dbg !18328
  %cmp28 = icmp eq i32 %and27, 16384, !dbg !18328
  br i1 %cmp28, label %if.then29, label %if.end63, !dbg !18330

if.then29:                                        ; preds = %if.end26
  %28 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18331
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %28, i32 0, i32 2, !dbg !18333, !ctir !1813
  %29 = load i64, i64* %st_nlink, align 8, !dbg !18333, !ctir !333
  %cmp30 = icmp ult i64 %29, 2, !dbg !18334
  br i1 %cmp30, label %cond.true, label %lor.lhs.false31, !dbg !18335

lor.lhs.false31:                                  ; preds = %if.then29
  %30 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18336
  %fts_level32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 12, !dbg !18337, !ctir !1741
  %31 = load i64, i64* %fts_level32, align 8, !dbg !18337, !ctir !495
  %cmp33 = icmp sle i64 %31, 0, !dbg !18338
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !18339

cond.true:                                        ; preds = %lor.lhs.false31, %if.then29
  br label %cond.end, !dbg !18339

cond.false:                                       ; preds = %lor.lhs.false31
  %32 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18340
  %st_nlink34 = getelementptr inbounds %struct.stat, %struct.stat* %32, i32 0, i32 2, !dbg !18341, !ctir !1813
  %33 = load i64, i64* %st_nlink34, align 8, !dbg !18341, !ctir !333
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18342
  %fts_options35 = getelementptr inbounds %struct.FTS, %struct.FTS* %34, i32 0, i32 10, !dbg !18342, !ctir !1758
  %35 = load i32, i32* %fts_options35, align 8, !dbg !18342, !ctir !5
  %and36 = and i32 %35, 32, !dbg !18342
  %tobool37 = icmp ne i32 %and36, 0, !dbg !18342
  %36 = zext i1 %tobool37 to i64, !dbg !18342
  %cond = select i1 %tobool37, i32 0, i32 2, !dbg !18342
  %conv = sext i32 %cond to i64, !dbg !18343
  %sub = sub i64 %33, %conv, !dbg !18344
  br label %cond.end, !dbg !18339

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond38 = phi i64 [ -1, %cond.true ], [ %sub, %cond.false ], !dbg !18339
  %37 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18345
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 14, !dbg !18346, !ctir !1741
  store i64 %cond38, i64* %fts_n_dirs_remaining, align 8, !dbg !18347, !ctir !1091
  %38 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18348
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 19, !dbg !18348, !ctir !1741
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !18348, !ctir !1119
  %39 = load i8, i8* %arrayidx, align 8, !dbg !18348
  %conv39 = sext i8 %39 to i32, !dbg !18348
  %cmp40 = icmp eq i32 %conv39, 46, !dbg !18348
  br i1 %cmp40, label %land.lhs.true42, label %if.end62, !dbg !18348

land.lhs.true42:                                  ; preds = %cond.end
  %40 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18348
  %fts_name43 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %40, i32 0, i32 19, !dbg !18348, !ctir !1741
  %arrayidx44 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name43, i64 0, i64 1, !dbg !18348, !ctir !1119
  %41 = load i8, i8* %arrayidx44, align 1, !dbg !18348
  %tobool45 = icmp ne i8 %41, 0, !dbg !18348
  br i1 %tobool45, label %lor.lhs.false46, label %if.then56, !dbg !18348

lor.lhs.false46:                                  ; preds = %land.lhs.true42
  %42 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18348
  %fts_name47 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 19, !dbg !18348, !ctir !1741
  %arrayidx48 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name47, i64 0, i64 1, !dbg !18348, !ctir !1119
  %43 = load i8, i8* %arrayidx48, align 1, !dbg !18348
  %conv49 = sext i8 %43 to i32, !dbg !18348
  %cmp50 = icmp eq i32 %conv49, 46, !dbg !18348
  br i1 %cmp50, label %land.lhs.true52, label %if.end62, !dbg !18348

land.lhs.true52:                                  ; preds = %lor.lhs.false46
  %44 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18348
  %fts_name53 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 19, !dbg !18348, !ctir !1741
  %arrayidx54 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name53, i64 0, i64 2, !dbg !18348, !ctir !1119
  %45 = load i8, i8* %arrayidx54, align 2, !dbg !18348
  %tobool55 = icmp ne i8 %45, 0, !dbg !18348
  br i1 %tobool55, label %if.end62, label %if.then56, !dbg !18350

if.then56:                                        ; preds = %land.lhs.true52, %land.lhs.true42
  %46 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18351
  %fts_level57 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %46, i32 0, i32 12, !dbg !18353, !ctir !1741
  %47 = load i64, i64* %fts_level57, align 8, !dbg !18353, !ctir !495
  %cmp58 = icmp eq i64 %47, 0, !dbg !18354
  %48 = zext i1 %cmp58 to i64, !dbg !18351
  %cond60 = select i1 %cmp58, i32 1, i32 5, !dbg !18351
  %conv61 = trunc i32 %cond60 to i16, !dbg !18355
  store i16 %conv61, i16* %retval, align 2, !dbg !18356
  br label %return, !dbg !18356

if.end62:                                         ; preds = %land.lhs.true52, %lor.lhs.false46, %cond.end
  store i16 1, i16* %retval, align 2, !dbg !18357
  br label %return, !dbg !18357

if.end63:                                         ; preds = %if.end26
  %49 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18358
  %st_mode64 = getelementptr inbounds %struct.stat, %struct.stat* %49, i32 0, i32 3, !dbg !18358, !ctir !1813
  %50 = load i32, i32* %st_mode64, align 8, !dbg !18358, !ctir !165
  %and65 = and i32 %50, 61440, !dbg !18358
  %cmp66 = icmp eq i32 %and65, 40960, !dbg !18358
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !18360

if.then68:                                        ; preds = %if.end63
  store i16 12, i16* %retval, align 2, !dbg !18361
  br label %return, !dbg !18361

if.end69:                                         ; preds = %if.end63
  %51 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18362
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %51, i32 0, i32 3, !dbg !18362, !ctir !1813
  %52 = load i32, i32* %st_mode70, align 8, !dbg !18362, !ctir !165
  %and71 = and i32 %52, 61440, !dbg !18362
  %cmp72 = icmp eq i32 %and71, 32768, !dbg !18362
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !18364

if.then74:                                        ; preds = %if.end69
  store i16 8, i16* %retval, align 2, !dbg !18365
  br label %return, !dbg !18365

if.end75:                                         ; preds = %if.end69
  store i16 3, i16* %retval, align 2, !dbg !18366
  br label %return, !dbg !18366

return:                                           ; preds = %if.end75, %if.then74, %if.then68, %if.end62, %if.then56, %err, %if.then14
  %53 = load i16, i16* %retval, align 2, !dbg !18367
  ret i16 %53, !dbg !18367
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_sort(%struct.FTS* %sp, %struct._ftsent* %head, i64 %nitems) #4 !dbg !18368 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %head.addr = alloca %struct._ftsent*, align 8
  %nitems.addr = alloca i64, align 8
  %ap = alloca %struct._ftsent**, align 8, !ctir !1869
  %p = alloca %struct._ftsent*, align 8, !ctir !1835
  %dummy = alloca %struct._ftsent*, align 8, !ctir !1835
  %compare = alloca i32 (i8*, i8*)*, align 8, !ctir !865
  %a = alloca %struct._ftsent**, align 8, !ctir !1869
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18371, metadata !DIExpression()), !dbg !18372
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !18373, metadata !DIExpression()), !dbg !18374
  store i64 %nitems, i64* %nitems.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nitems.addr, metadata !18375, metadata !DIExpression()), !dbg !18376
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %ap, metadata !18377, metadata !DIExpression()), !dbg !18378
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18379, metadata !DIExpression()), !dbg !18380
  call void @llvm.dbg.declare(metadata %struct._ftsent** %dummy, metadata !18381, metadata !DIExpression()), !dbg !18382
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %compare, metadata !18383, metadata !DIExpression()), !dbg !18384
  %0 = ptrtoint %struct._ftsent** %dummy to i64, !dbg !18385
  %1 = bitcast %struct._ftsent** %dummy to i8*, !dbg !18386
  %2 = ptrtoint i8* %1 to i64, !dbg !18387
  %cmp = icmp eq i64 %0, %2, !dbg !18388
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !18389

cond.true:                                        ; preds = %entry
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18390
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 9, !dbg !18391, !ctir !1758
  %4 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !18391, !ctir !1772
  %5 = bitcast i32 (%struct._ftsent**, %struct._ftsent**)* %4 to i32 (i8*, i8*)*, !dbg !18392
  br label %cond.end, !dbg !18389

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18389

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 (i8*, i8*)* [ %5, %cond.true ], [ @fts_compar, %cond.false ], !dbg !18389
  store i32 (i8*, i8*)* %cond, i32 (i8*, i8*)** %compare, align 8, !dbg !18384
  %6 = load i64, i64* %nitems.addr, align 8, !dbg !18393
  %7 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18395
  %fts_nitems = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 8, !dbg !18396, !ctir !1758
  %8 = load i64, i64* %fts_nitems, align 8, !dbg !18396, !ctir !52
  %cmp1 = icmp ugt i64 %6, %8, !dbg !18397
  br i1 %cmp1, label %if.then, label %if.end11, !dbg !18398

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %a, metadata !18399, metadata !DIExpression()), !dbg !18401
  %9 = load i64, i64* %nitems.addr, align 8, !dbg !18402
  %add = add i64 %9, 40, !dbg !18403
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18404
  %fts_nitems2 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 8, !dbg !18405, !ctir !1758
  store i64 %add, i64* %fts_nitems2, align 8, !dbg !18406, !ctir !52
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18407
  %fts_nitems3 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 8, !dbg !18409, !ctir !1758
  %12 = load i64, i64* %fts_nitems3, align 8, !dbg !18409, !ctir !52
  %cmp4 = icmp ult i64 2305843009213693951, %12, !dbg !18410
  br i1 %cmp4, label %if.then6, label %lor.lhs.false, !dbg !18411

lor.lhs.false:                                    ; preds = %if.then
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18412
  %fts_array = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 2, !dbg !18413, !ctir !1758
  %14 = load %struct._ftsent**, %struct._ftsent*** %fts_array, align 8, !dbg !18413, !ctir !1764
  %15 = bitcast %struct._ftsent** %14 to i8*, !dbg !18412
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18414
  %fts_nitems5 = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 8, !dbg !18415, !ctir !1758
  %17 = load i64, i64* %fts_nitems5, align 8, !dbg !18415, !ctir !52
  %mul = mul i64 %17, 8, !dbg !18416
  %call = call i8* @realloc(i8* %15, i64 %mul) #12, !dbg !18417
  %18 = bitcast i8* %call to %struct._ftsent**, !dbg !18417
  store %struct._ftsent** %18, %struct._ftsent*** %a, align 8, !dbg !18418
  %tobool = icmp ne %struct._ftsent** %18, null, !dbg !18418
  br i1 %tobool, label %if.end, label %if.then6, !dbg !18419

if.then6:                                         ; preds = %lor.lhs.false, %if.then
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18420
  %fts_array7 = getelementptr inbounds %struct.FTS, %struct.FTS* %19, i32 0, i32 2, !dbg !18422, !ctir !1758
  %20 = load %struct._ftsent**, %struct._ftsent*** %fts_array7, align 8, !dbg !18422, !ctir !1764
  %21 = bitcast %struct._ftsent** %20 to i8*, !dbg !18420
  call void @free(i8* %21) #12, !dbg !18423
  %22 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18424
  %fts_array8 = getelementptr inbounds %struct.FTS, %struct.FTS* %22, i32 0, i32 2, !dbg !18425, !ctir !1758
  store %struct._ftsent** null, %struct._ftsent*** %fts_array8, align 8, !dbg !18426, !ctir !1764
  %23 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18427
  %fts_nitems9 = getelementptr inbounds %struct.FTS, %struct.FTS* %23, i32 0, i32 8, !dbg !18428, !ctir !1758
  store i64 0, i64* %fts_nitems9, align 8, !dbg !18429, !ctir !52
  %24 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18430
  store %struct._ftsent* %24, %struct._ftsent** %retval, align 8, !dbg !18431
  br label %return, !dbg !18431

if.end:                                           ; preds = %lor.lhs.false
  %25 = load %struct._ftsent**, %struct._ftsent*** %a, align 8, !dbg !18432
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18433
  %fts_array10 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 2, !dbg !18434, !ctir !1758
  store %struct._ftsent** %25, %struct._ftsent*** %fts_array10, align 8, !dbg !18435, !ctir !1764
  br label %if.end11, !dbg !18436

if.end11:                                         ; preds = %if.end, %cond.end
  %27 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18437
  %fts_array12 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 2, !dbg !18439, !ctir !1758
  %28 = load %struct._ftsent**, %struct._ftsent*** %fts_array12, align 8, !dbg !18439, !ctir !1764
  store %struct._ftsent** %28, %struct._ftsent*** %ap, align 8, !dbg !18440
  %29 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18441
  store %struct._ftsent* %29, %struct._ftsent** %p, align 8, !dbg !18442
  br label %for.cond, !dbg !18443

for.cond:                                         ; preds = %for.inc, %if.end11
  %30 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18444
  %tobool13 = icmp ne %struct._ftsent* %30, null, !dbg !18446
  br i1 %tobool13, label %for.body, label %for.end, !dbg !18446

for.body:                                         ; preds = %for.cond
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18447
  %32 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18448
  %incdec.ptr = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %32, i32 1, !dbg !18448, !ctir !1835
  store %struct._ftsent** %incdec.ptr, %struct._ftsent*** %ap, align 8, !dbg !18448
  store %struct._ftsent* %31, %struct._ftsent** %32, align 8, !dbg !18449, !ctir !1835
  br label %for.inc, !dbg !18450

for.inc:                                          ; preds = %for.body
  %33 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18451
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 2, !dbg !18452, !ctir !1741
  %34 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !18452, !ctir !1745
  store %struct._ftsent* %34, %struct._ftsent** %p, align 8, !dbg !18453
  br label %for.cond, !dbg !18454, !llvm.loop !18455

for.end:                                          ; preds = %for.cond
  %35 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18457
  %fts_array14 = getelementptr inbounds %struct.FTS, %struct.FTS* %35, i32 0, i32 2, !dbg !18458, !ctir !1758
  %36 = load %struct._ftsent**, %struct._ftsent*** %fts_array14, align 8, !dbg !18458, !ctir !1764
  %37 = bitcast %struct._ftsent** %36 to i8*, !dbg !18459
  %38 = load i64, i64* %nitems.addr, align 8, !dbg !18460
  %39 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare, align 8, !dbg !18461
  call void @qsort(i8* %37, i64 %38, i64 8, i32 (i8*, i8*)* %39), !dbg !18462
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18463
  %fts_array15 = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 2, !dbg !18465, !ctir !1758
  %41 = load %struct._ftsent**, %struct._ftsent*** %fts_array15, align 8, !dbg !18465, !ctir !1764
  store %struct._ftsent** %41, %struct._ftsent*** %ap, align 8, !dbg !18466
  %42 = load %struct._ftsent*, %struct._ftsent** %41, align 8, !dbg !18467, !ctir !1835
  store %struct._ftsent* %42, %struct._ftsent** %head.addr, align 8, !dbg !18468
  br label %for.cond16, !dbg !18469

for.cond16:                                       ; preds = %for.inc21, %for.end
  %43 = load i64, i64* %nitems.addr, align 8, !dbg !18470
  %dec = add i64 %43, -1, !dbg !18470
  store i64 %dec, i64* %nitems.addr, align 8, !dbg !18470
  %tobool17 = icmp ne i64 %dec, 0, !dbg !18472
  br i1 %tobool17, label %for.body18, label %for.end23, !dbg !18472

for.body18:                                       ; preds = %for.cond16
  %44 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18473
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %44, i64 1, !dbg !18473, !ctir !1869
  %45 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !18473
  %46 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18474
  %arrayidx19 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %46, i64 0, !dbg !18474, !ctir !1869
  %47 = load %struct._ftsent*, %struct._ftsent** %arrayidx19, align 8, !dbg !18474
  %fts_link20 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %47, i32 0, i32 2, !dbg !18475, !ctir !1741
  store %struct._ftsent* %45, %struct._ftsent** %fts_link20, align 8, !dbg !18476, !ctir !1745
  br label %for.inc21, !dbg !18474

for.inc21:                                        ; preds = %for.body18
  %48 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18477
  %incdec.ptr22 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %48, i32 1, !dbg !18477, !ctir !1835
  store %struct._ftsent** %incdec.ptr22, %struct._ftsent*** %ap, align 8, !dbg !18477
  br label %for.cond16, !dbg !18478, !llvm.loop !18479

for.end23:                                        ; preds = %for.cond16
  %49 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18481
  %arrayidx24 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %49, i64 0, !dbg !18481, !ctir !1869
  %50 = load %struct._ftsent*, %struct._ftsent** %arrayidx24, align 8, !dbg !18481
  %fts_link25 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %50, i32 0, i32 2, !dbg !18482, !ctir !1741
  store %struct._ftsent* null, %struct._ftsent** %fts_link25, align 8, !dbg !18483, !ctir !1745
  %51 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18484
  store %struct._ftsent* %51, %struct._ftsent** %retval, align 8, !dbg !18485
  br label %return, !dbg !18485

return:                                           ; preds = %for.end23, %if.then6
  %52 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !18486
  ret %struct._ftsent* %52, !dbg !18486
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @setup_dir(%struct.FTS* %fts) #4 !dbg !18487 {
entry:
  %retval = alloca i1, align 1
  %fts.addr = alloca %struct.FTS*, align 8
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !18490, metadata !DIExpression()), !dbg !18491
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18492
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !18494, !ctir !1758
  %1 = load i32, i32* %fts_options, align 8, !dbg !18494, !ctir !5
  %and = and i32 %1, 258, !dbg !18495
  %tobool = icmp ne i32 %and, 0, !dbg !18495
  br i1 %tobool, label %if.then, label %if.else, !dbg !18496

if.then:                                          ; preds = %entry
  %call = call %struct.hash_table* @hash_initialize(i64 31, %struct.hash_tuning* null, i64 (i8*, i64)* @AD_hash, i1 (i8*, i8*)* @AD_compare, void (i8*)* @free), !dbg !18497
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18499
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 12, !dbg !18500, !ctir !1758
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !18501
  store %struct.hash_table* %call, %struct.hash_table** %ht, align 8, !dbg !18502, !ctir !1781
  %3 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18503
  %fts_cycle1 = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 12, !dbg !18505, !ctir !1758
  %ht2 = bitcast %union.anon* %fts_cycle1 to %struct.hash_table**, !dbg !18506
  %4 = load %struct.hash_table*, %struct.hash_table** %ht2, align 8, !dbg !18506, !ctir !1781
  %tobool3 = icmp ne %struct.hash_table* %4, null, !dbg !18503
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !18507

if.then4:                                         ; preds = %if.then
  store i1 false, i1* %retval, align 1, !dbg !18508
  br label %return, !dbg !18508

if.end:                                           ; preds = %if.then
  br label %if.end14, !dbg !18509

if.else:                                          ; preds = %entry
  %call5 = call noalias i8* @malloc(i64 32) #12, !dbg !18510
  %5 = bitcast i8* %call5 to %struct.cycle_check_state*, !dbg !18510
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18512
  %fts_cycle6 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 12, !dbg !18513, !ctir !1758
  %state = bitcast %union.anon* %fts_cycle6 to %struct.cycle_check_state**, !dbg !18514
  store %struct.cycle_check_state* %5, %struct.cycle_check_state** %state, align 8, !dbg !18515, !ctir !1781
  %7 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18516
  %fts_cycle7 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 12, !dbg !18518, !ctir !1758
  %state8 = bitcast %union.anon* %fts_cycle7 to %struct.cycle_check_state**, !dbg !18519
  %8 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state8, align 8, !dbg !18519, !ctir !1781
  %tobool9 = icmp ne %struct.cycle_check_state* %8, null, !dbg !18516
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !18520

if.then10:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !18521
  br label %return, !dbg !18521

if.end11:                                         ; preds = %if.else
  %9 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18522
  %fts_cycle12 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 12, !dbg !18523, !ctir !1758
  %state13 = bitcast %union.anon* %fts_cycle12 to %struct.cycle_check_state**, !dbg !18524
  %10 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state13, align 8, !dbg !18524, !ctir !1781
  call void @cycle_check_init(%struct.cycle_check_state* %10), !dbg !18525
  br label %if.end14

if.end14:                                         ; preds = %if.end11, %if.end
  store i1 true, i1* %retval, align 1, !dbg !18526
  br label %return, !dbg !18526

return:                                           ; preds = %if.end14, %if.then10, %if.then4
  %11 = load i1, i1* %retval, align 1, !dbg !18527
  ret i1 %11, !dbg !18527
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @diropen(%struct.FTS* %sp, i8* %dir) #4 !dbg !18528 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %dir.addr = alloca i8*, align 8
  %open_flags = alloca i32, align 4, !ctir !5
  %fd = alloca i32, align 4, !ctir !5
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18532, metadata !DIExpression()), !dbg !18533
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !18534, metadata !DIExpression()), !dbg !18535
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !18536, metadata !DIExpression()), !dbg !18537
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18538
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !18538, !ctir !1844
  %1 = load i32, i32* %fts_options, align 8, !dbg !18538, !ctir !5
  %and = and i32 %1, 16, !dbg !18538
  %tobool = icmp ne i32 %and, 0, !dbg !18538
  %2 = zext i1 %tobool to i64, !dbg !18538
  %cond = select i1 %tobool, i32 131072, i32 0, !dbg !18538
  %or = or i32 592128, %cond, !dbg !18539
  store i32 %or, i32* %open_flags, align 4, !dbg !18537
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !18540, metadata !DIExpression()), !dbg !18541
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18542
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !18542, !ctir !1844
  %4 = load i32, i32* %fts_options1, align 8, !dbg !18542, !ctir !5
  %and2 = and i32 %4, 512, !dbg !18542
  %tobool3 = icmp ne i32 %and2, 0, !dbg !18542
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !18542

cond.true:                                        ; preds = %entry
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18543
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 6, !dbg !18544, !ctir !1844
  %6 = load i32, i32* %fts_cwd_fd, align 4, !dbg !18544, !ctir !5
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !18545
  %8 = load i32, i32* %open_flags, align 4, !dbg !18546
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %6, i8* %7, i32 %8), !dbg !18547
  br label %cond.end, !dbg !18542

cond.false:                                       ; preds = %entry
  %9 = load i8*, i8** %dir.addr, align 8, !dbg !18548
  %10 = load i32, i32* %open_flags, align 4, !dbg !18549
  %call4 = call i32 (i8*, i32, ...) @open_safer(i8* %9, i32 %10), !dbg !18550
  br label %cond.end, !dbg !18542

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond5 = phi i32 [ %call, %cond.true ], [ %call4, %cond.false ], !dbg !18542
  store i32 %cond5, i32* %fd, align 4, !dbg !18541
  %11 = load i32, i32* %fd, align 4, !dbg !18551
  ret i32 %11, !dbg !18552
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_lfree(%struct._ftsent* %head) #4 !dbg !18553 {
entry:
  %head.addr = alloca %struct._ftsent*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !1835
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !18556, metadata !DIExpression()), !dbg !18557
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18558, metadata !DIExpression()), !dbg !18559
  br label %while.cond, !dbg !18560

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18561
  store %struct._ftsent* %0, %struct._ftsent** %p, align 8, !dbg !18562
  %tobool = icmp ne %struct._ftsent* %0, null, !dbg !18560
  br i1 %tobool, label %while.body, label %while.end, !dbg !18560

while.body:                                       ; preds = %while.cond
  %1 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18563
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 2, !dbg !18565, !ctir !1741
  %2 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !18565, !ctir !1745
  store %struct._ftsent* %2, %struct._ftsent** %head.addr, align 8, !dbg !18566
  %3 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18567
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %3, i32 0, i32 3, !dbg !18569, !ctir !1741
  %4 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !18569, !ctir !530
  %tobool1 = icmp ne %struct.__dirstream* %4, null, !dbg !18567
  br i1 %tobool1, label %if.then, label %if.end, !dbg !18570

if.then:                                          ; preds = %while.body
  %5 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18571
  %fts_dirp2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 3, !dbg !18572, !ctir !1741
  %6 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp2, align 8, !dbg !18572, !ctir !530
  %call = call i32 @closedir(%struct.__dirstream* %6), !dbg !18573
  br label %if.end, !dbg !18573

if.end:                                           ; preds = %if.then, %while.body
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18574
  %8 = bitcast %struct._ftsent* %7 to i8*, !dbg !18574
  call void @free(i8* %8) #12, !dbg !18575
  br label %while.cond, !dbg !18560, !llvm.loop !18576

while.end:                                        ; preds = %while.cond
  ret void, !dbg !18578
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @AD_hash(i8* %x, i64 %table_size) #4 !dbg !18579 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %ax = alloca %struct.Active_dir*, align 8, !ctir !1836
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !18580, metadata !DIExpression()), !dbg !18581
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !18582, metadata !DIExpression()), !dbg !18583
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ax, metadata !18584, metadata !DIExpression()), !dbg !18585
  %0 = load i8*, i8** %x.addr, align 8, !dbg !18586
  %1 = bitcast i8* %0 to %struct.Active_dir*, !dbg !18586
  store %struct.Active_dir* %1, %struct.Active_dir** %ax, align 8, !dbg !18585
  %2 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !18587
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %2, i32 0, i32 1, !dbg !18588, !ctir !1837
  %3 = load i64, i64* %ino, align 8, !dbg !18588, !ctir !256
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !18589
  %rem = urem i64 %3, %4, !dbg !18590
  ret i64 %rem, !dbg !18591
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @AD_compare(i8* %x, i8* %y) #4 !dbg !18592 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %ax = alloca %struct.Active_dir*, align 8, !ctir !1836
  %ay = alloca %struct.Active_dir*, align 8, !ctir !1836
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !18593, metadata !DIExpression()), !dbg !18594
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !18595, metadata !DIExpression()), !dbg !18596
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ax, metadata !18597, metadata !DIExpression()), !dbg !18598
  %0 = load i8*, i8** %x.addr, align 8, !dbg !18599
  %1 = bitcast i8* %0 to %struct.Active_dir*, !dbg !18599
  store %struct.Active_dir* %1, %struct.Active_dir** %ax, align 8, !dbg !18598
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ay, metadata !18600, metadata !DIExpression()), !dbg !18601
  %2 = load i8*, i8** %y.addr, align 8, !dbg !18602
  %3 = bitcast i8* %2 to %struct.Active_dir*, !dbg !18602
  store %struct.Active_dir* %3, %struct.Active_dir** %ay, align 8, !dbg !18601
  %4 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !18603
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %4, i32 0, i32 1, !dbg !18604, !ctir !1837
  %5 = load i64, i64* %ino, align 8, !dbg !18604, !ctir !256
  %6 = load %struct.Active_dir*, %struct.Active_dir** %ay, align 8, !dbg !18605
  %ino1 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %6, i32 0, i32 1, !dbg !18606, !ctir !1837
  %7 = load i64, i64* %ino1, align 8, !dbg !18606, !ctir !256
  %cmp = icmp eq i64 %5, %7, !dbg !18607
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18608

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !18609
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %8, i32 0, i32 0, !dbg !18610, !ctir !1837
  %9 = load i64, i64* %dev, align 8, !dbg !18610, !ctir !259
  %10 = load %struct.Active_dir*, %struct.Active_dir** %ay, align 8, !dbg !18611
  %dev2 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %10, i32 0, i32 0, !dbg !18612, !ctir !1837
  %11 = load i64, i64* %dev2, align 8, !dbg !18612, !ctir !259
  %cmp3 = icmp eq i64 %9, %11, !dbg !18613
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !18614
  ret i1 %12, !dbg !18615
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_compar(i8* %a, i8* %b) #4 !dbg !18616 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %pa = alloca %struct._ftsent**, align 8, !ctir !1738
  %pb = alloca %struct._ftsent**, align 8, !ctir !1738
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !18617, metadata !DIExpression()), !dbg !18618
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !18619, metadata !DIExpression()), !dbg !18620
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %pa, metadata !18621, metadata !DIExpression()), !dbg !18622
  %0 = load i8*, i8** %a.addr, align 8, !dbg !18623
  %1 = bitcast i8* %0 to %struct._ftsent**, !dbg !18624
  store %struct._ftsent** %1, %struct._ftsent*** %pa, align 8, !dbg !18622
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %pb, metadata !18625, metadata !DIExpression()), !dbg !18626
  %2 = load i8*, i8** %b.addr, align 8, !dbg !18627
  %3 = bitcast i8* %2 to %struct._ftsent**, !dbg !18628
  store %struct._ftsent** %3, %struct._ftsent*** %pb, align 8, !dbg !18626
  %4 = load %struct._ftsent**, %struct._ftsent*** %pa, align 8, !dbg !18629
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %4, i64 0, !dbg !18629, !ctir !1738
  %5 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !18629
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 11, !dbg !18630, !ctir !1740
  %6 = load %struct.FTS*, %struct.FTS** %fts_fts, align 8, !dbg !18630, !ctir !1757
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 9, !dbg !18631, !ctir !1758
  %7 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !18631, !ctir !1772
  %8 = load %struct._ftsent**, %struct._ftsent*** %pa, align 8, !dbg !18632
  %9 = load %struct._ftsent**, %struct._ftsent*** %pb, align 8, !dbg !18633
  %call = call i32 %7(%struct._ftsent** %8, %struct._ftsent** %9), !dbg !18629
  ret i32 %call, !dbg !18634
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fts_close(%struct.FTS* %sp) #4 !dbg !18635 {
entry:
  %retval = alloca i32, align 4
  %sp.addr = alloca %struct.FTS*, align 8
  %freep = alloca %struct._ftsent*, align 8, !ctir !1835
  %p = alloca %struct._ftsent*, align 8, !ctir !1835
  %saved_errno = alloca i32, align 4, !ctir !5
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18638, metadata !DIExpression()), !dbg !18639
  call void @llvm.dbg.declare(metadata %struct._ftsent** %freep, metadata !18640, metadata !DIExpression()), !dbg !18641
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18642, metadata !DIExpression()), !dbg !18643
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !18644, metadata !DIExpression()), !dbg !18645
  store i32 0, i32* %saved_errno, align 4, !dbg !18645
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18646
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !18648, !ctir !1758
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !18648, !ctir !1745
  %tobool = icmp ne %struct._ftsent* %1, null, !dbg !18646
  br i1 %tobool, label %if.then, label %if.end, !dbg !18649

if.then:                                          ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18650
  %fts_cur1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 0, !dbg !18653, !ctir !1758
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_cur1, align 8, !dbg !18653, !ctir !1745
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !18654
  br label %for.cond, !dbg !18655

for.cond:                                         ; preds = %cond.end, %if.then
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18656
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 12, !dbg !18658, !ctir !1741
  %5 = load i64, i64* %fts_level, align 8, !dbg !18658, !ctir !495
  %cmp = icmp sge i64 %5, 0, !dbg !18659
  br i1 %cmp, label %for.body, label %for.end, !dbg !18660

for.body:                                         ; preds = %for.cond
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18661
  store %struct._ftsent* %6, %struct._ftsent** %freep, align 8, !dbg !18663
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18664
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 2, !dbg !18665, !ctir !1741
  %8 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !18665, !ctir !1745
  %cmp2 = icmp ne %struct._ftsent* %8, null, !dbg !18666
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !18664

cond.true:                                        ; preds = %for.body
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18667
  %fts_link3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 2, !dbg !18668, !ctir !1741
  %10 = load %struct._ftsent*, %struct._ftsent** %fts_link3, align 8, !dbg !18668, !ctir !1745
  br label %cond.end, !dbg !18664

cond.false:                                       ; preds = %for.body
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18669
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 1, !dbg !18670, !ctir !1741
  %12 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !18670, !ctir !1745
  br label %cond.end, !dbg !18664

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._ftsent* [ %10, %cond.true ], [ %12, %cond.false ], !dbg !18664
  store %struct._ftsent* %cond, %struct._ftsent** %p, align 8, !dbg !18671
  %13 = load %struct._ftsent*, %struct._ftsent** %freep, align 8, !dbg !18672
  %14 = bitcast %struct._ftsent* %13 to i8*, !dbg !18672
  call void @free(i8* %14) #12, !dbg !18673
  br label %for.cond, !dbg !18674, !llvm.loop !18675

for.end:                                          ; preds = %for.cond
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18677
  %16 = bitcast %struct._ftsent* %15 to i8*, !dbg !18677
  call void @free(i8* %16) #12, !dbg !18678
  br label %if.end, !dbg !18679

if.end:                                           ; preds = %for.end, %entry
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18680
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 1, !dbg !18682, !ctir !1758
  %18 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !18682, !ctir !1745
  %tobool4 = icmp ne %struct._ftsent* %18, null, !dbg !18680
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !18683

if.then5:                                         ; preds = %if.end
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18684
  %fts_child6 = getelementptr inbounds %struct.FTS, %struct.FTS* %19, i32 0, i32 1, !dbg !18685, !ctir !1758
  %20 = load %struct._ftsent*, %struct._ftsent** %fts_child6, align 8, !dbg !18685, !ctir !1745
  call void @fts_lfree(%struct._ftsent* %20), !dbg !18686
  br label %if.end7, !dbg !18686

if.end7:                                          ; preds = %if.then5, %if.end
  %21 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18687
  %fts_array = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 2, !dbg !18688, !ctir !1758
  %22 = load %struct._ftsent**, %struct._ftsent*** %fts_array, align 8, !dbg !18688, !ctir !1764
  %23 = bitcast %struct._ftsent** %22 to i8*, !dbg !18687
  call void @free(i8* %23) #12, !dbg !18689
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18690
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 4, !dbg !18691, !ctir !1758
  %25 = load i8*, i8** %fts_path, align 8, !dbg !18691, !ctir !7
  call void @free(i8* %25) #12, !dbg !18692
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18693
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 10, !dbg !18693, !ctir !1758
  %27 = load i32, i32* %fts_options, align 8, !dbg !18693, !ctir !5
  %and = and i32 %27, 512, !dbg !18693
  %tobool8 = icmp ne i32 %and, 0, !dbg !18693
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !18695

if.then9:                                         ; preds = %if.end7
  %28 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18696
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %28, i32 0, i32 6, !dbg !18699, !ctir !1758
  %29 = load i32, i32* %fts_cwd_fd, align 4, !dbg !18699, !ctir !5
  %cmp10 = icmp sle i32 0, %29, !dbg !18700
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !18701

if.then11:                                        ; preds = %if.then9
  %30 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18702
  %fts_cwd_fd12 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 6, !dbg !18704, !ctir !1758
  %31 = load i32, i32* %fts_cwd_fd12, align 4, !dbg !18704, !ctir !5
  %call = call i32 @close(i32 %31), !dbg !18705
  %tobool13 = icmp ne i32 %call, 0, !dbg !18705
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !18706

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #15, !dbg !18707
  %32 = load i32, i32* %call15, align 4, !dbg !18707, !ctir !5
  store i32 %32, i32* %saved_errno, align 4, !dbg !18708
  br label %if.end16, !dbg !18709

if.end16:                                         ; preds = %if.then14, %if.then11
  br label %if.end17, !dbg !18710

if.end17:                                         ; preds = %if.end16, %if.then9
  br label %if.end37, !dbg !18711

if.else:                                          ; preds = %if.end7
  %33 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18712
  %fts_options18 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 10, !dbg !18712, !ctir !1758
  %34 = load i32, i32* %fts_options18, align 8, !dbg !18712, !ctir !5
  %and19 = and i32 %34, 4, !dbg !18712
  %tobool20 = icmp ne i32 %and19, 0, !dbg !18712
  br i1 %tobool20, label %if.end36, label %if.then21, !dbg !18714

if.then21:                                        ; preds = %if.else
  %35 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18715
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %35, i32 0, i32 5, !dbg !18718, !ctir !1758
  %36 = load i32, i32* %fts_rfd, align 8, !dbg !18718, !ctir !5
  %call22 = call i32 @fchdir(i32 %36) #12, !dbg !18719
  %tobool23 = icmp ne i32 %call22, 0, !dbg !18719
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !18720

if.then24:                                        ; preds = %if.then21
  %call25 = call i32* @__errno_location() #15, !dbg !18721
  %37 = load i32, i32* %call25, align 4, !dbg !18721, !ctir !5
  store i32 %37, i32* %saved_errno, align 4, !dbg !18722
  br label %if.end26, !dbg !18723

if.end26:                                         ; preds = %if.then24, %if.then21
  %38 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18724
  %fts_rfd27 = getelementptr inbounds %struct.FTS, %struct.FTS* %38, i32 0, i32 5, !dbg !18726, !ctir !1758
  %39 = load i32, i32* %fts_rfd27, align 8, !dbg !18726, !ctir !5
  %call28 = call i32 @close(i32 %39), !dbg !18727
  %tobool29 = icmp ne i32 %call28, 0, !dbg !18727
  br i1 %tobool29, label %if.then30, label %if.end35, !dbg !18728

if.then30:                                        ; preds = %if.end26
  %40 = load i32, i32* %saved_errno, align 4, !dbg !18729
  %cmp31 = icmp eq i32 %40, 0, !dbg !18731
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !18732

if.then32:                                        ; preds = %if.then30
  %call33 = call i32* @__errno_location() #15, !dbg !18733
  %41 = load i32, i32* %call33, align 4, !dbg !18733, !ctir !5
  store i32 %41, i32* %saved_errno, align 4, !dbg !18734
  br label %if.end34, !dbg !18735

if.end34:                                         ; preds = %if.then32, %if.then30
  br label %if.end35, !dbg !18736

if.end35:                                         ; preds = %if.end34, %if.end26
  br label %if.end36, !dbg !18737

if.end36:                                         ; preds = %if.end35, %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end17
  %42 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18738
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %42, i32 0, i32 13, !dbg !18739, !ctir !1758
  call void @fd_ring_clear(%struct.I_ring* %fts_fd_ring), !dbg !18740
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18741
  %fts_leaf_optimization_works_ht = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 11, !dbg !18743, !ctir !1758
  %44 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht, align 8, !dbg !18743, !ctir !1140
  %tobool38 = icmp ne %struct.hash_table* %44, null, !dbg !18741
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !18744

if.then39:                                        ; preds = %if.end37
  %45 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18745
  %fts_leaf_optimization_works_ht40 = getelementptr inbounds %struct.FTS, %struct.FTS* %45, i32 0, i32 11, !dbg !18746, !ctir !1758
  %46 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht40, align 8, !dbg !18746, !ctir !1140
  call void @hash_free(%struct.hash_table* %46), !dbg !18747
  br label %if.end41, !dbg !18747

if.end41:                                         ; preds = %if.then39, %if.end37
  %47 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18748
  call void @free_dir(%struct.FTS* %47), !dbg !18749
  %48 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18750
  %49 = bitcast %struct.FTS* %48 to i8*, !dbg !18750
  call void @free(i8* %49) #12, !dbg !18751
  %50 = load i32, i32* %saved_errno, align 4, !dbg !18752
  %tobool42 = icmp ne i32 %50, 0, !dbg !18752
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !18754

if.then43:                                        ; preds = %if.end41
  %51 = load i32, i32* %saved_errno, align 4, !dbg !18755
  %call44 = call i32* @__errno_location() #15, !dbg !18755
  store i32 %51, i32* %call44, align 4, !dbg !18755, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !18757
  br label %return, !dbg !18757

if.end45:                                         ; preds = %if.end41
  store i32 0, i32* %retval, align 4, !dbg !18758
  br label %return, !dbg !18758

return:                                           ; preds = %if.end45, %if.then43
  %52 = load i32, i32* %retval, align 4, !dbg !18759
  ret i32 %52, !dbg !18759
}

; Function Attrs: nounwind
declare dso_local i32 @fchdir(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fd_ring_clear(%struct.I_ring* %fd_ring) #4 !dbg !18760 {
entry:
  %fd_ring.addr = alloca %struct.I_ring*, align 8
  %fd = alloca i32, align 4, !ctir !5
  store %struct.I_ring* %fd_ring, %struct.I_ring** %fd_ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %fd_ring.addr, metadata !18764, metadata !DIExpression()), !dbg !18765
  br label %while.cond, !dbg !18766

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.I_ring*, %struct.I_ring** %fd_ring.addr, align 8, !dbg !18767
  %call = call zeroext i1 @i_ring_empty(%struct.I_ring* %0) #14, !dbg !18768
  %lnot = xor i1 %call, true, !dbg !18769
  br i1 %lnot, label %while.body, label %while.end, !dbg !18766

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !18770, metadata !DIExpression()), !dbg !18772
  %1 = load %struct.I_ring*, %struct.I_ring** %fd_ring.addr, align 8, !dbg !18773
  %call1 = call i32 @i_ring_pop(%struct.I_ring* %1), !dbg !18774
  store i32 %call1, i32* %fd, align 4, !dbg !18772
  %2 = load i32, i32* %fd, align 4, !dbg !18775
  %cmp = icmp sle i32 0, %2, !dbg !18777
  br i1 %cmp, label %if.then, label %if.end, !dbg !18778

if.then:                                          ; preds = %while.body
  %3 = load i32, i32* %fd, align 4, !dbg !18779
  %call2 = call i32 @close(i32 %3), !dbg !18780
  br label %if.end, !dbg !18780

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !18766, !llvm.loop !18781

while.end:                                        ; preds = %while.cond
  ret void, !dbg !18783
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_dir(%struct.FTS* %sp) #4 !dbg !18784 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18787, metadata !DIExpression()), !dbg !18788
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18789
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !18791, !ctir !1758
  %1 = load i32, i32* %fts_options, align 8, !dbg !18791, !ctir !5
  %and = and i32 %1, 258, !dbg !18792
  %tobool = icmp ne i32 %and, 0, !dbg !18792
  br i1 %tobool, label %if.then, label %if.else, !dbg !18793

if.then:                                          ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18794
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 12, !dbg !18797, !ctir !1758
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !18798
  %3 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !18798, !ctir !1781
  %tobool1 = icmp ne %struct.hash_table* %3, null, !dbg !18794
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !18799

if.then2:                                         ; preds = %if.then
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18800
  %fts_cycle3 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 12, !dbg !18801, !ctir !1758
  %ht4 = bitcast %union.anon* %fts_cycle3 to %struct.hash_table**, !dbg !18802
  %5 = load %struct.hash_table*, %struct.hash_table** %ht4, align 8, !dbg !18802, !ctir !1781
  call void @hash_free(%struct.hash_table* %5), !dbg !18803
  br label %if.end, !dbg !18803

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end6, !dbg !18804

if.else:                                          ; preds = %entry
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18805
  %fts_cycle5 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 12, !dbg !18806, !ctir !1758
  %state = bitcast %union.anon* %fts_cycle5 to %struct.cycle_check_state**, !dbg !18807
  %7 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !18807, !ctir !1781
  %8 = bitcast %struct.cycle_check_state* %7 to i8*, !dbg !18805
  call void @free(i8* %8) #12, !dbg !18808
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end
  ret void, !dbg !18809
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._ftsent* @rpl_fts_read(%struct.FTS* %sp) #4 !dbg !18810 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !1835
  %tmp = alloca %struct._ftsent*, align 8, !ctir !1835
  %instr = alloca i16, align 2, !ctir !34
  %t = alloca i8*, align 8, !ctir !7
  %parent = alloca %struct._ftsent*, align 8, !ctir !1835
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18813, metadata !DIExpression()), !dbg !18814
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18815, metadata !DIExpression()), !dbg !18816
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tmp, metadata !18817, metadata !DIExpression()), !dbg !18818
  call void @llvm.dbg.declare(metadata i16* %instr, metadata !18819, metadata !DIExpression()), !dbg !18820
  call void @llvm.dbg.declare(metadata i8** %t, metadata !18821, metadata !DIExpression()), !dbg !18822
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18823
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !18825, !ctir !1758
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !18825, !ctir !1745
  %cmp = icmp eq %struct._ftsent* %1, null, !dbg !18826
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18827

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18828
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !18828, !ctir !1758
  %3 = load i32, i32* %fts_options, align 8, !dbg !18828, !ctir !5
  %and = and i32 %3, 8192, !dbg !18828
  %tobool = icmp ne i32 %and, 0, !dbg !18828
  br i1 %tobool, label %if.then, label %if.end, !dbg !18829

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !18830
  br label %return, !dbg !18830

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18831
  %fts_cur1 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 0, !dbg !18832, !ctir !1758
  %5 = load %struct._ftsent*, %struct._ftsent** %fts_cur1, align 8, !dbg !18832, !ctir !1745
  store %struct._ftsent* %5, %struct._ftsent** %p, align 8, !dbg !18833
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18834
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 17, !dbg !18835, !ctir !1741
  %7 = load i16, i16* %fts_instr, align 4, !dbg !18835, !ctir !34
  store i16 %7, i16* %instr, align 2, !dbg !18836
  %8 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18837
  %fts_instr2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 17, !dbg !18838, !ctir !1741
  store i16 3, i16* %fts_instr2, align 4, !dbg !18839, !ctir !34
  %9 = load i16, i16* %instr, align 2, !dbg !18840
  %conv = zext i16 %9 to i32, !dbg !18840
  %cmp3 = icmp eq i32 %conv, 1, !dbg !18842
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !18843

if.then5:                                         ; preds = %if.end
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18844
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18846
  %call = call zeroext i16 @fts_stat(%struct.FTS* %10, %struct._ftsent* %11, i1 zeroext false), !dbg !18847
  %12 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18848
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 15, !dbg !18849, !ctir !1741
  store i16 %call, i16* %fts_info, align 8, !dbg !18850, !ctir !34
  %13 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18851
  store %struct._ftsent* %13, %struct._ftsent** %retval, align 8, !dbg !18852
  br label %return, !dbg !18852

if.end6:                                          ; preds = %if.end
  %14 = load i16, i16* %instr, align 2, !dbg !18853
  %conv7 = zext i16 %14 to i32, !dbg !18853
  %cmp8 = icmp eq i32 %conv7, 2, !dbg !18855
  br i1 %cmp8, label %land.lhs.true, label %if.end41, !dbg !18856

land.lhs.true:                                    ; preds = %if.end6
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18857
  %fts_info10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 15, !dbg !18858, !ctir !1741
  %16 = load i16, i16* %fts_info10, align 8, !dbg !18858, !ctir !34
  %conv11 = zext i16 %16 to i32, !dbg !18857
  %cmp12 = icmp eq i32 %conv11, 12, !dbg !18859
  br i1 %cmp12, label %if.then19, label %lor.lhs.false14, !dbg !18860

lor.lhs.false14:                                  ; preds = %land.lhs.true
  %17 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18861
  %fts_info15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 15, !dbg !18862, !ctir !1741
  %18 = load i16, i16* %fts_info15, align 8, !dbg !18862, !ctir !34
  %conv16 = zext i16 %18 to i32, !dbg !18861
  %cmp17 = icmp eq i32 %conv16, 13, !dbg !18863
  br i1 %cmp17, label %if.then19, label %if.end41, !dbg !18864

if.then19:                                        ; preds = %lor.lhs.false14, %land.lhs.true
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18865
  %20 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18867
  %call20 = call zeroext i16 @fts_stat(%struct.FTS* %19, %struct._ftsent* %20, i1 zeroext true), !dbg !18868
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18869
  %fts_info21 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 15, !dbg !18870, !ctir !1741
  store i16 %call20, i16* %fts_info21, align 8, !dbg !18871, !ctir !34
  %22 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18872
  %fts_info22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 15, !dbg !18874, !ctir !1741
  %23 = load i16, i16* %fts_info22, align 8, !dbg !18874, !ctir !34
  %conv23 = zext i16 %23 to i32, !dbg !18872
  %cmp24 = icmp eq i32 %conv23, 1, !dbg !18875
  br i1 %cmp24, label %land.lhs.true26, label %if.end40, !dbg !18876

land.lhs.true26:                                  ; preds = %if.then19
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18877
  %fts_options27 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !18877, !ctir !1758
  %25 = load i32, i32* %fts_options27, align 8, !dbg !18877, !ctir !5
  %and28 = and i32 %25, 4, !dbg !18877
  %tobool29 = icmp ne i32 %and28, 0, !dbg !18877
  br i1 %tobool29, label %if.end40, label %if.then30, !dbg !18878

if.then30:                                        ; preds = %land.lhs.true26
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18879
  %call31 = call i32 @diropen(%struct.FTS* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.431, i64 0, i64 0)), !dbg !18882
  %27 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18883
  %fts_symfd = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 9, !dbg !18884, !ctir !1741
  store i32 %call31, i32* %fts_symfd, align 4, !dbg !18885, !ctir !5
  %cmp32 = icmp slt i32 %call31, 0, !dbg !18886
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !18887

if.then34:                                        ; preds = %if.then30
  %call35 = call i32* @__errno_location() #15, !dbg !18888
  %28 = load i32, i32* %call35, align 4, !dbg !18888, !ctir !5
  %29 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18890
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 8, !dbg !18891, !ctir !1741
  store i32 %28, i32* %fts_errno, align 8, !dbg !18892, !ctir !5
  %30 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18893
  %fts_info36 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 15, !dbg !18894, !ctir !1741
  store i16 7, i16* %fts_info36, align 8, !dbg !18895, !ctir !34
  br label %if.end39, !dbg !18896

if.else:                                          ; preds = %if.then30
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18897
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 16, !dbg !18898, !ctir !1741
  %32 = load i16, i16* %fts_flags, align 2, !dbg !18899, !ctir !34
  %conv37 = zext i16 %32 to i32, !dbg !18899
  %or = or i32 %conv37, 2, !dbg !18899
  %conv38 = trunc i32 %or to i16, !dbg !18899
  store i16 %conv38, i16* %fts_flags, align 2, !dbg !18899, !ctir !34
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then34
  br label %if.end40, !dbg !18900

if.end40:                                         ; preds = %if.end39, %land.lhs.true26, %if.then19
  br label %check_for_dir, !dbg !18901

if.end41:                                         ; preds = %lor.lhs.false14, %if.end6
  %33 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18902
  %fts_info42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 15, !dbg !18904, !ctir !1741
  %34 = load i16, i16* %fts_info42, align 8, !dbg !18904, !ctir !34
  %conv43 = zext i16 %34 to i32, !dbg !18902
  %cmp44 = icmp eq i32 %conv43, 1, !dbg !18905
  br i1 %cmp44, label %if.then46, label %if.end132, !dbg !18906

if.then46:                                        ; preds = %if.end41
  %35 = load i16, i16* %instr, align 2, !dbg !18907
  %conv47 = zext i16 %35 to i32, !dbg !18907
  %cmp48 = icmp eq i32 %conv47, 4, !dbg !18910
  br i1 %cmp48, label %if.then57, label %lor.lhs.false50, !dbg !18911

lor.lhs.false50:                                  ; preds = %if.then46
  %36 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18912
  %fts_options51 = getelementptr inbounds %struct.FTS, %struct.FTS* %36, i32 0, i32 10, !dbg !18912, !ctir !1758
  %37 = load i32, i32* %fts_options51, align 8, !dbg !18912, !ctir !5
  %and52 = and i32 %37, 64, !dbg !18912
  %tobool53 = icmp ne i32 %and52, 0, !dbg !18912
  br i1 %tobool53, label %land.lhs.true54, label %if.end72, !dbg !18913

land.lhs.true54:                                  ; preds = %lor.lhs.false50
  %38 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18914
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 18, !dbg !18915, !ctir !1741
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !18916, !ctir !1812
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !18916, !ctir !1813
  %39 = load i64, i64* %st_dev, align 8, !dbg !18916, !ctir !260
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18917
  %fts_dev = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 3, !dbg !18918, !ctir !1758
  %41 = load i64, i64* %fts_dev, align 8, !dbg !18918, !ctir !259
  %cmp55 = icmp ne i64 %39, %41, !dbg !18919
  br i1 %cmp55, label %if.then57, label %if.end72, !dbg !18920

if.then57:                                        ; preds = %land.lhs.true54, %if.then46
  %42 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18921
  %fts_flags58 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 16, !dbg !18924, !ctir !1741
  %43 = load i16, i16* %fts_flags58, align 2, !dbg !18924, !ctir !34
  %conv59 = zext i16 %43 to i32, !dbg !18921
  %and60 = and i32 %conv59, 2, !dbg !18925
  %tobool61 = icmp ne i32 %and60, 0, !dbg !18925
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !18926

if.then62:                                        ; preds = %if.then57
  %44 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18927
  %fts_symfd63 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 9, !dbg !18928, !ctir !1741
  %45 = load i32, i32* %fts_symfd63, align 4, !dbg !18928, !ctir !5
  %call64 = call i32 @close(i32 %45), !dbg !18929
  br label %if.end65, !dbg !18930

if.end65:                                         ; preds = %if.then62, %if.then57
  %46 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18931
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %46, i32 0, i32 1, !dbg !18933, !ctir !1758
  %47 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !18933, !ctir !1745
  %tobool66 = icmp ne %struct._ftsent* %47, null, !dbg !18931
  br i1 %tobool66, label %if.then67, label %if.end70, !dbg !18934

if.then67:                                        ; preds = %if.end65
  %48 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18935
  %fts_child68 = getelementptr inbounds %struct.FTS, %struct.FTS* %48, i32 0, i32 1, !dbg !18937, !ctir !1758
  %49 = load %struct._ftsent*, %struct._ftsent** %fts_child68, align 8, !dbg !18937, !ctir !1745
  call void @fts_lfree(%struct._ftsent* %49), !dbg !18938
  %50 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18939
  %fts_child69 = getelementptr inbounds %struct.FTS, %struct.FTS* %50, i32 0, i32 1, !dbg !18940, !ctir !1758
  store %struct._ftsent* null, %struct._ftsent** %fts_child69, align 8, !dbg !18941, !ctir !1745
  br label %if.end70, !dbg !18942

if.end70:                                         ; preds = %if.then67, %if.end65
  %51 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18943
  %fts_info71 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %51, i32 0, i32 15, !dbg !18944, !ctir !1741
  store i16 6, i16* %fts_info71, align 8, !dbg !18945, !ctir !34
  br label %do.body, !dbg !18946

do.body:                                          ; preds = %if.end70
  %52 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18947
  %53 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18947
  call void @leave_dir(%struct.FTS* %52, %struct._ftsent* %53), !dbg !18947
  br label %do.end, !dbg !18947

do.end:                                           ; preds = %do.body
  %54 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18949
  store %struct._ftsent* %54, %struct._ftsent** %retval, align 8, !dbg !18950
  br label %return, !dbg !18950

if.end72:                                         ; preds = %land.lhs.true54, %lor.lhs.false50
  %55 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18951
  %fts_child73 = getelementptr inbounds %struct.FTS, %struct.FTS* %55, i32 0, i32 1, !dbg !18953, !ctir !1758
  %56 = load %struct._ftsent*, %struct._ftsent** %fts_child73, align 8, !dbg !18953, !ctir !1745
  %cmp74 = icmp ne %struct._ftsent* %56, null, !dbg !18954
  br i1 %cmp74, label %land.lhs.true76, label %if.end85, !dbg !18955

land.lhs.true76:                                  ; preds = %if.end72
  %57 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18956
  %fts_options77 = getelementptr inbounds %struct.FTS, %struct.FTS* %57, i32 0, i32 10, !dbg !18956, !ctir !1758
  %58 = load i32, i32* %fts_options77, align 8, !dbg !18956, !ctir !5
  %and78 = and i32 %58, 4096, !dbg !18956
  %tobool79 = icmp ne i32 %and78, 0, !dbg !18956
  br i1 %tobool79, label %if.then80, label %if.end85, !dbg !18957

if.then80:                                        ; preds = %land.lhs.true76
  %59 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18958
  %fts_options81 = getelementptr inbounds %struct.FTS, %struct.FTS* %59, i32 0, i32 10, !dbg !18958, !ctir !1758
  %60 = load i32, i32* %fts_options81, align 8, !dbg !18958, !ctir !5
  %and82 = and i32 %60, -4097, !dbg !18958
  store i32 %and82, i32* %fts_options81, align 8, !dbg !18958, !ctir !5
  %61 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18960
  %fts_child83 = getelementptr inbounds %struct.FTS, %struct.FTS* %61, i32 0, i32 1, !dbg !18961, !ctir !1758
  %62 = load %struct._ftsent*, %struct._ftsent** %fts_child83, align 8, !dbg !18961, !ctir !1745
  call void @fts_lfree(%struct._ftsent* %62), !dbg !18962
  %63 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18963
  %fts_child84 = getelementptr inbounds %struct.FTS, %struct.FTS* %63, i32 0, i32 1, !dbg !18964, !ctir !1758
  store %struct._ftsent* null, %struct._ftsent** %fts_child84, align 8, !dbg !18965, !ctir !1745
  br label %if.end85, !dbg !18966

if.end85:                                         ; preds = %if.then80, %land.lhs.true76, %if.end72
  %64 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18967
  %fts_child86 = getelementptr inbounds %struct.FTS, %struct.FTS* %64, i32 0, i32 1, !dbg !18969, !ctir !1758
  %65 = load %struct._ftsent*, %struct._ftsent** %fts_child86, align 8, !dbg !18969, !ctir !1745
  %cmp87 = icmp ne %struct._ftsent* %65, null, !dbg !18970
  br i1 %cmp87, label %if.then89, label %if.else105, !dbg !18971

if.then89:                                        ; preds = %if.end85
  %66 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18972
  %67 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18975
  %68 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18976
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %68, i32 0, i32 6, !dbg !18977, !ctir !1741
  %69 = load i8*, i8** %fts_accpath, align 8, !dbg !18977, !ctir !7
  %call90 = call i32 @fts_safe_changedir(%struct.FTS* %66, %struct._ftsent* %67, i32 -1, i8* %69), !dbg !18978
  %tobool91 = icmp ne i32 %call90, 0, !dbg !18978
  br i1 %tobool91, label %if.then92, label %if.end104, !dbg !18979

if.then92:                                        ; preds = %if.then89
  %call93 = call i32* @__errno_location() #15, !dbg !18980
  %70 = load i32, i32* %call93, align 4, !dbg !18980, !ctir !5
  %71 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18982
  %fts_errno94 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %71, i32 0, i32 8, !dbg !18983, !ctir !1741
  store i32 %70, i32* %fts_errno94, align 8, !dbg !18984, !ctir !5
  %72 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18985
  %fts_flags95 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %72, i32 0, i32 16, !dbg !18986, !ctir !1741
  %73 = load i16, i16* %fts_flags95, align 2, !dbg !18987, !ctir !34
  %conv96 = zext i16 %73 to i32, !dbg !18987
  %or97 = or i32 %conv96, 1, !dbg !18987
  %conv98 = trunc i32 %or97 to i16, !dbg !18987
  store i16 %conv98, i16* %fts_flags95, align 2, !dbg !18987, !ctir !34
  %74 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18988
  %fts_child99 = getelementptr inbounds %struct.FTS, %struct.FTS* %74, i32 0, i32 1, !dbg !18990, !ctir !1758
  %75 = load %struct._ftsent*, %struct._ftsent** %fts_child99, align 8, !dbg !18990, !ctir !1745
  store %struct._ftsent* %75, %struct._ftsent** %p, align 8, !dbg !18991
  br label %for.cond, !dbg !18992

for.cond:                                         ; preds = %for.inc, %if.then92
  %76 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18993
  %cmp100 = icmp ne %struct._ftsent* %76, null, !dbg !18995
  br i1 %cmp100, label %for.body, label %for.end, !dbg !18996

for.body:                                         ; preds = %for.cond
  %77 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18997
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %77, i32 0, i32 1, !dbg !18998, !ctir !1741
  %78 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !18998, !ctir !1745
  %fts_accpath102 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %78, i32 0, i32 6, !dbg !18999, !ctir !1742
  %79 = load i8*, i8** %fts_accpath102, align 8, !dbg !18999, !ctir !7
  %80 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19000
  %fts_accpath103 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %80, i32 0, i32 6, !dbg !19001, !ctir !1741
  store i8* %79, i8** %fts_accpath103, align 8, !dbg !19002, !ctir !7
  br label %for.inc, !dbg !19000

for.inc:                                          ; preds = %for.body
  %81 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19003
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 2, !dbg !19004, !ctir !1741
  %82 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !19004, !ctir !1745
  store %struct._ftsent* %82, %struct._ftsent** %p, align 8, !dbg !19005
  br label %for.cond, !dbg !19006, !llvm.loop !19007

for.end:                                          ; preds = %for.cond
  br label %if.end104, !dbg !19009

if.end104:                                        ; preds = %for.end, %if.then89
  br label %if.end129, !dbg !19010

if.else105:                                       ; preds = %if.end85
  %83 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19011
  %call106 = call %struct._ftsent* @fts_build(%struct.FTS* %83, i32 3), !dbg !19013
  %84 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19014
  %fts_child107 = getelementptr inbounds %struct.FTS, %struct.FTS* %84, i32 0, i32 1, !dbg !19015, !ctir !1758
  store %struct._ftsent* %call106, %struct._ftsent** %fts_child107, align 8, !dbg !19016, !ctir !1745
  %cmp108 = icmp eq %struct._ftsent* %call106, null, !dbg !19017
  br i1 %cmp108, label %if.then110, label %if.end128, !dbg !19018

if.then110:                                       ; preds = %if.else105
  %85 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19019
  %fts_options111 = getelementptr inbounds %struct.FTS, %struct.FTS* %85, i32 0, i32 10, !dbg !19019, !ctir !1758
  %86 = load i32, i32* %fts_options111, align 8, !dbg !19019, !ctir !5
  %and112 = and i32 %86, 8192, !dbg !19019
  %tobool113 = icmp ne i32 %and112, 0, !dbg !19019
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !19022

if.then114:                                       ; preds = %if.then110
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19023
  br label %return, !dbg !19023

if.end115:                                        ; preds = %if.then110
  %87 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19024
  %fts_errno116 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %87, i32 0, i32 8, !dbg !19026, !ctir !1741
  %88 = load i32, i32* %fts_errno116, align 8, !dbg !19026, !ctir !5
  %tobool117 = icmp ne i32 %88, 0, !dbg !19024
  br i1 %tobool117, label %land.lhs.true118, label %if.end125, !dbg !19027

land.lhs.true118:                                 ; preds = %if.end115
  %89 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19028
  %fts_info119 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %89, i32 0, i32 15, !dbg !19029, !ctir !1741
  %90 = load i16, i16* %fts_info119, align 8, !dbg !19029, !ctir !34
  %conv120 = zext i16 %90 to i32, !dbg !19028
  %cmp121 = icmp ne i32 %conv120, 4, !dbg !19030
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !19031

if.then123:                                       ; preds = %land.lhs.true118
  %91 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19032
  %fts_info124 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 15, !dbg !19033, !ctir !1741
  store i16 7, i16* %fts_info124, align 8, !dbg !19034, !ctir !34
  br label %if.end125, !dbg !19032

if.end125:                                        ; preds = %if.then123, %land.lhs.true118, %if.end115
  br label %do.body126, !dbg !19035

do.body126:                                       ; preds = %if.end125
  %92 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19036
  %93 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19036
  call void @leave_dir(%struct.FTS* %92, %struct._ftsent* %93), !dbg !19036
  br label %do.end127, !dbg !19036

do.end127:                                        ; preds = %do.body126
  %94 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19038
  store %struct._ftsent* %94, %struct._ftsent** %retval, align 8, !dbg !19039
  br label %return, !dbg !19039

if.end128:                                        ; preds = %if.else105
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end104
  %95 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19040
  %fts_child130 = getelementptr inbounds %struct.FTS, %struct.FTS* %95, i32 0, i32 1, !dbg !19041, !ctir !1758
  %96 = load %struct._ftsent*, %struct._ftsent** %fts_child130, align 8, !dbg !19041, !ctir !1745
  store %struct._ftsent* %96, %struct._ftsent** %p, align 8, !dbg !19042
  %97 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19043
  %fts_child131 = getelementptr inbounds %struct.FTS, %struct.FTS* %97, i32 0, i32 1, !dbg !19044, !ctir !1758
  store %struct._ftsent* null, %struct._ftsent** %fts_child131, align 8, !dbg !19045, !ctir !1745
  br label %name, !dbg !19046

if.end132:                                        ; preds = %if.end41
  br label %next, !dbg !19047

next:                                             ; preds = %if.then173, %if.end132
  call void @llvm.dbg.label(metadata !19048), !dbg !19049
  %98 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19050
  store %struct._ftsent* %98, %struct._ftsent** %tmp, align 8, !dbg !19051
  %99 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19052
  %fts_link133 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %99, i32 0, i32 2, !dbg !19054, !ctir !1741
  %100 = load %struct._ftsent*, %struct._ftsent** %fts_link133, align 8, !dbg !19054, !ctir !1745
  %cmp134 = icmp eq %struct._ftsent* %100, null, !dbg !19055
  br i1 %cmp134, label %land.lhs.true136, label %if.end152, !dbg !19056

land.lhs.true136:                                 ; preds = %next
  %101 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19057
  %fts_parent137 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %101, i32 0, i32 1, !dbg !19058, !ctir !1741
  %102 = load %struct._ftsent*, %struct._ftsent** %fts_parent137, align 8, !dbg !19058, !ctir !1745
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %102, i32 0, i32 3, !dbg !19059, !ctir !1742
  %103 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !19059, !ctir !530
  %tobool138 = icmp ne %struct.__dirstream* %103, null, !dbg !19057
  br i1 %tobool138, label %if.then139, label %if.end152, !dbg !19060

if.then139:                                       ; preds = %land.lhs.true136
  %104 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19061
  %fts_parent140 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %104, i32 0, i32 1, !dbg !19063, !ctir !1741
  %105 = load %struct._ftsent*, %struct._ftsent** %fts_parent140, align 8, !dbg !19063, !ctir !1745
  store %struct._ftsent* %105, %struct._ftsent** %p, align 8, !dbg !19064
  %106 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19065
  %107 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19066
  %fts_cur141 = getelementptr inbounds %struct.FTS, %struct.FTS* %107, i32 0, i32 0, !dbg !19067, !ctir !1758
  store %struct._ftsent* %106, %struct._ftsent** %fts_cur141, align 8, !dbg !19068, !ctir !1745
  %108 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19069
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %108, i32 0, i32 4, !dbg !19070, !ctir !1758
  %109 = load i8*, i8** %fts_path, align 8, !dbg !19070, !ctir !7
  %110 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19071
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 10, !dbg !19072, !ctir !1741
  %111 = load i64, i64* %fts_pathlen, align 8, !dbg !19072, !ctir !52
  %arrayidx = getelementptr inbounds i8, i8* %109, i64 %111, !dbg !19069, !ctir !7
  store i8 0, i8* %arrayidx, align 1, !dbg !19073
  %112 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19074
  %call142 = call %struct._ftsent* @fts_build(%struct.FTS* %112, i32 3), !dbg !19076
  store %struct._ftsent* %call142, %struct._ftsent** %p, align 8, !dbg !19077
  %cmp143 = icmp eq %struct._ftsent* %call142, null, !dbg !19078
  br i1 %cmp143, label %if.then145, label %if.end151, !dbg !19079

if.then145:                                       ; preds = %if.then139
  %113 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19080
  %fts_options146 = getelementptr inbounds %struct.FTS, %struct.FTS* %113, i32 0, i32 10, !dbg !19080, !ctir !1758
  %114 = load i32, i32* %fts_options146, align 8, !dbg !19080, !ctir !5
  %and147 = and i32 %114, 8192, !dbg !19080
  %tobool148 = icmp ne i32 %and147, 0, !dbg !19080
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !19083

if.then149:                                       ; preds = %if.then145
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19084
  br label %return, !dbg !19084

if.end150:                                        ; preds = %if.then145
  br label %cd_dot_dot, !dbg !19085

if.end151:                                        ; preds = %if.then139
  %115 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19086
  %116 = bitcast %struct._ftsent* %115 to i8*, !dbg !19086
  call void @free(i8* %116) #12, !dbg !19087
  br label %name, !dbg !19088

if.end152:                                        ; preds = %land.lhs.true136, %next
  %117 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19089
  %fts_link153 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %117, i32 0, i32 2, !dbg !19091, !ctir !1741
  %118 = load %struct._ftsent*, %struct._ftsent** %fts_link153, align 8, !dbg !19091, !ctir !1745
  store %struct._ftsent* %118, %struct._ftsent** %p, align 8, !dbg !19092
  %cmp154 = icmp ne %struct._ftsent* %118, null, !dbg !19093
  br i1 %cmp154, label %if.then156, label %if.end305, !dbg !19094

if.then156:                                       ; preds = %if.end152
  %119 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19095
  %120 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19097
  %fts_cur157 = getelementptr inbounds %struct.FTS, %struct.FTS* %120, i32 0, i32 0, !dbg !19098, !ctir !1758
  store %struct._ftsent* %119, %struct._ftsent** %fts_cur157, align 8, !dbg !19099, !ctir !1745
  %121 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19100
  %122 = bitcast %struct._ftsent* %121 to i8*, !dbg !19100
  call void @free(i8* %122) #12, !dbg !19101
  %123 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19102
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %123, i32 0, i32 12, !dbg !19104, !ctir !1741
  %124 = load i64, i64* %fts_level, align 8, !dbg !19104, !ctir !495
  %cmp158 = icmp eq i64 %124, 0, !dbg !19105
  br i1 %cmp158, label %if.then160, label %if.end168, !dbg !19106

if.then160:                                       ; preds = %if.then156
  %125 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19107
  %call161 = call i32 @restore_initial_cwd(%struct.FTS* %125), !dbg !19110
  %tobool162 = icmp ne i32 %call161, 0, !dbg !19110
  br i1 %tobool162, label %if.then163, label %if.end166, !dbg !19111

if.then163:                                       ; preds = %if.then160
  %126 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19112
  %fts_options164 = getelementptr inbounds %struct.FTS, %struct.FTS* %126, i32 0, i32 10, !dbg !19112, !ctir !1758
  %127 = load i32, i32* %fts_options164, align 8, !dbg !19112, !ctir !5
  %or165 = or i32 %127, 8192, !dbg !19112
  store i32 %or165, i32* %fts_options164, align 8, !dbg !19112, !ctir !5
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19114
  br label %return, !dbg !19114

if.end166:                                        ; preds = %if.then160
  %128 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19115
  call void @free_dir(%struct.FTS* %128), !dbg !19116
  %129 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19117
  %130 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19118
  call void @fts_load(%struct.FTS* %129, %struct._ftsent* %130), !dbg !19119
  %131 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19120
  %call167 = call zeroext i1 @setup_dir(%struct.FTS* %131), !dbg !19121
  br label %check_for_dir, !dbg !19122

if.end168:                                        ; preds = %if.then156
  %132 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19123
  %fts_instr169 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %132, i32 0, i32 17, !dbg !19125, !ctir !1741
  %133 = load i16, i16* %fts_instr169, align 4, !dbg !19125, !ctir !34
  %conv170 = zext i16 %133 to i32, !dbg !19123
  %cmp171 = icmp eq i32 %conv170, 4, !dbg !19126
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !19127

if.then173:                                       ; preds = %if.end168
  br label %next, !dbg !19128

if.end174:                                        ; preds = %if.end168
  %134 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19129
  %fts_instr175 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %134, i32 0, i32 17, !dbg !19131, !ctir !1741
  %135 = load i16, i16* %fts_instr175, align 4, !dbg !19131, !ctir !34
  %conv176 = zext i16 %135 to i32, !dbg !19129
  %cmp177 = icmp eq i32 %conv176, 2, !dbg !19132
  br i1 %cmp177, label %if.then179, label %if.end207, !dbg !19133

if.then179:                                       ; preds = %if.end174
  %136 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19134
  %137 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19136
  %call180 = call zeroext i16 @fts_stat(%struct.FTS* %136, %struct._ftsent* %137, i1 zeroext true), !dbg !19137
  %138 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19138
  %fts_info181 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %138, i32 0, i32 15, !dbg !19139, !ctir !1741
  store i16 %call180, i16* %fts_info181, align 8, !dbg !19140, !ctir !34
  %139 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19141
  %fts_info182 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %139, i32 0, i32 15, !dbg !19143, !ctir !1741
  %140 = load i16, i16* %fts_info182, align 8, !dbg !19143, !ctir !34
  %conv183 = zext i16 %140 to i32, !dbg !19141
  %cmp184 = icmp eq i32 %conv183, 1, !dbg !19144
  br i1 %cmp184, label %land.lhs.true186, label %if.end205, !dbg !19145

land.lhs.true186:                                 ; preds = %if.then179
  %141 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19146
  %fts_options187 = getelementptr inbounds %struct.FTS, %struct.FTS* %141, i32 0, i32 10, !dbg !19146, !ctir !1758
  %142 = load i32, i32* %fts_options187, align 8, !dbg !19146, !ctir !5
  %and188 = and i32 %142, 4, !dbg !19146
  %tobool189 = icmp ne i32 %and188, 0, !dbg !19146
  br i1 %tobool189, label %if.end205, label %if.then190, !dbg !19147

if.then190:                                       ; preds = %land.lhs.true186
  %143 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19148
  %call191 = call i32 @diropen(%struct.FTS* %143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.431, i64 0, i64 0)), !dbg !19151
  %144 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19152
  %fts_symfd192 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %144, i32 0, i32 9, !dbg !19153, !ctir !1741
  store i32 %call191, i32* %fts_symfd192, align 4, !dbg !19154, !ctir !5
  %cmp193 = icmp slt i32 %call191, 0, !dbg !19155
  br i1 %cmp193, label %if.then195, label %if.else199, !dbg !19156

if.then195:                                       ; preds = %if.then190
  %call196 = call i32* @__errno_location() #15, !dbg !19157
  %145 = load i32, i32* %call196, align 4, !dbg !19157, !ctir !5
  %146 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19159
  %fts_errno197 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %146, i32 0, i32 8, !dbg !19160, !ctir !1741
  store i32 %145, i32* %fts_errno197, align 8, !dbg !19161, !ctir !5
  %147 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19162
  %fts_info198 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %147, i32 0, i32 15, !dbg !19163, !ctir !1741
  store i16 7, i16* %fts_info198, align 8, !dbg !19164, !ctir !34
  br label %if.end204, !dbg !19165

if.else199:                                       ; preds = %if.then190
  %148 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19166
  %fts_flags200 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %148, i32 0, i32 16, !dbg !19167, !ctir !1741
  %149 = load i16, i16* %fts_flags200, align 2, !dbg !19168, !ctir !34
  %conv201 = zext i16 %149 to i32, !dbg !19168
  %or202 = or i32 %conv201, 2, !dbg !19168
  %conv203 = trunc i32 %or202 to i16, !dbg !19168
  store i16 %conv203, i16* %fts_flags200, align 2, !dbg !19168, !ctir !34
  br label %if.end204

if.end204:                                        ; preds = %if.else199, %if.then195
  br label %if.end205, !dbg !19169

if.end205:                                        ; preds = %if.end204, %land.lhs.true186, %if.then179
  %150 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19170
  %fts_instr206 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %150, i32 0, i32 17, !dbg !19171, !ctir !1741
  store i16 3, i16* %fts_instr206, align 4, !dbg !19172, !ctir !34
  br label %if.end207, !dbg !19173

if.end207:                                        ; preds = %if.end205, %if.end174
  br label %name, !dbg !19174

name:                                             ; preds = %if.end207, %if.end151, %if.end129
  call void @llvm.dbg.label(metadata !19175), !dbg !19176
  %151 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19177
  %fts_path208 = getelementptr inbounds %struct.FTS, %struct.FTS* %151, i32 0, i32 4, !dbg !19178, !ctir !1758
  %152 = load i8*, i8** %fts_path208, align 8, !dbg !19178, !ctir !7
  %153 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19179
  %fts_parent209 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %153, i32 0, i32 1, !dbg !19179, !ctir !1741
  %154 = load %struct._ftsent*, %struct._ftsent** %fts_parent209, align 8, !dbg !19179, !ctir !1745
  %fts_path210 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %154, i32 0, i32 7, !dbg !19179, !ctir !1742
  %155 = load i8*, i8** %fts_path210, align 8, !dbg !19179, !ctir !7
  %156 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19179
  %fts_parent211 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %156, i32 0, i32 1, !dbg !19179, !ctir !1741
  %157 = load %struct._ftsent*, %struct._ftsent** %fts_parent211, align 8, !dbg !19179, !ctir !1745
  %fts_pathlen212 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %157, i32 0, i32 10, !dbg !19179, !ctir !1742
  %158 = load i64, i64* %fts_pathlen212, align 8, !dbg !19179, !ctir !52
  %sub = sub i64 %158, 1, !dbg !19179
  %arrayidx213 = getelementptr inbounds i8, i8* %155, i64 %sub, !dbg !19179, !ctir !7
  %159 = load i8, i8* %arrayidx213, align 1, !dbg !19179
  %conv214 = sext i8 %159 to i32, !dbg !19179
  %cmp215 = icmp eq i32 %conv214, 47, !dbg !19179
  br i1 %cmp215, label %cond.true, label %cond.false, !dbg !19179

cond.true:                                        ; preds = %name
  %160 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19179
  %fts_parent217 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %160, i32 0, i32 1, !dbg !19179, !ctir !1741
  %161 = load %struct._ftsent*, %struct._ftsent** %fts_parent217, align 8, !dbg !19179, !ctir !1745
  %fts_pathlen218 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %161, i32 0, i32 10, !dbg !19179, !ctir !1742
  %162 = load i64, i64* %fts_pathlen218, align 8, !dbg !19179, !ctir !52
  %sub219 = sub i64 %162, 1, !dbg !19179
  br label %cond.end, !dbg !19179

cond.false:                                       ; preds = %name
  %163 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19179
  %fts_parent220 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %163, i32 0, i32 1, !dbg !19179, !ctir !1741
  %164 = load %struct._ftsent*, %struct._ftsent** %fts_parent220, align 8, !dbg !19179, !ctir !1745
  %fts_pathlen221 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %164, i32 0, i32 10, !dbg !19179, !ctir !1742
  %165 = load i64, i64* %fts_pathlen221, align 8, !dbg !19179, !ctir !52
  br label %cond.end, !dbg !19179

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub219, %cond.true ], [ %165, %cond.false ], !dbg !19179
  %add.ptr = getelementptr inbounds i8, i8* %152, i64 %cond, !dbg !19180, !ctir !8
  store i8* %add.ptr, i8** %t, align 8, !dbg !19181
  %166 = load i8*, i8** %t, align 8, !dbg !19182
  %incdec.ptr = getelementptr inbounds i8, i8* %166, i32 1, !dbg !19182, !ctir !8
  store i8* %incdec.ptr, i8** %t, align 8, !dbg !19182
  store i8 47, i8* %166, align 1, !dbg !19183, !ctir !8
  %167 = load i8*, i8** %t, align 8, !dbg !19184
  %168 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19185
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %168, i32 0, i32 19, !dbg !19186, !ctir !1741
  %arraydecay222 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !19187, !ctir !1119
  %169 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19188
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %169, i32 0, i32 13, !dbg !19189, !ctir !1741
  %170 = load i64, i64* %fts_namelen, align 8, !dbg !19189, !ctir !52
  %add = add i64 %170, 1, !dbg !19190
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %167, i8* align 8 %arraydecay222, i64 %add, i1 false), !dbg !19187
  br label %check_for_dir, !dbg !19187

check_for_dir:                                    ; preds = %cond.end, %if.end166, %if.end40
  call void @llvm.dbg.label(metadata !19191), !dbg !19192
  %171 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19193
  %172 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19194
  %fts_cur223 = getelementptr inbounds %struct.FTS, %struct.FTS* %172, i32 0, i32 0, !dbg !19195, !ctir !1758
  store %struct._ftsent* %171, %struct._ftsent** %fts_cur223, align 8, !dbg !19196, !ctir !1745
  %173 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19197
  %fts_info224 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %173, i32 0, i32 15, !dbg !19199, !ctir !1741
  %174 = load i16, i16* %fts_info224, align 8, !dbg !19199, !ctir !34
  %conv225 = zext i16 %174 to i32, !dbg !19197
  %cmp226 = icmp eq i32 %conv225, 11, !dbg !19200
  br i1 %cmp226, label %if.then228, label %if.end285, !dbg !19201

if.then228:                                       ; preds = %check_for_dir
  %175 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19202
  %fts_statp229 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %175, i32 0, i32 18, !dbg !19205, !ctir !1741
  %arraydecay230 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp229, i64 0, i64 0, !dbg !19206, !ctir !1812
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay230, i32 0, i32 8, !dbg !19206, !ctir !1813
  %176 = load i64, i64* %st_size, align 8, !dbg !19206, !ctir !30
  %cmp231 = icmp eq i64 %176, 2, !dbg !19207
  br i1 %cmp231, label %if.then233, label %if.else274, !dbg !19208

if.then233:                                       ; preds = %if.then228
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !19209, metadata !DIExpression()), !dbg !19211
  %177 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19212
  %fts_parent234 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %177, i32 0, i32 1, !dbg !19213, !ctir !1741
  %178 = load %struct._ftsent*, %struct._ftsent** %fts_parent234, align 8, !dbg !19213, !ctir !1745
  store %struct._ftsent* %178, %struct._ftsent** %parent, align 8, !dbg !19211
  %179 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19214
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %179, i32 0, i32 14, !dbg !19216, !ctir !1741
  %180 = load i64, i64* %fts_n_dirs_remaining, align 8, !dbg !19216, !ctir !1091
  %cmp235 = icmp eq i64 %180, 0, !dbg !19217
  br i1 %cmp235, label %land.lhs.true237, label %if.else250, !dbg !19218

land.lhs.true237:                                 ; preds = %if.then233
  %181 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19219
  %fts_options238 = getelementptr inbounds %struct.FTS, %struct.FTS* %181, i32 0, i32 10, !dbg !19219, !ctir !1758
  %182 = load i32, i32* %fts_options238, align 8, !dbg !19219, !ctir !5
  %and239 = and i32 %182, 8, !dbg !19219
  %tobool240 = icmp ne i32 %and239, 0, !dbg !19219
  br i1 %tobool240, label %land.lhs.true241, label %if.else250, !dbg !19220

land.lhs.true241:                                 ; preds = %land.lhs.true237
  %183 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19221
  %fts_options242 = getelementptr inbounds %struct.FTS, %struct.FTS* %183, i32 0, i32 10, !dbg !19221, !ctir !1758
  %184 = load i32, i32* %fts_options242, align 8, !dbg !19221, !ctir !5
  %and243 = and i32 %184, 16, !dbg !19221
  %tobool244 = icmp ne i32 %and243, 0, !dbg !19221
  br i1 %tobool244, label %land.lhs.true245, label %if.else250, !dbg !19222

land.lhs.true245:                                 ; preds = %land.lhs.true241
  %185 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19223
  %186 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19224
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %186, i32 0, i32 6, !dbg !19225, !ctir !1758
  %187 = load i32, i32* %fts_cwd_fd, align 4, !dbg !19225, !ctir !5
  %call246 = call i32 @leaf_optimization(%struct._ftsent* %185, i32 %187), !dbg !19226
  %cmp247 = icmp eq i32 %call246, 2, !dbg !19227
  br i1 %cmp247, label %if.then249, label %if.else250, !dbg !19228

if.then249:                                       ; preds = %land.lhs.true245
  br label %if.end273, !dbg !19229

if.else250:                                       ; preds = %land.lhs.true245, %land.lhs.true241, %land.lhs.true237, %if.then233
  %188 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19231
  %189 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19233
  %call251 = call zeroext i16 @fts_stat(%struct.FTS* %188, %struct._ftsent* %189, i1 zeroext false), !dbg !19234
  %190 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19235
  %fts_info252 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %190, i32 0, i32 15, !dbg !19236, !ctir !1741
  store i16 %call251, i16* %fts_info252, align 8, !dbg !19237, !ctir !34
  %191 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19238
  %fts_statp253 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %191, i32 0, i32 18, !dbg !19238, !ctir !1741
  %arraydecay254 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp253, i64 0, i64 0, !dbg !19238, !ctir !1812
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay254, i32 0, i32 3, !dbg !19238, !ctir !1813
  %192 = load i32, i32* %st_mode, align 8, !dbg !19238, !ctir !165
  %and255 = and i32 %192, 61440, !dbg !19238
  %cmp256 = icmp eq i32 %and255, 16384, !dbg !19238
  br i1 %cmp256, label %land.lhs.true258, label %if.end272, !dbg !19240

land.lhs.true258:                                 ; preds = %if.else250
  %193 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19241
  %fts_level259 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %193, i32 0, i32 12, !dbg !19242, !ctir !1741
  %194 = load i64, i64* %fts_level259, align 8, !dbg !19242, !ctir !495
  %cmp260 = icmp ne i64 %194, 0, !dbg !19243
  br i1 %cmp260, label %land.lhs.true262, label %if.end272, !dbg !19244

land.lhs.true262:                                 ; preds = %land.lhs.true258
  %195 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19245
  %fts_n_dirs_remaining263 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %195, i32 0, i32 14, !dbg !19246, !ctir !1741
  %196 = load i64, i64* %fts_n_dirs_remaining263, align 8, !dbg !19246, !ctir !1091
  %cmp264 = icmp ult i64 0, %196, !dbg !19247
  br i1 %cmp264, label %land.lhs.true266, label %if.end272, !dbg !19248

land.lhs.true266:                                 ; preds = %land.lhs.true262
  %197 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19249
  %fts_n_dirs_remaining267 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %197, i32 0, i32 14, !dbg !19250, !ctir !1741
  %198 = load i64, i64* %fts_n_dirs_remaining267, align 8, !dbg !19250, !ctir !1091
  %cmp268 = icmp ne i64 %198, -1, !dbg !19251
  br i1 %cmp268, label %if.then270, label %if.end272, !dbg !19252

if.then270:                                       ; preds = %land.lhs.true266
  %199 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19253
  %fts_n_dirs_remaining271 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %199, i32 0, i32 14, !dbg !19254, !ctir !1741
  %200 = load i64, i64* %fts_n_dirs_remaining271, align 8, !dbg !19255, !ctir !1091
  %dec = add i64 %200, -1, !dbg !19255
  store i64 %dec, i64* %fts_n_dirs_remaining271, align 8, !dbg !19255, !ctir !1091
  br label %if.end272, !dbg !19253

if.end272:                                        ; preds = %if.then270, %land.lhs.true266, %land.lhs.true262, %land.lhs.true258, %if.else250
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.then249
  br label %if.end284, !dbg !19256

if.else274:                                       ; preds = %if.then228
  br label %do.body275, !dbg !19257

do.body275:                                       ; preds = %if.else274
  %201 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19258
  %fts_statp276 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %201, i32 0, i32 18, !dbg !19258, !ctir !1741
  %arraydecay277 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp276, i64 0, i64 0, !dbg !19258, !ctir !1812
  %st_size278 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay277, i32 0, i32 8, !dbg !19258, !ctir !1813
  %202 = load i64, i64* %st_size278, align 8, !dbg !19258, !ctir !30
  %cmp279 = icmp eq i64 %202, 1, !dbg !19258
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !19261

if.then281:                                       ; preds = %do.body275
  call void @abort() #13, !dbg !19258
  unreachable, !dbg !19258

if.end282:                                        ; preds = %do.body275
  br label %do.end283, !dbg !19261

do.end283:                                        ; preds = %if.end282
  br label %if.end284

if.end284:                                        ; preds = %do.end283, %if.end273
  br label %if.end285, !dbg !19262

if.end285:                                        ; preds = %if.end284, %check_for_dir
  %203 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19263
  %fts_info286 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %203, i32 0, i32 15, !dbg !19265, !ctir !1741
  %204 = load i16, i16* %fts_info286, align 8, !dbg !19265, !ctir !34
  %conv287 = zext i16 %204 to i32, !dbg !19263
  %cmp288 = icmp eq i32 %conv287, 1, !dbg !19266
  br i1 %cmp288, label %if.then290, label %if.end304, !dbg !19267

if.then290:                                       ; preds = %if.end285
  %205 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19268
  %fts_level291 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %205, i32 0, i32 12, !dbg !19271, !ctir !1741
  %206 = load i64, i64* %fts_level291, align 8, !dbg !19271, !ctir !495
  %cmp292 = icmp eq i64 %206, 0, !dbg !19272
  br i1 %cmp292, label %if.then294, label %if.end299, !dbg !19273

if.then294:                                       ; preds = %if.then290
  %207 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19274
  %fts_statp295 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %207, i32 0, i32 18, !dbg !19275, !ctir !1741
  %arraydecay296 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp295, i64 0, i64 0, !dbg !19276, !ctir !1812
  %st_dev297 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay296, i32 0, i32 0, !dbg !19276, !ctir !1813
  %208 = load i64, i64* %st_dev297, align 8, !dbg !19276, !ctir !260
  %209 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19277
  %fts_dev298 = getelementptr inbounds %struct.FTS, %struct.FTS* %209, i32 0, i32 3, !dbg !19278, !ctir !1758
  store i64 %208, i64* %fts_dev298, align 8, !dbg !19279, !ctir !259
  br label %if.end299, !dbg !19277

if.end299:                                        ; preds = %if.then294, %if.then290
  %210 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19280
  %211 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19282
  %call300 = call zeroext i1 @enter_dir(%struct.FTS* %210, %struct._ftsent* %211), !dbg !19283
  br i1 %call300, label %if.end303, label %if.then301, !dbg !19284

if.then301:                                       ; preds = %if.end299
  %call302 = call i32* @__errno_location() #15, !dbg !19285
  store i32 12, i32* %call302, align 4, !dbg !19285, !ctir !5
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19287
  br label %return, !dbg !19287

if.end303:                                        ; preds = %if.end299
  br label %if.end304, !dbg !19288

if.end304:                                        ; preds = %if.end303, %if.end285
  %212 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19289
  store %struct._ftsent* %212, %struct._ftsent** %retval, align 8, !dbg !19290
  br label %return, !dbg !19290

if.end305:                                        ; preds = %if.end152
  br label %cd_dot_dot, !dbg !19291

cd_dot_dot:                                       ; preds = %if.end305, %if.end150
  call void @llvm.dbg.label(metadata !19292), !dbg !19293
  %213 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19294
  %fts_parent306 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %213, i32 0, i32 1, !dbg !19295, !ctir !1741
  %214 = load %struct._ftsent*, %struct._ftsent** %fts_parent306, align 8, !dbg !19295, !ctir !1745
  store %struct._ftsent* %214, %struct._ftsent** %p, align 8, !dbg !19296
  %215 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19297
  %216 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19298
  %fts_cur307 = getelementptr inbounds %struct.FTS, %struct.FTS* %216, i32 0, i32 0, !dbg !19299, !ctir !1758
  store %struct._ftsent* %215, %struct._ftsent** %fts_cur307, align 8, !dbg !19300, !ctir !1745
  %217 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19301
  %218 = bitcast %struct._ftsent* %217 to i8*, !dbg !19301
  call void @free(i8* %218) #12, !dbg !19302
  %219 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19303
  %fts_level308 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %219, i32 0, i32 12, !dbg !19305, !ctir !1741
  %220 = load i64, i64* %fts_level308, align 8, !dbg !19305, !ctir !495
  %cmp309 = icmp eq i64 %220, -1, !dbg !19306
  br i1 %cmp309, label %if.then311, label %if.end314, !dbg !19307

if.then311:                                       ; preds = %cd_dot_dot
  %221 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19308
  %222 = bitcast %struct._ftsent* %221 to i8*, !dbg !19308
  call void @free(i8* %222) #12, !dbg !19310
  %call312 = call i32* @__errno_location() #15, !dbg !19311
  store i32 0, i32* %call312, align 4, !dbg !19311, !ctir !5
  %223 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19312
  %fts_cur313 = getelementptr inbounds %struct.FTS, %struct.FTS* %223, i32 0, i32 0, !dbg !19313, !ctir !1758
  store %struct._ftsent* null, %struct._ftsent** %fts_cur313, align 8, !dbg !19314, !ctir !1745
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19315
  br label %return, !dbg !19315

if.end314:                                        ; preds = %cd_dot_dot
  br label %do.body315, !dbg !19316

do.body315:                                       ; preds = %if.end314
  %224 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19317
  %fts_info316 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %224, i32 0, i32 15, !dbg !19317, !ctir !1741
  %225 = load i16, i16* %fts_info316, align 8, !dbg !19317, !ctir !34
  %conv317 = zext i16 %225 to i32, !dbg !19317
  %cmp318 = icmp ne i32 %conv317, 11, !dbg !19317
  br i1 %cmp318, label %if.end321, label %if.then320, !dbg !19320

if.then320:                                       ; preds = %do.body315
  call void @abort() #13, !dbg !19317
  unreachable, !dbg !19317

if.end321:                                        ; preds = %do.body315
  br label %do.end322, !dbg !19320

do.end322:                                        ; preds = %if.end321
  %226 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19321
  %fts_path323 = getelementptr inbounds %struct.FTS, %struct.FTS* %226, i32 0, i32 4, !dbg !19322, !ctir !1758
  %227 = load i8*, i8** %fts_path323, align 8, !dbg !19322, !ctir !7
  %228 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19323
  %fts_pathlen324 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %228, i32 0, i32 10, !dbg !19324, !ctir !1741
  %229 = load i64, i64* %fts_pathlen324, align 8, !dbg !19324, !ctir !52
  %arrayidx325 = getelementptr inbounds i8, i8* %227, i64 %229, !dbg !19321, !ctir !7
  store i8 0, i8* %arrayidx325, align 1, !dbg !19325
  %230 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19326
  %fts_level326 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %230, i32 0, i32 12, !dbg !19328, !ctir !1741
  %231 = load i64, i64* %fts_level326, align 8, !dbg !19328, !ctir !495
  %cmp327 = icmp eq i64 %231, 0, !dbg !19329
  br i1 %cmp327, label %if.then329, label %if.else338, !dbg !19330

if.then329:                                       ; preds = %do.end322
  %232 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19331
  %call330 = call i32 @restore_initial_cwd(%struct.FTS* %232), !dbg !19334
  %tobool331 = icmp ne i32 %call330, 0, !dbg !19334
  br i1 %tobool331, label %if.then332, label %if.end337, !dbg !19335

if.then332:                                       ; preds = %if.then329
  %call333 = call i32* @__errno_location() #15, !dbg !19336
  %233 = load i32, i32* %call333, align 4, !dbg !19336, !ctir !5
  %234 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19338
  %fts_errno334 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %234, i32 0, i32 8, !dbg !19339, !ctir !1741
  store i32 %233, i32* %fts_errno334, align 8, !dbg !19340, !ctir !5
  %235 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19341
  %fts_options335 = getelementptr inbounds %struct.FTS, %struct.FTS* %235, i32 0, i32 10, !dbg !19341, !ctir !1758
  %236 = load i32, i32* %fts_options335, align 8, !dbg !19341, !ctir !5
  %or336 = or i32 %236, 8192, !dbg !19341
  store i32 %or336, i32* %fts_options335, align 8, !dbg !19341, !ctir !5
  br label %if.end337, !dbg !19342

if.end337:                                        ; preds = %if.then332, %if.then329
  br label %if.end381, !dbg !19343

if.else338:                                       ; preds = %do.end322
  %237 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19344
  %fts_flags339 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %237, i32 0, i32 16, !dbg !19346, !ctir !1741
  %238 = load i16, i16* %fts_flags339, align 2, !dbg !19346, !ctir !34
  %conv340 = zext i16 %238 to i32, !dbg !19344
  %and341 = and i32 %conv340, 2, !dbg !19347
  %tobool342 = icmp ne i32 %and341, 0, !dbg !19347
  br i1 %tobool342, label %if.then343, label %if.else365, !dbg !19348

if.then343:                                       ; preds = %if.else338
  %239 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19349
  %fts_options344 = getelementptr inbounds %struct.FTS, %struct.FTS* %239, i32 0, i32 10, !dbg !19349, !ctir !1758
  %240 = load i32, i32* %fts_options344, align 8, !dbg !19349, !ctir !5
  %and345 = and i32 %240, 4, !dbg !19349
  %tobool346 = icmp ne i32 %and345, 0, !dbg !19349
  br i1 %tobool346, label %if.end362, label %land.lhs.true347, !dbg !19349

land.lhs.true347:                                 ; preds = %if.then343
  %241 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19349
  %fts_options348 = getelementptr inbounds %struct.FTS, %struct.FTS* %241, i32 0, i32 10, !dbg !19349, !ctir !1758
  %242 = load i32, i32* %fts_options348, align 8, !dbg !19349, !ctir !5
  %and349 = and i32 %242, 512, !dbg !19349
  %tobool350 = icmp ne i32 %and349, 0, !dbg !19349
  br i1 %tobool350, label %cond.true351, label %cond.false353, !dbg !19352

cond.true351:                                     ; preds = %land.lhs.true347
  %243 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19349
  %244 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19349
  %fts_symfd352 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %244, i32 0, i32 9, !dbg !19349, !ctir !1741
  %245 = load i32, i32* %fts_symfd352, align 4, !dbg !19349, !ctir !5
  call void @cwd_advance_fd(%struct.FTS* %243, i32 %245, i1 zeroext true), !dbg !19349
  br i1 false, label %if.then357, label %if.end362, !dbg !19349

cond.false353:                                    ; preds = %land.lhs.true347
  %246 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19349
  %fts_symfd354 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %246, i32 0, i32 9, !dbg !19349, !ctir !1741
  %247 = load i32, i32* %fts_symfd354, align 4, !dbg !19349, !ctir !5
  %call355 = call i32 @fchdir(i32 %247) #12, !dbg !19349
  %tobool356 = icmp ne i32 %call355, 0, !dbg !19349
  br i1 %tobool356, label %if.then357, label %if.end362, !dbg !19352

if.then357:                                       ; preds = %cond.false353, %cond.true351
  %call358 = call i32* @__errno_location() #15, !dbg !19353
  %248 = load i32, i32* %call358, align 4, !dbg !19353, !ctir !5
  %249 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19355
  %fts_errno359 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %249, i32 0, i32 8, !dbg !19356, !ctir !1741
  store i32 %248, i32* %fts_errno359, align 8, !dbg !19357, !ctir !5
  %250 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19358
  %fts_options360 = getelementptr inbounds %struct.FTS, %struct.FTS* %250, i32 0, i32 10, !dbg !19358, !ctir !1758
  %251 = load i32, i32* %fts_options360, align 8, !dbg !19358, !ctir !5
  %or361 = or i32 %251, 8192, !dbg !19358
  store i32 %or361, i32* %fts_options360, align 8, !dbg !19358, !ctir !5
  br label %if.end362, !dbg !19359

if.end362:                                        ; preds = %if.then357, %cond.false353, %cond.true351, %if.then343
  %252 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19360
  %fts_symfd363 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %252, i32 0, i32 9, !dbg !19361, !ctir !1741
  %253 = load i32, i32* %fts_symfd363, align 4, !dbg !19361, !ctir !5
  %call364 = call i32 @close(i32 %253), !dbg !19362
  br label %if.end380, !dbg !19363

if.else365:                                       ; preds = %if.else338
  %254 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19364
  %fts_flags366 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %254, i32 0, i32 16, !dbg !19366, !ctir !1741
  %255 = load i16, i16* %fts_flags366, align 2, !dbg !19366, !ctir !34
  %conv367 = zext i16 %255 to i32, !dbg !19364
  %and368 = and i32 %conv367, 1, !dbg !19367
  %tobool369 = icmp ne i32 %and368, 0, !dbg !19367
  br i1 %tobool369, label %if.end379, label %land.lhs.true370, !dbg !19368

land.lhs.true370:                                 ; preds = %if.else365
  %256 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19369
  %257 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19370
  %fts_parent371 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %257, i32 0, i32 1, !dbg !19371, !ctir !1741
  %258 = load %struct._ftsent*, %struct._ftsent** %fts_parent371, align 8, !dbg !19371, !ctir !1745
  %call372 = call i32 @fts_safe_changedir(%struct.FTS* %256, %struct._ftsent* %258, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.437, i64 0, i64 0)), !dbg !19372
  %tobool373 = icmp ne i32 %call372, 0, !dbg !19372
  br i1 %tobool373, label %if.then374, label %if.end379, !dbg !19373

if.then374:                                       ; preds = %land.lhs.true370
  %call375 = call i32* @__errno_location() #15, !dbg !19374
  %259 = load i32, i32* %call375, align 4, !dbg !19374, !ctir !5
  %260 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19376
  %fts_errno376 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %260, i32 0, i32 8, !dbg !19377, !ctir !1741
  store i32 %259, i32* %fts_errno376, align 8, !dbg !19378, !ctir !5
  %261 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19379
  %fts_options377 = getelementptr inbounds %struct.FTS, %struct.FTS* %261, i32 0, i32 10, !dbg !19379, !ctir !1758
  %262 = load i32, i32* %fts_options377, align 8, !dbg !19379, !ctir !5
  %or378 = or i32 %262, 8192, !dbg !19379
  store i32 %or378, i32* %fts_options377, align 8, !dbg !19379, !ctir !5
  br label %if.end379, !dbg !19380

if.end379:                                        ; preds = %if.then374, %land.lhs.true370, %if.else365
  br label %if.end380

if.end380:                                        ; preds = %if.end379, %if.end362
  br label %if.end381

if.end381:                                        ; preds = %if.end380, %if.end337
  %263 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19381
  %fts_info382 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %263, i32 0, i32 15, !dbg !19383, !ctir !1741
  %264 = load i16, i16* %fts_info382, align 8, !dbg !19383, !ctir !34
  %conv383 = zext i16 %264 to i32, !dbg !19381
  %cmp384 = icmp ne i32 %conv383, 2, !dbg !19384
  br i1 %cmp384, label %if.then386, label %if.end399, !dbg !19385

if.then386:                                       ; preds = %if.end381
  %265 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19386
  %fts_errno387 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %265, i32 0, i32 8, !dbg !19388, !ctir !1741
  %266 = load i32, i32* %fts_errno387, align 8, !dbg !19388, !ctir !5
  %tobool388 = icmp ne i32 %266, 0, !dbg !19386
  %267 = zext i1 %tobool388 to i64, !dbg !19386
  %cond389 = select i1 %tobool388, i32 7, i32 6, !dbg !19386
  %conv390 = trunc i32 %cond389 to i16, !dbg !19386
  %268 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19389
  %fts_info391 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %268, i32 0, i32 15, !dbg !19390, !ctir !1741
  store i16 %conv390, i16* %fts_info391, align 8, !dbg !19391, !ctir !34
  %269 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19392
  %fts_errno392 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %269, i32 0, i32 8, !dbg !19394, !ctir !1741
  %270 = load i32, i32* %fts_errno392, align 8, !dbg !19394, !ctir !5
  %cmp393 = icmp eq i32 %270, 0, !dbg !19395
  br i1 %cmp393, label %if.then395, label %if.end398, !dbg !19396

if.then395:                                       ; preds = %if.then386
  br label %do.body396, !dbg !19397

do.body396:                                       ; preds = %if.then395
  %271 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19398
  %272 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19398
  call void @leave_dir(%struct.FTS* %271, %struct._ftsent* %272), !dbg !19398
  br label %do.end397, !dbg !19398

do.end397:                                        ; preds = %do.body396
  br label %if.end398, !dbg !19398

if.end398:                                        ; preds = %do.end397, %if.then386
  br label %if.end399, !dbg !19400

if.end399:                                        ; preds = %if.end398, %if.end381
  %273 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19401
  %fts_options400 = getelementptr inbounds %struct.FTS, %struct.FTS* %273, i32 0, i32 10, !dbg !19401, !ctir !1758
  %274 = load i32, i32* %fts_options400, align 8, !dbg !19401, !ctir !5
  %and401 = and i32 %274, 8192, !dbg !19401
  %tobool402 = icmp ne i32 %and401, 0, !dbg !19401
  br i1 %tobool402, label %cond.true403, label %cond.false404, !dbg !19401

cond.true403:                                     ; preds = %if.end399
  br label %cond.end405, !dbg !19401

cond.false404:                                    ; preds = %if.end399
  %275 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19402
  br label %cond.end405, !dbg !19401

cond.end405:                                      ; preds = %cond.false404, %cond.true403
  %cond406 = phi %struct._ftsent* [ null, %cond.true403 ], [ %275, %cond.false404 ], !dbg !19401
  store %struct._ftsent* %cond406, %struct._ftsent** %retval, align 8, !dbg !19403
  br label %return, !dbg !19403

return:                                           ; preds = %cond.end405, %if.then311, %if.end304, %if.then301, %if.then163, %if.then149, %do.end127, %if.then114, %do.end, %if.then5, %if.then
  %276 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !19404
  ret %struct._ftsent* %276, !dbg !19404
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @leave_dir(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !19405 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %st = alloca %struct.stat*, align 8, !ctir !1845
  %obj = alloca %struct.Active_dir, align 8, !ctir !1838
  %found = alloca i8*, align 8, !ctir !47
  %parent = alloca %struct._ftsent*, align 8, !ctir !1835
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !19408, metadata !DIExpression()), !dbg !19409
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !19410, metadata !DIExpression()), !dbg !19411
  call void @llvm.dbg.declare(metadata %struct.stat** %st, metadata !19412, metadata !DIExpression()), !dbg !19413
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !19414
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 18, !dbg !19415, !ctir !1741
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !19414, !ctir !1812
  store %struct.stat* %arraydecay, %struct.stat** %st, align 8, !dbg !19413
  %1 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19416
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %1, i32 0, i32 10, !dbg !19418, !ctir !1758
  %2 = load i32, i32* %fts_options, align 8, !dbg !19418, !ctir !5
  %and = and i32 %2, 258, !dbg !19419
  %tobool = icmp ne i32 %and, 0, !dbg !19419
  br i1 %tobool, label %if.then, label %if.else, !dbg !19420

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Active_dir* %obj, metadata !19421, metadata !DIExpression()), !dbg !19423
  call void @llvm.dbg.declare(metadata i8** %found, metadata !19424, metadata !DIExpression()), !dbg !19425
  %3 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !19426
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 0, !dbg !19427, !ctir !1846
  %4 = load i64, i64* %st_dev, align 8, !dbg !19427, !ctir !260
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %obj, i32 0, i32 0, !dbg !19428, !ctir !1838
  store i64 %4, i64* %dev, align 8, !dbg !19429, !ctir !259
  %5 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !19430
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 1, !dbg !19431, !ctir !1846
  %6 = load i64, i64* %st_ino, align 8, !dbg !19431, !ctir !257
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %obj, i32 0, i32 1, !dbg !19432, !ctir !1838
  store i64 %6, i64* %ino, align 8, !dbg !19433, !ctir !256
  %7 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19434
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 12, !dbg !19435, !ctir !1758
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !19436
  %8 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !19436, !ctir !1781
  %9 = bitcast %struct.Active_dir* %obj to i8*, !dbg !19437
  %call = call i8* @hash_delete(%struct.hash_table* %8, i8* %9), !dbg !19438
  store i8* %call, i8** %found, align 8, !dbg !19439
  %10 = load i8*, i8** %found, align 8, !dbg !19440
  %tobool1 = icmp ne i8* %10, null, !dbg !19440
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !19442

if.then2:                                         ; preds = %if.then
  call void @abort() #13, !dbg !19443
  unreachable, !dbg !19443

if.end:                                           ; preds = %if.then
  %11 = load i8*, i8** %found, align 8, !dbg !19444
  call void @free(i8* %11) #12, !dbg !19445
  br label %if.end38, !dbg !19446

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !19447, metadata !DIExpression()), !dbg !19449
  %12 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !19450
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 1, !dbg !19451, !ctir !1741
  %13 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !19451, !ctir !1745
  store %struct._ftsent* %13, %struct._ftsent** %parent, align 8, !dbg !19449
  %14 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19452
  %cmp = icmp ne %struct._ftsent* %14, null, !dbg !19454
  br i1 %cmp, label %land.lhs.true, label %if.end37, !dbg !19455

land.lhs.true:                                    ; preds = %if.else
  %15 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19456
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 12, !dbg !19457, !ctir !1741
  %16 = load i64, i64* %fts_level, align 8, !dbg !19457, !ctir !495
  %cmp3 = icmp sle i64 0, %16, !dbg !19458
  br i1 %cmp3, label %if.then4, label %if.end37, !dbg !19459

if.then4:                                         ; preds = %land.lhs.true
  br label %do.body, !dbg !19460

do.body:                                          ; preds = %if.then4
  %17 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19461
  %fts_cycle5 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 12, !dbg !19461, !ctir !1758
  %state = bitcast %union.anon* %fts_cycle5 to %struct.cycle_check_state**, !dbg !19461
  %18 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !19461, !ctir !1781
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %18, i32 0, i32 1, !dbg !19461, !ctir !1786
  %19 = load i64, i64* %chdir_counter, align 8, !dbg !19461, !ctir !476
  %cmp6 = icmp eq i64 %19, 0, !dbg !19461
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !19464

if.then7:                                         ; preds = %do.body
  call void @abort() #13, !dbg !19461
  unreachable, !dbg !19461

if.end8:                                          ; preds = %do.body
  %20 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19465
  %fts_cycle9 = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 12, !dbg !19465, !ctir !1758
  %state10 = bitcast %union.anon* %fts_cycle9 to %struct.cycle_check_state**, !dbg !19465
  %21 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state10, align 8, !dbg !19465, !ctir !1781
  %dev_ino = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %21, i32 0, i32 0, !dbg !19465, !ctir !1786
  %st_ino11 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino, i32 0, i32 0, !dbg !19465, !ctir !1790
  %22 = load i64, i64* %st_ino11, align 8, !dbg !19465, !ctir !256
  %23 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !19465
  %st_ino12 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !19465, !ctir !1846
  %24 = load i64, i64* %st_ino12, align 8, !dbg !19465, !ctir !257
  %cmp13 = icmp eq i64 %22, %24, !dbg !19465
  br i1 %cmp13, label %land.lhs.true14, label %if.end36, !dbg !19465

land.lhs.true14:                                  ; preds = %if.end8
  %25 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19465
  %fts_cycle15 = getelementptr inbounds %struct.FTS, %struct.FTS* %25, i32 0, i32 12, !dbg !19465, !ctir !1758
  %state16 = bitcast %union.anon* %fts_cycle15 to %struct.cycle_check_state**, !dbg !19465
  %26 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state16, align 8, !dbg !19465, !ctir !1781
  %dev_ino17 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %26, i32 0, i32 0, !dbg !19465, !ctir !1786
  %st_dev18 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino17, i32 0, i32 1, !dbg !19465, !ctir !1790
  %27 = load i64, i64* %st_dev18, align 8, !dbg !19465, !ctir !259
  %28 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !19465
  %st_dev19 = getelementptr inbounds %struct.stat, %struct.stat* %28, i32 0, i32 0, !dbg !19465, !ctir !1846
  %29 = load i64, i64* %st_dev19, align 8, !dbg !19465, !ctir !260
  %cmp20 = icmp eq i64 %27, %29, !dbg !19465
  br i1 %cmp20, label %if.then21, label %if.end36, !dbg !19464

if.then21:                                        ; preds = %land.lhs.true14
  %30 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19467
  %fts_statp22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 18, !dbg !19467, !ctir !1741
  %arraydecay23 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp22, i64 0, i64 0, !dbg !19467, !ctir !1812
  %st_dev24 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay23, i32 0, i32 0, !dbg !19467, !ctir !1813
  %31 = load i64, i64* %st_dev24, align 8, !dbg !19467, !ctir !260
  %32 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19467
  %fts_cycle25 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 12, !dbg !19467, !ctir !1758
  %state26 = bitcast %union.anon* %fts_cycle25 to %struct.cycle_check_state**, !dbg !19467
  %33 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state26, align 8, !dbg !19467, !ctir !1781
  %dev_ino27 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %33, i32 0, i32 0, !dbg !19467, !ctir !1786
  %st_dev28 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino27, i32 0, i32 1, !dbg !19467, !ctir !1790
  store i64 %31, i64* %st_dev28, align 8, !dbg !19467, !ctir !259
  %34 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19467
  %fts_statp29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 18, !dbg !19467, !ctir !1741
  %arraydecay30 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp29, i64 0, i64 0, !dbg !19467, !ctir !1812
  %st_ino31 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay30, i32 0, i32 1, !dbg !19467, !ctir !1813
  %35 = load i64, i64* %st_ino31, align 8, !dbg !19467, !ctir !257
  %36 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19467
  %fts_cycle32 = getelementptr inbounds %struct.FTS, %struct.FTS* %36, i32 0, i32 12, !dbg !19467, !ctir !1758
  %state33 = bitcast %union.anon* %fts_cycle32 to %struct.cycle_check_state**, !dbg !19467
  %37 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state33, align 8, !dbg !19467, !ctir !1781
  %dev_ino34 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %37, i32 0, i32 0, !dbg !19467, !ctir !1786
  %st_ino35 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino34, i32 0, i32 0, !dbg !19467, !ctir !1790
  store i64 %35, i64* %st_ino35, align 8, !dbg !19467, !ctir !256
  br label %if.end36, !dbg !19467

if.end36:                                         ; preds = %if.then21, %land.lhs.true14, %if.end8
  br label %do.end, !dbg !19464

do.end:                                           ; preds = %if.end36
  br label %if.end37, !dbg !19464

if.end37:                                         ; preds = %do.end, %land.lhs.true, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end
  ret void, !dbg !19469
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_safe_changedir(%struct.FTS* %sp, %struct._ftsent* %p, i32 %fd, i8* %dir) #4 !dbg !19470 {
entry:
  %retval = alloca i32, align 4
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %ret = alloca i32, align 4, !ctir !5
  %is_dotdot = alloca i8, align 1, !ctir !139
  %newfd = alloca i32, align 4, !ctir !5
  %parent_fd = alloca i32, align 4, !ctir !5
  %sb = alloca %struct.stat, align 8, !ctir !1813
  %oerrno = alloca i32, align 4, !ctir !5
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19473, metadata !DIExpression()), !dbg !19474
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !19475, metadata !DIExpression()), !dbg !19476
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !19477, metadata !DIExpression()), !dbg !19478
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !19479, metadata !DIExpression()), !dbg !19480
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19481, metadata !DIExpression()), !dbg !19482
  call void @llvm.dbg.declare(metadata i8* %is_dotdot, metadata !19483, metadata !DIExpression()), !dbg !19484
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !19485
  %tobool = icmp ne i8* %0, null, !dbg !19485
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !19486

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !19487
  %call = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.437, i64 0, i64 0)) #14, !dbg !19487
  %cmp = icmp eq i32 %call, 0, !dbg !19487
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !19488
  %frombool = zext i1 %2 to i8, !dbg !19484
  store i8 %frombool, i8* %is_dotdot, align 1, !dbg !19484
  call void @llvm.dbg.declare(metadata i32* %newfd, metadata !19489, metadata !DIExpression()), !dbg !19490
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19491
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !19491, !ctir !1758
  %4 = load i32, i32* %fts_options, align 8, !dbg !19491, !ctir !5
  %and = and i32 %4, 4, !dbg !19491
  %tobool1 = icmp ne i32 %and, 0, !dbg !19491
  br i1 %tobool1, label %if.then, label %if.end8, !dbg !19493

if.then:                                          ; preds = %land.end
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19494
  %fts_options2 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !19494, !ctir !1758
  %6 = load i32, i32* %fts_options2, align 8, !dbg !19494, !ctir !5
  %and3 = and i32 %6, 512, !dbg !19494
  %tobool4 = icmp ne i32 %and3, 0, !dbg !19494
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !19497

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %fd.addr, align 4, !dbg !19498
  %cmp5 = icmp sle i32 0, %7, !dbg !19499
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !19500

if.then6:                                         ; preds = %land.lhs.true
  %8 = load i32, i32* %fd.addr, align 4, !dbg !19501
  %call7 = call i32 @close(i32 %8), !dbg !19502
  br label %if.end, !dbg !19502

if.end:                                           ; preds = %if.then6, %land.lhs.true, %if.then
  store i32 0, i32* %retval, align 4, !dbg !19503
  br label %return, !dbg !19503

if.end8:                                          ; preds = %land.end
  %9 = load i32, i32* %fd.addr, align 4, !dbg !19504
  %cmp9 = icmp slt i32 %9, 0, !dbg !19506
  br i1 %cmp9, label %land.lhs.true10, label %if.end25, !dbg !19507

land.lhs.true10:                                  ; preds = %if.end8
  %10 = load i8, i8* %is_dotdot, align 1, !dbg !19508
  %tobool11 = trunc i8 %10 to i1, !dbg !19508
  br i1 %tobool11, label %land.lhs.true12, label %if.end25, !dbg !19509

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19510
  %fts_options13 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 10, !dbg !19510, !ctir !1758
  %12 = load i32, i32* %fts_options13, align 8, !dbg !19510, !ctir !5
  %and14 = and i32 %12, 512, !dbg !19510
  %tobool15 = icmp ne i32 %and14, 0, !dbg !19510
  br i1 %tobool15, label %if.then16, label %if.end25, !dbg !19511

if.then16:                                        ; preds = %land.lhs.true12
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19512
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 13, !dbg !19515, !ctir !1758
  %call17 = call zeroext i1 @i_ring_empty(%struct.I_ring* %fts_fd_ring) #14, !dbg !19516
  br i1 %call17, label %if.end24, label %if.then18, !dbg !19517

if.then18:                                        ; preds = %if.then16
  call void @llvm.dbg.declare(metadata i32* %parent_fd, metadata !19518, metadata !DIExpression()), !dbg !19520
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19521
  %fts_fd_ring19 = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 13, !dbg !19522, !ctir !1758
  %call20 = call i32 @i_ring_pop(%struct.I_ring* %fts_fd_ring19), !dbg !19523
  store i32 %call20, i32* %parent_fd, align 4, !dbg !19524
  %15 = load i32, i32* %parent_fd, align 4, !dbg !19525
  %cmp21 = icmp sle i32 0, %15, !dbg !19527
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !19528

if.then22:                                        ; preds = %if.then18
  %16 = load i32, i32* %parent_fd, align 4, !dbg !19529
  store i32 %16, i32* %fd.addr, align 4, !dbg !19531
  store i8* null, i8** %dir.addr, align 8, !dbg !19532
  br label %if.end23, !dbg !19533

if.end23:                                         ; preds = %if.then22, %if.then18
  br label %if.end24, !dbg !19534

if.end24:                                         ; preds = %if.end23, %if.then16
  br label %if.end25, !dbg !19535

if.end25:                                         ; preds = %if.end24, %land.lhs.true12, %land.lhs.true10, %if.end8
  %17 = load i32, i32* %fd.addr, align 4, !dbg !19536
  store i32 %17, i32* %newfd, align 4, !dbg !19537
  %18 = load i32, i32* %fd.addr, align 4, !dbg !19538
  %cmp26 = icmp slt i32 %18, 0, !dbg !19540
  br i1 %cmp26, label %land.lhs.true27, label %if.end31, !dbg !19541

land.lhs.true27:                                  ; preds = %if.end25
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19542
  %20 = load i8*, i8** %dir.addr, align 8, !dbg !19543
  %call28 = call i32 @diropen(%struct.FTS* %19, i8* %20), !dbg !19544
  store i32 %call28, i32* %newfd, align 4, !dbg !19545
  %cmp29 = icmp slt i32 %call28, 0, !dbg !19546
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !19547

if.then30:                                        ; preds = %land.lhs.true27
  store i32 -1, i32* %retval, align 4, !dbg !19548
  br label %return, !dbg !19548

if.end31:                                         ; preds = %land.lhs.true27, %if.end25
  %21 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19549
  %fts_options32 = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 10, !dbg !19549, !ctir !1758
  %22 = load i32, i32* %fts_options32, align 8, !dbg !19549, !ctir !5
  %and33 = and i32 %22, 2, !dbg !19549
  %tobool34 = icmp ne i32 %and33, 0, !dbg !19549
  br i1 %tobool34, label %if.then39, label %lor.lhs.false, !dbg !19551

lor.lhs.false:                                    ; preds = %if.end31
  %23 = load i8*, i8** %dir.addr, align 8, !dbg !19552
  %tobool35 = icmp ne i8* %23, null, !dbg !19552
  br i1 %tobool35, label %land.lhs.true36, label %if.end54, !dbg !19553

land.lhs.true36:                                  ; preds = %lor.lhs.false
  %24 = load i8*, i8** %dir.addr, align 8, !dbg !19554
  %call37 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.437, i64 0, i64 0)) #14, !dbg !19554
  %cmp38 = icmp eq i32 %call37, 0, !dbg !19554
  br i1 %cmp38, label %if.then39, label %if.end54, !dbg !19555

if.then39:                                        ; preds = %land.lhs.true36, %if.end31
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !19556, metadata !DIExpression()), !dbg !19558
  %25 = load i32, i32* %newfd, align 4, !dbg !19559
  %call40 = call i32 @fstat(i32 %25, %struct.stat* %sb) #12, !dbg !19561
  %tobool41 = icmp ne i32 %call40, 0, !dbg !19561
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !19562

if.then42:                                        ; preds = %if.then39
  store i32 -1, i32* %ret, align 4, !dbg !19563
  br label %bail, !dbg !19565

if.end43:                                         ; preds = %if.then39
  %26 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19566
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 18, !dbg !19568, !ctir !1741
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !19569, !ctir !1812
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !19569, !ctir !1813
  %27 = load i64, i64* %st_dev, align 8, !dbg !19569, !ctir !260
  %st_dev44 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 0, !dbg !19570, !ctir !1813
  %28 = load i64, i64* %st_dev44, align 8, !dbg !19570, !ctir !260
  %cmp45 = icmp ne i64 %27, %28, !dbg !19571
  br i1 %cmp45, label %if.then51, label %lor.lhs.false46, !dbg !19572

lor.lhs.false46:                                  ; preds = %if.end43
  %29 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19573
  %fts_statp47 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !19574, !ctir !1741
  %arraydecay48 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp47, i64 0, i64 0, !dbg !19575, !ctir !1812
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay48, i32 0, i32 1, !dbg !19575, !ctir !1813
  %30 = load i64, i64* %st_ino, align 8, !dbg !19575, !ctir !257
  %st_ino49 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 1, !dbg !19576, !ctir !1813
  %31 = load i64, i64* %st_ino49, align 8, !dbg !19576, !ctir !257
  %cmp50 = icmp ne i64 %30, %31, !dbg !19577
  br i1 %cmp50, label %if.then51, label %if.end53, !dbg !19578

if.then51:                                        ; preds = %lor.lhs.false46, %if.end43
  %call52 = call i32* @__errno_location() #15, !dbg !19579
  store i32 2, i32* %call52, align 4, !dbg !19579, !ctir !5
  store i32 -1, i32* %ret, align 4, !dbg !19581
  br label %bail, !dbg !19582

if.end53:                                         ; preds = %lor.lhs.false46
  br label %if.end54, !dbg !19583

if.end54:                                         ; preds = %if.end53, %land.lhs.true36, %lor.lhs.false
  %32 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19584
  %fts_options55 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 10, !dbg !19584, !ctir !1758
  %33 = load i32, i32* %fts_options55, align 8, !dbg !19584, !ctir !5
  %and56 = and i32 %33, 512, !dbg !19584
  %tobool57 = icmp ne i32 %and56, 0, !dbg !19584
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !19586

if.then58:                                        ; preds = %if.end54
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19587
  %35 = load i32, i32* %newfd, align 4, !dbg !19589
  %36 = load i8, i8* %is_dotdot, align 1, !dbg !19590
  %tobool59 = trunc i8 %36 to i1, !dbg !19590
  %lnot = xor i1 %tobool59, true, !dbg !19591
  call void @cwd_advance_fd(%struct.FTS* %34, i32 %35, i1 zeroext %lnot), !dbg !19592
  store i32 0, i32* %retval, align 4, !dbg !19593
  br label %return, !dbg !19593

if.end60:                                         ; preds = %if.end54
  %37 = load i32, i32* %newfd, align 4, !dbg !19594
  %call61 = call i32 @fchdir(i32 %37) #12, !dbg !19595
  store i32 %call61, i32* %ret, align 4, !dbg !19596
  br label %bail, !dbg !19597

bail:                                             ; preds = %if.end60, %if.then51, %if.then42
  call void @llvm.dbg.label(metadata !19598), !dbg !19599
  %38 = load i32, i32* %fd.addr, align 4, !dbg !19600
  %cmp62 = icmp slt i32 %38, 0, !dbg !19602
  br i1 %cmp62, label %if.then63, label %if.end67, !dbg !19603

if.then63:                                        ; preds = %bail
  call void @llvm.dbg.declare(metadata i32* %oerrno, metadata !19604, metadata !DIExpression()), !dbg !19606
  %call64 = call i32* @__errno_location() #15, !dbg !19607
  %39 = load i32, i32* %call64, align 4, !dbg !19607, !ctir !5
  store i32 %39, i32* %oerrno, align 4, !dbg !19606
  %40 = load i32, i32* %newfd, align 4, !dbg !19608
  %call65 = call i32 @close(i32 %40), !dbg !19609
  %41 = load i32, i32* %oerrno, align 4, !dbg !19610
  %call66 = call i32* @__errno_location() #15, !dbg !19610
  store i32 %41, i32* %call66, align 4, !dbg !19610, !ctir !5
  br label %if.end67, !dbg !19611

if.end67:                                         ; preds = %if.then63, %bail
  %42 = load i32, i32* %ret, align 4, !dbg !19612
  store i32 %42, i32* %retval, align 4, !dbg !19613
  br label %return, !dbg !19613

return:                                           ; preds = %if.end67, %if.then58, %if.then30, %if.end
  %43 = load i32, i32* %retval, align 4, !dbg !19614
  ret i32 %43, !dbg !19614
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_build(%struct.FTS* %sp, i32 %type) #4 !dbg !19615 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %type.addr = alloca i32, align 4
  %p = alloca %struct._ftsent*, align 8, !ctir !1835
  %head = alloca %struct._ftsent*, align 8, !ctir !1835
  %nitems = alloca i64, align 8, !ctir !52
  %tail = alloca %struct._ftsent*, align 8, !ctir !1835
  %oldaddr = alloca i8*, align 8, !ctir !47
  %saved_errno = alloca i32, align 4, !ctir !5
  %descend = alloca i8, align 1, !ctir !139
  %doadjust = alloca i8, align 1, !ctir !139
  %level = alloca i64, align 8, !ctir !495
  %len = alloca i64, align 8, !ctir !52
  %maxlen = alloca i64, align 8, !ctir !52
  %new_len = alloca i64, align 8, !ctir !52
  %cp = alloca i8*, align 8, !ctir !7
  %dir_fd = alloca i32, align 4, !ctir !5
  %cur = alloca %struct._ftsent*, align 8, !ctir !1835
  %continue_readdir = alloca i8, align 1, !ctir !139
  %sort_by_inode = alloca i8, align 1, !ctir !139
  %max_entries = alloca i64, align 8, !ctir !52
  %dp = alloca %struct.__dirstream*, align 8, !ctir !530
  %d_namelen = alloca i64, align 8, !ctir !52
  %dp159 = alloca %struct.dirent*, align 8, !ctir !1860
  %skip_stat = alloca i8, align 1, !ctir !139
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19618, metadata !DIExpression()), !dbg !19619
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !19620, metadata !DIExpression()), !dbg !19621
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !19622, metadata !DIExpression()), !dbg !19623
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head, metadata !19624, metadata !DIExpression()), !dbg !19625
  call void @llvm.dbg.declare(metadata i64* %nitems, metadata !19626, metadata !DIExpression()), !dbg !19627
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tail, metadata !19628, metadata !DIExpression()), !dbg !19629
  call void @llvm.dbg.declare(metadata i8** %oldaddr, metadata !19630, metadata !DIExpression()), !dbg !19631
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !19632, metadata !DIExpression()), !dbg !19633
  call void @llvm.dbg.declare(metadata i8* %descend, metadata !19634, metadata !DIExpression()), !dbg !19635
  call void @llvm.dbg.declare(metadata i8* %doadjust, metadata !19636, metadata !DIExpression()), !dbg !19637
  call void @llvm.dbg.declare(metadata i64* %level, metadata !19638, metadata !DIExpression()), !dbg !19639
  call void @llvm.dbg.declare(metadata i64* %len, metadata !19640, metadata !DIExpression()), !dbg !19641
  call void @llvm.dbg.declare(metadata i64* %maxlen, metadata !19642, metadata !DIExpression()), !dbg !19643
  call void @llvm.dbg.declare(metadata i64* %new_len, metadata !19644, metadata !DIExpression()), !dbg !19645
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !19646, metadata !DIExpression()), !dbg !19647
  call void @llvm.dbg.declare(metadata i32* %dir_fd, metadata !19648, metadata !DIExpression()), !dbg !19649
  call void @llvm.dbg.declare(metadata %struct._ftsent** %cur, metadata !19650, metadata !DIExpression()), !dbg !19651
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19652
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !19653, !ctir !1758
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !19653, !ctir !1745
  store %struct._ftsent* %1, %struct._ftsent** %cur, align 8, !dbg !19651
  call void @llvm.dbg.declare(metadata i8* %continue_readdir, metadata !19654, metadata !DIExpression()), !dbg !19655
  %2 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19656
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 3, !dbg !19657, !ctir !1741
  %3 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !19657, !ctir !530
  %tobool = icmp ne %struct.__dirstream* %3, null, !dbg !19658
  %lnot = xor i1 %tobool, true, !dbg !19658
  %lnot1 = xor i1 %lnot, true, !dbg !19659
  %frombool = zext i1 %lnot1 to i8, !dbg !19655
  store i8 %frombool, i8* %continue_readdir, align 1, !dbg !19655
  call void @llvm.dbg.declare(metadata i8* %sort_by_inode, metadata !19660, metadata !DIExpression()), !dbg !19661
  store i8 0, i8* %sort_by_inode, align 1, !dbg !19661
  call void @llvm.dbg.declare(metadata i64* %max_entries, metadata !19662, metadata !DIExpression()), !dbg !19663
  %4 = load i8, i8* %continue_readdir, align 1, !dbg !19664
  %tobool2 = trunc i8 %4 to i1, !dbg !19664
  br i1 %tobool2, label %if.then, label %if.else, !dbg !19666

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !19667, metadata !DIExpression()), !dbg !19669
  %5 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19670
  %fts_dirp3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 3, !dbg !19671, !ctir !1741
  %6 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp3, align 8, !dbg !19671, !ctir !530
  store %struct.__dirstream* %6, %struct.__dirstream** %dp, align 8, !dbg !19669
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !19672
  %call = call i32 @dirfd(%struct.__dirstream* %7) #12, !dbg !19673
  store i32 %call, i32* %dir_fd, align 4, !dbg !19674
  %8 = load i32, i32* %dir_fd, align 4, !dbg !19675
  %cmp = icmp slt i32 %8, 0, !dbg !19677
  br i1 %cmp, label %if.then4, label %if.end11, !dbg !19678

if.then4:                                         ; preds = %if.then
  br label %do.body, !dbg !19679

do.body:                                          ; preds = %if.then4
  %9 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19681
  %fts_dirp5 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 3, !dbg !19681, !ctir !1741
  %10 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp5, align 8, !dbg !19681, !ctir !530
  %call6 = call i32 @closedir(%struct.__dirstream* %10), !dbg !19681
  %11 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19681
  %fts_dirp7 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 3, !dbg !19681, !ctir !1741
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp7, align 8, !dbg !19681, !ctir !530
  br label %do.end, !dbg !19681

do.end:                                           ; preds = %do.body
  %12 = load i32, i32* %type.addr, align 4, !dbg !19683
  %cmp8 = icmp eq i32 %12, 3, !dbg !19685
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !19686

if.then9:                                         ; preds = %do.end
  %13 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19687
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 15, !dbg !19689, !ctir !1741
  store i16 4, i16* %fts_info, align 8, !dbg !19690, !ctir !34
  %call10 = call i32* @__errno_location() #15, !dbg !19691
  %14 = load i32, i32* %call10, align 4, !dbg !19691, !ctir !5
  %15 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19692
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 8, !dbg !19693, !ctir !1741
  store i32 %14, i32* %fts_errno, align 8, !dbg !19694, !ctir !5
  br label %if.end, !dbg !19695

if.end:                                           ; preds = %if.then9, %do.end
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19696
  br label %return, !dbg !19696

if.end11:                                         ; preds = %if.then
  br label %if.end58, !dbg !19697

if.else:                                          ; preds = %entry
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19698
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 10, !dbg !19698, !ctir !1758
  %17 = load i32, i32* %fts_options, align 8, !dbg !19698, !ctir !5
  %and = and i32 %17, 4, !dbg !19698
  %tobool12 = icmp ne i32 %and, 0, !dbg !19698
  br i1 %tobool12, label %cond.false, label %land.lhs.true, !dbg !19698

land.lhs.true:                                    ; preds = %if.else
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19698
  %fts_options13 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 10, !dbg !19698, !ctir !1758
  %19 = load i32, i32* %fts_options13, align 8, !dbg !19698, !ctir !5
  %and14 = and i32 %19, 512, !dbg !19698
  %tobool15 = icmp ne i32 %and14, 0, !dbg !19698
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !19698

cond.true:                                        ; preds = %land.lhs.true
  %20 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19698
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 6, !dbg !19698, !ctir !1758
  %21 = load i32, i32* %fts_cwd_fd, align 4, !dbg !19698, !ctir !5
  br label %cond.end, !dbg !19698

cond.false:                                       ; preds = %land.lhs.true, %if.else
  br label %cond.end, !dbg !19698

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ -100, %cond.false ], !dbg !19698
  %22 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19698
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 6, !dbg !19698, !ctir !1741
  %23 = load i8*, i8** %fts_accpath, align 8, !dbg !19698, !ctir !7
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19698
  %fts_options16 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !19698, !ctir !1758
  %25 = load i32, i32* %fts_options16, align 8, !dbg !19698, !ctir !5
  %and17 = and i32 %25, 16, !dbg !19698
  %tobool18 = icmp ne i32 %and17, 0, !dbg !19698
  br i1 %tobool18, label %land.rhs, label %land.end25, !dbg !19698

land.rhs:                                         ; preds = %cond.end
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19698
  %fts_options19 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 10, !dbg !19698, !ctir !1758
  %27 = load i32, i32* %fts_options19, align 8, !dbg !19698, !ctir !5
  %and20 = and i32 %27, 1, !dbg !19698
  %tobool21 = icmp ne i32 %and20, 0, !dbg !19698
  br i1 %tobool21, label %land.rhs22, label %land.end, !dbg !19698

land.rhs22:                                       ; preds = %land.rhs
  %28 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19698
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 12, !dbg !19698, !ctir !1741
  %29 = load i64, i64* %fts_level, align 8, !dbg !19698, !ctir !495
  %cmp23 = icmp eq i64 %29, 0, !dbg !19698
  br label %land.end

land.end:                                         ; preds = %land.rhs22, %land.rhs
  %30 = phi i1 [ false, %land.rhs ], [ %cmp23, %land.rhs22 ], !dbg !19701
  %lnot24 = xor i1 %30, true, !dbg !19698
  br label %land.end25

land.end25:                                       ; preds = %land.end, %cond.end
  %31 = phi i1 [ false, %cond.end ], [ %lnot24, %land.end ], !dbg !19701
  %32 = zext i1 %31 to i64, !dbg !19698
  %cond26 = select i1 %31, i32 131072, i32 0, !dbg !19698
  %call27 = call %struct.__dirstream* @opendirat(i32 %cond, i8* %23, i32 %cond26, i32* %dir_fd), !dbg !19698
  %33 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19702
  %fts_dirp28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 3, !dbg !19703, !ctir !1741
  store %struct.__dirstream* %call27, %struct.__dirstream** %fts_dirp28, align 8, !dbg !19704, !ctir !530
  %cmp29 = icmp eq %struct.__dirstream* %call27, null, !dbg !19705
  br i1 %cmp29, label %if.then30, label %if.end37, !dbg !19706

if.then30:                                        ; preds = %land.end25
  %34 = load i32, i32* %type.addr, align 4, !dbg !19707
  %cmp31 = icmp eq i32 %34, 3, !dbg !19710
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !19711

if.then32:                                        ; preds = %if.then30
  %35 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19712
  %fts_info33 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %35, i32 0, i32 15, !dbg !19714, !ctir !1741
  store i16 4, i16* %fts_info33, align 8, !dbg !19715, !ctir !34
  %call34 = call i32* @__errno_location() #15, !dbg !19716
  %36 = load i32, i32* %call34, align 4, !dbg !19716, !ctir !5
  %37 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19717
  %fts_errno35 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 8, !dbg !19718, !ctir !1741
  store i32 %36, i32* %fts_errno35, align 8, !dbg !19719, !ctir !5
  br label %if.end36, !dbg !19720

if.end36:                                         ; preds = %if.then32, %if.then30
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19721
  br label %return, !dbg !19721

if.end37:                                         ; preds = %land.end25
  %38 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19722
  %fts_info38 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 15, !dbg !19724, !ctir !1741
  %39 = load i16, i16* %fts_info38, align 8, !dbg !19724, !ctir !34
  %conv = zext i16 %39 to i32, !dbg !19722
  %cmp39 = icmp eq i32 %conv, 11, !dbg !19725
  br i1 %cmp39, label %if.then41, label %if.else44, !dbg !19726

if.then41:                                        ; preds = %if.end37
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19727
  %41 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19728
  %call42 = call zeroext i16 @fts_stat(%struct.FTS* %40, %struct._ftsent* %41, i1 zeroext false), !dbg !19729
  %42 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19730
  %fts_info43 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 15, !dbg !19731, !ctir !1741
  store i16 %call42, i16* %fts_info43, align 8, !dbg !19732, !ctir !34
  br label %if.end57, !dbg !19730

if.else44:                                        ; preds = %if.end37
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19733
  %fts_options45 = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 10, !dbg !19735, !ctir !1758
  %44 = load i32, i32* %fts_options45, align 8, !dbg !19735, !ctir !5
  %and46 = and i32 %44, 256, !dbg !19736
  %tobool47 = icmp ne i32 %and46, 0, !dbg !19736
  br i1 %tobool47, label %if.then48, label %if.end56, !dbg !19737

if.then48:                                        ; preds = %if.else44
  br label %do.body49, !dbg !19738

do.body49:                                        ; preds = %if.then48
  %45 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19740
  %46 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19740
  call void @leave_dir(%struct.FTS* %45, %struct._ftsent* %46), !dbg !19740
  br label %do.end50, !dbg !19740

do.end50:                                         ; preds = %do.body49
  %47 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19742
  %48 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19743
  %call51 = call zeroext i16 @fts_stat(%struct.FTS* %47, %struct._ftsent* %48, i1 zeroext false), !dbg !19744
  %49 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19745
  %50 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19747
  %call52 = call zeroext i1 @enter_dir(%struct.FTS* %49, %struct._ftsent* %50), !dbg !19748
  br i1 %call52, label %if.end55, label %if.then53, !dbg !19749

if.then53:                                        ; preds = %do.end50
  %call54 = call i32* @__errno_location() #15, !dbg !19750
  store i32 12, i32* %call54, align 4, !dbg !19750, !ctir !5
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19752
  br label %return, !dbg !19752

if.end55:                                         ; preds = %do.end50
  br label %if.end56, !dbg !19753

if.end56:                                         ; preds = %if.end55, %if.else44
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then41
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end11
  %51 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19754
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 9, !dbg !19755, !ctir !1758
  %52 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !19755, !ctir !1772
  %tobool59 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %52, null, !dbg !19754
  %53 = zext i1 %tobool59 to i64, !dbg !19754
  %cond60 = select i1 %tobool59, i64 -1, i64 100000, !dbg !19754
  store i64 %cond60, i64* %max_entries, align 8, !dbg !19756
  %54 = load i8, i8* %continue_readdir, align 1, !dbg !19757
  %tobool61 = trunc i8 %54 to i1, !dbg !19757
  br i1 %tobool61, label %if.then62, label %if.else63, !dbg !19759

if.then62:                                        ; preds = %if.end58
  store i8 1, i8* %descend, align 1, !dbg !19760
  br label %if.end135, !dbg !19762

if.else63:                                        ; preds = %if.end58
  %55 = load i32, i32* %type.addr, align 4, !dbg !19763
  %cmp64 = icmp ne i32 %55, 2, !dbg !19765
  br i1 %cmp64, label %land.rhs66, label %land.end87, !dbg !19766

land.rhs66:                                       ; preds = %if.else63
  %56 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19767
  %fts_options67 = getelementptr inbounds %struct.FTS, %struct.FTS* %56, i32 0, i32 10, !dbg !19767, !ctir !1758
  %57 = load i32, i32* %fts_options67, align 8, !dbg !19767, !ctir !5
  %and68 = and i32 %57, 8, !dbg !19767
  %tobool69 = icmp ne i32 %and68, 0, !dbg !19767
  br i1 %tobool69, label %land.lhs.true70, label %land.end85, !dbg !19768

land.lhs.true70:                                  ; preds = %land.rhs66
  %58 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19769
  %fts_options71 = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 10, !dbg !19769, !ctir !1758
  %59 = load i32, i32* %fts_options71, align 8, !dbg !19769, !ctir !5
  %and72 = and i32 %59, 16, !dbg !19769
  %tobool73 = icmp ne i32 %and72, 0, !dbg !19769
  br i1 %tobool73, label %land.lhs.true74, label %land.end85, !dbg !19770

land.lhs.true74:                                  ; preds = %land.lhs.true70
  %60 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19771
  %fts_options75 = getelementptr inbounds %struct.FTS, %struct.FTS* %60, i32 0, i32 10, !dbg !19771, !ctir !1758
  %61 = load i32, i32* %fts_options75, align 8, !dbg !19771, !ctir !5
  %and76 = and i32 %61, 32, !dbg !19771
  %tobool77 = icmp ne i32 %and76, 0, !dbg !19771
  br i1 %tobool77, label %land.end85, label %land.lhs.true78, !dbg !19772

land.lhs.true78:                                  ; preds = %land.lhs.true74
  %62 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19773
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %62, i32 0, i32 18, !dbg !19774, !ctir !1741
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !19775, !ctir !1812
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 2, !dbg !19775, !ctir !1813
  %63 = load i64, i64* %st_nlink, align 8, !dbg !19775, !ctir !333
  %cmp79 = icmp eq i64 %63, 2, !dbg !19776
  br i1 %cmp79, label %land.rhs81, label %land.end85, !dbg !19777

land.rhs81:                                       ; preds = %land.lhs.true78
  %64 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19778
  %65 = load i32, i32* %dir_fd, align 4, !dbg !19779
  %call82 = call i32 @leaf_optimization(%struct._ftsent* %64, i32 %65), !dbg !19780
  %cmp83 = icmp ne i32 %call82, 0, !dbg !19781
  br label %land.end85

land.end85:                                       ; preds = %land.rhs81, %land.lhs.true78, %land.lhs.true74, %land.lhs.true70, %land.rhs66
  %66 = phi i1 [ false, %land.lhs.true78 ], [ false, %land.lhs.true74 ], [ false, %land.lhs.true70 ], [ false, %land.rhs66 ], [ %cmp83, %land.rhs81 ], !dbg !19782
  %lnot86 = xor i1 %66, true, !dbg !19783
  br label %land.end87

land.end87:                                       ; preds = %land.end85, %if.else63
  %67 = phi i1 [ false, %if.else63 ], [ %lnot86, %land.end85 ], !dbg !19782
  %frombool88 = zext i1 %67 to i8, !dbg !19784
  store i8 %frombool88, i8* %descend, align 1, !dbg !19784
  %68 = load i8, i8* %descend, align 1, !dbg !19785
  %tobool89 = trunc i8 %68 to i1, !dbg !19785
  br i1 %tobool89, label %if.then93, label %lor.lhs.false, !dbg !19787

lor.lhs.false:                                    ; preds = %land.end87
  %69 = load i32, i32* %type.addr, align 4, !dbg !19788
  %cmp91 = icmp eq i32 %69, 3, !dbg !19789
  br i1 %cmp91, label %if.then93, label %if.end134, !dbg !19790

if.then93:                                        ; preds = %lor.lhs.false, %land.end87
  %70 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19791
  %fts_options94 = getelementptr inbounds %struct.FTS, %struct.FTS* %70, i32 0, i32 10, !dbg !19791, !ctir !1758
  %71 = load i32, i32* %fts_options94, align 8, !dbg !19791, !ctir !5
  %and95 = and i32 %71, 512, !dbg !19791
  %tobool96 = icmp ne i32 %and95, 0, !dbg !19791
  br i1 %tobool96, label %if.then97, label %if.end99, !dbg !19794

if.then97:                                        ; preds = %if.then93
  %72 = load i32, i32* %dir_fd, align 4, !dbg !19795
  %call98 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %72, i32 1030, i32 3), !dbg !19796
  store i32 %call98, i32* %dir_fd, align 4, !dbg !19797
  br label %if.end99, !dbg !19798

if.end99:                                         ; preds = %if.then97, %if.then93
  %73 = load i32, i32* %dir_fd, align 4, !dbg !19799
  %cmp100 = icmp slt i32 %73, 0, !dbg !19801
  br i1 %cmp100, label %if.then105, label %lor.lhs.false102, !dbg !19802

lor.lhs.false102:                                 ; preds = %if.end99
  %74 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19803
  %75 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19804
  %76 = load i32, i32* %dir_fd, align 4, !dbg !19805
  %call103 = call i32 @fts_safe_changedir(%struct.FTS* %74, %struct._ftsent* %75, i32 %76, i8* null), !dbg !19806
  %tobool104 = icmp ne i32 %call103, 0, !dbg !19806
  br i1 %tobool104, label %if.then105, label %if.else132, !dbg !19807

if.then105:                                       ; preds = %lor.lhs.false102, %if.end99
  %77 = load i8, i8* %descend, align 1, !dbg !19808
  %tobool106 = trunc i8 %77 to i1, !dbg !19808
  br i1 %tobool106, label %land.lhs.true108, label %if.end114, !dbg !19811

land.lhs.true108:                                 ; preds = %if.then105
  %78 = load i32, i32* %type.addr, align 4, !dbg !19812
  %cmp109 = icmp eq i32 %78, 3, !dbg !19813
  br i1 %cmp109, label %if.then111, label %if.end114, !dbg !19814

if.then111:                                       ; preds = %land.lhs.true108
  %call112 = call i32* @__errno_location() #15, !dbg !19815
  %79 = load i32, i32* %call112, align 4, !dbg !19815, !ctir !5
  %80 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19816
  %fts_errno113 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %80, i32 0, i32 8, !dbg !19817, !ctir !1741
  store i32 %79, i32* %fts_errno113, align 8, !dbg !19818, !ctir !5
  br label %if.end114, !dbg !19816

if.end114:                                        ; preds = %if.then111, %land.lhs.true108, %if.then105
  %81 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19819
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 16, !dbg !19820, !ctir !1741
  %82 = load i16, i16* %fts_flags, align 2, !dbg !19821, !ctir !34
  %conv115 = zext i16 %82 to i32, !dbg !19821
  %or = or i32 %conv115, 1, !dbg !19821
  %conv116 = trunc i32 %or to i16, !dbg !19821
  store i16 %conv116, i16* %fts_flags, align 2, !dbg !19821, !ctir !34
  store i8 0, i8* %descend, align 1, !dbg !19822
  br label %do.body117, !dbg !19823

do.body117:                                       ; preds = %if.end114
  %83 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19824
  %fts_dirp118 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %83, i32 0, i32 3, !dbg !19824, !ctir !1741
  %84 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp118, align 8, !dbg !19824, !ctir !530
  %call119 = call i32 @closedir(%struct.__dirstream* %84), !dbg !19824
  %85 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19824
  %fts_dirp120 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %85, i32 0, i32 3, !dbg !19824, !ctir !1741
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp120, align 8, !dbg !19824, !ctir !530
  br label %do.end121, !dbg !19824

do.end121:                                        ; preds = %do.body117
  %86 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19826
  %fts_options122 = getelementptr inbounds %struct.FTS, %struct.FTS* %86, i32 0, i32 10, !dbg !19826, !ctir !1758
  %87 = load i32, i32* %fts_options122, align 8, !dbg !19826, !ctir !5
  %and123 = and i32 %87, 512, !dbg !19826
  %tobool124 = icmp ne i32 %and123, 0, !dbg !19826
  br i1 %tobool124, label %land.lhs.true125, label %if.end130, !dbg !19828

land.lhs.true125:                                 ; preds = %do.end121
  %88 = load i32, i32* %dir_fd, align 4, !dbg !19829
  %cmp126 = icmp sle i32 0, %88, !dbg !19830
  br i1 %cmp126, label %if.then128, label %if.end130, !dbg !19831

if.then128:                                       ; preds = %land.lhs.true125
  %89 = load i32, i32* %dir_fd, align 4, !dbg !19832
  %call129 = call i32 @close(i32 %89), !dbg !19833
  br label %if.end130, !dbg !19833

if.end130:                                        ; preds = %if.then128, %land.lhs.true125, %do.end121
  %90 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19834
  %fts_dirp131 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %90, i32 0, i32 3, !dbg !19835, !ctir !1741
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp131, align 8, !dbg !19836, !ctir !530
  br label %if.end133, !dbg !19837

if.else132:                                       ; preds = %lor.lhs.false102
  store i8 1, i8* %descend, align 1, !dbg !19838
  br label %if.end133

if.end133:                                        ; preds = %if.else132, %if.end130
  br label %if.end134, !dbg !19839

if.end134:                                        ; preds = %if.end133, %lor.lhs.false
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then62
  %91 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19840
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 7, !dbg !19840, !ctir !1741
  %92 = load i8*, i8** %fts_path, align 8, !dbg !19840, !ctir !7
  %93 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19840
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %93, i32 0, i32 10, !dbg !19840, !ctir !1741
  %94 = load i64, i64* %fts_pathlen, align 8, !dbg !19840, !ctir !52
  %sub = sub i64 %94, 1, !dbg !19840
  %arrayidx = getelementptr inbounds i8, i8* %92, i64 %sub, !dbg !19840, !ctir !7
  %95 = load i8, i8* %arrayidx, align 1, !dbg !19840
  %conv136 = sext i8 %95 to i32, !dbg !19840
  %cmp137 = icmp eq i32 %conv136, 47, !dbg !19840
  br i1 %cmp137, label %cond.true139, label %cond.false142, !dbg !19840

cond.true139:                                     ; preds = %if.end135
  %96 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19840
  %fts_pathlen140 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %96, i32 0, i32 10, !dbg !19840, !ctir !1741
  %97 = load i64, i64* %fts_pathlen140, align 8, !dbg !19840, !ctir !52
  %sub141 = sub i64 %97, 1, !dbg !19840
  br label %cond.end144, !dbg !19840

cond.false142:                                    ; preds = %if.end135
  %98 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19840
  %fts_pathlen143 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %98, i32 0, i32 10, !dbg !19840, !ctir !1741
  %99 = load i64, i64* %fts_pathlen143, align 8, !dbg !19840, !ctir !52
  br label %cond.end144, !dbg !19840

cond.end144:                                      ; preds = %cond.false142, %cond.true139
  %cond145 = phi i64 [ %sub141, %cond.true139 ], [ %99, %cond.false142 ], !dbg !19840
  store i64 %cond145, i64* %len, align 8, !dbg !19841
  %100 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19842
  %fts_options146 = getelementptr inbounds %struct.FTS, %struct.FTS* %100, i32 0, i32 10, !dbg !19842, !ctir !1758
  %101 = load i32, i32* %fts_options146, align 8, !dbg !19842, !ctir !5
  %and147 = and i32 %101, 4, !dbg !19842
  %tobool148 = icmp ne i32 %and147, 0, !dbg !19842
  br i1 %tobool148, label %if.then149, label %if.else151, !dbg !19844

if.then149:                                       ; preds = %cond.end144
  %102 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19845
  %fts_path150 = getelementptr inbounds %struct.FTS, %struct.FTS* %102, i32 0, i32 4, !dbg !19847, !ctir !1758
  %103 = load i8*, i8** %fts_path150, align 8, !dbg !19847, !ctir !7
  %104 = load i64, i64* %len, align 8, !dbg !19848
  %add.ptr = getelementptr inbounds i8, i8* %103, i64 %104, !dbg !19849, !ctir !8
  store i8* %add.ptr, i8** %cp, align 8, !dbg !19850
  %105 = load i8*, i8** %cp, align 8, !dbg !19851
  %incdec.ptr = getelementptr inbounds i8, i8* %105, i32 1, !dbg !19851, !ctir !8
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !19851
  store i8 47, i8* %105, align 1, !dbg !19852, !ctir !8
  br label %if.end152, !dbg !19853

if.else151:                                       ; preds = %cond.end144
  store i8* null, i8** %cp, align 8, !dbg !19854
  br label %if.end152

if.end152:                                        ; preds = %if.else151, %if.then149
  %106 = load i64, i64* %len, align 8, !dbg !19856
  %inc = add i64 %106, 1, !dbg !19856
  store i64 %inc, i64* %len, align 8, !dbg !19856
  %107 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19857
  %fts_pathlen153 = getelementptr inbounds %struct.FTS, %struct.FTS* %107, i32 0, i32 7, !dbg !19858, !ctir !1758
  %108 = load i64, i64* %fts_pathlen153, align 8, !dbg !19858, !ctir !52
  %109 = load i64, i64* %len, align 8, !dbg !19859
  %sub154 = sub i64 %108, %109, !dbg !19860
  store i64 %sub154, i64* %maxlen, align 8, !dbg !19861
  %110 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19862
  %fts_level155 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 12, !dbg !19863, !ctir !1741
  %111 = load i64, i64* %fts_level155, align 8, !dbg !19863, !ctir !495
  %add = add nsw i64 %111, 1, !dbg !19864
  store i64 %add, i64* %level, align 8, !dbg !19865
  store i8 0, i8* %doadjust, align 1, !dbg !19866
  store %struct._ftsent* null, %struct._ftsent** %head, align 8, !dbg !19867
  store %struct._ftsent* null, %struct._ftsent** %tail, align 8, !dbg !19868
  store i64 0, i64* %nitems, align 8, !dbg !19869
  br label %while.cond, !dbg !19870

while.cond:                                       ; preds = %if.end334, %if.then200, %if.end152
  %112 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19871
  %fts_dirp156 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %112, i32 0, i32 3, !dbg !19872, !ctir !1741
  %113 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp156, align 8, !dbg !19872, !ctir !530
  %tobool157 = icmp ne %struct.__dirstream* %113, null, !dbg !19870
  br i1 %tobool157, label %while.body, label %while.end, !dbg !19870

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %d_namelen, metadata !19873, metadata !DIExpression()), !dbg !19875
  %call158 = call i32* @__errno_location() #15, !dbg !19876
  store i32 0, i32* %call158, align 4, !dbg !19876, !ctir !5
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp159, metadata !19877, metadata !DIExpression()), !dbg !19878
  %114 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19879
  %fts_dirp160 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %114, i32 0, i32 3, !dbg !19880, !ctir !1741
  %115 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp160, align 8, !dbg !19880, !ctir !530
  %call161 = call %struct.dirent* @readdir(%struct.__dirstream* %115), !dbg !19881
  store %struct.dirent* %call161, %struct.dirent** %dp159, align 8, !dbg !19878
  %116 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !19882
  %cmp162 = icmp eq %struct.dirent* %116, null, !dbg !19884
  br i1 %cmp162, label %if.then164, label %if.end177, !dbg !19885

if.then164:                                       ; preds = %while.body
  %call165 = call i32* @__errno_location() #15, !dbg !19886
  %117 = load i32, i32* %call165, align 4, !dbg !19886, !ctir !5
  %tobool166 = icmp ne i32 %117, 0, !dbg !19886
  br i1 %tobool166, label %if.then167, label %if.end176, !dbg !19889

if.then167:                                       ; preds = %if.then164
  %call168 = call i32* @__errno_location() #15, !dbg !19890
  %118 = load i32, i32* %call168, align 4, !dbg !19890, !ctir !5
  %119 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19892
  %fts_errno169 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %119, i32 0, i32 8, !dbg !19893, !ctir !1741
  store i32 %118, i32* %fts_errno169, align 8, !dbg !19894, !ctir !5
  %120 = load i8, i8* %continue_readdir, align 1, !dbg !19895
  %tobool170 = trunc i8 %120 to i1, !dbg !19895
  br i1 %tobool170, label %lor.end, label %lor.rhs, !dbg !19896

lor.rhs:                                          ; preds = %if.then167
  %121 = load i64, i64* %nitems, align 8, !dbg !19897
  %tobool172 = icmp ne i64 %121, 0, !dbg !19896
  br label %lor.end, !dbg !19896

lor.end:                                          ; preds = %lor.rhs, %if.then167
  %122 = phi i1 [ true, %if.then167 ], [ %tobool172, %lor.rhs ]
  %123 = zext i1 %122 to i64, !dbg !19898
  %cond173 = select i1 %122, i32 7, i32 4, !dbg !19898
  %conv174 = trunc i32 %cond173 to i16, !dbg !19898
  %124 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19899
  %fts_info175 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %124, i32 0, i32 15, !dbg !19900, !ctir !1741
  store i16 %conv174, i16* %fts_info175, align 8, !dbg !19901, !ctir !34
  br label %if.end176, !dbg !19902

if.end176:                                        ; preds = %lor.end, %if.then164
  br label %while.end, !dbg !19903

if.end177:                                        ; preds = %while.body
  %125 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19904
  %fts_options178 = getelementptr inbounds %struct.FTS, %struct.FTS* %125, i32 0, i32 10, !dbg !19904, !ctir !1758
  %126 = load i32, i32* %fts_options178, align 8, !dbg !19904, !ctir !5
  %and179 = and i32 %126, 32, !dbg !19904
  %tobool180 = icmp ne i32 %and179, 0, !dbg !19904
  br i1 %tobool180, label %if.end201, label %land.lhs.true181, !dbg !19906

land.lhs.true181:                                 ; preds = %if.end177
  %127 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !19907
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %127, i32 0, i32 4, !dbg !19907, !ctir !1861
  %arrayidx182 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !19907, !ctir !492
  %128 = load i8, i8* %arrayidx182, align 1, !dbg !19907
  %conv183 = sext i8 %128 to i32, !dbg !19907
  %cmp184 = icmp eq i32 %conv183, 46, !dbg !19907
  br i1 %cmp184, label %land.lhs.true186, label %if.end201, !dbg !19907

land.lhs.true186:                                 ; preds = %land.lhs.true181
  %129 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !19907
  %d_name187 = getelementptr inbounds %struct.dirent, %struct.dirent* %129, i32 0, i32 4, !dbg !19907, !ctir !1861
  %arrayidx188 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name187, i64 0, i64 1, !dbg !19907, !ctir !492
  %130 = load i8, i8* %arrayidx188, align 1, !dbg !19907
  %tobool189 = icmp ne i8 %130, 0, !dbg !19907
  br i1 %tobool189, label %lor.lhs.false190, label %if.then200, !dbg !19907

lor.lhs.false190:                                 ; preds = %land.lhs.true186
  %131 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !19907
  %d_name191 = getelementptr inbounds %struct.dirent, %struct.dirent* %131, i32 0, i32 4, !dbg !19907, !ctir !1861
  %arrayidx192 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name191, i64 0, i64 1, !dbg !19907, !ctir !492
  %132 = load i8, i8* %arrayidx192, align 1, !dbg !19907
  %conv193 = sext i8 %132 to i32, !dbg !19907
  %cmp194 = icmp eq i32 %conv193, 46, !dbg !19907
  br i1 %cmp194, label %land.lhs.true196, label %if.end201, !dbg !19907

land.lhs.true196:                                 ; preds = %lor.lhs.false190
  %133 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !19907
  %d_name197 = getelementptr inbounds %struct.dirent, %struct.dirent* %133, i32 0, i32 4, !dbg !19907, !ctir !1861
  %arrayidx198 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name197, i64 0, i64 2, !dbg !19907, !ctir !492
  %134 = load i8, i8* %arrayidx198, align 1, !dbg !19907
  %tobool199 = icmp ne i8 %134, 0, !dbg !19907
  br i1 %tobool199, label %if.end201, label %if.then200, !dbg !19908

if.then200:                                       ; preds = %land.lhs.true196, %land.lhs.true186
  br label %while.cond, !dbg !19909, !llvm.loop !19910

if.end201:                                        ; preds = %land.lhs.true196, %lor.lhs.false190, %land.lhs.true181, %if.end177
  %135 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !19912
  %d_name202 = getelementptr inbounds %struct.dirent, %struct.dirent* %135, i32 0, i32 4, !dbg !19912, !ctir !1861
  %arraydecay203 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name202, i64 0, i64 0, !dbg !19912, !ctir !492
  %call204 = call i64 @strlen(i8* %arraydecay203) #14, !dbg !19912
  store i64 %call204, i64* %d_namelen, align 8, !dbg !19913
  %136 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19914
  %137 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !19915
  %d_name205 = getelementptr inbounds %struct.dirent, %struct.dirent* %137, i32 0, i32 4, !dbg !19916, !ctir !1861
  %arraydecay206 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name205, i64 0, i64 0, !dbg !19915, !ctir !492
  %138 = load i64, i64* %d_namelen, align 8, !dbg !19917
  %call207 = call %struct._ftsent* @fts_alloc(%struct.FTS* %136, i8* %arraydecay206, i64 %138), !dbg !19918
  store %struct._ftsent* %call207, %struct._ftsent** %p, align 8, !dbg !19919
  %139 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19920
  %tobool208 = icmp ne %struct._ftsent* %139, null, !dbg !19920
  br i1 %tobool208, label %if.end210, label %if.then209, !dbg !19922

if.then209:                                       ; preds = %if.end201
  br label %mem1, !dbg !19923

if.end210:                                        ; preds = %if.end201
  %140 = load i64, i64* %d_namelen, align 8, !dbg !19924
  %141 = load i64, i64* %maxlen, align 8, !dbg !19926
  %cmp211 = icmp uge i64 %140, %141, !dbg !19927
  br i1 %cmp211, label %if.then213, label %if.end244, !dbg !19928

if.then213:                                       ; preds = %if.end210
  %142 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19929
  %fts_path214 = getelementptr inbounds %struct.FTS, %struct.FTS* %142, i32 0, i32 4, !dbg !19931, !ctir !1758
  %143 = load i8*, i8** %fts_path214, align 8, !dbg !19931, !ctir !7
  store i8* %143, i8** %oldaddr, align 8, !dbg !19932
  %144 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19933
  %145 = load i64, i64* %d_namelen, align 8, !dbg !19935
  %146 = load i64, i64* %len, align 8, !dbg !19936
  %add215 = add i64 %145, %146, !dbg !19937
  %add216 = add i64 %add215, 1, !dbg !19938
  %call217 = call zeroext i1 @fts_palloc(%struct.FTS* %144, i64 %add216), !dbg !19939
  br i1 %call217, label %if.end229, label %if.then218, !dbg !19940

if.then218:                                       ; preds = %if.then213
  br label %mem1, !dbg !19941

mem1:                                             ; preds = %if.then218, %if.then209
  call void @llvm.dbg.label(metadata !19942), !dbg !19944
  %call219 = call i32* @__errno_location() #15, !dbg !19945
  %147 = load i32, i32* %call219, align 4, !dbg !19945, !ctir !5
  store i32 %147, i32* %saved_errno, align 4, !dbg !19946
  %148 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19947
  %149 = bitcast %struct._ftsent* %148 to i8*, !dbg !19947
  call void @free(i8* %149) #12, !dbg !19948
  %150 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !19949
  call void @fts_lfree(%struct._ftsent* %150), !dbg !19950
  br label %do.body220, !dbg !19951

do.body220:                                       ; preds = %mem1
  %151 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19952
  %fts_dirp221 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %151, i32 0, i32 3, !dbg !19952, !ctir !1741
  %152 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp221, align 8, !dbg !19952, !ctir !530
  %call222 = call i32 @closedir(%struct.__dirstream* %152), !dbg !19952
  %153 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19952
  %fts_dirp223 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %153, i32 0, i32 3, !dbg !19952, !ctir !1741
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp223, align 8, !dbg !19952, !ctir !530
  br label %do.end224, !dbg !19952

do.end224:                                        ; preds = %do.body220
  %154 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19954
  %fts_info225 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %154, i32 0, i32 15, !dbg !19955, !ctir !1741
  store i16 7, i16* %fts_info225, align 8, !dbg !19956, !ctir !34
  %155 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19957
  %fts_options226 = getelementptr inbounds %struct.FTS, %struct.FTS* %155, i32 0, i32 10, !dbg !19957, !ctir !1758
  %156 = load i32, i32* %fts_options226, align 8, !dbg !19957, !ctir !5
  %or227 = or i32 %156, 8192, !dbg !19957
  store i32 %or227, i32* %fts_options226, align 8, !dbg !19957, !ctir !5
  %157 = load i32, i32* %saved_errno, align 4, !dbg !19958
  %call228 = call i32* @__errno_location() #15, !dbg !19958
  store i32 %157, i32* %call228, align 4, !dbg !19958, !ctir !5
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19959
  br label %return, !dbg !19959

if.end229:                                        ; preds = %if.then213
  %158 = load i8*, i8** %oldaddr, align 8, !dbg !19960
  %159 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19962
  %fts_path230 = getelementptr inbounds %struct.FTS, %struct.FTS* %159, i32 0, i32 4, !dbg !19963, !ctir !1758
  %160 = load i8*, i8** %fts_path230, align 8, !dbg !19963, !ctir !7
  %cmp231 = icmp ne i8* %158, %160, !dbg !19964
  br i1 %cmp231, label %if.then233, label %if.end241, !dbg !19965

if.then233:                                       ; preds = %if.end229
  store i8 1, i8* %doadjust, align 1, !dbg !19966
  %161 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19968
  %fts_options234 = getelementptr inbounds %struct.FTS, %struct.FTS* %161, i32 0, i32 10, !dbg !19968, !ctir !1758
  %162 = load i32, i32* %fts_options234, align 8, !dbg !19968, !ctir !5
  %and235 = and i32 %162, 4, !dbg !19968
  %tobool236 = icmp ne i32 %and235, 0, !dbg !19968
  br i1 %tobool236, label %if.then237, label %if.end240, !dbg !19970

if.then237:                                       ; preds = %if.then233
  %163 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19971
  %fts_path238 = getelementptr inbounds %struct.FTS, %struct.FTS* %163, i32 0, i32 4, !dbg !19972, !ctir !1758
  %164 = load i8*, i8** %fts_path238, align 8, !dbg !19972, !ctir !7
  %165 = load i64, i64* %len, align 8, !dbg !19973
  %add.ptr239 = getelementptr inbounds i8, i8* %164, i64 %165, !dbg !19974, !ctir !8
  store i8* %add.ptr239, i8** %cp, align 8, !dbg !19975
  br label %if.end240, !dbg !19976

if.end240:                                        ; preds = %if.then237, %if.then233
  br label %if.end241, !dbg !19977

if.end241:                                        ; preds = %if.end240, %if.end229
  %166 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19978
  %fts_pathlen242 = getelementptr inbounds %struct.FTS, %struct.FTS* %166, i32 0, i32 7, !dbg !19979, !ctir !1758
  %167 = load i64, i64* %fts_pathlen242, align 8, !dbg !19979, !ctir !52
  %168 = load i64, i64* %len, align 8, !dbg !19980
  %sub243 = sub i64 %167, %168, !dbg !19981
  store i64 %sub243, i64* %maxlen, align 8, !dbg !19982
  br label %if.end244, !dbg !19983

if.end244:                                        ; preds = %if.end241, %if.end210
  %169 = load i64, i64* %len, align 8, !dbg !19984
  %170 = load i64, i64* %d_namelen, align 8, !dbg !19985
  %add245 = add i64 %169, %170, !dbg !19986
  store i64 %add245, i64* %new_len, align 8, !dbg !19987
  %171 = load i64, i64* %new_len, align 8, !dbg !19988
  %172 = load i64, i64* %len, align 8, !dbg !19990
  %cmp246 = icmp ult i64 %171, %172, !dbg !19991
  br i1 %cmp246, label %if.then248, label %if.end258, !dbg !19992

if.then248:                                       ; preds = %if.end244
  %173 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19993
  %174 = bitcast %struct._ftsent* %173 to i8*, !dbg !19993
  call void @free(i8* %174) #12, !dbg !19995
  %175 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !19996
  call void @fts_lfree(%struct._ftsent* %175), !dbg !19997
  br label %do.body249, !dbg !19998

do.body249:                                       ; preds = %if.then248
  %176 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19999
  %fts_dirp250 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %176, i32 0, i32 3, !dbg !19999, !ctir !1741
  %177 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp250, align 8, !dbg !19999, !ctir !530
  %call251 = call i32 @closedir(%struct.__dirstream* %177), !dbg !19999
  %178 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19999
  %fts_dirp252 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %178, i32 0, i32 3, !dbg !19999, !ctir !1741
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp252, align 8, !dbg !19999, !ctir !530
  br label %do.end253, !dbg !19999

do.end253:                                        ; preds = %do.body249
  %179 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20001
  %fts_info254 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %179, i32 0, i32 15, !dbg !20002, !ctir !1741
  store i16 7, i16* %fts_info254, align 8, !dbg !20003, !ctir !34
  %180 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20004
  %fts_options255 = getelementptr inbounds %struct.FTS, %struct.FTS* %180, i32 0, i32 10, !dbg !20004, !ctir !1758
  %181 = load i32, i32* %fts_options255, align 8, !dbg !20004, !ctir !5
  %or256 = or i32 %181, 8192, !dbg !20004
  store i32 %or256, i32* %fts_options255, align 8, !dbg !20004, !ctir !5
  %call257 = call i32* @__errno_location() #15, !dbg !20005
  store i32 36, i32* %call257, align 4, !dbg !20005, !ctir !5
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20006
  br label %return, !dbg !20006

if.end258:                                        ; preds = %if.end244
  %182 = load i64, i64* %level, align 8, !dbg !20007
  %183 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20008
  %fts_level259 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %183, i32 0, i32 12, !dbg !20009, !ctir !1741
  store i64 %182, i64* %fts_level259, align 8, !dbg !20010, !ctir !495
  %184 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20011
  %fts_cur260 = getelementptr inbounds %struct.FTS, %struct.FTS* %184, i32 0, i32 0, !dbg !20012, !ctir !1758
  %185 = load %struct._ftsent*, %struct._ftsent** %fts_cur260, align 8, !dbg !20012, !ctir !1745
  %186 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20013
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %186, i32 0, i32 1, !dbg !20014, !ctir !1741
  store %struct._ftsent* %185, %struct._ftsent** %fts_parent, align 8, !dbg !20015, !ctir !1745
  %187 = load i64, i64* %new_len, align 8, !dbg !20016
  %188 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20017
  %fts_pathlen261 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %188, i32 0, i32 10, !dbg !20018, !ctir !1741
  store i64 %187, i64* %fts_pathlen261, align 8, !dbg !20019, !ctir !52
  %189 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20020
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %189, i32 0, i32 0, !dbg !20020, !ctir !1861
  %190 = load i64, i64* %d_ino, align 8, !dbg !20020, !ctir !257
  %191 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20021
  %fts_statp262 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %191, i32 0, i32 18, !dbg !20022, !ctir !1741
  %arraydecay263 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp262, i64 0, i64 0, !dbg !20023, !ctir !1812
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay263, i32 0, i32 1, !dbg !20023, !ctir !1813
  store i64 %190, i64* %st_ino, align 8, !dbg !20024, !ctir !257
  %192 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20025
  %fts_options264 = getelementptr inbounds %struct.FTS, %struct.FTS* %192, i32 0, i32 10, !dbg !20025, !ctir !1758
  %193 = load i32, i32* %fts_options264, align 8, !dbg !20025, !ctir !5
  %and265 = and i32 %193, 4, !dbg !20025
  %tobool266 = icmp ne i32 %and265, 0, !dbg !20025
  br i1 %tobool266, label %if.then267, label %if.else272, !dbg !20027

if.then267:                                       ; preds = %if.end258
  %194 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20028
  %fts_path268 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %194, i32 0, i32 7, !dbg !20030, !ctir !1741
  %195 = load i8*, i8** %fts_path268, align 8, !dbg !20030, !ctir !7
  %196 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20031
  %fts_accpath269 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %196, i32 0, i32 6, !dbg !20032, !ctir !1741
  store i8* %195, i8** %fts_accpath269, align 8, !dbg !20033, !ctir !7
  %197 = load i8*, i8** %cp, align 8, !dbg !20034
  %198 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20035
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %198, i32 0, i32 19, !dbg !20036, !ctir !1741
  %arraydecay270 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !20037, !ctir !1119
  %199 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20038
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %199, i32 0, i32 13, !dbg !20039, !ctir !1741
  %200 = load i64, i64* %fts_namelen, align 8, !dbg !20039, !ctir !52
  %add271 = add i64 %200, 1, !dbg !20040
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 8 %arraydecay270, i64 %add271, i1 false), !dbg !20037
  br label %if.end276, !dbg !20041

if.else272:                                       ; preds = %if.end258
  %201 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20042
  %fts_name273 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %201, i32 0, i32 19, !dbg !20043, !ctir !1741
  %arraydecay274 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name273, i64 0, i64 0, !dbg !20042, !ctir !1119
  %202 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20044
  %fts_accpath275 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %202, i32 0, i32 6, !dbg !20045, !ctir !1741
  store i8* %arraydecay274, i8** %fts_accpath275, align 8, !dbg !20046, !ctir !7
  br label %if.end276

if.end276:                                        ; preds = %if.else272, %if.then267
  %203 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20047
  %fts_compar277 = getelementptr inbounds %struct.FTS, %struct.FTS* %203, i32 0, i32 9, !dbg !20049, !ctir !1758
  %204 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar277, align 8, !dbg !20049, !ctir !1772
  %cmp278 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %204, null, !dbg !20050
  br i1 %cmp278, label %if.then284, label %lor.lhs.false280, !dbg !20051

lor.lhs.false280:                                 ; preds = %if.end276
  %205 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20052
  %fts_options281 = getelementptr inbounds %struct.FTS, %struct.FTS* %205, i32 0, i32 10, !dbg !20052, !ctir !1758
  %206 = load i32, i32* %fts_options281, align 8, !dbg !20052, !ctir !5
  %and282 = and i32 %206, 1024, !dbg !20052
  %tobool283 = icmp ne i32 %and282, 0, !dbg !20052
  br i1 %tobool283, label %if.then284, label %if.else311, !dbg !20053

if.then284:                                       ; preds = %lor.lhs.false280, %if.end276
  call void @llvm.dbg.declare(metadata i8* %skip_stat, metadata !20054, metadata !DIExpression()), !dbg !20056
  %207 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20057
  %fts_options285 = getelementptr inbounds %struct.FTS, %struct.FTS* %207, i32 0, i32 10, !dbg !20057, !ctir !1758
  %208 = load i32, i32* %fts_options285, align 8, !dbg !20057, !ctir !5
  %and286 = and i32 %208, 16, !dbg !20057
  %tobool287 = icmp ne i32 %and286, 0, !dbg !20057
  br i1 %tobool287, label %land.lhs.true288, label %land.end302, !dbg !20058

land.lhs.true288:                                 ; preds = %if.then284
  %209 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20059
  %fts_options289 = getelementptr inbounds %struct.FTS, %struct.FTS* %209, i32 0, i32 10, !dbg !20059, !ctir !1758
  %210 = load i32, i32* %fts_options289, align 8, !dbg !20059, !ctir !5
  %and290 = and i32 %210, 8, !dbg !20059
  %tobool291 = icmp ne i32 %and290, 0, !dbg !20059
  br i1 %tobool291, label %land.lhs.true292, label %land.end302, !dbg !20060

land.lhs.true292:                                 ; preds = %land.lhs.true288
  %211 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20061
  %d_type = getelementptr inbounds %struct.dirent, %struct.dirent* %211, i32 0, i32 3, !dbg !20061, !ctir !1861
  %212 = load i8, i8* %d_type, align 2, !dbg !20061, !ctir !451
  %conv293 = zext i8 %212 to i32, !dbg !20061
  %cmp294 = icmp ne i32 %conv293, 0, !dbg !20061
  br i1 %cmp294, label %land.rhs296, label %land.end302, !dbg !20062

land.rhs296:                                      ; preds = %land.lhs.true292
  %213 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20063
  %d_type297 = getelementptr inbounds %struct.dirent, %struct.dirent* %213, i32 0, i32 3, !dbg !20063, !ctir !1861
  %214 = load i8, i8* %d_type297, align 2, !dbg !20063, !ctir !451
  %conv298 = zext i8 %214 to i32, !dbg !20063
  %cmp299 = icmp eq i32 %conv298, 4, !dbg !20063
  %lnot301 = xor i1 %cmp299, true, !dbg !20064
  br label %land.end302

land.end302:                                      ; preds = %land.rhs296, %land.lhs.true292, %land.lhs.true288, %if.then284
  %215 = phi i1 [ false, %land.lhs.true292 ], [ false, %land.lhs.true288 ], [ false, %if.then284 ], [ %lnot301, %land.rhs296 ], !dbg !20065
  %frombool303 = zext i1 %215 to i8, !dbg !20056
  store i8 %frombool303, i8* %skip_stat, align 1, !dbg !20056
  %216 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20066
  %fts_info304 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %216, i32 0, i32 15, !dbg !20067, !ctir !1741
  store i16 11, i16* %fts_info304, align 8, !dbg !20068, !ctir !34
  %217 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20069
  %fts_statp305 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %217, i32 0, i32 18, !dbg !20070, !ctir !1741
  %arraydecay306 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp305, i64 0, i64 0, !dbg !20069, !ctir !1812
  %218 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20071
  %d_type307 = getelementptr inbounds %struct.dirent, %struct.dirent* %218, i32 0, i32 3, !dbg !20071, !ctir !1861
  %219 = load i8, i8* %d_type307, align 2, !dbg !20071, !ctir !451
  %conv308 = zext i8 %219 to i32, !dbg !20071
  call void @set_stat_type(%struct.stat* %arraydecay306, i32 %conv308), !dbg !20072
  %220 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20073
  %221 = load i8, i8* %skip_stat, align 1, !dbg !20074
  %tobool309 = trunc i8 %221 to i1, !dbg !20074
  %lnot310 = xor i1 %tobool309, true, !dbg !20075
  call void @fts_set_stat_required(%struct._ftsent* %220, i1 zeroext %lnot310), !dbg !20076
  br label %if.end314, !dbg !20077

if.else311:                                       ; preds = %lor.lhs.false280
  %222 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20078
  %223 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20080
  %call312 = call zeroext i16 @fts_stat(%struct.FTS* %222, %struct._ftsent* %223, i1 zeroext false), !dbg !20081
  %224 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20082
  %fts_info313 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %224, i32 0, i32 15, !dbg !20083, !ctir !1741
  store i16 %call312, i16* %fts_info313, align 8, !dbg !20084, !ctir !34
  br label %if.end314

if.end314:                                        ; preds = %if.else311, %land.end302
  %225 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20085
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %225, i32 0, i32 2, !dbg !20086, !ctir !1741
  store %struct._ftsent* null, %struct._ftsent** %fts_link, align 8, !dbg !20087, !ctir !1745
  %226 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20088
  %cmp315 = icmp eq %struct._ftsent* %226, null, !dbg !20090
  br i1 %cmp315, label %if.then317, label %if.else318, !dbg !20091

if.then317:                                       ; preds = %if.end314
  %227 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20092
  store %struct._ftsent* %227, %struct._ftsent** %tail, align 8, !dbg !20093
  store %struct._ftsent* %227, %struct._ftsent** %head, align 8, !dbg !20094
  br label %if.end320, !dbg !20095

if.else318:                                       ; preds = %if.end314
  %228 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20096
  %229 = load %struct._ftsent*, %struct._ftsent** %tail, align 8, !dbg !20098
  %fts_link319 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %229, i32 0, i32 2, !dbg !20099, !ctir !1741
  store %struct._ftsent* %228, %struct._ftsent** %fts_link319, align 8, !dbg !20100, !ctir !1745
  %230 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20101
  store %struct._ftsent* %230, %struct._ftsent** %tail, align 8, !dbg !20102
  br label %if.end320

if.end320:                                        ; preds = %if.else318, %if.then317
  %231 = load i64, i64* %nitems, align 8, !dbg !20103
  %cmp321 = icmp eq i64 %231, 10000, !dbg !20105
  br i1 %cmp321, label %land.lhs.true323, label %if.end329, !dbg !20106

land.lhs.true323:                                 ; preds = %if.end320
  %232 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20107
  %fts_compar324 = getelementptr inbounds %struct.FTS, %struct.FTS* %232, i32 0, i32 9, !dbg !20108, !ctir !1758
  %233 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar324, align 8, !dbg !20108, !ctir !1772
  %tobool325 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %233, null, !dbg !20107
  br i1 %tobool325, label %if.end329, label %if.then326, !dbg !20109

if.then326:                                       ; preds = %land.lhs.true323
  %234 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20110
  %235 = load i32, i32* %dir_fd, align 4, !dbg !20111
  %call327 = call zeroext i1 @dirent_inode_sort_may_be_useful(%struct._ftsent* %234, i32 %235), !dbg !20112
  %frombool328 = zext i1 %call327 to i8, !dbg !20113
  store i8 %frombool328, i8* %sort_by_inode, align 1, !dbg !20113
  br label %if.end329, !dbg !20114

if.end329:                                        ; preds = %if.then326, %land.lhs.true323, %if.end320
  %236 = load i64, i64* %nitems, align 8, !dbg !20115
  %inc330 = add i64 %236, 1, !dbg !20115
  store i64 %inc330, i64* %nitems, align 8, !dbg !20115
  %237 = load i64, i64* %max_entries, align 8, !dbg !20116
  %238 = load i64, i64* %nitems, align 8, !dbg !20118
  %cmp331 = icmp ule i64 %237, %238, !dbg !20119
  br i1 %cmp331, label %if.then333, label %if.end334, !dbg !20120

if.then333:                                       ; preds = %if.end329
  br label %break_without_closedir, !dbg !20121

if.end334:                                        ; preds = %if.end329
  br label %while.cond, !dbg !19870, !llvm.loop !19910

while.end:                                        ; preds = %if.end176, %while.cond
  %239 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20123
  %fts_dirp335 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %239, i32 0, i32 3, !dbg !20125, !ctir !1741
  %240 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp335, align 8, !dbg !20125, !ctir !530
  %tobool336 = icmp ne %struct.__dirstream* %240, null, !dbg !20123
  br i1 %tobool336, label %if.then337, label %if.end343, !dbg !20126

if.then337:                                       ; preds = %while.end
  br label %do.body338, !dbg !20127

do.body338:                                       ; preds = %if.then337
  %241 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20128
  %fts_dirp339 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %241, i32 0, i32 3, !dbg !20128, !ctir !1741
  %242 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp339, align 8, !dbg !20128, !ctir !530
  %call340 = call i32 @closedir(%struct.__dirstream* %242), !dbg !20128
  %243 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20128
  %fts_dirp341 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %243, i32 0, i32 3, !dbg !20128, !ctir !1741
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp341, align 8, !dbg !20128, !ctir !530
  br label %do.end342, !dbg !20128

do.end342:                                        ; preds = %do.body338
  br label %if.end343, !dbg !20128

if.end343:                                        ; preds = %do.end342, %while.end
  br label %break_without_closedir, !dbg !20125

break_without_closedir:                           ; preds = %if.end343, %if.then333
  call void @llvm.dbg.label(metadata !20130), !dbg !20131
  %244 = load i8, i8* %doadjust, align 1, !dbg !20132
  %tobool344 = trunc i8 %244 to i1, !dbg !20132
  br i1 %tobool344, label %if.then345, label %if.end346, !dbg !20134

if.then345:                                       ; preds = %break_without_closedir
  %245 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20135
  %246 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20136
  call void @fts_padjust(%struct.FTS* %245, %struct._ftsent* %246), !dbg !20137
  br label %if.end346, !dbg !20137

if.end346:                                        ; preds = %if.then345, %break_without_closedir
  %247 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20138
  %fts_options347 = getelementptr inbounds %struct.FTS, %struct.FTS* %247, i32 0, i32 10, !dbg !20138, !ctir !1758
  %248 = load i32, i32* %fts_options347, align 8, !dbg !20138, !ctir !5
  %and348 = and i32 %248, 4, !dbg !20138
  %tobool349 = icmp ne i32 %and348, 0, !dbg !20138
  br i1 %tobool349, label %if.then350, label %if.end360, !dbg !20140

if.then350:                                       ; preds = %if.end346
  %249 = load i64, i64* %len, align 8, !dbg !20141
  %250 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20144
  %fts_pathlen351 = getelementptr inbounds %struct.FTS, %struct.FTS* %250, i32 0, i32 7, !dbg !20145, !ctir !1758
  %251 = load i64, i64* %fts_pathlen351, align 8, !dbg !20145, !ctir !52
  %cmp352 = icmp eq i64 %249, %251, !dbg !20146
  br i1 %cmp352, label %if.then357, label %lor.lhs.false354, !dbg !20147

lor.lhs.false354:                                 ; preds = %if.then350
  %252 = load i64, i64* %nitems, align 8, !dbg !20148
  %cmp355 = icmp eq i64 %252, 0, !dbg !20149
  br i1 %cmp355, label %if.then357, label %if.end359, !dbg !20150

if.then357:                                       ; preds = %lor.lhs.false354, %if.then350
  %253 = load i8*, i8** %cp, align 8, !dbg !20151
  %incdec.ptr358 = getelementptr inbounds i8, i8* %253, i32 -1, !dbg !20151, !ctir !8
  store i8* %incdec.ptr358, i8** %cp, align 8, !dbg !20151
  br label %if.end359, !dbg !20151

if.end359:                                        ; preds = %if.then357, %lor.lhs.false354
  %254 = load i8*, i8** %cp, align 8, !dbg !20152
  store i8 0, i8* %254, align 1, !dbg !20153, !ctir !8
  br label %if.end360, !dbg !20154

if.end360:                                        ; preds = %if.end359, %if.end346
  %255 = load i8, i8* %continue_readdir, align 1, !dbg !20155
  %tobool361 = trunc i8 %255 to i1, !dbg !20155
  br i1 %tobool361, label %if.end385, label %land.lhs.true362, !dbg !20157

land.lhs.true362:                                 ; preds = %if.end360
  %256 = load i8, i8* %descend, align 1, !dbg !20158
  %tobool363 = trunc i8 %256 to i1, !dbg !20158
  br i1 %tobool363, label %land.lhs.true365, label %if.end385, !dbg !20159

land.lhs.true365:                                 ; preds = %land.lhs.true362
  %257 = load i32, i32* %type.addr, align 4, !dbg !20160
  %cmp366 = icmp eq i32 %257, 1, !dbg !20161
  br i1 %cmp366, label %land.lhs.true370, label %lor.lhs.false368, !dbg !20162

lor.lhs.false368:                                 ; preds = %land.lhs.true365
  %258 = load i64, i64* %nitems, align 8, !dbg !20163
  %tobool369 = icmp ne i64 %258, 0, !dbg !20163
  br i1 %tobool369, label %if.end385, label %land.lhs.true370, !dbg !20164

land.lhs.true370:                                 ; preds = %lor.lhs.false368, %land.lhs.true365
  %259 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20165
  %fts_level371 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %259, i32 0, i32 12, !dbg !20166, !ctir !1741
  %260 = load i64, i64* %fts_level371, align 8, !dbg !20166, !ctir !495
  %cmp372 = icmp eq i64 %260, 0, !dbg !20167
  br i1 %cmp372, label %cond.true374, label %cond.false377, !dbg !20168

cond.true374:                                     ; preds = %land.lhs.true370
  %261 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20169
  %call375 = call i32 @restore_initial_cwd(%struct.FTS* %261), !dbg !20170
  %tobool376 = icmp ne i32 %call375, 0, !dbg !20170
  br i1 %tobool376, label %if.then381, label %if.end385, !dbg !20165

cond.false377:                                    ; preds = %land.lhs.true370
  %262 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20171
  %263 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20172
  %fts_parent378 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %263, i32 0, i32 1, !dbg !20173, !ctir !1741
  %264 = load %struct._ftsent*, %struct._ftsent** %fts_parent378, align 8, !dbg !20173, !ctir !1745
  %call379 = call i32 @fts_safe_changedir(%struct.FTS* %262, %struct._ftsent* %264, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.437, i64 0, i64 0)), !dbg !20174
  %tobool380 = icmp ne i32 %call379, 0, !dbg !20174
  br i1 %tobool380, label %if.then381, label %if.end385, !dbg !20168

if.then381:                                       ; preds = %cond.false377, %cond.true374
  %265 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20175
  %fts_info382 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %265, i32 0, i32 15, !dbg !20177, !ctir !1741
  store i16 7, i16* %fts_info382, align 8, !dbg !20178, !ctir !34
  %266 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20179
  %fts_options383 = getelementptr inbounds %struct.FTS, %struct.FTS* %266, i32 0, i32 10, !dbg !20179, !ctir !1758
  %267 = load i32, i32* %fts_options383, align 8, !dbg !20179, !ctir !5
  %or384 = or i32 %267, 8192, !dbg !20179
  store i32 %or384, i32* %fts_options383, align 8, !dbg !20179, !ctir !5
  %268 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20180
  call void @fts_lfree(%struct._ftsent* %268), !dbg !20181
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20182
  br label %return, !dbg !20182

if.end385:                                        ; preds = %cond.false377, %cond.true374, %lor.lhs.false368, %land.lhs.true362, %if.end360
  %269 = load i64, i64* %nitems, align 8, !dbg !20183
  %tobool386 = icmp ne i64 %269, 0, !dbg !20183
  br i1 %tobool386, label %if.end403, label %if.then387, !dbg !20185

if.then387:                                       ; preds = %if.end385
  %270 = load i32, i32* %type.addr, align 4, !dbg !20186
  %cmp388 = icmp eq i32 %270, 3, !dbg !20189
  br i1 %cmp388, label %land.lhs.true390, label %if.end402, !dbg !20190

land.lhs.true390:                                 ; preds = %if.then387
  %271 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20191
  %fts_info391 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %271, i32 0, i32 15, !dbg !20192, !ctir !1741
  %272 = load i16, i16* %fts_info391, align 8, !dbg !20192, !ctir !34
  %conv392 = zext i16 %272 to i32, !dbg !20191
  %cmp393 = icmp ne i32 %conv392, 4, !dbg !20193
  br i1 %cmp393, label %land.lhs.true395, label %if.end402, !dbg !20194

land.lhs.true395:                                 ; preds = %land.lhs.true390
  %273 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20195
  %fts_info396 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %273, i32 0, i32 15, !dbg !20196, !ctir !1741
  %274 = load i16, i16* %fts_info396, align 8, !dbg !20196, !ctir !34
  %conv397 = zext i16 %274 to i32, !dbg !20195
  %cmp398 = icmp ne i32 %conv397, 7, !dbg !20197
  br i1 %cmp398, label %if.then400, label %if.end402, !dbg !20198

if.then400:                                       ; preds = %land.lhs.true395
  %275 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20199
  %fts_info401 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %275, i32 0, i32 15, !dbg !20200, !ctir !1741
  store i16 6, i16* %fts_info401, align 8, !dbg !20201, !ctir !34
  br label %if.end402, !dbg !20199

if.end402:                                        ; preds = %if.then400, %land.lhs.true395, %land.lhs.true390, %if.then387
  %276 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20202
  call void @fts_lfree(%struct._ftsent* %276), !dbg !20203
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20204
  br label %return, !dbg !20204

if.end403:                                        ; preds = %if.end385
  %277 = load i8, i8* %sort_by_inode, align 1, !dbg !20205
  %tobool404 = trunc i8 %277 to i1, !dbg !20205
  br i1 %tobool404, label %if.then405, label %if.end409, !dbg !20207

if.then405:                                       ; preds = %if.end403
  %278 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20208
  %fts_compar406 = getelementptr inbounds %struct.FTS, %struct.FTS* %278, i32 0, i32 9, !dbg !20210, !ctir !1758
  store i32 (%struct._ftsent**, %struct._ftsent**)* @fts_compare_ino, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar406, align 8, !dbg !20211, !ctir !1772
  %279 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20212
  %280 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20213
  %281 = load i64, i64* %nitems, align 8, !dbg !20214
  %call407 = call %struct._ftsent* @fts_sort(%struct.FTS* %279, %struct._ftsent* %280, i64 %281), !dbg !20215
  store %struct._ftsent* %call407, %struct._ftsent** %head, align 8, !dbg !20216
  %282 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20217
  %fts_compar408 = getelementptr inbounds %struct.FTS, %struct.FTS* %282, i32 0, i32 9, !dbg !20218, !ctir !1758
  store i32 (%struct._ftsent**, %struct._ftsent**)* null, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar408, align 8, !dbg !20219, !ctir !1772
  br label %if.end409, !dbg !20220

if.end409:                                        ; preds = %if.then405, %if.end403
  %283 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20221
  %fts_compar410 = getelementptr inbounds %struct.FTS, %struct.FTS* %283, i32 0, i32 9, !dbg !20223, !ctir !1758
  %284 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar410, align 8, !dbg !20223, !ctir !1772
  %tobool411 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %284, null, !dbg !20221
  br i1 %tobool411, label %land.lhs.true412, label %if.end417, !dbg !20224

land.lhs.true412:                                 ; preds = %if.end409
  %285 = load i64, i64* %nitems, align 8, !dbg !20225
  %cmp413 = icmp ugt i64 %285, 1, !dbg !20226
  br i1 %cmp413, label %if.then415, label %if.end417, !dbg !20227

if.then415:                                       ; preds = %land.lhs.true412
  %286 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20228
  %287 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20229
  %288 = load i64, i64* %nitems, align 8, !dbg !20230
  %call416 = call %struct._ftsent* @fts_sort(%struct.FTS* %286, %struct._ftsent* %287, i64 %288), !dbg !20231
  store %struct._ftsent* %call416, %struct._ftsent** %head, align 8, !dbg !20232
  br label %if.end417, !dbg !20233

if.end417:                                        ; preds = %if.then415, %land.lhs.true412, %if.end409
  %289 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20234
  store %struct._ftsent* %289, %struct._ftsent** %retval, align 8, !dbg !20235
  br label %return, !dbg !20235

return:                                           ; preds = %if.end417, %if.end402, %if.then381, %do.end253, %do.end224, %if.then53, %if.end36, %if.end
  %290 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !20236
  ret %struct._ftsent* %290, !dbg !20236
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @restore_initial_cwd(%struct.FTS* %sp) #4 !dbg !20237 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %fail = alloca i32, align 4, !ctir !5
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20238, metadata !DIExpression()), !dbg !20239
  call void @llvm.dbg.declare(metadata i32* %fail, metadata !20240, metadata !DIExpression()), !dbg !20241
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20242
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !20242, !ctir !1758
  %1 = load i32, i32* %fts_options, align 8, !dbg !20242, !ctir !5
  %and = and i32 %1, 4, !dbg !20242
  %tobool = icmp ne i32 %and, 0, !dbg !20242
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !20242

land.rhs:                                         ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20242
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !20242, !ctir !1758
  %3 = load i32, i32* %fts_options1, align 8, !dbg !20242, !ctir !5
  %and2 = and i32 %3, 512, !dbg !20242
  %tobool3 = icmp ne i32 %and2, 0, !dbg !20242
  br i1 %tobool3, label %cond.true, label %cond.false8, !dbg !20242

cond.true:                                        ; preds = %land.rhs
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20242
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20242
  %fts_options4 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !20242, !ctir !1758
  %6 = load i32, i32* %fts_options4, align 8, !dbg !20242, !ctir !5
  %and5 = and i32 %6, 512, !dbg !20242
  %tobool6 = icmp ne i32 %and5, 0, !dbg !20242
  br i1 %tobool6, label %cond.true7, label %cond.false, !dbg !20242

cond.true7:                                       ; preds = %cond.true
  br label %cond.end, !dbg !20242

cond.false:                                       ; preds = %cond.true
  %7 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20242
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 5, !dbg !20242, !ctir !1758
  %8 = load i32, i32* %fts_rfd, align 8, !dbg !20242, !ctir !5
  br label %cond.end, !dbg !20242

cond.end:                                         ; preds = %cond.false, %cond.true7
  %cond = phi i32 [ -100, %cond.true7 ], [ %8, %cond.false ], !dbg !20242
  call void @cwd_advance_fd(%struct.FTS* %4, i32 %cond, i1 zeroext true), !dbg !20242
  br label %cond.end17, !dbg !20242

cond.false8:                                      ; preds = %land.rhs
  %9 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20242
  %fts_options9 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 10, !dbg !20242, !ctir !1758
  %10 = load i32, i32* %fts_options9, align 8, !dbg !20242, !ctir !5
  %and10 = and i32 %10, 512, !dbg !20242
  %tobool11 = icmp ne i32 %and10, 0, !dbg !20242
  br i1 %tobool11, label %cond.true12, label %cond.false13, !dbg !20242

cond.true12:                                      ; preds = %cond.false8
  br label %cond.end15, !dbg !20242

cond.false13:                                     ; preds = %cond.false8
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20242
  %fts_rfd14 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 5, !dbg !20242, !ctir !1758
  %12 = load i32, i32* %fts_rfd14, align 8, !dbg !20242, !ctir !5
  br label %cond.end15, !dbg !20242

cond.end15:                                       ; preds = %cond.false13, %cond.true12
  %cond16 = phi i32 [ -100, %cond.true12 ], [ %12, %cond.false13 ], !dbg !20242
  %call = call i32 @fchdir(i32 %cond16) #12, !dbg !20242
  br label %cond.end17, !dbg !20242

cond.end17:                                       ; preds = %cond.end15, %cond.end
  %cond18 = phi i32 [ 0, %cond.end ], [ %call, %cond.end15 ], !dbg !20242
  %tobool19 = icmp ne i32 %cond18, 0, !dbg !20242
  br label %land.end

land.end:                                         ; preds = %cond.end17, %entry
  %13 = phi i1 [ false, %entry ], [ %tobool19, %cond.end17 ], !dbg !20243
  %land.ext = zext i1 %13 to i32, !dbg !20242
  store i32 %land.ext, i32* %fail, align 4, !dbg !20241
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20244
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 13, !dbg !20245, !ctir !1758
  call void @fd_ring_clear(%struct.I_ring* %fts_fd_ring), !dbg !20246
  %15 = load i32, i32* %fail, align 4, !dbg !20247
  ret i32 %15, !dbg !20248
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_load(%struct.FTS* %sp, %struct._ftsent* %p) #4 !dbg !20249 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %len = alloca i64, align 8, !ctir !52
  %cp = alloca i8*, align 8, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20250, metadata !DIExpression()), !dbg !20251
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20252, metadata !DIExpression()), !dbg !20253
  call void @llvm.dbg.declare(metadata i64* %len, metadata !20254, metadata !DIExpression()), !dbg !20255
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !20256, metadata !DIExpression()), !dbg !20257
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20258
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 13, !dbg !20259, !ctir !1741
  %1 = load i64, i64* %fts_namelen, align 8, !dbg !20259, !ctir !52
  %2 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20260
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 10, !dbg !20261, !ctir !1741
  store i64 %1, i64* %fts_pathlen, align 8, !dbg !20262, !ctir !52
  store i64 %1, i64* %len, align 8, !dbg !20263
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20264
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 4, !dbg !20265, !ctir !1758
  %4 = load i8*, i8** %fts_path, align 8, !dbg !20265, !ctir !7
  %5 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20266
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 19, !dbg !20267, !ctir !1741
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !20268, !ctir !1119
  %6 = load i64, i64* %len, align 8, !dbg !20269
  %add = add i64 %6, 1, !dbg !20270
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %4, i8* align 8 %arraydecay, i64 %add, i1 false), !dbg !20268
  %7 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20271
  %fts_name1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 19, !dbg !20273, !ctir !1741
  %arraydecay2 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name1, i64 0, i64 0, !dbg !20271, !ctir !1119
  %call = call i8* @strrchr(i8* %arraydecay2, i32 47) #14, !dbg !20274
  store i8* %call, i8** %cp, align 8, !dbg !20275
  %tobool = icmp ne i8* %call, null, !dbg !20275
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !20276

land.lhs.true:                                    ; preds = %entry
  %8 = load i8*, i8** %cp, align 8, !dbg !20277
  %9 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20278
  %fts_name3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 19, !dbg !20279, !ctir !1741
  %arraydecay4 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name3, i64 0, i64 0, !dbg !20278, !ctir !1119
  %cmp = icmp ne i8* %8, %arraydecay4, !dbg !20280
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !20281

lor.lhs.false:                                    ; preds = %land.lhs.true
  %10 = load i8*, i8** %cp, align 8, !dbg !20282
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 1, !dbg !20282, !ctir !7
  %11 = load i8, i8* %arrayidx, align 1, !dbg !20282
  %conv = sext i8 %11 to i32, !dbg !20282
  %tobool5 = icmp ne i32 %conv, 0, !dbg !20282
  br i1 %tobool5, label %if.then, label %if.end, !dbg !20283

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %12 = load i8*, i8** %cp, align 8, !dbg !20284
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !20284, !ctir !8
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !20284
  %call6 = call i64 @strlen(i8* %incdec.ptr) #14, !dbg !20286
  store i64 %call6, i64* %len, align 8, !dbg !20287
  %13 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20288
  %fts_name7 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 19, !dbg !20289, !ctir !1741
  %arraydecay8 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name7, i64 0, i64 0, !dbg !20290, !ctir !1119
  %14 = load i8*, i8** %cp, align 8, !dbg !20291
  %15 = load i64, i64* %len, align 8, !dbg !20292
  %add9 = add i64 %15, 1, !dbg !20293
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %arraydecay8, i8* align 1 %14, i64 %add9, i1 false), !dbg !20290
  %16 = load i64, i64* %len, align 8, !dbg !20294
  %17 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20295
  %fts_namelen10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 13, !dbg !20296, !ctir !1741
  store i64 %16, i64* %fts_namelen10, align 8, !dbg !20297, !ctir !52
  br label %if.end, !dbg !20298

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20299
  %fts_path11 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 4, !dbg !20300, !ctir !1758
  %19 = load i8*, i8** %fts_path11, align 8, !dbg !20300, !ctir !7
  %20 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20301
  %fts_path12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 7, !dbg !20302, !ctir !1741
  store i8* %19, i8** %fts_path12, align 8, !dbg !20303, !ctir !7
  %21 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20304
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !20305, !ctir !1741
  store i8* %19, i8** %fts_accpath, align 8, !dbg !20306, !ctir !7
  ret void, !dbg !20307
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @leaf_optimization(%struct._ftsent* %p, i32 %dir_fd) #4 !dbg !20308 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct._ftsent*, align 8
  %dir_fd.addr = alloca i32, align 4
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20311, metadata !DIExpression()), !dbg !20312
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !20313, metadata !DIExpression()), !dbg !20314
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20315
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !20316
  %call = call i64 @filesystem_type(%struct._ftsent* %0, i32 %1), !dbg !20317
  switch i64 %call, label %sw.default [
    i64 1382369651, label %sw.bb
    i64 1481003842, label %sw.bb
    i64 0, label %sw.bb1
    i64 1397113167, label %sw.bb2
    i64 4283649346, label %sw.bb3
    i64 26985, label %sw.bb4
    i64 40864, label %sw.bb5
  ], !dbg !20318

sw.bb:                                            ; preds = %entry, %entry
  store i32 2, i32* %retval, align 4, !dbg !20319
  br label %return, !dbg !20319

sw.bb1:                                           ; preds = %entry
  br label %sw.bb2, !dbg !20321

sw.bb2:                                           ; preds = %entry, %sw.bb1
  br label %sw.bb3, !dbg !20322

sw.bb3:                                           ; preds = %entry, %sw.bb2
  br label %sw.bb4, !dbg !20323

sw.bb4:                                           ; preds = %entry, %sw.bb3
  br label %sw.bb5, !dbg !20324

sw.bb5:                                           ; preds = %entry, %sw.bb4
  store i32 0, i32* %retval, align 4, !dbg !20325
  br label %return, !dbg !20325

sw.default:                                       ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !20326
  br label %return, !dbg !20326

return:                                           ; preds = %sw.default, %sw.bb5, %sw.bb
  %2 = load i32, i32* %retval, align 4, !dbg !20327
  ret i32 %2, !dbg !20327
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @enter_dir(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !20328 {
entry:
  %retval = alloca i1, align 1
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %st = alloca %struct.stat*, align 8, !ctir !1845
  %ad = alloca %struct.Active_dir*, align 8, !ctir !1859
  %ad_from_table = alloca %struct.Active_dir*, align 8, !ctir !1859
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !20331, metadata !DIExpression()), !dbg !20332
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !20333, metadata !DIExpression()), !dbg !20334
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20335
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !20337, !ctir !1758
  %1 = load i32, i32* %fts_options, align 8, !dbg !20337, !ctir !5
  %and = and i32 %1, 258, !dbg !20338
  %tobool = icmp ne i32 %and, 0, !dbg !20338
  br i1 %tobool, label %if.then, label %if.else, !dbg !20339

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.stat** %st, metadata !20340, metadata !DIExpression()), !dbg !20342
  %2 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20343
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 18, !dbg !20344, !ctir !1741
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20343, !ctir !1812
  store %struct.stat* %arraydecay, %struct.stat** %st, align 8, !dbg !20342
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ad, metadata !20345, metadata !DIExpression()), !dbg !20346
  %call = call noalias i8* @malloc(i64 24) #12, !dbg !20347
  %3 = bitcast i8* %call to %struct.Active_dir*, !dbg !20347
  store %struct.Active_dir* %3, %struct.Active_dir** %ad, align 8, !dbg !20346
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ad_from_table, metadata !20348, metadata !DIExpression()), !dbg !20349
  %4 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20350
  %tobool1 = icmp ne %struct.Active_dir* %4, null, !dbg !20350
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !20352

if.then2:                                         ; preds = %if.then
  store i1 false, i1* %retval, align 1, !dbg !20353
  br label %return, !dbg !20353

if.end:                                           ; preds = %if.then
  %5 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20354
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 0, !dbg !20355, !ctir !1846
  %6 = load i64, i64* %st_dev, align 8, !dbg !20355, !ctir !260
  %7 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20356
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %7, i32 0, i32 0, !dbg !20357, !ctir !1838
  store i64 %6, i64* %dev, align 8, !dbg !20358, !ctir !259
  %8 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20359
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 1, !dbg !20360, !ctir !1846
  %9 = load i64, i64* %st_ino, align 8, !dbg !20360, !ctir !257
  %10 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20361
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %10, i32 0, i32 1, !dbg !20362, !ctir !1838
  store i64 %9, i64* %ino, align 8, !dbg !20363, !ctir !256
  %11 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20364
  %12 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20365
  %fts_ent = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %12, i32 0, i32 2, !dbg !20366, !ctir !1838
  store %struct._ftsent* %11, %struct._ftsent** %fts_ent, align 8, !dbg !20367, !ctir !1835
  %13 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20368
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 12, !dbg !20369, !ctir !1758
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !20370
  %14 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !20370, !ctir !1781
  %15 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20371
  %16 = bitcast %struct.Active_dir* %15 to i8*, !dbg !20371
  %call3 = call i8* @hash_insert(%struct.hash_table* %14, i8* %16), !dbg !20372
  %17 = bitcast i8* %call3 to %struct.Active_dir*, !dbg !20372
  store %struct.Active_dir* %17, %struct.Active_dir** %ad_from_table, align 8, !dbg !20373
  %18 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !20374
  %19 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20376
  %cmp = icmp ne %struct.Active_dir* %18, %19, !dbg !20377
  br i1 %cmp, label %if.then4, label %if.end10, !dbg !20378

if.then4:                                         ; preds = %if.end
  %20 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20379
  %21 = bitcast %struct.Active_dir* %20 to i8*, !dbg !20379
  call void @free(i8* %21) #12, !dbg !20381
  %22 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !20382
  %tobool5 = icmp ne %struct.Active_dir* %22, null, !dbg !20382
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !20384

if.then6:                                         ; preds = %if.then4
  store i1 false, i1* %retval, align 1, !dbg !20385
  br label %return, !dbg !20385

if.end7:                                          ; preds = %if.then4
  %23 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !20386
  %fts_ent8 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %23, i32 0, i32 2, !dbg !20387, !ctir !1838
  %24 = load %struct._ftsent*, %struct._ftsent** %fts_ent8, align 8, !dbg !20387, !ctir !1835
  %25 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20388
  %fts_cycle9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %25, i32 0, i32 0, !dbg !20389, !ctir !1741
  store %struct._ftsent* %24, %struct._ftsent** %fts_cycle9, align 8, !dbg !20390, !ctir !1745
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20391
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 15, !dbg !20392, !ctir !1741
  store i16 2, i16* %fts_info, align 8, !dbg !20393, !ctir !34
  br label %if.end10, !dbg !20394

if.end10:                                         ; preds = %if.end7, %if.end
  br label %if.end19, !dbg !20395

if.else:                                          ; preds = %entry
  %27 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20396
  %fts_cycle11 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 12, !dbg !20399, !ctir !1758
  %state = bitcast %union.anon* %fts_cycle11 to %struct.cycle_check_state**, !dbg !20400
  %28 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !20400, !ctir !1781
  %29 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20401
  %fts_statp12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !20402, !ctir !1741
  %arraydecay13 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp12, i64 0, i64 0, !dbg !20401, !ctir !1812
  %call14 = call zeroext i1 @cycle_check(%struct.cycle_check_state* %28, %struct.stat* %arraydecay13), !dbg !20403
  br i1 %call14, label %if.then15, label %if.end18, !dbg !20404

if.then15:                                        ; preds = %if.else
  %30 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20405
  %31 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20407
  %fts_cycle16 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 0, !dbg !20408, !ctir !1741
  store %struct._ftsent* %30, %struct._ftsent** %fts_cycle16, align 8, !dbg !20409, !ctir !1745
  %32 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20410
  %fts_info17 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %32, i32 0, i32 15, !dbg !20411, !ctir !1741
  store i16 2, i16* %fts_info17, align 8, !dbg !20412, !ctir !34
  br label %if.end18, !dbg !20413

if.end18:                                         ; preds = %if.then15, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end10
  store i1 true, i1* %retval, align 1, !dbg !20414
  br label %return, !dbg !20414

return:                                           ; preds = %if.end19, %if.then6, %if.then2
  %33 = load i1, i1* %retval, align 1, !dbg !20415
  ret i1 %33, !dbg !20415
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cwd_advance_fd(%struct.FTS* %sp, i32 %fd, i1 zeroext %chdir_down_one) #4 !dbg !20416 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %fd.addr = alloca i32, align 4
  %chdir_down_one.addr = alloca i8, align 1
  %old = alloca i32, align 4, !ctir !5
  %prev_fd_in_slot = alloca i32, align 4, !ctir !5
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20419, metadata !DIExpression()), !dbg !20420
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20421, metadata !DIExpression()), !dbg !20422
  %frombool = zext i1 %chdir_down_one to i8
  store i8 %frombool, i8* %chdir_down_one.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %chdir_down_one.addr, metadata !20423, metadata !DIExpression()), !dbg !20424
  call void @llvm.dbg.declare(metadata i32* %old, metadata !20425, metadata !DIExpression()), !dbg !20426
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20427
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 6, !dbg !20428, !ctir !1758
  %1 = load i32, i32* %fts_cwd_fd, align 4, !dbg !20428, !ctir !5
  store i32 %1, i32* %old, align 4, !dbg !20426
  br label %do.body, !dbg !20429

do.body:                                          ; preds = %entry
  %2 = load i32, i32* %old, align 4, !dbg !20430
  %3 = load i32, i32* %fd.addr, align 4, !dbg !20430
  %cmp = icmp ne i32 %2, %3, !dbg !20430
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !20430

lor.lhs.false:                                    ; preds = %do.body
  %4 = load i32, i32* %old, align 4, !dbg !20430
  %cmp1 = icmp eq i32 %4, -100, !dbg !20430
  br i1 %cmp1, label %if.end, label %if.then, !dbg !20433

if.then:                                          ; preds = %lor.lhs.false
  call void @abort() #13, !dbg !20430
  unreachable, !dbg !20430

if.end:                                           ; preds = %lor.lhs.false, %do.body
  br label %do.end, !dbg !20433

do.end:                                           ; preds = %if.end
  %5 = load i8, i8* %chdir_down_one.addr, align 1, !dbg !20434
  %tobool = trunc i8 %5 to i1, !dbg !20434
  br i1 %tobool, label %if.then2, label %if.else, !dbg !20436

if.then2:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %prev_fd_in_slot, metadata !20437, metadata !DIExpression()), !dbg !20439
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20440
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 13, !dbg !20441, !ctir !1758
  %7 = load i32, i32* %old, align 4, !dbg !20442
  %call = call i32 @i_ring_push(%struct.I_ring* %fts_fd_ring, i32 %7), !dbg !20443
  store i32 %call, i32* %prev_fd_in_slot, align 4, !dbg !20439
  %8 = load i32, i32* %prev_fd_in_slot, align 4, !dbg !20444
  %cmp3 = icmp sle i32 0, %8, !dbg !20446
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !20447

if.then4:                                         ; preds = %if.then2
  %9 = load i32, i32* %prev_fd_in_slot, align 4, !dbg !20448
  %call5 = call i32 @close(i32 %9), !dbg !20449
  br label %if.end6, !dbg !20449

if.end6:                                          ; preds = %if.then4, %if.then2
  br label %if.end14, !dbg !20450

if.else:                                          ; preds = %do.end
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20451
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 10, !dbg !20451, !ctir !1758
  %11 = load i32, i32* %fts_options, align 8, !dbg !20451, !ctir !5
  %and = and i32 %11, 4, !dbg !20451
  %tobool7 = icmp ne i32 %and, 0, !dbg !20451
  br i1 %tobool7, label %if.end13, label %if.then8, !dbg !20453

if.then8:                                         ; preds = %if.else
  %12 = load i32, i32* %old, align 4, !dbg !20454
  %cmp9 = icmp sle i32 0, %12, !dbg !20457
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !20458

if.then10:                                        ; preds = %if.then8
  %13 = load i32, i32* %old, align 4, !dbg !20459
  %call11 = call i32 @close(i32 %13), !dbg !20460
  br label %if.end12, !dbg !20460

if.end12:                                         ; preds = %if.then10, %if.then8
  br label %if.end13, !dbg !20461

if.end13:                                         ; preds = %if.end12, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end6
  %14 = load i32, i32* %fd.addr, align 4, !dbg !20462
  %15 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20463
  %fts_cwd_fd15 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 6, !dbg !20464, !ctir !1758
  store i32 %14, i32* %fts_cwd_fd15, align 4, !dbg !20465, !ctir !5
  ret void, !dbg !20466
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @filesystem_type(%struct._ftsent* %p, i32 %fd) #4 !dbg !20467 {
entry:
  %retval = alloca i64, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %fd.addr = alloca i32, align 4
  %sp = alloca %struct.FTS*, align 8, !ctir !1757
  %h = alloca %struct.hash_table*, align 8, !ctir !1847
  %ent = alloca %struct.timespec*, align 8, !ctir !1849
  %fs_buf = alloca %struct.statfs, align 8, !ctir !20470
  %tmp = alloca %struct.timespec, align 8, !ctir !1850
  %t2 = alloca %struct.timespec*, align 8, !ctir !1849
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20493, metadata !DIExpression()), !dbg !20494
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20495, metadata !DIExpression()), !dbg !20496
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp, metadata !20497, metadata !DIExpression()), !dbg !20498
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20499
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 11, !dbg !20500, !ctir !1740
  %1 = load %struct.FTS*, %struct.FTS** %fts_fts, align 8, !dbg !20500, !ctir !1757
  store %struct.FTS* %1, %struct.FTS** %sp, align 8, !dbg !20498
  call void @llvm.dbg.declare(metadata %struct.hash_table** %h, metadata !20501, metadata !DIExpression()), !dbg !20502
  %2 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !20503
  %fts_leaf_optimization_works_ht = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 11, !dbg !20504, !ctir !1758
  %3 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht, align 8, !dbg !20504, !ctir !1140
  store %struct.hash_table* %3, %struct.hash_table** %h, align 8, !dbg !20502
  call void @llvm.dbg.declare(metadata %struct.timespec** %ent, metadata !20505, metadata !DIExpression()), !dbg !20506
  call void @llvm.dbg.declare(metadata %struct.statfs* %fs_buf, metadata !20507, metadata !DIExpression()), !dbg !20508
  %4 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !20509
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !20509, !ctir !1758
  %5 = load i32, i32* %fts_options, align 8, !dbg !20509, !ctir !5
  %and = and i32 %5, 512, !dbg !20509
  %tobool = icmp ne i32 %and, 0, !dbg !20509
  br i1 %tobool, label %if.end, label %if.then, !dbg !20511

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !20512
  br label %return, !dbg !20512

if.end:                                           ; preds = %entry
  %6 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20513
  %tobool1 = icmp ne %struct.hash_table* %6, null, !dbg !20513
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !20515

if.then2:                                         ; preds = %if.end
  %call = call %struct.hash_table* @hash_initialize(i64 13, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_type_hash, i1 (i8*, i8*)* @dev_type_compare, void (i8*)* @free), !dbg !20516
  %7 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !20517
  %fts_leaf_optimization_works_ht3 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 11, !dbg !20518, !ctir !1758
  store %struct.hash_table* %call, %struct.hash_table** %fts_leaf_optimization_works_ht3, align 8, !dbg !20519, !ctir !1140
  store %struct.hash_table* %call, %struct.hash_table** %h, align 8, !dbg !20520
  br label %if.end4, !dbg !20521

if.end4:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20522
  %tobool5 = icmp ne %struct.hash_table* %8, null, !dbg !20522
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !20524

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.timespec* %tmp, metadata !20525, metadata !DIExpression()), !dbg !20527
  %9 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20528
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 18, !dbg !20529, !ctir !1740
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20530, !ctir !1856
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !20530, !ctir !1846
  %10 = load i64, i64* %st_dev, align 8, !dbg !20530, !ctir !260
  %st_dev7 = getelementptr inbounds %struct.timespec, %struct.timespec* %tmp, i32 0, i32 0, !dbg !20531, !ctir !1850
  store i64 %10, i64* %st_dev7, align 8, !dbg !20532, !ctir !259
  %11 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20533
  %12 = bitcast %struct.timespec* %tmp to i8*, !dbg !20534
  %call8 = call i8* @hash_lookup(%struct.hash_table* %11, i8* %12), !dbg !20535
  %13 = bitcast i8* %call8 to %struct.timespec*, !dbg !20535
  store %struct.timespec* %13, %struct.timespec** %ent, align 8, !dbg !20536
  %14 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !20537
  %tobool9 = icmp ne %struct.timespec* %14, null, !dbg !20537
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !20539

if.then10:                                        ; preds = %if.then6
  %15 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !20540
  %f_type = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i32 0, i32 1, !dbg !20541, !ctir !1850
  %16 = load i64, i64* %f_type, align 8, !dbg !20541, !ctir !1854
  store i64 %16, i64* %retval, align 8, !dbg !20542
  br label %return, !dbg !20542

if.end11:                                         ; preds = %if.then6
  br label %if.end12, !dbg !20543

if.end12:                                         ; preds = %if.end11, %if.end4
  %17 = load i32, i32* %fd.addr, align 4, !dbg !20544
  %cmp = icmp slt i32 %17, 0, !dbg !20546
  br i1 %cmp, label %if.then15, label %lor.lhs.false, !dbg !20547

lor.lhs.false:                                    ; preds = %if.end12
  %18 = load i32, i32* %fd.addr, align 4, !dbg !20548
  %call13 = call i32 @fstatfs(i32 %18, %struct.statfs* %fs_buf) #12, !dbg !20549
  %cmp14 = icmp ne i32 %call13, 0, !dbg !20550
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !20551

if.then15:                                        ; preds = %lor.lhs.false, %if.end12
  store i64 0, i64* %retval, align 8, !dbg !20552
  br label %return, !dbg !20552

if.end16:                                         ; preds = %lor.lhs.false
  %19 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20553
  %tobool17 = icmp ne %struct.hash_table* %19, null, !dbg !20553
  br i1 %tobool17, label %if.then18, label %if.end36, !dbg !20555

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata %struct.timespec** %t2, metadata !20556, metadata !DIExpression()), !dbg !20558
  %call19 = call noalias i8* @malloc(i64 16) #12, !dbg !20559
  %20 = bitcast i8* %call19 to %struct.timespec*, !dbg !20559
  store %struct.timespec* %20, %struct.timespec** %t2, align 8, !dbg !20558
  %21 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20560
  %tobool20 = icmp ne %struct.timespec* %21, null, !dbg !20560
  br i1 %tobool20, label %if.then21, label %if.end35, !dbg !20562

if.then21:                                        ; preds = %if.then18
  %22 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20563
  %fts_statp22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 18, !dbg !20565, !ctir !1740
  %arraydecay23 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp22, i64 0, i64 0, !dbg !20566, !ctir !1856
  %st_dev24 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay23, i32 0, i32 0, !dbg !20566, !ctir !1846
  %23 = load i64, i64* %st_dev24, align 8, !dbg !20566, !ctir !260
  %24 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20567
  %st_dev25 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i32 0, i32 0, !dbg !20568, !ctir !1850
  store i64 %23, i64* %st_dev25, align 8, !dbg !20569, !ctir !259
  %f_type26 = getelementptr inbounds %struct.statfs, %struct.statfs* %fs_buf, i32 0, i32 0, !dbg !20570, !ctir !20470
  %25 = load i64, i64* %f_type26, align 8, !dbg !20570, !ctir !1855
  %26 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20571
  %f_type27 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i32 0, i32 1, !dbg !20572, !ctir !1850
  store i64 %25, i64* %f_type27, align 8, !dbg !20573, !ctir !1854
  %27 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20574
  %28 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20575
  %29 = bitcast %struct.timespec* %28 to i8*, !dbg !20575
  %call28 = call i8* @hash_insert(%struct.hash_table* %27, i8* %29), !dbg !20576
  %30 = bitcast i8* %call28 to %struct.timespec*, !dbg !20576
  store %struct.timespec* %30, %struct.timespec** %ent, align 8, !dbg !20577
  %31 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !20578
  %tobool29 = icmp ne %struct.timespec* %31, null, !dbg !20578
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !20580

if.then30:                                        ; preds = %if.then21
  br label %do.body, !dbg !20581

do.body:                                          ; preds = %if.then30
  %32 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !20582
  %33 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20582
  %cmp31 = icmp eq %struct.timespec* %32, %33, !dbg !20582
  br i1 %cmp31, label %if.end33, label %if.then32, !dbg !20585

if.then32:                                        ; preds = %do.body
  call void @abort() #13, !dbg !20582
  unreachable, !dbg !20582

if.end33:                                         ; preds = %do.body
  br label %do.end, !dbg !20585

do.end:                                           ; preds = %if.end33
  br label %if.end34, !dbg !20585

if.else:                                          ; preds = %if.then21
  %34 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20586
  %35 = bitcast %struct.timespec* %34 to i8*, !dbg !20586
  call void @free(i8* %35) #12, !dbg !20587
  br label %if.end34

if.end34:                                         ; preds = %if.else, %do.end
  br label %if.end35, !dbg !20588

if.end35:                                         ; preds = %if.end34, %if.then18
  br label %if.end36, !dbg !20589

if.end36:                                         ; preds = %if.end35, %if.end16
  %f_type37 = getelementptr inbounds %struct.statfs, %struct.statfs* %fs_buf, i32 0, i32 0, !dbg !20590, !ctir !20470
  %36 = load i64, i64* %f_type37, align 8, !dbg !20590, !ctir !1855
  store i64 %36, i64* %retval, align 8, !dbg !20591
  br label %return, !dbg !20591

return:                                           ; preds = %if.end36, %if.then15, %if.then10, %if.then
  %37 = load i64, i64* %retval, align 8, !dbg !20592
  ret i64 %37, !dbg !20592
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_type_hash(i8* %x, i64 %table_size) #4 !dbg !20593 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %ax = alloca %struct.timespec*, align 8, !ctir !1857
  %dev = alloca i64, align 8, !ctir !476
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !20594, metadata !DIExpression()), !dbg !20595
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !20596, metadata !DIExpression()), !dbg !20597
  call void @llvm.dbg.declare(metadata %struct.timespec** %ax, metadata !20598, metadata !DIExpression()), !dbg !20599
  %0 = load i8*, i8** %x.addr, align 8, !dbg !20600
  %1 = bitcast i8* %0 to %struct.timespec*, !dbg !20600
  store %struct.timespec* %1, %struct.timespec** %ax, align 8, !dbg !20599
  call void @llvm.dbg.declare(metadata i64* %dev, metadata !20601, metadata !DIExpression()), !dbg !20602
  %2 = load %struct.timespec*, %struct.timespec** %ax, align 8, !dbg !20603
  %st_dev = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 0, !dbg !20604, !ctir !1858
  %3 = load i64, i64* %st_dev, align 8, !dbg !20604, !ctir !259
  store i64 %3, i64* %dev, align 8, !dbg !20602
  %4 = load i64, i64* %dev, align 8, !dbg !20605
  %5 = load i64, i64* %table_size.addr, align 8, !dbg !20606
  %rem = urem i64 %4, %5, !dbg !20607
  ret i64 %rem, !dbg !20608
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_type_compare(i8* %x, i8* %y) #4 !dbg !20609 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %ax = alloca %struct.timespec*, align 8, !ctir !1857
  %ay = alloca %struct.timespec*, align 8, !ctir !1857
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !20610, metadata !DIExpression()), !dbg !20611
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !20612, metadata !DIExpression()), !dbg !20613
  call void @llvm.dbg.declare(metadata %struct.timespec** %ax, metadata !20614, metadata !DIExpression()), !dbg !20615
  %0 = load i8*, i8** %x.addr, align 8, !dbg !20616
  %1 = bitcast i8* %0 to %struct.timespec*, !dbg !20616
  store %struct.timespec* %1, %struct.timespec** %ax, align 8, !dbg !20615
  call void @llvm.dbg.declare(metadata %struct.timespec** %ay, metadata !20617, metadata !DIExpression()), !dbg !20618
  %2 = load i8*, i8** %y.addr, align 8, !dbg !20619
  %3 = bitcast i8* %2 to %struct.timespec*, !dbg !20619
  store %struct.timespec* %3, %struct.timespec** %ay, align 8, !dbg !20618
  %4 = load %struct.timespec*, %struct.timespec** %ax, align 8, !dbg !20620
  %st_dev = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i32 0, i32 0, !dbg !20621, !ctir !1858
  %5 = load i64, i64* %st_dev, align 8, !dbg !20621, !ctir !259
  %6 = load %struct.timespec*, %struct.timespec** %ay, align 8, !dbg !20622
  %st_dev1 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i32 0, i32 0, !dbg !20623, !ctir !1858
  %7 = load i64, i64* %st_dev1, align 8, !dbg !20623, !ctir !259
  %cmp = icmp eq i64 %5, %7, !dbg !20624
  ret i1 %cmp, !dbg !20625
}

; Function Attrs: nounwind
declare dso_local i32 @fstatfs(i32, %struct.statfs*) #2

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_stat_type(%struct.stat* %st, i32 %dtype) #4 !dbg !20626 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  %dtype.addr = alloca i32, align 4
  %type = alloca i32, align 4, !ctir !236
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !20629, metadata !DIExpression()), !dbg !20630
  store i32 %dtype, i32* %dtype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dtype.addr, metadata !20631, metadata !DIExpression()), !dbg !20632
  call void @llvm.dbg.declare(metadata i32* %type, metadata !20633, metadata !DIExpression()), !dbg !20634
  %0 = load i32, i32* %dtype.addr, align 4, !dbg !20635
  switch i32 %0, label %sw.default [
    i32 6, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 1, label %sw.bb3
    i32 10, label %sw.bb4
    i32 8, label %sw.bb5
    i32 12, label %sw.bb6
  ], !dbg !20636

sw.bb:                                            ; preds = %entry
  store i32 24576, i32* %type, align 4, !dbg !20637
  br label %sw.epilog, !dbg !20639

sw.bb1:                                           ; preds = %entry
  store i32 8192, i32* %type, align 4, !dbg !20640
  br label %sw.epilog, !dbg !20641

sw.bb2:                                           ; preds = %entry
  store i32 16384, i32* %type, align 4, !dbg !20642
  br label %sw.epilog, !dbg !20643

sw.bb3:                                           ; preds = %entry
  store i32 4096, i32* %type, align 4, !dbg !20644
  br label %sw.epilog, !dbg !20645

sw.bb4:                                           ; preds = %entry
  store i32 40960, i32* %type, align 4, !dbg !20646
  br label %sw.epilog, !dbg !20647

sw.bb5:                                           ; preds = %entry
  store i32 32768, i32* %type, align 4, !dbg !20648
  br label %sw.epilog, !dbg !20649

sw.bb6:                                           ; preds = %entry
  store i32 49152, i32* %type, align 4, !dbg !20650
  br label %sw.epilog, !dbg !20651

sw.default:                                       ; preds = %entry
  store i32 0, i32* %type, align 4, !dbg !20652
  br label %sw.epilog, !dbg !20653

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %type, align 4, !dbg !20654
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !20655
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 3, !dbg !20656, !ctir !1813
  store i32 %1, i32* %st_mode, align 8, !dbg !20657, !ctir !165
  ret void, !dbg !20658
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dirent_inode_sort_may_be_useful(%struct._ftsent* %p, i32 %dir_fd) #4 !dbg !20659 {
entry:
  %retval = alloca i1, align 1
  %p.addr = alloca %struct._ftsent*, align 8
  %dir_fd.addr = alloca i32, align 4
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20662, metadata !DIExpression()), !dbg !20663
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !20664, metadata !DIExpression()), !dbg !20665
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20666
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !20667
  %call = call i64 @filesystem_type(%struct._ftsent* %0, i32 %1), !dbg !20668
  switch i64 %call, label %sw.default [
    i64 4283649346, label %sw.bb
    i64 26985, label %sw.bb
    i64 16914836, label %sw.bb
  ], !dbg !20669

sw.bb:                                            ; preds = %entry, %entry, %entry
  store i1 false, i1* %retval, align 1, !dbg !20670
  br label %return, !dbg !20670

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !20672
  br label %return, !dbg !20672

return:                                           ; preds = %sw.default, %sw.bb
  %2 = load i1, i1* %retval, align 1, !dbg !20673
  ret i1 %2, !dbg !20673
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_padjust(%struct.FTS* %sp, %struct._ftsent* %head) #4 !dbg !20674 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %head.addr = alloca %struct._ftsent*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !1835
  %addr = alloca i8*, align 8, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20675, metadata !DIExpression()), !dbg !20676
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !20677, metadata !DIExpression()), !dbg !20678
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !20679, metadata !DIExpression()), !dbg !20680
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !20681, metadata !DIExpression()), !dbg !20682
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20683
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 4, !dbg !20684, !ctir !1758
  %1 = load i8*, i8** %fts_path, align 8, !dbg !20684, !ctir !7
  store i8* %1, i8** %addr, align 8, !dbg !20682
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20685
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 1, !dbg !20687, !ctir !1758
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !20687, !ctir !1745
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !20688
  br label %for.cond, !dbg !20689

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20690
  %tobool = icmp ne %struct._ftsent* %4, null, !dbg !20692
  br i1 %tobool, label %for.body, label %for.end, !dbg !20692

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !20693

do.body:                                          ; preds = %for.body
  %5 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20694
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 6, !dbg !20694, !ctir !1741
  %6 = load i8*, i8** %fts_accpath, align 8, !dbg !20694, !ctir !7
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20694
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 19, !dbg !20694, !ctir !1741
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !20694, !ctir !1119
  %cmp = icmp ne i8* %6, %arraydecay, !dbg !20694
  br i1 %cmp, label %if.then, label %if.end, !dbg !20697

if.then:                                          ; preds = %do.body
  %8 = load i8*, i8** %addr, align 8, !dbg !20698
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20698
  %fts_accpath1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 6, !dbg !20698, !ctir !1741
  %10 = load i8*, i8** %fts_accpath1, align 8, !dbg !20698, !ctir !7
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20698
  %fts_path2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 7, !dbg !20698, !ctir !1741
  %12 = load i8*, i8** %fts_path2, align 8, !dbg !20698, !ctir !7
  %sub.ptr.lhs.cast = ptrtoint i8* %10 to i64, !dbg !20698
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !20698
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20698
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %sub.ptr.sub, !dbg !20698, !ctir !8
  %13 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20698
  %fts_accpath3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 6, !dbg !20698, !ctir !1741
  store i8* %add.ptr, i8** %fts_accpath3, align 8, !dbg !20698, !ctir !7
  br label %if.end, !dbg !20698

if.end:                                           ; preds = %if.then, %do.body
  %14 = load i8*, i8** %addr, align 8, !dbg !20697
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20697
  %fts_path4 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 7, !dbg !20697, !ctir !1741
  store i8* %14, i8** %fts_path4, align 8, !dbg !20697, !ctir !7
  br label %do.end, !dbg !20697

do.end:                                           ; preds = %if.end
  br label %for.inc, !dbg !20697

for.inc:                                          ; preds = %do.end
  %16 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20700
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 2, !dbg !20701, !ctir !1741
  %17 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !20701, !ctir !1745
  store %struct._ftsent* %17, %struct._ftsent** %p, align 8, !dbg !20702
  br label %for.cond, !dbg !20703, !llvm.loop !20704

for.end:                                          ; preds = %for.cond
  %18 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !20706
  store %struct._ftsent* %18, %struct._ftsent** %p, align 8, !dbg !20708
  br label %for.cond5, !dbg !20709

for.cond5:                                        ; preds = %cond.end, %for.end
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20710
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !20712, !ctir !1741
  %20 = load i64, i64* %fts_level, align 8, !dbg !20712, !ctir !495
  %cmp6 = icmp sge i64 %20, 0, !dbg !20713
  br i1 %cmp6, label %for.body7, label %for.end27, !dbg !20714

for.body7:                                        ; preds = %for.cond5
  br label %do.body8, !dbg !20715

do.body8:                                         ; preds = %for.body7
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20717
  %fts_accpath9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !20717, !ctir !1741
  %22 = load i8*, i8** %fts_accpath9, align 8, !dbg !20717, !ctir !7
  %23 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20717
  %fts_name10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 19, !dbg !20717, !ctir !1741
  %arraydecay11 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name10, i64 0, i64 0, !dbg !20717, !ctir !1119
  %cmp12 = icmp ne i8* %22, %arraydecay11, !dbg !20717
  br i1 %cmp12, label %if.then13, label %if.end21, !dbg !20720

if.then13:                                        ; preds = %do.body8
  %24 = load i8*, i8** %addr, align 8, !dbg !20721
  %25 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20721
  %fts_accpath14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %25, i32 0, i32 6, !dbg !20721, !ctir !1741
  %26 = load i8*, i8** %fts_accpath14, align 8, !dbg !20721, !ctir !7
  %27 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20721
  %fts_path15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 7, !dbg !20721, !ctir !1741
  %28 = load i8*, i8** %fts_path15, align 8, !dbg !20721, !ctir !7
  %sub.ptr.lhs.cast16 = ptrtoint i8* %26 to i64, !dbg !20721
  %sub.ptr.rhs.cast17 = ptrtoint i8* %28 to i64, !dbg !20721
  %sub.ptr.sub18 = sub i64 %sub.ptr.lhs.cast16, %sub.ptr.rhs.cast17, !dbg !20721
  %add.ptr19 = getelementptr inbounds i8, i8* %24, i64 %sub.ptr.sub18, !dbg !20721, !ctir !8
  %29 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20721
  %fts_accpath20 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 6, !dbg !20721, !ctir !1741
  store i8* %add.ptr19, i8** %fts_accpath20, align 8, !dbg !20721, !ctir !7
  br label %if.end21, !dbg !20721

if.end21:                                         ; preds = %if.then13, %do.body8
  %30 = load i8*, i8** %addr, align 8, !dbg !20720
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20720
  %fts_path22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 7, !dbg !20720, !ctir !1741
  store i8* %30, i8** %fts_path22, align 8, !dbg !20720, !ctir !7
  br label %do.end23, !dbg !20720

do.end23:                                         ; preds = %if.end21
  %32 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20723
  %fts_link24 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %32, i32 0, i32 2, !dbg !20724, !ctir !1741
  %33 = load %struct._ftsent*, %struct._ftsent** %fts_link24, align 8, !dbg !20724, !ctir !1745
  %tobool25 = icmp ne %struct._ftsent* %33, null, !dbg !20723
  br i1 %tobool25, label %cond.true, label %cond.false, !dbg !20723

cond.true:                                        ; preds = %do.end23
  %34 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20725
  %fts_link26 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 2, !dbg !20726, !ctir !1741
  %35 = load %struct._ftsent*, %struct._ftsent** %fts_link26, align 8, !dbg !20726, !ctir !1745
  br label %cond.end, !dbg !20723

cond.false:                                       ; preds = %do.end23
  %36 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20727
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %36, i32 0, i32 1, !dbg !20728, !ctir !1741
  %37 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !20728, !ctir !1745
  br label %cond.end, !dbg !20723

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._ftsent* [ %35, %cond.true ], [ %37, %cond.false ], !dbg !20723
  store %struct._ftsent* %cond, %struct._ftsent** %p, align 8, !dbg !20729
  br label %for.cond5, !dbg !20730, !llvm.loop !20731

for.end27:                                        ; preds = %for.cond5
  ret void, !dbg !20733
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_compare_ino(%struct._ftsent** %a, %struct._ftsent** %b) #4 !dbg !20734 {
entry:
  %a.addr = alloca %struct._ftsent**, align 8
  %b.addr = alloca %struct._ftsent**, align 8
  store %struct._ftsent** %a, %struct._ftsent*** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %a.addr, metadata !20735, metadata !DIExpression()), !dbg !20736
  store %struct._ftsent** %b, %struct._ftsent*** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %b.addr, metadata !20737, metadata !DIExpression()), !dbg !20738
  %0 = load %struct._ftsent**, %struct._ftsent*** %a.addr, align 8, !dbg !20739
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %0, i64 0, !dbg !20739, !ctir !1775
  %1 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !20739
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 18, !dbg !20740, !ctir !1777
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20741, !ctir !1856
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 1, !dbg !20741, !ctir !1846
  %2 = load i64, i64* %st_ino, align 8, !dbg !20741, !ctir !257
  %3 = load %struct._ftsent**, %struct._ftsent*** %b.addr, align 8, !dbg !20742
  %arrayidx1 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %3, i64 0, !dbg !20742, !ctir !1775
  %4 = load %struct._ftsent*, %struct._ftsent** %arrayidx1, align 8, !dbg !20742
  %fts_statp2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 18, !dbg !20743, !ctir !1777
  %arraydecay3 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp2, i64 0, i64 0, !dbg !20744, !ctir !1856
  %st_ino4 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay3, i32 0, i32 1, !dbg !20744, !ctir !1846
  %5 = load i64, i64* %st_ino4, align 8, !dbg !20744, !ctir !257
  %cmp = icmp ult i64 %2, %5, !dbg !20745
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !20739

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !20739

cond.false:                                       ; preds = %entry
  %6 = load %struct._ftsent**, %struct._ftsent*** %b.addr, align 8, !dbg !20746
  %arrayidx5 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %6, i64 0, !dbg !20746, !ctir !1775
  %7 = load %struct._ftsent*, %struct._ftsent** %arrayidx5, align 8, !dbg !20746
  %fts_statp6 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 18, !dbg !20747, !ctir !1777
  %arraydecay7 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp6, i64 0, i64 0, !dbg !20748, !ctir !1856
  %st_ino8 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay7, i32 0, i32 1, !dbg !20748, !ctir !1846
  %8 = load i64, i64* %st_ino8, align 8, !dbg !20748, !ctir !257
  %9 = load %struct._ftsent**, %struct._ftsent*** %a.addr, align 8, !dbg !20749
  %arrayidx9 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %9, i64 0, !dbg !20749, !ctir !1775
  %10 = load %struct._ftsent*, %struct._ftsent** %arrayidx9, align 8, !dbg !20749
  %fts_statp10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 18, !dbg !20750, !ctir !1777
  %arraydecay11 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp10, i64 0, i64 0, !dbg !20751, !ctir !1856
  %st_ino12 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay11, i32 0, i32 1, !dbg !20751, !ctir !1846
  %11 = load i64, i64* %st_ino12, align 8, !dbg !20751, !ctir !257
  %cmp13 = icmp ult i64 %8, %11, !dbg !20752
  %12 = zext i1 %cmp13 to i64, !dbg !20746
  %cond = select i1 %cmp13, i32 1, i32 0, !dbg !20746
  br label %cond.end, !dbg !20739

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond14 = phi i32 [ -1, %cond.true ], [ %cond, %cond.false ], !dbg !20739
  ret i32 %cond14, !dbg !20753
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fts_set(%struct.FTS* %sp, %struct._ftsent* %p, i32 %instr) #4 !dbg !20754 {
entry:
  %retval = alloca i32, align 4
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %instr.addr = alloca i32, align 4
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20757, metadata !DIExpression()), !dbg !20758
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20759, metadata !DIExpression()), !dbg !20760
  store i32 %instr, i32* %instr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %instr.addr, metadata !20761, metadata !DIExpression()), !dbg !20762
  %0 = load i32, i32* %instr.addr, align 4, !dbg !20763
  %cmp = icmp ne i32 %0, 0, !dbg !20765
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !20766

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %instr.addr, align 4, !dbg !20767
  %cmp1 = icmp ne i32 %1, 1, !dbg !20768
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !20769

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i32, i32* %instr.addr, align 4, !dbg !20770
  %cmp3 = icmp ne i32 %2, 2, !dbg !20771
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !20772

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %3 = load i32, i32* %instr.addr, align 4, !dbg !20773
  %cmp5 = icmp ne i32 %3, 3, !dbg !20774
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !20775

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %4 = load i32, i32* %instr.addr, align 4, !dbg !20776
  %cmp7 = icmp ne i32 %4, 4, !dbg !20777
  br i1 %cmp7, label %if.then, label %if.end, !dbg !20778

if.then:                                          ; preds = %land.lhs.true6
  %call = call i32* @__errno_location() #15, !dbg !20779
  store i32 22, i32* %call, align 4, !dbg !20779, !ctir !5
  store i32 1, i32* %retval, align 4, !dbg !20781
  br label %return, !dbg !20781

if.end:                                           ; preds = %land.lhs.true6, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  %5 = load i32, i32* %instr.addr, align 4, !dbg !20782
  %conv = trunc i32 %5 to i16, !dbg !20782
  %6 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20783
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 17, !dbg !20784, !ctir !1741
  store i16 %conv, i16* %fts_instr, align 4, !dbg !20785, !ctir !34
  store i32 0, i32* %retval, align 4, !dbg !20786
  br label %return, !dbg !20786

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !20787
  ret i32 %7, !dbg !20787
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._ftsent* @rpl_fts_children(%struct.FTS* %sp, i32 %instr) #4 !dbg !20788 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %instr.addr = alloca i32, align 4
  %p = alloca %struct._ftsent*, align 8, !ctir !1835
  %fd = alloca i32, align 4, !ctir !5
  %saved_errno = alloca i32, align 4, !ctir !5
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20789, metadata !DIExpression()), !dbg !20790
  store i32 %instr, i32* %instr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %instr.addr, metadata !20791, metadata !DIExpression()), !dbg !20792
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !20793, metadata !DIExpression()), !dbg !20794
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !20795, metadata !DIExpression()), !dbg !20796
  %0 = load i32, i32* %instr.addr, align 4, !dbg !20797
  %cmp = icmp ne i32 %0, 0, !dbg !20799
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !20800

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %instr.addr, align 4, !dbg !20801
  %cmp1 = icmp ne i32 %1, 4096, !dbg !20802
  br i1 %cmp1, label %if.then, label %if.end, !dbg !20803

if.then:                                          ; preds = %land.lhs.true
  %call = call i32* @__errno_location() #15, !dbg !20804
  store i32 22, i32* %call, align 4, !dbg !20804, !ctir !5
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20806
  br label %return, !dbg !20806

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20807
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 0, !dbg !20808, !ctir !1758
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !20808, !ctir !1745
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !20809
  %call2 = call i32* @__errno_location() #15, !dbg !20810
  store i32 0, i32* %call2, align 4, !dbg !20810, !ctir !5
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20811
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !20811, !ctir !1758
  %5 = load i32, i32* %fts_options, align 8, !dbg !20811, !ctir !5
  %and = and i32 %5, 8192, !dbg !20811
  %tobool = icmp ne i32 %and, 0, !dbg !20811
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !20813

if.then3:                                         ; preds = %if.end
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20814
  br label %return, !dbg !20814

if.end4:                                          ; preds = %if.end
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20815
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 15, !dbg !20817, !ctir !1741
  %7 = load i16, i16* %fts_info, align 8, !dbg !20817, !ctir !34
  %conv = zext i16 %7 to i32, !dbg !20815
  %cmp5 = icmp eq i32 %conv, 9, !dbg !20818
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !20819

if.then7:                                         ; preds = %if.end4
  %8 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20820
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 2, !dbg !20821, !ctir !1741
  %9 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !20821, !ctir !1745
  store %struct._ftsent* %9, %struct._ftsent** %retval, align 8, !dbg !20822
  br label %return, !dbg !20822

if.end8:                                          ; preds = %if.end4
  %10 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20823
  %fts_info9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 15, !dbg !20825, !ctir !1741
  %11 = load i16, i16* %fts_info9, align 8, !dbg !20825, !ctir !34
  %conv10 = zext i16 %11 to i32, !dbg !20823
  %cmp11 = icmp ne i32 %conv10, 1, !dbg !20826
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !20827

if.then13:                                        ; preds = %if.end8
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20828
  br label %return, !dbg !20828

if.end14:                                         ; preds = %if.end8
  %12 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20829
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 1, !dbg !20831, !ctir !1758
  %13 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !20831, !ctir !1745
  %cmp15 = icmp ne %struct._ftsent* %13, null, !dbg !20832
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !20833

if.then17:                                        ; preds = %if.end14
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20834
  %fts_child18 = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 1, !dbg !20835, !ctir !1758
  %15 = load %struct._ftsent*, %struct._ftsent** %fts_child18, align 8, !dbg !20835, !ctir !1745
  call void @fts_lfree(%struct._ftsent* %15), !dbg !20836
  br label %if.end19, !dbg !20836

if.end19:                                         ; preds = %if.then17, %if.end14
  %16 = load i32, i32* %instr.addr, align 4, !dbg !20837
  %cmp20 = icmp eq i32 %16, 4096, !dbg !20839
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !20840

if.then22:                                        ; preds = %if.end19
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20841
  %fts_options23 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 10, !dbg !20841, !ctir !1758
  %18 = load i32, i32* %fts_options23, align 8, !dbg !20841, !ctir !5
  %or = or i32 %18, 4096, !dbg !20841
  store i32 %or, i32* %fts_options23, align 8, !dbg !20841, !ctir !5
  store i32 2, i32* %instr.addr, align 4, !dbg !20843
  br label %if.end24, !dbg !20844

if.else:                                          ; preds = %if.end19
  store i32 1, i32* %instr.addr, align 4, !dbg !20845
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then22
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20846
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !20848, !ctir !1741
  %20 = load i64, i64* %fts_level, align 8, !dbg !20848, !ctir !495
  %cmp25 = icmp ne i64 %20, 0, !dbg !20849
  br i1 %cmp25, label %if.then34, label %lor.lhs.false, !dbg !20850

lor.lhs.false:                                    ; preds = %if.end24
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20851
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !20852, !ctir !1741
  %22 = load i8*, i8** %fts_accpath, align 8, !dbg !20852, !ctir !7
  %arrayidx = getelementptr inbounds i8, i8* %22, i64 0, !dbg !20851, !ctir !7
  %23 = load i8, i8* %arrayidx, align 1, !dbg !20851
  %conv27 = sext i8 %23 to i32, !dbg !20851
  %cmp28 = icmp eq i32 %conv27, 47, !dbg !20853
  br i1 %cmp28, label %if.then34, label %lor.lhs.false30, !dbg !20854

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20855
  %fts_options31 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !20855, !ctir !1758
  %25 = load i32, i32* %fts_options31, align 8, !dbg !20855, !ctir !5
  %and32 = and i32 %25, 4, !dbg !20855
  %tobool33 = icmp ne i32 %and32, 0, !dbg !20855
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !20856

if.then34:                                        ; preds = %lor.lhs.false30, %lor.lhs.false, %if.end24
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20857
  %27 = load i32, i32* %instr.addr, align 4, !dbg !20858
  %call35 = call %struct._ftsent* @fts_build(%struct.FTS* %26, i32 %27), !dbg !20859
  %28 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20860
  %fts_child36 = getelementptr inbounds %struct.FTS, %struct.FTS* %28, i32 0, i32 1, !dbg !20861, !ctir !1758
  store %struct._ftsent* %call35, %struct._ftsent** %fts_child36, align 8, !dbg !20862, !ctir !1745
  store %struct._ftsent* %call35, %struct._ftsent** %retval, align 8, !dbg !20863
  br label %return, !dbg !20863

if.end37:                                         ; preds = %lor.lhs.false30
  %29 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20864
  %call38 = call i32 @diropen(%struct.FTS* %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.431, i64 0, i64 0)), !dbg !20866
  store i32 %call38, i32* %fd, align 4, !dbg !20867
  %cmp39 = icmp slt i32 %call38, 0, !dbg !20868
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !20869

if.then41:                                        ; preds = %if.end37
  %30 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20870
  %fts_child42 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 1, !dbg !20871, !ctir !1758
  store %struct._ftsent* null, %struct._ftsent** %fts_child42, align 8, !dbg !20872, !ctir !1745
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20873
  br label %return, !dbg !20873

if.end43:                                         ; preds = %if.end37
  %31 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20874
  %32 = load i32, i32* %instr.addr, align 4, !dbg !20875
  %call44 = call %struct._ftsent* @fts_build(%struct.FTS* %31, i32 %32), !dbg !20876
  %33 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20877
  %fts_child45 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 1, !dbg !20878, !ctir !1758
  store %struct._ftsent* %call44, %struct._ftsent** %fts_child45, align 8, !dbg !20879, !ctir !1745
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20880
  %fts_options46 = getelementptr inbounds %struct.FTS, %struct.FTS* %34, i32 0, i32 10, !dbg !20880, !ctir !1758
  %35 = load i32, i32* %fts_options46, align 8, !dbg !20880, !ctir !5
  %and47 = and i32 %35, 512, !dbg !20880
  %tobool48 = icmp ne i32 %and47, 0, !dbg !20880
  br i1 %tobool48, label %if.then49, label %if.else50, !dbg !20882

if.then49:                                        ; preds = %if.end43
  %36 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20883
  %37 = load i32, i32* %fd, align 4, !dbg !20885
  call void @cwd_advance_fd(%struct.FTS* %36, i32 %37, i1 zeroext true), !dbg !20886
  br label %if.end59, !dbg !20887

if.else50:                                        ; preds = %if.end43
  %38 = load i32, i32* %fd, align 4, !dbg !20888
  %call51 = call i32 @fchdir(i32 %38) #12, !dbg !20891
  %tobool52 = icmp ne i32 %call51, 0, !dbg !20891
  br i1 %tobool52, label %if.then53, label %if.end57, !dbg !20892

if.then53:                                        ; preds = %if.else50
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !20893, metadata !DIExpression()), !dbg !20895
  %call54 = call i32* @__errno_location() #15, !dbg !20896
  %39 = load i32, i32* %call54, align 4, !dbg !20896, !ctir !5
  store i32 %39, i32* %saved_errno, align 4, !dbg !20895
  %40 = load i32, i32* %fd, align 4, !dbg !20897
  %call55 = call i32 @close(i32 %40), !dbg !20898
  %41 = load i32, i32* %saved_errno, align 4, !dbg !20899
  %call56 = call i32* @__errno_location() #15, !dbg !20899
  store i32 %41, i32* %call56, align 4, !dbg !20899, !ctir !5
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20900
  br label %return, !dbg !20900

if.end57:                                         ; preds = %if.else50
  %42 = load i32, i32* %fd, align 4, !dbg !20901
  %call58 = call i32 @close(i32 %42), !dbg !20902
  br label %if.end59

if.end59:                                         ; preds = %if.end57, %if.then49
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20903
  %fts_child60 = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 1, !dbg !20904, !ctir !1758
  %44 = load %struct._ftsent*, %struct._ftsent** %fts_child60, align 8, !dbg !20904, !ctir !1745
  store %struct._ftsent* %44, %struct._ftsent** %retval, align 8, !dbg !20905
  br label %return, !dbg !20905

return:                                           ; preds = %if.end59, %if.then53, %if.then41, %if.then34, %if.then13, %if.then7, %if.then3, %if.then
  %45 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !20906
  ret %struct._ftsent* %45, !dbg !20906
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.__mbstate_t* %ps) #4 !dbg !20907 {
entry:
  %retval = alloca i64, align 8
  %pwc.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %ps.addr = alloca %struct.__mbstate_t*, align 8
  %ret = alloca i64, align 8, !ctir !52
  %wc = alloca i32, align 4, !ctir !822
  %uc = alloca i8, align 1, !ctir !451
  store i32* %pwc, i32** %pwc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !20923, metadata !DIExpression()), !dbg !20924
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !20925, metadata !DIExpression()), !dbg !20926
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !20927, metadata !DIExpression()), !dbg !20928
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %ps.addr, metadata !20929, metadata !DIExpression()), !dbg !20930
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !20931, metadata !DIExpression()), !dbg !20932
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !20933, metadata !DIExpression()), !dbg !20934
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !20935
  %tobool = icmp ne i32* %0, null, !dbg !20935
  br i1 %tobool, label %if.end, label %if.then, !dbg !20937

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !20938
  br label %if.end, !dbg !20939

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !20940
  %2 = load i8*, i8** %s.addr, align 8, !dbg !20941
  %3 = load i64, i64* %n.addr, align 8, !dbg !20942
  %4 = load %struct.__mbstate_t*, %struct.__mbstate_t** %ps.addr, align 8, !dbg !20943
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.__mbstate_t* %4) #12, !dbg !20944
  store i64 %call, i64* %ret, align 8, !dbg !20945
  %5 = load i64, i64* %ret, align 8, !dbg !20946
  %cmp = icmp ule i64 -2, %5, !dbg !20948
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !20949

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !20950
  %cmp1 = icmp ne i64 %6, 0, !dbg !20951
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !20952

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !20953
  br i1 %call3, label %if.end5, label %if.then4, !dbg !20954

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !20955, metadata !DIExpression()), !dbg !20957
  %7 = load i8*, i8** %s.addr, align 8, !dbg !20958
  %8 = load i8, i8* %7, align 1, !dbg !20959, !ctir !114
  store i8 %8, i8* %uc, align 1, !dbg !20957
  %9 = load i8, i8* %uc, align 1, !dbg !20960
  %conv = zext i8 %9 to i32, !dbg !20960
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !20961
  store i32 %conv, i32* %10, align 4, !dbg !20962, !ctir !822
  store i64 1, i64* %retval, align 8, !dbg !20963
  br label %return, !dbg !20963

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !20964
  store i64 %11, i64* %retval, align 8, !dbg !20965
  br label %return, !dbg !20965

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !20966
  ret i64 %12, !dbg !20966
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @free_permission_context(%struct.permission_context* %ctx) #4 !dbg !20967 {
entry:
  %ctx.addr = alloca %struct.permission_context*, align 8
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !20975, metadata !DIExpression()), !dbg !20976
  ret void, !dbg !20977
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_permissions(i8* %name, i32 %desc, i32 %mode, %struct.permission_context* %ctx) #4 !dbg !20978 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.permission_context*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20986, metadata !DIExpression()), !dbg !20987
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !20988, metadata !DIExpression()), !dbg !20989
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !20990, metadata !DIExpression()), !dbg !20991
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !20992, metadata !DIExpression()), !dbg !20993
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !20994
  %1 = bitcast %struct.permission_context* %0 to i8*, !dbg !20995
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 4, i1 false), !dbg !20995
  %2 = load i32, i32* %mode.addr, align 4, !dbg !20996
  %3 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !20997
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %3, i32 0, i32 0, !dbg !20998, !ctir !20983
  store i32 %2, i32* %mode1, align 4, !dbg !20999, !ctir !236
  ret i32 0, !dbg !21000
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @chmod_or_fchmod(i8* %name, i32 %desc, i32 %mode) #4 !dbg !21001 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21003, metadata !DIExpression()), !dbg !21004
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21005, metadata !DIExpression()), !dbg !21006
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !21007, metadata !DIExpression()), !dbg !21008
  %0 = load i32, i32* %desc.addr, align 4, !dbg !21009
  %cmp = icmp ne i32 %0, -1, !dbg !21011
  br i1 %cmp, label %if.then, label %if.else, !dbg !21012

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !21013
  %2 = load i32, i32* %mode.addr, align 4, !dbg !21014
  %call = call i32 @fchmod(i32 %1, i32 %2) #12, !dbg !21015
  store i32 %call, i32* %retval, align 4, !dbg !21016
  br label %return, !dbg !21016

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !21017
  %4 = load i32, i32* %mode.addr, align 4, !dbg !21018
  %call1 = call i32 @chmod(i8* %3, i32 %4) #12, !dbg !21019
  store i32 %call1, i32* %retval, align 4, !dbg !21020
  br label %return, !dbg !21020

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !21021
  ret i32 %5, !dbg !21021
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_permissions(%struct.permission_context* %ctx, i8* %name, i32 %desc) #4 !dbg !21022 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.permission_context*, align 8
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %acls_set = alloca i8, align 1, !ctir !139
  %early_chmod = alloca i8, align 1, !ctir !139
  %must_chmod = alloca i8, align 1, !ctir !139
  %ret = alloca i32, align 4, !ctir !5
  %saved_errno = alloca i32, align 4, !ctir !5
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21029, metadata !DIExpression()), !dbg !21030
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21031, metadata !DIExpression()), !dbg !21032
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21033, metadata !DIExpression()), !dbg !21034
  call void @llvm.dbg.declare(metadata i8* %acls_set, metadata !21035, metadata !DIExpression()), !dbg !21036
  store i8 0, i8* %acls_set, align 1, !dbg !21036
  call void @llvm.dbg.declare(metadata i8* %early_chmod, metadata !21037, metadata !DIExpression()), !dbg !21038
  call void @llvm.dbg.declare(metadata i8* %must_chmod, metadata !21039, metadata !DIExpression()), !dbg !21040
  store i8 0, i8* %must_chmod, align 1, !dbg !21040
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !21041, metadata !DIExpression()), !dbg !21042
  store i32 0, i32* %ret, align 4, !dbg !21042
  store i8 1, i8* %early_chmod, align 1, !dbg !21043
  %0 = load i8, i8* %early_chmod, align 1, !dbg !21044
  %tobool = trunc i8 %0 to i1, !dbg !21044
  br i1 %tobool, label %if.then, label %if.end2, !dbg !21046

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !21047
  %2 = load i32, i32* %desc.addr, align 4, !dbg !21049
  %3 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21050
  %mode = getelementptr inbounds %struct.permission_context, %struct.permission_context* %3, i32 0, i32 0, !dbg !21051, !ctir !21026
  %4 = load i32, i32* %mode, align 4, !dbg !21051, !ctir !236
  %call = call i32 @chmod_or_fchmod(i8* %1, i32 %2, i32 %4), !dbg !21052
  store i32 %call, i32* %ret, align 4, !dbg !21053
  %5 = load i32, i32* %ret, align 4, !dbg !21054
  %cmp = icmp ne i32 %5, 0, !dbg !21056
  br i1 %cmp, label %if.then1, label %if.end, !dbg !21057

if.then1:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21058
  br label %return, !dbg !21058

if.end:                                           ; preds = %if.then
  br label %if.end2, !dbg !21059

if.end2:                                          ; preds = %if.end, %entry
  %6 = load i8, i8* %must_chmod, align 1, !dbg !21060
  %tobool3 = trunc i8 %6 to i1, !dbg !21060
  br i1 %tobool3, label %land.lhs.true, label %if.end14, !dbg !21062

land.lhs.true:                                    ; preds = %if.end2
  %7 = load i8, i8* %early_chmod, align 1, !dbg !21063
  %tobool4 = trunc i8 %7 to i1, !dbg !21063
  br i1 %tobool4, label %if.end14, label %if.then5, !dbg !21064

if.then5:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21065, metadata !DIExpression()), !dbg !21067
  %8 = load i32, i32* %ret, align 4, !dbg !21068
  %tobool6 = icmp ne i32 %8, 0, !dbg !21068
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !21068

cond.true:                                        ; preds = %if.then5
  %call7 = call i32* @__errno_location() #15, !dbg !21069
  %9 = load i32, i32* %call7, align 4, !dbg !21069, !ctir !5
  br label %cond.end, !dbg !21068

cond.false:                                       ; preds = %if.then5
  br label %cond.end, !dbg !21068

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ 0, %cond.false ], !dbg !21068
  store i32 %cond, i32* %saved_errno, align 4, !dbg !21067
  %10 = load i8*, i8** %name.addr, align 8, !dbg !21070
  %11 = load i32, i32* %desc.addr, align 4, !dbg !21071
  %12 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21072
  %mode8 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %12, i32 0, i32 0, !dbg !21073, !ctir !21026
  %13 = load i32, i32* %mode8, align 4, !dbg !21073, !ctir !236
  %call9 = call i32 @chmod_or_fchmod(i8* %10, i32 %11, i32 %13), !dbg !21074
  store i32 %call9, i32* %ret, align 4, !dbg !21075
  %14 = load i32, i32* %saved_errno, align 4, !dbg !21076
  %tobool10 = icmp ne i32 %14, 0, !dbg !21076
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !21078

if.then11:                                        ; preds = %cond.end
  %15 = load i32, i32* %saved_errno, align 4, !dbg !21079
  %call12 = call i32* @__errno_location() #15, !dbg !21081
  store i32 %15, i32* %call12, align 4, !dbg !21082, !ctir !5
  store i32 -1, i32* %ret, align 4, !dbg !21083
  br label %if.end13, !dbg !21084

if.end13:                                         ; preds = %if.then11, %cond.end
  br label %if.end14, !dbg !21085

if.end14:                                         ; preds = %if.end13, %land.lhs.true, %if.end2
  %16 = load i32, i32* %ret, align 4, !dbg !21086
  store i32 %16, i32* %retval, align 4, !dbg !21087
  br label %return, !dbg !21087

return:                                           ; preds = %if.end14, %if.then1
  %17 = load i32, i32* %retval, align 4, !dbg !21088
  ret i32 %17, !dbg !21088
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #4 !dbg !21089 {
entry:
  call void @usage(i32 1), !dbg !21090
  ret void, !dbg !21091
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !21092 {
entry:
  %retval = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !52
  %arglen = alloca i64, align 8, !ctir !52
  %matchind = alloca i64, align 8, !ctir !495
  %ambiguous = alloca i8, align 1, !ctir !139
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !21095, metadata !DIExpression()), !dbg !21096
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !21097, metadata !DIExpression()), !dbg !21098
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !21099, metadata !DIExpression()), !dbg !21100
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !21101, metadata !DIExpression()), !dbg !21102
  call void @llvm.dbg.declare(metadata i64* %i, metadata !21103, metadata !DIExpression()), !dbg !21104
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !21105, metadata !DIExpression()), !dbg !21106
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !21107, metadata !DIExpression()), !dbg !21108
  store i64 -1, i64* %matchind, align 8, !dbg !21108
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !21109, metadata !DIExpression()), !dbg !21110
  store i8 0, i8* %ambiguous, align 1, !dbg !21110
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !21111
  %call = call i64 @strlen(i8* %0) #14, !dbg !21112
  store i64 %call, i64* %arglen, align 8, !dbg !21113
  store i64 0, i64* %i, align 8, !dbg !21114
  br label %for.cond, !dbg !21116

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !21117
  %2 = load i64, i64* %i, align 8, !dbg !21119
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !21117, !ctir !992
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !21117
  %tobool = icmp ne i8* %3, null, !dbg !21120
  br i1 %tobool, label %for.body, label %for.end, !dbg !21120

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !21121
  %5 = load i64, i64* %i, align 8, !dbg !21124
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !21121, !ctir !992
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !21121
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !21125
  %8 = load i64, i64* %arglen, align 8, !dbg !21126
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #14, !dbg !21127
  %tobool3 = icmp ne i32 %call2, 0, !dbg !21127
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !21128

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !21129
  %10 = load i64, i64* %i, align 8, !dbg !21132
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !21129, !ctir !992
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !21129
  %call5 = call i64 @strlen(i8* %11) #14, !dbg !21133
  %12 = load i64, i64* %arglen, align 8, !dbg !21134
  %cmp = icmp eq i64 %call5, %12, !dbg !21135
  br i1 %cmp, label %if.then6, label %if.else, !dbg !21136

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !21137
  store i64 %13, i64* %retval, align 8, !dbg !21138
  br label %return, !dbg !21138

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !21139
  %cmp7 = icmp eq i64 %14, -1, !dbg !21141
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !21142

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !21143
  store i64 %15, i64* %matchind, align 8, !dbg !21144
  br label %if.end16, !dbg !21145

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !21146
  %cmp10 = icmp eq i8* %16, null, !dbg !21149
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !21150

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !21151
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !21152
  %19 = load i64, i64* %matchind, align 8, !dbg !21153
  %mul = mul i64 %18, %19, !dbg !21154
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !21155, !ctir !114
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !21156
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !21157
  %22 = load i64, i64* %i, align 8, !dbg !21158
  %mul11 = mul i64 %21, %22, !dbg !21159
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !21160, !ctir !114
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !21161
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #14, !dbg !21162
  %tobool14 = icmp ne i32 %call13, 0, !dbg !21162
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !21163

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !21164
  br label %if.end, !dbg !21166

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !21167

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !21168

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !21169
  %inc = add i64 %24, 1, !dbg !21169
  store i64 %inc, i64* %i, align 8, !dbg !21169
  br label %for.cond, !dbg !21170, !llvm.loop !21171

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !21173
  %tobool19 = trunc i8 %25 to i1, !dbg !21173
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !21175

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !21176
  br label %return, !dbg !21176

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !21177
  store i64 %26, i64* %retval, align 8, !dbg !21178
  br label %return, !dbg !21178

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !21179
  ret i64 %27, !dbg !21179
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #4 !dbg !21180 {
entry:
  %context.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %problem.addr = alloca i64, align 8
  %format = alloca i8*, align 8, !ctir !113
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !21183, metadata !DIExpression()), !dbg !21184
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !21185, metadata !DIExpression()), !dbg !21186
  store i64 %problem, i64* %problem.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !21187, metadata !DIExpression()), !dbg !21188
  call void @llvm.dbg.declare(metadata i8** %format, metadata !21189, metadata !DIExpression()), !dbg !21190
  %0 = load i64, i64* %problem.addr, align 8, !dbg !21191
  %cmp = icmp eq i64 %0, -1, !dbg !21192
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21191

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.450, i64 0, i64 0)) #12, !dbg !21193
  br label %cond.end, !dbg !21191

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.451, i64 0, i64 0)) #12, !dbg !21194
  br label %cond.end, !dbg !21191

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !21191
  store i8* %cond, i8** %format, align 8, !dbg !21190
  %1 = load i8*, i8** %format, align 8, !dbg !21195
  %2 = load i8*, i8** %value.addr, align 8, !dbg !21196
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !21197
  %3 = load i8*, i8** %context.addr, align 8, !dbg !21198
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !21199
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !21200
  ret void, !dbg !21201
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #4 !dbg !21202 {
entry:
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !52
  %last_val = alloca i8*, align 8, !ctir !113
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !21205, metadata !DIExpression()), !dbg !21206
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !21207, metadata !DIExpression()), !dbg !21208
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !21209, metadata !DIExpression()), !dbg !21210
  call void @llvm.dbg.declare(metadata i64* %i, metadata !21211, metadata !DIExpression()), !dbg !21212
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !21213, metadata !DIExpression()), !dbg !21214
  store i8* null, i8** %last_val, align 8, !dbg !21214
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.452, i64 0, i64 0)) #12, !dbg !21215
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !21215
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !21215
  store i64 0, i64* %i, align 8, !dbg !21216
  br label %for.cond, !dbg !21218

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !21219
  %2 = load i64, i64* %i, align 8, !dbg !21221
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !21219, !ctir !992
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !21219
  %tobool = icmp ne i8* %3, null, !dbg !21222
  br i1 %tobool, label %for.body, label %for.end, !dbg !21222

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !21223
  %cmp = icmp eq i64 %4, 0, !dbg !21225
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !21226

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !21227
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !21228
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !21229
  %8 = load i64, i64* %i, align 8, !dbg !21230
  %mul = mul i64 %7, %8, !dbg !21231
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !21232, !ctir !114
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !21233
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #14, !dbg !21234
  %tobool3 = icmp ne i32 %call2, 0, !dbg !21234
  br i1 %tobool3, label %if.then, label %if.else, !dbg !21235

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !21236
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !21238
  %12 = load i64, i64* %i, align 8, !dbg !21239
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !21238, !ctir !992
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !21238
  %call5 = call i8* @quote(i8* %13), !dbg !21240
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.453, i64 0, i64 0), i8* %call5), !dbg !21241
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !21242
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !21243
  %16 = load i64, i64* %i, align 8, !dbg !21244
  %mul7 = mul i64 %15, %16, !dbg !21245
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !21246, !ctir !114
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !21247
  br label %if.end, !dbg !21248

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !21249
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !21251
  %19 = load i64, i64* %i, align 8, !dbg !21252
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !21251, !ctir !992
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !21251
  %call10 = call i8* @quote(i8* %20), !dbg !21253
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.454, i64 0, i64 0), i8* %call10), !dbg !21254
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !21255

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !21256
  %inc = add i64 %21, 1, !dbg !21256
  store i64 %inc, i64* %i, align 8, !dbg !21256
  br label %for.cond, !dbg !21257, !llvm.loop !21258

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !21260
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !21260
  ret void, !dbg !21261
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #4 !dbg !21262 {
entry:
  %retval = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %exit_fn.addr = alloca void ()*, align 8
  %res = alloca i64, align 8, !ctir !495
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !21265, metadata !DIExpression()), !dbg !21266
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !21267, metadata !DIExpression()), !dbg !21268
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !21269, metadata !DIExpression()), !dbg !21270
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !21271, metadata !DIExpression()), !dbg !21272
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !21273, metadata !DIExpression()), !dbg !21274
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !21275, metadata !DIExpression()), !dbg !21276
  call void @llvm.dbg.declare(metadata i64* %res, metadata !21277, metadata !DIExpression()), !dbg !21278
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !21279
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !21280
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !21281
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !21282
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #14, !dbg !21283
  store i64 %call, i64* %res, align 8, !dbg !21278
  %4 = load i64, i64* %res, align 8, !dbg !21284
  %cmp = icmp sge i64 %4, 0, !dbg !21286
  br i1 %cmp, label %if.then, label %if.end, !dbg !21287

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !21288
  store i64 %5, i64* %retval, align 8, !dbg !21289
  br label %return, !dbg !21289

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !21290
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !21291
  %8 = load i64, i64* %res, align 8, !dbg !21292
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !21293
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !21294
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !21295
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !21296
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !21297
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !21298
  call void %12(), !dbg !21299
  store i64 -1, i64* %retval, align 8, !dbg !21300
  br label %return, !dbg !21300

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !21301
  ret i64 %13, !dbg !21301
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !21302 {
entry:
  %retval = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !52
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !21305, metadata !DIExpression()), !dbg !21306
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !21307, metadata !DIExpression()), !dbg !21308
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !21309, metadata !DIExpression()), !dbg !21310
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !21311, metadata !DIExpression()), !dbg !21312
  call void @llvm.dbg.declare(metadata i64* %i, metadata !21313, metadata !DIExpression()), !dbg !21314
  store i64 0, i64* %i, align 8, !dbg !21315
  br label %for.cond, !dbg !21317

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !21318
  %1 = load i64, i64* %i, align 8, !dbg !21320
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !21318, !ctir !992
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !21318
  %tobool = icmp ne i8* %2, null, !dbg !21321
  br i1 %tobool, label %for.body, label %for.end, !dbg !21321

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !21322
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !21324
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !21325
  %6 = load i64, i64* %i, align 8, !dbg !21326
  %mul = mul i64 %5, %6, !dbg !21327
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !21328, !ctir !114
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !21329
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #14, !dbg !21330
  %tobool1 = icmp ne i32 %call, 0, !dbg !21330
  br i1 %tobool1, label %if.end, label %if.then, !dbg !21331

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !21332
  %9 = load i64, i64* %i, align 8, !dbg !21333
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !21332, !ctir !992
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !21332
  store i8* %10, i8** %retval, align 8, !dbg !21334
  br label %return, !dbg !21334

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !21335

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !21336
  %inc = add i64 %11, 1, !dbg !21336
  store i64 %inc, i64* %i, align 8, !dbg !21336
  br label %for.cond, !dbg !21337, !llvm.loop !21338

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !21340
  br label %return, !dbg !21340

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !21341
  ret i8* %12, !dbg !21341
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #4 !dbg !21342 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21346, metadata !DIExpression()), !dbg !21347
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21348, metadata !DIExpression()), !dbg !21349
  %0 = load i64, i64* %x.addr, align 8, !dbg !21350
  %1 = load i32, i32* %n.addr, align 4, !dbg !21351
  %sh_prom = zext i32 %1 to i64, !dbg !21352
  %shl = shl i64 %0, %sh_prom, !dbg !21352
  %2 = load i64, i64* %x.addr, align 8, !dbg !21353
  %3 = load i32, i32* %n.addr, align 4, !dbg !21354
  %sub = sub nsw i32 64, %3, !dbg !21355
  %sh_prom1 = zext i32 %sub to i64, !dbg !21356
  %shr = lshr i64 %2, %sh_prom1, !dbg !21356
  %or = or i64 %shl, %shr, !dbg !21357
  ret i64 %or, !dbg !21358
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #4 !dbg !21359 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21360, metadata !DIExpression()), !dbg !21361
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21362, metadata !DIExpression()), !dbg !21363
  %0 = load i64, i64* %x.addr, align 8, !dbg !21364
  %1 = load i32, i32* %n.addr, align 4, !dbg !21365
  %sh_prom = zext i32 %1 to i64, !dbg !21366
  %shr = lshr i64 %0, %sh_prom, !dbg !21366
  %2 = load i64, i64* %x.addr, align 8, !dbg !21367
  %3 = load i32, i32* %n.addr, align 4, !dbg !21368
  %sub = sub nsw i32 64, %3, !dbg !21369
  %sh_prom1 = zext i32 %sub to i64, !dbg !21370
  %shl = shl i64 %2, %sh_prom1, !dbg !21370
  %or = or i64 %shr, %shl, !dbg !21371
  ret i64 %or, !dbg !21372
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #4 !dbg !21373 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !21376, metadata !DIExpression()), !dbg !21377
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21378, metadata !DIExpression()), !dbg !21379
  %0 = load i32, i32* %x.addr, align 4, !dbg !21380
  %1 = load i32, i32* %n.addr, align 4, !dbg !21381
  %shl = shl i32 %0, %1, !dbg !21382
  %2 = load i32, i32* %x.addr, align 4, !dbg !21383
  %3 = load i32, i32* %n.addr, align 4, !dbg !21384
  %sub = sub nsw i32 32, %3, !dbg !21385
  %shr = lshr i32 %2, %sub, !dbg !21386
  %or = or i32 %shl, %shr, !dbg !21387
  ret i32 %or, !dbg !21388
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #4 !dbg !21389 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !21390, metadata !DIExpression()), !dbg !21391
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21392, metadata !DIExpression()), !dbg !21393
  %0 = load i32, i32* %x.addr, align 4, !dbg !21394
  %1 = load i32, i32* %n.addr, align 4, !dbg !21395
  %shr = lshr i32 %0, %1, !dbg !21396
  %2 = load i32, i32* %x.addr, align 4, !dbg !21397
  %3 = load i32, i32* %n.addr, align 4, !dbg !21398
  %sub = sub nsw i32 32, %3, !dbg !21399
  %shl = shl i32 %2, %sub, !dbg !21400
  %or = or i32 %shr, %shl, !dbg !21401
  ret i32 %or, !dbg !21402
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #4 !dbg !21403 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21406, metadata !DIExpression()), !dbg !21407
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21408, metadata !DIExpression()), !dbg !21409
  %0 = load i64, i64* %x.addr, align 8, !dbg !21410
  %1 = load i32, i32* %n.addr, align 4, !dbg !21411
  %sh_prom = zext i32 %1 to i64, !dbg !21412
  %shl = shl i64 %0, %sh_prom, !dbg !21412
  %2 = load i64, i64* %x.addr, align 8, !dbg !21413
  %3 = load i32, i32* %n.addr, align 4, !dbg !21414
  %conv = sext i32 %3 to i64, !dbg !21414
  %sub = sub i64 64, %conv, !dbg !21415
  %shr = lshr i64 %2, %sub, !dbg !21416
  %or = or i64 %shl, %shr, !dbg !21417
  ret i64 %or, !dbg !21418
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #4 !dbg !21419 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21420, metadata !DIExpression()), !dbg !21421
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21422, metadata !DIExpression()), !dbg !21423
  %0 = load i64, i64* %x.addr, align 8, !dbg !21424
  %1 = load i32, i32* %n.addr, align 4, !dbg !21425
  %sh_prom = zext i32 %1 to i64, !dbg !21426
  %shr = lshr i64 %0, %sh_prom, !dbg !21426
  %2 = load i64, i64* %x.addr, align 8, !dbg !21427
  %3 = load i32, i32* %n.addr, align 4, !dbg !21428
  %conv = sext i32 %3 to i64, !dbg !21428
  %sub = sub i64 64, %conv, !dbg !21429
  %shl = shl i64 %2, %sub, !dbg !21430
  %or = or i64 %shr, %shl, !dbg !21431
  ret i64 %or, !dbg !21432
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #4 !dbg !21433 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !21437, metadata !DIExpression()), !dbg !21438
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21439, metadata !DIExpression()), !dbg !21440
  %0 = load i16, i16* %x.addr, align 2, !dbg !21441
  %conv = zext i16 %0 to i32, !dbg !21442
  %1 = load i32, i32* %n.addr, align 4, !dbg !21443
  %shl = shl i32 %conv, %1, !dbg !21444
  %2 = load i16, i16* %x.addr, align 2, !dbg !21445
  %conv1 = zext i16 %2 to i32, !dbg !21446
  %3 = load i32, i32* %n.addr, align 4, !dbg !21447
  %sub = sub nsw i32 16, %3, !dbg !21448
  %shr = lshr i32 %conv1, %sub, !dbg !21449
  %or = or i32 %shl, %shr, !dbg !21450
  %and = and i32 %or, 65535, !dbg !21451
  %conv2 = trunc i32 %and to i16, !dbg !21452
  ret i16 %conv2, !dbg !21453
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #4 !dbg !21454 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !21455, metadata !DIExpression()), !dbg !21456
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21457, metadata !DIExpression()), !dbg !21458
  %0 = load i16, i16* %x.addr, align 2, !dbg !21459
  %conv = zext i16 %0 to i32, !dbg !21460
  %1 = load i32, i32* %n.addr, align 4, !dbg !21461
  %shr = lshr i32 %conv, %1, !dbg !21462
  %2 = load i16, i16* %x.addr, align 2, !dbg !21463
  %conv1 = zext i16 %2 to i32, !dbg !21464
  %3 = load i32, i32* %n.addr, align 4, !dbg !21465
  %sub = sub nsw i32 16, %3, !dbg !21466
  %shl = shl i32 %conv1, %sub, !dbg !21467
  %or = or i32 %shr, %shl, !dbg !21468
  %and = and i32 %or, 65535, !dbg !21469
  %conv2 = trunc i32 %and to i16, !dbg !21470
  ret i16 %conv2, !dbg !21471
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #4 !dbg !21472 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !21476, metadata !DIExpression()), !dbg !21477
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21478, metadata !DIExpression()), !dbg !21479
  %0 = load i8, i8* %x.addr, align 1, !dbg !21480
  %conv = zext i8 %0 to i32, !dbg !21481
  %1 = load i32, i32* %n.addr, align 4, !dbg !21482
  %shl = shl i32 %conv, %1, !dbg !21483
  %2 = load i8, i8* %x.addr, align 1, !dbg !21484
  %conv1 = zext i8 %2 to i32, !dbg !21485
  %3 = load i32, i32* %n.addr, align 4, !dbg !21486
  %sub = sub nsw i32 8, %3, !dbg !21487
  %shr = lshr i32 %conv1, %sub, !dbg !21488
  %or = or i32 %shl, %shr, !dbg !21489
  %and = and i32 %or, 255, !dbg !21490
  %conv2 = trunc i32 %and to i8, !dbg !21491
  ret i8 %conv2, !dbg !21492
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #4 !dbg !21493 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !21494, metadata !DIExpression()), !dbg !21495
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21496, metadata !DIExpression()), !dbg !21497
  %0 = load i8, i8* %x.addr, align 1, !dbg !21498
  %conv = zext i8 %0 to i32, !dbg !21499
  %1 = load i32, i32* %n.addr, align 4, !dbg !21500
  %shr = lshr i32 %conv, %1, !dbg !21501
  %2 = load i8, i8* %x.addr, align 1, !dbg !21502
  %conv1 = zext i8 %2 to i32, !dbg !21503
  %3 = load i32, i32* %n.addr, align 4, !dbg !21504
  %sub = sub nsw i32 8, %3, !dbg !21505
  %shl = shl i32 %conv1, %sub, !dbg !21506
  %or = or i32 %shr, %shl, !dbg !21507
  %and = and i32 %or, 255, !dbg !21508
  %conv2 = trunc i32 %and to i8, !dbg !21509
  ret i8 %conv2, !dbg !21510
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #9 !dbg !21511 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %p1 = alloca i8*, align 8, !ctir !449
  %p2 = alloca i8*, align 8, !ctir !449
  %c1 = alloca i8, align 1, !ctir !451
  %c2 = alloca i8, align 1, !ctir !451
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !21513, metadata !DIExpression()), !dbg !21514
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !21515, metadata !DIExpression()), !dbg !21516
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !21517, metadata !DIExpression()), !dbg !21518
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !21519
  store i8* %0, i8** %p1, align 8, !dbg !21518
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !21520, metadata !DIExpression()), !dbg !21521
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !21522
  store i8* %1, i8** %p2, align 8, !dbg !21521
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !21523, metadata !DIExpression()), !dbg !21524
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !21525, metadata !DIExpression()), !dbg !21526
  %2 = load i8*, i8** %p1, align 8, !dbg !21527
  %3 = load i8*, i8** %p2, align 8, !dbg !21529
  %cmp = icmp eq i8* %2, %3, !dbg !21530
  br i1 %cmp, label %if.then, label %if.end, !dbg !21531

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !21532
  br label %return, !dbg !21532

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !21533

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !21534
  %5 = load i8, i8* %4, align 1, !dbg !21536, !ctir !450
  %conv = zext i8 %5 to i32, !dbg !21536
  %call = call i32 @c_tolower(i32 %conv), !dbg !21537
  %conv1 = trunc i32 %call to i8, !dbg !21537
  store i8 %conv1, i8* %c1, align 1, !dbg !21538
  %6 = load i8*, i8** %p2, align 8, !dbg !21539
  %7 = load i8, i8* %6, align 1, !dbg !21540, !ctir !450
  %conv2 = zext i8 %7 to i32, !dbg !21540
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !21541
  %conv4 = trunc i32 %call3 to i8, !dbg !21541
  store i8 %conv4, i8* %c2, align 1, !dbg !21542
  %8 = load i8, i8* %c1, align 1, !dbg !21543
  %conv5 = zext i8 %8 to i32, !dbg !21543
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !21545
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !21546

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !21547

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !21548
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !21548, !ctir !450
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !21548
  %10 = load i8*, i8** %p2, align 8, !dbg !21549
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !21549, !ctir !450
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !21549
  br label %do.cond, !dbg !21550

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !21551
  %conv11 = zext i8 %11 to i32, !dbg !21551
  %12 = load i8, i8* %c2, align 1, !dbg !21552
  %conv12 = zext i8 %12 to i32, !dbg !21552
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !21553
  br i1 %cmp13, label %do.body, label %do.end, !dbg !21550, !llvm.loop !21554

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !21556
  %conv15 = zext i8 %13 to i32, !dbg !21556
  %14 = load i8, i8* %c2, align 1, !dbg !21558
  %conv16 = zext i8 %14 to i32, !dbg !21558
  %sub = sub nsw i32 %conv15, %conv16, !dbg !21559
  store i32 %sub, i32* %retval, align 4, !dbg !21560
  br label %return, !dbg !21560

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !21561
  ret i32 %15, !dbg !21561
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #4 !dbg !21562 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1, !ctir !1889
  %prev_fail = alloca i8, align 1, !ctir !1889
  %fclose_fail = alloca i8, align 1, !ctir !1889
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !21606, metadata !DIExpression()), !dbg !21607
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !21608, metadata !DIExpression()), !dbg !21609
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21610
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #12, !dbg !21611
  %cmp = icmp ne i64 %call, 0, !dbg !21612
  %frombool = zext i1 %cmp to i8, !dbg !21609
  store i8 %frombool, i8* %some_pending, align 1, !dbg !21609
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !21613, metadata !DIExpression()), !dbg !21614
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21615
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #12, !dbg !21615
  %cmp2 = icmp ne i32 %call1, 0, !dbg !21616
  %frombool3 = zext i1 %cmp2 to i8, !dbg !21614
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !21614
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !21617, metadata !DIExpression()), !dbg !21618
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21619
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !21620
  %cmp5 = icmp ne i32 %call4, 0, !dbg !21621
  %frombool6 = zext i1 %cmp5 to i8, !dbg !21618
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !21618
  %3 = load i8, i8* %prev_fail, align 1, !dbg !21622
  %tobool = trunc i8 %3 to i1, !dbg !21622
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !21624

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !21625
  %tobool7 = trunc i8 %4 to i1, !dbg !21625
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !21626

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !21627
  %tobool8 = trunc i8 %5 to i1, !dbg !21627
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !21628

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #15, !dbg !21629
  %6 = load i32, i32* %call10, align 4, !dbg !21629, !ctir !5
  %cmp11 = icmp ne i32 %6, 9, !dbg !21630
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !21631

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !21632
  %tobool12 = trunc i8 %7 to i1, !dbg !21632
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !21635

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #15, !dbg !21636
  store i32 0, i32* %call14, align 4, !dbg !21637, !ctir !5
  br label %if.end, !dbg !21636

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21638
  br label %return, !dbg !21638

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !21639
  br label %return, !dbg !21639

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !21640
  ret i32 %8, !dbg !21640
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cycle_check_init(%struct.cycle_check_state* %state) #4 !dbg !21641 {
entry:
  %state.addr = alloca %struct.cycle_check_state*, align 8
  store %struct.cycle_check_state* %state, %struct.cycle_check_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %state.addr, metadata !21655, metadata !DIExpression()), !dbg !21656
  %0 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21657
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %0, i32 0, i32 1, !dbg !21658, !ctir !21646
  store i64 0, i64* %chdir_counter, align 8, !dbg !21659, !ctir !476
  %1 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21660
  %magic = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %1, i32 0, i32 2, !dbg !21661, !ctir !21646
  store i32 9827862, i32* %magic, align 8, !dbg !21662, !ctir !5
  ret void, !dbg !21663
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @cycle_check(%struct.cycle_check_state* %state, %struct.stat* %sb) #4 !dbg !21664 {
entry:
  %retval = alloca i1, align 1
  %state.addr = alloca %struct.cycle_check_state*, align 8
  %sb.addr = alloca %struct.stat*, align 8
  store %struct.cycle_check_state* %state, %struct.cycle_check_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %state.addr, metadata !21690, metadata !DIExpression()), !dbg !21691
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !21692, metadata !DIExpression()), !dbg !21693
  %0 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21694
  %magic = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %0, i32 0, i32 2, !dbg !21694, !ctir !21646
  %1 = load i32, i32* %magic, align 8, !dbg !21694, !ctir !5
  %cmp = icmp eq i32 %1, 9827862, !dbg !21694
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21694

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !21694

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.467, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.468, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.cycle_check, i64 0, i64 0)) #13, !dbg !21694
  unreachable, !dbg !21694

2:                                                ; No predecessors!
  br label %cond.end, !dbg !21694

cond.end:                                         ; preds = %2, %cond.true
  %3 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21695
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %3, i32 0, i32 1, !dbg !21697, !ctir !21646
  %4 = load i64, i64* %chdir_counter, align 8, !dbg !21697, !ctir !476
  %tobool = icmp ne i64 %4, 0, !dbg !21695
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !21698

land.lhs.true:                                    ; preds = %cond.end
  %5 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !21699
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 1, !dbg !21699, !ctir !21668
  %6 = load i64, i64* %st_ino, align 8, !dbg !21699, !ctir !257
  %7 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21699
  %dev_ino = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %7, i32 0, i32 0, !dbg !21699, !ctir !21646
  %st_ino1 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino, i32 0, i32 0, !dbg !21699, !ctir !21649
  %8 = load i64, i64* %st_ino1, align 8, !dbg !21699, !ctir !256
  %cmp2 = icmp eq i64 %6, %8, !dbg !21699
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !21699

land.lhs.true3:                                   ; preds = %land.lhs.true
  %9 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !21699
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 0, !dbg !21699, !ctir !21668
  %10 = load i64, i64* %st_dev, align 8, !dbg !21699, !ctir !260
  %11 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21699
  %dev_ino4 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %11, i32 0, i32 0, !dbg !21699, !ctir !21646
  %st_dev5 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino4, i32 0, i32 1, !dbg !21699, !ctir !21649
  %12 = load i64, i64* %st_dev5, align 8, !dbg !21699, !ctir !259
  %cmp6 = icmp eq i64 %10, %12, !dbg !21699
  br i1 %cmp6, label %if.then, label %if.end, !dbg !21700

if.then:                                          ; preds = %land.lhs.true3
  store i1 true, i1* %retval, align 1, !dbg !21701
  br label %return, !dbg !21701

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %cond.end
  %13 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21702
  %chdir_counter7 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %13, i32 0, i32 1, !dbg !21704, !ctir !21646
  %14 = load i64, i64* %chdir_counter7, align 8, !dbg !21705, !ctir !476
  %inc = add i64 %14, 1, !dbg !21705
  store i64 %inc, i64* %chdir_counter7, align 8, !dbg !21705, !ctir !476
  %call = call zeroext i1 @is_zero_or_power_of_two(i64 %inc), !dbg !21706
  br i1 %call, label %if.then8, label %if.end19, !dbg !21707

if.then8:                                         ; preds = %if.end
  %15 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21708
  %chdir_counter9 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %15, i32 0, i32 1, !dbg !21711, !ctir !21646
  %16 = load i64, i64* %chdir_counter9, align 8, !dbg !21711, !ctir !476
  %cmp10 = icmp eq i64 %16, 0, !dbg !21712
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !21713

if.then11:                                        ; preds = %if.then8
  store i1 true, i1* %retval, align 1, !dbg !21714
  br label %return, !dbg !21714

if.end12:                                         ; preds = %if.then8
  %17 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !21715
  %st_dev13 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !21716, !ctir !21668
  %18 = load i64, i64* %st_dev13, align 8, !dbg !21716, !ctir !260
  %19 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21717
  %dev_ino14 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %19, i32 0, i32 0, !dbg !21718, !ctir !21646
  %st_dev15 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino14, i32 0, i32 1, !dbg !21719, !ctir !21649
  store i64 %18, i64* %st_dev15, align 8, !dbg !21720, !ctir !259
  %20 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !21721
  %st_ino16 = getelementptr inbounds %struct.stat, %struct.stat* %20, i32 0, i32 1, !dbg !21722, !ctir !21668
  %21 = load i64, i64* %st_ino16, align 8, !dbg !21722, !ctir !257
  %22 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21723
  %dev_ino17 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %22, i32 0, i32 0, !dbg !21724, !ctir !21646
  %st_ino18 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino17, i32 0, i32 0, !dbg !21725, !ctir !21649
  store i64 %21, i64* %st_ino18, align 8, !dbg !21726, !ctir !256
  br label %if.end19, !dbg !21727

if.end19:                                         ; preds = %if.end12, %if.end
  store i1 false, i1* %retval, align 1, !dbg !21728
  br label %return, !dbg !21728

return:                                           ; preds = %if.end19, %if.then11, %if.then
  %23 = load i1, i1* %retval, align 1, !dbg !21729
  ret i1 %23, !dbg !21729
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_zero_or_power_of_two(i64 %i) #4 !dbg !21730 {
entry:
  %i.addr = alloca i64, align 8
  store i64 %i, i64* %i.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !21733, metadata !DIExpression()), !dbg !21734
  %0 = load i64, i64* %i.addr, align 8, !dbg !21735
  %1 = load i64, i64* %i.addr, align 8, !dbg !21736
  %sub = sub i64 %1, 1, !dbg !21737
  %and = and i64 %0, %sub, !dbg !21738
  %cmp = icmp eq i64 %and, 0, !dbg !21739
  ret i1 %cmp, !dbg !21740
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendir_safer(i8* %name) #4 !dbg !21741 {
entry:
  %name.addr = alloca i8*, align 8
  %dp = alloca %struct.__dirstream*, align 8, !ctir !530
  %fd = alloca i32, align 4, !ctir !5
  %newdp = alloca %struct.__dirstream*, align 8, !ctir !530
  %e = alloca i32, align 4, !ctir !5
  %f = alloca i32, align 4, !ctir !5
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21745, metadata !DIExpression()), !dbg !21746
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !21747, metadata !DIExpression()), !dbg !21748
  %0 = load i8*, i8** %name.addr, align 8, !dbg !21749
  %call = call %struct.__dirstream* @opendir(i8* %0), !dbg !21750
  store %struct.__dirstream* %call, %struct.__dirstream** %dp, align 8, !dbg !21748
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !21751
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !21751
  br i1 %tobool, label %if.then, label %if.end17, !dbg !21753

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21754, metadata !DIExpression()), !dbg !21756
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !21757
  %call1 = call i32 @dirfd(%struct.__dirstream* %2) #12, !dbg !21758
  store i32 %call1, i32* %fd, align 4, !dbg !21756
  %3 = load i32, i32* %fd, align 4, !dbg !21759
  %cmp = icmp sle i32 0, %3, !dbg !21761
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !21762

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* %fd, align 4, !dbg !21763
  %cmp2 = icmp sle i32 %4, 2, !dbg !21764
  br i1 %cmp2, label %if.then3, label %if.end16, !dbg !21765

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %newdp, metadata !21766, metadata !DIExpression()), !dbg !21768
  call void @llvm.dbg.declare(metadata i32* %e, metadata !21769, metadata !DIExpression()), !dbg !21770
  call void @llvm.dbg.declare(metadata i32* %f, metadata !21771, metadata !DIExpression()), !dbg !21772
  %5 = load i32, i32* %fd, align 4, !dbg !21773
  %call4 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %5, i32 1030, i32 3), !dbg !21774
  store i32 %call4, i32* %f, align 4, !dbg !21772
  %6 = load i32, i32* %f, align 4, !dbg !21775
  %cmp5 = icmp slt i32 %6, 0, !dbg !21777
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !21778

if.then6:                                         ; preds = %if.then3
  %call7 = call i32* @__errno_location() #15, !dbg !21779
  %7 = load i32, i32* %call7, align 4, !dbg !21779, !ctir !5
  store i32 %7, i32* %e, align 4, !dbg !21781
  store %struct.__dirstream* null, %struct.__dirstream** %newdp, align 8, !dbg !21782
  br label %if.end13, !dbg !21783

if.else:                                          ; preds = %if.then3
  %8 = load i32, i32* %f, align 4, !dbg !21784
  %call8 = call %struct.__dirstream* @fdopendir(i32 %8), !dbg !21786
  store %struct.__dirstream* %call8, %struct.__dirstream** %newdp, align 8, !dbg !21787
  %call9 = call i32* @__errno_location() #15, !dbg !21788
  %9 = load i32, i32* %call9, align 4, !dbg !21788, !ctir !5
  store i32 %9, i32* %e, align 4, !dbg !21789
  %10 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !21790
  %tobool10 = icmp ne %struct.__dirstream* %10, null, !dbg !21790
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !21792

if.then11:                                        ; preds = %if.else
  %11 = load i32, i32* %f, align 4, !dbg !21793
  %call12 = call i32 @close(i32 %11), !dbg !21794
  br label %if.end, !dbg !21794

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then6
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !21795
  %call14 = call i32 @closedir(%struct.__dirstream* %12), !dbg !21796
  %13 = load i32, i32* %e, align 4, !dbg !21797
  %call15 = call i32* @__errno_location() #15, !dbg !21798
  store i32 %13, i32* %call15, align 4, !dbg !21799, !ctir !5
  %14 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !21800
  store %struct.__dirstream* %14, %struct.__dirstream** %dp, align 8, !dbg !21801
  br label %if.end16, !dbg !21802

if.end16:                                         ; preds = %if.end13, %land.lhs.true, %if.then
  br label %if.end17, !dbg !21803

if.end17:                                         ; preds = %if.end16, %entry
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !21804
  ret %struct.__dirstream* %15, !dbg !21805
}

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gettime(%struct.timespec* nonnull %ts) #4 !dbg !21806 {
entry:
  %ts.addr = alloca %struct.timespec*, align 8
  store %struct.timespec* %ts, %struct.timespec** %ts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts.addr, metadata !21815, metadata !DIExpression()), !dbg !21816
  %0 = load %struct.timespec*, %struct.timespec** %ts.addr, align 8, !dbg !21817
  %call = call i32 @clock_gettime(i32 0, %struct.timespec* %0) #12, !dbg !21818
  ret void, !dbg !21819
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @current_timespec() #4 !dbg !21820 {
entry:
  %retval = alloca %struct.timespec, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !21823, metadata !DIExpression()), !dbg !21824
  call void @gettime(%struct.timespec* %retval), !dbg !21825
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !21826
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !21826
  ret { i64, i64 } %1, !dbg !21826
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #4 !dbg !21827 {
entry:
  %category.addr = alloca i32, align 4
  %hard = alloca i8, align 1, !ctir !139
  %p = alloca i8*, align 8, !ctir !113
  store i32 %category, i32* %category.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !21829, metadata !DIExpression()), !dbg !21830
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !21831, metadata !DIExpression()), !dbg !21832
  store i8 1, i8* %hard, align 1, !dbg !21832
  call void @llvm.dbg.declare(metadata i8** %p, metadata !21833, metadata !DIExpression()), !dbg !21834
  %0 = load i32, i32* %category.addr, align 4, !dbg !21835
  %call = call i8* @setlocale(i32 %0, i8* null) #12, !dbg !21836
  store i8* %call, i8** %p, align 8, !dbg !21834
  %1 = load i8*, i8** %p, align 8, !dbg !21837
  %tobool = icmp ne i8* %1, null, !dbg !21837
  br i1 %tobool, label %if.then, label %if.end5, !dbg !21839

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !21840
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.475, i64 0, i64 0)) #14, !dbg !21845
  %cmp = icmp eq i32 %call1, 0, !dbg !21846
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !21847

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !21848
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.476, i64 0, i64 0)) #14, !dbg !21849
  %cmp3 = icmp eq i32 %call2, 0, !dbg !21850
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !21851

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !21852
  br label %if.end, !dbg !21853

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !21854

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !21855
  %tobool6 = trunc i8 %4 to i1, !dbg !21855
  ret i1 %tobool6, !dbg !21856
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_pjw(i8* %x, i64 %tablesize) #9 !dbg !21857 {
entry:
  %x.addr = alloca i8*, align 8
  %tablesize.addr = alloca i64, align 8
  %s = alloca i8*, align 8, !ctir !113
  %h = alloca i64, align 8, !ctir !52
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !21859, metadata !DIExpression()), !dbg !21860
  store i64 %tablesize, i64* %tablesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tablesize.addr, metadata !21861, metadata !DIExpression()), !dbg !21862
  call void @llvm.dbg.declare(metadata i8** %s, metadata !21863, metadata !DIExpression()), !dbg !21864
  call void @llvm.dbg.declare(metadata i64* %h, metadata !21865, metadata !DIExpression()), !dbg !21866
  store i64 0, i64* %h, align 8, !dbg !21866
  %0 = load i8*, i8** %x.addr, align 8, !dbg !21867
  store i8* %0, i8** %s, align 8, !dbg !21869
  br label %for.cond, !dbg !21870

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !21871
  %2 = load i8, i8* %1, align 1, !dbg !21873, !ctir !114
  %tobool = icmp ne i8 %2, 0, !dbg !21874
  br i1 %tobool, label %for.body, label %for.end, !dbg !21874

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8, !dbg !21875
  %4 = load i8, i8* %3, align 1, !dbg !21876, !ctir !114
  %conv = sext i8 %4 to i64, !dbg !21876
  %5 = load i64, i64* %h, align 8, !dbg !21877
  %shl = shl i64 %5, 9, !dbg !21878
  %6 = load i64, i64* %h, align 8, !dbg !21879
  %shr = lshr i64 %6, 55, !dbg !21880
  %or = or i64 %shl, %shr, !dbg !21881
  %add = add i64 %conv, %or, !dbg !21882
  store i64 %add, i64* %h, align 8, !dbg !21883
  br label %for.inc, !dbg !21884

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %s, align 8, !dbg !21885
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !21885, !ctir !114
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !21885
  br label %for.cond, !dbg !21886, !llvm.loop !21887

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %h, align 8, !dbg !21889
  %9 = load i64, i64* %tablesize.addr, align 8, !dbg !21890
  %rem = urem i64 %8, %9, !dbg !21891
  ret i64 %rem, !dbg !21892
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @i_ring_init(%struct.I_ring* %ir, i32 %default_val) #4 !dbg !21893 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  %default_val.addr = alloca i32, align 4
  %i = alloca i32, align 4, !ctir !5
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !21898, metadata !DIExpression()), !dbg !21899
  store i32 %default_val, i32* %default_val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %default_val.addr, metadata !21900, metadata !DIExpression()), !dbg !21901
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21902, metadata !DIExpression()), !dbg !21903
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21904
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 4, !dbg !21905, !ctir !1910
  store i8 1, i8* %ir_empty, align 4, !dbg !21906, !ctir !139
  %1 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21907
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %1, i32 0, i32 2, !dbg !21908, !ctir !1910
  store i32 0, i32* %ir_front, align 4, !dbg !21909, !ctir !67
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21910
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 3, !dbg !21911, !ctir !1910
  store i32 0, i32* %ir_back, align 4, !dbg !21912, !ctir !67
  store i32 0, i32* %i, align 4, !dbg !21913
  br label %for.cond, !dbg !21915

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !21916
  %cmp = icmp slt i32 %3, 4, !dbg !21918
  br i1 %cmp, label %for.body, label %for.end, !dbg !21919

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %default_val.addr, align 4, !dbg !21920
  %5 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21921
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %5, i32 0, i32 0, !dbg !21922, !ctir !1910
  %6 = load i32, i32* %i, align 4, !dbg !21923
  %idxprom = sext i32 %6 to i64, !dbg !21921
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !21921, !ctir !1155
  store i32 %4, i32* %arrayidx, align 4, !dbg !21924
  br label %for.inc, !dbg !21921

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !21925
  %inc = add nsw i32 %7, 1, !dbg !21925
  store i32 %inc, i32* %i, align 4, !dbg !21925
  br label %for.cond, !dbg !21926, !llvm.loop !21927

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* %default_val.addr, align 4, !dbg !21929
  %9 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21930
  %ir_default_val = getelementptr inbounds %struct.I_ring, %struct.I_ring* %9, i32 0, i32 1, !dbg !21931, !ctir !1910
  store i32 %8, i32* %ir_default_val, align 4, !dbg !21932, !ctir !5
  ret void, !dbg !21933
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @i_ring_empty(%struct.I_ring* %ir) #9 !dbg !21934 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !21938, metadata !DIExpression()), !dbg !21939
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21940
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 4, !dbg !21941, !ctir !1918
  %1 = load i8, i8* %ir_empty, align 4, !dbg !21941
  %tobool = trunc i8 %1 to i1, !dbg !21941, !ctir !139
  ret i1 %tobool, !dbg !21942
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @i_ring_push(%struct.I_ring* %ir, i32 %val) #4 !dbg !21943 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  %val.addr = alloca i32, align 4
  %dest_idx = alloca i32, align 4, !ctir !67
  %old_val = alloca i32, align 4, !ctir !5
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !21946, metadata !DIExpression()), !dbg !21947
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !21948, metadata !DIExpression()), !dbg !21949
  call void @llvm.dbg.declare(metadata i32* %dest_idx, metadata !21950, metadata !DIExpression()), !dbg !21951
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21952
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 2, !dbg !21953, !ctir !1910
  %1 = load i32, i32* %ir_front, align 4, !dbg !21953, !ctir !67
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21954
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 4, !dbg !21955, !ctir !1910
  %3 = load i8, i8* %ir_empty, align 4, !dbg !21955
  %tobool = trunc i8 %3 to i1, !dbg !21955, !ctir !139
  %lnot = xor i1 %tobool, true, !dbg !21956
  %lnot.ext = zext i1 %lnot to i32, !dbg !21956
  %add = add i32 %1, %lnot.ext, !dbg !21957
  %rem = urem i32 %add, 4, !dbg !21958
  store i32 %rem, i32* %dest_idx, align 4, !dbg !21951
  call void @llvm.dbg.declare(metadata i32* %old_val, metadata !21959, metadata !DIExpression()), !dbg !21960
  %4 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21961
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %4, i32 0, i32 0, !dbg !21962, !ctir !1910
  %5 = load i32, i32* %dest_idx, align 4, !dbg !21963
  %idxprom = zext i32 %5 to i64, !dbg !21961
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !21961, !ctir !1155
  %6 = load i32, i32* %arrayidx, align 4, !dbg !21961
  store i32 %6, i32* %old_val, align 4, !dbg !21960
  %7 = load i32, i32* %val.addr, align 4, !dbg !21964
  %8 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21965
  %ir_data1 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 0, !dbg !21966, !ctir !1910
  %9 = load i32, i32* %dest_idx, align 4, !dbg !21967
  %idxprom2 = zext i32 %9 to i64, !dbg !21965
  %arrayidx3 = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data1, i64 0, i64 %idxprom2, !dbg !21965, !ctir !1155
  store i32 %7, i32* %arrayidx3, align 4, !dbg !21968
  %10 = load i32, i32* %dest_idx, align 4, !dbg !21969
  %11 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21970
  %ir_front4 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %11, i32 0, i32 2, !dbg !21971, !ctir !1910
  store i32 %10, i32* %ir_front4, align 4, !dbg !21972, !ctir !67
  %12 = load i32, i32* %dest_idx, align 4, !dbg !21973
  %13 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21975
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %13, i32 0, i32 3, !dbg !21976, !ctir !1910
  %14 = load i32, i32* %ir_back, align 4, !dbg !21976, !ctir !67
  %cmp = icmp eq i32 %12, %14, !dbg !21977
  br i1 %cmp, label %if.then, label %if.end, !dbg !21978

if.then:                                          ; preds = %entry
  %15 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21979
  %ir_back5 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %15, i32 0, i32 3, !dbg !21980, !ctir !1910
  %16 = load i32, i32* %ir_back5, align 4, !dbg !21980, !ctir !67
  %17 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21981
  %ir_empty6 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %17, i32 0, i32 4, !dbg !21982, !ctir !1910
  %18 = load i8, i8* %ir_empty6, align 4, !dbg !21982
  %tobool7 = trunc i8 %18 to i1, !dbg !21982, !ctir !139
  %lnot8 = xor i1 %tobool7, true, !dbg !21983
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !21983
  %add10 = add i32 %16, %lnot.ext9, !dbg !21984
  %rem11 = urem i32 %add10, 4, !dbg !21985
  %19 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21986
  %ir_back12 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %19, i32 0, i32 3, !dbg !21987, !ctir !1910
  store i32 %rem11, i32* %ir_back12, align 4, !dbg !21988, !ctir !67
  br label %if.end, !dbg !21986

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !21989
  %ir_empty13 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %20, i32 0, i32 4, !dbg !21990, !ctir !1910
  store i8 0, i8* %ir_empty13, align 4, !dbg !21991, !ctir !139
  %21 = load i32, i32* %old_val, align 4, !dbg !21992
  ret i32 %21, !dbg !21993
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @i_ring_pop(%struct.I_ring* %ir) #4 !dbg !21994 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  %top_val = alloca i32, align 4, !ctir !5
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !21997, metadata !DIExpression()), !dbg !21998
  call void @llvm.dbg.declare(metadata i32* %top_val, metadata !21999, metadata !DIExpression()), !dbg !22000
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22001
  %call = call zeroext i1 @i_ring_empty(%struct.I_ring* %0) #14, !dbg !22003
  br i1 %call, label %if.then, label %if.end, !dbg !22004

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !22005
  unreachable, !dbg !22005

if.end:                                           ; preds = %entry
  %1 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22006
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %1, i32 0, i32 0, !dbg !22007, !ctir !1910
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22008
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 2, !dbg !22009, !ctir !1910
  %3 = load i32, i32* %ir_front, align 4, !dbg !22009, !ctir !67
  %idxprom = zext i32 %3 to i64, !dbg !22006
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !22006, !ctir !1155
  %4 = load i32, i32* %arrayidx, align 4, !dbg !22006
  store i32 %4, i32* %top_val, align 4, !dbg !22010
  %5 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22011
  %ir_default_val = getelementptr inbounds %struct.I_ring, %struct.I_ring* %5, i32 0, i32 1, !dbg !22012, !ctir !1910
  %6 = load i32, i32* %ir_default_val, align 4, !dbg !22012, !ctir !5
  %7 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22013
  %ir_data1 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %7, i32 0, i32 0, !dbg !22014, !ctir !1910
  %8 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22015
  %ir_front2 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 2, !dbg !22016, !ctir !1910
  %9 = load i32, i32* %ir_front2, align 4, !dbg !22016, !ctir !67
  %idxprom3 = zext i32 %9 to i64, !dbg !22013
  %arrayidx4 = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data1, i64 0, i64 %idxprom3, !dbg !22013, !ctir !1155
  store i32 %6, i32* %arrayidx4, align 4, !dbg !22017
  %10 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22018
  %ir_front5 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %10, i32 0, i32 2, !dbg !22020, !ctir !1910
  %11 = load i32, i32* %ir_front5, align 4, !dbg !22020, !ctir !67
  %12 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22021
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %12, i32 0, i32 3, !dbg !22022, !ctir !1910
  %13 = load i32, i32* %ir_back, align 4, !dbg !22022, !ctir !67
  %cmp = icmp eq i32 %11, %13, !dbg !22023
  br i1 %cmp, label %if.then6, label %if.else, !dbg !22024

if.then6:                                         ; preds = %if.end
  %14 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22025
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %14, i32 0, i32 4, !dbg !22026, !ctir !1910
  store i8 1, i8* %ir_empty, align 4, !dbg !22027, !ctir !139
  br label %if.end9, !dbg !22025

if.else:                                          ; preds = %if.end
  %15 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22028
  %ir_front7 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %15, i32 0, i32 2, !dbg !22029, !ctir !1910
  %16 = load i32, i32* %ir_front7, align 4, !dbg !22029, !ctir !67
  %add = add i32 %16, 4, !dbg !22030
  %sub = sub i32 %add, 1, !dbg !22031
  %rem = urem i32 %sub, 4, !dbg !22032
  %17 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22033
  %ir_front8 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %17, i32 0, i32 2, !dbg !22034, !ctir !1910
  store i32 %rem, i32* %ir_front8, align 4, !dbg !22035, !ctir !67
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  %18 = load i32, i32* %top_val, align 4, !dbg !22036
  ret i32 %18, !dbg !22037
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #4 !dbg !22038 {
entry:
  %codeset = alloca i8*, align 8, !ctir !113
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !22041, metadata !DIExpression()), !dbg !22042
  %call = call i8* @rpl_nl_langinfo(i32 14), !dbg !22043
  store i8* %call, i8** %codeset, align 8, !dbg !22044
  %0 = load i8*, i8** %codeset, align 8, !dbg !22045
  %cmp = icmp eq i8* %0, null, !dbg !22047
  br i1 %cmp, label %if.then, label %if.end, !dbg !22048

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.489, i64 0, i64 0), i8** %codeset, align 8, !dbg !22049
  br label %if.end, !dbg !22050

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !22051
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !22051, !ctir !113
  %2 = load i8, i8* %arrayidx, align 1, !dbg !22051
  %conv = sext i8 %2 to i32, !dbg !22051
  %cmp1 = icmp eq i32 %conv, 0, !dbg !22055
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !22056

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.490, i64 0, i64 0), i8** %codeset, align 8, !dbg !22057
  br label %if.end4, !dbg !22058

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !22059
  ret i8* %3, !dbg !22060
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @openat_safer(i32 %fd, i8* %file, i32 %flags, ...) #4 !dbg !22061 {
entry:
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !236
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1925
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !22065, metadata !DIExpression()), !dbg !22066
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !22067, metadata !DIExpression()), !dbg !22068
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !22069, metadata !DIExpression()), !dbg !22070
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !22071, metadata !DIExpression()), !dbg !22072
  store i32 0, i32* %mode, align 4, !dbg !22072
  %0 = load i32, i32* %flags.addr, align 4, !dbg !22073
  %and = and i32 %0, 64, !dbg !22075
  %tobool = icmp ne i32 %and, 0, !dbg !22075
  br i1 %tobool, label %if.then, label %if.end, !dbg !22076

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !22077, metadata !DIExpression()), !dbg !22079
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22080, !ctir !1925
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !22080
  call void @llvm.va_start(i8* %arraydecay1), !dbg !22080
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22081, !ctir !1925
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !22081
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !22081
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !22081
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !22081

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !22081
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !22081
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !22081
  %3 = bitcast i8* %2 to i32*, !dbg !22081
  %4 = add i32 %gp_offset, 8, !dbg !22081
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !22081
  br label %vaarg.end, !dbg !22081

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !22081
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !22081
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !22081
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !22081
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !22081
  br label %vaarg.end, !dbg !22081

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !22081
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !22081
  store i32 %6, i32* %mode, align 4, !dbg !22082
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22083, !ctir !1925
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !22083
  call void @llvm.va_end(i8* %arraydecay34), !dbg !22083
  br label %if.end, !dbg !22084

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !22085
  %8 = load i8*, i8** %file.addr, align 8, !dbg !22086
  %9 = load i32, i32* %flags.addr, align 4, !dbg !22087
  %10 = load i32, i32* %mode, align 4, !dbg !22088
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %7, i8* %8, i32 %9, i32 %10), !dbg !22089
  %call5 = call i32 @fd_safer(i32 %call), !dbg !22090
  ret i32 %call5, !dbg !22091
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_new(%struct.randread_source* %source) #4 !dbg !22092 {
entry:
  %source.addr = alloca %struct.randread_source*, align 8
  %s = alloca %struct.randint_source*, align 8, !ctir !1937
  store %struct.randread_source* %source, %struct.randread_source** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source.addr, metadata !22095, metadata !DIExpression()), !dbg !22096
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s, metadata !22097, metadata !DIExpression()), !dbg !22098
  %call = call noalias i8* @xmalloc(i64 24), !dbg !22099
  %0 = bitcast i8* %call to %struct.randint_source*, !dbg !22099
  store %struct.randint_source* %0, %struct.randint_source** %s, align 8, !dbg !22098
  %1 = load %struct.randread_source*, %struct.randread_source** %source.addr, align 8, !dbg !22100
  %2 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22101
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 0, !dbg !22102, !ctir !1938
  store %struct.randread_source* %1, %struct.randread_source** %source1, align 8, !dbg !22103, !ctir !1942
  %3 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22104
  %randmax = getelementptr inbounds %struct.randint_source, %struct.randint_source* %3, i32 0, i32 2, !dbg !22105, !ctir !1938
  store i64 0, i64* %randmax, align 8, !dbg !22106, !ctir !1946
  %4 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22107
  %randnum = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 1, !dbg !22108, !ctir !1938
  store i64 0, i64* %randnum, align 8, !dbg !22109, !ctir !1946
  %5 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22110
  ret %struct.randint_source* %5, !dbg !22111
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_all_new(i8* %name, i64 %bytes_bound) #4 !dbg !22112 {
entry:
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !1942
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !22115, metadata !DIExpression()), !dbg !22116
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !22117, metadata !DIExpression()), !dbg !22118
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !22119, metadata !DIExpression()), !dbg !22120
  %0 = load i8*, i8** %name.addr, align 8, !dbg !22121
  %1 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22122
  %call = call %struct.randread_source* @randread_new(i8* %0, i64 %1), !dbg !22123
  store %struct.randread_source* %call, %struct.randread_source** %source, align 8, !dbg !22120
  %2 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22124
  %tobool = icmp ne %struct.randread_source* %2, null, !dbg !22124
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !22124

cond.true:                                        ; preds = %entry
  %3 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22125
  %call1 = call %struct.randint_source* @randint_new(%struct.randread_source* %3), !dbg !22126
  br label %cond.end, !dbg !22124

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !22124

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.randint_source* [ %call1, %cond.true ], [ null, %cond.false ], !dbg !22124
  ret %struct.randint_source* %cond, !dbg !22127
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local %struct.randread_source* @randint_get_source(%struct.randint_source* %s) #9 !dbg !22128 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22133, metadata !DIExpression()), !dbg !22134
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22135
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !22136, !ctir !22132
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22136, !ctir !1942
  ret %struct.randread_source* %1, !dbg !22137
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @randint_genmax(%struct.randint_source* %s, i64 %genmax) #4 !dbg !22138 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca %struct.randint_source*, align 8
  %genmax.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !1942
  %randnum = alloca i64, align 8, !ctir !1946
  %randmax = alloca i64, align 8, !ctir !1946
  %choices = alloca i64, align 8, !ctir !1946
  %i = alloca i64, align 8, !ctir !52
  %rmax = alloca i64, align 8, !ctir !1946
  %buf = alloca [8 x i8], align 1, !ctir !1948
  %excess_choices = alloca i64, align 8, !ctir !1946
  %unusable_choices = alloca i64, align 8, !ctir !1946
  %last_usable_choice = alloca i64, align 8, !ctir !1946
  %reduced_randnum = alloca i64, align 8, !ctir !1946
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22141, metadata !DIExpression()), !dbg !22142
  store i64 %genmax, i64* %genmax.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %genmax.addr, metadata !22143, metadata !DIExpression()), !dbg !22144
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !22145, metadata !DIExpression()), !dbg !22146
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22147
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !22148, !ctir !1938
  %1 = load %struct.randread_source*, %struct.randread_source** %source1, align 8, !dbg !22148, !ctir !1942
  store %struct.randread_source* %1, %struct.randread_source** %source, align 8, !dbg !22146
  call void @llvm.dbg.declare(metadata i64* %randnum, metadata !22149, metadata !DIExpression()), !dbg !22150
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22151
  %randnum2 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 1, !dbg !22152, !ctir !1938
  %3 = load i64, i64* %randnum2, align 8, !dbg !22152, !ctir !1946
  store i64 %3, i64* %randnum, align 8, !dbg !22150
  call void @llvm.dbg.declare(metadata i64* %randmax, metadata !22153, metadata !DIExpression()), !dbg !22154
  %4 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22155
  %randmax3 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 2, !dbg !22156, !ctir !1938
  %5 = load i64, i64* %randmax3, align 8, !dbg !22156, !ctir !1946
  store i64 %5, i64* %randmax, align 8, !dbg !22154
  call void @llvm.dbg.declare(metadata i64* %choices, metadata !22157, metadata !DIExpression()), !dbg !22158
  %6 = load i64, i64* %genmax.addr, align 8, !dbg !22159
  %add = add i64 %6, 1, !dbg !22160
  store i64 %add, i64* %choices, align 8, !dbg !22158
  br label %while.body, !dbg !22161

while.body:                                       ; preds = %entry, %if.end31
  %7 = load i64, i64* %randmax, align 8, !dbg !22162
  %8 = load i64, i64* %genmax.addr, align 8, !dbg !22165
  %cmp = icmp ult i64 %7, %8, !dbg !22166
  br i1 %cmp, label %if.then, label %if.end, !dbg !22167

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %i, metadata !22168, metadata !DIExpression()), !dbg !22170
  store i64 0, i64* %i, align 8, !dbg !22170
  call void @llvm.dbg.declare(metadata i64* %rmax, metadata !22171, metadata !DIExpression()), !dbg !22172
  %9 = load i64, i64* %randmax, align 8, !dbg !22173
  store i64 %9, i64* %rmax, align 8, !dbg !22172
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !22174, metadata !DIExpression()), !dbg !22175
  br label %do.body, !dbg !22176

do.body:                                          ; preds = %do.cond, %if.then
  %10 = load i64, i64* %rmax, align 8, !dbg !22177
  %call = call i64 @shift_left(i64 %10), !dbg !22179
  %add4 = add i64 %call, 255, !dbg !22180
  store i64 %add4, i64* %rmax, align 8, !dbg !22181
  %11 = load i64, i64* %i, align 8, !dbg !22182
  %inc = add i64 %11, 1, !dbg !22182
  store i64 %inc, i64* %i, align 8, !dbg !22182
  br label %do.cond, !dbg !22183

do.cond:                                          ; preds = %do.body
  %12 = load i64, i64* %rmax, align 8, !dbg !22184
  %13 = load i64, i64* %genmax.addr, align 8, !dbg !22185
  %cmp5 = icmp ult i64 %12, %13, !dbg !22186
  br i1 %cmp5, label %do.body, label %do.end, !dbg !22183, !llvm.loop !22187

do.end:                                           ; preds = %do.cond
  %14 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22189
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !22190, !ctir !1948
  %15 = load i64, i64* %i, align 8, !dbg !22191
  call void @randread(%struct.randread_source* %14, i8* %arraydecay, i64 %15), !dbg !22192
  store i64 0, i64* %i, align 8, !dbg !22193
  br label %do.body6, !dbg !22194

do.body6:                                         ; preds = %do.cond12, %do.end
  %16 = load i64, i64* %randnum, align 8, !dbg !22195
  %call7 = call i64 @shift_left(i64 %16), !dbg !22197
  %17 = load i64, i64* %i, align 8, !dbg !22198
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 %17, !dbg !22199, !ctir !1948
  %18 = load i8, i8* %arrayidx, align 1, !dbg !22199
  %conv = zext i8 %18 to i64, !dbg !22199
  %add8 = add i64 %call7, %conv, !dbg !22200
  store i64 %add8, i64* %randnum, align 8, !dbg !22201
  %19 = load i64, i64* %randmax, align 8, !dbg !22202
  %call9 = call i64 @shift_left(i64 %19), !dbg !22203
  %add10 = add i64 %call9, 255, !dbg !22204
  store i64 %add10, i64* %randmax, align 8, !dbg !22205
  %20 = load i64, i64* %i, align 8, !dbg !22206
  %inc11 = add i64 %20, 1, !dbg !22206
  store i64 %inc11, i64* %i, align 8, !dbg !22206
  br label %do.cond12, !dbg !22207

do.cond12:                                        ; preds = %do.body6
  %21 = load i64, i64* %randmax, align 8, !dbg !22208
  %22 = load i64, i64* %genmax.addr, align 8, !dbg !22209
  %cmp13 = icmp ult i64 %21, %22, !dbg !22210
  br i1 %cmp13, label %do.body6, label %do.end15, !dbg !22207, !llvm.loop !22211

do.end15:                                         ; preds = %do.cond12
  br label %if.end, !dbg !22213

if.end:                                           ; preds = %do.end15, %while.body
  %23 = load i64, i64* %randmax, align 8, !dbg !22214
  %24 = load i64, i64* %genmax.addr, align 8, !dbg !22216
  %cmp16 = icmp eq i64 %23, %24, !dbg !22217
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !22218

if.then18:                                        ; preds = %if.end
  %25 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22219
  %randmax19 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %25, i32 0, i32 2, !dbg !22221, !ctir !1938
  store i64 0, i64* %randmax19, align 8, !dbg !22222, !ctir !1946
  %26 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22223
  %randnum20 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %26, i32 0, i32 1, !dbg !22224, !ctir !1938
  store i64 0, i64* %randnum20, align 8, !dbg !22225, !ctir !1946
  %27 = load i64, i64* %randnum, align 8, !dbg !22226
  store i64 %27, i64* %retval, align 8, !dbg !22227
  br label %return, !dbg !22227

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %excess_choices, metadata !22228, metadata !DIExpression()), !dbg !22230
  %28 = load i64, i64* %randmax, align 8, !dbg !22231
  %29 = load i64, i64* %genmax.addr, align 8, !dbg !22232
  %sub = sub i64 %28, %29, !dbg !22233
  store i64 %sub, i64* %excess_choices, align 8, !dbg !22230
  call void @llvm.dbg.declare(metadata i64* %unusable_choices, metadata !22234, metadata !DIExpression()), !dbg !22235
  %30 = load i64, i64* %excess_choices, align 8, !dbg !22236
  %31 = load i64, i64* %choices, align 8, !dbg !22237
  %rem = urem i64 %30, %31, !dbg !22238
  store i64 %rem, i64* %unusable_choices, align 8, !dbg !22235
  call void @llvm.dbg.declare(metadata i64* %last_usable_choice, metadata !22239, metadata !DIExpression()), !dbg !22240
  %32 = load i64, i64* %randmax, align 8, !dbg !22241
  %33 = load i64, i64* %unusable_choices, align 8, !dbg !22242
  %sub21 = sub i64 %32, %33, !dbg !22243
  store i64 %sub21, i64* %last_usable_choice, align 8, !dbg !22240
  call void @llvm.dbg.declare(metadata i64* %reduced_randnum, metadata !22244, metadata !DIExpression()), !dbg !22245
  %34 = load i64, i64* %randnum, align 8, !dbg !22246
  %35 = load i64, i64* %choices, align 8, !dbg !22247
  %rem22 = urem i64 %34, %35, !dbg !22248
  store i64 %rem22, i64* %reduced_randnum, align 8, !dbg !22245
  %36 = load i64, i64* %randnum, align 8, !dbg !22249
  %37 = load i64, i64* %last_usable_choice, align 8, !dbg !22251
  %cmp23 = icmp ule i64 %36, %37, !dbg !22252
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !22253

if.then25:                                        ; preds = %if.else
  %38 = load i64, i64* %randnum, align 8, !dbg !22254
  %39 = load i64, i64* %choices, align 8, !dbg !22256
  %div = udiv i64 %38, %39, !dbg !22257
  %40 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22258
  %randnum26 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %40, i32 0, i32 1, !dbg !22259, !ctir !1938
  store i64 %div, i64* %randnum26, align 8, !dbg !22260, !ctir !1946
  %41 = load i64, i64* %excess_choices, align 8, !dbg !22261
  %42 = load i64, i64* %choices, align 8, !dbg !22262
  %div27 = udiv i64 %41, %42, !dbg !22263
  %43 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22264
  %randmax28 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %43, i32 0, i32 2, !dbg !22265, !ctir !1938
  store i64 %div27, i64* %randmax28, align 8, !dbg !22266, !ctir !1946
  %44 = load i64, i64* %reduced_randnum, align 8, !dbg !22267
  store i64 %44, i64* %retval, align 8, !dbg !22268
  br label %return, !dbg !22268

if.end29:                                         ; preds = %if.else
  %45 = load i64, i64* %reduced_randnum, align 8, !dbg !22269
  store i64 %45, i64* %randnum, align 8, !dbg !22270
  %46 = load i64, i64* %unusable_choices, align 8, !dbg !22271
  %sub30 = sub i64 %46, 1, !dbg !22272
  store i64 %sub30, i64* %randmax, align 8, !dbg !22273
  br label %if.end31

if.end31:                                         ; preds = %if.end29
  br label %while.body, !dbg !22161, !llvm.loop !22274

return:                                           ; preds = %if.then25, %if.then18
  %47 = load i64, i64* %retval, align 8, !dbg !22276
  ret i64 %47, !dbg !22276
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @shift_left(i64 %x) #4 !dbg !22277 {
entry:
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !22280, metadata !DIExpression()), !dbg !22281
  %0 = load i64, i64* %x.addr, align 8, !dbg !22282
  %shl = shl i64 %0, 8, !dbg !22283
  ret i64 %shl, !dbg !22284
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randint_free(%struct.randint_source* %s) #4 !dbg !22285 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22288, metadata !DIExpression()), !dbg !22289
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22290
  %1 = bitcast %struct.randint_source* %0 to i8*, !dbg !22290
  call void @explicit_bzero(i8* %1, i64 24), !dbg !22291
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22292
  %3 = bitcast %struct.randint_source* %2 to i8*, !dbg !22292
  call void @free(i8* %3) #12, !dbg !22293
  ret void, !dbg !22294
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randint_all_free(%struct.randint_source* %s) #4 !dbg !22295 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  %r = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22298, metadata !DIExpression()), !dbg !22299
  call void @llvm.dbg.declare(metadata i32* %r, metadata !22300, metadata !DIExpression()), !dbg !22301
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22302
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !22303, !ctir !1938
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22303, !ctir !1942
  %call = call i32 @randread_free(%struct.randread_source* %1), !dbg !22304
  store i32 %call, i32* %r, align 4, !dbg !22301
  call void @llvm.dbg.declare(metadata i32* %e, metadata !22305, metadata !DIExpression()), !dbg !22306
  %call1 = call i32* @__errno_location() #15, !dbg !22307
  %2 = load i32, i32* %call1, align 4, !dbg !22307, !ctir !5
  store i32 %2, i32* %e, align 4, !dbg !22306
  %3 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22308
  call void @randint_free(%struct.randint_source* %3), !dbg !22309
  %4 = load i32, i32* %e, align 4, !dbg !22310
  %call2 = call i32* @__errno_location() #15, !dbg !22311
  store i32 %4, i32* %call2, align 4, !dbg !22312, !ctir !5
  %5 = load i32, i32* %r, align 4, !dbg !22313
  ret i32 %5, !dbg !22314
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randread_source* @randread_new(i8* %name, i64 %bytes_bound) #4 !dbg !22315 {
entry:
  %retval = alloca %struct.randread_source*, align 8
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !1952
  %s = alloca %struct.randread_source*, align 8, !ctir !1992
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !22318, metadata !DIExpression()), !dbg !22319
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !22320, metadata !DIExpression()), !dbg !22321
  %0 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22322
  %cmp = icmp eq i64 %0, 0, !dbg !22324
  br i1 %cmp, label %if.then, label %if.else, !dbg !22325

if.then:                                          ; preds = %entry
  %call = call %struct.randread_source* @simple_new(%struct._IO_FILE* null, i8* null), !dbg !22326
  store %struct.randread_source* %call, %struct.randread_source** %retval, align 8, !dbg !22327
  br label %return, !dbg !22327

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !22328, metadata !DIExpression()), !dbg !22330
  store %struct._IO_FILE* null, %struct._IO_FILE** %source, align 8, !dbg !22330
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !22331, metadata !DIExpression()), !dbg !22332
  %1 = load i8*, i8** %name.addr, align 8, !dbg !22333
  %tobool = icmp ne i8* %1, null, !dbg !22333
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !22335

if.then1:                                         ; preds = %if.else
  %2 = load i8*, i8** %name.addr, align 8, !dbg !22336
  %call2 = call %struct._IO_FILE* @fopen_safer(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.501, i64 0, i64 0)), !dbg !22338
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %source, align 8, !dbg !22339
  %tobool3 = icmp ne %struct._IO_FILE* %call2, null, !dbg !22339
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !22340

if.then4:                                         ; preds = %if.then1
  store %struct.randread_source* null, %struct.randread_source** %retval, align 8, !dbg !22341
  br label %return, !dbg !22341

if.end:                                           ; preds = %if.then1
  br label %if.end5, !dbg !22342

if.end5:                                          ; preds = %if.end, %if.else
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22343
  %4 = load i8*, i8** %name.addr, align 8, !dbg !22344
  %call6 = call %struct.randread_source* @simple_new(%struct._IO_FILE* %3, i8* %4), !dbg !22345
  store %struct.randread_source* %call6, %struct.randread_source** %s, align 8, !dbg !22346
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22347
  %tobool7 = icmp ne %struct._IO_FILE* %5, null, !dbg !22347
  br i1 %tobool7, label %if.then8, label %if.else11, !dbg !22349

if.then8:                                         ; preds = %if.end5
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22350
  %7 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22351
  %buf = getelementptr inbounds %struct.randread_source, %struct.randread_source* %7, i32 0, i32 3, !dbg !22352, !ctir !1993
  %c = bitcast %union.anon.110* %buf to [4096 x i8]*, !dbg !22353
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %c, i64 0, i64 0, !dbg !22351, !ctir !2006
  %8 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22354
  %cmp9 = icmp ult i64 4096, %8, !dbg !22354
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !22354

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !22354

cond.false:                                       ; preds = %if.then8
  %9 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22354
  br label %cond.end, !dbg !22354

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 4096, %cond.true ], [ %9, %cond.false ], !dbg !22354
  %call10 = call i32 @setvbuf(%struct._IO_FILE* %6, i8* %arraydecay, i32 0, i64 %cond) #12, !dbg !22355
  br label %if.end19, !dbg !22355

if.else11:                                        ; preds = %if.end5
  %10 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22356
  %buf12 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 3, !dbg !22358, !ctir !1993
  %isaac = bitcast %union.anon.110* %buf12 to %struct.isaac*, !dbg !22359
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac, i32 0, i32 0, !dbg !22360, !ctir !2010
  store i64 0, i64* %buffered, align 8, !dbg !22361, !ctir !52
  %11 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22362
  %buf13 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %11, i32 0, i32 3, !dbg !22363, !ctir !1993
  %isaac14 = bitcast %union.anon.110* %buf13 to %struct.isaac*, !dbg !22364
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac14, i32 0, i32 1, !dbg !22365, !ctir !2010
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %state, i32 0, i32 0, !dbg !22366, !ctir !2014
  %arraydecay15 = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 0, !dbg !22362, !ctir !2018
  %12 = bitcast i64* %arraydecay15 to i8*, !dbg !22362
  %13 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22367
  call void @get_nonce(i8* %12, i64 2048, i64 %13), !dbg !22368
  %14 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22369
  %buf16 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %14, i32 0, i32 3, !dbg !22370, !ctir !1993
  %isaac17 = bitcast %union.anon.110* %buf16 to %struct.isaac*, !dbg !22371
  %state18 = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac17, i32 0, i32 1, !dbg !22372, !ctir !2010
  call void @isaac_seed(%struct.isaac_state* %state18), !dbg !22373
  br label %if.end19

if.end19:                                         ; preds = %if.else11, %cond.end
  %15 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22374
  store %struct.randread_source* %15, %struct.randread_source** %retval, align 8, !dbg !22375
  br label %return, !dbg !22375

return:                                           ; preds = %if.end19, %if.then4, %if.then
  %16 = load %struct.randread_source*, %struct.randread_source** %retval, align 8, !dbg !22376
  ret %struct.randread_source* %16, !dbg !22376
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randread_source* @simple_new(%struct._IO_FILE* %source, i8* %handler_arg) #4 !dbg !22377 {
entry:
  %source.addr = alloca %struct._IO_FILE*, align 8
  %handler_arg.addr = alloca i8*, align 8
  %s = alloca %struct.randread_source*, align 8, !ctir !1992
  store %struct._IO_FILE* %source, %struct._IO_FILE** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source.addr, metadata !22380, metadata !DIExpression()), !dbg !22381
  store i8* %handler_arg, i8** %handler_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !22382, metadata !DIExpression()), !dbg !22383
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !22384, metadata !DIExpression()), !dbg !22385
  %call = call noalias i8* @xmalloc(i64 4152), !dbg !22386
  %0 = bitcast i8* %call to %struct.randread_source*, !dbg !22386
  store %struct.randread_source* %0, %struct.randread_source** %s, align 8, !dbg !22385
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source.addr, align 8, !dbg !22387
  %2 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22388
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !22389, !ctir !1993
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source1, align 8, !dbg !22390, !ctir !1952
  %3 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22391
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %3, i32 0, i32 1, !dbg !22392, !ctir !1993
  store void (i8*)* @randread_error, void (i8*)** %handler, align 8, !dbg !22393, !ctir !1998
  %4 = load i8*, i8** %handler_arg.addr, align 8, !dbg !22394
  %5 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22395
  %handler_arg2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 2, !dbg !22396, !ctir !1993
  store i8* %4, i8** %handler_arg2, align 8, !dbg !22397, !ctir !553
  %6 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22398
  ret %struct.randread_source* %6, !dbg !22399
}

; Function Attrs: nounwind
declare dso_local i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_nonce(i8* %buffer, i64 %bufsize, i64 %bytes_bound) #4 !dbg !22400 {
entry:
  %buffer.addr = alloca i8*, align 8
  %bufsize.addr = alloca i64, align 8
  %bytes_bound.addr = alloca i64, align 8
  %buf = alloca i8*, align 8, !ctir !7
  %seeded = alloca i64, align 8, !ctir !529
  %fd = alloca i32, align 4, !ctir !5
  %v = alloca %struct.timespec, align 8, !ctir !22403
  %nbytes = alloca i64, align 8, !ctir !52
  %v19 = alloca i32, align 4, !ctir !2032
  %nbytes20 = alloca i64, align 8, !ctir !52
  %v34 = alloca i32, align 4, !ctir !2032
  %nbytes35 = alloca i64, align 8, !ctir !52
  %v49 = alloca i32, align 4, !ctir !452
  %nbytes50 = alloca i64, align 8, !ctir !52
  %v64 = alloca i32, align 4, !ctir !452
  %nbytes65 = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !22407, metadata !DIExpression()), !dbg !22408
  store i64 %bufsize, i64* %bufsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !22409, metadata !DIExpression()), !dbg !22410
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !22411, metadata !DIExpression()), !dbg !22412
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !22413, metadata !DIExpression()), !dbg !22414
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !22415
  store i8* %0, i8** %buf, align 8, !dbg !22414
  call void @llvm.dbg.declare(metadata i64* %seeded, metadata !22416, metadata !DIExpression()), !dbg !22417
  store i64 0, i64* %seeded, align 8, !dbg !22417
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !22418, metadata !DIExpression()), !dbg !22419
  %call = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.502, i64 0, i64 0), i32 0), !dbg !22420
  store i32 %call, i32* %fd, align 4, !dbg !22419
  %1 = load i32, i32* %fd, align 4, !dbg !22421
  %cmp = icmp sle i32 0, %1, !dbg !22423
  br i1 %cmp, label %if.then, label %if.end6, !dbg !22424

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %fd, align 4, !dbg !22425
  %3 = load i8*, i8** %buf, align 8, !dbg !22427
  %4 = load i64, i64* %bufsize.addr, align 8, !dbg !22428
  %5 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22428
  %cmp1 = icmp ult i64 %4, %5, !dbg !22428
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !22428

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %bufsize.addr, align 8, !dbg !22428
  br label %cond.end, !dbg !22428

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22428
  br label %cond.end, !dbg !22428

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !22428
  %call2 = call i64 @read(i32 %2, i8* %3, i64 %cond), !dbg !22429
  store i64 %call2, i64* %seeded, align 8, !dbg !22430
  %8 = load i64, i64* %seeded, align 8, !dbg !22431
  %cmp3 = icmp slt i64 %8, 0, !dbg !22433
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !22434

if.then4:                                         ; preds = %cond.end
  store i64 0, i64* %seeded, align 8, !dbg !22435
  br label %if.end, !dbg !22436

if.end:                                           ; preds = %if.then4, %cond.end
  %9 = load i32, i32* %fd, align 4, !dbg !22437
  %call5 = call i32 @close(i32 %9), !dbg !22438
  br label %if.end6, !dbg !22439

if.end6:                                          ; preds = %if.end, %entry
  %10 = load i64, i64* %seeded, align 8, !dbg !22440
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !22440
  %cmp7 = icmp ult i64 %10, %11, !dbg !22440
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !22442

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.timespec* %v, metadata !22443, metadata !DIExpression()), !dbg !22445
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !22446, metadata !DIExpression()), !dbg !22445
  %12 = load i64, i64* %bufsize.addr, align 8, !dbg !22445
  %13 = load i64, i64* %seeded, align 8, !dbg !22445
  %sub = sub i64 %12, %13, !dbg !22445
  %cmp9 = icmp ult i64 16, %sub, !dbg !22445
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !22445

cond.true10:                                      ; preds = %if.then8
  br label %cond.end13, !dbg !22445

cond.false11:                                     ; preds = %if.then8
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !22445
  %15 = load i64, i64* %seeded, align 8, !dbg !22445
  %sub12 = sub i64 %14, %15, !dbg !22445
  br label %cond.end13, !dbg !22445

cond.end13:                                       ; preds = %cond.false11, %cond.true10
  %cond14 = phi i64 [ 16, %cond.true10 ], [ %sub12, %cond.false11 ], !dbg !22445
  store i64 %cond14, i64* %nbytes, align 8, !dbg !22445
  %call15 = call i32 @gettimeofday(%struct.timespec* %v, %struct.timezone* null) #12, !dbg !22445
  %16 = load i8*, i8** %buf, align 8, !dbg !22445
  %17 = load i64, i64* %seeded, align 8, !dbg !22445
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !22445, !ctir !8
  %18 = bitcast %struct.timespec* %v to i8*, !dbg !22445
  %19 = load i64, i64* %nbytes, align 8, !dbg !22445
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 8 %18, i64 %19, i1 false), !dbg !22445
  %20 = load i64, i64* %nbytes, align 8, !dbg !22445
  %21 = load i64, i64* %seeded, align 8, !dbg !22445
  %add = add i64 %21, %20, !dbg !22445
  store i64 %add, i64* %seeded, align 8, !dbg !22445
  br label %if.end16, !dbg !22445

if.end16:                                         ; preds = %cond.end13, %if.end6
  %22 = load i64, i64* %seeded, align 8, !dbg !22447
  %23 = load i64, i64* %bufsize.addr, align 8, !dbg !22447
  %cmp17 = icmp ult i64 %22, %23, !dbg !22447
  br i1 %cmp17, label %if.then18, label %if.end31, !dbg !22449

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %v19, metadata !22450, metadata !DIExpression()), !dbg !22452
  call void @llvm.dbg.declare(metadata i64* %nbytes20, metadata !22453, metadata !DIExpression()), !dbg !22452
  %24 = load i64, i64* %bufsize.addr, align 8, !dbg !22452
  %25 = load i64, i64* %seeded, align 8, !dbg !22452
  %sub21 = sub i64 %24, %25, !dbg !22452
  %cmp22 = icmp ult i64 4, %sub21, !dbg !22452
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !22452

cond.true23:                                      ; preds = %if.then18
  br label %cond.end26, !dbg !22452

cond.false24:                                     ; preds = %if.then18
  %26 = load i64, i64* %bufsize.addr, align 8, !dbg !22452
  %27 = load i64, i64* %seeded, align 8, !dbg !22452
  %sub25 = sub i64 %26, %27, !dbg !22452
  br label %cond.end26, !dbg !22452

cond.end26:                                       ; preds = %cond.false24, %cond.true23
  %cond27 = phi i64 [ 4, %cond.true23 ], [ %sub25, %cond.false24 ], !dbg !22452
  store i64 %cond27, i64* %nbytes20, align 8, !dbg !22452
  %call28 = call i32 @getpid() #12, !dbg !22452
  store i32 %call28, i32* %v19, align 4, !dbg !22452
  %28 = load i8*, i8** %buf, align 8, !dbg !22452
  %29 = load i64, i64* %seeded, align 8, !dbg !22452
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !22452, !ctir !8
  %30 = bitcast i32* %v19 to i8*, !dbg !22452
  %31 = load i64, i64* %nbytes20, align 8, !dbg !22452
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr29, i8* align 4 %30, i64 %31, i1 false), !dbg !22452
  %32 = load i64, i64* %nbytes20, align 8, !dbg !22452
  %33 = load i64, i64* %seeded, align 8, !dbg !22452
  %add30 = add i64 %33, %32, !dbg !22452
  store i64 %add30, i64* %seeded, align 8, !dbg !22452
  br label %if.end31, !dbg !22452

if.end31:                                         ; preds = %cond.end26, %if.end16
  %34 = load i64, i64* %seeded, align 8, !dbg !22454
  %35 = load i64, i64* %bufsize.addr, align 8, !dbg !22454
  %cmp32 = icmp ult i64 %34, %35, !dbg !22454
  br i1 %cmp32, label %if.then33, label %if.end46, !dbg !22456

if.then33:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %v34, metadata !22457, metadata !DIExpression()), !dbg !22459
  call void @llvm.dbg.declare(metadata i64* %nbytes35, metadata !22460, metadata !DIExpression()), !dbg !22459
  %36 = load i64, i64* %bufsize.addr, align 8, !dbg !22459
  %37 = load i64, i64* %seeded, align 8, !dbg !22459
  %sub36 = sub i64 %36, %37, !dbg !22459
  %cmp37 = icmp ult i64 4, %sub36, !dbg !22459
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !22459

cond.true38:                                      ; preds = %if.then33
  br label %cond.end41, !dbg !22459

cond.false39:                                     ; preds = %if.then33
  %38 = load i64, i64* %bufsize.addr, align 8, !dbg !22459
  %39 = load i64, i64* %seeded, align 8, !dbg !22459
  %sub40 = sub i64 %38, %39, !dbg !22459
  br label %cond.end41, !dbg !22459

cond.end41:                                       ; preds = %cond.false39, %cond.true38
  %cond42 = phi i64 [ 4, %cond.true38 ], [ %sub40, %cond.false39 ], !dbg !22459
  store i64 %cond42, i64* %nbytes35, align 8, !dbg !22459
  %call43 = call i32 @getppid() #12, !dbg !22459
  store i32 %call43, i32* %v34, align 4, !dbg !22459
  %40 = load i8*, i8** %buf, align 8, !dbg !22459
  %41 = load i64, i64* %seeded, align 8, !dbg !22459
  %add.ptr44 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !22459, !ctir !8
  %42 = bitcast i32* %v34 to i8*, !dbg !22459
  %43 = load i64, i64* %nbytes35, align 8, !dbg !22459
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr44, i8* align 4 %42, i64 %43, i1 false), !dbg !22459
  %44 = load i64, i64* %nbytes35, align 8, !dbg !22459
  %45 = load i64, i64* %seeded, align 8, !dbg !22459
  %add45 = add i64 %45, %44, !dbg !22459
  store i64 %add45, i64* %seeded, align 8, !dbg !22459
  br label %if.end46, !dbg !22459

if.end46:                                         ; preds = %cond.end41, %if.end31
  %46 = load i64, i64* %seeded, align 8, !dbg !22461
  %47 = load i64, i64* %bufsize.addr, align 8, !dbg !22461
  %cmp47 = icmp ult i64 %46, %47, !dbg !22461
  br i1 %cmp47, label %if.then48, label %if.end61, !dbg !22463

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %v49, metadata !22464, metadata !DIExpression()), !dbg !22466
  call void @llvm.dbg.declare(metadata i64* %nbytes50, metadata !22467, metadata !DIExpression()), !dbg !22466
  %48 = load i64, i64* %bufsize.addr, align 8, !dbg !22466
  %49 = load i64, i64* %seeded, align 8, !dbg !22466
  %sub51 = sub i64 %48, %49, !dbg !22466
  %cmp52 = icmp ult i64 4, %sub51, !dbg !22466
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !22466

cond.true53:                                      ; preds = %if.then48
  br label %cond.end56, !dbg !22466

cond.false54:                                     ; preds = %if.then48
  %50 = load i64, i64* %bufsize.addr, align 8, !dbg !22466
  %51 = load i64, i64* %seeded, align 8, !dbg !22466
  %sub55 = sub i64 %50, %51, !dbg !22466
  br label %cond.end56, !dbg !22466

cond.end56:                                       ; preds = %cond.false54, %cond.true53
  %cond57 = phi i64 [ 4, %cond.true53 ], [ %sub55, %cond.false54 ], !dbg !22466
  store i64 %cond57, i64* %nbytes50, align 8, !dbg !22466
  %call58 = call i32 @getuid() #12, !dbg !22466
  store i32 %call58, i32* %v49, align 4, !dbg !22466
  %52 = load i8*, i8** %buf, align 8, !dbg !22466
  %53 = load i64, i64* %seeded, align 8, !dbg !22466
  %add.ptr59 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !22466, !ctir !8
  %54 = bitcast i32* %v49 to i8*, !dbg !22466
  %55 = load i64, i64* %nbytes50, align 8, !dbg !22466
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr59, i8* align 4 %54, i64 %55, i1 false), !dbg !22466
  %56 = load i64, i64* %nbytes50, align 8, !dbg !22466
  %57 = load i64, i64* %seeded, align 8, !dbg !22466
  %add60 = add i64 %57, %56, !dbg !22466
  store i64 %add60, i64* %seeded, align 8, !dbg !22466
  br label %if.end61, !dbg !22466

if.end61:                                         ; preds = %cond.end56, %if.end46
  %58 = load i64, i64* %seeded, align 8, !dbg !22468
  %59 = load i64, i64* %bufsize.addr, align 8, !dbg !22468
  %cmp62 = icmp ult i64 %58, %59, !dbg !22468
  br i1 %cmp62, label %if.then63, label %if.end76, !dbg !22470

if.then63:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i32* %v64, metadata !22471, metadata !DIExpression()), !dbg !22473
  call void @llvm.dbg.declare(metadata i64* %nbytes65, metadata !22474, metadata !DIExpression()), !dbg !22473
  %60 = load i64, i64* %bufsize.addr, align 8, !dbg !22473
  %61 = load i64, i64* %seeded, align 8, !dbg !22473
  %sub66 = sub i64 %60, %61, !dbg !22473
  %cmp67 = icmp ult i64 4, %sub66, !dbg !22473
  br i1 %cmp67, label %cond.true68, label %cond.false69, !dbg !22473

cond.true68:                                      ; preds = %if.then63
  br label %cond.end71, !dbg !22473

cond.false69:                                     ; preds = %if.then63
  %62 = load i64, i64* %bufsize.addr, align 8, !dbg !22473
  %63 = load i64, i64* %seeded, align 8, !dbg !22473
  %sub70 = sub i64 %62, %63, !dbg !22473
  br label %cond.end71, !dbg !22473

cond.end71:                                       ; preds = %cond.false69, %cond.true68
  %cond72 = phi i64 [ 4, %cond.true68 ], [ %sub70, %cond.false69 ], !dbg !22473
  store i64 %cond72, i64* %nbytes65, align 8, !dbg !22473
  %call73 = call i32 @getgid() #12, !dbg !22473
  store i32 %call73, i32* %v64, align 4, !dbg !22473
  %64 = load i8*, i8** %buf, align 8, !dbg !22473
  %65 = load i64, i64* %seeded, align 8, !dbg !22473
  %add.ptr74 = getelementptr inbounds i8, i8* %64, i64 %65, !dbg !22473, !ctir !8
  %66 = bitcast i32* %v64 to i8*, !dbg !22473
  %67 = load i64, i64* %nbytes65, align 8, !dbg !22473
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 4 %66, i64 %67, i1 false), !dbg !22473
  %68 = load i64, i64* %nbytes65, align 8, !dbg !22473
  %69 = load i64, i64* %seeded, align 8, !dbg !22473
  %add75 = add i64 %69, %68, !dbg !22473
  store i64 %add75, i64* %seeded, align 8, !dbg !22473
  br label %if.end76, !dbg !22473

if.end76:                                         ; preds = %cond.end71, %if.end61
  ret void, !dbg !22475
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec*, %struct.timezone*) #2

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

; Function Attrs: nounwind
declare dso_local i32 @getppid() #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @randread_error(i8* %file_name) #0 !dbg !22476 {
entry:
  %file_name.addr = alloca i8*, align 8
  store i8* %file_name, i8** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !22477, metadata !DIExpression()), !dbg !22478
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !22479
  %tobool = icmp ne i8* %0, null, !dbg !22479
  br i1 %tobool, label %if.then, label %if.end, !dbg !22481

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !22482
  %call = call i32* @__errno_location() #15, !dbg !22483
  %2 = load i32, i32* %call, align 4, !dbg !22483, !ctir !5
  %call1 = call i32* @__errno_location() #15, !dbg !22484
  %3 = load i32, i32* %call1, align 4, !dbg !22484, !ctir !5
  %cmp = icmp eq i32 %3, 0, !dbg !22485
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !22484

cond.true:                                        ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.503, i64 0, i64 0)) #12, !dbg !22486
  br label %cond.end, !dbg !22484

cond.false:                                       ; preds = %if.then
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.504, i64 0, i64 0)) #12, !dbg !22487
  br label %cond.end, !dbg !22484

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !22484
  %4 = load i8*, i8** %file_name.addr, align 8, !dbg !22488
  %call4 = call i8* @quote(i8* %4), !dbg !22489
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 %2, i8* %cond, i8* %call4), !dbg !22490
  br label %if.end, !dbg !22490

if.end:                                           ; preds = %cond.end, %entry
  call void @abort() #13, !dbg !22491
  unreachable, !dbg !22491
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler(%struct.randread_source* %s, void (i8*)* %handler) #4 !dbg !22492 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler.addr = alloca void (i8*)*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !22495, metadata !DIExpression()), !dbg !22496
  store void (i8*)* %handler, void (i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %handler.addr, metadata !22497, metadata !DIExpression()), !dbg !22498
  %0 = load void (i8*)*, void (i8*)** %handler.addr, align 8, !dbg !22499
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22500
  %handler1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 1, !dbg !22501, !ctir !1993
  store void (i8*)* %0, void (i8*)** %handler1, align 8, !dbg !22502, !ctir !1998
  ret void, !dbg !22503
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler_arg(%struct.randread_source* %s, i8* %handler_arg) #4 !dbg !22504 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler_arg.addr = alloca i8*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !22507, metadata !DIExpression()), !dbg !22508
  store i8* %handler_arg, i8** %handler_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !22509, metadata !DIExpression()), !dbg !22510
  %0 = load i8*, i8** %handler_arg.addr, align 8, !dbg !22511
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22512
  %handler_arg1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 2, !dbg !22513, !ctir !1993
  store i8* %0, i8** %handler_arg1, align 8, !dbg !22514, !ctir !553
  ret void, !dbg !22515
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread(%struct.randread_source* %s, i8* %buf, i64 %size) #4 !dbg !22516 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !22519, metadata !DIExpression()), !dbg !22520
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22521, metadata !DIExpression()), !dbg !22522
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !22523, metadata !DIExpression()), !dbg !22524
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22525
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !22527, !ctir !1993
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22527, !ctir !1952
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !22525
  br i1 %tobool, label %if.then, label %if.else, !dbg !22528

if.then:                                          ; preds = %entry
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22529
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !22530
  %4 = load i64, i64* %size.addr, align 8, !dbg !22531
  call void @readsource(%struct.randread_source* %2, i8* %3, i64 %4), !dbg !22532
  br label %if.end, !dbg !22532

if.else:                                          ; preds = %entry
  %5 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22533
  %buf1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 3, !dbg !22534, !ctir !1993
  %isaac = bitcast %union.anon.110* %buf1 to %struct.isaac*, !dbg !22535
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !22536
  %7 = load i64, i64* %size.addr, align 8, !dbg !22537
  call void @readisaac(%struct.isaac* %isaac, i8* %6, i64 %7), !dbg !22538
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !22539
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readsource(%struct.randread_source* %s, i8* %p, i64 %size) #4 !dbg !22540 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !52
  %fread_errno = alloca i32, align 4, !ctir !5
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !22544, metadata !DIExpression()), !dbg !22545
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !22546, metadata !DIExpression()), !dbg !22547
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !22548, metadata !DIExpression()), !dbg !22549
  br label %while.body, !dbg !22550

while.body:                                       ; preds = %entry, %cond.end
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !22551, metadata !DIExpression()), !dbg !22553
  %0 = load i8*, i8** %p.addr, align 8, !dbg !22554
  %1 = load i64, i64* %size.addr, align 8, !dbg !22554
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22554
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !22554, !ctir !1993
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22554, !ctir !1952
  %call = call i64 @fread_unlocked(i8* %0, i64 1, i64 %1, %struct._IO_FILE* %3), !dbg !22554
  store i64 %call, i64* %inbytes, align 8, !dbg !22553
  call void @llvm.dbg.declare(metadata i32* %fread_errno, metadata !22555, metadata !DIExpression()), !dbg !22556
  %call1 = call i32* @__errno_location() #15, !dbg !22557
  %4 = load i32, i32* %call1, align 4, !dbg !22557, !ctir !5
  store i32 %4, i32* %fread_errno, align 4, !dbg !22556
  %5 = load i64, i64* %inbytes, align 8, !dbg !22558
  %6 = load i8*, i8** %p.addr, align 8, !dbg !22559
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5, !dbg !22559, !ctir !451
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !22559
  %7 = load i64, i64* %inbytes, align 8, !dbg !22560
  %8 = load i64, i64* %size.addr, align 8, !dbg !22561
  %sub = sub i64 %8, %7, !dbg !22561
  store i64 %sub, i64* %size.addr, align 8, !dbg !22561
  %9 = load i64, i64* %size.addr, align 8, !dbg !22562
  %cmp = icmp eq i64 %9, 0, !dbg !22564
  br i1 %cmp, label %if.then, label %if.end, !dbg !22565

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !22566

if.end:                                           ; preds = %while.body
  %10 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22567
  %source2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 0, !dbg !22567, !ctir !1993
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %source2, align 8, !dbg !22567, !ctir !1952
  %call3 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #12, !dbg !22567
  %tobool = icmp ne i32 %call3, 0, !dbg !22567
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !22567

cond.true:                                        ; preds = %if.end
  %12 = load i32, i32* %fread_errno, align 4, !dbg !22568
  br label %cond.end, !dbg !22567

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !22567

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ 0, %cond.false ], !dbg !22567
  %call4 = call i32* @__errno_location() #15, !dbg !22569
  store i32 %cond, i32* %call4, align 4, !dbg !22570, !ctir !5
  %13 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22571
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %13, i32 0, i32 1, !dbg !22572, !ctir !1993
  %14 = load void (i8*)*, void (i8*)** %handler, align 8, !dbg !22572, !ctir !1998
  %15 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22573
  %handler_arg = getelementptr inbounds %struct.randread_source, %struct.randread_source* %15, i32 0, i32 2, !dbg !22574, !ctir !1993
  %16 = load i8*, i8** %handler_arg, align 8, !dbg !22574, !ctir !553
  call void %14(i8* %16), !dbg !22571
  br label %while.body, !dbg !22550, !llvm.loop !22575

while.end:                                        ; preds = %if.then
  ret void, !dbg !22577
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readisaac(%struct.isaac* %isaac, i8* %p, i64 %size) #4 !dbg !22578 {
entry:
  %isaac.addr = alloca %struct.isaac*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !52
  %char_p = alloca i8*, align 8, !ctir !7
  %wp = alloca i64*, align 8, !ctir !2034
  store %struct.isaac* %isaac, %struct.isaac** %isaac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isaac** %isaac.addr, metadata !22582, metadata !DIExpression()), !dbg !22583
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !22584, metadata !DIExpression()), !dbg !22585
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !22586, metadata !DIExpression()), !dbg !22587
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !22588, metadata !DIExpression()), !dbg !22589
  %0 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22590
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %0, i32 0, i32 0, !dbg !22591, !ctir !2010
  %1 = load i64, i64* %buffered, align 8, !dbg !22591, !ctir !52
  store i64 %1, i64* %inbytes, align 8, !dbg !22589
  br label %while.body, !dbg !22592

while.body:                                       ; preds = %entry, %if.end22
  call void @llvm.dbg.declare(metadata i8** %char_p, metadata !22593, metadata !DIExpression()), !dbg !22595
  %2 = load i8*, i8** %p.addr, align 8, !dbg !22596
  store i8* %2, i8** %char_p, align 8, !dbg !22595
  %3 = load i64, i64* %size.addr, align 8, !dbg !22597
  %4 = load i64, i64* %inbytes, align 8, !dbg !22599
  %cmp = icmp ule i64 %3, %4, !dbg !22600
  br i1 %cmp, label %if.then, label %if.end, !dbg !22601

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 8, !dbg !22602
  %6 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22604
  %data = getelementptr inbounds %struct.isaac, %struct.isaac* %6, i32 0, i32 2, !dbg !22605, !ctir !2010
  %b = bitcast %union.anon.0* %data to [2048 x i8]*, !dbg !22606
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %b, i64 0, i64 0, !dbg !22604, !ctir !2029
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2048, !dbg !22607, !ctir !451
  %7 = load i64, i64* %inbytes, align 8, !dbg !22608
  %idx.neg = sub i64 0, %7, !dbg !22609
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !22609, !ctir !451
  %8 = load i64, i64* %size.addr, align 8, !dbg !22610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %add.ptr1, i64 %8, i1 false), !dbg !22611
  %9 = load i64, i64* %inbytes, align 8, !dbg !22612
  %10 = load i64, i64* %size.addr, align 8, !dbg !22613
  %sub = sub i64 %9, %10, !dbg !22614
  %11 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22615
  %buffered2 = getelementptr inbounds %struct.isaac, %struct.isaac* %11, i32 0, i32 0, !dbg !22616, !ctir !2010
  store i64 %sub, i64* %buffered2, align 8, !dbg !22617, !ctir !52
  br label %return, !dbg !22618

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %p.addr, align 8, !dbg !22619
  %13 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22620
  %data3 = getelementptr inbounds %struct.isaac, %struct.isaac* %13, i32 0, i32 2, !dbg !22621, !ctir !2010
  %b4 = bitcast %union.anon.0* %data3 to [2048 x i8]*, !dbg !22622
  %arraydecay5 = getelementptr inbounds [2048 x i8], [2048 x i8]* %b4, i64 0, i64 0, !dbg !22620, !ctir !2029
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 2048, !dbg !22623, !ctir !451
  %14 = load i64, i64* %inbytes, align 8, !dbg !22624
  %idx.neg7 = sub i64 0, %14, !dbg !22625
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr6, i64 %idx.neg7, !dbg !22625, !ctir !451
  %15 = load i64, i64* %inbytes, align 8, !dbg !22626
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %add.ptr8, i64 %15, i1 false), !dbg !22627
  %16 = load i8*, i8** %char_p, align 8, !dbg !22628
  %17 = load i64, i64* %inbytes, align 8, !dbg !22629
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !22630, !ctir !8
  store i8* %add.ptr9, i8** %p.addr, align 8, !dbg !22631
  %18 = load i64, i64* %inbytes, align 8, !dbg !22632
  %19 = load i64, i64* %size.addr, align 8, !dbg !22633
  %sub10 = sub i64 %19, %18, !dbg !22633
  store i64 %sub10, i64* %size.addr, align 8, !dbg !22633
  %20 = load i8*, i8** %p.addr, align 8, !dbg !22634
  %21 = ptrtoint i8* %20 to i64, !dbg !22634
  %rem = urem i64 %21, 8, !dbg !22634
  %cmp11 = icmp eq i64 %rem, 0, !dbg !22634
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !22636

if.then12:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64** %wp, metadata !22637, metadata !DIExpression()), !dbg !22639
  %22 = load i8*, i8** %p.addr, align 8, !dbg !22640
  %23 = bitcast i8* %22 to i64*, !dbg !22640
  store i64* %23, i64** %wp, align 8, !dbg !22639
  br label %while.cond13, !dbg !22641

while.cond13:                                     ; preds = %if.end21, %if.then12
  %24 = load i64, i64* %size.addr, align 8, !dbg !22642
  %cmp14 = icmp ule i64 2048, %24, !dbg !22643
  br i1 %cmp14, label %while.body15, label %while.end, !dbg !22641

while.body15:                                     ; preds = %while.cond13
  %25 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22644
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %25, i32 0, i32 1, !dbg !22646, !ctir !2010
  %26 = load i64*, i64** %wp, align 8, !dbg !22647
  call void @isaac_refill(%struct.isaac_state* %state, i64* %26), !dbg !22648
  %27 = load i64*, i64** %wp, align 8, !dbg !22649
  %add.ptr16 = getelementptr inbounds i64, i64* %27, i64 256, !dbg !22649, !ctir !2019
  store i64* %add.ptr16, i64** %wp, align 8, !dbg !22649
  %28 = load i64, i64* %size.addr, align 8, !dbg !22650
  %sub17 = sub i64 %28, 2048, !dbg !22650
  store i64 %sub17, i64* %size.addr, align 8, !dbg !22650
  %29 = load i64, i64* %size.addr, align 8, !dbg !22651
  %cmp18 = icmp eq i64 %29, 0, !dbg !22653
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !22654

if.then19:                                        ; preds = %while.body15
  %30 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22655
  %buffered20 = getelementptr inbounds %struct.isaac, %struct.isaac* %30, i32 0, i32 0, !dbg !22657, !ctir !2010
  store i64 0, i64* %buffered20, align 8, !dbg !22658, !ctir !52
  br label %return, !dbg !22659

if.end21:                                         ; preds = %while.body15
  br label %while.cond13, !dbg !22641, !llvm.loop !22660

while.end:                                        ; preds = %while.cond13
  %31 = load i64*, i64** %wp, align 8, !dbg !22662
  %32 = bitcast i64* %31 to i8*, !dbg !22662
  store i8* %32, i8** %p.addr, align 8, !dbg !22663
  br label %if.end22, !dbg !22664

if.end22:                                         ; preds = %while.end, %if.end
  %33 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22665
  %state23 = getelementptr inbounds %struct.isaac, %struct.isaac* %33, i32 0, i32 1, !dbg !22666, !ctir !2010
  %34 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22667
  %data24 = getelementptr inbounds %struct.isaac, %struct.isaac* %34, i32 0, i32 2, !dbg !22668, !ctir !2010
  %w = bitcast %union.anon.0* %data24 to [256 x i64]*, !dbg !22669
  %arraydecay25 = getelementptr inbounds [256 x i64], [256 x i64]* %w, i64 0, i64 0, !dbg !22667, !ctir !2018
  call void @isaac_refill(%struct.isaac_state* %state23, i64* %arraydecay25), !dbg !22670
  store i64 2048, i64* %inbytes, align 8, !dbg !22671
  br label %while.body, !dbg !22592, !llvm.loop !22672

return:                                           ; preds = %if.then19, %if.then
  ret void, !dbg !22674
}

declare dso_local i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randread_free(%struct.randread_source* %s) #4 !dbg !22675 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !1952
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !22678, metadata !DIExpression()), !dbg !22679
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !22680, metadata !DIExpression()), !dbg !22681
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22682
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !22683, !ctir !1993
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source1, align 8, !dbg !22683, !ctir !1952
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source, align 8, !dbg !22681
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22684
  %3 = bitcast %struct.randread_source* %2 to i8*, !dbg !22684
  call void @explicit_bzero(i8* %3, i64 4152), !dbg !22685
  %4 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22686
  %5 = bitcast %struct.randread_source* %4 to i8*, !dbg !22686
  call void @free(i8* %5) #12, !dbg !22687
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22688
  %tobool = icmp ne %struct._IO_FILE* %6, null, !dbg !22688
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !22688

cond.true:                                        ; preds = %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22689
  %call = call i32 @rpl_fclose(%struct._IO_FILE* %7), !dbg !22690
  br label %cond.end, !dbg !22688

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !22688

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !22688
  ret i32 %cond, !dbg !22691
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_refill(%struct.isaac_state* %s, i64* %result) #4 !dbg !22692 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %result.addr = alloca i64*, align 8
  %a = alloca i64, align 8, !ctir !2019
  %b = alloca i64, align 8, !ctir !2019
  %m = alloca i64*, align 8, !ctir !2034
  %r = alloca i64*, align 8, !ctir !2034
  %x = alloca i64, align 8, !ctir !2019
  %y = alloca i64, align 8, !ctir !2019
  %x18 = alloca i64, align 8, !ctir !2019
  %y19 = alloca i64, align 8, !ctir !2019
  %x40 = alloca i64, align 8, !ctir !2019
  %y41 = alloca i64, align 8, !ctir !2019
  %x61 = alloca i64, align 8, !ctir !2019
  %y62 = alloca i64, align 8, !ctir !2019
  %x88 = alloca i64, align 8, !ctir !2019
  %y89 = alloca i64, align 8, !ctir !2019
  %x110 = alloca i64, align 8, !ctir !2019
  %y111 = alloca i64, align 8, !ctir !2019
  %x132 = alloca i64, align 8, !ctir !2019
  %y133 = alloca i64, align 8, !ctir !2019
  %x153 = alloca i64, align 8, !ctir !2019
  %y154 = alloca i64, align 8, !ctir !2019
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !22703, metadata !DIExpression()), !dbg !22704
  store i64* %result, i64** %result.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %result.addr, metadata !22705, metadata !DIExpression()), !dbg !22706
  call void @llvm.dbg.declare(metadata i64* %a, metadata !22707, metadata !DIExpression()), !dbg !22708
  %0 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22709
  %a1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %0, i32 0, i32 1, !dbg !22710, !ctir !22697
  %1 = load i64, i64* %a1, align 8, !dbg !22710, !ctir !2019
  store i64 %1, i64* %a, align 8, !dbg !22708
  call void @llvm.dbg.declare(metadata i64* %b, metadata !22711, metadata !DIExpression()), !dbg !22712
  %2 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22713
  %b2 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %2, i32 0, i32 2, !dbg !22714, !ctir !22697
  %3 = load i64, i64* %b2, align 8, !dbg !22714, !ctir !2019
  %4 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22715
  %c = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %4, i32 0, i32 3, !dbg !22716, !ctir !22697
  %5 = load i64, i64* %c, align 8, !dbg !22717, !ctir !2019
  %inc = add i64 %5, 1, !dbg !22717
  store i64 %inc, i64* %c, align 8, !dbg !22717, !ctir !2019
  %add = add i64 %3, %inc, !dbg !22718
  store i64 %add, i64* %b, align 8, !dbg !22712
  call void @llvm.dbg.declare(metadata i64** %m, metadata !22719, metadata !DIExpression()), !dbg !22720
  %6 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22721
  %m3 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %6, i32 0, i32 0, !dbg !22722, !ctir !22697
  %arraydecay = getelementptr inbounds [256 x i64], [256 x i64]* %m3, i64 0, i64 0, !dbg !22721, !ctir !2018
  store i64* %arraydecay, i64** %m, align 8, !dbg !22720
  call void @llvm.dbg.declare(metadata i64** %r, metadata !22723, metadata !DIExpression()), !dbg !22724
  %7 = load i64*, i64** %result.addr, align 8, !dbg !22725
  store i64* %7, i64** %r, align 8, !dbg !22724
  br label %do.body, !dbg !22726

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i64* %x, metadata !22727, metadata !DIExpression()), !dbg !22730
  call void @llvm.dbg.declare(metadata i64* %y, metadata !22731, metadata !DIExpression()), !dbg !22730
  %8 = load i64, i64* %a, align 8, !dbg !22730
  %9 = load i64, i64* %a, align 8, !dbg !22730
  %shl = shl i64 %9, 21, !dbg !22730
  %xor = xor i64 %8, %shl, !dbg !22730
  %neg = xor i64 %xor, -1, !dbg !22730
  %xor4 = xor i64 0, %neg, !dbg !22730
  %10 = load i64*, i64** %m, align 8, !dbg !22730
  %arrayidx = getelementptr inbounds i64, i64* %10, i64 128, !dbg !22730, !ctir !2034
  %11 = load i64, i64* %arrayidx, align 8, !dbg !22730
  %add5 = add i64 %xor4, %11, !dbg !22730
  store i64 %add5, i64* %a, align 8, !dbg !22730
  %12 = load i64*, i64** %m, align 8, !dbg !22730
  %arrayidx6 = getelementptr inbounds i64, i64* %12, i64 0, !dbg !22730, !ctir !2034
  %13 = load i64, i64* %arrayidx6, align 8, !dbg !22730
  store i64 %13, i64* %x, align 8, !dbg !22730
  %14 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22730
  %m7 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %14, i32 0, i32 0, !dbg !22730, !ctir !22697
  %arraydecay8 = getelementptr inbounds [256 x i64], [256 x i64]* %m7, i64 0, i64 0, !dbg !22730, !ctir !2018
  %15 = load i64, i64* %x, align 8, !dbg !22730
  %call = call i64 @ind(i64* %arraydecay8, i64 %15), !dbg !22730
  %16 = load i64, i64* %a, align 8, !dbg !22730
  %add9 = add i64 %call, %16, !dbg !22730
  %17 = load i64, i64* %b, align 8, !dbg !22730
  %add10 = add i64 %add9, %17, !dbg !22730
  store i64 %add10, i64* %y, align 8, !dbg !22730
  %18 = load i64*, i64** %m, align 8, !dbg !22730
  %arrayidx11 = getelementptr inbounds i64, i64* %18, i64 0, !dbg !22730, !ctir !2034
  store i64 %add10, i64* %arrayidx11, align 8, !dbg !22730
  %19 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22730
  %m12 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %19, i32 0, i32 0, !dbg !22730, !ctir !22697
  %arraydecay13 = getelementptr inbounds [256 x i64], [256 x i64]* %m12, i64 0, i64 0, !dbg !22730, !ctir !2018
  %20 = load i64, i64* %y, align 8, !dbg !22730
  %shr = lshr i64 %20, 8, !dbg !22730
  %call14 = call i64 @ind(i64* %arraydecay13, i64 %shr), !dbg !22730
  %21 = load i64, i64* %x, align 8, !dbg !22730
  %add15 = add i64 %call14, %21, !dbg !22730
  %call16 = call i64 @just(i64 %add15), !dbg !22730
  store i64 %call16, i64* %b, align 8, !dbg !22730
  %22 = load i64*, i64** %r, align 8, !dbg !22730
  %arrayidx17 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !22730, !ctir !2034
  store i64 %call16, i64* %arrayidx17, align 8, !dbg !22730
  call void @llvm.dbg.declare(metadata i64* %x18, metadata !22732, metadata !DIExpression()), !dbg !22734
  call void @llvm.dbg.declare(metadata i64* %y19, metadata !22735, metadata !DIExpression()), !dbg !22734
  %23 = load i64, i64* %a, align 8, !dbg !22734
  %24 = load i64, i64* %a, align 8, !dbg !22734
  %call20 = call i64 @just(i64 %24), !dbg !22734
  %shr21 = lshr i64 %call20, 5, !dbg !22734
  %xor22 = xor i64 %23, %shr21, !dbg !22734
  %xor23 = xor i64 0, %xor22, !dbg !22734
  %25 = load i64*, i64** %m, align 8, !dbg !22734
  %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 129, !dbg !22734, !ctir !2034
  %26 = load i64, i64* %arrayidx24, align 8, !dbg !22734
  %add25 = add i64 %xor23, %26, !dbg !22734
  store i64 %add25, i64* %a, align 8, !dbg !22734
  %27 = load i64*, i64** %m, align 8, !dbg !22734
  %arrayidx26 = getelementptr inbounds i64, i64* %27, i64 1, !dbg !22734, !ctir !2034
  %28 = load i64, i64* %arrayidx26, align 8, !dbg !22734
  store i64 %28, i64* %x18, align 8, !dbg !22734
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22734
  %m27 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !22734, !ctir !22697
  %arraydecay28 = getelementptr inbounds [256 x i64], [256 x i64]* %m27, i64 0, i64 0, !dbg !22734, !ctir !2018
  %30 = load i64, i64* %x18, align 8, !dbg !22734
  %call29 = call i64 @ind(i64* %arraydecay28, i64 %30), !dbg !22734
  %31 = load i64, i64* %a, align 8, !dbg !22734
  %add30 = add i64 %call29, %31, !dbg !22734
  %32 = load i64, i64* %b, align 8, !dbg !22734
  %add31 = add i64 %add30, %32, !dbg !22734
  store i64 %add31, i64* %y19, align 8, !dbg !22734
  %33 = load i64*, i64** %m, align 8, !dbg !22734
  %arrayidx32 = getelementptr inbounds i64, i64* %33, i64 1, !dbg !22734, !ctir !2034
  store i64 %add31, i64* %arrayidx32, align 8, !dbg !22734
  %34 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22734
  %m33 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %34, i32 0, i32 0, !dbg !22734, !ctir !22697
  %arraydecay34 = getelementptr inbounds [256 x i64], [256 x i64]* %m33, i64 0, i64 0, !dbg !22734, !ctir !2018
  %35 = load i64, i64* %y19, align 8, !dbg !22734
  %shr35 = lshr i64 %35, 8, !dbg !22734
  %call36 = call i64 @ind(i64* %arraydecay34, i64 %shr35), !dbg !22734
  %36 = load i64, i64* %x18, align 8, !dbg !22734
  %add37 = add i64 %call36, %36, !dbg !22734
  %call38 = call i64 @just(i64 %add37), !dbg !22734
  store i64 %call38, i64* %b, align 8, !dbg !22734
  %37 = load i64*, i64** %r, align 8, !dbg !22734
  %arrayidx39 = getelementptr inbounds i64, i64* %37, i64 1, !dbg !22734, !ctir !2034
  store i64 %call38, i64* %arrayidx39, align 8, !dbg !22734
  call void @llvm.dbg.declare(metadata i64* %x40, metadata !22736, metadata !DIExpression()), !dbg !22738
  call void @llvm.dbg.declare(metadata i64* %y41, metadata !22739, metadata !DIExpression()), !dbg !22738
  %38 = load i64, i64* %a, align 8, !dbg !22738
  %39 = load i64, i64* %a, align 8, !dbg !22738
  %shl42 = shl i64 %39, 12, !dbg !22738
  %xor43 = xor i64 %38, %shl42, !dbg !22738
  %xor44 = xor i64 0, %xor43, !dbg !22738
  %40 = load i64*, i64** %m, align 8, !dbg !22738
  %arrayidx45 = getelementptr inbounds i64, i64* %40, i64 130, !dbg !22738, !ctir !2034
  %41 = load i64, i64* %arrayidx45, align 8, !dbg !22738
  %add46 = add i64 %xor44, %41, !dbg !22738
  store i64 %add46, i64* %a, align 8, !dbg !22738
  %42 = load i64*, i64** %m, align 8, !dbg !22738
  %arrayidx47 = getelementptr inbounds i64, i64* %42, i64 2, !dbg !22738, !ctir !2034
  %43 = load i64, i64* %arrayidx47, align 8, !dbg !22738
  store i64 %43, i64* %x40, align 8, !dbg !22738
  %44 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22738
  %m48 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %44, i32 0, i32 0, !dbg !22738, !ctir !22697
  %arraydecay49 = getelementptr inbounds [256 x i64], [256 x i64]* %m48, i64 0, i64 0, !dbg !22738, !ctir !2018
  %45 = load i64, i64* %x40, align 8, !dbg !22738
  %call50 = call i64 @ind(i64* %arraydecay49, i64 %45), !dbg !22738
  %46 = load i64, i64* %a, align 8, !dbg !22738
  %add51 = add i64 %call50, %46, !dbg !22738
  %47 = load i64, i64* %b, align 8, !dbg !22738
  %add52 = add i64 %add51, %47, !dbg !22738
  store i64 %add52, i64* %y41, align 8, !dbg !22738
  %48 = load i64*, i64** %m, align 8, !dbg !22738
  %arrayidx53 = getelementptr inbounds i64, i64* %48, i64 2, !dbg !22738, !ctir !2034
  store i64 %add52, i64* %arrayidx53, align 8, !dbg !22738
  %49 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22738
  %m54 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %49, i32 0, i32 0, !dbg !22738, !ctir !22697
  %arraydecay55 = getelementptr inbounds [256 x i64], [256 x i64]* %m54, i64 0, i64 0, !dbg !22738, !ctir !2018
  %50 = load i64, i64* %y41, align 8, !dbg !22738
  %shr56 = lshr i64 %50, 8, !dbg !22738
  %call57 = call i64 @ind(i64* %arraydecay55, i64 %shr56), !dbg !22738
  %51 = load i64, i64* %x40, align 8, !dbg !22738
  %add58 = add i64 %call57, %51, !dbg !22738
  %call59 = call i64 @just(i64 %add58), !dbg !22738
  store i64 %call59, i64* %b, align 8, !dbg !22738
  %52 = load i64*, i64** %r, align 8, !dbg !22738
  %arrayidx60 = getelementptr inbounds i64, i64* %52, i64 2, !dbg !22738, !ctir !2034
  store i64 %call59, i64* %arrayidx60, align 8, !dbg !22738
  call void @llvm.dbg.declare(metadata i64* %x61, metadata !22740, metadata !DIExpression()), !dbg !22742
  call void @llvm.dbg.declare(metadata i64* %y62, metadata !22743, metadata !DIExpression()), !dbg !22742
  %53 = load i64, i64* %a, align 8, !dbg !22742
  %54 = load i64, i64* %a, align 8, !dbg !22742
  %call63 = call i64 @just(i64 %54), !dbg !22742
  %shr64 = lshr i64 %call63, 33, !dbg !22742
  %xor65 = xor i64 %53, %shr64, !dbg !22742
  %xor66 = xor i64 0, %xor65, !dbg !22742
  %55 = load i64*, i64** %m, align 8, !dbg !22742
  %arrayidx67 = getelementptr inbounds i64, i64* %55, i64 131, !dbg !22742, !ctir !2034
  %56 = load i64, i64* %arrayidx67, align 8, !dbg !22742
  %add68 = add i64 %xor66, %56, !dbg !22742
  store i64 %add68, i64* %a, align 8, !dbg !22742
  %57 = load i64*, i64** %m, align 8, !dbg !22742
  %arrayidx69 = getelementptr inbounds i64, i64* %57, i64 3, !dbg !22742, !ctir !2034
  %58 = load i64, i64* %arrayidx69, align 8, !dbg !22742
  store i64 %58, i64* %x61, align 8, !dbg !22742
  %59 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22742
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %59, i32 0, i32 0, !dbg !22742, !ctir !22697
  %arraydecay71 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 0, !dbg !22742, !ctir !2018
  %60 = load i64, i64* %x61, align 8, !dbg !22742
  %call72 = call i64 @ind(i64* %arraydecay71, i64 %60), !dbg !22742
  %61 = load i64, i64* %a, align 8, !dbg !22742
  %add73 = add i64 %call72, %61, !dbg !22742
  %62 = load i64, i64* %b, align 8, !dbg !22742
  %add74 = add i64 %add73, %62, !dbg !22742
  store i64 %add74, i64* %y62, align 8, !dbg !22742
  %63 = load i64*, i64** %m, align 8, !dbg !22742
  %arrayidx75 = getelementptr inbounds i64, i64* %63, i64 3, !dbg !22742, !ctir !2034
  store i64 %add74, i64* %arrayidx75, align 8, !dbg !22742
  %64 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22742
  %m76 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %64, i32 0, i32 0, !dbg !22742, !ctir !22697
  %arraydecay77 = getelementptr inbounds [256 x i64], [256 x i64]* %m76, i64 0, i64 0, !dbg !22742, !ctir !2018
  %65 = load i64, i64* %y62, align 8, !dbg !22742
  %shr78 = lshr i64 %65, 8, !dbg !22742
  %call79 = call i64 @ind(i64* %arraydecay77, i64 %shr78), !dbg !22742
  %66 = load i64, i64* %x61, align 8, !dbg !22742
  %add80 = add i64 %call79, %66, !dbg !22742
  %call81 = call i64 @just(i64 %add80), !dbg !22742
  store i64 %call81, i64* %b, align 8, !dbg !22742
  %67 = load i64*, i64** %r, align 8, !dbg !22742
  %arrayidx82 = getelementptr inbounds i64, i64* %67, i64 3, !dbg !22742, !ctir !2034
  store i64 %call81, i64* %arrayidx82, align 8, !dbg !22742
  %68 = load i64*, i64** %r, align 8, !dbg !22744
  %add.ptr = getelementptr inbounds i64, i64* %68, i64 4, !dbg !22744, !ctir !2019
  store i64* %add.ptr, i64** %r, align 8, !dbg !22744
  br label %do.cond, !dbg !22745

do.cond:                                          ; preds = %do.body
  %69 = load i64*, i64** %m, align 8, !dbg !22746
  %add.ptr83 = getelementptr inbounds i64, i64* %69, i64 4, !dbg !22746, !ctir !2019
  store i64* %add.ptr83, i64** %m, align 8, !dbg !22746
  %70 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22747
  %m84 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %70, i32 0, i32 0, !dbg !22748, !ctir !22697
  %arraydecay85 = getelementptr inbounds [256 x i64], [256 x i64]* %m84, i64 0, i64 0, !dbg !22747, !ctir !2018
  %add.ptr86 = getelementptr inbounds i64, i64* %arraydecay85, i64 128, !dbg !22749, !ctir !2019
  %cmp = icmp ult i64* %add.ptr83, %add.ptr86, !dbg !22750
  br i1 %cmp, label %do.body, label %do.end, !dbg !22745, !llvm.loop !22751

do.end:                                           ; preds = %do.cond
  br label %do.body87, !dbg !22753

do.body87:                                        ; preds = %do.cond176, %do.end
  call void @llvm.dbg.declare(metadata i64* %x88, metadata !22754, metadata !DIExpression()), !dbg !22757
  call void @llvm.dbg.declare(metadata i64* %y89, metadata !22758, metadata !DIExpression()), !dbg !22757
  %71 = load i64, i64* %a, align 8, !dbg !22757
  %72 = load i64, i64* %a, align 8, !dbg !22757
  %shl90 = shl i64 %72, 21, !dbg !22757
  %xor91 = xor i64 %71, %shl90, !dbg !22757
  %neg92 = xor i64 %xor91, -1, !dbg !22757
  %xor93 = xor i64 0, %neg92, !dbg !22757
  %73 = load i64*, i64** %m, align 8, !dbg !22757
  %arrayidx94 = getelementptr inbounds i64, i64* %73, i64 -128, !dbg !22757, !ctir !2034
  %74 = load i64, i64* %arrayidx94, align 8, !dbg !22757
  %add95 = add i64 %xor93, %74, !dbg !22757
  store i64 %add95, i64* %a, align 8, !dbg !22757
  %75 = load i64*, i64** %m, align 8, !dbg !22757
  %arrayidx96 = getelementptr inbounds i64, i64* %75, i64 0, !dbg !22757, !ctir !2034
  %76 = load i64, i64* %arrayidx96, align 8, !dbg !22757
  store i64 %76, i64* %x88, align 8, !dbg !22757
  %77 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22757
  %m97 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %77, i32 0, i32 0, !dbg !22757, !ctir !22697
  %arraydecay98 = getelementptr inbounds [256 x i64], [256 x i64]* %m97, i64 0, i64 0, !dbg !22757, !ctir !2018
  %78 = load i64, i64* %x88, align 8, !dbg !22757
  %call99 = call i64 @ind(i64* %arraydecay98, i64 %78), !dbg !22757
  %79 = load i64, i64* %a, align 8, !dbg !22757
  %add100 = add i64 %call99, %79, !dbg !22757
  %80 = load i64, i64* %b, align 8, !dbg !22757
  %add101 = add i64 %add100, %80, !dbg !22757
  store i64 %add101, i64* %y89, align 8, !dbg !22757
  %81 = load i64*, i64** %m, align 8, !dbg !22757
  %arrayidx102 = getelementptr inbounds i64, i64* %81, i64 0, !dbg !22757, !ctir !2034
  store i64 %add101, i64* %arrayidx102, align 8, !dbg !22757
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22757
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !22757, !ctir !22697
  %arraydecay104 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 0, !dbg !22757, !ctir !2018
  %83 = load i64, i64* %y89, align 8, !dbg !22757
  %shr105 = lshr i64 %83, 8, !dbg !22757
  %call106 = call i64 @ind(i64* %arraydecay104, i64 %shr105), !dbg !22757
  %84 = load i64, i64* %x88, align 8, !dbg !22757
  %add107 = add i64 %call106, %84, !dbg !22757
  %call108 = call i64 @just(i64 %add107), !dbg !22757
  store i64 %call108, i64* %b, align 8, !dbg !22757
  %85 = load i64*, i64** %r, align 8, !dbg !22757
  %arrayidx109 = getelementptr inbounds i64, i64* %85, i64 0, !dbg !22757, !ctir !2034
  store i64 %call108, i64* %arrayidx109, align 8, !dbg !22757
  call void @llvm.dbg.declare(metadata i64* %x110, metadata !22759, metadata !DIExpression()), !dbg !22761
  call void @llvm.dbg.declare(metadata i64* %y111, metadata !22762, metadata !DIExpression()), !dbg !22761
  %86 = load i64, i64* %a, align 8, !dbg !22761
  %87 = load i64, i64* %a, align 8, !dbg !22761
  %call112 = call i64 @just(i64 %87), !dbg !22761
  %shr113 = lshr i64 %call112, 5, !dbg !22761
  %xor114 = xor i64 %86, %shr113, !dbg !22761
  %xor115 = xor i64 0, %xor114, !dbg !22761
  %88 = load i64*, i64** %m, align 8, !dbg !22761
  %arrayidx116 = getelementptr inbounds i64, i64* %88, i64 -127, !dbg !22761, !ctir !2034
  %89 = load i64, i64* %arrayidx116, align 8, !dbg !22761
  %add117 = add i64 %xor115, %89, !dbg !22761
  store i64 %add117, i64* %a, align 8, !dbg !22761
  %90 = load i64*, i64** %m, align 8, !dbg !22761
  %arrayidx118 = getelementptr inbounds i64, i64* %90, i64 1, !dbg !22761, !ctir !2034
  %91 = load i64, i64* %arrayidx118, align 8, !dbg !22761
  store i64 %91, i64* %x110, align 8, !dbg !22761
  %92 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22761
  %m119 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %92, i32 0, i32 0, !dbg !22761, !ctir !22697
  %arraydecay120 = getelementptr inbounds [256 x i64], [256 x i64]* %m119, i64 0, i64 0, !dbg !22761, !ctir !2018
  %93 = load i64, i64* %x110, align 8, !dbg !22761
  %call121 = call i64 @ind(i64* %arraydecay120, i64 %93), !dbg !22761
  %94 = load i64, i64* %a, align 8, !dbg !22761
  %add122 = add i64 %call121, %94, !dbg !22761
  %95 = load i64, i64* %b, align 8, !dbg !22761
  %add123 = add i64 %add122, %95, !dbg !22761
  store i64 %add123, i64* %y111, align 8, !dbg !22761
  %96 = load i64*, i64** %m, align 8, !dbg !22761
  %arrayidx124 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !22761, !ctir !2034
  store i64 %add123, i64* %arrayidx124, align 8, !dbg !22761
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22761
  %m125 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !22761, !ctir !22697
  %arraydecay126 = getelementptr inbounds [256 x i64], [256 x i64]* %m125, i64 0, i64 0, !dbg !22761, !ctir !2018
  %98 = load i64, i64* %y111, align 8, !dbg !22761
  %shr127 = lshr i64 %98, 8, !dbg !22761
  %call128 = call i64 @ind(i64* %arraydecay126, i64 %shr127), !dbg !22761
  %99 = load i64, i64* %x110, align 8, !dbg !22761
  %add129 = add i64 %call128, %99, !dbg !22761
  %call130 = call i64 @just(i64 %add129), !dbg !22761
  store i64 %call130, i64* %b, align 8, !dbg !22761
  %100 = load i64*, i64** %r, align 8, !dbg !22761
  %arrayidx131 = getelementptr inbounds i64, i64* %100, i64 1, !dbg !22761, !ctir !2034
  store i64 %call130, i64* %arrayidx131, align 8, !dbg !22761
  call void @llvm.dbg.declare(metadata i64* %x132, metadata !22763, metadata !DIExpression()), !dbg !22765
  call void @llvm.dbg.declare(metadata i64* %y133, metadata !22766, metadata !DIExpression()), !dbg !22765
  %101 = load i64, i64* %a, align 8, !dbg !22765
  %102 = load i64, i64* %a, align 8, !dbg !22765
  %shl134 = shl i64 %102, 12, !dbg !22765
  %xor135 = xor i64 %101, %shl134, !dbg !22765
  %xor136 = xor i64 0, %xor135, !dbg !22765
  %103 = load i64*, i64** %m, align 8, !dbg !22765
  %arrayidx137 = getelementptr inbounds i64, i64* %103, i64 -126, !dbg !22765, !ctir !2034
  %104 = load i64, i64* %arrayidx137, align 8, !dbg !22765
  %add138 = add i64 %xor136, %104, !dbg !22765
  store i64 %add138, i64* %a, align 8, !dbg !22765
  %105 = load i64*, i64** %m, align 8, !dbg !22765
  %arrayidx139 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !22765, !ctir !2034
  %106 = load i64, i64* %arrayidx139, align 8, !dbg !22765
  store i64 %106, i64* %x132, align 8, !dbg !22765
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22765
  %m140 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !22765, !ctir !22697
  %arraydecay141 = getelementptr inbounds [256 x i64], [256 x i64]* %m140, i64 0, i64 0, !dbg !22765, !ctir !2018
  %108 = load i64, i64* %x132, align 8, !dbg !22765
  %call142 = call i64 @ind(i64* %arraydecay141, i64 %108), !dbg !22765
  %109 = load i64, i64* %a, align 8, !dbg !22765
  %add143 = add i64 %call142, %109, !dbg !22765
  %110 = load i64, i64* %b, align 8, !dbg !22765
  %add144 = add i64 %add143, %110, !dbg !22765
  store i64 %add144, i64* %y133, align 8, !dbg !22765
  %111 = load i64*, i64** %m, align 8, !dbg !22765
  %arrayidx145 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !22765, !ctir !2034
  store i64 %add144, i64* %arrayidx145, align 8, !dbg !22765
  %112 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22765
  %m146 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %112, i32 0, i32 0, !dbg !22765, !ctir !22697
  %arraydecay147 = getelementptr inbounds [256 x i64], [256 x i64]* %m146, i64 0, i64 0, !dbg !22765, !ctir !2018
  %113 = load i64, i64* %y133, align 8, !dbg !22765
  %shr148 = lshr i64 %113, 8, !dbg !22765
  %call149 = call i64 @ind(i64* %arraydecay147, i64 %shr148), !dbg !22765
  %114 = load i64, i64* %x132, align 8, !dbg !22765
  %add150 = add i64 %call149, %114, !dbg !22765
  %call151 = call i64 @just(i64 %add150), !dbg !22765
  store i64 %call151, i64* %b, align 8, !dbg !22765
  %115 = load i64*, i64** %r, align 8, !dbg !22765
  %arrayidx152 = getelementptr inbounds i64, i64* %115, i64 2, !dbg !22765, !ctir !2034
  store i64 %call151, i64* %arrayidx152, align 8, !dbg !22765
  call void @llvm.dbg.declare(metadata i64* %x153, metadata !22767, metadata !DIExpression()), !dbg !22769
  call void @llvm.dbg.declare(metadata i64* %y154, metadata !22770, metadata !DIExpression()), !dbg !22769
  %116 = load i64, i64* %a, align 8, !dbg !22769
  %117 = load i64, i64* %a, align 8, !dbg !22769
  %call155 = call i64 @just(i64 %117), !dbg !22769
  %shr156 = lshr i64 %call155, 33, !dbg !22769
  %xor157 = xor i64 %116, %shr156, !dbg !22769
  %xor158 = xor i64 0, %xor157, !dbg !22769
  %118 = load i64*, i64** %m, align 8, !dbg !22769
  %arrayidx159 = getelementptr inbounds i64, i64* %118, i64 -125, !dbg !22769, !ctir !2034
  %119 = load i64, i64* %arrayidx159, align 8, !dbg !22769
  %add160 = add i64 %xor158, %119, !dbg !22769
  store i64 %add160, i64* %a, align 8, !dbg !22769
  %120 = load i64*, i64** %m, align 8, !dbg !22769
  %arrayidx161 = getelementptr inbounds i64, i64* %120, i64 3, !dbg !22769, !ctir !2034
  %121 = load i64, i64* %arrayidx161, align 8, !dbg !22769
  store i64 %121, i64* %x153, align 8, !dbg !22769
  %122 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22769
  %m162 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %122, i32 0, i32 0, !dbg !22769, !ctir !22697
  %arraydecay163 = getelementptr inbounds [256 x i64], [256 x i64]* %m162, i64 0, i64 0, !dbg !22769, !ctir !2018
  %123 = load i64, i64* %x153, align 8, !dbg !22769
  %call164 = call i64 @ind(i64* %arraydecay163, i64 %123), !dbg !22769
  %124 = load i64, i64* %a, align 8, !dbg !22769
  %add165 = add i64 %call164, %124, !dbg !22769
  %125 = load i64, i64* %b, align 8, !dbg !22769
  %add166 = add i64 %add165, %125, !dbg !22769
  store i64 %add166, i64* %y154, align 8, !dbg !22769
  %126 = load i64*, i64** %m, align 8, !dbg !22769
  %arrayidx167 = getelementptr inbounds i64, i64* %126, i64 3, !dbg !22769, !ctir !2034
  store i64 %add166, i64* %arrayidx167, align 8, !dbg !22769
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22769
  %m168 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !22769, !ctir !22697
  %arraydecay169 = getelementptr inbounds [256 x i64], [256 x i64]* %m168, i64 0, i64 0, !dbg !22769, !ctir !2018
  %128 = load i64, i64* %y154, align 8, !dbg !22769
  %shr170 = lshr i64 %128, 8, !dbg !22769
  %call171 = call i64 @ind(i64* %arraydecay169, i64 %shr170), !dbg !22769
  %129 = load i64, i64* %x153, align 8, !dbg !22769
  %add172 = add i64 %call171, %129, !dbg !22769
  %call173 = call i64 @just(i64 %add172), !dbg !22769
  store i64 %call173, i64* %b, align 8, !dbg !22769
  %130 = load i64*, i64** %r, align 8, !dbg !22769
  %arrayidx174 = getelementptr inbounds i64, i64* %130, i64 3, !dbg !22769, !ctir !2034
  store i64 %call173, i64* %arrayidx174, align 8, !dbg !22769
  %131 = load i64*, i64** %r, align 8, !dbg !22771
  %add.ptr175 = getelementptr inbounds i64, i64* %131, i64 4, !dbg !22771, !ctir !2019
  store i64* %add.ptr175, i64** %r, align 8, !dbg !22771
  br label %do.cond176, !dbg !22772

do.cond176:                                       ; preds = %do.body87
  %132 = load i64*, i64** %m, align 8, !dbg !22773
  %add.ptr177 = getelementptr inbounds i64, i64* %132, i64 4, !dbg !22773, !ctir !2019
  store i64* %add.ptr177, i64** %m, align 8, !dbg !22773
  %133 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22774
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %133, i32 0, i32 0, !dbg !22775, !ctir !22697
  %arraydecay179 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 0, !dbg !22774, !ctir !2018
  %add.ptr180 = getelementptr inbounds i64, i64* %arraydecay179, i64 256, !dbg !22776, !ctir !2019
  %cmp181 = icmp ult i64* %add.ptr177, %add.ptr180, !dbg !22777
  br i1 %cmp181, label %do.body87, label %do.end182, !dbg !22772, !llvm.loop !22778

do.end182:                                        ; preds = %do.cond176
  %134 = load i64, i64* %a, align 8, !dbg !22780
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22781
  %a183 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 1, !dbg !22782, !ctir !22697
  store i64 %134, i64* %a183, align 8, !dbg !22783, !ctir !2019
  %136 = load i64, i64* %b, align 8, !dbg !22784
  %137 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22785
  %b184 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %137, i32 0, i32 2, !dbg !22786, !ctir !22697
  store i64 %136, i64* %b184, align 8, !dbg !22787, !ctir !2019
  ret void, !dbg !22788
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ind(i64* %m, i64 %x) #4 !dbg !22789 {
entry:
  %m.addr = alloca i64*, align 8
  %x.addr = alloca i64, align 8
  %void_m = alloca i8*, align 8, !ctir !553
  %base_p = alloca i8*, align 8, !ctir !113
  %word_p = alloca i8*, align 8, !ctir !553
  %p = alloca i64*, align 8, !ctir !2038
  store i64* %m, i64** %m.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %m.addr, metadata !22792, metadata !DIExpression()), !dbg !22793
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !22794, metadata !DIExpression()), !dbg !22795
  call void @llvm.dbg.declare(metadata i8** %void_m, metadata !22796, metadata !DIExpression()), !dbg !22799
  %0 = load i64*, i64** %m.addr, align 8, !dbg !22800
  %1 = bitcast i64* %0 to i8*, !dbg !22800
  store i8* %1, i8** %void_m, align 8, !dbg !22799
  call void @llvm.dbg.declare(metadata i8** %base_p, metadata !22801, metadata !DIExpression()), !dbg !22802
  %2 = load i8*, i8** %void_m, align 8, !dbg !22803
  store i8* %2, i8** %base_p, align 8, !dbg !22802
  call void @llvm.dbg.declare(metadata i8** %word_p, metadata !22804, metadata !DIExpression()), !dbg !22805
  %3 = load i8*, i8** %base_p, align 8, !dbg !22806
  %4 = load i64, i64* %x.addr, align 8, !dbg !22807
  %and = and i64 %4, 2040, !dbg !22808
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %and, !dbg !22809, !ctir !114
  store i8* %add.ptr, i8** %word_p, align 8, !dbg !22805
  call void @llvm.dbg.declare(metadata i64** %p, metadata !22810, metadata !DIExpression()), !dbg !22811
  %5 = load i8*, i8** %word_p, align 8, !dbg !22812
  %6 = bitcast i8* %5 to i64*, !dbg !22812
  store i64* %6, i64** %p, align 8, !dbg !22811
  %7 = load i64*, i64** %p, align 8, !dbg !22813
  %8 = load i64, i64* %7, align 8, !dbg !22814, !ctir !2039
  ret i64 %8, !dbg !22815
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @just(i64 %a) #4 !dbg !22816 {
entry:
  %a.addr = alloca i64, align 8
  %desired_bits = alloca i64, align 8, !ctir !2019
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !22819, metadata !DIExpression()), !dbg !22820
  call void @llvm.dbg.declare(metadata i64* %desired_bits, metadata !22821, metadata !DIExpression()), !dbg !22822
  store i64 -1, i64* %desired_bits, align 8, !dbg !22822
  %0 = load i64, i64* %a.addr, align 8, !dbg !22823
  %1 = load i64, i64* %desired_bits, align 8, !dbg !22824
  %and = and i64 %0, %1, !dbg !22825
  ret i64 %and, !dbg !22826
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_seed(%struct.isaac_state* %s) #4 !dbg !22827 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %a = alloca i64, align 8, !ctir !2019
  %b = alloca i64, align 8, !ctir !2019
  %c = alloca i64, align 8, !ctir !2019
  %d = alloca i64, align 8, !ctir !2019
  %e = alloca i64, align 8, !ctir !2019
  %f = alloca i64, align 8, !ctir !2019
  %g = alloca i64, align 8, !ctir !2019
  %h = alloca i64, align 8, !ctir !2019
  %i = alloca i32, align 4, !ctir !5
  %i99 = alloca i32, align 4, !ctir !5
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !22830, metadata !DIExpression()), !dbg !22831
  call void @llvm.dbg.declare(metadata i64* %a, metadata !22832, metadata !DIExpression()), !dbg !22833
  store i64 7240739780546808700, i64* %a, align 8, !dbg !22833
  call void @llvm.dbg.declare(metadata i64* %b, metadata !22834, metadata !DIExpression()), !dbg !22835
  store i64 -5046086420515862430, i64* %b, align 8, !dbg !22835
  call void @llvm.dbg.declare(metadata i64* %c, metadata !22836, metadata !DIExpression()), !dbg !22837
  store i64 -8354558816804203872, i64* %c, align 8, !dbg !22837
  call void @llvm.dbg.declare(metadata i64* %d, metadata !22838, metadata !DIExpression()), !dbg !22839
  store i64 -5576812576440232668, i64* %d, align 8, !dbg !22839
  call void @llvm.dbg.declare(metadata i64* %e, metadata !22840, metadata !DIExpression()), !dbg !22841
  store i64 -9011610652101975858, i64* %e, align 8, !dbg !22841
  call void @llvm.dbg.declare(metadata i64* %f, metadata !22842, metadata !DIExpression()), !dbg !22843
  store i64 5259722845879046933, i64* %f, align 8, !dbg !22843
  call void @llvm.dbg.declare(metadata i64* %g, metadata !22844, metadata !DIExpression()), !dbg !22845
  store i64 -5865837416287532563, i64* %g, align 8, !dbg !22845
  call void @llvm.dbg.declare(metadata i64* %h, metadata !22846, metadata !DIExpression()), !dbg !22847
  store i64 -7424904924229222229, i64* %h, align 8, !dbg !22847
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22848, metadata !DIExpression()), !dbg !22850
  store i32 0, i32* %i, align 4, !dbg !22851
  br label %for.cond, !dbg !22851

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !22853
  %cmp = icmp slt i32 %0, 256, !dbg !22853
  br i1 %cmp, label %for.body, label %for.end, !dbg !22851

for.body:                                         ; preds = %for.cond
  %1 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %1, i32 0, i32 0, !dbg !22855, !ctir !22697
  %2 = load i32, i32* %i, align 4, !dbg !22855
  %idxprom = sext i32 %2 to i64, !dbg !22855
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 %idxprom, !dbg !22855, !ctir !2018
  %3 = load i64, i64* %arrayidx, align 8, !dbg !22855
  %4 = load i64, i64* %a, align 8, !dbg !22855
  %add = add i64 %4, %3, !dbg !22855
  store i64 %add, i64* %a, align 8, !dbg !22855
  %5 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %5, i32 0, i32 0, !dbg !22855, !ctir !22697
  %6 = load i32, i32* %i, align 4, !dbg !22855
  %add2 = add nsw i32 %6, 1, !dbg !22855
  %idxprom3 = sext i32 %add2 to i64, !dbg !22855
  %arrayidx4 = getelementptr inbounds [256 x i64], [256 x i64]* %m1, i64 0, i64 %idxprom3, !dbg !22855, !ctir !2018
  %7 = load i64, i64* %arrayidx4, align 8, !dbg !22855
  %8 = load i64, i64* %b, align 8, !dbg !22855
  %add5 = add i64 %8, %7, !dbg !22855
  store i64 %add5, i64* %b, align 8, !dbg !22855
  %9 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m6 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %9, i32 0, i32 0, !dbg !22855, !ctir !22697
  %10 = load i32, i32* %i, align 4, !dbg !22855
  %add7 = add nsw i32 %10, 2, !dbg !22855
  %idxprom8 = sext i32 %add7 to i64, !dbg !22855
  %arrayidx9 = getelementptr inbounds [256 x i64], [256 x i64]* %m6, i64 0, i64 %idxprom8, !dbg !22855, !ctir !2018
  %11 = load i64, i64* %arrayidx9, align 8, !dbg !22855
  %12 = load i64, i64* %c, align 8, !dbg !22855
  %add10 = add i64 %12, %11, !dbg !22855
  store i64 %add10, i64* %c, align 8, !dbg !22855
  %13 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m11 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %13, i32 0, i32 0, !dbg !22855, !ctir !22697
  %14 = load i32, i32* %i, align 4, !dbg !22855
  %add12 = add nsw i32 %14, 3, !dbg !22855
  %idxprom13 = sext i32 %add12 to i64, !dbg !22855
  %arrayidx14 = getelementptr inbounds [256 x i64], [256 x i64]* %m11, i64 0, i64 %idxprom13, !dbg !22855, !ctir !2018
  %15 = load i64, i64* %arrayidx14, align 8, !dbg !22855
  %16 = load i64, i64* %d, align 8, !dbg !22855
  %add15 = add i64 %16, %15, !dbg !22855
  store i64 %add15, i64* %d, align 8, !dbg !22855
  %17 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m16 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %17, i32 0, i32 0, !dbg !22855, !ctir !22697
  %18 = load i32, i32* %i, align 4, !dbg !22855
  %add17 = add nsw i32 %18, 4, !dbg !22855
  %idxprom18 = sext i32 %add17 to i64, !dbg !22855
  %arrayidx19 = getelementptr inbounds [256 x i64], [256 x i64]* %m16, i64 0, i64 %idxprom18, !dbg !22855, !ctir !2018
  %19 = load i64, i64* %arrayidx19, align 8, !dbg !22855
  %20 = load i64, i64* %e, align 8, !dbg !22855
  %add20 = add i64 %20, %19, !dbg !22855
  store i64 %add20, i64* %e, align 8, !dbg !22855
  %21 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m21 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %21, i32 0, i32 0, !dbg !22855, !ctir !22697
  %22 = load i32, i32* %i, align 4, !dbg !22855
  %add22 = add nsw i32 %22, 5, !dbg !22855
  %idxprom23 = sext i32 %add22 to i64, !dbg !22855
  %arrayidx24 = getelementptr inbounds [256 x i64], [256 x i64]* %m21, i64 0, i64 %idxprom23, !dbg !22855, !ctir !2018
  %23 = load i64, i64* %arrayidx24, align 8, !dbg !22855
  %24 = load i64, i64* %f, align 8, !dbg !22855
  %add25 = add i64 %24, %23, !dbg !22855
  store i64 %add25, i64* %f, align 8, !dbg !22855
  %25 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m26 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %25, i32 0, i32 0, !dbg !22855, !ctir !22697
  %26 = load i32, i32* %i, align 4, !dbg !22855
  %add27 = add nsw i32 %26, 6, !dbg !22855
  %idxprom28 = sext i32 %add27 to i64, !dbg !22855
  %arrayidx29 = getelementptr inbounds [256 x i64], [256 x i64]* %m26, i64 0, i64 %idxprom28, !dbg !22855, !ctir !2018
  %27 = load i64, i64* %arrayidx29, align 8, !dbg !22855
  %28 = load i64, i64* %g, align 8, !dbg !22855
  %add30 = add i64 %28, %27, !dbg !22855
  store i64 %add30, i64* %g, align 8, !dbg !22855
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m31 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !22855, !ctir !22697
  %30 = load i32, i32* %i, align 4, !dbg !22855
  %add32 = add nsw i32 %30, 7, !dbg !22855
  %idxprom33 = sext i32 %add32 to i64, !dbg !22855
  %arrayidx34 = getelementptr inbounds [256 x i64], [256 x i64]* %m31, i64 0, i64 %idxprom33, !dbg !22855, !ctir !2018
  %31 = load i64, i64* %arrayidx34, align 8, !dbg !22855
  %32 = load i64, i64* %h, align 8, !dbg !22855
  %add35 = add i64 %32, %31, !dbg !22855
  store i64 %add35, i64* %h, align 8, !dbg !22855
  %33 = load i64, i64* %e, align 8, !dbg !22857
  %34 = load i64, i64* %a, align 8, !dbg !22857
  %sub = sub i64 %34, %33, !dbg !22857
  store i64 %sub, i64* %a, align 8, !dbg !22857
  %35 = load i64, i64* %h, align 8, !dbg !22857
  %call = call i64 @just(i64 %35), !dbg !22857
  %shr = lshr i64 %call, 9, !dbg !22857
  %36 = load i64, i64* %f, align 8, !dbg !22857
  %xor = xor i64 %36, %shr, !dbg !22857
  store i64 %xor, i64* %f, align 8, !dbg !22857
  %37 = load i64, i64* %a, align 8, !dbg !22857
  %38 = load i64, i64* %h, align 8, !dbg !22857
  %add36 = add i64 %38, %37, !dbg !22857
  store i64 %add36, i64* %h, align 8, !dbg !22857
  %39 = load i64, i64* %f, align 8, !dbg !22857
  %40 = load i64, i64* %b, align 8, !dbg !22857
  %sub37 = sub i64 %40, %39, !dbg !22857
  store i64 %sub37, i64* %b, align 8, !dbg !22857
  %41 = load i64, i64* %a, align 8, !dbg !22857
  %shl = shl i64 %41, 9, !dbg !22857
  %42 = load i64, i64* %g, align 8, !dbg !22857
  %xor38 = xor i64 %42, %shl, !dbg !22857
  store i64 %xor38, i64* %g, align 8, !dbg !22857
  %43 = load i64, i64* %b, align 8, !dbg !22857
  %44 = load i64, i64* %a, align 8, !dbg !22857
  %add39 = add i64 %44, %43, !dbg !22857
  store i64 %add39, i64* %a, align 8, !dbg !22857
  %45 = load i64, i64* %g, align 8, !dbg !22857
  %46 = load i64, i64* %c, align 8, !dbg !22857
  %sub40 = sub i64 %46, %45, !dbg !22857
  store i64 %sub40, i64* %c, align 8, !dbg !22857
  %47 = load i64, i64* %b, align 8, !dbg !22857
  %call41 = call i64 @just(i64 %47), !dbg !22857
  %shr42 = lshr i64 %call41, 23, !dbg !22857
  %48 = load i64, i64* %h, align 8, !dbg !22857
  %xor43 = xor i64 %48, %shr42, !dbg !22857
  store i64 %xor43, i64* %h, align 8, !dbg !22857
  %49 = load i64, i64* %c, align 8, !dbg !22857
  %50 = load i64, i64* %b, align 8, !dbg !22857
  %add44 = add i64 %50, %49, !dbg !22857
  store i64 %add44, i64* %b, align 8, !dbg !22857
  %51 = load i64, i64* %h, align 8, !dbg !22857
  %52 = load i64, i64* %d, align 8, !dbg !22857
  %sub45 = sub i64 %52, %51, !dbg !22857
  store i64 %sub45, i64* %d, align 8, !dbg !22857
  %53 = load i64, i64* %c, align 8, !dbg !22857
  %shl46 = shl i64 %53, 15, !dbg !22857
  %54 = load i64, i64* %a, align 8, !dbg !22857
  %xor47 = xor i64 %54, %shl46, !dbg !22857
  store i64 %xor47, i64* %a, align 8, !dbg !22857
  %55 = load i64, i64* %d, align 8, !dbg !22857
  %56 = load i64, i64* %c, align 8, !dbg !22857
  %add48 = add i64 %56, %55, !dbg !22857
  store i64 %add48, i64* %c, align 8, !dbg !22857
  %57 = load i64, i64* %a, align 8, !dbg !22857
  %58 = load i64, i64* %e, align 8, !dbg !22857
  %sub49 = sub i64 %58, %57, !dbg !22857
  store i64 %sub49, i64* %e, align 8, !dbg !22857
  %59 = load i64, i64* %d, align 8, !dbg !22857
  %call50 = call i64 @just(i64 %59), !dbg !22857
  %shr51 = lshr i64 %call50, 14, !dbg !22857
  %60 = load i64, i64* %b, align 8, !dbg !22857
  %xor52 = xor i64 %60, %shr51, !dbg !22857
  store i64 %xor52, i64* %b, align 8, !dbg !22857
  %61 = load i64, i64* %e, align 8, !dbg !22857
  %62 = load i64, i64* %d, align 8, !dbg !22857
  %add53 = add i64 %62, %61, !dbg !22857
  store i64 %add53, i64* %d, align 8, !dbg !22857
  %63 = load i64, i64* %b, align 8, !dbg !22857
  %64 = load i64, i64* %f, align 8, !dbg !22857
  %sub54 = sub i64 %64, %63, !dbg !22857
  store i64 %sub54, i64* %f, align 8, !dbg !22857
  %65 = load i64, i64* %e, align 8, !dbg !22857
  %shl55 = shl i64 %65, 20, !dbg !22857
  %66 = load i64, i64* %c, align 8, !dbg !22857
  %xor56 = xor i64 %66, %shl55, !dbg !22857
  store i64 %xor56, i64* %c, align 8, !dbg !22857
  %67 = load i64, i64* %f, align 8, !dbg !22857
  %68 = load i64, i64* %e, align 8, !dbg !22857
  %add57 = add i64 %68, %67, !dbg !22857
  store i64 %add57, i64* %e, align 8, !dbg !22857
  %69 = load i64, i64* %c, align 8, !dbg !22857
  %70 = load i64, i64* %g, align 8, !dbg !22857
  %sub58 = sub i64 %70, %69, !dbg !22857
  store i64 %sub58, i64* %g, align 8, !dbg !22857
  %71 = load i64, i64* %f, align 8, !dbg !22857
  %call59 = call i64 @just(i64 %71), !dbg !22857
  %shr60 = lshr i64 %call59, 17, !dbg !22857
  %72 = load i64, i64* %d, align 8, !dbg !22857
  %xor61 = xor i64 %72, %shr60, !dbg !22857
  store i64 %xor61, i64* %d, align 8, !dbg !22857
  %73 = load i64, i64* %g, align 8, !dbg !22857
  %74 = load i64, i64* %f, align 8, !dbg !22857
  %add62 = add i64 %74, %73, !dbg !22857
  store i64 %add62, i64* %f, align 8, !dbg !22857
  %75 = load i64, i64* %d, align 8, !dbg !22857
  %76 = load i64, i64* %h, align 8, !dbg !22857
  %sub63 = sub i64 %76, %75, !dbg !22857
  store i64 %sub63, i64* %h, align 8, !dbg !22857
  %77 = load i64, i64* %g, align 8, !dbg !22857
  %shl64 = shl i64 %77, 14, !dbg !22857
  %78 = load i64, i64* %e, align 8, !dbg !22857
  %xor65 = xor i64 %78, %shl64, !dbg !22857
  store i64 %xor65, i64* %e, align 8, !dbg !22857
  %79 = load i64, i64* %h, align 8, !dbg !22857
  %80 = load i64, i64* %g, align 8, !dbg !22857
  %add66 = add i64 %80, %79, !dbg !22857
  store i64 %add66, i64* %g, align 8, !dbg !22857
  %81 = load i64, i64* %a, align 8, !dbg !22855
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m67 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !22855, !ctir !22697
  %83 = load i32, i32* %i, align 4, !dbg !22855
  %idxprom68 = sext i32 %83 to i64, !dbg !22855
  %arrayidx69 = getelementptr inbounds [256 x i64], [256 x i64]* %m67, i64 0, i64 %idxprom68, !dbg !22855, !ctir !2018
  store i64 %81, i64* %arrayidx69, align 8, !dbg !22855
  %84 = load i64, i64* %b, align 8, !dbg !22855
  %85 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %85, i32 0, i32 0, !dbg !22855, !ctir !22697
  %86 = load i32, i32* %i, align 4, !dbg !22855
  %add71 = add nsw i32 %86, 1, !dbg !22855
  %idxprom72 = sext i32 %add71 to i64, !dbg !22855
  %arrayidx73 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 %idxprom72, !dbg !22855, !ctir !2018
  store i64 %84, i64* %arrayidx73, align 8, !dbg !22855
  %87 = load i64, i64* %c, align 8, !dbg !22855
  %88 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m74 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %88, i32 0, i32 0, !dbg !22855, !ctir !22697
  %89 = load i32, i32* %i, align 4, !dbg !22855
  %add75 = add nsw i32 %89, 2, !dbg !22855
  %idxprom76 = sext i32 %add75 to i64, !dbg !22855
  %arrayidx77 = getelementptr inbounds [256 x i64], [256 x i64]* %m74, i64 0, i64 %idxprom76, !dbg !22855, !ctir !2018
  store i64 %87, i64* %arrayidx77, align 8, !dbg !22855
  %90 = load i64, i64* %d, align 8, !dbg !22855
  %91 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m78 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %91, i32 0, i32 0, !dbg !22855, !ctir !22697
  %92 = load i32, i32* %i, align 4, !dbg !22855
  %add79 = add nsw i32 %92, 3, !dbg !22855
  %idxprom80 = sext i32 %add79 to i64, !dbg !22855
  %arrayidx81 = getelementptr inbounds [256 x i64], [256 x i64]* %m78, i64 0, i64 %idxprom80, !dbg !22855, !ctir !2018
  store i64 %90, i64* %arrayidx81, align 8, !dbg !22855
  %93 = load i64, i64* %e, align 8, !dbg !22855
  %94 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m82 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %94, i32 0, i32 0, !dbg !22855, !ctir !22697
  %95 = load i32, i32* %i, align 4, !dbg !22855
  %add83 = add nsw i32 %95, 4, !dbg !22855
  %idxprom84 = sext i32 %add83 to i64, !dbg !22855
  %arrayidx85 = getelementptr inbounds [256 x i64], [256 x i64]* %m82, i64 0, i64 %idxprom84, !dbg !22855, !ctir !2018
  store i64 %93, i64* %arrayidx85, align 8, !dbg !22855
  %96 = load i64, i64* %f, align 8, !dbg !22855
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m86 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !22855, !ctir !22697
  %98 = load i32, i32* %i, align 4, !dbg !22855
  %add87 = add nsw i32 %98, 5, !dbg !22855
  %idxprom88 = sext i32 %add87 to i64, !dbg !22855
  %arrayidx89 = getelementptr inbounds [256 x i64], [256 x i64]* %m86, i64 0, i64 %idxprom88, !dbg !22855, !ctir !2018
  store i64 %96, i64* %arrayidx89, align 8, !dbg !22855
  %99 = load i64, i64* %g, align 8, !dbg !22855
  %100 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m90 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %100, i32 0, i32 0, !dbg !22855, !ctir !22697
  %101 = load i32, i32* %i, align 4, !dbg !22855
  %add91 = add nsw i32 %101, 6, !dbg !22855
  %idxprom92 = sext i32 %add91 to i64, !dbg !22855
  %arrayidx93 = getelementptr inbounds [256 x i64], [256 x i64]* %m90, i64 0, i64 %idxprom92, !dbg !22855, !ctir !2018
  store i64 %99, i64* %arrayidx93, align 8, !dbg !22855
  %102 = load i64, i64* %h, align 8, !dbg !22855
  %103 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22855
  %m94 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %103, i32 0, i32 0, !dbg !22855, !ctir !22697
  %104 = load i32, i32* %i, align 4, !dbg !22855
  %add95 = add nsw i32 %104, 7, !dbg !22855
  %idxprom96 = sext i32 %add95 to i64, !dbg !22855
  %arrayidx97 = getelementptr inbounds [256 x i64], [256 x i64]* %m94, i64 0, i64 %idxprom96, !dbg !22855, !ctir !2018
  store i64 %102, i64* %arrayidx97, align 8, !dbg !22855
  br label %for.inc, !dbg !22855

for.inc:                                          ; preds = %for.body
  %105 = load i32, i32* %i, align 4, !dbg !22853
  %add98 = add nsw i32 %105, 8, !dbg !22853
  store i32 %add98, i32* %i, align 4, !dbg !22853
  br label %for.cond, !dbg !22853, !llvm.loop !22859

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i99, metadata !22860, metadata !DIExpression()), !dbg !22862
  store i32 0, i32* %i99, align 4, !dbg !22863
  br label %for.cond100, !dbg !22863

for.cond100:                                      ; preds = %for.inc209, %for.end
  %106 = load i32, i32* %i99, align 4, !dbg !22865
  %cmp101 = icmp slt i32 %106, 256, !dbg !22865
  br i1 %cmp101, label %for.body102, label %for.end211, !dbg !22863

for.body102:                                      ; preds = %for.cond100
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !22867, !ctir !22697
  %108 = load i32, i32* %i99, align 4, !dbg !22867
  %idxprom104 = sext i32 %108 to i64, !dbg !22867
  %arrayidx105 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 %idxprom104, !dbg !22867, !ctir !2018
  %109 = load i64, i64* %arrayidx105, align 8, !dbg !22867
  %110 = load i64, i64* %a, align 8, !dbg !22867
  %add106 = add i64 %110, %109, !dbg !22867
  store i64 %add106, i64* %a, align 8, !dbg !22867
  %111 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m107 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %111, i32 0, i32 0, !dbg !22867, !ctir !22697
  %112 = load i32, i32* %i99, align 4, !dbg !22867
  %add108 = add nsw i32 %112, 1, !dbg !22867
  %idxprom109 = sext i32 %add108 to i64, !dbg !22867
  %arrayidx110 = getelementptr inbounds [256 x i64], [256 x i64]* %m107, i64 0, i64 %idxprom109, !dbg !22867, !ctir !2018
  %113 = load i64, i64* %arrayidx110, align 8, !dbg !22867
  %114 = load i64, i64* %b, align 8, !dbg !22867
  %add111 = add i64 %114, %113, !dbg !22867
  store i64 %add111, i64* %b, align 8, !dbg !22867
  %115 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m112 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %115, i32 0, i32 0, !dbg !22867, !ctir !22697
  %116 = load i32, i32* %i99, align 4, !dbg !22867
  %add113 = add nsw i32 %116, 2, !dbg !22867
  %idxprom114 = sext i32 %add113 to i64, !dbg !22867
  %arrayidx115 = getelementptr inbounds [256 x i64], [256 x i64]* %m112, i64 0, i64 %idxprom114, !dbg !22867, !ctir !2018
  %117 = load i64, i64* %arrayidx115, align 8, !dbg !22867
  %118 = load i64, i64* %c, align 8, !dbg !22867
  %add116 = add i64 %118, %117, !dbg !22867
  store i64 %add116, i64* %c, align 8, !dbg !22867
  %119 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m117 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %119, i32 0, i32 0, !dbg !22867, !ctir !22697
  %120 = load i32, i32* %i99, align 4, !dbg !22867
  %add118 = add nsw i32 %120, 3, !dbg !22867
  %idxprom119 = sext i32 %add118 to i64, !dbg !22867
  %arrayidx120 = getelementptr inbounds [256 x i64], [256 x i64]* %m117, i64 0, i64 %idxprom119, !dbg !22867, !ctir !2018
  %121 = load i64, i64* %arrayidx120, align 8, !dbg !22867
  %122 = load i64, i64* %d, align 8, !dbg !22867
  %add121 = add i64 %122, %121, !dbg !22867
  store i64 %add121, i64* %d, align 8, !dbg !22867
  %123 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m122 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %123, i32 0, i32 0, !dbg !22867, !ctir !22697
  %124 = load i32, i32* %i99, align 4, !dbg !22867
  %add123 = add nsw i32 %124, 4, !dbg !22867
  %idxprom124 = sext i32 %add123 to i64, !dbg !22867
  %arrayidx125 = getelementptr inbounds [256 x i64], [256 x i64]* %m122, i64 0, i64 %idxprom124, !dbg !22867, !ctir !2018
  %125 = load i64, i64* %arrayidx125, align 8, !dbg !22867
  %126 = load i64, i64* %e, align 8, !dbg !22867
  %add126 = add i64 %126, %125, !dbg !22867
  store i64 %add126, i64* %e, align 8, !dbg !22867
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m127 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !22867, !ctir !22697
  %128 = load i32, i32* %i99, align 4, !dbg !22867
  %add128 = add nsw i32 %128, 5, !dbg !22867
  %idxprom129 = sext i32 %add128 to i64, !dbg !22867
  %arrayidx130 = getelementptr inbounds [256 x i64], [256 x i64]* %m127, i64 0, i64 %idxprom129, !dbg !22867, !ctir !2018
  %129 = load i64, i64* %arrayidx130, align 8, !dbg !22867
  %130 = load i64, i64* %f, align 8, !dbg !22867
  %add131 = add i64 %130, %129, !dbg !22867
  store i64 %add131, i64* %f, align 8, !dbg !22867
  %131 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m132 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %131, i32 0, i32 0, !dbg !22867, !ctir !22697
  %132 = load i32, i32* %i99, align 4, !dbg !22867
  %add133 = add nsw i32 %132, 6, !dbg !22867
  %idxprom134 = sext i32 %add133 to i64, !dbg !22867
  %arrayidx135 = getelementptr inbounds [256 x i64], [256 x i64]* %m132, i64 0, i64 %idxprom134, !dbg !22867, !ctir !2018
  %133 = load i64, i64* %arrayidx135, align 8, !dbg !22867
  %134 = load i64, i64* %g, align 8, !dbg !22867
  %add136 = add i64 %134, %133, !dbg !22867
  store i64 %add136, i64* %g, align 8, !dbg !22867
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m137 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 0, !dbg !22867, !ctir !22697
  %136 = load i32, i32* %i99, align 4, !dbg !22867
  %add138 = add nsw i32 %136, 7, !dbg !22867
  %idxprom139 = sext i32 %add138 to i64, !dbg !22867
  %arrayidx140 = getelementptr inbounds [256 x i64], [256 x i64]* %m137, i64 0, i64 %idxprom139, !dbg !22867, !ctir !2018
  %137 = load i64, i64* %arrayidx140, align 8, !dbg !22867
  %138 = load i64, i64* %h, align 8, !dbg !22867
  %add141 = add i64 %138, %137, !dbg !22867
  store i64 %add141, i64* %h, align 8, !dbg !22867
  %139 = load i64, i64* %e, align 8, !dbg !22869
  %140 = load i64, i64* %a, align 8, !dbg !22869
  %sub142 = sub i64 %140, %139, !dbg !22869
  store i64 %sub142, i64* %a, align 8, !dbg !22869
  %141 = load i64, i64* %h, align 8, !dbg !22869
  %call143 = call i64 @just(i64 %141), !dbg !22869
  %shr144 = lshr i64 %call143, 9, !dbg !22869
  %142 = load i64, i64* %f, align 8, !dbg !22869
  %xor145 = xor i64 %142, %shr144, !dbg !22869
  store i64 %xor145, i64* %f, align 8, !dbg !22869
  %143 = load i64, i64* %a, align 8, !dbg !22869
  %144 = load i64, i64* %h, align 8, !dbg !22869
  %add146 = add i64 %144, %143, !dbg !22869
  store i64 %add146, i64* %h, align 8, !dbg !22869
  %145 = load i64, i64* %f, align 8, !dbg !22869
  %146 = load i64, i64* %b, align 8, !dbg !22869
  %sub147 = sub i64 %146, %145, !dbg !22869
  store i64 %sub147, i64* %b, align 8, !dbg !22869
  %147 = load i64, i64* %a, align 8, !dbg !22869
  %shl148 = shl i64 %147, 9, !dbg !22869
  %148 = load i64, i64* %g, align 8, !dbg !22869
  %xor149 = xor i64 %148, %shl148, !dbg !22869
  store i64 %xor149, i64* %g, align 8, !dbg !22869
  %149 = load i64, i64* %b, align 8, !dbg !22869
  %150 = load i64, i64* %a, align 8, !dbg !22869
  %add150 = add i64 %150, %149, !dbg !22869
  store i64 %add150, i64* %a, align 8, !dbg !22869
  %151 = load i64, i64* %g, align 8, !dbg !22869
  %152 = load i64, i64* %c, align 8, !dbg !22869
  %sub151 = sub i64 %152, %151, !dbg !22869
  store i64 %sub151, i64* %c, align 8, !dbg !22869
  %153 = load i64, i64* %b, align 8, !dbg !22869
  %call152 = call i64 @just(i64 %153), !dbg !22869
  %shr153 = lshr i64 %call152, 23, !dbg !22869
  %154 = load i64, i64* %h, align 8, !dbg !22869
  %xor154 = xor i64 %154, %shr153, !dbg !22869
  store i64 %xor154, i64* %h, align 8, !dbg !22869
  %155 = load i64, i64* %c, align 8, !dbg !22869
  %156 = load i64, i64* %b, align 8, !dbg !22869
  %add155 = add i64 %156, %155, !dbg !22869
  store i64 %add155, i64* %b, align 8, !dbg !22869
  %157 = load i64, i64* %h, align 8, !dbg !22869
  %158 = load i64, i64* %d, align 8, !dbg !22869
  %sub156 = sub i64 %158, %157, !dbg !22869
  store i64 %sub156, i64* %d, align 8, !dbg !22869
  %159 = load i64, i64* %c, align 8, !dbg !22869
  %shl157 = shl i64 %159, 15, !dbg !22869
  %160 = load i64, i64* %a, align 8, !dbg !22869
  %xor158 = xor i64 %160, %shl157, !dbg !22869
  store i64 %xor158, i64* %a, align 8, !dbg !22869
  %161 = load i64, i64* %d, align 8, !dbg !22869
  %162 = load i64, i64* %c, align 8, !dbg !22869
  %add159 = add i64 %162, %161, !dbg !22869
  store i64 %add159, i64* %c, align 8, !dbg !22869
  %163 = load i64, i64* %a, align 8, !dbg !22869
  %164 = load i64, i64* %e, align 8, !dbg !22869
  %sub160 = sub i64 %164, %163, !dbg !22869
  store i64 %sub160, i64* %e, align 8, !dbg !22869
  %165 = load i64, i64* %d, align 8, !dbg !22869
  %call161 = call i64 @just(i64 %165), !dbg !22869
  %shr162 = lshr i64 %call161, 14, !dbg !22869
  %166 = load i64, i64* %b, align 8, !dbg !22869
  %xor163 = xor i64 %166, %shr162, !dbg !22869
  store i64 %xor163, i64* %b, align 8, !dbg !22869
  %167 = load i64, i64* %e, align 8, !dbg !22869
  %168 = load i64, i64* %d, align 8, !dbg !22869
  %add164 = add i64 %168, %167, !dbg !22869
  store i64 %add164, i64* %d, align 8, !dbg !22869
  %169 = load i64, i64* %b, align 8, !dbg !22869
  %170 = load i64, i64* %f, align 8, !dbg !22869
  %sub165 = sub i64 %170, %169, !dbg !22869
  store i64 %sub165, i64* %f, align 8, !dbg !22869
  %171 = load i64, i64* %e, align 8, !dbg !22869
  %shl166 = shl i64 %171, 20, !dbg !22869
  %172 = load i64, i64* %c, align 8, !dbg !22869
  %xor167 = xor i64 %172, %shl166, !dbg !22869
  store i64 %xor167, i64* %c, align 8, !dbg !22869
  %173 = load i64, i64* %f, align 8, !dbg !22869
  %174 = load i64, i64* %e, align 8, !dbg !22869
  %add168 = add i64 %174, %173, !dbg !22869
  store i64 %add168, i64* %e, align 8, !dbg !22869
  %175 = load i64, i64* %c, align 8, !dbg !22869
  %176 = load i64, i64* %g, align 8, !dbg !22869
  %sub169 = sub i64 %176, %175, !dbg !22869
  store i64 %sub169, i64* %g, align 8, !dbg !22869
  %177 = load i64, i64* %f, align 8, !dbg !22869
  %call170 = call i64 @just(i64 %177), !dbg !22869
  %shr171 = lshr i64 %call170, 17, !dbg !22869
  %178 = load i64, i64* %d, align 8, !dbg !22869
  %xor172 = xor i64 %178, %shr171, !dbg !22869
  store i64 %xor172, i64* %d, align 8, !dbg !22869
  %179 = load i64, i64* %g, align 8, !dbg !22869
  %180 = load i64, i64* %f, align 8, !dbg !22869
  %add173 = add i64 %180, %179, !dbg !22869
  store i64 %add173, i64* %f, align 8, !dbg !22869
  %181 = load i64, i64* %d, align 8, !dbg !22869
  %182 = load i64, i64* %h, align 8, !dbg !22869
  %sub174 = sub i64 %182, %181, !dbg !22869
  store i64 %sub174, i64* %h, align 8, !dbg !22869
  %183 = load i64, i64* %g, align 8, !dbg !22869
  %shl175 = shl i64 %183, 14, !dbg !22869
  %184 = load i64, i64* %e, align 8, !dbg !22869
  %xor176 = xor i64 %184, %shl175, !dbg !22869
  store i64 %xor176, i64* %e, align 8, !dbg !22869
  %185 = load i64, i64* %h, align 8, !dbg !22869
  %186 = load i64, i64* %g, align 8, !dbg !22869
  %add177 = add i64 %186, %185, !dbg !22869
  store i64 %add177, i64* %g, align 8, !dbg !22869
  %187 = load i64, i64* %a, align 8, !dbg !22867
  %188 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %188, i32 0, i32 0, !dbg !22867, !ctir !22697
  %189 = load i32, i32* %i99, align 4, !dbg !22867
  %idxprom179 = sext i32 %189 to i64, !dbg !22867
  %arrayidx180 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 %idxprom179, !dbg !22867, !ctir !2018
  store i64 %187, i64* %arrayidx180, align 8, !dbg !22867
  %190 = load i64, i64* %b, align 8, !dbg !22867
  %191 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m181 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %191, i32 0, i32 0, !dbg !22867, !ctir !22697
  %192 = load i32, i32* %i99, align 4, !dbg !22867
  %add182 = add nsw i32 %192, 1, !dbg !22867
  %idxprom183 = sext i32 %add182 to i64, !dbg !22867
  %arrayidx184 = getelementptr inbounds [256 x i64], [256 x i64]* %m181, i64 0, i64 %idxprom183, !dbg !22867, !ctir !2018
  store i64 %190, i64* %arrayidx184, align 8, !dbg !22867
  %193 = load i64, i64* %c, align 8, !dbg !22867
  %194 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m185 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %194, i32 0, i32 0, !dbg !22867, !ctir !22697
  %195 = load i32, i32* %i99, align 4, !dbg !22867
  %add186 = add nsw i32 %195, 2, !dbg !22867
  %idxprom187 = sext i32 %add186 to i64, !dbg !22867
  %arrayidx188 = getelementptr inbounds [256 x i64], [256 x i64]* %m185, i64 0, i64 %idxprom187, !dbg !22867, !ctir !2018
  store i64 %193, i64* %arrayidx188, align 8, !dbg !22867
  %196 = load i64, i64* %d, align 8, !dbg !22867
  %197 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m189 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %197, i32 0, i32 0, !dbg !22867, !ctir !22697
  %198 = load i32, i32* %i99, align 4, !dbg !22867
  %add190 = add nsw i32 %198, 3, !dbg !22867
  %idxprom191 = sext i32 %add190 to i64, !dbg !22867
  %arrayidx192 = getelementptr inbounds [256 x i64], [256 x i64]* %m189, i64 0, i64 %idxprom191, !dbg !22867, !ctir !2018
  store i64 %196, i64* %arrayidx192, align 8, !dbg !22867
  %199 = load i64, i64* %e, align 8, !dbg !22867
  %200 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m193 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %200, i32 0, i32 0, !dbg !22867, !ctir !22697
  %201 = load i32, i32* %i99, align 4, !dbg !22867
  %add194 = add nsw i32 %201, 4, !dbg !22867
  %idxprom195 = sext i32 %add194 to i64, !dbg !22867
  %arrayidx196 = getelementptr inbounds [256 x i64], [256 x i64]* %m193, i64 0, i64 %idxprom195, !dbg !22867, !ctir !2018
  store i64 %199, i64* %arrayidx196, align 8, !dbg !22867
  %202 = load i64, i64* %f, align 8, !dbg !22867
  %203 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m197 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %203, i32 0, i32 0, !dbg !22867, !ctir !22697
  %204 = load i32, i32* %i99, align 4, !dbg !22867
  %add198 = add nsw i32 %204, 5, !dbg !22867
  %idxprom199 = sext i32 %add198 to i64, !dbg !22867
  %arrayidx200 = getelementptr inbounds [256 x i64], [256 x i64]* %m197, i64 0, i64 %idxprom199, !dbg !22867, !ctir !2018
  store i64 %202, i64* %arrayidx200, align 8, !dbg !22867
  %205 = load i64, i64* %g, align 8, !dbg !22867
  %206 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m201 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %206, i32 0, i32 0, !dbg !22867, !ctir !22697
  %207 = load i32, i32* %i99, align 4, !dbg !22867
  %add202 = add nsw i32 %207, 6, !dbg !22867
  %idxprom203 = sext i32 %add202 to i64, !dbg !22867
  %arrayidx204 = getelementptr inbounds [256 x i64], [256 x i64]* %m201, i64 0, i64 %idxprom203, !dbg !22867, !ctir !2018
  store i64 %205, i64* %arrayidx204, align 8, !dbg !22867
  %208 = load i64, i64* %h, align 8, !dbg !22867
  %209 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22867
  %m205 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %209, i32 0, i32 0, !dbg !22867, !ctir !22697
  %210 = load i32, i32* %i99, align 4, !dbg !22867
  %add206 = add nsw i32 %210, 7, !dbg !22867
  %idxprom207 = sext i32 %add206 to i64, !dbg !22867
  %arrayidx208 = getelementptr inbounds [256 x i64], [256 x i64]* %m205, i64 0, i64 %idxprom207, !dbg !22867, !ctir !2018
  store i64 %208, i64* %arrayidx208, align 8, !dbg !22867
  br label %for.inc209, !dbg !22867

for.inc209:                                       ; preds = %for.body102
  %211 = load i32, i32* %i99, align 4, !dbg !22865
  %add210 = add nsw i32 %211, 8, !dbg !22865
  store i32 %add210, i32* %i99, align 4, !dbg !22865
  br label %for.cond100, !dbg !22865, !llvm.loop !22871

for.end211:                                       ; preds = %for.cond100
  %212 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22872
  %c212 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %212, i32 0, i32 3, !dbg !22873, !ctir !22697
  store i64 0, i64* %c212, align 8, !dbg !22874, !ctir !2019
  %213 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22875
  %b213 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %213, i32 0, i32 2, !dbg !22876, !ctir !22697
  store i64 0, i64* %b213, align 8, !dbg !22877, !ctir !2019
  %214 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22878
  %a214 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %214, i32 0, i32 1, !dbg !22879, !ctir !22697
  store i64 0, i64* %a214, align 8, !dbg !22880, !ctir !2019
  ret void, !dbg !22881
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dup_safer(i32 %fd) #4 !dbg !22882 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !22884, metadata !DIExpression()), !dbg !22885
  %0 = load i32, i32* %fd.addr, align 4, !dbg !22886
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 3), !dbg !22887
  ret i32 %call, !dbg !22888
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @explicit_bzero(i8* nonnull %s, i64 %len) #4 !dbg !22889 {
entry:
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !22893, metadata !DIExpression()), !dbg !22894
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !22895, metadata !DIExpression()), !dbg !22896
  %0 = load i8*, i8** %s.addr, align 8, !dbg !22897
  %1 = load i64, i64* %len.addr, align 8, !dbg !22898
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %1, i1 false), !dbg !22899
  ret void, !dbg !22900
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #4 !dbg !22901 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %saved_errno = alloca i32, align 4, !ctir !5
  %fd = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !22945, metadata !DIExpression()), !dbg !22946
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !22947, metadata !DIExpression()), !dbg !22948
  store i32 0, i32* %saved_errno, align 4, !dbg !22948
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !22949, metadata !DIExpression()), !dbg !22950
  call void @llvm.dbg.declare(metadata i32* %result, metadata !22951, metadata !DIExpression()), !dbg !22952
  store i32 0, i32* %result, align 4, !dbg !22952
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !22953
  %call = call i32 @fileno(%struct._IO_FILE* %0) #12, !dbg !22954
  store i32 %call, i32* %fd, align 4, !dbg !22955
  %1 = load i32, i32* %fd, align 4, !dbg !22956
  %cmp = icmp slt i32 %1, 0, !dbg !22958
  br i1 %cmp, label %if.then, label %if.end, !dbg !22959

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !22960
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !22961
  store i32 %call1, i32* %retval, align 4, !dbg !22962
  br label %return, !dbg !22962

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !22963
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #12, !dbg !22963
  %cmp3 = icmp ne i32 %call2, 0, !dbg !22963
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !22965

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !22966
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #12, !dbg !22967
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #12, !dbg !22968
  %cmp6 = icmp ne i64 %call5, -1, !dbg !22969
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !22970

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !22971
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !22972
  %tobool = icmp ne i32 %call7, 0, !dbg !22972
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !22973

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #15, !dbg !22974
  %6 = load i32, i32* %call9, align 4, !dbg !22974, !ctir !5
  store i32 %6, i32* %saved_errno, align 4, !dbg !22975
  br label %if.end10, !dbg !22976

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !22977
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !22978
  store i32 %call11, i32* %result, align 4, !dbg !22979
  %8 = load i32, i32* %saved_errno, align 4, !dbg !22980
  %cmp12 = icmp ne i32 %8, 0, !dbg !22982
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !22983

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !22984
  %call14 = call i32* @__errno_location() #15, !dbg !22986
  store i32 %9, i32* %call14, align 4, !dbg !22987, !ctir !5
  store i32 -1, i32* %result, align 4, !dbg !22988
  br label %if.end15, !dbg !22989

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !22990
  store i32 %10, i32* %retval, align 4, !dbg !22991
  br label %return, !dbg !22991

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !22992
  ret i32 %11, !dbg !22992
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fcntl(i32 %fd, i32 %action, ...) #4 !dbg !22993 {
entry:
  %fd.addr = alloca i32, align 4
  %action.addr = alloca i32, align 4
  %arg = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1042
  %result = alloca i32, align 4, !ctir !5
  %target = alloca i32, align 4, !ctir !5
  %target4 = alloca i32, align 4, !ctir !5
  %x = alloca i32, align 4, !ctir !5
  %p = alloca i8*, align 8, !ctir !47
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !22996, metadata !DIExpression()), !dbg !22997
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !22998, metadata !DIExpression()), !dbg !22999
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %arg, metadata !23000, metadata !DIExpression()), !dbg !23001
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23002, metadata !DIExpression()), !dbg !23003
  store i32 -1, i32* %result, align 4, !dbg !23003
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23004, !ctir !1042
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !23004
  call void @llvm.va_start(i8* %arraydecay1), !dbg !23004
  %0 = load i32, i32* %action.addr, align 4, !dbg !23005
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1030, label %sw.bb3
  ], !dbg !23006

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target, metadata !23007, metadata !DIExpression()), !dbg !23010
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23011, !ctir !1042
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !23011
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !23011
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !23011
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !23011

vaarg.in_reg:                                     ; preds = %sw.bb
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !23011
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !23011
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !23011
  %3 = bitcast i8* %2 to i32*, !dbg !23011
  %4 = add i32 %gp_offset, 8, !dbg !23011
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !23011
  br label %vaarg.end, !dbg !23011

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !23011
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !23011
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !23011
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !23011
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !23011
  br label %vaarg.end, !dbg !23011

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !23011
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !23011
  store i32 %6, i32* %target, align 4, !dbg !23010
  %7 = load i32, i32* %fd.addr, align 4, !dbg !23012
  %8 = load i32, i32* %target, align 4, !dbg !23013
  %call = call i32 @rpl_fcntl_DUPFD(i32 %7, i32 %8), !dbg !23014
  store i32 %call, i32* %result, align 4, !dbg !23015
  br label %sw.epilog48, !dbg !23016

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target4, metadata !23017, metadata !DIExpression()), !dbg !23019
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23020, !ctir !1042
  %gp_offset_p6 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 0, !dbg !23020
  %gp_offset7 = load i32, i32* %gp_offset_p6, align 16, !dbg !23020
  %fits_in_gp8 = icmp ule i32 %gp_offset7, 40, !dbg !23020
  br i1 %fits_in_gp8, label %vaarg.in_reg9, label %vaarg.in_mem11, !dbg !23020

vaarg.in_reg9:                                    ; preds = %sw.bb3
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 3, !dbg !23020
  %reg_save_area10 = load i8*, i8** %9, align 16, !dbg !23020
  %10 = getelementptr i8, i8* %reg_save_area10, i32 %gp_offset7, !dbg !23020
  %11 = bitcast i8* %10 to i32*, !dbg !23020
  %12 = add i32 %gp_offset7, 8, !dbg !23020
  store i32 %12, i32* %gp_offset_p6, align 16, !dbg !23020
  br label %vaarg.end15, !dbg !23020

vaarg.in_mem11:                                   ; preds = %sw.bb3
  %overflow_arg_area_p12 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 2, !dbg !23020
  %overflow_arg_area13 = load i8*, i8** %overflow_arg_area_p12, align 8, !dbg !23020
  %13 = bitcast i8* %overflow_arg_area13 to i32*, !dbg !23020
  %overflow_arg_area.next14 = getelementptr i8, i8* %overflow_arg_area13, i32 8, !dbg !23020
  store i8* %overflow_arg_area.next14, i8** %overflow_arg_area_p12, align 8, !dbg !23020
  br label %vaarg.end15, !dbg !23020

vaarg.end15:                                      ; preds = %vaarg.in_mem11, %vaarg.in_reg9
  %vaarg.addr16 = phi i32* [ %11, %vaarg.in_reg9 ], [ %13, %vaarg.in_mem11 ], !dbg !23020
  %14 = load i32, i32* %vaarg.addr16, align 4, !dbg !23020
  store i32 %14, i32* %target4, align 4, !dbg !23019
  %15 = load i32, i32* %fd.addr, align 4, !dbg !23021
  %16 = load i32, i32* %target4, align 4, !dbg !23022
  %call17 = call i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %15, i32 %16), !dbg !23023
  store i32 %call17, i32* %result, align 4, !dbg !23024
  br label %sw.epilog48, !dbg !23025

sw.default:                                       ; preds = %entry
  %17 = load i32, i32* %action.addr, align 4, !dbg !23026
  switch i32 %17, label %sw.default34 [
    i32 1, label %sw.bb18
    i32 3, label %sw.bb18
    i32 1025, label %sw.bb18
    i32 9, label %sw.bb18
    i32 1032, label %sw.bb18
    i32 11, label %sw.bb18
    i32 0, label %sw.bb20
    i32 1030, label %sw.bb20
    i32 1026, label %sw.bb20
    i32 2, label %sw.bb20
    i32 4, label %sw.bb20
    i32 1024, label %sw.bb20
    i32 8, label %sw.bb20
    i32 1031, label %sw.bb20
    i32 10, label %sw.bb20
  ], !dbg !23028

sw.bb18:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  %18 = load i32, i32* %fd.addr, align 4, !dbg !23029
  %19 = load i32, i32* %action.addr, align 4, !dbg !23031
  %call19 = call i32 (i32, i32, ...) @fcntl(i32 %18, i32 %19), !dbg !23032
  store i32 %call19, i32* %result, align 4, !dbg !23033
  br label %sw.epilog, !dbg !23034

sw.bb20:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  call void @llvm.dbg.declare(metadata i32* %x, metadata !23035, metadata !DIExpression()), !dbg !23037
  %arraydecay21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23038, !ctir !1042
  %gp_offset_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 0, !dbg !23038
  %gp_offset23 = load i32, i32* %gp_offset_p22, align 16, !dbg !23038
  %fits_in_gp24 = icmp ule i32 %gp_offset23, 40, !dbg !23038
  br i1 %fits_in_gp24, label %vaarg.in_reg25, label %vaarg.in_mem27, !dbg !23038

vaarg.in_reg25:                                   ; preds = %sw.bb20
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 3, !dbg !23038
  %reg_save_area26 = load i8*, i8** %20, align 16, !dbg !23038
  %21 = getelementptr i8, i8* %reg_save_area26, i32 %gp_offset23, !dbg !23038
  %22 = bitcast i8* %21 to i32*, !dbg !23038
  %23 = add i32 %gp_offset23, 8, !dbg !23038
  store i32 %23, i32* %gp_offset_p22, align 16, !dbg !23038
  br label %vaarg.end31, !dbg !23038

vaarg.in_mem27:                                   ; preds = %sw.bb20
  %overflow_arg_area_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 2, !dbg !23038
  %overflow_arg_area29 = load i8*, i8** %overflow_arg_area_p28, align 8, !dbg !23038
  %24 = bitcast i8* %overflow_arg_area29 to i32*, !dbg !23038
  %overflow_arg_area.next30 = getelementptr i8, i8* %overflow_arg_area29, i32 8, !dbg !23038
  store i8* %overflow_arg_area.next30, i8** %overflow_arg_area_p28, align 8, !dbg !23038
  br label %vaarg.end31, !dbg !23038

vaarg.end31:                                      ; preds = %vaarg.in_mem27, %vaarg.in_reg25
  %vaarg.addr32 = phi i32* [ %22, %vaarg.in_reg25 ], [ %24, %vaarg.in_mem27 ], !dbg !23038
  %25 = load i32, i32* %vaarg.addr32, align 4, !dbg !23038
  store i32 %25, i32* %x, align 4, !dbg !23037
  %26 = load i32, i32* %fd.addr, align 4, !dbg !23039
  %27 = load i32, i32* %action.addr, align 4, !dbg !23040
  %28 = load i32, i32* %x, align 4, !dbg !23041
  %call33 = call i32 (i32, i32, ...) @fcntl(i32 %26, i32 %27, i32 %28), !dbg !23042
  store i32 %call33, i32* %result, align 4, !dbg !23043
  br label %sw.epilog, !dbg !23044

sw.default34:                                     ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %p, metadata !23045, metadata !DIExpression()), !dbg !23047
  %arraydecay35 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23048, !ctir !1042
  %gp_offset_p36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 0, !dbg !23048
  %gp_offset37 = load i32, i32* %gp_offset_p36, align 16, !dbg !23048
  %fits_in_gp38 = icmp ule i32 %gp_offset37, 40, !dbg !23048
  br i1 %fits_in_gp38, label %vaarg.in_reg39, label %vaarg.in_mem41, !dbg !23048

vaarg.in_reg39:                                   ; preds = %sw.default34
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 3, !dbg !23048
  %reg_save_area40 = load i8*, i8** %29, align 16, !dbg !23048
  %30 = getelementptr i8, i8* %reg_save_area40, i32 %gp_offset37, !dbg !23048
  %31 = bitcast i8* %30 to i8**, !dbg !23048
  %32 = add i32 %gp_offset37, 8, !dbg !23048
  store i32 %32, i32* %gp_offset_p36, align 16, !dbg !23048
  br label %vaarg.end45, !dbg !23048

vaarg.in_mem41:                                   ; preds = %sw.default34
  %overflow_arg_area_p42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 2, !dbg !23048
  %overflow_arg_area43 = load i8*, i8** %overflow_arg_area_p42, align 8, !dbg !23048
  %33 = bitcast i8* %overflow_arg_area43 to i8**, !dbg !23048
  %overflow_arg_area.next44 = getelementptr i8, i8* %overflow_arg_area43, i32 8, !dbg !23048
  store i8* %overflow_arg_area.next44, i8** %overflow_arg_area_p42, align 8, !dbg !23048
  br label %vaarg.end45, !dbg !23048

vaarg.end45:                                      ; preds = %vaarg.in_mem41, %vaarg.in_reg39
  %vaarg.addr46 = phi i8** [ %31, %vaarg.in_reg39 ], [ %33, %vaarg.in_mem41 ], !dbg !23048
  %34 = load i8*, i8** %vaarg.addr46, align 8, !dbg !23048
  store i8* %34, i8** %p, align 8, !dbg !23047
  %35 = load i32, i32* %fd.addr, align 4, !dbg !23049
  %36 = load i32, i32* %action.addr, align 4, !dbg !23050
  %37 = load i8*, i8** %p, align 8, !dbg !23051
  %call47 = call i32 (i32, i32, ...) @fcntl(i32 %35, i32 %36, i8* %37), !dbg !23052
  store i32 %call47, i32* %result, align 4, !dbg !23053
  br label %sw.epilog, !dbg !23054

sw.epilog:                                        ; preds = %vaarg.end45, %vaarg.end31, %sw.bb18
  br label %sw.epilog48, !dbg !23055

sw.epilog48:                                      ; preds = %sw.epilog, %vaarg.end15, %vaarg.end
  %arraydecay49 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23056, !ctir !1042
  %arraydecay4950 = bitcast %struct.__va_list_tag* %arraydecay49 to i8*, !dbg !23056
  call void @llvm.va_end(i8* %arraydecay4950), !dbg !23056
  %38 = load i32, i32* %result, align 4, !dbg !23057
  ret i32 %38, !dbg !23058
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD(i32 %fd, i32 %target) #4 !dbg !23059 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23060, metadata !DIExpression()), !dbg !23061
  store i32 %target, i32* %target.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !23062, metadata !DIExpression()), !dbg !23063
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23064, metadata !DIExpression()), !dbg !23065
  %0 = load i32, i32* %fd.addr, align 4, !dbg !23066
  %1 = load i32, i32* %target.addr, align 4, !dbg !23067
  %call = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 0, i32 %1), !dbg !23068
  store i32 %call, i32* %result, align 4, !dbg !23069
  %2 = load i32, i32* %result, align 4, !dbg !23070
  ret i32 %2, !dbg !23071
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %fd, i32 %target) #4 !dbg !1035 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !5
  %flags = alloca i32, align 4, !ctir !5
  %saved_errno = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23072, metadata !DIExpression()), !dbg !23073
  store i32 %target, i32* %target.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !23074, metadata !DIExpression()), !dbg !23075
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23076, metadata !DIExpression()), !dbg !23077
  %0 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23078
  %cmp = icmp sle i32 0, %0, !dbg !23080
  br i1 %cmp, label %if.then, label %if.else9, !dbg !23081

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !23082
  %2 = load i32, i32* %target.addr, align 4, !dbg !23084
  %call = call i32 (i32, i32, ...) @fcntl(i32 %1, i32 1030, i32 %2), !dbg !23085
  store i32 %call, i32* %result, align 4, !dbg !23086
  %3 = load i32, i32* %result, align 4, !dbg !23087
  %cmp1 = icmp sle i32 0, %3, !dbg !23089
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !23090

lor.lhs.false:                                    ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !23091
  %4 = load i32, i32* %call2, align 4, !dbg !23091, !ctir !5
  %cmp3 = icmp ne i32 %4, 22, !dbg !23092
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !23093

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23094
  br label %if.end8, !dbg !23096

if.else:                                          ; preds = %lor.lhs.false
  %5 = load i32, i32* %fd.addr, align 4, !dbg !23097
  %6 = load i32, i32* %target.addr, align 4, !dbg !23099
  %call5 = call i32 @rpl_fcntl_DUPFD(i32 %5, i32 %6), !dbg !23100
  store i32 %call5, i32* %result, align 4, !dbg !23101
  %7 = load i32, i32* %result, align 4, !dbg !23102
  %cmp6 = icmp sge i32 %7, 0, !dbg !23104
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !23105

if.then7:                                         ; preds = %if.else
  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23106
  br label %if.end, !dbg !23107

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  br label %if.end11, !dbg !23108

if.else9:                                         ; preds = %entry
  %8 = load i32, i32* %fd.addr, align 4, !dbg !23109
  %9 = load i32, i32* %target.addr, align 4, !dbg !23110
  %call10 = call i32 @rpl_fcntl_DUPFD(i32 %8, i32 %9), !dbg !23111
  store i32 %call10, i32* %result, align 4, !dbg !23112
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.end8
  %10 = load i32, i32* %result, align 4, !dbg !23113
  %cmp12 = icmp sle i32 0, %10, !dbg !23115
  br i1 %cmp12, label %land.lhs.true, label %if.end25, !dbg !23116

land.lhs.true:                                    ; preds = %if.end11
  %11 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23117
  %cmp13 = icmp eq i32 %11, -1, !dbg !23118
  br i1 %cmp13, label %if.then14, label %if.end25, !dbg !23119

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !23120, metadata !DIExpression()), !dbg !23122
  %12 = load i32, i32* %result, align 4, !dbg !23123
  %call15 = call i32 (i32, i32, ...) @fcntl(i32 %12, i32 1), !dbg !23124
  store i32 %call15, i32* %flags, align 4, !dbg !23122
  %13 = load i32, i32* %flags, align 4, !dbg !23125
  %cmp16 = icmp slt i32 %13, 0, !dbg !23127
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17, !dbg !23128

lor.lhs.false17:                                  ; preds = %if.then14
  %14 = load i32, i32* %result, align 4, !dbg !23129
  %15 = load i32, i32* %flags, align 4, !dbg !23130
  %or = or i32 %15, 1, !dbg !23131
  %call18 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 2, i32 %or), !dbg !23132
  %cmp19 = icmp eq i32 %call18, -1, !dbg !23133
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !23134

if.then20:                                        ; preds = %lor.lhs.false17, %if.then14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !23135, metadata !DIExpression()), !dbg !23137
  %call21 = call i32* @__errno_location() #15, !dbg !23138
  %16 = load i32, i32* %call21, align 4, !dbg !23138, !ctir !5
  store i32 %16, i32* %saved_errno, align 4, !dbg !23137
  %17 = load i32, i32* %result, align 4, !dbg !23139
  %call22 = call i32 @close(i32 %17), !dbg !23140
  %18 = load i32, i32* %saved_errno, align 4, !dbg !23141
  %call23 = call i32* @__errno_location() #15, !dbg !23142
  store i32 %18, i32* %call23, align 4, !dbg !23143, !ctir !5
  store i32 -1, i32* %result, align 4, !dbg !23144
  br label %if.end24, !dbg !23145

if.end24:                                         ; preds = %if.then20, %lor.lhs.false17
  br label %if.end25, !dbg !23146

if.end25:                                         ; preds = %if.end24, %land.lhs.true, %if.end11
  %19 = load i32, i32* %result, align 4, !dbg !23147
  ret i32 %19, !dbg !23148
}

declare dso_local i32 @fcntl(i32, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @rpl_nl_langinfo(i32 %item) #4 !dbg !23149 {
entry:
  %item.addr = alloca i32, align 4
  store i32 %item, i32* %item.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %item.addr, metadata !23155, metadata !DIExpression()), !dbg !23156
  %0 = load i32, i32* %item.addr, align 4, !dbg !23157
  switch i32 %0, label %sw.default [
    i32 10200, label %sw.bb
    i32 10201, label %sw.bb
    i32 10202, label %sw.bb
    i32 10203, label %sw.bb
    i32 10204, label %sw.bb
    i32 10205, label %sw.bb
    i32 10206, label %sw.bb
    i32 10207, label %sw.bb
    i32 10208, label %sw.bb
    i32 10209, label %sw.bb
    i32 10210, label %sw.bb
    i32 10211, label %sw.bb
  ], !dbg !23158

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %item.addr, align 4, !dbg !23159
  %sub = sub nsw i32 %1, 10200, !dbg !23161
  %add = add nsw i32 %sub, 131098, !dbg !23162
  store i32 %add, i32* %item.addr, align 4, !dbg !23163
  br label %sw.epilog, !dbg !23164

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !23165

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %2 = load i32, i32* %item.addr, align 4, !dbg !23166
  %call = call i8* @nl_langinfo(i32 %2) #12, !dbg !23167
  ret i8* %call, !dbg !23168
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #4 !dbg !23169 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23171, metadata !DIExpression()), !dbg !23172
  %0 = load i32, i32* %c.addr, align 4, !dbg !23173
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23174

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23175
  br label %return, !dbg !23175

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23177
  br label %return, !dbg !23177

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23178
  ret i1 %1, !dbg !23178
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #4 !dbg !23179 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23180, metadata !DIExpression()), !dbg !23181
  %0 = load i32, i32* %c.addr, align 4, !dbg !23182
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23183

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23184
  br label %return, !dbg !23184

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23186
  br label %return, !dbg !23186

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23187
  ret i1 %1, !dbg !23187
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #4 !dbg !23188 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23189, metadata !DIExpression()), !dbg !23190
  %0 = load i32, i32* %c.addr, align 4, !dbg !23191
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23192

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23193
  br label %return, !dbg !23193

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23195
  br label %return, !dbg !23195

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23196
  ret i1 %1, !dbg !23196
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #4 !dbg !23197 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23198, metadata !DIExpression()), !dbg !23199
  %0 = load i32, i32* %c.addr, align 4, !dbg !23200
  %cmp = icmp eq i32 %0, 32, !dbg !23201
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !23202

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !23203
  %cmp1 = icmp eq i32 %1, 9, !dbg !23204
  br label %lor.end, !dbg !23202

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !23205
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #4 !dbg !23206 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23207, metadata !DIExpression()), !dbg !23208
  %0 = load i32, i32* %c.addr, align 4, !dbg !23209
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !23210

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23211
  br label %return, !dbg !23211

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23213
  br label %return, !dbg !23213

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23214
  ret i1 %1, !dbg !23214
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #4 !dbg !23215 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23216, metadata !DIExpression()), !dbg !23217
  %0 = load i32, i32* %c.addr, align 4, !dbg !23218
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !23219

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23220
  br label %return, !dbg !23220

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23222
  br label %return, !dbg !23222

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23223
  ret i1 %1, !dbg !23223
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #4 !dbg !23224 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23225, metadata !DIExpression()), !dbg !23226
  %0 = load i32, i32* %c.addr, align 4, !dbg !23227
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23228

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23229
  br label %return, !dbg !23229

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23231
  br label %return, !dbg !23231

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23232
  ret i1 %1, !dbg !23232
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #4 !dbg !23233 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23234, metadata !DIExpression()), !dbg !23235
  %0 = load i32, i32* %c.addr, align 4, !dbg !23236
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !23237

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23238
  br label %return, !dbg !23238

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23240
  br label %return, !dbg !23240

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23241
  ret i1 %1, !dbg !23241
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #4 !dbg !23242 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23243, metadata !DIExpression()), !dbg !23244
  %0 = load i32, i32* %c.addr, align 4, !dbg !23245
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23246

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23247
  br label %return, !dbg !23247

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23249
  br label %return, !dbg !23249

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23250
  ret i1 %1, !dbg !23250
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #4 !dbg !23251 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23252, metadata !DIExpression()), !dbg !23253
  %0 = load i32, i32* %c.addr, align 4, !dbg !23254
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !23255

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23256
  br label %return, !dbg !23256

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23258
  br label %return, !dbg !23258

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23259
  ret i1 %1, !dbg !23259
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #4 !dbg !23260 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23261, metadata !DIExpression()), !dbg !23262
  %0 = load i32, i32* %c.addr, align 4, !dbg !23263
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !23264

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23265
  br label %return, !dbg !23265

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23267
  br label %return, !dbg !23267

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23268
  ret i1 %1, !dbg !23268
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #4 !dbg !23269 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23270, metadata !DIExpression()), !dbg !23271
  %0 = load i32, i32* %c.addr, align 4, !dbg !23272
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23273

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23274
  br label %return, !dbg !23274

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23276
  br label %return, !dbg !23276

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23277
  ret i1 %1, !dbg !23277
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #4 !dbg !23278 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23279, metadata !DIExpression()), !dbg !23280
  %0 = load i32, i32* %c.addr, align 4, !dbg !23281
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !23282

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23283
  br label %return, !dbg !23283

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23285
  br label %return, !dbg !23285

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23286
  ret i1 %1, !dbg !23286
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #4 !dbg !23287 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23288, metadata !DIExpression()), !dbg !23289
  %0 = load i32, i32* %c.addr, align 4, !dbg !23290
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23291

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !23292
  %sub = sub nsw i32 %1, 65, !dbg !23294
  %add = add nsw i32 %sub, 97, !dbg !23295
  store i32 %add, i32* %retval, align 4, !dbg !23296
  br label %return, !dbg !23296

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !23297
  store i32 %2, i32* %retval, align 4, !dbg !23298
  br label %return, !dbg !23298

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !23299
  ret i32 %3, !dbg !23299
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #4 !dbg !23300 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23301, metadata !DIExpression()), !dbg !23302
  %0 = load i32, i32* %c.addr, align 4, !dbg !23303
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !23304

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !23305
  %sub = sub nsw i32 %1, 97, !dbg !23307
  %add = add nsw i32 %sub, 65, !dbg !23308
  store i32 %add, i32* %retval, align 4, !dbg !23309
  br label %return, !dbg !23309

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !23310
  store i32 %2, i32* %retval, align 4, !dbg !23311
  br label %return, !dbg !23311

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !23312
  ret i32 %3, !dbg !23312
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @fopen_safer(i8* %file, i8* %mode) #4 !dbg !23313 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !2053
  %fd = alloca i32, align 4, !ctir !5
  %f = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  %e15 = alloca i32, align 4, !ctir !5
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !23317, metadata !DIExpression()), !dbg !23318
  store i8* %mode, i8** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !23319, metadata !DIExpression()), !dbg !23320
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !23321, metadata !DIExpression()), !dbg !23322
  %0 = load i8*, i8** %file.addr, align 8, !dbg !23323
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !23324
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* %1), !dbg !23325
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !23322
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23326
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !23326
  br i1 %tobool, label %if.then, label %if.end21, !dbg !23328

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !23329, metadata !DIExpression()), !dbg !23331
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23332
  %call1 = call i32 @fileno(%struct._IO_FILE* %3) #12, !dbg !23333
  store i32 %call1, i32* %fd, align 4, !dbg !23331
  %4 = load i32, i32* %fd, align 4, !dbg !23334
  %cmp = icmp sle i32 0, %4, !dbg !23336
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !23337

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %fd, align 4, !dbg !23338
  %cmp2 = icmp sle i32 %5, 2, !dbg !23339
  br i1 %cmp2, label %if.then3, label %if.end20, !dbg !23340

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !23341, metadata !DIExpression()), !dbg !23343
  %6 = load i32, i32* %fd, align 4, !dbg !23344
  %call4 = call i32 @dup_safer(i32 %6), !dbg !23345
  store i32 %call4, i32* %f, align 4, !dbg !23343
  %7 = load i32, i32* %f, align 4, !dbg !23346
  %cmp5 = icmp slt i32 %7, 0, !dbg !23348
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !23349

if.then6:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %e, metadata !23350, metadata !DIExpression()), !dbg !23352
  %call7 = call i32* @__errno_location() #15, !dbg !23353
  %8 = load i32, i32* %call7, align 4, !dbg !23353, !ctir !5
  store i32 %8, i32* %e, align 4, !dbg !23352
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23354
  %call8 = call i32 @rpl_fclose(%struct._IO_FILE* %9), !dbg !23355
  %10 = load i32, i32* %e, align 4, !dbg !23356
  %call9 = call i32* @__errno_location() #15, !dbg !23357
  store i32 %10, i32* %call9, align 4, !dbg !23358, !ctir !5
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !23359
  br label %return, !dbg !23359

if.end:                                           ; preds = %if.then3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23360
  %call10 = call i32 @rpl_fclose(%struct._IO_FILE* %11), !dbg !23362
  %cmp11 = icmp ne i32 %call10, 0, !dbg !23363
  br i1 %cmp11, label %if.then14, label %lor.lhs.false, !dbg !23364

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, i32* %f, align 4, !dbg !23365
  %13 = load i8*, i8** %mode.addr, align 8, !dbg !23366
  %call12 = call %struct._IO_FILE* @fdopen(i32 %12, i8* %13) #12, !dbg !23367
  store %struct._IO_FILE* %call12, %struct._IO_FILE** %fp, align 8, !dbg !23368
  %tobool13 = icmp ne %struct._IO_FILE* %call12, null, !dbg !23368
  br i1 %tobool13, label %if.end19, label %if.then14, !dbg !23369

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %e15, metadata !23370, metadata !DIExpression()), !dbg !23372
  %call16 = call i32* @__errno_location() #15, !dbg !23373
  %14 = load i32, i32* %call16, align 4, !dbg !23373, !ctir !5
  store i32 %14, i32* %e15, align 4, !dbg !23372
  %15 = load i32, i32* %f, align 4, !dbg !23374
  %call17 = call i32 @close(i32 %15), !dbg !23375
  %16 = load i32, i32* %e15, align 4, !dbg !23376
  %call18 = call i32* @__errno_location() #15, !dbg !23377
  store i32 %16, i32* %call18, align 4, !dbg !23378, !ctir !5
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !23379
  br label %return, !dbg !23379

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20, !dbg !23380

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %if.then
  br label %if.end21, !dbg !23381

if.end21:                                         ; preds = %if.end20, %entry
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23382
  store %struct._IO_FILE* %17, %struct._IO_FILE** %retval, align 8, !dbg !23383
  br label %return, !dbg !23383

return:                                           ; preds = %if.end21, %if.then14, %if.then6
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !23384
  ret %struct._IO_FILE* %18, !dbg !23384
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #2

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { nounwind readnone }
attributes #16 = { noreturn }

!llvm.dbg.cu = !{!62, !1053, !288, !473, !1234, !489, !1279, !512, !1281, !1284, !1287, !518, !1293, !549, !1295, !570, !617, !1298, !1301, !1304, !1307, !664, !1310, !1322, !1334, !1344, !1347, !1350, !1353, !1356, !671, !1359, !1370, !1373, !724, !1375, !1378, !769, !1381, !1384, !1387, !1390, !845, !1393, !1395, !1398, !885, !1400, !930, !948, !1402, !971, !982, !1464, !1467, !1470, !1561, !1602, !1644, !1686, !1728, !1870, !1873, !1875, !1877, !989, !1880, !1883, !1886, !1890, !1896, !1899, !1901, !1904, !1907, !1919, !1922, !1934, !1949, !2035, !2040, !2042, !2044, !1039, !2046, !2048, !2050}
!llvm.ident = !{}
!llvm.module.flags = !{!2094, !2095, !2096, !2097}

!0 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1, size: 64)
!1 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !3)
!2 = !DIFile(filename: "/usr/include/libio.h", directory: "")
!3 = !{!4, !6, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !26, !27, !28, !29, !33, !35, !37, !41, !44, !46, !48, !49, !50, !51, !55, !56}
!4 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1, file: !2, line: 242, baseType: !5, size: 32)
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!8 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!9 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1, file: !2, line: 260, baseType: !20, size: 64, offset: 768)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!21 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !22)
!22 = !{!23, !24, !25}
!23 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !21, file: !2, line: 157, baseType: !20, size: 64)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !21, file: !2, line: 158, baseType: !0, size: 64, offset: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !21, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1, file: !2, line: 262, baseType: !0, size: 64, offset: 832)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !31, line: 131, baseType: !32)
!31 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!32 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!34 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!36 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!38 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 8, elements: !39)
!39 = !{!40}
!40 = !DISubrange(count: 1)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2, line: 150, baseType: null)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !31, line: 132, baseType: !32)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !53, line: 46, baseType: !54)
!53 = !DIFile(filename: "llvm/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mohamad/clone")
!54 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!57 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 160, elements: !58)
!58 = !{!59}
!59 = !DISubrange(count: 20)
!60 = !DIGlobalVariableExpression(var: !61, expr: !DIExpression())
!61 = distinct !DIGlobalVariable(name: "long_options", scope: !62, file: !63, line: 56, type: !150, isLocal: true, isDefinition: true)
!62 = distinct !DICompileUnit(language: DW_LANG_C99, file: !63, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !64, retainedTypes: !109, globals: !265, nameTableKind: None)
!63 = !DIFile(filename: "src/mv.c", directory: "/home/mohamad/clone/coreutils")
!64 = !{!65, !73, !80, !86, !92, !97, !103}
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backup_type", file: !66, line: 30, baseType: !67, size: 32, elements: !68)
!66 = !DIFile(filename: "./lib/backupfile.h", directory: "/home/mohamad/clone/coreutils")
!67 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!68 = !{!69, !70, !71, !72}
!69 = !DIEnumerator(name: "no_backups", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "simple_backups", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "numbered_existing_backups", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "numbered_backups", value: 3, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Dereference_symlink", file: !74, line: 69, baseType: !67, size: 32, elements: !75)
!74 = !DIFile(filename: "src/copy.h", directory: "/home/mohamad/clone/coreutils")
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "DEREF_UNDEFINED", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DEREF_NEVER", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DEREF_COMMAND_LINE_ARGUMENTS", value: 3, isUnsigned: true)
!79 = !DIEnumerator(name: "DEREF_ALWAYS", value: 4, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Interactive", file: !74, line: 60, baseType: !67, size: 32, elements: !81)
!81 = !{!82, !83, !84, !85}
!82 = !DIEnumerator(name: "I_ALWAYS_YES", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "I_ALWAYS_NO", value: 2, isUnsigned: true)
!84 = !DIEnumerator(name: "I_ASK_USER", value: 3, isUnsigned: true)
!85 = !DIEnumerator(name: "I_UNSPECIFIED", value: 4, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Sparse_type", file: !74, line: 26, baseType: !67, size: 32, elements: !87)
!87 = !{!88, !89, !90, !91}
!88 = !DIEnumerator(name: "SPARSE_UNUSED", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "SPARSE_NEVER", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "SPARSE_AUTO", value: 2, isUnsigned: true)
!91 = !DIEnumerator(name: "SPARSE_ALWAYS", value: 3, isUnsigned: true)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Reflink_type", file: !74, line: 47, baseType: !67, size: 32, elements: !93)
!93 = !{!94, !95, !96}
!94 = !DIEnumerator(name: "REFLINK_NEVER", value: 0, isUnsigned: true)
!95 = !DIEnumerator(name: "REFLINK_AUTO", value: 1, isUnsigned: true)
!96 = !DIEnumerator(name: "REFLINK_ALWAYS", value: 2, isUnsigned: true)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rm_interactive", file: !98, line: 23, baseType: !67, size: 32, elements: !99)
!98 = !DIFile(filename: "src/remove.h", directory: "/home/mohamad/clone/coreutils")
!99 = !{!100, !101, !102}
!100 = !DIEnumerator(name: "RMI_ALWAYS", value: 3, isUnsigned: true)
!101 = !DIEnumerator(name: "RMI_SOMETIMES", value: 4, isUnsigned: true)
!102 = !DIEnumerator(name: "RMI_NEVER", value: 5, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RM_status", file: !98, line: 78, baseType: !67, size: 32, elements: !104)
!104 = !{!105, !106, !107, !108}
!105 = !DIEnumerator(name: "RM_OK", value: 2, isUnsigned: true)
!106 = !DIEnumerator(name: "RM_USER_DECLINED", value: 3, isUnsigned: true)
!107 = !DIEnumerator(name: "RM_ERROR", value: 4, isUnsigned: true)
!108 = !DIEnumerator(name: "RM_NONEMPTY_DIR", value: 5, isUnsigned: true)
!109 = !{!7, !47, !0, !110, !113, !115, !118, !121, !124, !127, !130, !133, !136, !5, !139, !140, !38, !141, !144, !147, !150, !162, !57, !165, !166, !169, !170, !173, !176, !179, !182, !185, !188, !191, !194, !197, !200, !203, !206, !219, !220, !221, !224, !227, !230, !233, !236, !238, !242, !245, !248, !251, !261, !264}
!110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 312, elements: !111)
!111 = !{!112}
!112 = !DISubrange(count: 39)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1016, elements: !116)
!116 = !{!117}
!117 = !DISubrange(count: 127)
!118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 448, elements: !119)
!119 = !{!120}
!120 = !DISubrange(count: 56)
!121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 3344, elements: !122)
!122 = !{!123}
!123 = !DISubrange(count: 418)
!124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1472, elements: !125)
!125 = !{!126}
!126 = !DISubrange(count: 184)
!127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 4216, elements: !128)
!128 = !{!129}
!129 = !DISubrange(count: 527)
!130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 360, elements: !131)
!131 = !{!132}
!132 = !DISubrange(count: 45)
!133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 432, elements: !134)
!134 = !{!135}
!135 = !DISubrange(count: 54)
!136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 24, elements: !137)
!137 = !{!138}
!138 = !DISubrange(count: 3)
!139 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 80, elements: !142)
!142 = !{!143}
!143 = !DISubrange(count: 10)
!144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 192, elements: !145)
!145 = !{!146}
!146 = !DISubrange(count: 24)
!147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 104, elements: !148)
!148 = !{!149}
!149 = !DISubrange(count: 13)
!150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !151, size: 3584, elements: !160)
!151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !153, line: 104, size: 256, elements: !154)
!153 = !DIFile(filename: "/usr/include/getopt.h", directory: "")
!154 = !{!155, !156, !157, !159}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !152, file: !153, line: 106, baseType: !113, size: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !152, file: !153, line: 109, baseType: !5, size: 32, offset: 64)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !152, file: !153, line: 110, baseType: !158, size: 64, offset: 128)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !152, file: !153, line: 111, baseType: !5, size: 32, offset: 192)
!160 = !{!161}
!161 = !DISubrange(count: 14)
!162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 304, elements: !163)
!163 = !{!164}
!164 = !DISubrange(count: 38)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !31, line: 129, baseType: !67)
!166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 232, elements: !167)
!167 = !{!168}
!168 = !DISubrange(count: 29)
!169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 112, elements: !160)
!170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 96, elements: !171)
!171 = !{!172}
!172 = !DISubrange(count: 12)
!173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 128, elements: !174)
!174 = !{!175}
!175 = !DISubrange(count: 16)
!176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 168, elements: !177)
!177 = !{!178}
!178 = !DISubrange(count: 21)
!179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 336, elements: !180)
!180 = !{!181}
!181 = !DISubrange(count: 42)
!182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 560, elements: !183)
!183 = !{!184}
!184 = !DISubrange(count: 70)
!185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 136, elements: !186)
!186 = !{!187}
!187 = !DISubrange(count: 17)
!188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 72, elements: !189)
!189 = !{!190}
!190 = !DISubrange(count: 9)
!191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 184, elements: !192)
!192 = !{!193}
!193 = !DISubrange(count: 23)
!194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 456, elements: !195)
!195 = !{!196}
!196 = !DISubrange(count: 57)
!197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 600, elements: !198)
!198 = !{!199}
!199 = !DISubrange(count: 75)
!200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1768, elements: !201)
!201 = !{!202}
!202 = !DISubrange(count: 221)
!203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1776, elements: !204)
!204 = !{!205}
!205 = !DISubrange(count: 222)
!206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 896, elements: !217)
!207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !210, file: !209, line: 633, size: 128, elements: !214)
!209 = !DIFile(filename: "src/system.h", directory: "/home/mohamad/clone/coreutils")
!210 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !209, file: !209, line: 631, type: !211, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !213)
!211 = !DISubroutineType(types: !212)
!212 = !{null, !113}
!213 = !{}
!214 = !{!215, !216}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !208, file: !209, line: 633, baseType: !113, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !208, file: !209, line: 633, baseType: !113, size: 64, offset: 64)
!217 = !{!218}
!218 = !DISubrange(count: 7)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 184, elements: !192)
!221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 320, elements: !222)
!222 = !{!223}
!223 = !DISubrange(count: 40)
!224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32, elements: !225)
!225 = !{!226}
!226 = !DISubrange(count: 4)
!227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 568, elements: !228)
!228 = !{!229}
!229 = !DISubrange(count: 71)
!230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 216, elements: !231)
!231 = !{!232}
!232 = !DISubrange(count: 27)
!233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 408, elements: !234)
!234 = !{!235}
!235 = !DISubrange(count: 51)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !237, line: 70, baseType: !165)
!237 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !240, line: 69, baseType: !241)
!240 = !DIFile(filename: "./lib/hash.h", directory: "/home/mohamad/clone/coreutils")
!241 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !240, line: 67, flags: DIFlagFwdDecl)
!242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 128, elements: !243)
!243 = !{!244}
!244 = !DISubrange(count: 2)
!245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 176, elements: !246)
!246 = !{!247}
!247 = !DISubrange(count: 22)
!248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 552, elements: !249)
!249 = !{!250}
!250 = !DISubrange(count: 69)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !253, line: 7, size: 128, elements: !254)
!253 = !DIFile(filename: "./lib/dev-ino.h", directory: "/home/mohamad/clone/coreutils")
!254 = !{!255, !258}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !252, file: !253, line: 9, baseType: !256, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !237, line: 48, baseType: !257)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !31, line: 127, baseType: !54)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !252, file: !253, line: 10, baseType: !259, size: 64, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !237, line: 60, baseType: !260)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !31, line: 124, baseType: !54)
!261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 248, elements: !262)
!262 = !{!263}
!263 = !DISubrange(count: 31)
!264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 16, elements: !243)
!265 = !{!266, !60, !268}
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "remove_trailing_slashes", scope: !62, file: !63, line: 54, type: !139, isLocal: true, isDefinition: true)
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "dev_ino_buf", scope: !270, file: !63, line: 96, type: !252, isLocal: true, isDefinition: true)
!270 = distinct !DISubprogram(name: "rm_option_init", scope: !63, file: !63, line: 75, type: !271, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !213)
!271 = !DISubroutineType(types: !272)
!272 = !{null, !273}
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rm_options", file: !98, line: 32, size: 256, elements: !275)
!275 = !{!276, !277, !278, !279, !280, !281, !282, !283, !284, !285}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_missing_files", scope: !274, file: !98, line: 35, baseType: !139, size: 8)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !274, file: !98, line: 38, baseType: !97, size: 32, offset: 32)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !274, file: !98, line: 47, baseType: !139, size: 8, offset: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !274, file: !98, line: 50, baseType: !139, size: 8, offset: 72)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "remove_empty_directories", scope: !274, file: !98, line: 53, baseType: !139, size: 8, offset: 80)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !274, file: !98, line: 57, baseType: !251, size: 64, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_all_root", scope: !274, file: !98, line: 61, baseType: !139, size: 8, offset: 192)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !274, file: !98, line: 64, baseType: !139, size: 8, offset: 200)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !274, file: !98, line: 67, baseType: !139, size: 8, offset: 208)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "require_restore_cwd", scope: !274, file: !98, line: 75, baseType: !139, size: 8, offset: 216)
!286 = !DIGlobalVariableExpression(var: !287, expr: !DIExpression())
!287 = distinct !DIGlobalVariable(name: "top_level_src_name", scope: !288, file: !289, line: 147, type: !113, isLocal: true, isDefinition: true)
!288 = distinct !DICompileUnit(language: DW_LANG_C99, file: !289, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !290, retainedTypes: !291, globals: !454, nameTableKind: None)
!289 = !DIFile(filename: "src/copy.c", directory: "/home/mohamad/clone/coreutils")
!290 = !{!65, !73, !80, !86, !92}
!291 = !{!236, !47, !67, !7, !54, !52, !292, !139, !5, !294, !297, !233, !300, !238, !144, !303, !306, !113, !309, !312, !162, !315, !318, !165, !221, !245, !321, !324, !260, !257, !327, !330, !185, !333, !170, !334, !130, !133, !188, !365, !176, !366, !369, !372, !256, !259, !230, !114, !264, !378, !381, !30, !166, !261, !343, !345, !384, !387, !57, !388, !390, !147, !393, !396, !434, !8, !169, !173, !118, !350, !352, !437, !444, !447, !449, !451, !450, !452, !453}
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !293, line: 90, baseType: !30)
!293 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 400, elements: !295)
!295 = !{!296}
!296 = !DISubrange(count: 50)
!297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 296, elements: !298)
!298 = !{!299}
!299 = !DISubrange(count: 37)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 328, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 41)
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 88, elements: !304)
!304 = !{!305}
!305 = !DISubrange(count: 11)
!306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 728, elements: !307)
!307 = !{!308}
!308 = !DISubrange(count: 91)
!309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 376, elements: !310)
!310 = !{!311}
!311 = !DISubrange(count: 47)
!312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 288, elements: !313)
!313 = !{!314}
!314 = !DISubrange(count: 36)
!315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 584, elements: !316)
!316 = !{!317}
!317 = !DISubrange(count: 73)
!318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 120, elements: !319)
!319 = !{!320}
!320 = !DISubrange(count: 15)
!321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 392, elements: !322)
!322 = !{!323}
!323 = !DISubrange(count: 49)
!324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 224, elements: !325)
!325 = !{!326}
!326 = !DISubrange(count: 28)
!327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 416, elements: !328)
!328 = !{!329}
!329 = !DISubrange(count: 52)
!330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 344, elements: !331)
!331 = !{!332}
!332 = !DISubrange(count: 43)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !31, line: 130, baseType: !54)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !337)
!336 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!337 = !{!338, !339, !340, !341, !342, !344, !346, !347, !348, !349, !351, !353, !361, !362, !363}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !335, file: !336, line: 48, baseType: !260, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !335, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !335, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !335, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !335, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !31, line: 125, baseType: !67)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !335, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !31, line: 126, baseType: !67)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !335, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !335, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !335, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !335, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !31, line: 153, baseType: !32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !335, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !31, line: 158, baseType: !32)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !335, file: !336, line: 91, baseType: !354, size: 128, offset: 576)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !356)
!355 = !DIFile(filename: "/usr/include/time.h", directory: "")
!356 = !{!357, !359}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !354, file: !355, line: 122, baseType: !358, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !31, line: 139, baseType: !32)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !354, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !31, line: 175, baseType: !32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !335, file: !336, line: 92, baseType: !354, size: 128, offset: 704)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !335, file: !336, line: 93, baseType: !354, size: 128, offset: 832)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !335, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 192, elements: !137)
!365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 376, elements: !310)
!366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 480, elements: !367)
!367 = !{!368}
!368 = !DISubrange(count: 60)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 64, elements: !370)
!370 = !{!371}
!371 = !DISubrange(count: 8)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_list", file: !289, line: 125, size: 192, elements: !374)
!374 = !{!375, !376, !377}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !373, file: !289, line: 127, baseType: !372, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !373, file: !289, line: 128, baseType: !256, size: 64, offset: 64)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !373, file: !289, line: 129, baseType: !259, size: 64, offset: 128)
!378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 504, elements: !379)
!379 = !{!380}
!380 = !DISubrange(count: 63)
!381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 240, elements: !382)
!382 = !{!383}
!383 = !DISubrange(count: 30)
!384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 200, elements: !385)
!385 = !{!386}
!386 = !DISubrange(count: 25)
!387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !354, size: 256, elements: !243)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 264, elements: !391)
!391 = !{!392}
!392 = !DISubrange(count: 33)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 648, elements: !394)
!394 = !{!395}
!395 = !DISubrange(count: 81)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !398)
!398 = !{!399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !397, file: !2, line: 242, baseType: !5, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !397, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !397, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !397, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !397, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !397, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !397, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !397, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !397, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !397, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !397, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !397, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !397, file: !2, line: 260, baseType: !412, size: 64, offset: 768)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !414)
!414 = !{!415, !416, !417}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !413, file: !2, line: 157, baseType: !412, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !413, file: !2, line: 158, baseType: !396, size: 64, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !413, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !397, file: !2, line: 262, baseType: !396, size: 64, offset: 832)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !397, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !397, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !397, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !397, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !397, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !397, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !397, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !397, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !397, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !397, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !397, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !397, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !397, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !397, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !397, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 152, elements: !435)
!435 = !{!436}
!436 = !DISubrange(count: 19)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !439, line: 23, size: 192, elements: !440)
!439 = !DIFile(filename: "src/extent-scan.h", directory: "/home/mohamad/clone/coreutils")
!440 = !{!441, !442, !443}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !438, file: !439, line: 26, baseType: !292, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !438, file: !439, line: 29, baseType: !292, size: 64, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !438, file: !439, line: 32, baseType: !67, size: 32, offset: 128)
!444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 8192, elements: !445)
!445 = !{!446}
!446 = !DISubrange(count: 1024)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !293, line: 102, baseType: !448)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !31, line: 172, baseType: !32)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !451)
!451 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !237, line: 80, baseType: !343)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !237, line: 65, baseType: !345)
!454 = !{!455, !286, !460, !462, !467, !469}
!455 = !DIGlobalVariableExpression(var: !456, expr: !DIExpression())
!456 = distinct !DIGlobalVariable(name: "mask", scope: !457, file: !289, line: 3089, type: !236, isLocal: true, isDefinition: true)
!457 = distinct !DISubprogram(name: "cached_umask", scope: !289, file: !289, line: 3087, type: !458, scopeLine: 3088, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !213)
!458 = !DISubroutineType(types: !459)
!459 = !{!236}
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "top_level_dst_name", scope: !288, file: !289, line: 148, type: !113, isLocal: true, isDefinition: true)
!462 = !DIGlobalVariableExpression(var: !463, expr: !DIExpression())
!463 = distinct !DIGlobalVariable(name: "zeros", scope: !464, file: !289, line: 387, type: !7, isLocal: true, isDefinition: true)
!464 = distinct !DISubprogram(name: "write_zeros", scope: !289, file: !289, line: 385, type: !465, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!465 = !DISubroutineType(types: !466)
!466 = !{!139, !5, !292}
!467 = !DIGlobalVariableExpression(var: !468, expr: !DIExpression())
!468 = distinct !DIGlobalVariable(name: "nz", scope: !464, file: !289, line: 388, type: !52, isLocal: true, isDefinition: true)
!469 = !DIGlobalVariableExpression(var: !470, expr: !DIExpression())
!470 = distinct !DIGlobalVariable(name: "fallback", scope: !464, file: !289, line: 395, type: !444, isLocal: true, isDefinition: true)
!471 = !DIGlobalVariableExpression(var: !472, expr: !DIExpression())
!472 = distinct !DIGlobalVariable(name: "src_to_dest", scope: !473, file: !474, line: 45, type: !238, isLocal: true, isDefinition: true)
!473 = distinct !DICompileUnit(language: DW_LANG_C99, file: !474, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !475, globals: !486, nameTableKind: None)
!474 = !DIFile(filename: "src/cp-hash.c", directory: "/home/mohamad/clone/coreutils")
!475 = !{!47, !7, !476, !478, !256, !259, !238, !484}
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !477, line: 135, baseType: !54)
!477 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Src_to_dest", file: !474, line: 33, size: 192, elements: !480)
!480 = !{!481, !482, !483}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !479, file: !474, line: 35, baseType: !256, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !479, file: !474, line: 36, baseType: !259, size: 64, offset: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !479, file: !474, line: 40, baseType: !7, size: 64, offset: 128)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !479)
!486 = !{!471}
!487 = !DIGlobalVariableExpression(var: !488, expr: !DIExpression())
!488 = distinct !DIGlobalVariable(name: "simple_pattern", scope: !489, file: !490, line: 38, type: !496, isLocal: true, isDefinition: true)
!489 = distinct !DICompileUnit(language: DW_LANG_C99, file: !490, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !491, globals: !509, nameTableKind: None)
!490 = !DIFile(filename: "src/force-link.c", directory: "/home/mohamad/clone/coreutils")
!491 = !{!5, !492, !7, !495, !52, !496, !497, !113, !504}
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 2048, elements: !493)
!493 = !{!494}
!494 = !DISubrange(count: 256)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !53, line: 35, baseType: !32)
!496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 72, elements: !189)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "link_arg", file: !490, line: 71, size: 192, elements: !499)
!499 = !{!500, !501, !502, !503}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "srcdir", scope: !498, file: !490, line: 73, baseType: !5, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !498, file: !490, line: 74, baseType: !113, size: 64, offset: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !498, file: !490, line: 75, baseType: !5, size: 32, offset: 128)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !498, file: !490, line: 76, baseType: !5, size: 32, offset: 160)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "symlink_arg", file: !490, line: 131, size: 128, elements: !506)
!506 = !{!507, !508}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !505, file: !490, line: 133, baseType: !113, size: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !505, file: !490, line: 134, baseType: !5, size: 32, offset: 64)
!509 = !{!487}
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "Version", scope: !512, file: !513, line: 2, type: !113, isLocal: false, isDefinition: true)
!512 = distinct !DICompileUnit(language: DW_LANG_C99, file: !513, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !514, globals: !515, nameTableKind: None)
!513 = !DIFile(filename: "src/version.c", directory: "/home/mohamad/clone/coreutils")
!514 = !{!113}
!515 = !{!510}
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "simple_backup_suffix", scope: !518, file: !522, line: 82, type: !113, isLocal: false, isDefinition: true)
!518 = distinct !DICompileUnit(language: DW_LANG_C99, file: !519, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !520, retainedTypes: !528, globals: !546, nameTableKind: None)
!519 = !DIFile(filename: "./lib/backupfile.c", directory: "/home/mohamad/clone/coreutils")
!520 = !{!65, !521}
!521 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "numbered_backup_result", file: !522, line: 172, baseType: !67, size: 32, elements: !523)
!522 = !DIFile(filename: "lib/backupfile.c", directory: "/home/mohamad/clone/coreutils")
!523 = !{!524, !525, !526, !527}
!524 = !DIEnumerator(name: "BACKUP_IS_SAME_LENGTH", value: 0, isUnsigned: true)
!525 = !DIEnumerator(name: "BACKUP_IS_LONGER", value: 1, isUnsigned: true)
!526 = !DIEnumerator(name: "BACKUP_IS_NEW", value: 2, isUnsigned: true)
!527 = !DIEnumerator(name: "BACKUP_NOMEM", value: 3, isUnsigned: true)
!528 = !{!47, !67, !52, !113, !176, !114, !264, !495, !529, !7, !530, !5, !8, !534, !543, !139, !492, !32}
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !237, line: 109, baseType: !448)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !532, line: 127, baseType: !533)
!532 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!533 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !532, line: 127, flags: DIFlagFwdDecl)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !536, line: 22, size: 2240, elements: !537)
!536 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "")
!537 = !{!538, !539, !540, !541, !542}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !535, file: !536, line: 25, baseType: !257, size: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !535, file: !536, line: 26, baseType: !30, size: 64, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !535, file: !536, line: 31, baseType: !34, size: 16, offset: 128)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !535, file: !536, line: 32, baseType: !451, size: 8, offset: 144)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !535, file: !536, line: 33, baseType: !492, size: 2048, offset: 152)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 40, elements: !544)
!544 = !{!545}
!545 = !DISubrange(count: 5)
!546 = !{!516}
!547 = !DIGlobalVariableExpression(var: !548, expr: !DIExpression())
!548 = distinct !DIGlobalVariable(name: "backup_args", scope: !549, file: !567, line: 42, type: !557, isLocal: true, isDefinition: true)
!549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !550, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !551, retainedTypes: !552, globals: !564, nameTableKind: None)
!550 = !DIFile(filename: "./lib/backup-find.c", directory: "/home/mohamad/clone/coreutils")
!551 = !{!65}
!552 = !{!553, !7, !114, !555, !557, !559, !185, !173}
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !556, size: 256, elements: !370)
!556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !65)
!557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !558, size: 576, elements: !189)
!558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !560, line: 61, baseType: !561)
!560 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mohamad/clone/coreutils")
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DISubroutineType(types: !563)
!563 = !{null}
!564 = !{!565, !547}
!565 = !DIGlobalVariableExpression(var: !566, expr: !DIExpression())
!566 = distinct !DIGlobalVariable(name: "backup_types", scope: !549, file: !567, line: 53, type: !555, isLocal: true, isDefinition: true)
!567 = !DIFile(filename: "lib/backup-find.c", directory: "/home/mohamad/clone/coreutils")
!568 = !DIGlobalVariableExpression(var: !569, expr: !DIExpression())
!569 = distinct !DIGlobalVariable(name: "file_name", scope: !570, file: !614, line: 37, type: !113, isLocal: true, isDefinition: true)
!570 = distinct !DICompileUnit(language: DW_LANG_C99, file: !571, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !572, globals: !613, nameTableKind: None)
!571 = !DIFile(filename: "./lib/closein.c", directory: "/home/mohamad/clone/coreutils")
!572 = !{!113, !139, !573, !434, !5, !611, !136, !612}
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !575)
!575 = !{!576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !574, file: !2, line: 242, baseType: !5, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !574, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !574, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !574, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !574, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !574, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !574, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !574, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !574, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !574, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !574, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !574, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !574, file: !2, line: 260, baseType: !589, size: 64, offset: 768)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !591)
!591 = !{!592, !593, !594}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !590, file: !2, line: 157, baseType: !589, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !590, file: !2, line: 158, baseType: !573, size: 64, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !590, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !574, file: !2, line: 262, baseType: !573, size: 64, offset: 832)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !574, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !574, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !574, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !574, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !574, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !574, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !574, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !574, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !574, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !574, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !574, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !574, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !574, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !574, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !574, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 56, elements: !217)
!612 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !5)
!613 = !{!568}
!614 = !DIFile(filename: "lib/closein.c", directory: "/home/mohamad/clone/coreutils")
!615 = !DIGlobalVariableExpression(var: !616, expr: !DIExpression())
!616 = distinct !DIGlobalVariable(name: "file_name", scope: !617, file: !661, line: 46, type: !113, isLocal: true, isDefinition: true)
!617 = distinct !DICompileUnit(language: DW_LANG_C99, file: !618, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !619, globals: !658, nameTableKind: None)
!618 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mohamad/clone/coreutils")
!619 = !{!113, !139, !620, !5, !170, !611, !136, !612}
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !622)
!622 = !{!623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !621, file: !2, line: 242, baseType: !5, size: 32)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !621, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !621, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !621, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !621, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !621, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !621, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !621, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !621, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !621, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !621, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !621, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !621, file: !2, line: 260, baseType: !636, size: 64, offset: 768)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !638)
!638 = !{!639, !640, !641}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !637, file: !2, line: 157, baseType: !636, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !637, file: !2, line: 158, baseType: !620, size: 64, offset: 64)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !637, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !621, file: !2, line: 262, baseType: !620, size: 64, offset: 832)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !621, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !621, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !621, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !621, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !621, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !621, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !621, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !621, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !621, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !621, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !621, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !621, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !621, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !621, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !621, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!658 = !{!615, !659}
!659 = !DIGlobalVariableExpression(var: !660, expr: !DIExpression())
!660 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !617, file: !661, line: 56, type: !139, isLocal: true, isDefinition: true)
!661 = !DIFile(filename: "lib/closeout.c", directory: "/home/mohamad/clone/coreutils")
!662 = !DIGlobalVariableExpression(var: !663, expr: !DIExpression())
!663 = distinct !DIGlobalVariable(name: "exit_failure", scope: !664, file: !668, line: 24, type: !612, isLocal: false, isDefinition: true)
!664 = distinct !DICompileUnit(language: DW_LANG_C99, file: !665, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !666, globals: !667, nameTableKind: None)
!665 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mohamad/clone/coreutils")
!666 = !{!612}
!667 = !{!662}
!668 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mohamad/clone/coreutils")
!669 = !DIGlobalVariableExpression(var: !670, expr: !DIExpression())
!670 = distinct !DIGlobalVariable(name: "default_tuning", scope: !671, file: !677, line: 130, type: !693, isLocal: true, isDefinition: true)
!671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !672, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !673, globals: !721, nameTableKind: None)
!672 = !DIFile(filename: "./lib/hash.c", directory: "/home/mohamad/clone/coreutils")
!673 = !{!54, !47, !52, !674, !686, !680, !144, !390, !709, !719, !451, !114, !693, !720, !675, !692, !704, !714, !553, !698, !139, !5}
!674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !675)
!675 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !240, line: 69, baseType: !676)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !677, line: 52, size: 640, elements: !678)
!677 = !DIFile(filename: "lib/hash.c", directory: "/home/mohamad/clone/coreutils")
!678 = !{!679, !685, !688, !689, !690, !691, !703, !708, !713, !718}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !676, file: !677, line: 57, baseType: !680, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !677, line: 46, size: 128, elements: !682)
!682 = !{!683, !684}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !681, file: !677, line: 48, baseType: !47, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !681, file: !677, line: 49, baseType: !680, size: 64, offset: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !676, file: !677, line: 58, baseType: !686, size: 64, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !681)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !676, file: !677, line: 59, baseType: !52, size: 64, offset: 128)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !676, file: !677, line: 60, baseType: !52, size: 64, offset: 192)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !676, file: !677, line: 61, baseType: !52, size: 64, offset: 256)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !676, file: !677, line: 64, baseType: !692, size: 64, offset: 320)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !240, line: 65, baseType: !695)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !240, line: 53, size: 160, elements: !696)
!696 = !{!697, !699, !700, !701, !702}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !695, file: !240, line: 58, baseType: !698, size: 32)
!698 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !695, file: !240, line: 59, baseType: !698, size: 32, offset: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !695, file: !240, line: 60, baseType: !698, size: 32, offset: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !695, file: !240, line: 61, baseType: !698, size: 32, offset: 96)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !695, file: !240, line: 62, baseType: !139, size: 8, offset: 128)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !676, file: !677, line: 71, baseType: !704, size: 64, offset: 384)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !240, line: 48, baseType: !705)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = !DISubroutineType(types: !707)
!707 = !{!52, !553, !52}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !676, file: !677, line: 72, baseType: !709, size: 64, offset: 448)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !240, line: 49, baseType: !710)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!139, !553, !553}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !676, file: !677, line: 73, baseType: !714, size: 64, offset: 512)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !240, line: 50, baseType: !715)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{null, !47}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !676, file: !677, line: 76, baseType: !680, size: 64, offset: 576)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!721 = !{!669}
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "program_name", scope: !724, file: !766, line: 33, type: !113, isLocal: false, isDefinition: true)
!724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !725, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !726, globals: !765, nameTableKind: None)
!725 = !DIFile(filename: "./lib/progname.c", directory: "/home/mohamad/clone/coreutils")
!726 = !{!47, !7, !113, !118, !727, !114, !369, !224}
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !729)
!729 = !{!730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !728, file: !2, line: 242, baseType: !5, size: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !728, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !728, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !728, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !728, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !728, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !728, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !728, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !728, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !728, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !728, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !728, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !728, file: !2, line: 260, baseType: !743, size: 64, offset: 768)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !745)
!745 = !{!746, !747, !748}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !744, file: !2, line: 157, baseType: !743, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !744, file: !2, line: 158, baseType: !727, size: 64, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !744, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !728, file: !2, line: 262, baseType: !727, size: 64, offset: 832)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !728, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !728, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !728, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !728, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !728, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !728, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !728, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !728, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !728, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !728, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !728, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !728, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !728, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !728, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !728, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!765 = !{!722}
!766 = !DIFile(filename: "lib/progname.c", directory: "/home/mohamad/clone/coreutils")
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !769, file: !792, line: 85, type: !787, isLocal: false, isDefinition: true)
!769 = distinct !DICompileUnit(language: DW_LANG_C99, file: !770, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !771, retainedTypes: !786, globals: !828, nameTableKind: None)
!770 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mohamad/clone/coreutils")
!771 = !{!772}
!772 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !773, line: 32, baseType: !67, size: 32, elements: !774)
!773 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mohamad/clone/coreutils")
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785}
!775 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!776 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!777 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!778 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!779 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!780 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!781 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!782 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!783 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!784 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!785 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!786 = !{!5, !34, !52, !787, !788, !790, !451, !800, !797, !67, !113, !801, !803, !7, !804, !492, !139, !264, !114, !809, !811, !822, !823, !825, !224, !369, !136}
!787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !558, size: 704, elements: !304)
!788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !789, size: 320, elements: !142)
!789 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !772)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !792, line: 65, size: 448, elements: !793)
!792 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mohamad/clone/coreutils")
!793 = !{!794, !795, !796, !798, !799}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !791, file: !792, line: 68, baseType: !772, size: 32)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !791, file: !792, line: 71, baseType: !5, size: 32, offset: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !791, file: !792, line: 75, baseType: !797, size: 256, offset: 64)
!797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 256, elements: !370)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !791, file: !792, line: 78, baseType: !113, size: 64, offset: 320)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !791, file: !792, line: 81, baseType: !113, size: 64, offset: 384)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !791)
!803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !797)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !792, line: 834, size: 128, elements: !806)
!806 = !{!807, !808}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !805, file: !792, line: 836, baseType: !52, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !805, file: !792, line: 837, baseType: !7, size: 64, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !812, line: 106, baseType: !813)
!812 = !DIFile(filename: "/usr/include/wchar.h", directory: "")
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !812, line: 94, baseType: !814)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 82, size: 64, elements: !815)
!815 = !{!816, !817}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !814, file: !812, line: 84, baseType: !5, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !814, file: !812, line: 93, baseType: !818, size: 32, offset: 32)
!818 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !814, file: !812, line: 85, size: 32, elements: !819)
!819 = !{!820, !821}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !818, file: !812, line: 88, baseType: !67, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !818, file: !812, line: 92, baseType: !224, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !53, line: 74, baseType: !5)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !67)
!825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 48, elements: !826)
!826 = !{!827}
!827 = !DISubrange(count: 6)
!828 = !{!767, !829, !831, !833, !835, !837, !839, !841}
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !769, file: !792, line: 101, type: !788, isLocal: false, isDefinition: true)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !769, file: !792, line: 1052, type: !791, isLocal: false, isDefinition: true)
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !769, file: !792, line: 116, type: !791, isLocal: true, isDefinition: true)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "slot0", scope: !769, file: !792, line: 842, type: !492, isLocal: true, isDefinition: true)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "slotvec", scope: !769, file: !792, line: 845, type: !804, isLocal: true, isDefinition: true)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "nslots", scope: !769, file: !792, line: 843, type: !5, isLocal: true, isDefinition: true)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "slotvec0", scope: !769, file: !792, line: 844, type: !805, isLocal: true, isDefinition: true)
!843 = !DIGlobalVariableExpression(var: !844, expr: !DIExpression())
!844 = distinct !DIGlobalVariable(name: "comparison_function_table", scope: !845, file: !858, line: 74, type: !868, isLocal: true, isDefinition: true)
!845 = distinct !DICompileUnit(language: DW_LANG_C99, file: !846, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !847, retainedTypes: !855, globals: !882, nameTableKind: None)
!846 = !DIFile(filename: "./lib/savedir.c", directory: "/home/mohamad/clone/coreutils")
!847 = !{!848}
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "savedir_option", file: !849, line: 26, baseType: !67, size: 32, elements: !850)
!849 = !DIFile(filename: "./lib/savedir.h", directory: "/home/mohamad/clone/coreutils")
!850 = !{!851, !852, !853, !854}
!851 = !DIEnumerator(name: "SAVEDIR_SORT_NONE", value: 0, isUnsigned: true)
!852 = !DIEnumerator(name: "SAVEDIR_SORT_NAME", value: 1, isUnsigned: true)
!853 = !DIEnumerator(name: "SAVEDIR_SORT_INODE", value: 2, isUnsigned: true)
!854 = !DIEnumerator(name: "SAVEDIR_SORT_FASTREAD", value: 2, isUnsigned: true)
!855 = !{!47, !7, !52, !856, !5, !864, !868, !870, !113, !879, !857, !257, !863, !8, !530, !880, !881}
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "direntry_t", file: !858, line: 46, baseType: !859)
!858 = !DIFile(filename: "lib/savedir.c", directory: "/home/mohamad/clone/coreutils")
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !858, line: 40, size: 128, elements: !860)
!860 = !{!861, !862}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !859, file: !858, line: 42, baseType: !7, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !859, file: !858, line: 44, baseType: !863, size: 64, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !532, line: 34, baseType: !257)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "comparison_function", file: !858, line: 72, baseType: !865)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!5, !553, !553}
!868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !869, size: 192, elements: !137)
!869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !864)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !872)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !536, line: 22, size: 2240, elements: !873)
!873 = !{!874, !875, !876, !877, !878}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !872, file: !536, line: 25, baseType: !257, size: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !872, file: !536, line: 26, baseType: !30, size: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !872, file: !536, line: 31, baseType: !34, size: 16, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !872, file: !536, line: 32, baseType: !451, size: 8, offset: 144)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !872, file: !536, line: 33, baseType: !492, size: 2048, offset: 152)
!879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!882 = !{!843}
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "letters", scope: !885, file: !900, line: 184, type: !891, isLocal: true, isDefinition: true)
!885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !886, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !887, globals: !899, nameTableKind: None)
!886 = !DIFile(filename: "./lib/tempname.c", directory: "/home/mohamad/clone/coreutils")
!887 = !{!52, !7, !67, !5, !888, !891, !892, !895, !318, !898, !264, !158}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !890, line: 33, flags: DIFlagFwdDecl)
!890 = !DIFile(filename: "./lib/randint.h", directory: "/home/mohamad/clone/coreutils")
!891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 504, elements: !379)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{!5, !7, !47}
!895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 280, elements: !896)
!896 = !{!897}
!897 = !DISubrange(count: 35)
!898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 416, elements: !328)
!899 = !{!883}
!900 = !DIFile(filename: "lib/tempname.c", directory: "/home/mohamad/clone/coreutils")
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "ht", scope: !903, file: !904, line: 163, type: !238, isLocal: true, isDefinition: true)
!903 = distinct !DISubprogram(name: "utimecmpat", scope: !904, file: !904, line: 132, type: !905, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !930, retainedNodes: !213)
!904 = !DIFile(filename: "lib/utimecmp.c", directory: "/home/mohamad/clone/coreutils")
!905 = !DISubroutineType(types: !906)
!906 = !{!5, !5, !113, !907, !907, !5}
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !909)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !910)
!910 = !{!911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !927, !928, !929}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !909, file: !336, line: 48, baseType: !260, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !909, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !909, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !909, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !909, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !909, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !909, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !909, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !909, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !909, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !909, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !909, file: !336, line: 91, baseType: !923, size: 128, offset: 576)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !924)
!924 = !{!925, !926}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !923, file: !355, line: 122, baseType: !358, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !923, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !909, file: !336, line: 92, baseType: !923, size: 128, offset: 704)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !909, file: !336, line: 93, baseType: !923, size: 128, offset: 832)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !909, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !931, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !932, globals: !943, nameTableKind: None)
!931 = !DIFile(filename: "./lib/utimecmp.c", directory: "/home/mohamad/clone/coreutils")
!932 = !{!933, !358, !5, !934, !139, !260, !259, !940, !360, !941}
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !355, line: 75, baseType: !358)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_res", file: !904, line: 66, size: 128, elements: !936)
!936 = !{!937, !938, !939}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !935, file: !904, line: 69, baseType: !259, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !935, file: !904, line: 76, baseType: !5, size: 32, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "exact", scope: !935, file: !904, line: 80, baseType: !139, size: 8, offset: 96)
!940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !923, size: 256, elements: !243)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!943 = !{!901, !944}
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "new_dst_res", scope: !903, file: !904, line: 166, type: !934, isLocal: true, isDefinition: true)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "utimensat_works_really", scope: !948, file: !968, line: 75, type: !5, isLocal: true, isDefinition: true)
!948 = distinct !DICompileUnit(language: DW_LANG_C99, file: !949, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !950, globals: !965, nameTableKind: None)
!949 = !DIFile(filename: "./lib/utimens.c", directory: "/home/mohamad/clone/coreutils")
!950 = !{!951, !956, !5, !360, !957, !964, !358, !963, !139, !933, !165}
!951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 256, elements: !243)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !953)
!953 = !{!954, !955}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !952, file: !355, line: 122, baseType: !358, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !952, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 256, elements: !243)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !959, line: 30, size: 128, elements: !960)
!959 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "")
!960 = !{!961, !962}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !958, file: !959, line: 32, baseType: !358, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !958, file: !959, line: 33, baseType: !963, size: 64, offset: 64)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !31, line: 141, baseType: !32)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!965 = !{!946, !966}
!966 = !DIGlobalVariableExpression(var: !967, expr: !DIExpression())
!967 = distinct !DIGlobalVariable(name: "lutimensat_works_really", scope: !948, file: !968, line: 76, type: !5, isLocal: true, isDefinition: true)
!968 = !DIFile(filename: "lib/utimens.c", directory: "/home/mohamad/clone/coreutils")
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !971, file: !975, line: 26, type: !309, isLocal: false, isDefinition: true)
!971 = distinct !DICompileUnit(language: DW_LANG_C99, file: !972, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !973, globals: !974, nameTableKind: None)
!972 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mohamad/clone/coreutils")
!973 = !{!309}
!974 = !{!969}
!975 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mohamad/clone/coreutils")
!976 = !DIGlobalVariableExpression(var: !977, expr: !DIExpression())
!977 = distinct !DIGlobalVariable(name: "initialized", scope: !978, file: !979, line: 34, type: !139, isLocal: true, isDefinition: true)
!978 = distinct !DISubprogram(name: "can_write_any_file", scope: !979, file: !979, line: 32, type: !980, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !982, retainedNodes: !213)
!979 = !DIFile(filename: "lib/write-any-file.c", directory: "/home/mohamad/clone/coreutils")
!980 = !DISubroutineType(types: !981)
!981 = !{!139}
!982 = distinct !DICompileUnit(language: DW_LANG_C99, file: !983, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !981, globals: !984, nameTableKind: None)
!983 = !DIFile(filename: "./lib/write-any-file.c", directory: "/home/mohamad/clone/coreutils")
!984 = !{!976, !985}
!985 = !DIGlobalVariableExpression(var: !986, expr: !DIExpression())
!986 = distinct !DIGlobalVariable(name: "can_write", scope: !978, file: !979, line: 35, type: !139, isLocal: true, isDefinition: true)
!987 = !DIGlobalVariableExpression(var: !988, expr: !DIExpression())
!988 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !989, file: !1032, line: 67, type: !559, isLocal: false, isDefinition: true)
!989 = distinct !DICompileUnit(language: DW_LANG_C99, file: !990, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !991, globals: !1031, nameTableKind: None)
!990 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mohamad/clone/coreutils")
!991 = !{!47, !113, !559, !52, !495, !139, !992, !114, !230, !166, !176, !993, !369, !543}
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !995)
!995 = !{!996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !994, file: !2, line: 242, baseType: !5, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !994, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !994, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !994, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !994, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !994, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !994, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !994, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !994, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !994, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !994, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !994, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !994, file: !2, line: 260, baseType: !1009, size: 64, offset: 768)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1011)
!1011 = !{!1012, !1013, !1014}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1010, file: !2, line: 157, baseType: !1009, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1010, file: !2, line: 158, baseType: !993, size: 64, offset: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1010, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !994, file: !2, line: 262, baseType: !993, size: 64, offset: 832)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !994, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !994, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !994, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !994, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !994, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !994, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !994, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !994, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !994, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !994, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !994, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !994, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !994, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !994, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !994, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1031 = !{!987}
!1032 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mohamad/clone/coreutils")
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !1035, file: !1036, line: 507, type: !5, isLocal: true, isDefinition: true)
!1035 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD_CLOEXEC", scope: !1036, file: !1036, line: 488, type: !1037, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1039, retainedNodes: !213)
!1036 = !DIFile(filename: "lib/fcntl.c", directory: "/home/mohamad/clone/coreutils")
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!5, !5, !5}
!1039 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1040, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1041, globals: !1052, nameTableKind: None)
!1040 = !DIFile(filename: "./lib/fcntl.c", directory: "/home/mohamad/clone/coreutils")
!1041 = !{!1042, !5, !47}
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1043, line: 14, baseType: !1044)
!1043 = !DIFile(filename: "llvm/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mohamad/clone")
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1040, line: 208, baseType: !1045)
!1045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1046, size: 192, elements: !39)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1040, line: 208, size: 192, elements: !1047)
!1047 = !{!1048, !1049, !1050, !1051}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1046, file: !1040, line: 208, baseType: !67, size: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1046, file: !1040, line: 208, baseType: !67, size: 32, offset: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1046, file: !1040, line: 208, baseType: !47, size: 64, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1046, file: !1040, line: 208, baseType: !47, size: 64, offset: 128)
!1052 = !{!1033}
!1053 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1054, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1055, retainedTypes: !1065, nameTableKind: None)
!1054 = !DIFile(filename: "src/remove.c", directory: "/home/mohamad/clone/coreutils")
!1055 = !{!103, !97, !1056, !1061}
!1056 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ternary", file: !1054, line: 35, baseType: !67, size: 32, elements: !1057)
!1057 = !{!1058, !1059, !1060}
!1058 = !DIEnumerator(name: "T_UNKNOWN", value: 2, isUnsigned: true)
!1059 = !DIEnumerator(name: "T_NO", value: 3, isUnsigned: true)
!1060 = !DIEnumerator(name: "T_YES", value: 4, isUnsigned: true)
!1061 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Prompt_action", file: !1054, line: 46, baseType: !67, size: 32, elements: !1062)
!1062 = !{!1063, !1064}
!1063 = !DIEnumerator(name: "PA_DESCEND_INTO_DIR", value: 2, isUnsigned: true)
!1064 = !DIEnumerator(name: "PA_REMOVE_DIR", value: 3, isUnsigned: true)
!1065 = !{!47, !5, !1066, !139, !1067, !1160, !173, !185, !147, !1162, !1161, !34, !1068, !7, !495, !233, !264, !136, !1163, !1096, !257, !256, !260, !259, !130, !1168, !321, !261, !1171, !297, !1174, !1175, !176, !118, !245, !530, !1178, !879, !1073, !32, !113, !8, !1187, !1188, !1189, !165, !1190, !1228, !1231, !895, !434, !30, !170}
!1066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1069, line: 197, baseType: !1070)
!1069 = !DIFile(filename: "./lib/fts_.h", directory: "/home/mohamad/clone/coreutils")
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1069, line: 80, size: 1024, elements: !1071)
!1071 = !{!1072, !1122, !1123, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1138, !1139, !1142, !1149}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !1070, file: !1069, line: 81, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1069, line: 199, size: 2112, elements: !1075)
!1075 = !{!1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1092, !1093, !1094, !1095, !1118}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1074, file: !1069, line: 200, baseType: !1073, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !1074, file: !1069, line: 201, baseType: !1073, size: 64, offset: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !1074, file: !1069, line: 202, baseType: !1073, size: 64, offset: 128)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !1074, file: !1069, line: 203, baseType: !530, size: 64, offset: 192)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !1074, file: !1069, line: 206, baseType: !32, size: 64, offset: 256)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !1074, file: !1069, line: 207, baseType: !47, size: 64, offset: 320)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !1074, file: !1069, line: 208, baseType: !7, size: 64, offset: 384)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1074, file: !1069, line: 209, baseType: !7, size: 64, offset: 448)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !1074, file: !1069, line: 210, baseType: !5, size: 32, offset: 512)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !1074, file: !1069, line: 211, baseType: !5, size: 32, offset: 544)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1074, file: !1069, line: 212, baseType: !52, size: 64, offset: 576)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !1074, file: !1069, line: 214, baseType: !1067, size: 64, offset: 640)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !1074, file: !1069, line: 218, baseType: !495, size: 64, offset: 704)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !1074, file: !1069, line: 220, baseType: !52, size: 64, offset: 768)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !1074, file: !1069, line: 225, baseType: !1091, size: 64, offset: 832)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !237, line: 75, baseType: !333)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !1074, file: !1069, line: 241, baseType: !34, size: 16, offset: 896)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !1074, file: !1069, line: 245, baseType: !34, size: 16, offset: 912)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !1074, file: !1069, line: 251, baseType: !34, size: 16, offset: 928)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !1074, file: !1069, line: 253, baseType: !1096, size: 1152, offset: 960)
!1096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1097, size: 1152, elements: !39)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !1098)
!1098 = !{!1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1115, !1116, !1117}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1097, file: !336, line: 48, baseType: !260, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1097, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1097, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1097, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1097, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1097, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1097, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1097, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1097, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1097, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1097, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1097, file: !336, line: 91, baseType: !1111, size: 128, offset: 576)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !1112)
!1112 = !{!1113, !1114}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1111, file: !355, line: 122, baseType: !358, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1111, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1097, file: !336, line: 92, baseType: !1111, size: 128, offset: 704)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1097, file: !336, line: 93, baseType: !1111, size: 128, offset: 832)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1097, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !1074, file: !1069, line: 254, baseType: !1119, offset: 2112)
!1119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, elements: !1120)
!1120 = !{!1121}
!1121 = !DISubrange(count: -1)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !1070, file: !1069, line: 82, baseType: !1073, size: 64, offset: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !1070, file: !1069, line: 83, baseType: !1124, size: 64, offset: 128)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !1070, file: !1069, line: 84, baseType: !259, size: 64, offset: 192)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1070, file: !1069, line: 85, baseType: !7, size: 64, offset: 256)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !1070, file: !1069, line: 86, baseType: !5, size: 32, offset: 320)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !1070, file: !1069, line: 87, baseType: !5, size: 32, offset: 352)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1070, file: !1069, line: 89, baseType: !52, size: 64, offset: 384)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !1070, file: !1069, line: 90, baseType: !52, size: 64, offset: 448)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !1070, file: !1069, line: 91, baseType: !1132, size: 64, offset: 512)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!5, !1135, !1135}
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1074)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !1070, file: !1069, line: 160, baseType: !5, size: 32, offset: 576)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !1070, file: !1069, line: 169, baseType: !1140, size: 64, offset: 640)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !1069, line: 169, flags: DIFlagFwdDecl)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1070, file: !1069, line: 191, baseType: !1143, size: 64, offset: 704)
!1143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1070, file: !1069, line: 171, size: 64, elements: !1144)
!1144 = !{!1145, !1146}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !1143, file: !1069, line: 184, baseType: !1140, size: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1143, file: !1069, line: 190, baseType: !1147, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !1069, line: 190, flags: DIFlagFwdDecl)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !1070, file: !1069, line: 196, baseType: !1150, size: 256, offset: 768)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1151, line: 39, baseType: !1152)
!1151 = !DIFile(filename: "./lib/i-ring.h", directory: "/home/mohamad/clone/coreutils")
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1151, line: 31, size: 256, elements: !1153)
!1153 = !{!1154, !1156, !1157, !1158, !1159}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !1152, file: !1151, line: 33, baseType: !1155, size: 128)
!1155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 128, elements: !225)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !1152, file: !1151, line: 34, baseType: !5, size: 32, offset: 128)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !1152, file: !1151, line: 35, baseType: !67, size: 32, offset: 160)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !1152, file: !1151, line: 36, baseType: !67, size: 32, offset: 192)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !1152, file: !1151, line: 37, baseType: !139, size: 8, offset: 224)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1069, line: 255, baseType: !1074)
!1162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 480, elements: !367)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !253, line: 7, size: 128, elements: !1165)
!1165 = !{!1166, !1167}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1164, file: !253, line: 9, baseType: !256, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1164, file: !253, line: 10, baseType: !259, size: 64, offset: 64)
!1168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 464, elements: !1169)
!1169 = !{!1170}
!1170 = !DISubrange(count: 58)
!1171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 368, elements: !1172)
!1172 = !{!1173}
!1173 = !DISubrange(count: 46)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ternary", file: !1054, line: 41, baseType: !1056)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1488, elements: !1176)
!1176 = !{!1177}
!1177 = !DISubrange(count: 186)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1180)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !536, line: 22, size: 2240, elements: !1181)
!1181 = !{!1182, !1183, !1184, !1185, !1186}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1180, file: !536, line: 25, baseType: !257, size: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1180, file: !536, line: 26, baseType: !30, size: 64, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1180, file: !536, line: 31, baseType: !34, size: 16, offset: 128)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1180, file: !536, line: 32, baseType: !451, size: 8, offset: 144)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1180, file: !536, line: 33, baseType: !492, size: 2048, offset: 152)
!1187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1068)
!1188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1161)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1191, file: !2, line: 242, baseType: !5, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1191, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1191, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1191, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1191, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1191, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1191, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1191, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1191, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1191, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1191, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1191, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1191, file: !2, line: 260, baseType: !1206, size: 64, offset: 768)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1208)
!1208 = !{!1209, !1210, !1211}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1207, file: !2, line: 157, baseType: !1206, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1207, file: !2, line: 158, baseType: !1190, size: 64, offset: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1207, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1191, file: !2, line: 262, baseType: !1190, size: 64, offset: 832)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1191, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1191, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1191, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1191, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1191, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1191, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1191, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1191, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1191, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1191, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1191, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1191, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1191, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1191, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1191, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 384, elements: !1229)
!1229 = !{!1230}
!1230 = !DISubrange(count: 48)
!1231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 256, elements: !1232)
!1232 = !{!1233}
!1233 = !DISubrange(count: 32)
!1234 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1235, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1236, nameTableKind: None)
!1235 = !DIFile(filename: "src/extent-scan.c", directory: "/home/mohamad/clone/coreutils")
!1236 = !{!1237, !5, !52, !1238, !139, !67, !1244, !1268, !1257, !1249, !1252, !1269, !1272, !1275, !1276}
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !237, line: 86, baseType: !30)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !439, line: 23, size: 192, elements: !1240)
!1240 = !{!1241, !1242, !1243}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !1239, file: !439, line: 26, baseType: !1237, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !1239, file: !439, line: 29, baseType: !1237, size: 64, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !1239, file: !439, line: 32, baseType: !67, size: 32, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap", file: !1246, line: 35, size: 256, elements: !1247)
!1246 = !DIFile(filename: "src/fiemap.h", directory: "/home/mohamad/clone/coreutils")
!1247 = !{!1248, !1250, !1251, !1253, !1254, !1255, !1256}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "fm_start", scope: !1245, file: !1246, line: 38, baseType: !1249, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !477, line: 55, baseType: !54)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "fm_length", scope: !1245, file: !1246, line: 41, baseType: !1249, size: 64, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1245, file: !1246, line: 44, baseType: !1252, size: 32, offset: 128)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !477, line: 51, baseType: !67)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "fm_mapped_extents", scope: !1245, file: !1246, line: 47, baseType: !1252, size: 32, offset: 160)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extent_count", scope: !1245, file: !1246, line: 50, baseType: !1252, size: 32, offset: 192)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "fm_reserved", scope: !1245, file: !1246, line: 52, baseType: !1252, size: 32, offset: 224)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extents", scope: !1245, file: !1246, line: 55, baseType: !1257, offset: 256)
!1257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1258, elements: !1120)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent", file: !1246, line: 14, size: 448, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1263, !1265, !1266}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "fe_logical", scope: !1258, file: !1246, line: 18, baseType: !1249, size: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "fe_physical", scope: !1258, file: !1246, line: 22, baseType: !1249, size: 64, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "fe_length", scope: !1258, file: !1246, line: 25, baseType: !1249, size: 64, offset: 128)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved64", scope: !1258, file: !1246, line: 27, baseType: !1264, size: 128, offset: 192)
!1264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1249, size: 128, elements: !243)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "fe_flags", scope: !1258, file: !1246, line: 30, baseType: !1252, size: 32, offset: 320)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved", scope: !1258, file: !1246, line: 32, baseType: !1267, size: 96, offset: 352)
!1267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1252, size: 96, elements: !137)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 440, elements: !1270)
!1270 = !{!1271}
!1271 = !DISubrange(count: 55)
!1272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 144, elements: !1273)
!1273 = !{!1274}
!1274 = !DISubrange(count: 18)
!1275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 360, elements: !131)
!1276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 512, elements: !1277)
!1277 = !{!1278}
!1278 = !DISubrange(count: 64)
!1279 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1280, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, nameTableKind: None)
!1280 = !DIFile(filename: "src/selinux.c", directory: "/home/mohamad/clone/coreutils")
!1281 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1282, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1283, nameTableKind: None)
!1282 = !DIFile(filename: "./lib/copy-acl.c", directory: "/home/mohamad/clone/coreutils")
!1283 = !{!5, !136, !381}
!1284 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1285, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1286, nameTableKind: None)
!1285 = !DIFile(filename: "./lib/set-acl.c", directory: "/home/mohamad/clone/coreutils")
!1286 = !{!5, !230}
!1287 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1288, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1289, nameTableKind: None)
!1288 = !DIFile(filename: "./lib/areadlink-with-size.c", directory: "/home/mohamad/clone/coreutils")
!1289 = !{!47, !52, !529, !1290, !7, !5}
!1290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1024, elements: !1291)
!1291 = !{!1292}
!1292 = !DISubrange(count: 128)
!1293 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1294, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !551, nameTableKind: None)
!1294 = !DIFile(filename: "./lib/backup-rename.c", directory: "/home/mohamad/clone/coreutils")
!1295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1296, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1297, nameTableKind: None)
!1296 = !DIFile(filename: "./lib/buffer-lcm.c", directory: "/home/mohamad/clone/coreutils")
!1297 = !{!52}
!1298 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1299, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1300, nameTableKind: None)
!1299 = !DIFile(filename: "./lib/dirname.c", directory: "/home/mohamad/clone/coreutils")
!1300 = !{!7}
!1301 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1302, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1303, nameTableKind: None)
!1302 = !DIFile(filename: "./lib/dirname-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1303 = !{!52, !113, !139, !7}
!1304 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1305, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1306, nameTableKind: None)
!1305 = !DIFile(filename: "./lib/basename-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1306 = !{!7, !113, !114, !139, !52}
!1307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1308, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1309, nameTableKind: None)
!1308 = !DIFile(filename: "./lib/stripslash.c", directory: "/home/mohamad/clone/coreutils")
!1309 = !{!7, !139, !8}
!1310 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1311, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1312, nameTableKind: None)
!1311 = !DIFile(filename: "./lib/fadvise.c", directory: "/home/mohamad/clone/coreutils")
!1312 = !{!1313}
!1313 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1314, line: 45, baseType: !67, size: 32, elements: !1315)
!1314 = !DIFile(filename: "./lib/fadvise.h", directory: "/home/mohamad/clone/coreutils")
!1315 = !{!1316, !1317, !1318, !1319, !1320, !1321}
!1316 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0, isUnsigned: true)
!1317 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2, isUnsigned: true)
!1318 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5, isUnsigned: true)
!1319 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4, isUnsigned: true)
!1320 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3, isUnsigned: true)
!1321 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1, isUnsigned: true)
!1322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1323, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1324, nameTableKind: None)
!1323 = !DIFile(filename: "./lib/open-safer.c", directory: "/home/mohamad/clone/coreutils")
!1324 = !{!236, !1325}
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1043, line: 14, baseType: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1323, line: 35, baseType: !1327)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1328, size: 192, elements: !39)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1323, line: 35, size: 192, elements: !1329)
!1329 = !{!1330, !1331, !1332, !1333}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1328, file: !1323, line: 35, baseType: !67, size: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1328, file: !1323, line: 35, baseType: !67, size: 32, offset: 32)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1328, file: !1323, line: 35, baseType: !47, size: 64, offset: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1328, file: !1323, line: 35, baseType: !47, size: 64, offset: 128)
!1334 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1335, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1336, nameTableKind: None)
!1335 = !DIFile(filename: "./lib/file-set.c", directory: "/home/mohamad/clone/coreutils")
!1336 = !{!47, !7, !1337, !257, !256, !260, !259}
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1339, line: 9, size: 192, elements: !1340)
!1339 = !DIFile(filename: "./lib/hash-triple.h", directory: "/home/mohamad/clone/coreutils")
!1340 = !{!1341, !1342, !1343}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1338, file: !1339, line: 11, baseType: !7, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1338, file: !1339, line: 12, baseType: !256, size: 64, offset: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1338, file: !1339, line: 13, baseType: !259, size: 64, offset: 128)
!1344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1345, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1346, nameTableKind: None)
!1345 = !DIFile(filename: "./lib/file-type.c", directory: "/home/mohamad/clone/coreutils")
!1346 = !{!165, !30, !434, !147, !141, !169, !176, !220, !543, !611, !303}
!1347 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1348, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1349, nameTableKind: None)
!1348 = !DIFile(filename: "./lib/filemode.c", directory: "/home/mohamad/clone/coreutils")
!1349 = !{!7, !165}
!1350 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1351, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1352, nameTableKind: None)
!1351 = !DIFile(filename: "./lib/filenamecat.c", directory: "/home/mohamad/clone/coreutils")
!1352 = !{!47, !7}
!1353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1354, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1355, nameTableKind: None)
!1354 = !DIFile(filename: "./lib/filenamecat-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1355 = !{!47, !113, !52, !8, !114, !7}
!1356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1357, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1358, nameTableKind: None)
!1357 = !DIFile(filename: "./lib/full-write.c", directory: "/home/mohamad/clone/coreutils")
!1358 = !{!113, !52, !5, !114}
!1359 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1360, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1361, nameTableKind: None)
!1360 = !DIFile(filename: "./lib/hash-triple.c", directory: "/home/mohamad/clone/coreutils")
!1361 = !{!1362, !52, !7, !256, !259, !1369}
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1364)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1339, line: 9, size: 192, elements: !1365)
!1365 = !{!1366, !1367, !1368}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1364, file: !1339, line: 11, baseType: !7, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1364, file: !1339, line: 12, baseType: !256, size: 64, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1364, file: !1339, line: 13, baseType: !259, size: 64, offset: 128)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1370 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1371, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1372, nameTableKind: None)
!1371 = !DIFile(filename: "./lib/opendirat.c", directory: "/home/mohamad/clone/coreutils")
!1372 = !{!5, !530}
!1373 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1374, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, nameTableKind: None)
!1374 = !DIFile(filename: "./lib/priv-set.c", directory: "/home/mohamad/clone/coreutils")
!1375 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1376, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1377, nameTableKind: None)
!1376 = !DIFile(filename: "./lib/qcopy-acl.c", directory: "/home/mohamad/clone/coreutils")
!1377 = !{!5}
!1378 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1379, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1380, nameTableKind: None)
!1379 = !DIFile(filename: "./lib/qset-acl.c", directory: "/home/mohamad/clone/coreutils")
!1380 = !{!5, !236}
!1381 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1382, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1383, nameTableKind: None)
!1382 = !DIFile(filename: "./lib/renameatu.c", directory: "/home/mohamad/clone/coreutils")
!1383 = !{!7, !5, !52, !139, !113, !165}
!1384 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1385, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1386, nameTableKind: None)
!1385 = !DIFile(filename: "./lib/root-dev-ino.c", directory: "/home/mohamad/clone/coreutils")
!1386 = !{!264, !257, !256, !260, !259}
!1387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1388, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1389, nameTableKind: None)
!1388 = !DIFile(filename: "./lib/safe-write.c", directory: "/home/mohamad/clone/coreutils")
!1389 = !{!529, !5}
!1390 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1391, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1392, nameTableKind: None)
!1391 = !DIFile(filename: "./lib/same.c", directory: "/home/mohamad/clone/coreutils")
!1392 = !{!113, !52, !139, !7, !5, !136, !257, !260}
!1393 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1394, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1377, nameTableKind: None)
!1394 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/mohamad/clone/coreutils")
!1395 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1396, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1397, nameTableKind: None)
!1396 = !DIFile(filename: "./lib/stat-time.c", directory: "/home/mohamad/clone/coreutils")
!1397 = !{!360, !358}
!1398 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1399, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, nameTableKind: None)
!1399 = !DIFile(filename: "./lib/statat.c", directory: "/home/mohamad/clone/coreutils")
!1400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1401, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1377, nameTableKind: None)
!1401 = !DIFile(filename: "./lib/fd-safer.c", directory: "/home/mohamad/clone/coreutils")
!1402 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1403, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1404, nameTableKind: None)
!1403 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mohamad/clone/coreutils")
!1404 = !{!47, !170, !611, !1405, !224, !264, !1406, !1409, !173, !992, !220, !324, !1231, !312, !221, !1412, !1228, !327, !366, !52, !1415, !1416, !1426, !57, !245, !169, !110, !166}
!1405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, elements: !1120)
!1406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1368, elements: !1407)
!1407 = !{!1408}
!1408 = !DISubrange(count: 171)
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 272, elements: !1410)
!1410 = !{!1411}
!1411 = !DISubrange(count: 34)
!1412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 352, elements: !1413)
!1413 = !{!1414}
!1414 = !DISubrange(count: 44)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 640, elements: !142)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !293, line: 79, baseType: !1417)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1043, line: 32, baseType: !1418)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1403, line: 234, baseType: !1419)
!1419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1420, size: 192, elements: !39)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1403, line: 192, size: 192, elements: !1421)
!1421 = !{!1422, !1423, !1424, !1425}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1420, file: !1403, line: 192, baseType: !67, size: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1420, file: !1403, line: 192, baseType: !67, size: 32, offset: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1420, file: !1403, line: 192, baseType: !47, size: 64, offset: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1420, file: !1403, line: 192, baseType: !47, size: 64, offset: 128)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1428)
!1428 = !{!1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1427, file: !2, line: 242, baseType: !5, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1427, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1427, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1427, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1427, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1427, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1427, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1427, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1427, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1427, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1427, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1427, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1427, file: !2, line: 260, baseType: !1442, size: 64, offset: 768)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1444)
!1444 = !{!1445, !1446, !1447}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1443, file: !2, line: 157, baseType: !1442, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1443, file: !2, line: 158, baseType: !1426, size: 64, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1443, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1427, file: !2, line: 262, baseType: !1426, size: 64, offset: 832)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1427, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1427, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1427, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1427, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1427, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1427, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1427, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1427, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1427, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1427, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1427, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1427, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1427, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1427, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1427, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1464 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1465, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1466, nameTableKind: None)
!1465 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mohamad/clone/coreutils")
!1466 = !{!52, !7, !47}
!1467 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1468, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1469, nameTableKind: None)
!1468 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mohamad/clone/coreutils")
!1469 = !{!612, !136, !185}
!1470 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1471, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1472, nameTableKind: None)
!1471 = !DIFile(filename: "./lib/xfts.c", directory: "/home/mohamad/clone/coreutils")
!1472 = !{!47, !1473, !5, !173, !303, !1555, !1558, !1559, !495}
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1069, line: 197, baseType: !1475)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1069, line: 80, size: 1024, elements: !1476)
!1476 = !{!1477, !1523, !1524, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1539, !1540, !1541, !1546}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !1475, file: !1069, line: 81, baseType: !1478, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1069, line: 199, size: 2112, elements: !1480)
!1480 = !{!1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1522}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1479, file: !1069, line: 200, baseType: !1478, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !1479, file: !1069, line: 201, baseType: !1478, size: 64, offset: 64)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !1479, file: !1069, line: 202, baseType: !1478, size: 64, offset: 128)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !1479, file: !1069, line: 203, baseType: !530, size: 64, offset: 192)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !1479, file: !1069, line: 206, baseType: !32, size: 64, offset: 256)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !1479, file: !1069, line: 207, baseType: !47, size: 64, offset: 320)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !1479, file: !1069, line: 208, baseType: !7, size: 64, offset: 384)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1479, file: !1069, line: 209, baseType: !7, size: 64, offset: 448)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !1479, file: !1069, line: 210, baseType: !5, size: 32, offset: 512)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !1479, file: !1069, line: 211, baseType: !5, size: 32, offset: 544)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1479, file: !1069, line: 212, baseType: !52, size: 64, offset: 576)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !1479, file: !1069, line: 214, baseType: !1473, size: 64, offset: 640)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !1479, file: !1069, line: 218, baseType: !495, size: 64, offset: 704)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !1479, file: !1069, line: 220, baseType: !52, size: 64, offset: 768)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !1479, file: !1069, line: 225, baseType: !1091, size: 64, offset: 832)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !1479, file: !1069, line: 241, baseType: !34, size: 16, offset: 896)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !1479, file: !1069, line: 245, baseType: !34, size: 16, offset: 912)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !1479, file: !1069, line: 251, baseType: !34, size: 16, offset: 928)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !1479, file: !1069, line: 253, baseType: !1500, size: 1152, offset: 960)
!1500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1501, size: 1152, elements: !39)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !1502)
!1502 = !{!1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1519, !1520, !1521}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1501, file: !336, line: 48, baseType: !260, size: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1501, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1501, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1501, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1501, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1501, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1501, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1501, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1501, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1501, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1501, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1501, file: !336, line: 91, baseType: !1515, size: 128, offset: 576)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !1516)
!1516 = !{!1517, !1518}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1515, file: !355, line: 122, baseType: !358, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1515, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1501, file: !336, line: 92, baseType: !1515, size: 128, offset: 704)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1501, file: !336, line: 93, baseType: !1515, size: 128, offset: 832)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1501, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !1479, file: !1069, line: 254, baseType: !1119, offset: 2112)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !1475, file: !1069, line: 82, baseType: !1478, size: 64, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !1475, file: !1069, line: 83, baseType: !1525, size: 64, offset: 128)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !1475, file: !1069, line: 84, baseType: !259, size: 64, offset: 192)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1475, file: !1069, line: 85, baseType: !7, size: 64, offset: 256)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !1475, file: !1069, line: 86, baseType: !5, size: 32, offset: 320)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !1475, file: !1069, line: 87, baseType: !5, size: 32, offset: 352)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1475, file: !1069, line: 89, baseType: !52, size: 64, offset: 384)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !1475, file: !1069, line: 90, baseType: !52, size: 64, offset: 448)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !1475, file: !1069, line: 91, baseType: !1533, size: 64, offset: 512)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!5, !1536, !1536}
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1479)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !1475, file: !1069, line: 160, baseType: !5, size: 32, offset: 576)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !1475, file: !1069, line: 169, baseType: !1140, size: 64, offset: 640)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1475, file: !1069, line: 191, baseType: !1542, size: 64, offset: 704)
!1542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1475, file: !1069, line: 171, size: 64, elements: !1543)
!1543 = !{!1544, !1545}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !1542, file: !1069, line: 184, baseType: !1140, size: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1542, file: !1069, line: 190, baseType: !1147, size: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !1475, file: !1069, line: 196, baseType: !1547, size: 256, offset: 768)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1151, line: 39, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1151, line: 31, size: 256, elements: !1549)
!1549 = !{!1550, !1551, !1552, !1553, !1554}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !1548, file: !1151, line: 33, baseType: !1155, size: 128)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !1548, file: !1151, line: 34, baseType: !5, size: 32, offset: 128)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !1548, file: !1151, line: 35, baseType: !67, size: 32, offset: 160)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !1548, file: !1151, line: 36, baseType: !67, size: 32, offset: 192)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !1548, file: !1151, line: 37, baseType: !139, size: 8, offset: 224)
!1555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 624, elements: !1556)
!1556 = !{!1557}
!1557 = !DISubrange(count: 78)
!1558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!1559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1560)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1069, line: 255, baseType: !1479)
!1561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1562, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1563, nameTableKind: None)
!1562 = !DIFile(filename: "./lib/yesno.c", directory: "/home/mohamad/clone/coreutils")
!1563 = !{!139, !7, !52, !529, !1564}
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1566)
!1566 = !{!1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1565, file: !2, line: 242, baseType: !5, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1565, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1565, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1565, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1565, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1565, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1565, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1565, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1565, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1565, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1565, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1565, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1565, file: !2, line: 260, baseType: !1580, size: 64, offset: 768)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1582)
!1582 = !{!1583, !1584, !1585}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1581, file: !2, line: 157, baseType: !1580, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1581, file: !2, line: 158, baseType: !1564, size: 64, offset: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1581, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1565, file: !2, line: 262, baseType: !1564, size: 64, offset: 832)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1565, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1565, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1565, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1565, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1565, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1565, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1565, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1565, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1565, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1565, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1565, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1565, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1565, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1565, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1565, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1602 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1603, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1604, nameTableKind: None)
!1603 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mohamad/clone/coreutils")
!1604 = !{!47, !1605, !5}
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !293, line: 48, baseType: !1606)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1607)
!1607 = !{!1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1606, file: !2, line: 242, baseType: !5, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1606, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1606, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1606, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1606, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1606, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1606, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1606, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1606, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1606, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1606, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1606, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1606, file: !2, line: 260, baseType: !1621, size: 64, offset: 768)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1623)
!1623 = !{!1624, !1625, !1627}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1622, file: !2, line: 157, baseType: !1621, size: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1622, file: !2, line: 158, baseType: !1626, size: 64, offset: 64)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1622, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1606, file: !2, line: 262, baseType: !1626, size: 64, offset: 832)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1606, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1606, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1606, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1606, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1606, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1606, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1606, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1606, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1606, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1606, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1606, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1606, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1606, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1606, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1606, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1645, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1646, nameTableKind: None)
!1645 = !DIFile(filename: "./lib/freadahead.c", directory: "/home/mohamad/clone/coreutils")
!1646 = !{!1647, !7, !5}
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !293, line: 48, baseType: !1648)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1649)
!1649 = !{!1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1648, file: !2, line: 242, baseType: !5, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1648, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1648, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1648, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1648, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1648, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1648, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1648, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1648, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1648, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1648, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1648, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1648, file: !2, line: 260, baseType: !1663, size: 64, offset: 768)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1665)
!1665 = !{!1666, !1667, !1669}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1664, file: !2, line: 157, baseType: !1663, size: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1664, file: !2, line: 158, baseType: !1668, size: 64, offset: 64)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1664, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1648, file: !2, line: 262, baseType: !1668, size: 64, offset: 832)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1648, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1648, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1648, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1648, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1648, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1648, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1648, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1648, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1648, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1648, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1648, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1648, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1648, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1648, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1648, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1686 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1687, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1688, nameTableKind: None)
!1687 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mohamad/clone/coreutils")
!1688 = !{!47, !1689, !7, !292, !5, !45}
!1689 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !293, line: 48, baseType: !1690)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1691)
!1691 = !{!1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1690, file: !2, line: 242, baseType: !5, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1690, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1690, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1690, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1690, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1690, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1690, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1690, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1690, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1690, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1690, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1690, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1690, file: !2, line: 260, baseType: !1705, size: 64, offset: 768)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1707)
!1707 = !{!1708, !1709, !1711}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1706, file: !2, line: 157, baseType: !1705, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1706, file: !2, line: 158, baseType: !1710, size: 64, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1706, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1690, file: !2, line: 262, baseType: !1710, size: 64, offset: 832)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1690, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1690, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1690, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1690, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1690, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1690, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1690, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1690, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1690, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1690, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1690, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1690, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1690, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1690, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1690, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1728 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1729, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1730, retainedTypes: !1737, nameTableKind: None)
!1729 = !DIFile(filename: "./lib/fts.c", directory: "/home/mohamad/clone/coreutils")
!1730 = !{!1731}
!1731 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "leaf_optimization", file: !1732, line: 643, baseType: !67, size: 32, elements: !1733)
!1732 = !DIFile(filename: "lib/fts.c", directory: "/home/mohamad/clone/coreutils")
!1733 = !{!1734, !1735, !1736}
!1734 = !DIEnumerator(name: "NO_LEAF_OPTIMIZATION", value: 0, isUnsigned: true)
!1735 = !DIEnumerator(name: "OK_LEAF_OPTIMIZATION", value: 1, isUnsigned: true)
!1736 = !DIEnumerator(name: "NOSTAT_LEAF_OPTIMIZATION", value: 2, isUnsigned: true)
!1737 = !{!47, !1091, !476, !7, !32, !865, !1738, !1757, !1835, !52, !139, !5, !1758, !1772, !264, !1066, !38, !1741, !495, !113, !1745, !1119, !34, !1764, !1140, !1812, !260, !259, !530, !8, !30, !165, !136, !1781, !1836, !256, !1844, !1845, !257, !1740, !1847, !1849, !1856, !1854, !1855, !1857, !1859, !333, !1860, !492, !451, !236, !1775, !1868, !1869}
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1741)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1069, line: 255, baseType: !1742)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1069, line: 199, size: 2112, elements: !1743)
!1743 = !{!1744, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1834}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1742, file: !1069, line: 200, baseType: !1745, size: 64)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !1742, file: !1069, line: 201, baseType: !1745, size: 64, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !1742, file: !1069, line: 202, baseType: !1745, size: 64, offset: 128)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !1742, file: !1069, line: 203, baseType: !530, size: 64, offset: 192)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !1742, file: !1069, line: 206, baseType: !32, size: 64, offset: 256)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !1742, file: !1069, line: 207, baseType: !47, size: 64, offset: 320)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !1742, file: !1069, line: 208, baseType: !7, size: 64, offset: 384)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1742, file: !1069, line: 209, baseType: !7, size: 64, offset: 448)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !1742, file: !1069, line: 210, baseType: !5, size: 32, offset: 512)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !1742, file: !1069, line: 211, baseType: !5, size: 32, offset: 544)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1742, file: !1069, line: 212, baseType: !52, size: 64, offset: 576)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !1742, file: !1069, line: 214, baseType: !1757, size: 64, offset: 640)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 64)
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1069, line: 197, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1069, line: 80, size: 1024, elements: !1760)
!1760 = !{!1761, !1762, !1763, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1778, !1779, !1780, !1796}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !1759, file: !1069, line: 81, baseType: !1745, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !1759, file: !1069, line: 82, baseType: !1745, size: 64, offset: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !1759, file: !1069, line: 83, baseType: !1764, size: 64, offset: 128)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !1759, file: !1069, line: 84, baseType: !259, size: 64, offset: 192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1759, file: !1069, line: 85, baseType: !7, size: 64, offset: 256)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !1759, file: !1069, line: 86, baseType: !5, size: 32, offset: 320)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !1759, file: !1069, line: 87, baseType: !5, size: 32, offset: 352)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1759, file: !1069, line: 89, baseType: !52, size: 64, offset: 384)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !1759, file: !1069, line: 90, baseType: !52, size: 64, offset: 448)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !1759, file: !1069, line: 91, baseType: !1772, size: 64, offset: 512)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!5, !1775, !1775}
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1742)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !1759, file: !1069, line: 160, baseType: !5, size: 32, offset: 576)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !1759, file: !1069, line: 169, baseType: !1140, size: 64, offset: 640)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1759, file: !1069, line: 191, baseType: !1781, size: 64, offset: 704)
!1781 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1759, file: !1069, line: 171, size: 64, elements: !1782)
!1782 = !{!1783, !1784}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !1781, file: !1069, line: 184, baseType: !1140, size: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1781, file: !1069, line: 190, baseType: !1785, size: 64)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 64)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !1787, line: 28, size: 256, elements: !1788)
!1787 = !DIFile(filename: "./lib/cycle-check.h", directory: "/home/mohamad/clone/coreutils")
!1788 = !{!1789, !1794, !1795}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !1786, file: !1787, line: 30, baseType: !1790, size: 128)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !253, line: 7, size: 128, elements: !1791)
!1791 = !{!1792, !1793}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1790, file: !253, line: 9, baseType: !256, size: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1790, file: !253, line: 10, baseType: !259, size: 64, offset: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !1786, file: !1787, line: 31, baseType: !476, size: 64, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1786, file: !1787, line: 32, baseType: !5, size: 32, offset: 192)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !1759, file: !1069, line: 196, baseType: !1797, size: 256, offset: 768)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1151, line: 39, baseType: !1798)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1151, line: 31, size: 256, elements: !1799)
!1799 = !{!1800, !1801, !1802, !1803, !1804}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !1798, file: !1151, line: 33, baseType: !1155, size: 128)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !1798, file: !1151, line: 34, baseType: !5, size: 32, offset: 128)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !1798, file: !1151, line: 35, baseType: !67, size: 32, offset: 160)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !1798, file: !1151, line: 36, baseType: !67, size: 32, offset: 192)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !1798, file: !1151, line: 37, baseType: !139, size: 8, offset: 224)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !1742, file: !1069, line: 218, baseType: !495, size: 64, offset: 704)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !1742, file: !1069, line: 220, baseType: !52, size: 64, offset: 768)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !1742, file: !1069, line: 225, baseType: !1091, size: 64, offset: 832)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !1742, file: !1069, line: 241, baseType: !34, size: 16, offset: 896)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !1742, file: !1069, line: 245, baseType: !34, size: 16, offset: 912)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !1742, file: !1069, line: 251, baseType: !34, size: 16, offset: 928)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !1742, file: !1069, line: 253, baseType: !1812, size: 1152, offset: 960)
!1812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1813, size: 1152, elements: !39)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !1814)
!1814 = !{!1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1831, !1832, !1833}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1813, file: !336, line: 48, baseType: !260, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1813, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1813, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1813, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1813, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1813, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1813, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1813, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1813, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1813, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1813, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1813, file: !336, line: 91, baseType: !1827, size: 128, offset: 576)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !1828)
!1828 = !{!1829, !1830}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1827, file: !355, line: 122, baseType: !358, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1827, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1813, file: !336, line: 92, baseType: !1827, size: 128, offset: 704)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1813, file: !336, line: 93, baseType: !1827, size: 128, offset: 832)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1813, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !1742, file: !1069, line: 254, baseType: !1119, offset: 2112)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1838)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Active_dir", file: !1839, line: 24, size: 192, elements: !1840)
!1839 = !DIFile(filename: "./lib/fts-cycle.c", directory: "/home/mohamad/clone/coreutils")
!1840 = !{!1841, !1842, !1843}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1838, file: !1839, line: 26, baseType: !259, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1838, file: !1839, line: 27, baseType: !256, size: 64, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "fts_ent", scope: !1838, file: !1839, line: 28, baseType: !1835, size: 64, offset: 128)
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1758)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1813)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !240, line: 69, baseType: !1141)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_type", file: !1732, line: 677, size: 128, elements: !1851)
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1850, file: !1732, line: 679, baseType: !259, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !1850, file: !1732, line: 680, baseType: !1854, size: 64, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "fsword", file: !1732, line: 671, baseType: !1855)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsword_t", file: !31, line: 170, baseType: !32)
!1856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1812)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1850)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !536, line: 22, size: 2240, elements: !1862)
!1862 = !{!1863, !1864, !1865, !1866, !1867}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1861, file: !536, line: 25, baseType: !257, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1861, file: !536, line: 26, baseType: !30, size: 64, offset: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1861, file: !536, line: 31, baseType: !34, size: 16, offset: 128)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1861, file: !536, line: 32, baseType: !451, size: 8, offset: 144)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1861, file: !536, line: 33, baseType: !492, size: 2048, offset: 152)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1870 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1871, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1872, nameTableKind: None)
!1871 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mohamad/clone/coreutils")
!1872 = !{!52, !822, !451, !114}
!1873 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1874, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, nameTableKind: None)
!1874 = !DIFile(filename: "./lib/acl-internal.c", directory: "/home/mohamad/clone/coreutils")
!1875 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1876, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !459, nameTableKind: None)
!1876 = !DIFile(filename: "./lib/get-permissions.c", directory: "/home/mohamad/clone/coreutils")
!1877 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1878, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1879, nameTableKind: None)
!1878 = !DIFile(filename: "./lib/set-permissions.c", directory: "/home/mohamad/clone/coreutils")
!1879 = !{!139, !5, !236}
!1880 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1881, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1882, nameTableKind: None)
!1881 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mohamad/clone/coreutils")
!1882 = !{!67}
!1883 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1884, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1885, nameTableKind: None)
!1884 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mohamad/clone/coreutils")
!1885 = !{!449, !451, !450}
!1886 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1887, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1888, nameTableKind: None)
!1887 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mohamad/clone/coreutils")
!1888 = !{!1889, !5}
!1889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !139)
!1890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1891, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1892, nameTableKind: None)
!1891 = !DIFile(filename: "./lib/cycle-check.c", directory: "/home/mohamad/clone/coreutils")
!1892 = !{!476, !5, !144, !1272, !1893, !257, !256, !260, !259}
!1893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 536, elements: !1894)
!1894 = !{!1895}
!1895 = !DISubrange(count: 67)
!1896 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1897, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1898, nameTableKind: None)
!1897 = !DIFile(filename: "./lib/opendir-safer.c", directory: "/home/mohamad/clone/coreutils")
!1898 = !{!530, !5}
!1899 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1900, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, nameTableKind: None)
!1900 = !DIFile(filename: "./lib/gettime.c", directory: "/home/mohamad/clone/coreutils")
!1901 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1902, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1903, nameTableKind: None)
!1902 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mohamad/clone/coreutils")
!1903 = !{!139, !113, !264, !825}
!1904 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1905, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1906, nameTableKind: None)
!1905 = !DIFile(filename: "./lib/hash-pjw.c", directory: "/home/mohamad/clone/coreutils")
!1906 = !{!113, !52, !114}
!1907 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1908, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1909, nameTableKind: None)
!1908 = !DIFile(filename: "./lib/i-ring.c", directory: "/home/mohamad/clone/coreutils")
!1909 = !{!5, !1910, !139, !67, !1155, !1918}
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1151, line: 39, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1151, line: 31, size: 256, elements: !1912)
!1912 = !{!1913, !1914, !1915, !1916, !1917}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !1911, file: !1151, line: 33, baseType: !1155, size: 128)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !1911, file: !1151, line: 34, baseType: !5, size: 32, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !1911, file: !1151, line: 35, baseType: !67, size: 32, offset: 160)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !1911, file: !1151, line: 36, baseType: !67, size: 32, offset: 192)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !1911, file: !1151, line: 37, baseType: !139, size: 8, offset: 224)
!1918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1910)
!1919 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1920, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1921, nameTableKind: None)
!1920 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mohamad/clone/coreutils")
!1921 = !{!47, !113, !38, !825}
!1922 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1923, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1924, nameTableKind: None)
!1923 = !DIFile(filename: "./lib/openat-safer.c", directory: "/home/mohamad/clone/coreutils")
!1924 = !{!236, !1925}
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1043, line: 14, baseType: !1926)
!1926 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1923, line: 35, baseType: !1927)
!1927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1928, size: 192, elements: !39)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1923, line: 35, size: 192, elements: !1929)
!1929 = !{!1930, !1931, !1932, !1933}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1928, file: !1923, line: 35, baseType: !67, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1928, file: !1923, line: 35, baseType: !67, size: 32, offset: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1928, file: !1923, line: 35, baseType: !47, size: 64, offset: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1928, file: !1923, line: 35, baseType: !47, size: 64, offset: 128)
!1934 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1935, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1936, nameTableKind: None)
!1935 = !DIFile(filename: "./lib/randint.c", directory: "/home/mohamad/clone/coreutils")
!1936 = !{!1937, !1942, !1946, !52, !1948, !5}
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !1939, line: 54, size: 192, elements: !1940)
!1939 = !DIFile(filename: "lib/randint.c", directory: "/home/mohamad/clone/coreutils")
!1940 = !{!1941, !1945, !1947}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1938, file: !1939, line: 57, baseType: !1942, size: 64)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !1944, line: 25, flags: DIFlagFwdDecl)
!1944 = !DIFile(filename: "./lib/randread.h", directory: "/home/mohamad/clone/coreutils")
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "randnum", scope: !1938, file: !1939, line: 64, baseType: !1946, size: 64, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "randint", file: !890, line: 30, baseType: !476)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "randmax", scope: !1938, file: !1939, line: 65, baseType: !1946, size: 64, offset: 128)
!1948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !451, size: 64, elements: !370)
!1949 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1950, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1951, nameTableKind: None)
!1950 = !DIFile(filename: "./lib/randread.c", directory: "/home/mohamad/clone/coreutils")
!1951 = !{!52, !1952, !1992, !136, !2006, !2018, !1998, !553, !612, !5, !173, !318, !7, !529, !147, !8, !2032, !452, !451, !2029, !2034, !2019}
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !293, line: 48, baseType: !1954)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1955)
!1955 = !{!1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1954, file: !2, line: 242, baseType: !5, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1954, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1954, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1954, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1954, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1954, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1954, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1954, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1954, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1954, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1954, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1954, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1954, file: !2, line: 260, baseType: !1969, size: 64, offset: 768)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1971)
!1971 = !{!1972, !1973, !1975}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1970, file: !2, line: 157, baseType: !1969, size: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1970, file: !2, line: 158, baseType: !1974, size: 64, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1970, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1954, file: !2, line: 262, baseType: !1974, size: 64, offset: 832)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1954, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1954, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1954, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1954, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1954, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1954, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1954, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1954, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1954, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1954, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1954, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1954, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1954, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1954, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1954, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !1994, line: 79, size: 33216, elements: !1995)
!1994 = !DIFile(filename: "lib/randread.c", directory: "/home/mohamad/clone/coreutils")
!1995 = !{!1996, !1997, !2001, !2002}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1993, file: !1994, line: 83, baseType: !1952, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1993, file: !1994, line: 90, baseType: !1998, size: 64, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DISubroutineType(types: !2000)
!2000 = !{null, !553}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "handler_arg", scope: !1993, file: !1994, line: 91, baseType: !553, size: 64, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1993, file: !1994, line: 117, baseType: !2003, size: 33024, offset: 192)
!2003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1993, file: !1994, line: 96, size: 33024, elements: !2004)
!2004 = !{!2005, !2009}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2003, file: !1994, line: 99, baseType: !2006, size: 32768)
!2006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32768, elements: !2007)
!2007 = !{!2008}
!2008 = !DISubrange(count: 4096)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "isaac", scope: !2003, file: !1994, line: 116, baseType: !2010, size: 33024)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac", file: !1994, line: 102, size: 33024, elements: !2011)
!2011 = !{!2012, !2013, !2024}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !2010, file: !1994, line: 105, baseType: !52, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2010, file: !1994, line: 108, baseType: !2014, size: 16576, offset: 64)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2015, line: 56, size: 16576, elements: !2016)
!2015 = !DIFile(filename: "./lib/rand-isaac.h", directory: "/home/mohamad/clone/coreutils")
!2016 = !{!2017, !2021, !2022, !2023}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2014, file: !2015, line: 58, baseType: !2018, size: 16384)
!2018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2019, size: 16384, elements: !493)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "isaac_word", file: !2015, line: 44, baseType: !2020)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !477, line: 80, baseType: !54)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2014, file: !2015, line: 59, baseType: !2019, size: 64, offset: 16384)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2014, file: !2015, line: 59, baseType: !2019, size: 64, offset: 16448)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2014, file: !2015, line: 59, baseType: !2019, size: 64, offset: 16512)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2010, file: !1994, line: 115, baseType: !2025, size: 16384, offset: 16640)
!2025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2010, file: !1994, line: 111, size: 16384, elements: !2026)
!2026 = !{!2027, !2028}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2025, file: !1994, line: 113, baseType: !2018, size: 16384)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2025, file: !1994, line: 114, baseType: !2029, size: 16384)
!2029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !451, size: 16384, elements: !2030)
!2030 = !{!2031}
!2031 = !DISubrange(count: 2048)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !237, line: 98, baseType: !2033)
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !31, line: 133, baseType: !5)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2035 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2036, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !2037, nameTableKind: None)
!2036 = !DIFile(filename: "./lib/rand-isaac.c", directory: "/home/mohamad/clone/coreutils")
!2037 = !{!2019, !2034, !2018, !5, !553, !113, !114, !2038, !2039}
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2019)
!2040 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2041, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, nameTableKind: None)
!2041 = !DIFile(filename: "./lib/dup-safer.c", directory: "/home/mohamad/clone/coreutils")
!2042 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2043, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, nameTableKind: None)
!2043 = !DIFile(filename: "./lib/explicit_bzero.c", directory: "/home/mohamad/clone/coreutils")
!2044 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2045, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !1377, nameTableKind: None)
!2045 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mohamad/clone/coreutils")
!2046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2047, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, nameTableKind: None)
!2047 = !DIFile(filename: "./lib/nl_langinfo.c", directory: "/home/mohamad/clone/coreutils")
!2048 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2049, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, nameTableKind: None)
!2049 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mohamad/clone/coreutils")
!2050 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2051, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !213, retainedTypes: !2052, nameTableKind: None)
!2051 = !DIFile(filename: "./lib/fopen-safer.c", directory: "/home/mohamad/clone/coreutils")
!2052 = !{!2053, !5}
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !293, line: 48, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2055, file: !2, line: 242, baseType: !5, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2055, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2055, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2055, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2055, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2055, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2055, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2055, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2055, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2055, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2055, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2055, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2055, file: !2, line: 260, baseType: !2070, size: 64, offset: 768)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2072)
!2072 = !{!2073, !2074, !2076}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2071, file: !2, line: 157, baseType: !2070, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2071, file: !2, line: 158, baseType: !2075, size: 64, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2071, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2055, file: !2, line: 262, baseType: !2075, size: 64, offset: 832)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2055, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2055, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2055, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2055, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2055, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2055, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2055, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2055, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2055, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2055, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2055, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2055, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2055, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2055, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2055, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2093 = !{!"clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)"}
!2094 = !{i32 2, !"ctir", i32 1}
!2095 = !{i32 2, !"Dwarf Version", i32 4}
!2096 = !{i32 2, !"Debug Info Version", i32 3}
!2097 = !{i32 1, !"wchar_size", i32 4}
!2098 = distinct !DISubprogram(name: "usage", scope: !63, file: !63, line: 286, type: !2099, scopeLine: 287, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !62, retainedNodes: !213)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{null, !5}
!2101 = !DILocalVariable(name: "status", arg: 1, scope: !2098, file: !63, line: 286, type: !5)
!2102 = !DILocation(line: 286, column: 12, scope: !2098)
!2103 = !DILocation(line: 288, column: 7, scope: !2104)
!2104 = distinct !DILexicalBlock(scope: !2098, file: !63, line: 288, column: 7)
!2105 = !DILocation(line: 288, column: 14, scope: !2104)
!2106 = !DILocation(line: 288, column: 7, scope: !2098)
!2107 = !DILocation(line: 289, column: 5, scope: !2104)
!2108 = !DILocation(line: 289, column: 5, scope: !2109)
!2109 = distinct !DILexicalBlock(scope: !2104, file: !63, line: 289, column: 5)
!2110 = !DILocation(line: 292, column: 15, scope: !2111)
!2111 = distinct !DILexicalBlock(scope: !2104, file: !63, line: 291, column: 5)
!2112 = !DILocation(line: 297, column: 15, scope: !2111)
!2113 = !DILocation(line: 297, column: 29, scope: !2111)
!2114 = !DILocation(line: 297, column: 43, scope: !2111)
!2115 = !DILocation(line: 292, column: 7, scope: !2111)
!2116 = !DILocation(line: 298, column: 7, scope: !2111)
!2117 = !DILocation(line: 302, column: 7, scope: !2111)
!2118 = !DILocation(line: 304, column: 7, scope: !2111)
!2119 = !DILocation(line: 313, column: 7, scope: !2111)
!2120 = !DILocation(line: 318, column: 7, scope: !2111)
!2121 = !DILocation(line: 328, column: 7, scope: !2111)
!2122 = !DILocation(line: 329, column: 7, scope: !2111)
!2123 = !DILocation(line: 330, column: 7, scope: !2111)
!2124 = !DILocation(line: 331, column: 7, scope: !2111)
!2125 = !DILocation(line: 333, column: 9, scope: !2098)
!2126 = !DILocation(line: 333, column: 3, scope: !2098)
!2127 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !209, file: !209, line: 585, type: !562, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !213)
!2128 = !DILocation(line: 587, column: 3, scope: !2127)
!2129 = !DILocation(line: 590, column: 1, scope: !2127)
!2130 = distinct !DISubprogram(name: "emit_backup_suffix_note", scope: !209, file: !209, line: 613, type: !562, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !213)
!2131 = !DILocation(line: 615, column: 3, scope: !2130)
!2132 = !DILocation(line: 622, column: 3, scope: !2130)
!2133 = !DILocation(line: 628, column: 1, scope: !2130)
!2134 = !DILocalVariable(name: "program", arg: 1, scope: !210, file: !209, line: 631, type: !113)
!2135 = !DILocation(line: 631, column: 34, scope: !210)
!2136 = !DILocalVariable(name: "infomap", scope: !210, file: !209, line: 633, type: !206)
!2137 = !DILocation(line: 633, column: 67, scope: !210)
!2138 = !DILocalVariable(name: "node", scope: !210, file: !209, line: 643, type: !113)
!2139 = !DILocation(line: 643, column: 15, scope: !210)
!2140 = !DILocation(line: 643, column: 22, scope: !210)
!2141 = !DILocalVariable(name: "map_prog", scope: !210, file: !209, line: 644, type: !219)
!2142 = !DILocation(line: 644, column: 25, scope: !210)
!2143 = !DILocation(line: 644, column: 36, scope: !210)
!2144 = !DILocation(line: 646, column: 3, scope: !210)
!2145 = !DILocation(line: 646, column: 10, scope: !210)
!2146 = !DILocation(line: 646, column: 20, scope: !210)
!2147 = !DILocation(line: 646, column: 28, scope: !210)
!2148 = !DILocation(line: 646, column: 33, scope: !210)
!2149 = !DILocation(line: 646, column: 31, scope: !210)
!2150 = !DILocation(line: 0, scope: !210)
!2151 = !DILocation(line: 647, column: 13, scope: !210)
!2152 = distinct !{!2152, !2144, !2151}
!2153 = !DILocation(line: 649, column: 7, scope: !2154)
!2154 = distinct !DILexicalBlock(scope: !210, file: !209, line: 649, column: 7)
!2155 = !DILocation(line: 649, column: 17, scope: !2154)
!2156 = !DILocation(line: 649, column: 7, scope: !210)
!2157 = !DILocation(line: 650, column: 12, scope: !2154)
!2158 = !DILocation(line: 650, column: 22, scope: !2154)
!2159 = !DILocation(line: 650, column: 10, scope: !2154)
!2160 = !DILocation(line: 650, column: 5, scope: !2154)
!2161 = !DILocation(line: 652, column: 11, scope: !210)
!2162 = !DILocation(line: 652, column: 3, scope: !210)
!2163 = !DILocalVariable(name: "lc_messages", scope: !210, file: !209, line: 656, type: !113)
!2164 = !DILocation(line: 656, column: 15, scope: !210)
!2165 = !DILocation(line: 656, column: 29, scope: !210)
!2166 = !DILocation(line: 657, column: 7, scope: !2167)
!2167 = distinct !DILexicalBlock(scope: !210, file: !209, line: 657, column: 7)
!2168 = !DILocation(line: 657, column: 19, scope: !2167)
!2169 = !DILocation(line: 657, column: 22, scope: !2167)
!2170 = !DILocation(line: 657, column: 7, scope: !210)
!2171 = !DILocation(line: 663, column: 7, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2167, file: !209, line: 658, column: 5)
!2173 = !DILocation(line: 665, column: 5, scope: !2172)
!2174 = !DILocation(line: 666, column: 11, scope: !210)
!2175 = !DILocation(line: 667, column: 24, scope: !210)
!2176 = !DILocation(line: 666, column: 3, scope: !210)
!2177 = !DILocation(line: 668, column: 11, scope: !210)
!2178 = !DILocation(line: 669, column: 11, scope: !210)
!2179 = !DILocation(line: 669, column: 17, scope: !210)
!2180 = !DILocation(line: 669, column: 25, scope: !210)
!2181 = !DILocation(line: 669, column: 22, scope: !210)
!2182 = !DILocation(line: 668, column: 3, scope: !210)
!2183 = !DILocation(line: 670, column: 1, scope: !210)
!2184 = distinct !DISubprogram(name: "main", scope: !63, file: !63, line: 337, type: !2185, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !62, retainedNodes: !213)
!2185 = !DISubroutineType(types: !2186)
!2186 = !{!5, !5, !140}
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !74, line: 98, size: 640, elements: !2188)
!2188 = !{!2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !2187, file: !74, line: 100, baseType: !65, size: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !2187, file: !74, line: 103, baseType: !73, size: 32, offset: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !2187, file: !74, line: 108, baseType: !80, size: 32, offset: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !2187, file: !74, line: 111, baseType: !86, size: 32, offset: 96)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2187, file: !74, line: 115, baseType: !236, size: 32, offset: 128)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !2187, file: !74, line: 119, baseType: !139, size: 8, offset: 160)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !2187, file: !74, line: 123, baseType: !139, size: 8, offset: 168)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !2187, file: !74, line: 130, baseType: !139, size: 8, offset: 176)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !2187, file: !74, line: 134, baseType: !139, size: 8, offset: 184)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !2187, file: !74, line: 138, baseType: !139, size: 8, offset: 192)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !2187, file: !74, line: 141, baseType: !139, size: 8, offset: 200)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !2187, file: !74, line: 145, baseType: !139, size: 8, offset: 208)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !2187, file: !74, line: 152, baseType: !139, size: 8, offset: 216)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !2187, file: !74, line: 156, baseType: !139, size: 8, offset: 224)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !2187, file: !74, line: 160, baseType: !139, size: 8, offset: 232)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !2187, file: !74, line: 161, baseType: !139, size: 8, offset: 240)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !2187, file: !74, line: 162, baseType: !139, size: 8, offset: 248)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !2187, file: !74, line: 163, baseType: !139, size: 8, offset: 256)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !2187, file: !74, line: 166, baseType: !139, size: 8, offset: 264)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !2187, file: !74, line: 178, baseType: !139, size: 8, offset: 272)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !2187, file: !74, line: 182, baseType: !139, size: 8, offset: 280)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !2187, file: !74, line: 188, baseType: !139, size: 8, offset: 288)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !2187, file: !74, line: 192, baseType: !139, size: 8, offset: 296)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !2187, file: !74, line: 201, baseType: !139, size: 8, offset: 304)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !2187, file: !74, line: 205, baseType: !139, size: 8, offset: 312)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !2187, file: !74, line: 214, baseType: !139, size: 8, offset: 320)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !2187, file: !74, line: 223, baseType: !139, size: 8, offset: 328)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !2187, file: !74, line: 227, baseType: !139, size: 8, offset: 336)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !2187, file: !74, line: 231, baseType: !139, size: 8, offset: 344)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !2187, file: !74, line: 235, baseType: !139, size: 8, offset: 352)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !2187, file: !74, line: 239, baseType: !139, size: 8, offset: 360)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !2187, file: !74, line: 242, baseType: !139, size: 8, offset: 368)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !2187, file: !74, line: 245, baseType: !139, size: 8, offset: 376)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !2187, file: !74, line: 250, baseType: !139, size: 8, offset: 384)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !2187, file: !74, line: 254, baseType: !139, size: 8, offset: 392)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !2187, file: !74, line: 259, baseType: !5, size: 32, offset: 416)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !2187, file: !74, line: 262, baseType: !92, size: 32, offset: 448)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !2187, file: !74, line: 273, baseType: !238, size: 64, offset: 512)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !2187, file: !74, line: 276, baseType: !238, size: 64, offset: 576)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !2229)
!2229 = !{!2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2246, !2247, !2248}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2228, file: !336, line: 48, baseType: !260, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2228, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2228, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2228, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2228, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2228, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2228, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2228, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2228, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2228, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2228, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2228, file: !336, line: 91, baseType: !2242, size: 128, offset: 576)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !2243)
!2243 = !{!2244, !2245}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2242, file: !355, line: 122, baseType: !358, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2242, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2228, file: !336, line: 92, baseType: !2242, size: 128, offset: 704)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2228, file: !336, line: 93, baseType: !2242, size: 128, offset: 832)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2228, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!2249 = !DILocalVariable(name: "argc", arg: 1, scope: !2184, file: !63, line: 337, type: !5)
!2250 = !DILocation(line: 337, column: 11, scope: !2184)
!2251 = !DILocalVariable(name: "argv", arg: 2, scope: !2184, file: !63, line: 337, type: !140)
!2252 = !DILocation(line: 337, column: 24, scope: !2184)
!2253 = !DILocalVariable(name: "c", scope: !2184, file: !63, line: 339, type: !5)
!2254 = !DILocation(line: 339, column: 7, scope: !2184)
!2255 = !DILocalVariable(name: "ok", scope: !2184, file: !63, line: 340, type: !139)
!2256 = !DILocation(line: 340, column: 8, scope: !2184)
!2257 = !DILocalVariable(name: "make_backups", scope: !2184, file: !63, line: 341, type: !139)
!2258 = !DILocation(line: 341, column: 8, scope: !2184)
!2259 = !DILocalVariable(name: "backup_suffix", scope: !2184, file: !63, line: 342, type: !113)
!2260 = !DILocation(line: 342, column: 15, scope: !2184)
!2261 = !DILocalVariable(name: "version_control_string", scope: !2184, file: !63, line: 343, type: !7)
!2262 = !DILocation(line: 343, column: 9, scope: !2184)
!2263 = !DILocalVariable(name: "x", scope: !2184, file: !63, line: 344, type: !2187)
!2264 = !DILocation(line: 344, column: 21, scope: !2184)
!2265 = !DILocalVariable(name: "target_directory", scope: !2184, file: !63, line: 345, type: !7)
!2266 = !DILocation(line: 345, column: 9, scope: !2184)
!2267 = !DILocalVariable(name: "no_target_directory", scope: !2184, file: !63, line: 346, type: !139)
!2268 = !DILocation(line: 346, column: 8, scope: !2184)
!2269 = !DILocalVariable(name: "n_files", scope: !2184, file: !63, line: 347, type: !5)
!2270 = !DILocation(line: 347, column: 7, scope: !2184)
!2271 = !DILocalVariable(name: "file", scope: !2184, file: !63, line: 348, type: !140)
!2272 = !DILocation(line: 348, column: 10, scope: !2184)
!2273 = !DILocalVariable(name: "selinux_enabled", scope: !2184, file: !63, line: 349, type: !139)
!2274 = !DILocation(line: 349, column: 8, scope: !2184)
!2275 = !DILocation(line: 352, column: 21, scope: !2184)
!2276 = !DILocation(line: 352, column: 3, scope: !2184)
!2277 = !DILocation(line: 353, column: 3, scope: !2184)
!2278 = !DILocation(line: 354, column: 3, scope: !2184)
!2279 = !DILocation(line: 355, column: 3, scope: !2184)
!2280 = !DILocation(line: 357, column: 3, scope: !2184)
!2281 = !DILocation(line: 359, column: 3, scope: !2184)
!2282 = !DILocation(line: 362, column: 3, scope: !2184)
!2283 = !DILocation(line: 364, column: 3, scope: !2184)
!2284 = !DILocation(line: 364, column: 28, scope: !2184)
!2285 = !DILocation(line: 364, column: 34, scope: !2184)
!2286 = !DILocation(line: 364, column: 15, scope: !2184)
!2287 = !DILocation(line: 364, column: 13, scope: !2184)
!2288 = !DILocation(line: 365, column: 10, scope: !2184)
!2289 = !DILocation(line: 367, column: 15, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2184, file: !63, line: 366, column: 5)
!2291 = !DILocation(line: 367, column: 7, scope: !2290)
!2292 = !DILocation(line: 370, column: 24, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2290, file: !63, line: 368, column: 9)
!2294 = !DILocation(line: 371, column: 15, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !2293, file: !63, line: 371, column: 15)
!2296 = !DILocation(line: 371, column: 15, scope: !2293)
!2297 = !DILocation(line: 372, column: 38, scope: !2295)
!2298 = !DILocation(line: 372, column: 36, scope: !2295)
!2299 = !DILocation(line: 372, column: 13, scope: !2295)
!2300 = !DILocation(line: 373, column: 11, scope: !2293)
!2301 = !DILocation(line: 375, column: 13, scope: !2293)
!2302 = !DILocation(line: 375, column: 25, scope: !2293)
!2303 = !DILocation(line: 376, column: 11, scope: !2293)
!2304 = !DILocation(line: 378, column: 13, scope: !2293)
!2305 = !DILocation(line: 378, column: 25, scope: !2293)
!2306 = !DILocation(line: 379, column: 11, scope: !2293)
!2307 = !DILocation(line: 381, column: 13, scope: !2293)
!2308 = !DILocation(line: 381, column: 25, scope: !2293)
!2309 = !DILocation(line: 382, column: 11, scope: !2293)
!2310 = !DILocation(line: 384, column: 35, scope: !2293)
!2311 = !DILocation(line: 385, column: 11, scope: !2293)
!2312 = !DILocation(line: 387, column: 15, scope: !2313)
!2313 = distinct !DILexicalBlock(scope: !2293, file: !63, line: 387, column: 15)
!2314 = !DILocation(line: 387, column: 15, scope: !2293)
!2315 = !DILocation(line: 388, column: 13, scope: !2313)
!2316 = !DILocalVariable(name: "st", scope: !2317, file: !63, line: 391, type: !2228)
!2317 = distinct !DILexicalBlock(scope: !2313, file: !63, line: 390, column: 13)
!2318 = !DILocation(line: 391, column: 27, scope: !2317)
!2319 = !DILocation(line: 392, column: 25, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2317, file: !63, line: 392, column: 19)
!2321 = !DILocation(line: 392, column: 19, scope: !2320)
!2322 = !DILocation(line: 392, column: 38, scope: !2320)
!2323 = !DILocation(line: 392, column: 19, scope: !2317)
!2324 = !DILocation(line: 393, column: 17, scope: !2320)
!2325 = !DILocation(line: 395, column: 21, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2317, file: !63, line: 395, column: 19)
!2327 = !DILocation(line: 395, column: 19, scope: !2317)
!2328 = !DILocation(line: 396, column: 17, scope: !2326)
!2329 = !DILocation(line: 399, column: 30, scope: !2293)
!2330 = !DILocation(line: 399, column: 28, scope: !2293)
!2331 = !DILocation(line: 400, column: 11, scope: !2293)
!2332 = !DILocation(line: 402, column: 31, scope: !2293)
!2333 = !DILocation(line: 403, column: 11, scope: !2293)
!2334 = !DILocation(line: 405, column: 13, scope: !2293)
!2335 = !DILocation(line: 405, column: 20, scope: !2293)
!2336 = !DILocation(line: 406, column: 11, scope: !2293)
!2337 = !DILocation(line: 408, column: 13, scope: !2293)
!2338 = !DILocation(line: 408, column: 21, scope: !2293)
!2339 = !DILocation(line: 409, column: 11, scope: !2293)
!2340 = !DILocation(line: 411, column: 24, scope: !2293)
!2341 = !DILocation(line: 412, column: 27, scope: !2293)
!2342 = !DILocation(line: 412, column: 25, scope: !2293)
!2343 = !DILocation(line: 413, column: 11, scope: !2293)
!2344 = !DILocation(line: 417, column: 15, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2293, file: !63, line: 417, column: 15)
!2346 = !DILocation(line: 417, column: 15, scope: !2293)
!2347 = !DILocation(line: 419, column: 17, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2345, file: !63, line: 418, column: 13)
!2349 = !DILocation(line: 419, column: 43, scope: !2348)
!2350 = !DILocation(line: 420, column: 17, scope: !2348)
!2351 = !DILocation(line: 420, column: 38, scope: !2348)
!2352 = !DILocation(line: 421, column: 13, scope: !2348)
!2353 = !DILocation(line: 422, column: 11, scope: !2293)
!2354 = !DILocation(line: 423, column: 9, scope: !2293)
!2355 = !DILocation(line: 424, column: 9, scope: !2293)
!2356 = !DILocation(line: 426, column: 11, scope: !2293)
!2357 = distinct !{!2357, !2283, !2358}
!2358 = !DILocation(line: 428, column: 5, scope: !2184)
!2359 = !DILocation(line: 430, column: 13, scope: !2184)
!2360 = !DILocation(line: 430, column: 20, scope: !2184)
!2361 = !DILocation(line: 430, column: 18, scope: !2184)
!2362 = !DILocation(line: 430, column: 11, scope: !2184)
!2363 = !DILocation(line: 431, column: 10, scope: !2184)
!2364 = !DILocation(line: 431, column: 17, scope: !2184)
!2365 = !DILocation(line: 431, column: 15, scope: !2184)
!2366 = !DILocation(line: 431, column: 8, scope: !2184)
!2367 = !DILocation(line: 433, column: 7, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2184, file: !63, line: 433, column: 7)
!2369 = !DILocation(line: 433, column: 19, scope: !2368)
!2370 = !DILocation(line: 433, column: 18, scope: !2368)
!2371 = !DILocation(line: 433, column: 15, scope: !2368)
!2372 = !DILocation(line: 433, column: 7, scope: !2184)
!2373 = !DILocation(line: 435, column: 11, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2375, file: !63, line: 435, column: 11)
!2375 = distinct !DILexicalBlock(scope: !2368, file: !63, line: 434, column: 5)
!2376 = !DILocation(line: 435, column: 19, scope: !2374)
!2377 = !DILocation(line: 435, column: 11, scope: !2375)
!2378 = !DILocation(line: 436, column: 22, scope: !2374)
!2379 = !DILocation(line: 436, column: 9, scope: !2374)
!2380 = !DILocation(line: 438, column: 22, scope: !2374)
!2381 = !DILocation(line: 439, column: 16, scope: !2374)
!2382 = !DILocation(line: 438, column: 9, scope: !2374)
!2383 = !DILocation(line: 440, column: 7, scope: !2375)
!2384 = !DILocation(line: 443, column: 7, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2184, file: !63, line: 443, column: 7)
!2386 = !DILocation(line: 443, column: 7, scope: !2184)
!2387 = !DILocation(line: 445, column: 11, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2389, file: !63, line: 445, column: 11)
!2389 = distinct !DILexicalBlock(scope: !2385, file: !63, line: 444, column: 5)
!2390 = !DILocation(line: 445, column: 11, scope: !2389)
!2391 = !DILocation(line: 446, column: 9, scope: !2388)
!2392 = !DILocation(line: 449, column: 15, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2389, file: !63, line: 449, column: 11)
!2394 = !DILocation(line: 449, column: 13, scope: !2393)
!2395 = !DILocation(line: 449, column: 11, scope: !2389)
!2396 = !DILocation(line: 451, column: 24, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2393, file: !63, line: 450, column: 9)
!2398 = !DILocation(line: 451, column: 47, scope: !2397)
!2399 = !DILocation(line: 451, column: 11, scope: !2397)
!2400 = !DILocation(line: 452, column: 11, scope: !2397)
!2401 = !DILocation(line: 454, column: 5, scope: !2389)
!2402 = !DILocation(line: 455, column: 13, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2385, file: !63, line: 455, column: 12)
!2404 = !DILocation(line: 455, column: 12, scope: !2385)
!2405 = !DILocation(line: 457, column: 7, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2403, file: !63, line: 456, column: 5)
!2407 = !DILocation(line: 458, column: 11, scope: !2408)
!2408 = distinct !DILexicalBlock(scope: !2406, file: !63, line: 458, column: 11)
!2409 = !DILocation(line: 458, column: 19, scope: !2408)
!2410 = !DILocation(line: 458, column: 11, scope: !2406)
!2411 = !DILocation(line: 459, column: 48, scope: !2408)
!2412 = !DILocation(line: 459, column: 67, scope: !2408)
!2413 = !DILocation(line: 459, column: 27, scope: !2408)
!2414 = !DILocation(line: 461, column: 29, scope: !2408)
!2415 = !DILocation(line: 459, column: 11, scope: !2408)
!2416 = !DILocation(line: 459, column: 24, scope: !2408)
!2417 = !DILocation(line: 459, column: 9, scope: !2408)
!2418 = !DILocation(line: 462, column: 13, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2406, file: !63, line: 462, column: 11)
!2420 = !DILocation(line: 462, column: 26, scope: !2419)
!2421 = !DILocation(line: 462, column: 31, scope: !2419)
!2422 = !DILocation(line: 462, column: 60, scope: !2419)
!2423 = !DILocation(line: 462, column: 65, scope: !2419)
!2424 = !DILocation(line: 462, column: 73, scope: !2419)
!2425 = !DILocation(line: 462, column: 34, scope: !2419)
!2426 = !DILocation(line: 462, column: 11, scope: !2406)
!2427 = !DILocation(line: 464, column: 13, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2419, file: !63, line: 463, column: 9)
!2429 = !DILocation(line: 464, column: 26, scope: !2428)
!2430 = !DILocation(line: 465, column: 30, scope: !2428)
!2431 = !DILocation(line: 465, column: 35, scope: !2428)
!2432 = !DILocation(line: 465, column: 28, scope: !2428)
!2433 = !DILocation(line: 466, column: 9, scope: !2428)
!2434 = !DILocation(line: 467, column: 20, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2419, file: !63, line: 467, column: 16)
!2436 = !DILocation(line: 467, column: 18, scope: !2435)
!2437 = !DILocation(line: 467, column: 16, scope: !2419)
!2438 = !DILocation(line: 468, column: 9, scope: !2435)
!2439 = !DILocation(line: 470, column: 5, scope: !2406)
!2440 = !DILocation(line: 472, column: 9, scope: !2441)
!2441 = distinct !DILexicalBlock(scope: !2184, file: !63, line: 472, column: 7)
!2442 = !DILocation(line: 472, column: 21, scope: !2441)
!2443 = !DILocation(line: 472, column: 7, scope: !2184)
!2444 = !DILocation(line: 473, column: 7, scope: !2441)
!2445 = !DILocation(line: 473, column: 14, scope: !2441)
!2446 = !DILocation(line: 473, column: 5, scope: !2441)
!2447 = !DILocation(line: 475, column: 7, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2184, file: !63, line: 475, column: 7)
!2449 = !DILocation(line: 475, column: 20, scope: !2448)
!2450 = !DILocation(line: 475, column: 25, scope: !2448)
!2451 = !DILocation(line: 475, column: 37, scope: !2448)
!2452 = !DILocation(line: 475, column: 7, scope: !2184)
!2453 = !DILocation(line: 478, column: 14, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2448, file: !63, line: 476, column: 5)
!2455 = !DILocation(line: 477, column: 7, scope: !2454)
!2456 = !DILocation(line: 479, column: 7, scope: !2454)
!2457 = !DILocation(line: 482, column: 20, scope: !2184)
!2458 = !DILocation(line: 483, column: 36, scope: !2184)
!2459 = !DILocation(line: 484, column: 36, scope: !2184)
!2460 = !DILocation(line: 483, column: 22, scope: !2184)
!2461 = !DILocation(line: 482, column: 5, scope: !2184)
!2462 = !DILocation(line: 482, column: 17, scope: !2184)
!2463 = !DILocation(line: 486, column: 29, scope: !2184)
!2464 = !DILocation(line: 486, column: 3, scope: !2184)
!2465 = !DILocation(line: 488, column: 3, scope: !2184)
!2466 = !DILocation(line: 490, column: 7, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2184, file: !63, line: 490, column: 7)
!2468 = !DILocation(line: 490, column: 7, scope: !2184)
!2469 = !DILocation(line: 495, column: 16, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2471, file: !63, line: 495, column: 11)
!2471 = distinct !DILexicalBlock(scope: !2467, file: !63, line: 491, column: 5)
!2472 = !DILocation(line: 495, column: 13, scope: !2470)
!2473 = !DILocation(line: 495, column: 11, scope: !2471)
!2474 = !DILocation(line: 496, column: 9, scope: !2470)
!2475 = !DILocation(line: 498, column: 10, scope: !2471)
!2476 = !DILocalVariable(name: "i", scope: !2477, file: !63, line: 499, type: !5)
!2477 = distinct !DILexicalBlock(scope: !2471, file: !63, line: 499, column: 7)
!2478 = !DILocation(line: 499, column: 16, scope: !2477)
!2479 = !DILocation(line: 499, column: 12, scope: !2477)
!2480 = !DILocation(line: 499, column: 23, scope: !2481)
!2481 = distinct !DILexicalBlock(scope: !2477, file: !63, line: 499, column: 7)
!2482 = !DILocation(line: 499, column: 27, scope: !2481)
!2483 = !DILocation(line: 499, column: 25, scope: !2481)
!2484 = !DILocation(line: 499, column: 7, scope: !2477)
!2485 = !DILocation(line: 501, column: 25, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2481, file: !63, line: 500, column: 9)
!2487 = !DILocation(line: 501, column: 27, scope: !2486)
!2488 = !DILocation(line: 501, column: 34, scope: !2486)
!2489 = !DILocation(line: 501, column: 31, scope: !2486)
!2490 = !DILocation(line: 501, column: 13, scope: !2486)
!2491 = !DILocation(line: 501, column: 23, scope: !2486)
!2492 = !DILocation(line: 502, column: 27, scope: !2486)
!2493 = !DILocation(line: 502, column: 32, scope: !2486)
!2494 = !DILocation(line: 502, column: 36, scope: !2486)
!2495 = !DILocation(line: 502, column: 17, scope: !2486)
!2496 = !DILocation(line: 502, column: 14, scope: !2486)
!2497 = !DILocation(line: 503, column: 9, scope: !2486)
!2498 = !DILocation(line: 499, column: 36, scope: !2481)
!2499 = !DILocation(line: 499, column: 7, scope: !2481)
!2500 = distinct !{!2500, !2484, !2501}
!2501 = !DILocation(line: 503, column: 9, scope: !2477)
!2502 = !DILocation(line: 504, column: 5, scope: !2471)
!2503 = !DILocation(line: 507, column: 9, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2467, file: !63, line: 506, column: 5)
!2505 = !DILocation(line: 507, column: 19, scope: !2504)
!2506 = !DILocation(line: 508, column: 22, scope: !2504)
!2507 = !DILocation(line: 508, column: 31, scope: !2504)
!2508 = !DILocation(line: 508, column: 12, scope: !2504)
!2509 = !DILocation(line: 508, column: 10, scope: !2504)
!2510 = !DILocation(line: 511, column: 10, scope: !2184)
!2511 = !DILocation(line: 511, column: 3, scope: !2184)
!2512 = distinct !DISubprogram(name: "cp_option_init", scope: !63, file: !63, line: 107, type: !2513, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !213)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{null, !2515}
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2516 = !DILocalVariable(name: "x", arg: 1, scope: !2512, file: !63, line: 107, type: !2515)
!2517 = !DILocation(line: 107, column: 36, scope: !2512)
!2518 = !DILocalVariable(name: "selinux_enabled", scope: !2512, file: !63, line: 109, type: !139)
!2519 = !DILocation(line: 109, column: 8, scope: !2512)
!2520 = !DILocation(line: 111, column: 23, scope: !2512)
!2521 = !DILocation(line: 111, column: 3, scope: !2512)
!2522 = !DILocation(line: 112, column: 3, scope: !2512)
!2523 = !DILocation(line: 112, column: 6, scope: !2512)
!2524 = !DILocation(line: 112, column: 22, scope: !2512)
!2525 = !DILocation(line: 113, column: 3, scope: !2512)
!2526 = !DILocation(line: 113, column: 6, scope: !2512)
!2527 = !DILocation(line: 113, column: 19, scope: !2512)
!2528 = !DILocation(line: 114, column: 3, scope: !2512)
!2529 = !DILocation(line: 114, column: 6, scope: !2512)
!2530 = !DILocation(line: 114, column: 18, scope: !2512)
!2531 = !DILocation(line: 115, column: 3, scope: !2512)
!2532 = !DILocation(line: 115, column: 6, scope: !2512)
!2533 = !DILocation(line: 115, column: 33, scope: !2512)
!2534 = !DILocation(line: 116, column: 3, scope: !2512)
!2535 = !DILocation(line: 116, column: 6, scope: !2512)
!2536 = !DILocation(line: 116, column: 36, scope: !2512)
!2537 = !DILocation(line: 117, column: 3, scope: !2512)
!2538 = !DILocation(line: 117, column: 6, scope: !2512)
!2539 = !DILocation(line: 117, column: 16, scope: !2512)
!2540 = !DILocation(line: 118, column: 3, scope: !2512)
!2541 = !DILocation(line: 118, column: 6, scope: !2512)
!2542 = !DILocation(line: 118, column: 18, scope: !2512)
!2543 = !DILocation(line: 119, column: 3, scope: !2512)
!2544 = !DILocation(line: 119, column: 6, scope: !2512)
!2545 = !DILocation(line: 119, column: 16, scope: !2512)
!2546 = !DILocation(line: 120, column: 3, scope: !2512)
!2547 = !DILocation(line: 120, column: 6, scope: !2512)
!2548 = !DILocation(line: 120, column: 19, scope: !2512)
!2549 = !DILocation(line: 121, column: 3, scope: !2512)
!2550 = !DILocation(line: 121, column: 6, scope: !2512)
!2551 = !DILocation(line: 121, column: 22, scope: !2512)
!2552 = !DILocation(line: 122, column: 3, scope: !2512)
!2553 = !DILocation(line: 122, column: 6, scope: !2512)
!2554 = !DILocation(line: 122, column: 25, scope: !2512)
!2555 = !DILocation(line: 123, column: 3, scope: !2512)
!2556 = !DILocation(line: 123, column: 6, scope: !2512)
!2557 = !DILocation(line: 123, column: 21, scope: !2512)
!2558 = !DILocation(line: 124, column: 3, scope: !2512)
!2559 = !DILocation(line: 124, column: 6, scope: !2512)
!2560 = !DILocation(line: 124, column: 20, scope: !2512)
!2561 = !DILocation(line: 125, column: 3, scope: !2512)
!2562 = !DILocation(line: 125, column: 6, scope: !2512)
!2563 = !DILocation(line: 125, column: 26, scope: !2512)
!2564 = !DILocation(line: 126, column: 3, scope: !2512)
!2565 = !DILocation(line: 126, column: 6, scope: !2512)
!2566 = !DILocation(line: 126, column: 31, scope: !2512)
!2567 = !DILocation(line: 127, column: 34, scope: !2512)
!2568 = !DILocation(line: 127, column: 3, scope: !2512)
!2569 = !DILocation(line: 127, column: 6, scope: !2512)
!2570 = !DILocation(line: 127, column: 32, scope: !2512)
!2571 = !DILocation(line: 128, column: 3, scope: !2512)
!2572 = !DILocation(line: 128, column: 6, scope: !2512)
!2573 = !DILocation(line: 128, column: 27, scope: !2512)
!2574 = !DILocation(line: 129, column: 3, scope: !2512)
!2575 = !DILocation(line: 129, column: 6, scope: !2512)
!2576 = !DILocation(line: 129, column: 25, scope: !2512)
!2577 = !DILocation(line: 130, column: 3, scope: !2512)
!2578 = !DILocation(line: 130, column: 6, scope: !2512)
!2579 = !DILocation(line: 130, column: 25, scope: !2512)
!2580 = !DILocation(line: 131, column: 3, scope: !2512)
!2581 = !DILocation(line: 131, column: 6, scope: !2512)
!2582 = !DILocation(line: 131, column: 23, scope: !2512)
!2583 = !DILocation(line: 132, column: 3, scope: !2512)
!2584 = !DILocation(line: 132, column: 6, scope: !2512)
!2585 = !DILocation(line: 132, column: 31, scope: !2512)
!2586 = !DILocation(line: 133, column: 3, scope: !2512)
!2587 = !DILocation(line: 133, column: 6, scope: !2512)
!2588 = !DILocation(line: 133, column: 21, scope: !2512)
!2589 = !DILocation(line: 134, column: 3, scope: !2512)
!2590 = !DILocation(line: 134, column: 6, scope: !2512)
!2591 = !DILocation(line: 134, column: 29, scope: !2512)
!2592 = !DILocation(line: 135, column: 3, scope: !2512)
!2593 = !DILocation(line: 135, column: 6, scope: !2512)
!2594 = !DILocation(line: 135, column: 16, scope: !2512)
!2595 = !DILocation(line: 136, column: 3, scope: !2512)
!2596 = !DILocation(line: 136, column: 6, scope: !2512)
!2597 = !DILocation(line: 136, column: 18, scope: !2512)
!2598 = !DILocation(line: 137, column: 3, scope: !2512)
!2599 = !DILocation(line: 137, column: 6, scope: !2512)
!2600 = !DILocation(line: 137, column: 20, scope: !2512)
!2601 = !DILocation(line: 138, column: 3, scope: !2512)
!2602 = !DILocation(line: 138, column: 6, scope: !2512)
!2603 = !DILocation(line: 138, column: 15, scope: !2512)
!2604 = !DILocation(line: 139, column: 3, scope: !2512)
!2605 = !DILocation(line: 139, column: 6, scope: !2512)
!2606 = !DILocation(line: 139, column: 11, scope: !2512)
!2607 = !DILocation(line: 140, column: 18, scope: !2512)
!2608 = !DILocation(line: 140, column: 3, scope: !2512)
!2609 = !DILocation(line: 140, column: 6, scope: !2512)
!2610 = !DILocation(line: 140, column: 16, scope: !2512)
!2611 = !DILocation(line: 142, column: 3, scope: !2512)
!2612 = !DILocation(line: 142, column: 6, scope: !2512)
!2613 = !DILocation(line: 142, column: 33, scope: !2512)
!2614 = !DILocation(line: 143, column: 3, scope: !2512)
!2615 = !DILocation(line: 143, column: 6, scope: !2512)
!2616 = !DILocation(line: 143, column: 13, scope: !2512)
!2617 = !DILocation(line: 144, column: 3, scope: !2512)
!2618 = !DILocation(line: 144, column: 6, scope: !2512)
!2619 = !DILocation(line: 144, column: 14, scope: !2512)
!2620 = !DILocation(line: 145, column: 3, scope: !2512)
!2621 = !DILocation(line: 145, column: 6, scope: !2512)
!2622 = !DILocation(line: 145, column: 16, scope: !2512)
!2623 = !DILocation(line: 146, column: 3, scope: !2512)
!2624 = !DILocation(line: 146, column: 6, scope: !2512)
!2625 = !DILocation(line: 146, column: 15, scope: !2512)
!2626 = !DILocation(line: 147, column: 1, scope: !2512)
!2627 = distinct !DISubprogram(name: "target_directory_operand", scope: !63, file: !63, line: 154, type: !2628, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !213)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{!139, !113}
!2630 = !DILocalVariable(name: "file", arg: 1, scope: !2627, file: !63, line: 154, type: !113)
!2631 = !DILocation(line: 154, column: 39, scope: !2627)
!2632 = !DILocalVariable(name: "st", scope: !2627, file: !63, line: 156, type: !2228)
!2633 = !DILocation(line: 156, column: 15, scope: !2627)
!2634 = !DILocalVariable(name: "err", scope: !2627, file: !63, line: 157, type: !5)
!2635 = !DILocation(line: 157, column: 7, scope: !2627)
!2636 = !DILocation(line: 157, column: 20, scope: !2627)
!2637 = !DILocation(line: 157, column: 14, scope: !2627)
!2638 = !DILocation(line: 157, column: 31, scope: !2627)
!2639 = !DILocation(line: 157, column: 42, scope: !2627)
!2640 = !DILocalVariable(name: "is_a_dir", scope: !2627, file: !63, line: 158, type: !139)
!2641 = !DILocation(line: 158, column: 8, scope: !2627)
!2642 = !DILocation(line: 158, column: 20, scope: !2627)
!2643 = !DILocation(line: 158, column: 24, scope: !2627)
!2644 = !DILocation(line: 158, column: 27, scope: !2627)
!2645 = !DILocation(line: 0, scope: !2627)
!2646 = !DILocation(line: 159, column: 7, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2627, file: !63, line: 159, column: 7)
!2648 = !DILocation(line: 159, column: 11, scope: !2647)
!2649 = !DILocation(line: 159, column: 14, scope: !2647)
!2650 = !DILocation(line: 159, column: 18, scope: !2647)
!2651 = !DILocation(line: 159, column: 7, scope: !2627)
!2652 = !DILocation(line: 160, column: 5, scope: !2647)
!2653 = !DILocation(line: 161, column: 10, scope: !2627)
!2654 = !DILocation(line: 161, column: 3, scope: !2627)
!2655 = distinct !DISubprogram(name: "movefile", scope: !63, file: !63, line: 253, type: !2656, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !213)
!2656 = !DISubroutineType(types: !2657)
!2657 = !{!139, !7, !7, !139, !2658}
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2187)
!2660 = !DILocalVariable(name: "source", arg: 1, scope: !2655, file: !63, line: 253, type: !7)
!2661 = !DILocation(line: 253, column: 17, scope: !2655)
!2662 = !DILocalVariable(name: "dest", arg: 2, scope: !2655, file: !63, line: 253, type: !7)
!2663 = !DILocation(line: 253, column: 31, scope: !2655)
!2664 = !DILocalVariable(name: "dest_is_dir", arg: 3, scope: !2655, file: !63, line: 253, type: !139)
!2665 = !DILocation(line: 253, column: 42, scope: !2655)
!2666 = !DILocalVariable(name: "x", arg: 4, scope: !2655, file: !63, line: 254, type: !2658)
!2667 = !DILocation(line: 254, column: 36, scope: !2655)
!2668 = !DILocalVariable(name: "ok", scope: !2655, file: !63, line: 256, type: !139)
!2669 = !DILocation(line: 256, column: 8, scope: !2655)
!2670 = !DILocation(line: 265, column: 7, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2655, file: !63, line: 265, column: 7)
!2672 = !DILocation(line: 265, column: 7, scope: !2655)
!2673 = !DILocation(line: 266, column: 29, scope: !2671)
!2674 = !DILocation(line: 266, column: 5, scope: !2671)
!2675 = !DILocation(line: 268, column: 7, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2655, file: !63, line: 268, column: 7)
!2677 = !DILocation(line: 268, column: 7, scope: !2655)
!2678 = !DILocalVariable(name: "src_basename", scope: !2679, file: !63, line: 271, type: !113)
!2679 = distinct !DILexicalBlock(scope: !2676, file: !63, line: 269, column: 5)
!2680 = !DILocation(line: 271, column: 19, scope: !2679)
!2681 = !DILocation(line: 271, column: 50, scope: !2679)
!2682 = !DILocation(line: 271, column: 34, scope: !2679)
!2683 = !DILocalVariable(name: "new_dest", scope: !2679, file: !63, line: 272, type: !7)
!2684 = !DILocation(line: 272, column: 13, scope: !2679)
!2685 = !DILocation(line: 272, column: 42, scope: !2679)
!2686 = !DILocation(line: 272, column: 48, scope: !2679)
!2687 = !DILocation(line: 272, column: 24, scope: !2679)
!2688 = !DILocation(line: 273, column: 31, scope: !2679)
!2689 = !DILocation(line: 273, column: 7, scope: !2679)
!2690 = !DILocation(line: 274, column: 21, scope: !2679)
!2691 = !DILocation(line: 274, column: 29, scope: !2679)
!2692 = !DILocation(line: 274, column: 39, scope: !2679)
!2693 = !DILocation(line: 274, column: 12, scope: !2679)
!2694 = !DILocation(line: 274, column: 10, scope: !2679)
!2695 = !DILocation(line: 275, column: 13, scope: !2679)
!2696 = !DILocation(line: 275, column: 7, scope: !2679)
!2697 = !DILocation(line: 276, column: 5, scope: !2679)
!2698 = !DILocation(line: 279, column: 21, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2676, file: !63, line: 278, column: 5)
!2700 = !DILocation(line: 279, column: 29, scope: !2699)
!2701 = !DILocation(line: 279, column: 35, scope: !2699)
!2702 = !DILocation(line: 279, column: 12, scope: !2699)
!2703 = !DILocation(line: 279, column: 10, scope: !2699)
!2704 = !DILocation(line: 282, column: 10, scope: !2655)
!2705 = !DILocation(line: 282, column: 3, scope: !2655)
!2706 = distinct !DISubprogram(name: "do_move", scope: !63, file: !63, line: 169, type: !2707, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !213)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{!139, !113, !113, !2658}
!2709 = !DILocalVariable(name: "source", arg: 1, scope: !2706, file: !63, line: 169, type: !113)
!2710 = !DILocation(line: 169, column: 22, scope: !2706)
!2711 = !DILocalVariable(name: "dest", arg: 2, scope: !2706, file: !63, line: 169, type: !113)
!2712 = !DILocation(line: 169, column: 42, scope: !2706)
!2713 = !DILocalVariable(name: "x", arg: 3, scope: !2706, file: !63, line: 169, type: !2658)
!2714 = !DILocation(line: 169, column: 73, scope: !2706)
!2715 = !DILocalVariable(name: "copy_into_self", scope: !2706, file: !63, line: 171, type: !139)
!2716 = !DILocation(line: 171, column: 8, scope: !2706)
!2717 = !DILocalVariable(name: "rename_succeeded", scope: !2706, file: !63, line: 172, type: !139)
!2718 = !DILocation(line: 172, column: 8, scope: !2706)
!2719 = !DILocalVariable(name: "ok", scope: !2706, file: !63, line: 173, type: !139)
!2720 = !DILocation(line: 173, column: 8, scope: !2706)
!2721 = !DILocation(line: 173, column: 19, scope: !2706)
!2722 = !DILocation(line: 173, column: 27, scope: !2706)
!2723 = !DILocation(line: 173, column: 40, scope: !2706)
!2724 = !DILocation(line: 173, column: 13, scope: !2706)
!2725 = !DILocation(line: 175, column: 7, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2706, file: !63, line: 175, column: 7)
!2727 = !DILocation(line: 175, column: 7, scope: !2706)
!2728 = !DILocalVariable(name: "dir_to_remove", scope: !2729, file: !63, line: 177, type: !113)
!2729 = distinct !DILexicalBlock(scope: !2726, file: !63, line: 176, column: 5)
!2730 = !DILocation(line: 177, column: 19, scope: !2729)
!2731 = !DILocation(line: 178, column: 11, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2729, file: !63, line: 178, column: 11)
!2733 = !DILocation(line: 178, column: 11, scope: !2729)
!2734 = !DILocation(line: 191, column: 25, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2732, file: !63, line: 179, column: 9)
!2736 = !DILocation(line: 192, column: 14, scope: !2735)
!2737 = !DILocation(line: 193, column: 9, scope: !2735)
!2738 = !DILocation(line: 194, column: 16, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2732, file: !63, line: 194, column: 16)
!2740 = !DILocation(line: 194, column: 16, scope: !2732)
!2741 = !DILocation(line: 198, column: 25, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2739, file: !63, line: 195, column: 9)
!2743 = !DILocation(line: 199, column: 9, scope: !2742)
!2744 = !DILocation(line: 224, column: 27, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2739, file: !63, line: 201, column: 9)
!2746 = !DILocation(line: 224, column: 25, scope: !2745)
!2747 = !DILocation(line: 227, column: 11, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2729, file: !63, line: 227, column: 11)
!2749 = !DILocation(line: 227, column: 25, scope: !2748)
!2750 = !DILocation(line: 227, column: 11, scope: !2729)
!2751 = !DILocalVariable(name: "rm_options", scope: !2752, file: !63, line: 229, type: !274)
!2752 = distinct !DILexicalBlock(scope: !2748, file: !63, line: 228, column: 9)
!2753 = !DILocation(line: 229, column: 29, scope: !2752)
!2754 = !DILocalVariable(name: "status", scope: !2752, file: !63, line: 230, type: !103)
!2755 = !DILocation(line: 230, column: 26, scope: !2752)
!2756 = !DILocalVariable(name: "dir", scope: !2752, file: !63, line: 231, type: !242)
!2757 = !DILocation(line: 231, column: 23, scope: !2752)
!2758 = !DILocation(line: 233, column: 11, scope: !2752)
!2759 = !DILocation(line: 234, column: 32, scope: !2752)
!2760 = !DILocation(line: 234, column: 35, scope: !2752)
!2761 = !DILocation(line: 234, column: 22, scope: !2752)
!2762 = !DILocation(line: 234, column: 30, scope: !2752)
!2763 = !DILocation(line: 235, column: 20, scope: !2752)
!2764 = !DILocation(line: 235, column: 11, scope: !2752)
!2765 = !DILocation(line: 235, column: 18, scope: !2752)
!2766 = !DILocation(line: 236, column: 11, scope: !2752)
!2767 = !DILocation(line: 236, column: 18, scope: !2752)
!2768 = !DILocation(line: 238, column: 32, scope: !2752)
!2769 = !DILocation(line: 238, column: 24, scope: !2752)
!2770 = !DILocation(line: 238, column: 20, scope: !2752)
!2771 = !DILocation(line: 238, column: 18, scope: !2752)
!2772 = !DILocation(line: 239, column: 11, scope: !2752)
!2773 = !DILocation(line: 240, column: 15, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2752, file: !63, line: 240, column: 15)
!2775 = !DILocation(line: 240, column: 22, scope: !2774)
!2776 = !DILocation(line: 240, column: 15, scope: !2752)
!2777 = !DILocation(line: 241, column: 16, scope: !2774)
!2778 = !DILocation(line: 241, column: 13, scope: !2774)
!2779 = !DILocation(line: 242, column: 9, scope: !2752)
!2780 = !DILocation(line: 243, column: 5, scope: !2729)
!2781 = !DILocation(line: 245, column: 10, scope: !2706)
!2782 = !DILocation(line: 245, column: 3, scope: !2706)
!2783 = !DILocalVariable(name: "x", arg: 1, scope: !270, file: !63, line: 75, type: !273)
!2784 = !DILocation(line: 75, column: 36, scope: !270)
!2785 = !DILocation(line: 77, column: 3, scope: !270)
!2786 = !DILocation(line: 77, column: 6, scope: !270)
!2787 = !DILocation(line: 77, column: 27, scope: !270)
!2788 = !DILocation(line: 78, column: 3, scope: !270)
!2789 = !DILocation(line: 78, column: 6, scope: !270)
!2790 = !DILocation(line: 78, column: 31, scope: !270)
!2791 = !DILocation(line: 79, column: 3, scope: !270)
!2792 = !DILocation(line: 79, column: 6, scope: !270)
!2793 = !DILocation(line: 79, column: 16, scope: !270)
!2794 = !DILocation(line: 80, column: 3, scope: !270)
!2795 = !DILocation(line: 80, column: 6, scope: !270)
!2796 = !DILocation(line: 80, column: 22, scope: !270)
!2797 = !DILocation(line: 84, column: 3, scope: !270)
!2798 = !DILocation(line: 84, column: 6, scope: !270)
!2799 = !DILocation(line: 84, column: 18, scope: !270)
!2800 = !DILocation(line: 85, column: 3, scope: !270)
!2801 = !DILocation(line: 85, column: 6, scope: !270)
!2802 = !DILocation(line: 85, column: 16, scope: !270)
!2803 = !DILocation(line: 87, column: 3, scope: !270)
!2804 = !DILocation(line: 87, column: 6, scope: !270)
!2805 = !DILocation(line: 87, column: 14, scope: !270)
!2806 = !DILocation(line: 93, column: 3, scope: !270)
!2807 = !DILocation(line: 93, column: 6, scope: !270)
!2808 = !DILocation(line: 93, column: 26, scope: !270)
!2809 = !DILocation(line: 97, column: 23, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !270, file: !63, line: 95, column: 3)
!2811 = !DILocation(line: 97, column: 5, scope: !2810)
!2812 = !DILocation(line: 97, column: 8, scope: !2810)
!2813 = !DILocation(line: 97, column: 21, scope: !2810)
!2814 = !DILocation(line: 98, column: 9, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2810, file: !63, line: 98, column: 9)
!2816 = !DILocation(line: 98, column: 12, scope: !2815)
!2817 = !DILocation(line: 98, column: 25, scope: !2815)
!2818 = !DILocation(line: 98, column: 9, scope: !2810)
!2819 = !DILocation(line: 99, column: 7, scope: !2815)
!2820 = !DILocation(line: 103, column: 3, scope: !270)
!2821 = !DILocation(line: 103, column: 6, scope: !270)
!2822 = !DILocation(line: 103, column: 24, scope: !270)
!2823 = !DILocation(line: 104, column: 1, scope: !270)
!2824 = distinct !DISubprogram(name: "rm", scope: !1054, file: !1054, line: 577, type: !2825, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1053, retainedNodes: !213)
!2825 = !DISubroutineType(types: !2826)
!2826 = !{!103, !2827, !2828}
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2830)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rm_options", file: !98, line: 32, size: 256, elements: !2831)
!2831 = !{!2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_missing_files", scope: !2830, file: !98, line: 35, baseType: !139, size: 8)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !2830, file: !98, line: 38, baseType: !97, size: 32, offset: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !2830, file: !98, line: 47, baseType: !139, size: 8, offset: 64)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !2830, file: !98, line: 50, baseType: !139, size: 8, offset: 72)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "remove_empty_directories", scope: !2830, file: !98, line: 53, baseType: !139, size: 8, offset: 80)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !2830, file: !98, line: 57, baseType: !1163, size: 64, offset: 128)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_all_root", scope: !2830, file: !98, line: 61, baseType: !139, size: 8, offset: 192)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !2830, file: !98, line: 64, baseType: !139, size: 8, offset: 200)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !2830, file: !98, line: 67, baseType: !139, size: 8, offset: 208)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "require_restore_cwd", scope: !2830, file: !98, line: 75, baseType: !139, size: 8, offset: 216)
!2842 = !DILocalVariable(name: "file", arg: 1, scope: !2824, file: !1054, line: 577, type: !2827)
!2843 = !DILocation(line: 577, column: 18, scope: !2824)
!2844 = !DILocalVariable(name: "x", arg: 2, scope: !2824, file: !1054, line: 577, type: !2828)
!2845 = !DILocation(line: 577, column: 49, scope: !2824)
!2846 = !DILocalVariable(name: "rm_status", scope: !2824, file: !1054, line: 579, type: !103)
!2847 = !DILocation(line: 579, column: 18, scope: !2824)
!2848 = !DILocation(line: 581, column: 8, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2824, file: !1054, line: 581, column: 7)
!2850 = !DILocation(line: 581, column: 7, scope: !2849)
!2851 = !DILocation(line: 581, column: 7, scope: !2824)
!2852 = !DILocalVariable(name: "bit_flags", scope: !2853, file: !1054, line: 583, type: !5)
!2853 = distinct !DILexicalBlock(scope: !2849, file: !1054, line: 582, column: 5)
!2854 = !DILocation(line: 583, column: 11, scope: !2853)
!2855 = !DILocation(line: 587, column: 11, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2853, file: !1054, line: 587, column: 11)
!2857 = !DILocation(line: 587, column: 14, scope: !2856)
!2858 = !DILocation(line: 587, column: 11, scope: !2853)
!2859 = !DILocation(line: 588, column: 19, scope: !2856)
!2860 = !DILocation(line: 588, column: 9, scope: !2856)
!2861 = !DILocalVariable(name: "fts", scope: !2853, file: !1054, line: 590, type: !1067)
!2862 = !DILocation(line: 590, column: 12, scope: !2853)
!2863 = !DILocation(line: 590, column: 29, scope: !2853)
!2864 = !DILocation(line: 590, column: 35, scope: !2853)
!2865 = !DILocation(line: 590, column: 18, scope: !2853)
!2866 = !DILocation(line: 592, column: 7, scope: !2853)
!2867 = !DILocalVariable(name: "ent", scope: !2868, file: !1054, line: 594, type: !1160)
!2868 = distinct !DILexicalBlock(scope: !2853, file: !1054, line: 593, column: 9)
!2869 = !DILocation(line: 594, column: 19, scope: !2868)
!2870 = !DILocation(line: 596, column: 27, scope: !2868)
!2871 = !DILocation(line: 596, column: 17, scope: !2868)
!2872 = !DILocation(line: 596, column: 15, scope: !2868)
!2873 = !DILocation(line: 597, column: 15, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2868, file: !1054, line: 597, column: 15)
!2875 = !DILocation(line: 597, column: 19, scope: !2874)
!2876 = !DILocation(line: 597, column: 15, scope: !2868)
!2877 = !DILocation(line: 599, column: 19, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2879, file: !1054, line: 599, column: 19)
!2879 = distinct !DILexicalBlock(scope: !2874, file: !1054, line: 598, column: 13)
!2880 = !DILocation(line: 599, column: 25, scope: !2878)
!2881 = !DILocation(line: 599, column: 19, scope: !2879)
!2882 = !DILocation(line: 601, column: 29, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2878, file: !1054, line: 600, column: 17)
!2884 = !DILocation(line: 601, column: 36, scope: !2883)
!2885 = !DILocation(line: 601, column: 19, scope: !2883)
!2886 = !DILocation(line: 602, column: 29, scope: !2883)
!2887 = !DILocation(line: 603, column: 17, scope: !2883)
!2888 = !DILocation(line: 604, column: 15, scope: !2879)
!2889 = !DILocalVariable(name: "s", scope: !2868, file: !1054, line: 607, type: !103)
!2890 = !DILocation(line: 607, column: 26, scope: !2868)
!2891 = !DILocation(line: 607, column: 38, scope: !2868)
!2892 = !DILocation(line: 607, column: 43, scope: !2868)
!2893 = !DILocation(line: 607, column: 48, scope: !2868)
!2894 = !DILocation(line: 607, column: 30, scope: !2868)
!2895 = !DILocation(line: 609, column: 11, scope: !2868)
!2896 = !DILocation(line: 610, column: 11, scope: !2868)
!2897 = !DILocation(line: 610, column: 11, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2899, file: !1054, line: 610, column: 11)
!2899 = distinct !DILexicalBlock(scope: !2868, file: !1054, line: 610, column: 11)
!2900 = !DILocation(line: 610, column: 11, scope: !2899)
!2901 = distinct !{!2901, !2866, !2902}
!2902 = !DILocation(line: 611, column: 9, scope: !2853)
!2903 = !DILocation(line: 613, column: 22, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2853, file: !1054, line: 613, column: 11)
!2905 = !DILocation(line: 613, column: 11, scope: !2904)
!2906 = !DILocation(line: 613, column: 27, scope: !2904)
!2907 = !DILocation(line: 613, column: 11, scope: !2853)
!2908 = !DILocation(line: 615, column: 21, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2904, file: !1054, line: 614, column: 9)
!2910 = !DILocation(line: 615, column: 28, scope: !2909)
!2911 = !DILocation(line: 615, column: 11, scope: !2909)
!2912 = !DILocation(line: 616, column: 21, scope: !2909)
!2913 = !DILocation(line: 617, column: 9, scope: !2909)
!2914 = !DILocation(line: 618, column: 5, scope: !2853)
!2915 = !DILocation(line: 620, column: 10, scope: !2824)
!2916 = !DILocation(line: 620, column: 3, scope: !2824)
!2917 = distinct !DISubprogram(name: "rm_fts", scope: !1054, file: !1054, line: 418, type: !2918, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1053, retainedNodes: !213)
!2918 = !DISubroutineType(types: !2919)
!2919 = !{!103, !1067, !1160, !2828}
!2920 = !DILocalVariable(name: "fts", arg: 1, scope: !2917, file: !1054, line: 418, type: !1067)
!2921 = !DILocation(line: 418, column: 14, scope: !2917)
!2922 = !DILocalVariable(name: "ent", arg: 2, scope: !2917, file: !1054, line: 418, type: !1160)
!2923 = !DILocation(line: 418, column: 27, scope: !2917)
!2924 = !DILocalVariable(name: "x", arg: 3, scope: !2917, file: !1054, line: 418, type: !2828)
!2925 = !DILocation(line: 418, column: 57, scope: !2917)
!2926 = !DILocation(line: 420, column: 11, scope: !2917)
!2927 = !DILocation(line: 420, column: 16, scope: !2917)
!2928 = !DILocation(line: 420, column: 3, scope: !2917)
!2929 = !DILocation(line: 423, column: 13, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2931, file: !1054, line: 423, column: 11)
!2931 = distinct !DILexicalBlock(scope: !2917, file: !1054, line: 421, column: 5)
!2932 = !DILocation(line: 423, column: 16, scope: !2930)
!2933 = !DILocation(line: 424, column: 11, scope: !2930)
!2934 = !DILocation(line: 424, column: 16, scope: !2930)
!2935 = !DILocation(line: 424, column: 19, scope: !2930)
!2936 = !DILocation(line: 425, column: 16, scope: !2930)
!2937 = !DILocation(line: 425, column: 33, scope: !2930)
!2938 = !DILocation(line: 425, column: 38, scope: !2930)
!2939 = !DILocation(line: 425, column: 50, scope: !2930)
!2940 = !DILocation(line: 425, column: 55, scope: !2930)
!2941 = !DILocation(line: 425, column: 19, scope: !2930)
!2942 = !DILocation(line: 423, column: 11, scope: !2931)
!2943 = !DILocalVariable(name: "err", scope: !2944, file: !1054, line: 431, type: !5)
!2944 = distinct !DILexicalBlock(scope: !2930, file: !1054, line: 426, column: 9)
!2945 = !DILocation(line: 431, column: 15, scope: !2944)
!2946 = !DILocation(line: 431, column: 21, scope: !2944)
!2947 = !DILocation(line: 431, column: 24, scope: !2944)
!2948 = !DILocation(line: 432, column: 21, scope: !2944)
!2949 = !DILocation(line: 432, column: 26, scope: !2944)
!2950 = !DILocation(line: 432, column: 49, scope: !2944)
!2951 = !DILocation(line: 432, column: 11, scope: !2944)
!2952 = !DILocation(line: 433, column: 31, scope: !2944)
!2953 = !DILocation(line: 433, column: 11, scope: !2944)
!2954 = !DILocation(line: 434, column: 26, scope: !2944)
!2955 = !DILocation(line: 434, column: 31, scope: !2944)
!2956 = !DILocation(line: 434, column: 11, scope: !2944)
!2957 = !DILocation(line: 435, column: 11, scope: !2944)
!2958 = !DILocation(line: 439, column: 11, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2931, file: !1054, line: 439, column: 11)
!2960 = !DILocation(line: 439, column: 16, scope: !2959)
!2961 = !DILocation(line: 439, column: 26, scope: !2959)
!2962 = !DILocation(line: 439, column: 11, scope: !2931)
!2963 = !DILocation(line: 444, column: 46, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2965, file: !1054, line: 444, column: 15)
!2965 = distinct !DILexicalBlock(scope: !2959, file: !1054, line: 440, column: 9)
!2966 = !DILocation(line: 444, column: 51, scope: !2964)
!2967 = !DILocation(line: 444, column: 30, scope: !2964)
!2968 = !DILocation(line: 444, column: 15, scope: !2964)
!2969 = !DILocation(line: 444, column: 15, scope: !2965)
!2970 = !DILocation(line: 447, column: 22, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2964, file: !1054, line: 445, column: 13)
!2972 = !DILocation(line: 448, column: 22, scope: !2971)
!2973 = !DILocation(line: 448, column: 42, scope: !2971)
!2974 = !DILocation(line: 449, column: 22, scope: !2971)
!2975 = !DILocation(line: 446, column: 15, scope: !2971)
!2976 = !DILocation(line: 450, column: 30, scope: !2971)
!2977 = !DILocation(line: 450, column: 35, scope: !2971)
!2978 = !DILocation(line: 450, column: 15, scope: !2971)
!2979 = !DILocation(line: 451, column: 15, scope: !2971)
!2980 = !DILocation(line: 457, column: 15, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2965, file: !1054, line: 457, column: 15)
!2982 = !DILocation(line: 457, column: 15, scope: !2965)
!2983 = !DILocation(line: 459, column: 15, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2981, file: !1054, line: 458, column: 13)
!2985 = !DILocation(line: 459, column: 15, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2987, file: !1054, line: 459, column: 15)
!2987 = distinct !DILexicalBlock(scope: !2984, file: !1054, line: 459, column: 15)
!2988 = !DILocation(line: 459, column: 15, scope: !2987)
!2989 = !DILocation(line: 460, column: 30, scope: !2984)
!2990 = !DILocation(line: 460, column: 35, scope: !2984)
!2991 = !DILocation(line: 460, column: 15, scope: !2984)
!2992 = !DILocation(line: 461, column: 15, scope: !2984)
!2993 = !DILocation(line: 467, column: 15, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2965, file: !1054, line: 467, column: 15)
!2995 = !DILocation(line: 467, column: 18, scope: !2994)
!2996 = !DILocation(line: 467, column: 15, scope: !2965)
!2997 = !DILocalVariable(name: "failed", scope: !2998, file: !1054, line: 469, type: !139)
!2998 = distinct !DILexicalBlock(scope: !2994, file: !1054, line: 468, column: 13)
!2999 = !DILocation(line: 469, column: 20, scope: !2998)
!3000 = !DILocalVariable(name: "parent", scope: !2998, file: !1054, line: 470, type: !7)
!3001 = !DILocation(line: 470, column: 21, scope: !2998)
!3002 = !DILocation(line: 470, column: 48, scope: !2998)
!3003 = !DILocation(line: 470, column: 53, scope: !2998)
!3004 = !DILocation(line: 470, column: 30, scope: !2998)
!3005 = !DILocalVariable(name: "statbuf", scope: !2998, file: !1054, line: 471, type: !1097)
!3006 = !DILocation(line: 471, column: 27, scope: !2998)
!3007 = !DILocation(line: 473, column: 20, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !2998, file: !1054, line: 473, column: 19)
!3009 = !DILocation(line: 473, column: 27, scope: !3008)
!3010 = !DILocation(line: 473, column: 37, scope: !3008)
!3011 = !DILocation(line: 473, column: 30, scope: !3008)
!3012 = !DILocation(line: 473, column: 19, scope: !2998)
!3013 = !DILocation(line: 476, column: 26, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !3008, file: !1054, line: 474, column: 17)
!3015 = !DILocation(line: 477, column: 26, scope: !3014)
!3016 = !DILocation(line: 478, column: 26, scope: !3014)
!3017 = !DILocation(line: 475, column: 19, scope: !3014)
!3018 = !DILocation(line: 479, column: 26, scope: !3014)
!3019 = !DILocation(line: 480, column: 17, scope: !3014)
!3020 = !DILocation(line: 482, column: 21, scope: !2998)
!3021 = !DILocation(line: 482, column: 15, scope: !2998)
!3022 = !DILocation(line: 484, column: 19, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !2998, file: !1054, line: 484, column: 19)
!3024 = !DILocation(line: 484, column: 26, scope: !3023)
!3025 = !DILocation(line: 484, column: 29, scope: !3023)
!3026 = !DILocation(line: 484, column: 34, scope: !3023)
!3027 = !DILocation(line: 484, column: 53, scope: !3023)
!3028 = !DILocation(line: 484, column: 42, scope: !3023)
!3029 = !DILocation(line: 484, column: 19, scope: !2998)
!3030 = !DILocation(line: 486, column: 25, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3032, file: !1054, line: 486, column: 23)
!3032 = distinct !DILexicalBlock(scope: !3023, file: !1054, line: 485, column: 17)
!3033 = !DILocation(line: 486, column: 23, scope: !3032)
!3034 = !DILocation(line: 489, column: 30, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3031, file: !1054, line: 487, column: 21)
!3036 = !DILocation(line: 490, column: 30, scope: !3035)
!3037 = !DILocation(line: 488, column: 23, scope: !3035)
!3038 = !DILocation(line: 491, column: 36, scope: !3035)
!3039 = !DILocation(line: 491, column: 23, scope: !3035)
!3040 = !DILocation(line: 492, column: 21, scope: !3035)
!3041 = !DILocation(line: 493, column: 34, scope: !3032)
!3042 = !DILocation(line: 493, column: 39, scope: !3032)
!3043 = !DILocation(line: 493, column: 19, scope: !3032)
!3044 = !DILocation(line: 494, column: 19, scope: !3032)
!3045 = !DILocation(line: 496, column: 13, scope: !2998)
!3046 = !DILocation(line: 497, column: 9, scope: !2965)
!3047 = !DILocalVariable(name: "is_empty_directory", scope: !3048, file: !1054, line: 500, type: !1174)
!3048 = distinct !DILexicalBlock(scope: !2931, file: !1054, line: 499, column: 7)
!3049 = !DILocation(line: 500, column: 17, scope: !3048)
!3050 = !DILocalVariable(name: "s", scope: !3048, file: !1054, line: 501, type: !103)
!3051 = !DILocation(line: 501, column: 24, scope: !3048)
!3052 = !DILocation(line: 501, column: 36, scope: !3048)
!3053 = !DILocation(line: 501, column: 41, scope: !3048)
!3054 = !DILocation(line: 501, column: 63, scope: !3048)
!3055 = !DILocation(line: 501, column: 28, scope: !3048)
!3056 = !DILocation(line: 504, column: 13, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3048, file: !1054, line: 504, column: 13)
!3058 = !DILocation(line: 504, column: 15, scope: !3057)
!3059 = !DILocation(line: 504, column: 24, scope: !3057)
!3060 = !DILocation(line: 504, column: 27, scope: !3057)
!3061 = !DILocation(line: 504, column: 46, scope: !3057)
!3062 = !DILocation(line: 504, column: 13, scope: !3048)
!3063 = !DILocation(line: 508, column: 25, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !3057, file: !1054, line: 505, column: 11)
!3065 = !DILocation(line: 508, column: 30, scope: !3064)
!3066 = !DILocation(line: 508, column: 35, scope: !3064)
!3067 = !DILocation(line: 508, column: 17, scope: !3064)
!3068 = !DILocation(line: 508, column: 15, scope: !3064)
!3069 = !DILocation(line: 509, column: 28, scope: !3064)
!3070 = !DILocation(line: 509, column: 33, scope: !3064)
!3071 = !DILocation(line: 509, column: 13, scope: !3064)
!3072 = !DILocation(line: 510, column: 11, scope: !3064)
!3073 = !DILocation(line: 512, column: 13, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3048, file: !1054, line: 512, column: 13)
!3075 = !DILocation(line: 512, column: 15, scope: !3074)
!3076 = !DILocation(line: 512, column: 13, scope: !3048)
!3077 = !DILocation(line: 514, column: 33, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3074, file: !1054, line: 513, column: 11)
!3079 = !DILocation(line: 514, column: 13, scope: !3078)
!3080 = !DILocation(line: 515, column: 28, scope: !3078)
!3081 = !DILocation(line: 515, column: 33, scope: !3078)
!3082 = !DILocation(line: 515, column: 13, scope: !3078)
!3083 = !DILocation(line: 516, column: 11, scope: !3078)
!3084 = !DILocation(line: 518, column: 16, scope: !3048)
!3085 = !DILocation(line: 518, column: 9, scope: !3048)
!3086 = !DILocation(line: 533, column: 13, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3088, file: !1054, line: 533, column: 13)
!3088 = distinct !DILexicalBlock(scope: !2931, file: !1054, line: 529, column: 7)
!3089 = !DILocation(line: 533, column: 18, scope: !3087)
!3090 = !DILocation(line: 533, column: 27, scope: !3087)
!3091 = !DILocation(line: 534, column: 13, scope: !3087)
!3092 = !DILocation(line: 534, column: 16, scope: !3087)
!3093 = !DILocation(line: 534, column: 19, scope: !3087)
!3094 = !DILocation(line: 535, column: 13, scope: !3087)
!3095 = !DILocation(line: 535, column: 32, scope: !3087)
!3096 = !DILocation(line: 535, column: 37, scope: !3087)
!3097 = !DILocation(line: 535, column: 30, scope: !3087)
!3098 = !DILocation(line: 536, column: 13, scope: !3087)
!3099 = !DILocation(line: 536, column: 16, scope: !3087)
!3100 = !DILocation(line: 536, column: 21, scope: !3087)
!3101 = !DILocation(line: 536, column: 32, scope: !3087)
!3102 = !DILocation(line: 536, column: 42, scope: !3087)
!3103 = !DILocation(line: 536, column: 47, scope: !3087)
!3104 = !DILocation(line: 536, column: 39, scope: !3087)
!3105 = !DILocation(line: 533, column: 13, scope: !3088)
!3106 = !DILocation(line: 538, column: 33, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3087, file: !1054, line: 537, column: 11)
!3108 = !DILocation(line: 538, column: 13, scope: !3107)
!3109 = !DILocation(line: 539, column: 26, scope: !3107)
!3110 = !DILocation(line: 540, column: 20, scope: !3107)
!3111 = !DILocation(line: 539, column: 13, scope: !3107)
!3112 = !DILocation(line: 541, column: 13, scope: !3107)
!3113 = !DILocalVariable(name: "is_dir", scope: !3088, file: !1054, line: 544, type: !139)
!3114 = !DILocation(line: 544, column: 14, scope: !3088)
!3115 = !DILocation(line: 544, column: 23, scope: !3088)
!3116 = !DILocation(line: 544, column: 28, scope: !3088)
!3117 = !DILocation(line: 544, column: 37, scope: !3088)
!3118 = !DILocation(line: 544, column: 47, scope: !3088)
!3119 = !DILocation(line: 544, column: 50, scope: !3088)
!3120 = !DILocation(line: 544, column: 55, scope: !3088)
!3121 = !DILocation(line: 544, column: 64, scope: !3088)
!3122 = !DILocalVariable(name: "s", scope: !3088, file: !1054, line: 545, type: !103)
!3123 = !DILocation(line: 545, column: 24, scope: !3088)
!3124 = !DILocation(line: 545, column: 36, scope: !3088)
!3125 = !DILocation(line: 545, column: 41, scope: !3088)
!3126 = !DILocation(line: 545, column: 46, scope: !3088)
!3127 = !DILocation(line: 545, column: 54, scope: !3088)
!3128 = !DILocation(line: 545, column: 28, scope: !3088)
!3129 = !DILocation(line: 546, column: 13, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3088, file: !1054, line: 546, column: 13)
!3131 = !DILocation(line: 546, column: 15, scope: !3130)
!3132 = !DILocation(line: 546, column: 13, scope: !3088)
!3133 = !DILocation(line: 547, column: 18, scope: !3130)
!3134 = !DILocation(line: 547, column: 11, scope: !3130)
!3135 = !DILocation(line: 548, column: 24, scope: !3088)
!3136 = !DILocation(line: 548, column: 29, scope: !3088)
!3137 = !DILocation(line: 548, column: 34, scope: !3088)
!3138 = !DILocation(line: 548, column: 37, scope: !3088)
!3139 = !DILocation(line: 548, column: 16, scope: !3088)
!3140 = !DILocation(line: 548, column: 9, scope: !3088)
!3141 = !DILocation(line: 552, column: 7, scope: !2931)
!3142 = !DILocation(line: 552, column: 7, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !2931, file: !1054, line: 552, column: 7)
!3144 = !DILocation(line: 553, column: 22, scope: !2931)
!3145 = !DILocation(line: 553, column: 27, scope: !2931)
!3146 = !DILocation(line: 553, column: 7, scope: !2931)
!3147 = !DILocation(line: 554, column: 7, scope: !2931)
!3148 = !DILocation(line: 559, column: 17, scope: !2931)
!3149 = !DILocation(line: 559, column: 22, scope: !2931)
!3150 = !DILocation(line: 559, column: 33, scope: !2931)
!3151 = !DILocation(line: 560, column: 14, scope: !2931)
!3152 = !DILocation(line: 559, column: 7, scope: !2931)
!3153 = !DILocation(line: 561, column: 22, scope: !2931)
!3154 = !DILocation(line: 561, column: 27, scope: !2931)
!3155 = !DILocation(line: 561, column: 7, scope: !2931)
!3156 = !DILocation(line: 562, column: 7, scope: !2931)
!3157 = !DILocation(line: 565, column: 20, scope: !2931)
!3158 = !DILocation(line: 567, column: 14, scope: !2931)
!3159 = !DILocation(line: 567, column: 19, scope: !2931)
!3160 = !DILocation(line: 568, column: 14, scope: !2931)
!3161 = !DILocation(line: 565, column: 7, scope: !2931)
!3162 = !DILocation(line: 570, column: 7, scope: !2931)
!3163 = !DILocation(line: 572, column: 1, scope: !2917)
!3164 = distinct !DISubprogram(name: "is_empty_dir", scope: !209, file: !209, line: 290, type: !3165, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1053, retainedNodes: !213)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{!139, !5, !113}
!3167 = !DILocalVariable(name: "fd_cwd", arg: 1, scope: !3164, file: !209, line: 290, type: !5)
!3168 = !DILocation(line: 290, column: 19, scope: !3164)
!3169 = !DILocalVariable(name: "dir", arg: 2, scope: !3164, file: !209, line: 290, type: !113)
!3170 = !DILocation(line: 290, column: 39, scope: !3164)
!3171 = !DILocalVariable(name: "dirp", scope: !3164, file: !209, line: 292, type: !530)
!3172 = !DILocation(line: 292, column: 8, scope: !3164)
!3173 = !DILocalVariable(name: "dp", scope: !3164, file: !209, line: 293, type: !1178)
!3174 = !DILocation(line: 293, column: 24, scope: !3164)
!3175 = !DILocalVariable(name: "saved_errno", scope: !3164, file: !209, line: 294, type: !5)
!3176 = !DILocation(line: 294, column: 7, scope: !3164)
!3177 = !DILocalVariable(name: "fd", scope: !3164, file: !209, line: 295, type: !5)
!3178 = !DILocation(line: 295, column: 7, scope: !3164)
!3179 = !DILocation(line: 295, column: 20, scope: !3164)
!3180 = !DILocation(line: 295, column: 28, scope: !3164)
!3181 = !DILocation(line: 295, column: 12, scope: !3164)
!3182 = !DILocation(line: 299, column: 7, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3164, file: !209, line: 299, column: 7)
!3184 = !DILocation(line: 299, column: 10, scope: !3183)
!3185 = !DILocation(line: 299, column: 7, scope: !3164)
!3186 = !DILocation(line: 300, column: 5, scope: !3183)
!3187 = !DILocation(line: 302, column: 21, scope: !3164)
!3188 = !DILocation(line: 302, column: 10, scope: !3164)
!3189 = !DILocation(line: 302, column: 8, scope: !3164)
!3190 = !DILocation(line: 303, column: 7, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3164, file: !209, line: 303, column: 7)
!3192 = !DILocation(line: 303, column: 12, scope: !3191)
!3193 = !DILocation(line: 303, column: 7, scope: !3164)
!3194 = !DILocation(line: 305, column: 14, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3191, file: !209, line: 304, column: 5)
!3196 = !DILocation(line: 305, column: 7, scope: !3195)
!3197 = !DILocation(line: 306, column: 7, scope: !3195)
!3198 = !DILocation(line: 309, column: 3, scope: !3164)
!3199 = !DILocation(line: 309, column: 9, scope: !3164)
!3200 = !DILocation(line: 310, column: 41, scope: !3164)
!3201 = !DILocation(line: 310, column: 8, scope: !3164)
!3202 = !DILocation(line: 310, column: 6, scope: !3164)
!3203 = !DILocation(line: 311, column: 17, scope: !3164)
!3204 = !DILocation(line: 311, column: 15, scope: !3164)
!3205 = !DILocation(line: 312, column: 13, scope: !3164)
!3206 = !DILocation(line: 312, column: 3, scope: !3164)
!3207 = !DILocation(line: 313, column: 7, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3164, file: !209, line: 313, column: 7)
!3209 = !DILocation(line: 313, column: 10, scope: !3208)
!3210 = !DILocation(line: 313, column: 7, scope: !3164)
!3211 = !DILocation(line: 314, column: 5, scope: !3208)
!3212 = !DILocation(line: 315, column: 10, scope: !3164)
!3213 = !DILocation(line: 315, column: 22, scope: !3164)
!3214 = !DILocation(line: 315, column: 3, scope: !3164)
!3215 = !DILocation(line: 316, column: 1, scope: !3164)
!3216 = distinct !DISubprogram(name: "mark_ancestor_dirs", scope: !1054, file: !1054, line: 352, type: !3217, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1053, retainedNodes: !213)
!3217 = !DISubroutineType(types: !3218)
!3218 = !{null, !1160}
!3219 = !DILocalVariable(name: "ent", arg: 1, scope: !3216, file: !1054, line: 352, type: !1160)
!3220 = !DILocation(line: 352, column: 29, scope: !3216)
!3221 = !DILocalVariable(name: "p", scope: !3216, file: !1054, line: 354, type: !1160)
!3222 = !DILocation(line: 354, column: 11, scope: !3216)
!3223 = !DILocation(line: 355, column: 12, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3216, file: !1054, line: 355, column: 3)
!3225 = !DILocation(line: 355, column: 17, scope: !3224)
!3226 = !DILocation(line: 355, column: 10, scope: !3224)
!3227 = !DILocation(line: 355, column: 8, scope: !3224)
!3228 = !DILocation(line: 355, column: 46, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3224, file: !1054, line: 355, column: 3)
!3230 = !DILocation(line: 355, column: 49, scope: !3229)
!3231 = !DILocation(line: 355, column: 43, scope: !3229)
!3232 = !DILocation(line: 355, column: 3, scope: !3224)
!3233 = !DILocation(line: 357, column: 11, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3235, file: !1054, line: 357, column: 11)
!3235 = distinct !DILexicalBlock(scope: !3229, file: !1054, line: 356, column: 5)
!3236 = !DILocation(line: 357, column: 14, scope: !3234)
!3237 = !DILocation(line: 357, column: 11, scope: !3235)
!3238 = !DILocation(line: 358, column: 9, scope: !3234)
!3239 = !DILocation(line: 359, column: 7, scope: !3235)
!3240 = !DILocation(line: 359, column: 10, scope: !3235)
!3241 = !DILocation(line: 359, column: 21, scope: !3235)
!3242 = !DILocation(line: 360, column: 5, scope: !3235)
!3243 = !DILocation(line: 355, column: 64, scope: !3229)
!3244 = !DILocation(line: 355, column: 67, scope: !3229)
!3245 = !DILocation(line: 355, column: 62, scope: !3229)
!3246 = !DILocation(line: 355, column: 3, scope: !3229)
!3247 = distinct !{!3247, !3232, !3248}
!3248 = !DILocation(line: 360, column: 5, scope: !3224)
!3249 = !DILocation(line: 361, column: 1, scope: !3216)
!3250 = distinct !DISubprogram(name: "fts_skip_tree", scope: !1054, file: !1054, line: 341, type: !3251, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1053, retainedNodes: !213)
!3251 = !DISubroutineType(types: !3252)
!3252 = !{null, !1067, !1160}
!3253 = !DILocalVariable(name: "fts", arg: 1, scope: !3250, file: !1054, line: 341, type: !1067)
!3254 = !DILocation(line: 341, column: 21, scope: !3250)
!3255 = !DILocalVariable(name: "ent", arg: 2, scope: !3250, file: !1054, line: 341, type: !1160)
!3256 = !DILocation(line: 341, column: 34, scope: !3250)
!3257 = !DILocation(line: 343, column: 12, scope: !3250)
!3258 = !DILocation(line: 343, column: 17, scope: !3250)
!3259 = !DILocation(line: 343, column: 3, scope: !3250)
!3260 = !DILocalVariable(name: "__x", scope: !3261, file: !1054, line: 345, type: !1160)
!3261 = distinct !DILexicalBlock(scope: !3250, file: !1054, line: 345, column: 3)
!3262 = !DILocation(line: 345, column: 3, scope: !3261)
!3263 = !DILocation(line: 346, column: 1, scope: !3250)
!3264 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !209, file: !209, line: 265, type: !2628, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1053, retainedNodes: !213)
!3265 = !DILocalVariable(name: "file_name", arg: 1, scope: !3264, file: !209, line: 265, type: !113)
!3266 = !DILocation(line: 265, column: 28, scope: !3264)
!3267 = !DILocation(line: 267, column: 7, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3264, file: !209, line: 267, column: 7)
!3269 = !DILocation(line: 267, column: 20, scope: !3268)
!3270 = !DILocation(line: 267, column: 7, scope: !3264)
!3271 = !DILocalVariable(name: "sep", scope: !3272, file: !209, line: 269, type: !8)
!3272 = distinct !DILexicalBlock(scope: !3268, file: !209, line: 268, column: 5)
!3273 = !DILocation(line: 269, column: 12, scope: !3272)
!3274 = !DILocation(line: 269, column: 18, scope: !3272)
!3275 = !DILocation(line: 269, column: 29, scope: !3272)
!3276 = !DILocation(line: 269, column: 42, scope: !3272)
!3277 = !DILocation(line: 269, column: 50, scope: !3272)
!3278 = !DILocation(line: 270, column: 17, scope: !3272)
!3279 = !DILocation(line: 270, column: 21, scope: !3272)
!3280 = !DILocation(line: 270, column: 24, scope: !3272)
!3281 = !DILocation(line: 270, column: 7, scope: !3272)
!3282 = !DILocation(line: 273, column: 5, scope: !3268)
!3283 = !DILocation(line: 274, column: 1, scope: !3264)
!3284 = distinct !DISubprogram(name: "prompt", scope: !1054, file: !1054, line: 176, type: !3285, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1053, retainedNodes: !213)
!3285 = !DISubroutineType(types: !3286)
!3286 = !{!103, !3287, !3288, !139, !2828, !1061, !3289}
!3287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!3290 = !DILocalVariable(name: "fts", arg: 1, scope: !3284, file: !1054, line: 176, type: !3287)
!3291 = !DILocation(line: 176, column: 20, scope: !3284)
!3292 = !DILocalVariable(name: "ent", arg: 2, scope: !3284, file: !1054, line: 176, type: !3288)
!3293 = !DILocation(line: 176, column: 39, scope: !3284)
!3294 = !DILocalVariable(name: "is_dir", arg: 3, scope: !3284, file: !1054, line: 176, type: !139)
!3295 = !DILocation(line: 176, column: 49, scope: !3284)
!3296 = !DILocalVariable(name: "x", arg: 4, scope: !3284, file: !1054, line: 177, type: !2828)
!3297 = !DILocation(line: 177, column: 34, scope: !3284)
!3298 = !DILocalVariable(name: "mode", arg: 5, scope: !3284, file: !1054, line: 177, type: !1061)
!3299 = !DILocation(line: 177, column: 56, scope: !3284)
!3300 = !DILocalVariable(name: "is_empty_p", arg: 6, scope: !3284, file: !1054, line: 178, type: !3289)
!3301 = !DILocation(line: 178, column: 18, scope: !3284)
!3302 = !DILocalVariable(name: "fd_cwd", scope: !3284, file: !1054, line: 180, type: !5)
!3303 = !DILocation(line: 180, column: 7, scope: !3284)
!3304 = !DILocation(line: 180, column: 16, scope: !3284)
!3305 = !DILocation(line: 180, column: 21, scope: !3284)
!3306 = !DILocalVariable(name: "full_name", scope: !3284, file: !1054, line: 181, type: !113)
!3307 = !DILocation(line: 181, column: 15, scope: !3284)
!3308 = !DILocation(line: 181, column: 27, scope: !3284)
!3309 = !DILocation(line: 181, column: 32, scope: !3284)
!3310 = !DILocalVariable(name: "filename", scope: !3284, file: !1054, line: 182, type: !113)
!3311 = !DILocation(line: 182, column: 15, scope: !3284)
!3312 = !DILocation(line: 182, column: 26, scope: !3284)
!3313 = !DILocation(line: 182, column: 31, scope: !3284)
!3314 = !DILocation(line: 183, column: 7, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3284, file: !1054, line: 183, column: 7)
!3316 = !DILocation(line: 183, column: 7, scope: !3284)
!3317 = !DILocation(line: 184, column: 6, scope: !3315)
!3318 = !DILocation(line: 184, column: 17, scope: !3315)
!3319 = !DILocation(line: 184, column: 5, scope: !3315)
!3320 = !DILocalVariable(name: "st", scope: !3284, file: !1054, line: 186, type: !1097)
!3321 = !DILocation(line: 186, column: 15, scope: !3284)
!3322 = !DILocalVariable(name: "sbuf", scope: !3284, file: !1054, line: 187, type: !1189)
!3323 = !DILocation(line: 187, column: 16, scope: !3284)
!3324 = !DILocation(line: 188, column: 20, scope: !3284)
!3325 = !DILocation(line: 188, column: 3, scope: !3284)
!3326 = !DILocalVariable(name: "dirent_type", scope: !3284, file: !1054, line: 190, type: !5)
!3327 = !DILocation(line: 190, column: 7, scope: !3284)
!3328 = !DILocation(line: 190, column: 21, scope: !3284)
!3329 = !DILocalVariable(name: "write_protected", scope: !3284, file: !1054, line: 191, type: !5)
!3330 = !DILocation(line: 191, column: 7, scope: !3284)
!3331 = !DILocalVariable(name: "is_empty", scope: !3284, file: !1054, line: 193, type: !139)
!3332 = !DILocation(line: 193, column: 8, scope: !3284)
!3333 = !DILocation(line: 194, column: 7, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3284, file: !1054, line: 194, column: 7)
!3335 = !DILocation(line: 194, column: 7, scope: !3284)
!3336 = !DILocation(line: 196, column: 32, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3334, file: !1054, line: 195, column: 5)
!3338 = !DILocation(line: 196, column: 40, scope: !3337)
!3339 = !DILocation(line: 196, column: 18, scope: !3337)
!3340 = !DILocation(line: 196, column: 16, scope: !3337)
!3341 = !DILocation(line: 197, column: 21, scope: !3337)
!3342 = !DILocation(line: 197, column: 8, scope: !3337)
!3343 = !DILocation(line: 197, column: 19, scope: !3337)
!3344 = !DILocation(line: 198, column: 5, scope: !3337)
!3345 = !DILocation(line: 203, column: 7, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3284, file: !1054, line: 203, column: 7)
!3347 = !DILocation(line: 203, column: 12, scope: !3346)
!3348 = !DILocation(line: 203, column: 7, scope: !3284)
!3349 = !DILocation(line: 204, column: 5, scope: !3346)
!3350 = !DILocation(line: 206, column: 7, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3284, file: !1054, line: 206, column: 7)
!3352 = !DILocation(line: 206, column: 10, scope: !3351)
!3353 = !DILocation(line: 206, column: 22, scope: !3351)
!3354 = !DILocation(line: 206, column: 7, scope: !3284)
!3355 = !DILocation(line: 207, column: 5, scope: !3351)
!3356 = !DILocalVariable(name: "wp_errno", scope: !3284, file: !1054, line: 209, type: !5)
!3357 = !DILocation(line: 209, column: 7, scope: !3284)
!3358 = !DILocation(line: 210, column: 8, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3284, file: !1054, line: 210, column: 7)
!3360 = !DILocation(line: 210, column: 11, scope: !3359)
!3361 = !DILocation(line: 211, column: 7, scope: !3359)
!3362 = !DILocation(line: 211, column: 12, scope: !3359)
!3363 = !DILocation(line: 211, column: 15, scope: !3359)
!3364 = !DILocation(line: 211, column: 27, scope: !3359)
!3365 = !DILocation(line: 211, column: 42, scope: !3359)
!3366 = !DILocation(line: 211, column: 45, scope: !3359)
!3367 = !DILocation(line: 211, column: 48, scope: !3359)
!3368 = !DILocation(line: 212, column: 7, scope: !3359)
!3369 = !DILocation(line: 212, column: 10, scope: !3359)
!3370 = !DILocation(line: 212, column: 22, scope: !3359)
!3371 = !DILocation(line: 210, column: 7, scope: !3284)
!3372 = !DILocation(line: 214, column: 54, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3359, file: !1054, line: 213, column: 5)
!3374 = !DILocation(line: 214, column: 62, scope: !3373)
!3375 = !DILocation(line: 214, column: 72, scope: !3373)
!3376 = !DILocation(line: 214, column: 25, scope: !3373)
!3377 = !DILocation(line: 214, column: 23, scope: !3373)
!3378 = !DILocation(line: 215, column: 18, scope: !3373)
!3379 = !DILocation(line: 215, column: 16, scope: !3373)
!3380 = !DILocation(line: 216, column: 5, scope: !3373)
!3381 = !DILocation(line: 218, column: 7, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3284, file: !1054, line: 218, column: 7)
!3383 = !DILocation(line: 218, column: 23, scope: !3382)
!3384 = !DILocation(line: 218, column: 26, scope: !3382)
!3385 = !DILocation(line: 218, column: 29, scope: !3382)
!3386 = !DILocation(line: 218, column: 41, scope: !3382)
!3387 = !DILocation(line: 218, column: 7, scope: !3284)
!3388 = !DILocation(line: 220, column: 16, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3390, file: !1054, line: 220, column: 11)
!3390 = distinct !DILexicalBlock(scope: !3382, file: !1054, line: 219, column: 5)
!3391 = !DILocation(line: 220, column: 13, scope: !3389)
!3392 = !DILocation(line: 220, column: 32, scope: !3389)
!3393 = !DILocation(line: 220, column: 35, scope: !3389)
!3394 = !DILocation(line: 220, column: 47, scope: !3389)
!3395 = !DILocation(line: 220, column: 11, scope: !3390)
!3396 = !DILocation(line: 222, column: 30, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !1054, line: 222, column: 15)
!3398 = distinct !DILexicalBlock(scope: !3389, file: !1054, line: 221, column: 9)
!3399 = !DILocation(line: 222, column: 38, scope: !3397)
!3400 = !DILocation(line: 222, column: 48, scope: !3397)
!3401 = !DILocation(line: 222, column: 15, scope: !3397)
!3402 = !DILocation(line: 222, column: 75, scope: !3397)
!3403 = !DILocation(line: 222, column: 15, scope: !3398)
!3404 = !DILocation(line: 224, column: 19, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3406, file: !1054, line: 224, column: 19)
!3406 = distinct !DILexicalBlock(scope: !3397, file: !1054, line: 223, column: 13)
!3407 = !DILocation(line: 224, column: 19, scope: !3406)
!3408 = !DILocation(line: 225, column: 29, scope: !3405)
!3409 = !DILocation(line: 225, column: 17, scope: !3405)
!3410 = !DILocation(line: 226, column: 24, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3405, file: !1054, line: 226, column: 24)
!3412 = !DILocation(line: 226, column: 24, scope: !3405)
!3413 = !DILocation(line: 227, column: 29, scope: !3411)
!3414 = !DILocation(line: 227, column: 17, scope: !3411)
!3415 = !DILocation(line: 229, column: 13, scope: !3406)
!3416 = !DILocation(line: 233, column: 31, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3397, file: !1054, line: 231, column: 13)
!3418 = !DILocation(line: 234, column: 26, scope: !3417)
!3419 = !DILocation(line: 234, column: 24, scope: !3417)
!3420 = !DILocation(line: 236, column: 9, scope: !3398)
!3421 = !DILocation(line: 238, column: 16, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3390, file: !1054, line: 238, column: 11)
!3423 = !DILocation(line: 238, column: 13, scope: !3422)
!3424 = !DILocation(line: 238, column: 11, scope: !3390)
!3425 = !DILocation(line: 239, column: 17, scope: !3422)
!3426 = !DILocation(line: 239, column: 9, scope: !3422)
!3427 = !DILocation(line: 243, column: 17, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3429, file: !1054, line: 243, column: 17)
!3429 = distinct !DILexicalBlock(scope: !3422, file: !1054, line: 240, column: 11)
!3430 = !DILocation(line: 243, column: 20, scope: !3428)
!3431 = !DILocation(line: 243, column: 32, scope: !3428)
!3432 = !DILocation(line: 243, column: 17, scope: !3429)
!3433 = !DILocation(line: 244, column: 15, scope: !3428)
!3434 = !DILocation(line: 245, column: 13, scope: !3429)
!3435 = !DILocation(line: 251, column: 21, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3429, file: !1054, line: 251, column: 18)
!3437 = !DILocation(line: 251, column: 24, scope: !3436)
!3438 = !DILocation(line: 251, column: 34, scope: !3436)
!3439 = !DILocation(line: 251, column: 38, scope: !3436)
!3440 = !DILocation(line: 251, column: 41, scope: !3436)
!3441 = !DILocation(line: 251, column: 66, scope: !3436)
!3442 = !DILocation(line: 251, column: 69, scope: !3436)
!3443 = !DILocation(line: 251, column: 18, scope: !3429)
!3444 = !DILocation(line: 253, column: 33, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3436, file: !1054, line: 252, column: 15)
!3446 = !DILocation(line: 254, column: 26, scope: !3445)
!3447 = !DILocation(line: 255, column: 15, scope: !3445)
!3448 = !DILocation(line: 256, column: 13, scope: !3429)
!3449 = !DILocation(line: 257, column: 11, scope: !3429)
!3450 = !DILocalVariable(name: "quoted_name", scope: !3390, file: !1054, line: 259, type: !113)
!3451 = !DILocation(line: 259, column: 19, scope: !3390)
!3452 = !DILocation(line: 259, column: 33, scope: !3390)
!3453 = !DILocation(line: 261, column: 11, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3390, file: !1054, line: 261, column: 11)
!3455 = !DILocation(line: 261, column: 27, scope: !3454)
!3456 = !DILocation(line: 261, column: 11, scope: !3390)
!3457 = !DILocation(line: 263, column: 21, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3454, file: !1054, line: 262, column: 9)
!3459 = !DILocation(line: 263, column: 31, scope: !3458)
!3460 = !DILocation(line: 263, column: 54, scope: !3458)
!3461 = !DILocation(line: 263, column: 11, scope: !3458)
!3462 = !DILocation(line: 264, column: 11, scope: !3458)
!3463 = !DILocation(line: 268, column: 11, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3390, file: !1054, line: 268, column: 11)
!3465 = !DILocation(line: 268, column: 23, scope: !3464)
!3466 = !DILocation(line: 269, column: 11, scope: !3464)
!3467 = !DILocation(line: 269, column: 14, scope: !3464)
!3468 = !DILocation(line: 269, column: 19, scope: !3464)
!3469 = !DILocation(line: 270, column: 11, scope: !3464)
!3470 = !DILocation(line: 270, column: 15, scope: !3464)
!3471 = !DILocation(line: 268, column: 11, scope: !3390)
!3472 = !DILocation(line: 271, column: 18, scope: !3464)
!3473 = !DILocation(line: 272, column: 19, scope: !3464)
!3474 = !DILocation(line: 273, column: 21, scope: !3464)
!3475 = !DILocation(line: 274, column: 21, scope: !3464)
!3476 = !DILocation(line: 275, column: 18, scope: !3464)
!3477 = !DILocation(line: 275, column: 32, scope: !3464)
!3478 = !DILocation(line: 271, column: 9, scope: !3464)
!3479 = !DILocation(line: 278, column: 30, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !1054, line: 278, column: 15)
!3481 = distinct !DILexicalBlock(scope: !3464, file: !1054, line: 277, column: 9)
!3482 = !DILocation(line: 278, column: 38, scope: !3480)
!3483 = !DILocation(line: 278, column: 48, scope: !3480)
!3484 = !DILocation(line: 278, column: 15, scope: !3480)
!3485 = !DILocation(line: 278, column: 75, scope: !3480)
!3486 = !DILocation(line: 278, column: 15, scope: !3481)
!3487 = !DILocation(line: 280, column: 25, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3480, file: !1054, line: 279, column: 13)
!3489 = !DILocation(line: 280, column: 32, scope: !3488)
!3490 = !DILocation(line: 280, column: 55, scope: !3488)
!3491 = !DILocation(line: 280, column: 15, scope: !3488)
!3492 = !DILocation(line: 281, column: 15, scope: !3488)
!3493 = !DILocation(line: 284, column: 20, scope: !3481)
!3494 = !DILocation(line: 285, column: 21, scope: !3481)
!3495 = !DILocation(line: 291, column: 23, scope: !3481)
!3496 = !DILocation(line: 292, column: 23, scope: !3481)
!3497 = !DILocation(line: 293, column: 20, scope: !3481)
!3498 = !DILocation(line: 293, column: 45, scope: !3481)
!3499 = !DILocation(line: 293, column: 34, scope: !3481)
!3500 = !DILocation(line: 293, column: 52, scope: !3481)
!3501 = !DILocation(line: 284, column: 11, scope: !3481)
!3502 = !DILocation(line: 296, column: 12, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3390, file: !1054, line: 296, column: 11)
!3504 = !DILocation(line: 296, column: 11, scope: !3390)
!3505 = !DILocation(line: 297, column: 9, scope: !3503)
!3506 = !DILocation(line: 298, column: 5, scope: !3390)
!3507 = !DILocation(line: 299, column: 3, scope: !3284)
!3508 = !DILocation(line: 300, column: 1, scope: !3284)
!3509 = distinct !DISubprogram(name: "excise", scope: !1054, file: !1054, line: 367, type: !3510, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1053, retainedNodes: !213)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{!103, !1067, !1160, !2828, !139}
!3512 = !DILocalVariable(name: "fts", arg: 1, scope: !3509, file: !1054, line: 367, type: !1067)
!3513 = !DILocation(line: 367, column: 14, scope: !3509)
!3514 = !DILocalVariable(name: "ent", arg: 2, scope: !3509, file: !1054, line: 367, type: !1160)
!3515 = !DILocation(line: 367, column: 27, scope: !3509)
!3516 = !DILocalVariable(name: "x", arg: 3, scope: !3509, file: !1054, line: 367, type: !2828)
!3517 = !DILocation(line: 367, column: 57, scope: !3509)
!3518 = !DILocalVariable(name: "is_dir", arg: 4, scope: !3509, file: !1054, line: 367, type: !139)
!3519 = !DILocation(line: 367, column: 65, scope: !3509)
!3520 = !DILocalVariable(name: "flag", scope: !3509, file: !1054, line: 369, type: !5)
!3521 = !DILocation(line: 369, column: 7, scope: !3509)
!3522 = !DILocation(line: 369, column: 14, scope: !3509)
!3523 = !DILocation(line: 370, column: 17, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3509, file: !1054, line: 370, column: 7)
!3525 = !DILocation(line: 370, column: 22, scope: !3524)
!3526 = !DILocation(line: 370, column: 34, scope: !3524)
!3527 = !DILocation(line: 370, column: 39, scope: !3524)
!3528 = !DILocation(line: 370, column: 52, scope: !3524)
!3529 = !DILocation(line: 370, column: 7, scope: !3524)
!3530 = !DILocation(line: 370, column: 58, scope: !3524)
!3531 = !DILocation(line: 370, column: 7, scope: !3509)
!3532 = !DILocation(line: 372, column: 11, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !1054, line: 372, column: 11)
!3534 = distinct !DILexicalBlock(scope: !3524, file: !1054, line: 371, column: 5)
!3535 = !DILocation(line: 372, column: 14, scope: !3533)
!3536 = !DILocation(line: 372, column: 11, scope: !3534)
!3537 = !DILocation(line: 374, column: 20, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3533, file: !1054, line: 373, column: 9)
!3539 = !DILocation(line: 375, column: 22, scope: !3538)
!3540 = !DILocation(line: 376, column: 22, scope: !3538)
!3541 = !DILocation(line: 376, column: 42, scope: !3538)
!3542 = !DILocation(line: 374, column: 11, scope: !3538)
!3543 = !DILocation(line: 377, column: 9, scope: !3538)
!3544 = !DILocation(line: 378, column: 7, scope: !3534)
!3545 = !DILocation(line: 385, column: 7, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3509, file: !1054, line: 385, column: 7)
!3547 = !DILocation(line: 385, column: 13, scope: !3546)
!3548 = !DILocation(line: 385, column: 7, scope: !3509)
!3549 = !DILocalVariable(name: "st", scope: !3550, file: !1054, line: 387, type: !1097)
!3550 = distinct !DILexicalBlock(scope: !3546, file: !1054, line: 386, column: 5)
!3551 = !DILocation(line: 387, column: 19, scope: !3550)
!3552 = !DILocation(line: 388, column: 24, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3550, file: !1054, line: 388, column: 12)
!3554 = !DILocation(line: 388, column: 29, scope: !3553)
!3555 = !DILocation(line: 388, column: 41, scope: !3553)
!3556 = !DILocation(line: 388, column: 46, scope: !3553)
!3557 = !DILocation(line: 388, column: 15, scope: !3553)
!3558 = !DILocation(line: 389, column: 24, scope: !3553)
!3559 = !DILocation(line: 389, column: 27, scope: !3553)
!3560 = !DILocation(line: 389, column: 33, scope: !3553)
!3561 = !DILocation(line: 388, column: 12, scope: !3550)
!3562 = !DILocation(line: 390, column: 9, scope: !3553)
!3563 = !DILocation(line: 390, column: 15, scope: !3553)
!3564 = !DILocation(line: 391, column: 5, scope: !3550)
!3565 = !DILocation(line: 393, column: 26, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3509, file: !1054, line: 393, column: 7)
!3567 = !DILocation(line: 393, column: 29, scope: !3566)
!3568 = !DILocation(line: 393, column: 7, scope: !3566)
!3569 = !DILocation(line: 393, column: 7, scope: !3509)
!3570 = !DILocation(line: 394, column: 5, scope: !3566)
!3571 = !DILocation(line: 401, column: 7, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3509, file: !1054, line: 401, column: 7)
!3573 = !DILocation(line: 401, column: 12, scope: !3572)
!3574 = !DILocation(line: 401, column: 21, scope: !3572)
!3575 = !DILocation(line: 402, column: 7, scope: !3572)
!3576 = !DILocation(line: 402, column: 11, scope: !3572)
!3577 = !DILocation(line: 402, column: 17, scope: !3572)
!3578 = !DILocation(line: 402, column: 30, scope: !3572)
!3579 = !DILocation(line: 402, column: 33, scope: !3572)
!3580 = !DILocation(line: 402, column: 39, scope: !3572)
!3581 = !DILocation(line: 402, column: 49, scope: !3572)
!3582 = !DILocation(line: 402, column: 52, scope: !3572)
!3583 = !DILocation(line: 402, column: 58, scope: !3572)
!3584 = !DILocation(line: 403, column: 11, scope: !3572)
!3585 = !DILocation(line: 403, column: 14, scope: !3572)
!3586 = !DILocation(line: 403, column: 20, scope: !3572)
!3587 = !DILocation(line: 404, column: 7, scope: !3572)
!3588 = !DILocation(line: 404, column: 11, scope: !3572)
!3589 = !DILocation(line: 404, column: 16, scope: !3572)
!3590 = !DILocation(line: 404, column: 26, scope: !3572)
!3591 = !DILocation(line: 404, column: 35, scope: !3572)
!3592 = !DILocation(line: 404, column: 38, scope: !3572)
!3593 = !DILocation(line: 404, column: 43, scope: !3572)
!3594 = !DILocation(line: 404, column: 53, scope: !3572)
!3595 = !DILocation(line: 401, column: 7, scope: !3509)
!3596 = !DILocation(line: 405, column: 13, scope: !3572)
!3597 = !DILocation(line: 405, column: 18, scope: !3572)
!3598 = !DILocation(line: 405, column: 5, scope: !3572)
!3599 = !DILocation(line: 405, column: 11, scope: !3572)
!3600 = !DILocation(line: 406, column: 13, scope: !3509)
!3601 = !DILocation(line: 406, column: 20, scope: !3509)
!3602 = !DILocation(line: 406, column: 43, scope: !3509)
!3603 = !DILocation(line: 406, column: 3, scope: !3509)
!3604 = !DILocation(line: 407, column: 23, scope: !3509)
!3605 = !DILocation(line: 407, column: 3, scope: !3509)
!3606 = !DILocation(line: 408, column: 3, scope: !3509)
!3607 = !DILocation(line: 409, column: 1, scope: !3509)
!3608 = distinct !DISubprogram(name: "ignorable_missing", scope: !1054, file: !1054, line: 334, type: !3609, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1053, retainedNodes: !213)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!139, !2828, !5}
!3611 = !DILocalVariable(name: "x", arg: 1, scope: !3608, file: !1054, line: 334, type: !2828)
!3612 = !DILocation(line: 334, column: 45, scope: !3608)
!3613 = !DILocalVariable(name: "errnum", arg: 2, scope: !3608, file: !1054, line: 334, type: !5)
!3614 = !DILocation(line: 334, column: 52, scope: !3608)
!3615 = !DILocation(line: 336, column: 10, scope: !3608)
!3616 = !DILocation(line: 336, column: 13, scope: !3608)
!3617 = !DILocation(line: 336, column: 34, scope: !3608)
!3618 = !DILocation(line: 336, column: 61, scope: !3608)
!3619 = !DILocation(line: 336, column: 37, scope: !3608)
!3620 = !DILocation(line: 0, scope: !3608)
!3621 = !DILocation(line: 336, column: 3, scope: !3608)
!3622 = distinct !DISubprogram(name: "nonexistent_file_errno", scope: !1054, file: !1054, line: 306, type: !3623, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1053, retainedNodes: !213)
!3623 = !DISubroutineType(types: !3624)
!3624 = !{!139, !5}
!3625 = !DILocalVariable(name: "errnum", arg: 1, scope: !3622, file: !1054, line: 306, type: !5)
!3626 = !DILocation(line: 306, column: 29, scope: !3622)
!3627 = !DILocation(line: 320, column: 11, scope: !3622)
!3628 = !DILocation(line: 320, column: 3, scope: !3622)
!3629 = !DILocation(line: 326, column: 7, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3622, file: !1054, line: 321, column: 5)
!3631 = !DILocation(line: 328, column: 7, scope: !3630)
!3632 = !DILocation(line: 330, column: 1, scope: !3622)
!3633 = distinct !DISubprogram(name: "cache_stat_init", scope: !1054, file: !1054, line: 85, type: !3634, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1053, retainedNodes: !213)
!3634 = !DISubroutineType(types: !3635)
!3635 = !{!1189, !1189}
!3636 = !DILocalVariable(name: "st", arg: 1, scope: !3633, file: !1054, line: 85, type: !1189)
!3637 = !DILocation(line: 85, column: 31, scope: !3633)
!3638 = !DILocation(line: 87, column: 3, scope: !3633)
!3639 = !DILocation(line: 87, column: 7, scope: !3633)
!3640 = !DILocation(line: 87, column: 15, scope: !3633)
!3641 = !DILocation(line: 88, column: 10, scope: !3633)
!3642 = !DILocation(line: 88, column: 3, scope: !3633)
!3643 = distinct !DISubprogram(name: "write_protected_non_symlink", scope: !1054, file: !1054, line: 96, type: !3644, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1053, retainedNodes: !213)
!3644 = !DISubroutineType(types: !3645)
!3645 = !{!5, !5, !113, !1189}
!3646 = !DILocalVariable(name: "fd_cwd", arg: 1, scope: !3643, file: !1054, line: 96, type: !5)
!3647 = !DILocation(line: 96, column: 34, scope: !3643)
!3648 = !DILocalVariable(name: "file", arg: 2, scope: !3643, file: !1054, line: 97, type: !113)
!3649 = !DILocation(line: 97, column: 42, scope: !3643)
!3650 = !DILocalVariable(name: "buf", arg: 3, scope: !3643, file: !1054, line: 98, type: !1189)
!3651 = !DILocation(line: 98, column: 43, scope: !3643)
!3652 = !DILocation(line: 100, column: 7, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3643, file: !1054, line: 100, column: 7)
!3654 = !DILocation(line: 100, column: 7, scope: !3643)
!3655 = !DILocation(line: 101, column: 5, scope: !3653)
!3656 = !DILocation(line: 102, column: 22, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3643, file: !1054, line: 102, column: 7)
!3658 = !DILocation(line: 102, column: 30, scope: !3657)
!3659 = !DILocation(line: 102, column: 36, scope: !3657)
!3660 = !DILocation(line: 102, column: 7, scope: !3657)
!3661 = !DILocation(line: 102, column: 62, scope: !3657)
!3662 = !DILocation(line: 102, column: 7, scope: !3643)
!3663 = !DILocation(line: 103, column: 5, scope: !3657)
!3664 = !DILocation(line: 104, column: 7, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3643, file: !1054, line: 104, column: 7)
!3666 = !DILocation(line: 104, column: 7, scope: !3643)
!3667 = !DILocation(line: 105, column: 5, scope: !3665)
!3668 = !DILocation(line: 155, column: 20, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !1054, line: 155, column: 9)
!3670 = distinct !DILexicalBlock(scope: !3643, file: !1054, line: 154, column: 3)
!3671 = !DILocation(line: 155, column: 28, scope: !3669)
!3672 = !DILocation(line: 155, column: 9, scope: !3669)
!3673 = !DILocation(line: 155, column: 52, scope: !3669)
!3674 = !DILocation(line: 155, column: 9, scope: !3670)
!3675 = !DILocation(line: 156, column: 7, scope: !3669)
!3676 = !DILocation(line: 158, column: 12, scope: !3670)
!3677 = !DILocation(line: 158, column: 18, scope: !3670)
!3678 = !DILocation(line: 158, column: 5, scope: !3670)
!3679 = !DILocation(line: 160, column: 1, scope: !3643)
!3680 = distinct !DISubprogram(name: "cache_fstatat", scope: !1054, file: !1054, line: 70, type: !3681, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1053, retainedNodes: !213)
!3681 = !DISubroutineType(types: !3682)
!3682 = !{!5, !5, !113, !1189, !5}
!3683 = !DILocalVariable(name: "fd", arg: 1, scope: !3680, file: !1054, line: 70, type: !5)
!3684 = !DILocation(line: 70, column: 20, scope: !3680)
!3685 = !DILocalVariable(name: "file", arg: 2, scope: !3680, file: !1054, line: 70, type: !113)
!3686 = !DILocation(line: 70, column: 36, scope: !3680)
!3687 = !DILocalVariable(name: "st", arg: 3, scope: !3680, file: !1054, line: 70, type: !1189)
!3688 = !DILocation(line: 70, column: 55, scope: !3680)
!3689 = !DILocalVariable(name: "flag", arg: 4, scope: !3680, file: !1054, line: 70, type: !5)
!3690 = !DILocation(line: 70, column: 63, scope: !3680)
!3691 = !DILocation(line: 72, column: 7, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3680, file: !1054, line: 72, column: 7)
!3693 = !DILocation(line: 72, column: 11, scope: !3692)
!3694 = !DILocation(line: 72, column: 19, scope: !3692)
!3695 = !DILocation(line: 72, column: 25, scope: !3692)
!3696 = !DILocation(line: 72, column: 37, scope: !3692)
!3697 = !DILocation(line: 72, column: 41, scope: !3692)
!3698 = !DILocation(line: 72, column: 47, scope: !3692)
!3699 = !DILocation(line: 72, column: 51, scope: !3692)
!3700 = !DILocation(line: 72, column: 28, scope: !3692)
!3701 = !DILocation(line: 72, column: 57, scope: !3692)
!3702 = !DILocation(line: 72, column: 7, scope: !3680)
!3703 = !DILocation(line: 74, column: 7, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3692, file: !1054, line: 73, column: 5)
!3705 = !DILocation(line: 74, column: 11, scope: !3704)
!3706 = !DILocation(line: 74, column: 19, scope: !3704)
!3707 = !DILocation(line: 75, column: 20, scope: !3704)
!3708 = !DILocation(line: 75, column: 7, scope: !3704)
!3709 = !DILocation(line: 75, column: 11, scope: !3704)
!3710 = !DILocation(line: 75, column: 18, scope: !3704)
!3711 = !DILocation(line: 76, column: 5, scope: !3704)
!3712 = !DILocation(line: 77, column: 12, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3680, file: !1054, line: 77, column: 7)
!3714 = !DILocation(line: 77, column: 16, scope: !3713)
!3715 = !DILocation(line: 77, column: 9, scope: !3713)
!3716 = !DILocation(line: 77, column: 7, scope: !3680)
!3717 = !DILocation(line: 78, column: 5, scope: !3713)
!3718 = !DILocation(line: 79, column: 17, scope: !3680)
!3719 = !DILocation(line: 79, column: 21, scope: !3680)
!3720 = !DILocation(line: 79, column: 11, scope: !3680)
!3721 = !DILocation(line: 79, column: 3, scope: !3680)
!3722 = !DILocation(line: 79, column: 9, scope: !3680)
!3723 = !DILocation(line: 80, column: 3, scope: !3680)
!3724 = !DILocation(line: 81, column: 1, scope: !3680)
!3725 = distinct !DISubprogram(name: "readdir_ignoring_dot_and_dotdot", scope: !209, file: !209, line: 278, type: !3726, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1053, retainedNodes: !213)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!1178, !530}
!3728 = !DILocalVariable(name: "dirp", arg: 1, scope: !3725, file: !209, line: 278, type: !530)
!3729 = !DILocation(line: 278, column: 39, scope: !3725)
!3730 = !DILocation(line: 280, column: 3, scope: !3725)
!3731 = !DILocalVariable(name: "dp", scope: !3732, file: !209, line: 282, type: !1178)
!3732 = distinct !DILexicalBlock(scope: !3725, file: !209, line: 281, column: 5)
!3733 = !DILocation(line: 282, column: 28, scope: !3732)
!3734 = !DILocation(line: 282, column: 42, scope: !3732)
!3735 = !DILocation(line: 282, column: 33, scope: !3732)
!3736 = !DILocation(line: 283, column: 11, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3732, file: !209, line: 283, column: 11)
!3738 = !DILocation(line: 283, column: 14, scope: !3737)
!3739 = !DILocation(line: 283, column: 22, scope: !3737)
!3740 = !DILocation(line: 283, column: 42, scope: !3737)
!3741 = !DILocation(line: 283, column: 46, scope: !3737)
!3742 = !DILocation(line: 283, column: 27, scope: !3737)
!3743 = !DILocation(line: 283, column: 11, scope: !3732)
!3744 = !DILocation(line: 284, column: 16, scope: !3737)
!3745 = !DILocation(line: 284, column: 9, scope: !3737)
!3746 = distinct !{!3746, !3730, !3747}
!3747 = !DILocation(line: 285, column: 5, scope: !3725)
!3748 = distinct !DISubprogram(name: "set_process_security_ctx", scope: !289, file: !289, line: 929, type: !3749, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !213)
!3749 = !DISubroutineType(types: !3750)
!3750 = !{!139, !113, !113, !236, !139, !3751}
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3753)
!3753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !74, line: 98, size: 640, elements: !3754)
!3754 = !{!3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !3753, file: !74, line: 100, baseType: !65, size: 32)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !3753, file: !74, line: 103, baseType: !73, size: 32, offset: 32)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !3753, file: !74, line: 108, baseType: !80, size: 32, offset: 64)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !3753, file: !74, line: 111, baseType: !86, size: 32, offset: 96)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3753, file: !74, line: 115, baseType: !236, size: 32, offset: 128)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !3753, file: !74, line: 119, baseType: !139, size: 8, offset: 160)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !3753, file: !74, line: 123, baseType: !139, size: 8, offset: 168)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !3753, file: !74, line: 130, baseType: !139, size: 8, offset: 176)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !3753, file: !74, line: 134, baseType: !139, size: 8, offset: 184)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !3753, file: !74, line: 138, baseType: !139, size: 8, offset: 192)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !3753, file: !74, line: 141, baseType: !139, size: 8, offset: 200)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !3753, file: !74, line: 145, baseType: !139, size: 8, offset: 208)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !3753, file: !74, line: 152, baseType: !139, size: 8, offset: 216)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !3753, file: !74, line: 156, baseType: !139, size: 8, offset: 224)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !3753, file: !74, line: 160, baseType: !139, size: 8, offset: 232)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !3753, file: !74, line: 161, baseType: !139, size: 8, offset: 240)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !3753, file: !74, line: 162, baseType: !139, size: 8, offset: 248)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !3753, file: !74, line: 163, baseType: !139, size: 8, offset: 256)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !3753, file: !74, line: 166, baseType: !139, size: 8, offset: 264)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !3753, file: !74, line: 178, baseType: !139, size: 8, offset: 272)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !3753, file: !74, line: 182, baseType: !139, size: 8, offset: 280)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !3753, file: !74, line: 188, baseType: !139, size: 8, offset: 288)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !3753, file: !74, line: 192, baseType: !139, size: 8, offset: 296)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !3753, file: !74, line: 201, baseType: !139, size: 8, offset: 304)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !3753, file: !74, line: 205, baseType: !139, size: 8, offset: 312)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !3753, file: !74, line: 214, baseType: !139, size: 8, offset: 320)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !3753, file: !74, line: 223, baseType: !139, size: 8, offset: 328)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !3753, file: !74, line: 227, baseType: !139, size: 8, offset: 336)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !3753, file: !74, line: 231, baseType: !139, size: 8, offset: 344)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !3753, file: !74, line: 235, baseType: !139, size: 8, offset: 352)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !3753, file: !74, line: 239, baseType: !139, size: 8, offset: 360)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !3753, file: !74, line: 242, baseType: !139, size: 8, offset: 368)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !3753, file: !74, line: 245, baseType: !139, size: 8, offset: 376)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !3753, file: !74, line: 250, baseType: !139, size: 8, offset: 384)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !3753, file: !74, line: 254, baseType: !139, size: 8, offset: 392)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !3753, file: !74, line: 259, baseType: !5, size: 32, offset: 416)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !3753, file: !74, line: 262, baseType: !92, size: 32, offset: 448)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !3753, file: !74, line: 273, baseType: !238, size: 64, offset: 512)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !3753, file: !74, line: 276, baseType: !238, size: 64, offset: 576)
!3794 = !DILocalVariable(name: "src_name", arg: 1, scope: !3748, file: !289, line: 929, type: !113)
!3795 = !DILocation(line: 929, column: 39, scope: !3748)
!3796 = !DILocalVariable(name: "dst_name", arg: 2, scope: !3748, file: !289, line: 929, type: !113)
!3797 = !DILocation(line: 929, column: 61, scope: !3748)
!3798 = !DILocalVariable(name: "mode", arg: 3, scope: !3748, file: !289, line: 930, type: !236)
!3799 = !DILocation(line: 930, column: 34, scope: !3748)
!3800 = !DILocalVariable(name: "new_dst", arg: 4, scope: !3748, file: !289, line: 930, type: !139)
!3801 = !DILocation(line: 930, column: 45, scope: !3748)
!3802 = !DILocalVariable(name: "x", arg: 5, scope: !3748, file: !289, line: 930, type: !3751)
!3803 = !DILocation(line: 930, column: 79, scope: !3748)
!3804 = !DILocation(line: 932, column: 7, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3748, file: !289, line: 932, column: 7)
!3806 = !DILocation(line: 932, column: 10, scope: !3805)
!3807 = !DILocation(line: 932, column: 7, scope: !3748)
!3808 = !DILocalVariable(name: "all_errors", scope: !3809, file: !289, line: 935, type: !139)
!3809 = distinct !DILexicalBlock(scope: !3805, file: !289, line: 933, column: 5)
!3810 = !DILocation(line: 935, column: 12, scope: !3809)
!3811 = !DILocation(line: 935, column: 26, scope: !3809)
!3812 = !DILocation(line: 935, column: 29, scope: !3809)
!3813 = !DILocation(line: 935, column: 48, scope: !3809)
!3814 = !DILocation(line: 935, column: 51, scope: !3809)
!3815 = !DILocation(line: 935, column: 54, scope: !3809)
!3816 = !DILocalVariable(name: "some_errors", scope: !3809, file: !289, line: 936, type: !139)
!3817 = !DILocation(line: 936, column: 12, scope: !3809)
!3818 = !DILocation(line: 936, column: 27, scope: !3809)
!3819 = !DILocation(line: 936, column: 38, scope: !3809)
!3820 = !DILocation(line: 936, column: 42, scope: !3809)
!3821 = !DILocation(line: 936, column: 45, scope: !3809)
!3822 = !DILocation(line: 936, column: 41, scope: !3809)
!3823 = !DILocation(line: 0, scope: !3809)
!3824 = !DILocalVariable(name: "con", scope: !3809, file: !289, line: 937, type: !7)
!3825 = !DILocation(line: 937, column: 13, scope: !3809)
!3826 = !DILocation(line: 939, column: 29, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3809, file: !289, line: 939, column: 11)
!3828 = !DILocation(line: 939, column: 16, scope: !3827)
!3829 = !DILocation(line: 939, column: 13, scope: !3827)
!3830 = !DILocation(line: 939, column: 11, scope: !3809)
!3831 = !DILocation(line: 941, column: 31, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !289, line: 941, column: 15)
!3833 = distinct !DILexicalBlock(scope: !3827, file: !289, line: 940, column: 9)
!3834 = !DILocation(line: 941, column: 15, scope: !3832)
!3835 = !DILocation(line: 941, column: 36, scope: !3832)
!3836 = !DILocation(line: 941, column: 15, scope: !3833)
!3837 = !DILocation(line: 943, column: 19, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !289, line: 943, column: 19)
!3839 = distinct !DILexicalBlock(scope: !3832, file: !289, line: 942, column: 13)
!3840 = !DILocation(line: 943, column: 30, scope: !3838)
!3841 = !DILocation(line: 943, column: 34, scope: !3838)
!3842 = !DILocation(line: 943, column: 46, scope: !3838)
!3843 = !DILocation(line: 943, column: 69, scope: !3838)
!3844 = !DILocation(line: 943, column: 50, scope: !3838)
!3845 = !DILocation(line: 943, column: 19, scope: !3839)
!3846 = !DILocation(line: 944, column: 27, scope: !3838)
!3847 = !DILocation(line: 945, column: 24, scope: !3838)
!3848 = !DILocation(line: 946, column: 31, scope: !3838)
!3849 = !DILocation(line: 946, column: 24, scope: !3838)
!3850 = !DILocation(line: 944, column: 17, scope: !3838)
!3851 = !DILocation(line: 947, column: 19, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3839, file: !289, line: 947, column: 19)
!3853 = !DILocation(line: 947, column: 22, scope: !3852)
!3854 = !DILocation(line: 947, column: 19, scope: !3839)
!3855 = !DILocation(line: 949, column: 28, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3852, file: !289, line: 948, column: 17)
!3857 = !DILocation(line: 949, column: 19, scope: !3856)
!3858 = !DILocation(line: 950, column: 19, scope: !3856)
!3859 = !DILocation(line: 952, column: 13, scope: !3839)
!3860 = !DILocation(line: 953, column: 20, scope: !3833)
!3861 = !DILocation(line: 953, column: 11, scope: !3833)
!3862 = !DILocation(line: 954, column: 9, scope: !3833)
!3863 = !DILocation(line: 957, column: 15, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !289, line: 957, column: 15)
!3865 = distinct !DILexicalBlock(scope: !3827, file: !289, line: 956, column: 9)
!3866 = !DILocation(line: 957, column: 26, scope: !3864)
!3867 = !DILocation(line: 957, column: 30, scope: !3864)
!3868 = !DILocation(line: 957, column: 42, scope: !3864)
!3869 = !DILocation(line: 957, column: 65, scope: !3864)
!3870 = !DILocation(line: 957, column: 46, scope: !3864)
!3871 = !DILocation(line: 957, column: 15, scope: !3865)
!3872 = !DILocation(line: 959, column: 25, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3864, file: !289, line: 958, column: 13)
!3874 = !DILocation(line: 960, column: 22, scope: !3873)
!3875 = !DILocation(line: 961, column: 22, scope: !3873)
!3876 = !DILocation(line: 959, column: 15, scope: !3873)
!3877 = !DILocation(line: 962, column: 13, scope: !3873)
!3878 = !DILocation(line: 963, column: 15, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3865, file: !289, line: 963, column: 15)
!3880 = !DILocation(line: 963, column: 18, scope: !3879)
!3881 = !DILocation(line: 963, column: 15, scope: !3865)
!3882 = !DILocation(line: 964, column: 13, scope: !3879)
!3883 = !DILocation(line: 966, column: 5, scope: !3809)
!3884 = !DILocation(line: 967, column: 12, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3805, file: !289, line: 967, column: 12)
!3886 = !DILocation(line: 967, column: 15, scope: !3885)
!3887 = !DILocation(line: 967, column: 12, scope: !3805)
!3888 = !DILocation(line: 971, column: 11, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3890, file: !289, line: 971, column: 11)
!3890 = distinct !DILexicalBlock(scope: !3885, file: !289, line: 968, column: 5)
!3891 = !DILocation(line: 971, column: 19, scope: !3889)
!3892 = !DILocation(line: 971, column: 34, scope: !3889)
!3893 = !DILocation(line: 971, column: 44, scope: !3889)
!3894 = !DILocation(line: 971, column: 22, scope: !3889)
!3895 = !DILocation(line: 971, column: 50, scope: !3889)
!3896 = !DILocation(line: 972, column: 11, scope: !3889)
!3897 = !DILocation(line: 972, column: 35, scope: !3889)
!3898 = !DILocation(line: 972, column: 16, scope: !3889)
!3899 = !DILocation(line: 971, column: 11, scope: !3890)
!3900 = !DILocation(line: 974, column: 21, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3889, file: !289, line: 973, column: 9)
!3902 = !DILocation(line: 975, column: 18, scope: !3901)
!3903 = !DILocation(line: 976, column: 18, scope: !3901)
!3904 = !DILocation(line: 974, column: 11, scope: !3901)
!3905 = !DILocation(line: 977, column: 9, scope: !3901)
!3906 = !DILocation(line: 978, column: 5, scope: !3890)
!3907 = !DILocation(line: 980, column: 3, scope: !3748)
!3908 = !DILocation(line: 981, column: 1, scope: !3748)
!3909 = distinct !DISubprogram(name: "errno_unsupported", scope: !289, file: !289, line: 632, type: !3623, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!3910 = !DILocalVariable(name: "err", arg: 1, scope: !3909, file: !289, line: 632, type: !5)
!3911 = !DILocation(line: 632, column: 24, scope: !3909)
!3912 = !DILocation(line: 634, column: 10, scope: !3909)
!3913 = !DILocation(line: 634, column: 14, scope: !3909)
!3914 = !DILocation(line: 634, column: 25, scope: !3909)
!3915 = !DILocation(line: 634, column: 28, scope: !3909)
!3916 = !DILocation(line: 634, column: 32, scope: !3909)
!3917 = !DILocation(line: 634, column: 3, scope: !3909)
!3918 = distinct !DISubprogram(name: "defaultcon", scope: !3919, file: !3919, line: 44, type: !3920, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!3919 = !DIFile(filename: "src/selinux.h", directory: "/home/mohamad/clone/coreutils")
!3920 = !DISubroutineType(types: !3921)
!3921 = !{!5, !113, !236}
!3922 = !DILocalVariable(name: "path", arg: 1, scope: !3918, file: !3919, line: 44, type: !113)
!3923 = !DILocation(line: 44, column: 25, scope: !3918)
!3924 = !DILocalVariable(name: "mode", arg: 2, scope: !3918, file: !3919, line: 44, type: !236)
!3925 = !DILocation(line: 44, column: 38, scope: !3918)
!3926 = !DILocation(line: 45, column: 3, scope: !3918)
!3927 = !DILocation(line: 45, column: 9, scope: !3918)
!3928 = !DILocation(line: 45, column: 20, scope: !3918)
!3929 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !3919, file: !3919, line: 25, type: !3623, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!3930 = !DILocalVariable(name: "err", arg: 1, scope: !3929, file: !3919, line: 25, type: !5)
!3931 = !DILocation(line: 25, column: 24, scope: !3929)
!3932 = !DILocation(line: 27, column: 10, scope: !3929)
!3933 = !DILocation(line: 27, column: 14, scope: !3929)
!3934 = !DILocation(line: 27, column: 25, scope: !3929)
!3935 = !DILocation(line: 27, column: 28, scope: !3929)
!3936 = !DILocation(line: 27, column: 32, scope: !3929)
!3937 = !DILocation(line: 27, column: 3, scope: !3929)
!3938 = distinct !DISubprogram(name: "set_file_security_ctx", scope: !289, file: !289, line: 991, type: !3939, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !213)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{!139, !113, !139, !139, !3751}
!3941 = !DILocalVariable(name: "dst_name", arg: 1, scope: !3938, file: !289, line: 991, type: !113)
!3942 = !DILocation(line: 991, column: 36, scope: !3938)
!3943 = !DILocalVariable(name: "process_local", arg: 2, scope: !3938, file: !289, line: 991, type: !139)
!3944 = !DILocation(line: 991, column: 51, scope: !3938)
!3945 = !DILocalVariable(name: "recurse", arg: 3, scope: !3938, file: !289, line: 992, type: !139)
!3946 = !DILocation(line: 992, column: 29, scope: !3938)
!3947 = !DILocalVariable(name: "x", arg: 4, scope: !3938, file: !289, line: 992, type: !3751)
!3948 = !DILocation(line: 992, column: 63, scope: !3938)
!3949 = !DILocalVariable(name: "all_errors", scope: !3938, file: !289, line: 994, type: !139)
!3950 = !DILocation(line: 994, column: 8, scope: !3938)
!3951 = !DILocation(line: 994, column: 23, scope: !3938)
!3952 = !DILocation(line: 994, column: 26, scope: !3938)
!3953 = !DILocation(line: 995, column: 22, scope: !3938)
!3954 = !DILocation(line: 995, column: 25, scope: !3938)
!3955 = !DILocation(line: 995, column: 28, scope: !3938)
!3956 = !DILocalVariable(name: "some_errors", scope: !3938, file: !289, line: 996, type: !139)
!3957 = !DILocation(line: 996, column: 8, scope: !3938)
!3958 = !DILocation(line: 996, column: 23, scope: !3938)
!3959 = !DILocation(line: 996, column: 34, scope: !3938)
!3960 = !DILocation(line: 996, column: 38, scope: !3938)
!3961 = !DILocation(line: 996, column: 41, scope: !3938)
!3962 = !DILocation(line: 996, column: 37, scope: !3938)
!3963 = !DILocation(line: 0, scope: !3938)
!3964 = !DILocation(line: 998, column: 21, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3938, file: !289, line: 998, column: 7)
!3966 = !DILocation(line: 998, column: 31, scope: !3965)
!3967 = !DILocation(line: 998, column: 40, scope: !3965)
!3968 = !DILocation(line: 998, column: 9, scope: !3965)
!3969 = !DILocation(line: 998, column: 7, scope: !3938)
!3970 = !DILocation(line: 1000, column: 11, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !289, line: 1000, column: 11)
!3972 = distinct !DILexicalBlock(scope: !3965, file: !289, line: 999, column: 5)
!3973 = !DILocation(line: 1000, column: 22, scope: !3971)
!3974 = !DILocation(line: 1000, column: 26, scope: !3971)
!3975 = !DILocation(line: 1000, column: 38, scope: !3971)
!3976 = !DILocation(line: 1000, column: 61, scope: !3971)
!3977 = !DILocation(line: 1000, column: 42, scope: !3971)
!3978 = !DILocation(line: 1000, column: 11, scope: !3972)
!3979 = !DILocation(line: 1001, column: 19, scope: !3971)
!3980 = !DILocation(line: 1001, column: 26, scope: !3971)
!3981 = !DILocation(line: 1002, column: 16, scope: !3971)
!3982 = !DILocation(line: 1001, column: 9, scope: !3971)
!3983 = !DILocation(line: 1003, column: 7, scope: !3972)
!3984 = !DILocation(line: 1006, column: 3, scope: !3938)
!3985 = !DILocation(line: 1007, column: 1, scope: !3938)
!3986 = distinct !DISubprogram(name: "restorecon", scope: !3919, file: !3919, line: 40, type: !3987, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!3987 = !DISubroutineType(types: !3988)
!3988 = !{!139, !113, !139, !139}
!3989 = !DILocalVariable(name: "path", arg: 1, scope: !3986, file: !3919, line: 40, type: !113)
!3990 = !DILocation(line: 40, column: 25, scope: !3986)
!3991 = !DILocalVariable(name: "recurse", arg: 2, scope: !3986, file: !3919, line: 40, type: !139)
!3992 = !DILocation(line: 40, column: 36, scope: !3986)
!3993 = !DILocalVariable(name: "preserve", arg: 3, scope: !3986, file: !3919, line: 40, type: !139)
!3994 = !DILocation(line: 40, column: 50, scope: !3986)
!3995 = !DILocation(line: 41, column: 3, scope: !3986)
!3996 = !DILocation(line: 41, column: 9, scope: !3986)
!3997 = !DILocation(line: 41, column: 20, scope: !3986)
!3998 = distinct !DISubprogram(name: "dest_info_init", scope: !289, file: !289, line: 1739, type: !3999, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !213)
!3999 = !DISubroutineType(types: !4000)
!4000 = !{null, !4001}
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3753, size: 64)
!4002 = !DILocalVariable(name: "x", arg: 1, scope: !3998, file: !289, line: 1739, type: !4001)
!4003 = !DILocation(line: 1739, column: 36, scope: !3998)
!4004 = !DILocation(line: 1742, column: 7, scope: !3998)
!4005 = !DILocation(line: 1741, column: 3, scope: !3998)
!4006 = !DILocation(line: 1741, column: 6, scope: !3998)
!4007 = !DILocation(line: 1742, column: 5, scope: !3998)
!4008 = !DILocation(line: 1747, column: 1, scope: !3998)
!4009 = distinct !DISubprogram(name: "src_info_init", scope: !289, file: !289, line: 1752, type: !3999, scopeLine: 1753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !213)
!4010 = !DILocalVariable(name: "x", arg: 1, scope: !4009, file: !289, line: 1752, type: !4001)
!4011 = !DILocation(line: 1752, column: 35, scope: !4009)
!4012 = !DILocation(line: 1764, column: 7, scope: !4009)
!4013 = !DILocation(line: 1763, column: 3, scope: !4009)
!4014 = !DILocation(line: 1763, column: 6, scope: !4009)
!4015 = !DILocation(line: 1764, column: 5, scope: !4009)
!4016 = !DILocation(line: 1769, column: 1, scope: !4009)
!4017 = distinct !DISubprogram(name: "copy", scope: !289, file: !289, line: 3009, type: !4018, scopeLine: 3012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !213)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!139, !113, !113, !139, !3751, !4020, !4020}
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!4021 = !DILocalVariable(name: "src_name", arg: 1, scope: !4017, file: !289, line: 3009, type: !113)
!4022 = !DILocation(line: 3009, column: 19, scope: !4017)
!4023 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4017, file: !289, line: 3009, type: !113)
!4024 = !DILocation(line: 3009, column: 41, scope: !4017)
!4025 = !DILocalVariable(name: "nonexistent_dst", arg: 3, scope: !4017, file: !289, line: 3010, type: !139)
!4026 = !DILocation(line: 3010, column: 12, scope: !4017)
!4027 = !DILocalVariable(name: "options", arg: 4, scope: !4017, file: !289, line: 3010, type: !3751)
!4028 = !DILocation(line: 3010, column: 54, scope: !4017)
!4029 = !DILocalVariable(name: "copy_into_self", arg: 5, scope: !4017, file: !289, line: 3011, type: !4020)
!4030 = !DILocation(line: 3011, column: 13, scope: !4017)
!4031 = !DILocalVariable(name: "rename_succeeded", arg: 6, scope: !4017, file: !289, line: 3011, type: !4020)
!4032 = !DILocation(line: 3011, column: 35, scope: !4017)
!4033 = !DILocation(line: 3013, column: 3, scope: !4017)
!4034 = !DILocation(line: 3022, column: 24, scope: !4017)
!4035 = !DILocation(line: 3022, column: 22, scope: !4017)
!4036 = !DILocation(line: 3023, column: 24, scope: !4017)
!4037 = !DILocation(line: 3023, column: 22, scope: !4017)
!4038 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", scope: !4017, file: !289, line: 3025, type: !139)
!4039 = !DILocation(line: 3025, column: 8, scope: !4017)
!4040 = !DILocation(line: 3026, column: 25, scope: !4017)
!4041 = !DILocation(line: 3026, column: 35, scope: !4017)
!4042 = !DILocation(line: 3026, column: 45, scope: !4017)
!4043 = !DILocation(line: 3027, column: 25, scope: !4017)
!4044 = !DILocation(line: 3029, column: 25, scope: !4017)
!4045 = !DILocation(line: 3029, column: 41, scope: !4017)
!4046 = !DILocation(line: 3026, column: 10, scope: !4017)
!4047 = !DILocation(line: 3026, column: 3, scope: !4017)
!4048 = distinct !DISubprogram(name: "valid_options", scope: !289, file: !289, line: 2986, type: !4049, scopeLine: 2987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{!139, !3751}
!4051 = !DILocalVariable(name: "co", arg: 1, scope: !4048, file: !289, line: 2986, type: !3751)
!4052 = !DILocation(line: 2986, column: 41, scope: !4048)
!4053 = !DILocation(line: 2988, column: 3, scope: !4048)
!4054 = !DILocation(line: 2989, column: 3, scope: !4048)
!4055 = !DILocation(line: 2990, column: 3, scope: !4048)
!4056 = !DILocation(line: 2991, column: 3, scope: !4048)
!4057 = !DILocation(line: 2992, column: 3, scope: !4048)
!4058 = !DILocation(line: 2993, column: 3, scope: !4048)
!4059 = !DILocation(line: 2996, column: 3, scope: !4048)
!4060 = distinct !DISubprogram(name: "copy_internal", scope: !289, file: !289, line: 1882, type: !4061, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!139, !113, !113, !139, !388, !372, !3751, !139, !4020, !4020, !4020}
!4063 = !DILocalVariable(name: "src_name", arg: 1, scope: !4060, file: !289, line: 1882, type: !113)
!4064 = !DILocation(line: 1882, column: 28, scope: !4060)
!4065 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4060, file: !289, line: 1882, type: !113)
!4066 = !DILocation(line: 1882, column: 50, scope: !4060)
!4067 = !DILocalVariable(name: "new_dst", arg: 3, scope: !4060, file: !289, line: 1883, type: !139)
!4068 = !DILocation(line: 1883, column: 21, scope: !4060)
!4069 = !DILocalVariable(name: "parent", arg: 4, scope: !4060, file: !289, line: 1884, type: !388)
!4070 = !DILocation(line: 1884, column: 35, scope: !4060)
!4071 = !DILocalVariable(name: "ancestors", arg: 5, scope: !4060, file: !289, line: 1885, type: !372)
!4072 = !DILocation(line: 1885, column: 33, scope: !4060)
!4073 = !DILocalVariable(name: "x", arg: 6, scope: !4060, file: !289, line: 1886, type: !3751)
!4074 = !DILocation(line: 1886, column: 41, scope: !4060)
!4075 = !DILocalVariable(name: "command_line_arg", arg: 7, scope: !4060, file: !289, line: 1887, type: !139)
!4076 = !DILocation(line: 1887, column: 21, scope: !4060)
!4077 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 8, scope: !4060, file: !289, line: 1888, type: !4020)
!4078 = !DILocation(line: 1888, column: 22, scope: !4060)
!4079 = !DILocalVariable(name: "copy_into_self", arg: 9, scope: !4060, file: !289, line: 1889, type: !4020)
!4080 = !DILocation(line: 1889, column: 22, scope: !4060)
!4081 = !DILocalVariable(name: "rename_succeeded", arg: 10, scope: !4060, file: !289, line: 1890, type: !4020)
!4082 = !DILocation(line: 1890, column: 22, scope: !4060)
!4083 = !DILocalVariable(name: "src_sb", scope: !4060, file: !289, line: 1892, type: !335)
!4084 = !DILocation(line: 1892, column: 15, scope: !4060)
!4085 = !DILocalVariable(name: "dst_sb", scope: !4060, file: !289, line: 1893, type: !335)
!4086 = !DILocation(line: 1893, column: 15, scope: !4060)
!4087 = !DILocalVariable(name: "src_mode", scope: !4060, file: !289, line: 1894, type: !236)
!4088 = !DILocation(line: 1894, column: 10, scope: !4060)
!4089 = !DILocalVariable(name: "dst_mode", scope: !4060, file: !289, line: 1895, type: !236)
!4090 = !DILocation(line: 1895, column: 10, scope: !4060)
!4091 = !DILocalVariable(name: "dst_mode_bits", scope: !4060, file: !289, line: 1896, type: !236)
!4092 = !DILocation(line: 1896, column: 10, scope: !4060)
!4093 = !DILocalVariable(name: "omitted_permissions", scope: !4060, file: !289, line: 1897, type: !236)
!4094 = !DILocation(line: 1897, column: 10, scope: !4060)
!4095 = !DILocalVariable(name: "restore_dst_mode", scope: !4060, file: !289, line: 1898, type: !139)
!4096 = !DILocation(line: 1898, column: 8, scope: !4060)
!4097 = !DILocalVariable(name: "earlier_file", scope: !4060, file: !289, line: 1899, type: !7)
!4098 = !DILocation(line: 1899, column: 9, scope: !4060)
!4099 = !DILocalVariable(name: "dst_backup", scope: !4060, file: !289, line: 1900, type: !7)
!4100 = !DILocation(line: 1900, column: 9, scope: !4060)
!4101 = !DILocalVariable(name: "delayed_ok", scope: !4060, file: !289, line: 1901, type: !139)
!4102 = !DILocation(line: 1901, column: 8, scope: !4060)
!4103 = !DILocalVariable(name: "copied_as_regular", scope: !4060, file: !289, line: 1902, type: !139)
!4104 = !DILocation(line: 1902, column: 8, scope: !4060)
!4105 = !DILocalVariable(name: "dest_is_symlink", scope: !4060, file: !289, line: 1903, type: !139)
!4106 = !DILocation(line: 1903, column: 8, scope: !4060)
!4107 = !DILocalVariable(name: "have_dst_lstat", scope: !4060, file: !289, line: 1904, type: !139)
!4108 = !DILocation(line: 1904, column: 8, scope: !4060)
!4109 = !DILocation(line: 1906, column: 4, scope: !4060)
!4110 = !DILocation(line: 1906, column: 19, scope: !4060)
!4111 = !DILocalVariable(name: "rename_errno", scope: !4060, file: !289, line: 1908, type: !5)
!4112 = !DILocation(line: 1908, column: 7, scope: !4060)
!4113 = !DILocation(line: 1908, column: 22, scope: !4060)
!4114 = !DILocation(line: 1908, column: 25, scope: !4060)
!4115 = !DILocation(line: 1909, column: 7, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 1909, column: 7)
!4117 = !DILocation(line: 1909, column: 10, scope: !4116)
!4118 = !DILocation(line: 1909, column: 7, scope: !4060)
!4119 = !DILocation(line: 1911, column: 11, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4121, file: !289, line: 1911, column: 11)
!4121 = distinct !DILexicalBlock(scope: !4116, file: !289, line: 1910, column: 5)
!4122 = !DILocation(line: 1911, column: 24, scope: !4120)
!4123 = !DILocation(line: 1911, column: 11, scope: !4121)
!4124 = !DILocation(line: 1912, column: 46, scope: !4120)
!4125 = !DILocation(line: 1912, column: 66, scope: !4120)
!4126 = !DILocation(line: 1912, column: 25, scope: !4120)
!4127 = !DILocation(line: 1914, column: 27, scope: !4120)
!4128 = !DILocation(line: 1912, column: 22, scope: !4120)
!4129 = !DILocation(line: 1912, column: 9, scope: !4120)
!4130 = !DILocation(line: 1915, column: 17, scope: !4121)
!4131 = !DILocation(line: 1915, column: 30, scope: !4121)
!4132 = !DILocation(line: 1915, column: 15, scope: !4121)
!4133 = !DILocation(line: 1916, column: 11, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4121, file: !289, line: 1916, column: 11)
!4135 = !DILocation(line: 1916, column: 11, scope: !4121)
!4136 = !DILocation(line: 1917, column: 29, scope: !4134)
!4137 = !DILocation(line: 1917, column: 10, scope: !4134)
!4138 = !DILocation(line: 1917, column: 27, scope: !4134)
!4139 = !DILocation(line: 1917, column: 9, scope: !4134)
!4140 = !DILocation(line: 1918, column: 5, scope: !4121)
!4141 = !DILocation(line: 1920, column: 7, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 1920, column: 7)
!4143 = !DILocation(line: 1920, column: 20, scope: !4142)
!4144 = !DILocation(line: 1920, column: 7, scope: !4060)
!4145 = !DILocation(line: 1921, column: 10, scope: !4142)
!4146 = !DILocation(line: 1921, column: 13, scope: !4142)
!4147 = !DILocation(line: 1922, column: 9, scope: !4142)
!4148 = !DILocation(line: 1922, column: 22, scope: !4142)
!4149 = !DILocation(line: 1922, column: 32, scope: !4142)
!4150 = !DILocation(line: 1922, column: 35, scope: !4142)
!4151 = !DILocation(line: 1922, column: 38, scope: !4142)
!4152 = !DILocation(line: 1922, column: 50, scope: !4142)
!4153 = !DILocalVariable(name: "name", scope: !4154, file: !289, line: 1924, type: !113)
!4154 = distinct !DILexicalBlock(scope: !4142, file: !289, line: 1923, column: 5)
!4155 = !DILocation(line: 1924, column: 19, scope: !4154)
!4156 = !DILocation(line: 1924, column: 26, scope: !4154)
!4157 = !DILocation(line: 1924, column: 39, scope: !4154)
!4158 = !DILocation(line: 1924, column: 46, scope: !4154)
!4159 = !DILocation(line: 1924, column: 57, scope: !4154)
!4160 = !DILocalVariable(name: "fstatat_flags", scope: !4154, file: !289, line: 1925, type: !5)
!4161 = !DILocation(line: 1925, column: 11, scope: !4154)
!4162 = !DILocation(line: 1926, column: 11, scope: !4154)
!4163 = !DILocation(line: 1926, column: 14, scope: !4154)
!4164 = !DILocation(line: 1926, column: 26, scope: !4154)
!4165 = !DILocation(line: 1927, column: 37, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4154, file: !289, line: 1927, column: 11)
!4167 = !DILocation(line: 1927, column: 52, scope: !4166)
!4168 = !DILocation(line: 1927, column: 11, scope: !4166)
!4169 = !DILocation(line: 1927, column: 67, scope: !4166)
!4170 = !DILocation(line: 1927, column: 11, scope: !4154)
!4171 = !DILocation(line: 1929, column: 21, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4166, file: !289, line: 1928, column: 9)
!4173 = !DILocation(line: 1929, column: 28, scope: !4172)
!4174 = !DILocation(line: 1929, column: 49, scope: !4172)
!4175 = !DILocation(line: 1929, column: 11, scope: !4172)
!4176 = !DILocation(line: 1930, column: 11, scope: !4172)
!4177 = !DILocation(line: 1933, column: 25, scope: !4154)
!4178 = !DILocation(line: 1933, column: 16, scope: !4154)
!4179 = !DILocation(line: 1935, column: 11, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4154, file: !289, line: 1935, column: 11)
!4181 = !DILocation(line: 1935, column: 30, scope: !4180)
!4182 = !DILocation(line: 1935, column: 34, scope: !4180)
!4183 = !DILocation(line: 1935, column: 37, scope: !4180)
!4184 = !DILocation(line: 1935, column: 11, scope: !4154)
!4185 = !DILocation(line: 1937, column: 26, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4180, file: !289, line: 1936, column: 9)
!4187 = !DILocation(line: 1937, column: 29, scope: !4186)
!4188 = !DILocation(line: 1937, column: 24, scope: !4186)
!4189 = !DILocation(line: 1938, column: 20, scope: !4186)
!4190 = !DILocation(line: 1939, column: 20, scope: !4186)
!4191 = !DILocation(line: 1940, column: 18, scope: !4186)
!4192 = !DILocation(line: 1937, column: 11, scope: !4186)
!4193 = !DILocation(line: 1941, column: 11, scope: !4186)
!4194 = !DILocation(line: 1943, column: 5, scope: !4154)
!4195 = !DILocation(line: 1956, column: 7, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 1956, column: 7)
!4197 = !DILocation(line: 1956, column: 24, scope: !4196)
!4198 = !DILocation(line: 1956, column: 27, scope: !4196)
!4199 = !DILocation(line: 1956, column: 30, scope: !4196)
!4200 = !DILocation(line: 1956, column: 7, scope: !4060)
!4201 = !DILocation(line: 1958, column: 14, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4203, file: !289, line: 1958, column: 12)
!4203 = distinct !DILexicalBlock(scope: !4196, file: !289, line: 1957, column: 5)
!4204 = !DILocation(line: 1959, column: 12, scope: !4202)
!4205 = !DILocation(line: 1959, column: 15, scope: !4202)
!4206 = !DILocation(line: 1959, column: 18, scope: !4202)
!4207 = !DILocation(line: 1959, column: 30, scope: !4202)
!4208 = !DILocation(line: 1960, column: 12, scope: !4202)
!4209 = !DILocation(line: 1960, column: 26, scope: !4202)
!4210 = !DILocation(line: 1960, column: 29, scope: !4202)
!4211 = !DILocation(line: 1960, column: 39, scope: !4202)
!4212 = !DILocation(line: 1960, column: 15, scope: !4202)
!4213 = !DILocation(line: 1958, column: 12, scope: !4203)
!4214 = !DILocation(line: 1962, column: 24, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4202, file: !289, line: 1961, column: 9)
!4216 = !DILocation(line: 1963, column: 18, scope: !4215)
!4217 = !DILocation(line: 1962, column: 11, scope: !4215)
!4218 = !DILocation(line: 1964, column: 11, scope: !4215)
!4219 = !DILocation(line: 1967, column: 20, scope: !4203)
!4220 = !DILocation(line: 1967, column: 23, scope: !4203)
!4221 = !DILocation(line: 1967, column: 33, scope: !4203)
!4222 = !DILocation(line: 1967, column: 7, scope: !4203)
!4223 = !DILocation(line: 1968, column: 5, scope: !4203)
!4224 = !DILocalVariable(name: "dereference", scope: !4060, file: !289, line: 1970, type: !139)
!4225 = !DILocation(line: 1970, column: 8, scope: !4060)
!4226 = !DILocation(line: 1970, column: 42, scope: !4060)
!4227 = !DILocation(line: 1970, column: 45, scope: !4060)
!4228 = !DILocation(line: 1970, column: 22, scope: !4060)
!4229 = !DILocation(line: 1972, column: 8, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 1972, column: 7)
!4231 = !DILocation(line: 1972, column: 7, scope: !4060)
!4232 = !DILocation(line: 1974, column: 14, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4234, file: !289, line: 1974, column: 11)
!4234 = distinct !DILexicalBlock(scope: !4230, file: !289, line: 1973, column: 5)
!4235 = !DILocation(line: 1974, column: 27, scope: !4233)
!4236 = !DILocation(line: 1974, column: 37, scope: !4233)
!4237 = !DILocation(line: 1974, column: 40, scope: !4233)
!4238 = !DILocation(line: 1974, column: 43, scope: !4233)
!4239 = !DILocation(line: 1974, column: 55, scope: !4233)
!4240 = !DILocation(line: 1974, column: 11, scope: !4234)
!4241 = !DILocalVariable(name: "use_lstat", scope: !4242, file: !289, line: 1982, type: !139)
!4242 = distinct !DILexicalBlock(scope: !4233, file: !289, line: 1975, column: 9)
!4243 = !DILocation(line: 1982, column: 16, scope: !4242)
!4244 = !DILocation(line: 1983, column: 19, scope: !4242)
!4245 = !DILocation(line: 1984, column: 17, scope: !4242)
!4246 = !DILocation(line: 1984, column: 23, scope: !4242)
!4247 = !DILocation(line: 1984, column: 26, scope: !4242)
!4248 = !DILocation(line: 1985, column: 21, scope: !4242)
!4249 = !DILocation(line: 1985, column: 24, scope: !4242)
!4250 = !DILocation(line: 1985, column: 43, scope: !4242)
!4251 = !DILocation(line: 1985, column: 46, scope: !4242)
!4252 = !DILocation(line: 1986, column: 16, scope: !4242)
!4253 = !DILocation(line: 1986, column: 19, scope: !4242)
!4254 = !DILocation(line: 1986, column: 22, scope: !4242)
!4255 = !DILocation(line: 1986, column: 32, scope: !4242)
!4256 = !DILocation(line: 1986, column: 35, scope: !4242)
!4257 = !DILocation(line: 1986, column: 38, scope: !4242)
!4258 = !DILocation(line: 1986, column: 52, scope: !4242)
!4259 = !DILocation(line: 1986, column: 55, scope: !4242)
!4260 = !DILocation(line: 1986, column: 58, scope: !4242)
!4261 = !DILocation(line: 1987, column: 16, scope: !4242)
!4262 = !DILocation(line: 1987, column: 19, scope: !4242)
!4263 = !DILocation(line: 1987, column: 22, scope: !4242)
!4264 = !DILocation(line: 1987, column: 34, scope: !4242)
!4265 = !DILocation(line: 1988, column: 16, scope: !4242)
!4266 = !DILocation(line: 1988, column: 19, scope: !4242)
!4267 = !DILocation(line: 1988, column: 22, scope: !4242)
!4268 = !DILocalVariable(name: "fstatat_flags", scope: !4242, file: !289, line: 1989, type: !5)
!4269 = !DILocation(line: 1989, column: 15, scope: !4242)
!4270 = !DILocation(line: 1989, column: 31, scope: !4242)
!4271 = !DILocation(line: 1990, column: 41, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4242, file: !289, line: 1990, column: 15)
!4273 = !DILocation(line: 1990, column: 60, scope: !4272)
!4274 = !DILocation(line: 1990, column: 15, scope: !4272)
!4275 = !DILocation(line: 1990, column: 75, scope: !4272)
!4276 = !DILocation(line: 1990, column: 15, scope: !4242)
!4277 = !DILocation(line: 1992, column: 32, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4272, file: !289, line: 1991, column: 13)
!4279 = !DILocation(line: 1992, column: 30, scope: !4278)
!4280 = !DILocation(line: 1993, column: 28, scope: !4278)
!4281 = !DILocation(line: 1994, column: 13, scope: !4278)
!4282 = !DILocation(line: 1997, column: 19, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4284, file: !289, line: 1997, column: 19)
!4284 = distinct !DILexicalBlock(scope: !4272, file: !289, line: 1996, column: 13)
!4285 = !DILocation(line: 1997, column: 25, scope: !4283)
!4286 = !DILocation(line: 1997, column: 34, scope: !4283)
!4287 = !DILocation(line: 1997, column: 37, scope: !4283)
!4288 = !DILocation(line: 1997, column: 40, scope: !4283)
!4289 = !DILocation(line: 1997, column: 19, scope: !4284)
!4290 = !DILocation(line: 1999, column: 24, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4283, file: !289, line: 1999, column: 24)
!4292 = !DILocation(line: 1999, column: 30, scope: !4291)
!4293 = !DILocation(line: 1999, column: 24, scope: !4283)
!4294 = !DILocation(line: 2001, column: 29, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4291, file: !289, line: 2000, column: 17)
!4296 = !DILocation(line: 2001, column: 36, scope: !4295)
!4297 = !DILocation(line: 2001, column: 57, scope: !4295)
!4298 = !DILocation(line: 2001, column: 19, scope: !4295)
!4299 = !DILocation(line: 2002, column: 19, scope: !4295)
!4300 = !DILocation(line: 2005, column: 25, scope: !4291)
!4301 = !DILocation(line: 2007, column: 9, scope: !4242)
!4302 = !DILocation(line: 2009, column: 11, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4234, file: !289, line: 2009, column: 11)
!4304 = !DILocation(line: 2009, column: 24, scope: !4303)
!4305 = !DILocation(line: 2009, column: 11, scope: !4234)
!4306 = !DILocalVariable(name: "return_now", scope: !4307, file: !289, line: 2011, type: !139)
!4307 = distinct !DILexicalBlock(scope: !4303, file: !289, line: 2010, column: 9)
!4308 = !DILocation(line: 2011, column: 16, scope: !4307)
!4309 = !DILocation(line: 2013, column: 15, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4307, file: !289, line: 2013, column: 15)
!4311 = !DILocation(line: 2013, column: 18, scope: !4310)
!4312 = !DILocation(line: 2013, column: 30, scope: !4310)
!4313 = !DILocation(line: 2014, column: 15, scope: !4310)
!4314 = !DILocation(line: 2014, column: 34, scope: !4310)
!4315 = !DILocation(line: 2014, column: 53, scope: !4310)
!4316 = !DILocation(line: 2015, column: 34, scope: !4310)
!4317 = !DILocation(line: 2014, column: 20, scope: !4310)
!4318 = !DILocation(line: 2013, column: 15, scope: !4307)
!4319 = !DILocation(line: 2017, column: 28, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4310, file: !289, line: 2016, column: 13)
!4321 = !DILocation(line: 2018, column: 22, scope: !4320)
!4322 = !DILocation(line: 2018, column: 47, scope: !4320)
!4323 = !DILocation(line: 2017, column: 15, scope: !4320)
!4324 = !DILocation(line: 2019, column: 15, scope: !4320)
!4325 = !DILocation(line: 2022, column: 15, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4307, file: !289, line: 2022, column: 15)
!4327 = !DILocation(line: 2022, column: 18, scope: !4326)
!4328 = !DILocation(line: 2022, column: 25, scope: !4326)
!4329 = !DILocation(line: 2022, column: 29, scope: !4326)
!4330 = !DILocation(line: 2022, column: 15, scope: !4307)
!4331 = !DILocalVariable(name: "options", scope: !4332, file: !289, line: 2028, type: !5)
!4332 = distinct !DILexicalBlock(scope: !4326, file: !289, line: 2023, column: 13)
!4333 = !DILocation(line: 2028, column: 19, scope: !4332)
!4334 = !DILocation(line: 2028, column: 31, scope: !4332)
!4335 = !DILocation(line: 2028, column: 34, scope: !4332)
!4336 = !DILocation(line: 2029, column: 31, scope: !4332)
!4337 = !DILocation(line: 2029, column: 37, scope: !4332)
!4338 = !DILocation(line: 2029, column: 40, scope: !4332)
!4339 = !DILocation(line: 2030, column: 37, scope: !4332)
!4340 = !DILocation(line: 2030, column: 47, scope: !4332)
!4341 = !DILocation(line: 2030, column: 64, scope: !4332)
!4342 = !DILocation(line: 2030, column: 54, scope: !4332)
!4343 = !DILocation(line: 0, scope: !4332)
!4344 = !DILocation(line: 2029, column: 34, scope: !4332)
!4345 = !DILocation(line: 2028, column: 30, scope: !4332)
!4346 = !DILocation(line: 2034, column: 34, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4332, file: !289, line: 2034, column: 19)
!4348 = !DILocation(line: 2034, column: 62, scope: !4347)
!4349 = !DILocation(line: 2034, column: 24, scope: !4347)
!4350 = !DILocation(line: 2034, column: 21, scope: !4347)
!4351 = !DILocation(line: 2034, column: 19, scope: !4332)
!4352 = !DILocation(line: 2040, column: 23, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4354, file: !289, line: 2040, column: 23)
!4354 = distinct !DILexicalBlock(scope: !4347, file: !289, line: 2035, column: 17)
!4355 = !DILocation(line: 2040, column: 23, scope: !4354)
!4356 = !DILocation(line: 2041, column: 22, scope: !4353)
!4357 = !DILocation(line: 2041, column: 39, scope: !4353)
!4358 = !DILocation(line: 2041, column: 21, scope: !4353)
!4359 = !DILocation(line: 2048, column: 51, scope: !4354)
!4360 = !DILocation(line: 2048, column: 68, scope: !4354)
!4361 = !DILocation(line: 2049, column: 58, scope: !4354)
!4362 = !DILocation(line: 2048, column: 34, scope: !4354)
!4363 = !DILocation(line: 2048, column: 32, scope: !4354)
!4364 = !DILocation(line: 2050, column: 23, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4354, file: !289, line: 2050, column: 23)
!4366 = !DILocation(line: 2050, column: 23, scope: !4354)
!4367 = !DILocation(line: 2054, column: 47, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4369, file: !289, line: 2054, column: 27)
!4369 = distinct !DILexicalBlock(scope: !4365, file: !289, line: 2051, column: 21)
!4370 = !DILocation(line: 2054, column: 61, scope: !4368)
!4371 = !DILocation(line: 2055, column: 47, scope: !4368)
!4372 = !DILocation(line: 2055, column: 50, scope: !4368)
!4373 = !DILocation(line: 2055, column: 59, scope: !4368)
!4374 = !DILocation(line: 2054, column: 29, scope: !4368)
!4375 = !DILocation(line: 2054, column: 27, scope: !4369)
!4376 = !DILocation(line: 2057, column: 27, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4368, file: !289, line: 2056, column: 25)
!4378 = !DILocation(line: 2059, column: 21, scope: !4369)
!4379 = !DILocation(line: 2061, column: 19, scope: !4354)
!4380 = !DILocation(line: 2063, column: 13, scope: !4332)
!4381 = !DILocation(line: 2072, column: 15, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4307, file: !289, line: 2072, column: 15)
!4383 = !DILocation(line: 2072, column: 18, scope: !4382)
!4384 = !DILocation(line: 2072, column: 15, scope: !4307)
!4385 = !DILocation(line: 2074, column: 33, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !289, line: 2074, column: 19)
!4387 = distinct !DILexicalBlock(scope: !4382, file: !289, line: 2073, column: 13)
!4388 = !DILocation(line: 2074, column: 36, scope: !4386)
!4389 = !DILocation(line: 2074, column: 19, scope: !4386)
!4390 = !DILocation(line: 2074, column: 19, scope: !4387)
!4391 = !DILocation(line: 2078, column: 23, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4393, file: !289, line: 2078, column: 23)
!4393 = distinct !DILexicalBlock(scope: !4386, file: !289, line: 2075, column: 17)
!4394 = !DILocation(line: 2078, column: 23, scope: !4393)
!4395 = !DILocation(line: 2079, column: 22, scope: !4392)
!4396 = !DILocation(line: 2079, column: 39, scope: !4392)
!4397 = !DILocation(line: 2079, column: 21, scope: !4392)
!4398 = !DILocation(line: 2080, column: 19, scope: !4393)
!4399 = !DILocation(line: 2082, column: 13, scope: !4387)
!4400 = !DILocation(line: 2085, column: 21, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !289, line: 2085, column: 19)
!4402 = distinct !DILexicalBlock(scope: !4382, file: !289, line: 2084, column: 13)
!4403 = !DILocation(line: 2086, column: 19, scope: !4401)
!4404 = !DILocation(line: 2086, column: 23, scope: !4401)
!4405 = !DILocation(line: 2086, column: 26, scope: !4401)
!4406 = !DILocation(line: 2086, column: 38, scope: !4401)
!4407 = !DILocation(line: 2087, column: 23, scope: !4401)
!4408 = !DILocation(line: 2087, column: 27, scope: !4401)
!4409 = !DILocation(line: 2087, column: 30, scope: !4401)
!4410 = !DILocation(line: 2087, column: 42, scope: !4401)
!4411 = !DILocation(line: 2088, column: 27, scope: !4401)
!4412 = !DILocation(line: 2088, column: 46, scope: !4401)
!4413 = !DILocation(line: 2088, column: 49, scope: !4401)
!4414 = !DILocation(line: 2088, column: 32, scope: !4401)
!4415 = !DILocation(line: 2085, column: 19, scope: !4402)
!4416 = !DILocation(line: 2089, column: 17, scope: !4401)
!4417 = !DILocation(line: 2092, column: 15, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4307, file: !289, line: 2092, column: 15)
!4419 = !DILocation(line: 2092, column: 15, scope: !4307)
!4420 = !DILocation(line: 2093, column: 13, scope: !4418)
!4421 = !DILocation(line: 2095, column: 16, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4307, file: !289, line: 2095, column: 15)
!4423 = !DILocation(line: 2095, column: 15, scope: !4307)
!4424 = !DILocation(line: 2097, column: 19, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4426, file: !289, line: 2097, column: 19)
!4426 = distinct !DILexicalBlock(scope: !4422, file: !289, line: 2096, column: 13)
!4427 = !DILocation(line: 2097, column: 19, scope: !4426)
!4428 = !DILocation(line: 2099, column: 23, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4430, file: !289, line: 2099, column: 23)
!4430 = distinct !DILexicalBlock(scope: !4425, file: !289, line: 2098, column: 17)
!4431 = !DILocation(line: 2099, column: 26, scope: !4429)
!4432 = !DILocation(line: 2099, column: 36, scope: !4429)
!4433 = !DILocation(line: 2099, column: 39, scope: !4429)
!4434 = !DILocation(line: 2099, column: 42, scope: !4429)
!4435 = !DILocation(line: 2099, column: 54, scope: !4429)
!4436 = !DILocation(line: 2099, column: 23, scope: !4430)
!4437 = !DILocation(line: 2103, column: 21, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4429, file: !289, line: 2100, column: 21)
!4439 = !DILocation(line: 2107, column: 24, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4429, file: !289, line: 2105, column: 21)
!4441 = !DILocation(line: 2108, column: 30, scope: !4440)
!4442 = !DILocation(line: 2108, column: 55, scope: !4440)
!4443 = !DILocation(line: 2106, column: 23, scope: !4440)
!4444 = !DILocation(line: 2109, column: 23, scope: !4440)
!4445 = !DILocation(line: 2111, column: 17, scope: !4430)
!4446 = !DILocation(line: 2120, column: 19, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4426, file: !289, line: 2120, column: 19)
!4448 = !DILocation(line: 2121, column: 19, scope: !4447)
!4449 = !DILocation(line: 2121, column: 22, scope: !4447)
!4450 = !DILocation(line: 2121, column: 25, scope: !4447)
!4451 = !DILocation(line: 2121, column: 37, scope: !4447)
!4452 = !DILocation(line: 2122, column: 19, scope: !4447)
!4453 = !DILocation(line: 2122, column: 33, scope: !4447)
!4454 = !DILocation(line: 2122, column: 36, scope: !4447)
!4455 = !DILocation(line: 2122, column: 47, scope: !4447)
!4456 = !DILocation(line: 2122, column: 22, scope: !4447)
!4457 = !DILocation(line: 2120, column: 19, scope: !4426)
!4458 = !DILocation(line: 2125, column: 26, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4447, file: !289, line: 2123, column: 17)
!4460 = !DILocation(line: 2126, column: 26, scope: !4459)
!4461 = !DILocation(line: 2126, column: 51, scope: !4459)
!4462 = !DILocation(line: 2124, column: 19, scope: !4459)
!4463 = !DILocation(line: 2127, column: 19, scope: !4459)
!4464 = !DILocation(line: 2129, column: 13, scope: !4426)
!4465 = !DILocation(line: 2131, column: 16, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4307, file: !289, line: 2131, column: 15)
!4467 = !DILocation(line: 2131, column: 15, scope: !4307)
!4468 = !DILocation(line: 2133, column: 19, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !289, line: 2133, column: 19)
!4470 = distinct !DILexicalBlock(scope: !4466, file: !289, line: 2132, column: 13)
!4471 = !DILocation(line: 2133, column: 19, scope: !4470)
!4472 = !DILocation(line: 2135, column: 23, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !289, line: 2135, column: 23)
!4474 = distinct !DILexicalBlock(scope: !4469, file: !289, line: 2134, column: 17)
!4475 = !DILocation(line: 2135, column: 26, scope: !4473)
!4476 = !DILocation(line: 2135, column: 36, scope: !4473)
!4477 = !DILocation(line: 2135, column: 39, scope: !4473)
!4478 = !DILocation(line: 2135, column: 42, scope: !4473)
!4479 = !DILocation(line: 2135, column: 54, scope: !4473)
!4480 = !DILocation(line: 2135, column: 23, scope: !4474)
!4481 = !DILocation(line: 2139, column: 21, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4473, file: !289, line: 2136, column: 21)
!4483 = !DILocation(line: 2143, column: 26, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4473, file: !289, line: 2141, column: 21)
!4485 = !DILocation(line: 2144, column: 30, scope: !4484)
!4486 = !DILocation(line: 2142, column: 23, scope: !4484)
!4487 = !DILocation(line: 2145, column: 23, scope: !4484)
!4488 = !DILocation(line: 2147, column: 17, scope: !4474)
!4489 = !DILocation(line: 2148, column: 13, scope: !4470)
!4490 = !DILocation(line: 2150, column: 15, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4307, file: !289, line: 2150, column: 15)
!4492 = !DILocation(line: 2150, column: 18, scope: !4491)
!4493 = !DILocation(line: 2150, column: 15, scope: !4307)
!4494 = !DILocation(line: 2153, column: 19, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4496, file: !289, line: 2153, column: 19)
!4496 = distinct !DILexicalBlock(scope: !4491, file: !289, line: 2151, column: 13)
!4497 = !DILocation(line: 2153, column: 44, scope: !4495)
!4498 = !DILocation(line: 2153, column: 48, scope: !4495)
!4499 = !DILocation(line: 2154, column: 19, scope: !4495)
!4500 = !DILocation(line: 2154, column: 22, scope: !4495)
!4501 = !DILocation(line: 2154, column: 25, scope: !4495)
!4502 = !DILocation(line: 2154, column: 37, scope: !4495)
!4503 = !DILocation(line: 2153, column: 19, scope: !4496)
!4504 = !DILocation(line: 2157, column: 24, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4495, file: !289, line: 2155, column: 17)
!4506 = !DILocation(line: 2158, column: 26, scope: !4505)
!4507 = !DILocation(line: 2158, column: 50, scope: !4505)
!4508 = !DILocation(line: 2156, column: 19, scope: !4505)
!4509 = !DILocation(line: 2159, column: 19, scope: !4505)
!4510 = !DILocation(line: 2161, column: 13, scope: !4496)
!4511 = !DILocalVariable(name: "srcbase", scope: !4307, file: !289, line: 2163, type: !113)
!4512 = !DILocation(line: 2163, column: 23, scope: !4307)
!4513 = !DILocation(line: 2164, column: 15, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4307, file: !289, line: 2164, column: 15)
!4515 = !DILocation(line: 2164, column: 18, scope: !4514)
!4516 = !DILocation(line: 2164, column: 30, scope: !4514)
!4517 = !DILocation(line: 2167, column: 15, scope: !4514)
!4518 = !DILocation(line: 2167, column: 61, scope: !4514)
!4519 = !DILocation(line: 2167, column: 45, scope: !4514)
!4520 = !DILocation(line: 2167, column: 43, scope: !4514)
!4521 = !DILocation(line: 2167, column: 20, scope: !4514)
!4522 = !DILocation(line: 2173, column: 15, scope: !4514)
!4523 = !DILocation(line: 2173, column: 19, scope: !4514)
!4524 = !DILocation(line: 2173, column: 22, scope: !4514)
!4525 = !DILocation(line: 2173, column: 32, scope: !4514)
!4526 = !DILocation(line: 2173, column: 37, scope: !4514)
!4527 = !DILocation(line: 2164, column: 15, scope: !4307)
!4528 = !DILocation(line: 2179, column: 19, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4530, file: !289, line: 2179, column: 19)
!4530 = distinct !DILexicalBlock(scope: !4514, file: !289, line: 2174, column: 13)
!4531 = !DILocation(line: 2179, column: 22, scope: !4529)
!4532 = !DILocation(line: 2179, column: 34, scope: !4529)
!4533 = !DILocation(line: 2180, column: 19, scope: !4529)
!4534 = !DILocation(line: 2180, column: 44, scope: !4529)
!4535 = !DILocation(line: 2180, column: 62, scope: !4529)
!4536 = !DILocation(line: 2180, column: 22, scope: !4529)
!4537 = !DILocation(line: 2179, column: 19, scope: !4530)
!4538 = !DILocalVariable(name: "fmt", scope: !4539, file: !289, line: 2182, type: !113)
!4539 = distinct !DILexicalBlock(scope: !4529, file: !289, line: 2181, column: 17)
!4540 = !DILocation(line: 2182, column: 31, scope: !4539)
!4541 = !DILocation(line: 2183, column: 26, scope: !4539)
!4542 = !DILocation(line: 2183, column: 29, scope: !4539)
!4543 = !DILocation(line: 2184, column: 20, scope: !4539)
!4544 = !DILocation(line: 2185, column: 20, scope: !4539)
!4545 = !DILocation(line: 2183, column: 23, scope: !4539)
!4546 = !DILocation(line: 2186, column: 32, scope: !4539)
!4547 = !DILocation(line: 2187, column: 26, scope: !4539)
!4548 = !DILocation(line: 2188, column: 26, scope: !4539)
!4549 = !DILocation(line: 2186, column: 19, scope: !4539)
!4550 = !DILocation(line: 2189, column: 19, scope: !4539)
!4551 = !DILocalVariable(name: "tmp_backup", scope: !4530, file: !289, line: 2192, type: !7)
!4552 = !DILocation(line: 2192, column: 21, scope: !4530)
!4553 = !DILocation(line: 2192, column: 64, scope: !4530)
!4554 = !DILocation(line: 2193, column: 54, scope: !4530)
!4555 = !DILocation(line: 2193, column: 57, scope: !4530)
!4556 = !DILocation(line: 2192, column: 34, scope: !4530)
!4557 = !DILocation(line: 2200, column: 19, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4530, file: !289, line: 2200, column: 19)
!4559 = !DILocation(line: 2200, column: 19, scope: !4530)
!4560 = !DILocation(line: 2202, column: 19, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4558, file: !289, line: 2201, column: 17)
!4562 = !DILocalVariable(name: "__old", scope: !4563, file: !289, line: 2202, type: !113)
!4563 = distinct !DILexicalBlock(scope: !4564, file: !289, line: 2202, column: 19)
!4564 = distinct !DILexicalBlock(scope: !4561, file: !289, line: 2202, column: 19)
!4565 = !DILocation(line: 2202, column: 19, scope: !4563)
!4566 = !DILocalVariable(name: "__len", scope: !4563, file: !289, line: 2202, type: !52)
!4567 = !DILocalVariable(name: "__new", scope: !4563, file: !289, line: 2202, type: !7)
!4568 = !DILocation(line: 2202, column: 19, scope: !4564)
!4569 = !DILocation(line: 2203, column: 25, scope: !4561)
!4570 = !DILocation(line: 2203, column: 19, scope: !4561)
!4571 = !DILocation(line: 2204, column: 17, scope: !4561)
!4572 = !DILocation(line: 2205, column: 24, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4558, file: !289, line: 2205, column: 24)
!4574 = !DILocation(line: 2205, column: 30, scope: !4573)
!4575 = !DILocation(line: 2205, column: 24, scope: !4558)
!4576 = !DILocation(line: 2207, column: 29, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4573, file: !289, line: 2206, column: 17)
!4578 = !DILocation(line: 2207, column: 36, scope: !4577)
!4579 = !DILocation(line: 2207, column: 59, scope: !4577)
!4580 = !DILocation(line: 2207, column: 19, scope: !4577)
!4581 = !DILocation(line: 2208, column: 19, scope: !4577)
!4582 = !DILocation(line: 2210, column: 23, scope: !4530)
!4583 = !DILocation(line: 2211, column: 13, scope: !4530)
!4584 = !DILocation(line: 2212, column: 22, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4514, file: !289, line: 2212, column: 20)
!4586 = !DILocation(line: 2214, column: 20, scope: !4585)
!4587 = !DILocation(line: 2214, column: 25, scope: !4585)
!4588 = !DILocation(line: 2214, column: 28, scope: !4585)
!4589 = !DILocation(line: 2215, column: 20, scope: !4585)
!4590 = !DILocation(line: 2215, column: 24, scope: !4585)
!4591 = !DILocation(line: 2215, column: 27, scope: !4585)
!4592 = !DILocation(line: 2216, column: 24, scope: !4585)
!4593 = !DILocation(line: 2216, column: 28, scope: !4585)
!4594 = !DILocation(line: 2216, column: 31, scope: !4585)
!4595 = !DILocation(line: 2216, column: 46, scope: !4585)
!4596 = !DILocation(line: 2216, column: 60, scope: !4585)
!4597 = !DILocation(line: 2216, column: 51, scope: !4585)
!4598 = !DILocation(line: 2217, column: 24, scope: !4585)
!4599 = !DILocation(line: 2217, column: 28, scope: !4585)
!4600 = !DILocation(line: 2217, column: 31, scope: !4585)
!4601 = !DILocation(line: 2217, column: 43, scope: !4585)
!4602 = !DILocation(line: 2218, column: 28, scope: !4585)
!4603 = !DILocation(line: 2218, column: 33, scope: !4585)
!4604 = !DILocation(line: 2212, column: 20, scope: !4514)
!4605 = !DILocation(line: 2221, column: 27, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4607, file: !289, line: 2221, column: 19)
!4607 = distinct !DILexicalBlock(scope: !4585, file: !289, line: 2220, column: 13)
!4608 = !DILocation(line: 2221, column: 19, scope: !4606)
!4609 = !DILocation(line: 2221, column: 37, scope: !4606)
!4610 = !DILocation(line: 2221, column: 42, scope: !4606)
!4611 = !DILocation(line: 2221, column: 45, scope: !4606)
!4612 = !DILocation(line: 2221, column: 51, scope: !4606)
!4613 = !DILocation(line: 2221, column: 19, scope: !4607)
!4614 = !DILocation(line: 2223, column: 29, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4606, file: !289, line: 2222, column: 17)
!4616 = !DILocation(line: 2223, column: 36, scope: !4615)
!4617 = !DILocation(line: 2223, column: 59, scope: !4615)
!4618 = !DILocation(line: 2223, column: 19, scope: !4615)
!4619 = !DILocation(line: 2224, column: 19, scope: !4615)
!4620 = !DILocation(line: 2226, column: 23, scope: !4607)
!4621 = !DILocation(line: 2227, column: 19, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4607, file: !289, line: 2227, column: 19)
!4623 = !DILocation(line: 2227, column: 22, scope: !4622)
!4624 = !DILocation(line: 2227, column: 19, scope: !4607)
!4625 = !DILocation(line: 2228, column: 25, scope: !4622)
!4626 = !DILocation(line: 2228, column: 44, scope: !4622)
!4627 = !DILocation(line: 2228, column: 17, scope: !4622)
!4628 = !DILocation(line: 2229, column: 13, scope: !4607)
!4629 = !DILocation(line: 2230, column: 9, scope: !4307)
!4630 = !DILocation(line: 2231, column: 5, scope: !4234)
!4631 = !DILocation(line: 2235, column: 7, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2235, column: 7)
!4633 = !DILocation(line: 2236, column: 7, scope: !4632)
!4634 = !DILocation(line: 2236, column: 10, scope: !4632)
!4635 = !DILocation(line: 2236, column: 13, scope: !4632)
!4636 = !DILocation(line: 2237, column: 7, scope: !4632)
!4637 = !DILocation(line: 2237, column: 12, scope: !4632)
!4638 = !DILocation(line: 2237, column: 15, scope: !4632)
!4639 = !DILocation(line: 2238, column: 7, scope: !4632)
!4640 = !DILocation(line: 2238, column: 10, scope: !4632)
!4641 = !DILocation(line: 2238, column: 13, scope: !4632)
!4642 = !DILocation(line: 2238, column: 25, scope: !4632)
!4643 = !DILocation(line: 2235, column: 7, scope: !4060)
!4644 = !DILocalVariable(name: "lstat_ok", scope: !4645, file: !289, line: 2240, type: !139)
!4645 = distinct !DILexicalBlock(scope: !4632, file: !289, line: 2239, column: 5)
!4646 = !DILocation(line: 2240, column: 12, scope: !4645)
!4647 = !DILocalVariable(name: "tmp_buf", scope: !4645, file: !289, line: 2241, type: !335)
!4648 = !DILocation(line: 2241, column: 19, scope: !4645)
!4649 = !DILocalVariable(name: "dst_lstat_sb", scope: !4645, file: !289, line: 2242, type: !334)
!4650 = !DILocation(line: 2242, column: 20, scope: !4645)
!4651 = !DILocation(line: 2246, column: 11, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4645, file: !289, line: 2246, column: 11)
!4653 = !DILocation(line: 2246, column: 11, scope: !4645)
!4654 = !DILocation(line: 2247, column: 22, scope: !4652)
!4655 = !DILocation(line: 2247, column: 9, scope: !4652)
!4656 = !DILocation(line: 2250, column: 22, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !289, line: 2250, column: 15)
!4658 = distinct !DILexicalBlock(scope: !4652, file: !289, line: 2249, column: 9)
!4659 = !DILocation(line: 2250, column: 15, scope: !4657)
!4660 = !DILocation(line: 2250, column: 42, scope: !4657)
!4661 = !DILocation(line: 2250, column: 15, scope: !4658)
!4662 = !DILocation(line: 2251, column: 26, scope: !4657)
!4663 = !DILocation(line: 2251, column: 13, scope: !4657)
!4664 = !DILocation(line: 2253, column: 22, scope: !4657)
!4665 = !DILocation(line: 2257, column: 11, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4645, file: !289, line: 2257, column: 11)
!4667 = !DILocation(line: 2258, column: 11, scope: !4666)
!4668 = !DILocation(line: 2258, column: 14, scope: !4666)
!4669 = !DILocation(line: 2259, column: 11, scope: !4666)
!4670 = !DILocation(line: 2259, column: 25, scope: !4666)
!4671 = !DILocation(line: 2259, column: 28, scope: !4666)
!4672 = !DILocation(line: 2259, column: 39, scope: !4666)
!4673 = !DILocation(line: 2259, column: 49, scope: !4666)
!4674 = !DILocation(line: 2259, column: 14, scope: !4666)
!4675 = !DILocation(line: 2257, column: 11, scope: !4645)
!4676 = !DILocation(line: 2262, column: 18, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4666, file: !289, line: 2260, column: 9)
!4678 = !DILocation(line: 2263, column: 18, scope: !4677)
!4679 = !DILocation(line: 2263, column: 43, scope: !4677)
!4680 = !DILocation(line: 2261, column: 11, scope: !4677)
!4681 = !DILocation(line: 2264, column: 11, scope: !4677)
!4682 = !DILocation(line: 2266, column: 5, scope: !4645)
!4683 = !DILocation(line: 2272, column: 7, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2272, column: 7)
!4685 = !DILocation(line: 2272, column: 10, scope: !4684)
!4686 = !DILocation(line: 2272, column: 18, scope: !4684)
!4687 = !DILocation(line: 2272, column: 22, scope: !4684)
!4688 = !DILocation(line: 2272, column: 25, scope: !4684)
!4689 = !DILocation(line: 2272, column: 35, scope: !4684)
!4690 = !DILocation(line: 2272, column: 39, scope: !4684)
!4691 = !DILocation(line: 2272, column: 7, scope: !4060)
!4692 = !DILocation(line: 2273, column: 19, scope: !4684)
!4693 = !DILocation(line: 2273, column: 29, scope: !4684)
!4694 = !DILocation(line: 2273, column: 39, scope: !4684)
!4695 = !DILocation(line: 2273, column: 5, scope: !4684)
!4696 = !DILocation(line: 2305, column: 7, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2305, column: 7)
!4698 = !DILocation(line: 2305, column: 20, scope: !4697)
!4699 = !DILocation(line: 2305, column: 7, scope: !4060)
!4700 = !DILocation(line: 2306, column: 18, scope: !4697)
!4701 = !DILocation(line: 2306, column: 5, scope: !4697)
!4702 = !DILocation(line: 2307, column: 12, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4697, file: !289, line: 2307, column: 12)
!4704 = !DILocation(line: 2307, column: 15, scope: !4703)
!4705 = !DILocation(line: 2307, column: 25, scope: !4703)
!4706 = !DILocation(line: 2307, column: 28, scope: !4703)
!4707 = !DILocation(line: 2307, column: 12, scope: !4697)
!4708 = !DILocation(line: 2309, column: 11, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !289, line: 2309, column: 11)
!4710 = distinct !DILexicalBlock(scope: !4703, file: !289, line: 2308, column: 5)
!4711 = !DILocation(line: 2309, column: 11, scope: !4710)
!4712 = !DILocation(line: 2310, column: 41, scope: !4709)
!4713 = !DILocation(line: 2310, column: 58, scope: !4709)
!4714 = !DILocation(line: 2310, column: 73, scope: !4709)
!4715 = !DILocation(line: 2310, column: 24, scope: !4709)
!4716 = !DILocation(line: 2310, column: 22, scope: !4709)
!4717 = !DILocation(line: 2310, column: 9, scope: !4709)
!4718 = !DILocation(line: 2312, column: 51, scope: !4709)
!4719 = !DILocation(line: 2312, column: 66, scope: !4709)
!4720 = !DILocation(line: 2312, column: 24, scope: !4709)
!4721 = !DILocation(line: 2312, column: 22, scope: !4709)
!4722 = !DILocation(line: 2313, column: 5, scope: !4710)
!4723 = !DILocation(line: 2314, column: 12, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4703, file: !289, line: 2314, column: 12)
!4725 = !DILocation(line: 2314, column: 15, scope: !4724)
!4726 = !DILocation(line: 2314, column: 25, scope: !4724)
!4727 = !DILocation(line: 2314, column: 35, scope: !4724)
!4728 = !DILocation(line: 2314, column: 44, scope: !4724)
!4729 = !DILocation(line: 2314, column: 12, scope: !4703)
!4730 = !DILocation(line: 2316, column: 49, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4724, file: !289, line: 2315, column: 5)
!4732 = !DILocation(line: 2316, column: 64, scope: !4731)
!4733 = !DILocation(line: 2316, column: 22, scope: !4731)
!4734 = !DILocation(line: 2316, column: 20, scope: !4731)
!4735 = !DILocation(line: 2317, column: 5, scope: !4731)
!4736 = !DILocation(line: 2318, column: 12, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4724, file: !289, line: 2318, column: 12)
!4738 = !DILocation(line: 2318, column: 15, scope: !4737)
!4739 = !DILocation(line: 2319, column: 12, scope: !4737)
!4740 = !DILocation(line: 2319, column: 16, scope: !4737)
!4741 = !DILocation(line: 2319, column: 19, scope: !4737)
!4742 = !DILocation(line: 2320, column: 12, scope: !4737)
!4743 = !DILocation(line: 2320, column: 27, scope: !4737)
!4744 = !DILocation(line: 2320, column: 18, scope: !4737)
!4745 = !DILocation(line: 2321, column: 16, scope: !4737)
!4746 = !DILocation(line: 2321, column: 20, scope: !4737)
!4747 = !DILocation(line: 2322, column: 20, scope: !4737)
!4748 = !DILocation(line: 2322, column: 23, scope: !4737)
!4749 = !DILocation(line: 2322, column: 26, scope: !4737)
!4750 = !DILocation(line: 2322, column: 38, scope: !4737)
!4751 = !DILocation(line: 2323, column: 16, scope: !4737)
!4752 = !DILocation(line: 2323, column: 19, scope: !4737)
!4753 = !DILocation(line: 2323, column: 22, scope: !4737)
!4754 = !DILocation(line: 2323, column: 34, scope: !4737)
!4755 = !DILocation(line: 2318, column: 12, scope: !4724)
!4756 = !DILocation(line: 2325, column: 39, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4737, file: !289, line: 2324, column: 5)
!4758 = !DILocation(line: 2325, column: 56, scope: !4757)
!4759 = !DILocation(line: 2325, column: 71, scope: !4757)
!4760 = !DILocation(line: 2325, column: 22, scope: !4757)
!4761 = !DILocation(line: 2325, column: 20, scope: !4757)
!4762 = !DILocation(line: 2326, column: 5, scope: !4757)
!4763 = !DILocation(line: 2331, column: 7, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2331, column: 7)
!4765 = !DILocation(line: 2331, column: 7, scope: !4060)
!4766 = !DILocation(line: 2336, column: 11, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !289, line: 2336, column: 11)
!4768 = distinct !DILexicalBlock(scope: !4764, file: !289, line: 2332, column: 5)
!4769 = !DILocation(line: 2336, column: 11, scope: !4768)
!4770 = !DILocation(line: 2340, column: 26, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4772, file: !289, line: 2340, column: 15)
!4772 = distinct !DILexicalBlock(scope: !4767, file: !289, line: 2337, column: 9)
!4773 = !DILocation(line: 2340, column: 36, scope: !4771)
!4774 = !DILocation(line: 2340, column: 15, scope: !4771)
!4775 = !DILocation(line: 2340, column: 15, scope: !4772)
!4776 = !DILocation(line: 2342, column: 28, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4771, file: !289, line: 2341, column: 13)
!4778 = !DILocation(line: 2343, column: 22, scope: !4777)
!4779 = !DILocation(line: 2344, column: 22, scope: !4777)
!4780 = !DILocation(line: 2342, column: 15, scope: !4777)
!4781 = !DILocation(line: 2345, column: 16, scope: !4777)
!4782 = !DILocation(line: 2345, column: 31, scope: !4777)
!4783 = !DILocation(line: 2346, column: 15, scope: !4777)
!4784 = !DILocation(line: 2348, column: 31, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4771, file: !289, line: 2348, column: 20)
!4786 = !DILocation(line: 2348, column: 41, scope: !4785)
!4787 = !DILocation(line: 2348, column: 20, scope: !4785)
!4788 = !DILocation(line: 2348, column: 20, scope: !4771)
!4789 = !DILocation(line: 2350, column: 28, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4785, file: !289, line: 2349, column: 13)
!4791 = !DILocation(line: 2352, column: 22, scope: !4790)
!4792 = !DILocation(line: 2350, column: 15, scope: !4790)
!4793 = !DILocation(line: 2357, column: 19, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4790, file: !289, line: 2357, column: 19)
!4795 = !DILocation(line: 2357, column: 22, scope: !4794)
!4796 = !DILocation(line: 2357, column: 32, scope: !4794)
!4797 = !DILocation(line: 2357, column: 35, scope: !4794)
!4798 = !DILocation(line: 2357, column: 19, scope: !4790)
!4799 = !DILocation(line: 2358, column: 18, scope: !4794)
!4800 = !DILocation(line: 2358, column: 35, scope: !4794)
!4801 = !DILocation(line: 2358, column: 17, scope: !4794)
!4802 = !DILocation(line: 2361, column: 15, scope: !4790)
!4803 = !DILocation(line: 2363, column: 20, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4785, file: !289, line: 2363, column: 20)
!4805 = !DILocation(line: 2363, column: 23, scope: !4804)
!4806 = !DILocation(line: 2363, column: 35, scope: !4804)
!4807 = !DILocation(line: 2364, column: 20, scope: !4804)
!4808 = !DILocation(line: 2364, column: 24, scope: !4804)
!4809 = !DILocation(line: 2365, column: 24, scope: !4804)
!4810 = !DILocation(line: 2365, column: 27, scope: !4804)
!4811 = !DILocation(line: 2365, column: 30, scope: !4804)
!4812 = !DILocation(line: 2365, column: 42, scope: !4804)
!4813 = !DILocation(line: 2363, column: 20, scope: !4785)
!4814 = !DILocation(line: 2373, column: 13, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4804, file: !289, line: 2366, column: 13)
!4816 = !DILocation(line: 2376, column: 28, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4804, file: !289, line: 2375, column: 13)
!4818 = !DILocation(line: 2377, column: 22, scope: !4817)
!4819 = !DILocation(line: 2377, column: 47, scope: !4817)
!4820 = !DILocation(line: 2376, column: 15, scope: !4817)
!4821 = !DILocation(line: 2378, column: 15, scope: !4817)
!4822 = !DILocation(line: 2380, column: 9, scope: !4772)
!4823 = !DILocation(line: 2383, column: 35, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4825, file: !289, line: 2383, column: 15)
!4825 = distinct !DILexicalBlock(scope: !4767, file: !289, line: 2382, column: 9)
!4826 = !DILocation(line: 2383, column: 49, scope: !4824)
!4827 = !DILocation(line: 2383, column: 65, scope: !4824)
!4828 = !DILocation(line: 2383, column: 68, scope: !4824)
!4829 = !DILocation(line: 2384, column: 35, scope: !4824)
!4830 = !DILocation(line: 2383, column: 17, scope: !4824)
!4831 = !DILocation(line: 2383, column: 15, scope: !4825)
!4832 = !DILocation(line: 2385, column: 13, scope: !4824)
!4833 = !DILocation(line: 2387, column: 11, scope: !4825)
!4834 = !DILocation(line: 2389, column: 5, scope: !4768)
!4835 = !DILocation(line: 2391, column: 7, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2391, column: 7)
!4837 = !DILocation(line: 2391, column: 10, scope: !4836)
!4838 = !DILocation(line: 2391, column: 7, scope: !4060)
!4839 = !DILocation(line: 2393, column: 11, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !289, line: 2393, column: 11)
!4841 = distinct !DILexicalBlock(scope: !4836, file: !289, line: 2392, column: 5)
!4842 = !DILocation(line: 2393, column: 24, scope: !4840)
!4843 = !DILocation(line: 2393, column: 11, scope: !4841)
!4844 = !DILocation(line: 2394, column: 32, scope: !4840)
!4845 = !DILocation(line: 2394, column: 42, scope: !4840)
!4846 = !DILocation(line: 2394, column: 24, scope: !4840)
!4847 = !DILocation(line: 2394, column: 52, scope: !4840)
!4848 = !DILocation(line: 2394, column: 63, scope: !4840)
!4849 = !DILocation(line: 2394, column: 22, scope: !4840)
!4850 = !DILocation(line: 2394, column: 9, scope: !4840)
!4851 = !DILocation(line: 2396, column: 11, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4841, file: !289, line: 2396, column: 11)
!4853 = !DILocation(line: 2396, column: 24, scope: !4852)
!4854 = !DILocation(line: 2396, column: 11, scope: !4841)
!4855 = !DILocation(line: 2398, column: 15, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4857, file: !289, line: 2398, column: 15)
!4857 = distinct !DILexicalBlock(scope: !4852, file: !289, line: 2397, column: 9)
!4858 = !DILocation(line: 2398, column: 18, scope: !4856)
!4859 = !DILocation(line: 2398, column: 15, scope: !4857)
!4860 = !DILocation(line: 2400, column: 23, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4856, file: !289, line: 2399, column: 13)
!4862 = !DILocation(line: 2400, column: 15, scope: !4861)
!4863 = !DILocation(line: 2401, column: 29, scope: !4861)
!4864 = !DILocation(line: 2401, column: 39, scope: !4861)
!4865 = !DILocation(line: 2401, column: 49, scope: !4861)
!4866 = !DILocation(line: 2401, column: 15, scope: !4861)
!4867 = !DILocation(line: 2402, column: 13, scope: !4861)
!4868 = !DILocation(line: 2404, column: 15, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4857, file: !289, line: 2404, column: 15)
!4870 = !DILocation(line: 2404, column: 18, scope: !4869)
!4871 = !DILocation(line: 2404, column: 15, scope: !4857)
!4872 = !DILocation(line: 2407, column: 45, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4869, file: !289, line: 2405, column: 13)
!4874 = !DILocation(line: 2407, column: 68, scope: !4873)
!4875 = !DILocation(line: 2407, column: 22, scope: !4873)
!4876 = !DILocation(line: 2408, column: 13, scope: !4873)
!4877 = !DILocation(line: 2410, column: 15, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4857, file: !289, line: 2410, column: 15)
!4879 = !DILocation(line: 2410, column: 15, scope: !4857)
!4880 = !DILocation(line: 2411, column: 14, scope: !4878)
!4881 = !DILocation(line: 2411, column: 31, scope: !4878)
!4882 = !DILocation(line: 2411, column: 13, scope: !4878)
!4883 = !DILocation(line: 2413, column: 15, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4857, file: !289, line: 2413, column: 15)
!4885 = !DILocation(line: 2413, column: 32, scope: !4884)
!4886 = !DILocation(line: 2413, column: 36, scope: !4884)
!4887 = !DILocation(line: 2413, column: 39, scope: !4884)
!4888 = !DILocation(line: 2413, column: 15, scope: !4857)
!4889 = !DILocation(line: 2422, column: 28, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4884, file: !289, line: 2414, column: 13)
!4891 = !DILocation(line: 2422, column: 31, scope: !4890)
!4892 = !DILocation(line: 2422, column: 42, scope: !4890)
!4893 = !DILocation(line: 2422, column: 15, scope: !4890)
!4894 = !DILocation(line: 2423, column: 13, scope: !4890)
!4895 = !DILocation(line: 2425, column: 11, scope: !4857)
!4896 = !DILocation(line: 2433, column: 11, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4841, file: !289, line: 2433, column: 11)
!4898 = !DILocation(line: 2433, column: 24, scope: !4897)
!4899 = !DILocation(line: 2433, column: 11, scope: !4841)
!4900 = !DILocation(line: 2438, column: 24, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4897, file: !289, line: 2434, column: 9)
!4902 = !DILocation(line: 2439, column: 18, scope: !4901)
!4903 = !DILocation(line: 2440, column: 18, scope: !4901)
!4904 = !DILocation(line: 2438, column: 11, scope: !4901)
!4905 = !DILocation(line: 2446, column: 12, scope: !4901)
!4906 = !DILocation(line: 2446, column: 27, scope: !4901)
!4907 = !DILocation(line: 2450, column: 11, scope: !4901)
!4908 = !DILocation(line: 2468, column: 11, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4841, file: !289, line: 2468, column: 11)
!4910 = !DILocation(line: 2468, column: 24, scope: !4909)
!4911 = !DILocation(line: 2468, column: 11, scope: !4841)
!4912 = !DILocation(line: 2480, column: 21, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4909, file: !289, line: 2469, column: 9)
!4914 = !DILocation(line: 2481, column: 18, scope: !4913)
!4915 = !DILocation(line: 2482, column: 18, scope: !4913)
!4916 = !DILocation(line: 2482, column: 43, scope: !4913)
!4917 = !DILocation(line: 2480, column: 11, scope: !4913)
!4918 = !DILocation(line: 2483, column: 34, scope: !4913)
!4919 = !DILocation(line: 2483, column: 49, scope: !4913)
!4920 = !DILocation(line: 2483, column: 11, scope: !4913)
!4921 = !DILocation(line: 2484, column: 11, scope: !4913)
!4922 = !DILocation(line: 2493, column: 12, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4841, file: !289, line: 2493, column: 11)
!4924 = !DILocation(line: 2493, column: 40, scope: !4923)
!4925 = !DILocation(line: 2493, column: 33, scope: !4923)
!4926 = !DILocation(line: 2493, column: 60, scope: !4923)
!4927 = !DILocation(line: 2493, column: 52, scope: !4923)
!4928 = !DILocation(line: 2493, column: 71, scope: !4923)
!4929 = !DILocation(line: 2494, column: 11, scope: !4923)
!4930 = !DILocation(line: 2494, column: 14, scope: !4923)
!4931 = !DILocation(line: 2494, column: 20, scope: !4923)
!4932 = !DILocation(line: 2493, column: 11, scope: !4841)
!4933 = !DILocation(line: 2496, column: 21, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4923, file: !289, line: 2495, column: 9)
!4935 = !DILocation(line: 2497, column: 14, scope: !4934)
!4936 = !DILocation(line: 2498, column: 18, scope: !4934)
!4937 = !DILocation(line: 2498, column: 43, scope: !4934)
!4938 = !DILocation(line: 2496, column: 11, scope: !4934)
!4939 = !DILocation(line: 2499, column: 34, scope: !4934)
!4940 = !DILocation(line: 2499, column: 49, scope: !4934)
!4941 = !DILocation(line: 2499, column: 11, scope: !4934)
!4942 = !DILocation(line: 2500, column: 11, scope: !4934)
!4943 = !DILocation(line: 2503, column: 11, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4841, file: !289, line: 2503, column: 11)
!4945 = !DILocation(line: 2503, column: 14, scope: !4944)
!4946 = !DILocation(line: 2503, column: 22, scope: !4944)
!4947 = !DILocation(line: 2503, column: 26, scope: !4944)
!4948 = !DILocation(line: 2503, column: 11, scope: !4841)
!4949 = !DILocation(line: 2505, column: 19, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4944, file: !289, line: 2504, column: 9)
!4951 = !DILocation(line: 2505, column: 11, scope: !4950)
!4952 = !DILocation(line: 2506, column: 25, scope: !4950)
!4953 = !DILocation(line: 2506, column: 35, scope: !4950)
!4954 = !DILocation(line: 2506, column: 45, scope: !4950)
!4955 = !DILocation(line: 2506, column: 11, scope: !4950)
!4956 = !DILocation(line: 2507, column: 9, scope: !4950)
!4957 = !DILocation(line: 2508, column: 15, scope: !4841)
!4958 = !DILocation(line: 2509, column: 5, scope: !4841)
!4959 = !DILocation(line: 2515, column: 20, scope: !4060)
!4960 = !DILocation(line: 2515, column: 23, scope: !4060)
!4961 = !DILocation(line: 2515, column: 34, scope: !4060)
!4962 = !DILocation(line: 2515, column: 37, scope: !4060)
!4963 = !DILocation(line: 2515, column: 44, scope: !4060)
!4964 = !DILocation(line: 2515, column: 54, scope: !4060)
!4965 = !DILocation(line: 2515, column: 17, scope: !4060)
!4966 = !DILocation(line: 2517, column: 6, scope: !4060)
!4967 = !DILocation(line: 2518, column: 9, scope: !4060)
!4968 = !DILocation(line: 2518, column: 12, scope: !4060)
!4969 = !DILocation(line: 2519, column: 11, scope: !4060)
!4970 = !DILocation(line: 2518, column: 6, scope: !4060)
!4971 = !DILocation(line: 2516, column: 23, scope: !4060)
!4972 = !DILocation(line: 2522, column: 14, scope: !4060)
!4973 = !DILocation(line: 2528, column: 35, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2528, column: 7)
!4975 = !DILocation(line: 2528, column: 45, scope: !4974)
!4976 = !DILocation(line: 2528, column: 55, scope: !4974)
!4977 = !DILocation(line: 2528, column: 65, scope: !4974)
!4978 = !DILocation(line: 2528, column: 74, scope: !4974)
!4979 = !DILocation(line: 2528, column: 9, scope: !4974)
!4980 = !DILocation(line: 2528, column: 7, scope: !4060)
!4981 = !DILocation(line: 2529, column: 5, scope: !4974)
!4982 = !DILocation(line: 2531, column: 7, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2531, column: 7)
!4984 = !DILocation(line: 2531, column: 7, scope: !4060)
!4985 = !DILocalVariable(name: "dir", scope: !4986, file: !289, line: 2533, type: !372)
!4986 = distinct !DILexicalBlock(scope: !4983, file: !289, line: 2532, column: 5)
!4987 = !DILocation(line: 2533, column: 24, scope: !4986)
!4988 = !DILocation(line: 2540, column: 33, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4986, file: !289, line: 2540, column: 11)
!4990 = !DILocation(line: 2540, column: 11, scope: !4989)
!4991 = !DILocation(line: 2540, column: 11, scope: !4986)
!4992 = !DILocation(line: 2542, column: 24, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4989, file: !289, line: 2541, column: 9)
!4994 = !DILocation(line: 2543, column: 18, scope: !4993)
!4995 = !DILocation(line: 2542, column: 11, scope: !4993)
!4996 = !DILocation(line: 2544, column: 11, scope: !4993)
!4997 = !DILocation(line: 2549, column: 13, scope: !4986)
!4998 = !DILocation(line: 2549, column: 11, scope: !4986)
!4999 = !DILocation(line: 2550, column: 21, scope: !4986)
!5000 = !DILocation(line: 2550, column: 7, scope: !4986)
!5001 = !DILocation(line: 2550, column: 12, scope: !4986)
!5002 = !DILocation(line: 2550, column: 19, scope: !4986)
!5003 = !DILocation(line: 2551, column: 25, scope: !4986)
!5004 = !DILocation(line: 2551, column: 7, scope: !4986)
!5005 = !DILocation(line: 2551, column: 12, scope: !4986)
!5006 = !DILocation(line: 2551, column: 16, scope: !4986)
!5007 = !DILocation(line: 2552, column: 25, scope: !4986)
!5008 = !DILocation(line: 2552, column: 7, scope: !4986)
!5009 = !DILocation(line: 2552, column: 12, scope: !4986)
!5010 = !DILocation(line: 2552, column: 16, scope: !4986)
!5011 = !DILocation(line: 2554, column: 11, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !4986, file: !289, line: 2554, column: 11)
!5013 = !DILocation(line: 2554, column: 19, scope: !5012)
!5014 = !DILocation(line: 2554, column: 23, scope: !5012)
!5015 = !DILocation(line: 2554, column: 11, scope: !4986)
!5016 = !DILocation(line: 2560, column: 22, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5018, file: !289, line: 2560, column: 15)
!5018 = distinct !DILexicalBlock(scope: !5012, file: !289, line: 2555, column: 9)
!5019 = !DILocation(line: 2560, column: 32, scope: !5017)
!5020 = !DILocation(line: 2560, column: 49, scope: !5017)
!5021 = !DILocation(line: 2560, column: 48, scope: !5017)
!5022 = !DILocation(line: 2560, column: 46, scope: !5017)
!5023 = !DILocation(line: 2560, column: 15, scope: !5017)
!5024 = !DILocation(line: 2560, column: 70, scope: !5017)
!5025 = !DILocation(line: 2560, column: 15, scope: !5018)
!5026 = !DILocation(line: 2562, column: 25, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5017, file: !289, line: 2561, column: 13)
!5028 = !DILocation(line: 2562, column: 32, scope: !5027)
!5029 = !DILocation(line: 2563, column: 22, scope: !5027)
!5030 = !DILocation(line: 2562, column: 15, scope: !5027)
!5031 = !DILocation(line: 2564, column: 15, scope: !5027)
!5032 = !DILocation(line: 2571, column: 22, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5018, file: !289, line: 2571, column: 15)
!5034 = !DILocation(line: 2571, column: 15, scope: !5033)
!5035 = !DILocation(line: 2571, column: 41, scope: !5033)
!5036 = !DILocation(line: 2571, column: 15, scope: !5018)
!5037 = !DILocation(line: 2573, column: 25, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5033, file: !289, line: 2572, column: 13)
!5039 = !DILocation(line: 2573, column: 32, scope: !5038)
!5040 = !DILocation(line: 2573, column: 53, scope: !5038)
!5041 = !DILocation(line: 2573, column: 15, scope: !5038)
!5042 = !DILocation(line: 2574, column: 15, scope: !5038)
!5043 = !DILocation(line: 2576, column: 28, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5033, file: !289, line: 2576, column: 20)
!5045 = !DILocation(line: 2576, column: 36, scope: !5044)
!5046 = !DILocation(line: 2576, column: 47, scope: !5044)
!5047 = !DILocation(line: 2576, column: 20, scope: !5033)
!5048 = !DILocation(line: 2580, column: 33, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5044, file: !289, line: 2577, column: 13)
!5050 = !DILocation(line: 2580, column: 24, scope: !5049)
!5051 = !DILocation(line: 2581, column: 32, scope: !5049)
!5052 = !DILocation(line: 2583, column: 27, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5049, file: !289, line: 2583, column: 19)
!5054 = !DILocation(line: 2583, column: 37, scope: !5053)
!5055 = !DILocation(line: 2583, column: 46, scope: !5053)
!5056 = !DILocation(line: 2583, column: 19, scope: !5053)
!5057 = !DILocation(line: 2583, column: 57, scope: !5053)
!5058 = !DILocation(line: 2583, column: 19, scope: !5049)
!5059 = !DILocation(line: 2585, column: 29, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5053, file: !289, line: 2584, column: 17)
!5061 = !DILocation(line: 2585, column: 36, scope: !5060)
!5062 = !DILocation(line: 2586, column: 26, scope: !5060)
!5063 = !DILocation(line: 2585, column: 19, scope: !5060)
!5064 = !DILocation(line: 2587, column: 19, scope: !5060)
!5065 = !DILocation(line: 2589, column: 13, scope: !5049)
!5066 = !DILocation(line: 2595, column: 17, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5018, file: !289, line: 2595, column: 15)
!5068 = !DILocation(line: 2595, column: 16, scope: !5067)
!5069 = !DILocation(line: 2595, column: 15, scope: !5018)
!5070 = !DILocation(line: 2597, column: 32, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5067, file: !289, line: 2596, column: 13)
!5072 = !DILocation(line: 2597, column: 49, scope: !5071)
!5073 = !DILocation(line: 2597, column: 64, scope: !5071)
!5074 = !DILocation(line: 2597, column: 15, scope: !5071)
!5075 = !DILocation(line: 2598, column: 16, scope: !5071)
!5076 = !DILocation(line: 2598, column: 55, scope: !5071)
!5077 = !DILocation(line: 2599, column: 13, scope: !5071)
!5078 = !DILocation(line: 2601, column: 15, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5018, file: !289, line: 2601, column: 15)
!5080 = !DILocation(line: 2601, column: 18, scope: !5079)
!5081 = !DILocation(line: 2601, column: 15, scope: !5018)
!5082 = !DILocation(line: 2603, column: 19, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5084, file: !289, line: 2603, column: 19)
!5084 = distinct !DILexicalBlock(scope: !5079, file: !289, line: 2602, column: 13)
!5085 = !DILocation(line: 2603, column: 22, scope: !5083)
!5086 = !DILocation(line: 2603, column: 19, scope: !5084)
!5087 = !DILocation(line: 2604, column: 25, scope: !5083)
!5088 = !DILocation(line: 2604, column: 54, scope: !5083)
!5089 = !DILocation(line: 2604, column: 17, scope: !5083)
!5090 = !DILocation(line: 2606, column: 31, scope: !5083)
!5091 = !DILocation(line: 2606, column: 41, scope: !5083)
!5092 = !DILocation(line: 2606, column: 17, scope: !5083)
!5093 = !DILocation(line: 2607, column: 13, scope: !5084)
!5094 = !DILocation(line: 2608, column: 9, scope: !5018)
!5095 = !DILocation(line: 2611, column: 31, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5012, file: !289, line: 2610, column: 9)
!5097 = !DILocation(line: 2616, column: 15, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5096, file: !289, line: 2616, column: 15)
!5099 = !DILocation(line: 2616, column: 18, scope: !5098)
!5100 = !DILocation(line: 2616, column: 39, scope: !5098)
!5101 = !DILocation(line: 2616, column: 42, scope: !5098)
!5102 = !DILocation(line: 2616, column: 45, scope: !5098)
!5103 = !DILocation(line: 2616, column: 15, scope: !5096)
!5104 = !DILocation(line: 2617, column: 42, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5098, file: !289, line: 2617, column: 17)
!5106 = !DILocation(line: 2617, column: 52, scope: !5105)
!5107 = !DILocation(line: 2617, column: 55, scope: !5105)
!5108 = !DILocation(line: 2618, column: 49, scope: !5105)
!5109 = !DILocation(line: 2617, column: 19, scope: !5105)
!5110 = !DILocation(line: 2617, column: 17, scope: !5098)
!5111 = !DILocation(line: 2620, column: 21, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5113, file: !289, line: 2620, column: 21)
!5113 = distinct !DILexicalBlock(scope: !5105, file: !289, line: 2619, column: 15)
!5114 = !DILocation(line: 2620, column: 24, scope: !5112)
!5115 = !DILocation(line: 2620, column: 21, scope: !5113)
!5116 = !DILocation(line: 2621, column: 19, scope: !5112)
!5117 = !DILocation(line: 2622, column: 15, scope: !5113)
!5118 = !DILocation(line: 2618, column: 50, scope: !5105)
!5119 = !DILocation(line: 2626, column: 11, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !4986, file: !289, line: 2626, column: 11)
!5121 = !DILocation(line: 2626, column: 14, scope: !5120)
!5122 = !DILocation(line: 2626, column: 30, scope: !5120)
!5123 = !DILocation(line: 2626, column: 33, scope: !5120)
!5124 = !DILocation(line: 2626, column: 40, scope: !5120)
!5125 = !DILocation(line: 2626, column: 43, scope: !5120)
!5126 = !DILocation(line: 2626, column: 51, scope: !5120)
!5127 = !DILocation(line: 2626, column: 68, scope: !5120)
!5128 = !DILocation(line: 2626, column: 58, scope: !5120)
!5129 = !DILocation(line: 2626, column: 11, scope: !4986)
!5130 = !DILocation(line: 2630, column: 9, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5120, file: !289, line: 2627, column: 9)
!5132 = !DILocation(line: 2637, column: 34, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5120, file: !289, line: 2632, column: 9)
!5134 = !DILocation(line: 2637, column: 44, scope: !5133)
!5135 = !DILocation(line: 2637, column: 54, scope: !5133)
!5136 = !DILocation(line: 2637, column: 72, scope: !5133)
!5137 = !DILocation(line: 2637, column: 77, scope: !5133)
!5138 = !DILocation(line: 2638, column: 34, scope: !5133)
!5139 = !DILocation(line: 2639, column: 34, scope: !5133)
!5140 = !DILocation(line: 2637, column: 24, scope: !5133)
!5141 = !DILocation(line: 2637, column: 22, scope: !5133)
!5142 = !DILocation(line: 2641, column: 5, scope: !4986)
!5143 = !DILocation(line: 2642, column: 12, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !4983, file: !289, line: 2642, column: 12)
!5145 = !DILocation(line: 2642, column: 15, scope: !5144)
!5146 = !DILocation(line: 2642, column: 12, scope: !4983)
!5147 = !DILocation(line: 2644, column: 23, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5144, file: !289, line: 2643, column: 5)
!5149 = !DILocation(line: 2645, column: 12, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5148, file: !289, line: 2645, column: 11)
!5151 = !DILocation(line: 2645, column: 11, scope: !5150)
!5152 = !DILocation(line: 2645, column: 21, scope: !5150)
!5153 = !DILocation(line: 2645, column: 11, scope: !5148)
!5154 = !DILocalVariable(name: "dot_sb", scope: !5155, file: !289, line: 2648, type: !335)
!5155 = distinct !DILexicalBlock(scope: !5150, file: !289, line: 2646, column: 9)
!5156 = !DILocation(line: 2648, column: 23, scope: !5155)
!5157 = !DILocalVariable(name: "dst_parent_sb", scope: !5155, file: !289, line: 2649, type: !335)
!5158 = !DILocation(line: 2649, column: 23, scope: !5155)
!5159 = !DILocalVariable(name: "dst_parent", scope: !5155, file: !289, line: 2650, type: !7)
!5160 = !DILocation(line: 2650, column: 17, scope: !5155)
!5161 = !DILocalVariable(name: "in_current_dir", scope: !5155, file: !289, line: 2651, type: !139)
!5162 = !DILocation(line: 2651, column: 16, scope: !5155)
!5163 = !DILocation(line: 2653, column: 34, scope: !5155)
!5164 = !DILocation(line: 2653, column: 24, scope: !5155)
!5165 = !DILocation(line: 2653, column: 22, scope: !5155)
!5166 = !DILocation(line: 2655, column: 29, scope: !5155)
!5167 = !DILocation(line: 2659, column: 29, scope: !5155)
!5168 = !DILocation(line: 2659, column: 32, scope: !5155)
!5169 = !DILocation(line: 2659, column: 52, scope: !5155)
!5170 = !DILocation(line: 2660, column: 29, scope: !5155)
!5171 = !DILocation(line: 2660, column: 38, scope: !5155)
!5172 = !DILocation(line: 2660, column: 32, scope: !5155)
!5173 = !DILocation(line: 2660, column: 66, scope: !5155)
!5174 = !DILocation(line: 2661, column: 29, scope: !5155)
!5175 = !DILocation(line: 2661, column: 32, scope: !5155)
!5176 = !DILocation(line: 0, scope: !5155)
!5177 = !DILocation(line: 2655, column: 26, scope: !5155)
!5178 = !DILocation(line: 2662, column: 17, scope: !5155)
!5179 = !DILocation(line: 2662, column: 11, scope: !5155)
!5180 = !DILocation(line: 2664, column: 17, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5155, file: !289, line: 2664, column: 15)
!5182 = !DILocation(line: 2664, column: 15, scope: !5155)
!5183 = !DILocation(line: 2667, column: 12, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5181, file: !289, line: 2665, column: 13)
!5185 = !DILocation(line: 2668, column: 22, scope: !5184)
!5186 = !DILocation(line: 2666, column: 15, scope: !5184)
!5187 = !DILocation(line: 2669, column: 15, scope: !5184)
!5188 = !DILocation(line: 2671, column: 9, scope: !5155)
!5189 = !DILocalVariable(name: "err", scope: !5148, file: !289, line: 2673, type: !5)
!5190 = !DILocation(line: 2673, column: 11, scope: !5148)
!5191 = !DILocation(line: 2673, column: 34, scope: !5148)
!5192 = !DILocation(line: 2673, column: 54, scope: !5148)
!5193 = !DILocation(line: 2674, column: 34, scope: !5148)
!5194 = !DILocation(line: 2674, column: 37, scope: !5148)
!5195 = !DILocation(line: 2673, column: 17, scope: !5148)
!5196 = !DILocation(line: 2675, column: 15, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5148, file: !289, line: 2675, column: 11)
!5198 = !DILocation(line: 2675, column: 13, scope: !5197)
!5199 = !DILocation(line: 2675, column: 11, scope: !5148)
!5200 = !DILocation(line: 2677, column: 21, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5197, file: !289, line: 2676, column: 9)
!5202 = !DILocation(line: 2677, column: 26, scope: !5201)
!5203 = !DILocation(line: 2678, column: 18, scope: !5201)
!5204 = !DILocation(line: 2678, column: 43, scope: !5201)
!5205 = !DILocation(line: 2677, column: 11, scope: !5201)
!5206 = !DILocation(line: 2679, column: 11, scope: !5201)
!5207 = !DILocation(line: 2681, column: 5, scope: !5148)
!5208 = !DILocation(line: 2696, column: 12, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5144, file: !289, line: 2696, column: 12)
!5210 = !DILocation(line: 2696, column: 15, scope: !5209)
!5211 = !DILocation(line: 2696, column: 12, scope: !5144)
!5212 = !DILocalVariable(name: "replace", scope: !5213, file: !289, line: 2700, type: !139)
!5213 = distinct !DILexicalBlock(scope: !5209, file: !289, line: 2699, column: 5)
!5214 = !DILocation(line: 2700, column: 12, scope: !5213)
!5215 = !DILocation(line: 2700, column: 23, scope: !5213)
!5216 = !DILocation(line: 2700, column: 26, scope: !5213)
!5217 = !DILocation(line: 2701, column: 23, scope: !5213)
!5218 = !DILocation(line: 2701, column: 26, scope: !5213)
!5219 = !DILocation(line: 2701, column: 29, scope: !5213)
!5220 = !DILocation(line: 2701, column: 41, scope: !5213)
!5221 = !DILocation(line: 2702, column: 31, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5213, file: !289, line: 2702, column: 11)
!5223 = !DILocation(line: 2702, column: 41, scope: !5222)
!5224 = !DILocation(line: 2702, column: 51, scope: !5222)
!5225 = !DILocation(line: 2702, column: 67, scope: !5222)
!5226 = !DILocation(line: 2702, column: 13, scope: !5222)
!5227 = !DILocation(line: 2702, column: 11, scope: !5213)
!5228 = !DILocation(line: 2703, column: 9, scope: !5222)
!5229 = !DILocation(line: 2704, column: 5, scope: !5213)
!5230 = !DILocation(line: 2705, column: 12, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5209, file: !289, line: 2705, column: 12)
!5232 = !DILocation(line: 2706, column: 12, scope: !5231)
!5233 = !DILocation(line: 2706, column: 16, scope: !5231)
!5234 = !DILocation(line: 2706, column: 19, scope: !5231)
!5235 = !DILocation(line: 2706, column: 35, scope: !5231)
!5236 = !DILocation(line: 2706, column: 39, scope: !5231)
!5237 = !DILocation(line: 2705, column: 12, scope: !5209)
!5238 = !DILocation(line: 2708, column: 25, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5231, file: !289, line: 2707, column: 5)
!5240 = !DILocation(line: 2718, column: 23, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5239, file: !289, line: 2718, column: 11)
!5242 = !DILocation(line: 2718, column: 33, scope: !5241)
!5243 = !DILocation(line: 2718, column: 43, scope: !5241)
!5244 = !DILocation(line: 2718, column: 46, scope: !5241)
!5245 = !DILocation(line: 2718, column: 60, scope: !5241)
!5246 = !DILocation(line: 2719, column: 23, scope: !5241)
!5247 = !DILocation(line: 2718, column: 13, scope: !5241)
!5248 = !DILocation(line: 2718, column: 11, scope: !5239)
!5249 = !DILocation(line: 2720, column: 9, scope: !5241)
!5250 = !DILocation(line: 2721, column: 5, scope: !5239)
!5251 = !DILocation(line: 2722, column: 12, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5231, file: !289, line: 2722, column: 12)
!5253 = !DILocation(line: 2722, column: 12, scope: !5231)
!5254 = !DILocation(line: 2728, column: 18, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5256, file: !289, line: 2728, column: 11)
!5256 = distinct !DILexicalBlock(scope: !5252, file: !289, line: 2723, column: 5)
!5257 = !DILocation(line: 2728, column: 28, scope: !5255)
!5258 = !DILocation(line: 2728, column: 40, scope: !5255)
!5259 = !DILocation(line: 2728, column: 39, scope: !5255)
!5260 = !DILocation(line: 2728, column: 37, scope: !5255)
!5261 = !DILocation(line: 2728, column: 11, scope: !5255)
!5262 = !DILocation(line: 2728, column: 64, scope: !5255)
!5263 = !DILocation(line: 2728, column: 11, scope: !5256)
!5264 = !DILocation(line: 2729, column: 21, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5255, file: !289, line: 2729, column: 13)
!5266 = !DILocation(line: 2729, column: 31, scope: !5265)
!5267 = !DILocation(line: 2729, column: 40, scope: !5265)
!5268 = !DILocation(line: 2729, column: 54, scope: !5265)
!5269 = !DILocation(line: 2729, column: 53, scope: !5265)
!5270 = !DILocation(line: 2729, column: 51, scope: !5265)
!5271 = !DILocation(line: 2729, column: 13, scope: !5265)
!5272 = !DILocation(line: 2729, column: 75, scope: !5265)
!5273 = !DILocation(line: 2729, column: 13, scope: !5255)
!5274 = !DILocation(line: 2731, column: 23, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5265, file: !289, line: 2730, column: 11)
!5276 = !DILocation(line: 2731, column: 30, scope: !5275)
!5277 = !DILocation(line: 2731, column: 58, scope: !5275)
!5278 = !DILocation(line: 2731, column: 13, scope: !5275)
!5279 = !DILocation(line: 2732, column: 13, scope: !5275)
!5280 = !DILocation(line: 2729, column: 78, scope: !5265)
!5281 = !DILocation(line: 2734, column: 5, scope: !5256)
!5282 = !DILocation(line: 2735, column: 12, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5252, file: !289, line: 2735, column: 12)
!5284 = !DILocation(line: 2735, column: 31, scope: !5283)
!5285 = !DILocation(line: 2735, column: 34, scope: !5283)
!5286 = !DILocation(line: 2735, column: 53, scope: !5283)
!5287 = !DILocation(line: 2735, column: 56, scope: !5283)
!5288 = !DILocation(line: 2735, column: 12, scope: !5252)
!5289 = !DILocation(line: 2737, column: 18, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5291, file: !289, line: 2737, column: 11)
!5291 = distinct !DILexicalBlock(scope: !5283, file: !289, line: 2736, column: 5)
!5292 = !DILocation(line: 2737, column: 28, scope: !5290)
!5293 = !DILocation(line: 2737, column: 40, scope: !5290)
!5294 = !DILocation(line: 2737, column: 39, scope: !5290)
!5295 = !DILocation(line: 2737, column: 37, scope: !5290)
!5296 = !DILocation(line: 2737, column: 68, scope: !5290)
!5297 = !DILocation(line: 2737, column: 11, scope: !5290)
!5298 = !DILocation(line: 2738, column: 11, scope: !5290)
!5299 = !DILocation(line: 2737, column: 11, scope: !5291)
!5300 = !DILocation(line: 2740, column: 21, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5290, file: !289, line: 2739, column: 9)
!5302 = !DILocation(line: 2740, column: 28, scope: !5301)
!5303 = !DILocation(line: 2741, column: 18, scope: !5301)
!5304 = !DILocation(line: 2740, column: 11, scope: !5301)
!5305 = !DILocation(line: 2742, column: 11, scope: !5301)
!5306 = !DILocation(line: 2744, column: 5, scope: !5291)
!5307 = !DILocation(line: 2745, column: 12, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5283, file: !289, line: 2745, column: 12)
!5309 = !DILocation(line: 2745, column: 12, scope: !5283)
!5310 = !DILocalVariable(name: "src_link_val", scope: !5311, file: !289, line: 2747, type: !7)
!5311 = distinct !DILexicalBlock(scope: !5308, file: !289, line: 2746, column: 5)
!5312 = !DILocation(line: 2747, column: 13, scope: !5311)
!5313 = !DILocation(line: 2747, column: 49, scope: !5311)
!5314 = !DILocation(line: 2747, column: 66, scope: !5311)
!5315 = !DILocation(line: 2747, column: 28, scope: !5311)
!5316 = !DILocation(line: 2748, column: 23, scope: !5311)
!5317 = !DILocation(line: 2749, column: 11, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5311, file: !289, line: 2749, column: 11)
!5319 = !DILocation(line: 2749, column: 24, scope: !5318)
!5320 = !DILocation(line: 2749, column: 11, scope: !5311)
!5321 = !DILocation(line: 2751, column: 21, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5318, file: !289, line: 2750, column: 9)
!5323 = !DILocation(line: 2751, column: 28, scope: !5322)
!5324 = !DILocation(line: 2752, column: 18, scope: !5322)
!5325 = !DILocation(line: 2751, column: 11, scope: !5322)
!5326 = !DILocation(line: 2753, column: 11, scope: !5322)
!5327 = !DILocalVariable(name: "symlink_err", scope: !5311, file: !289, line: 2756, type: !5)
!5328 = !DILocation(line: 2756, column: 11, scope: !5311)
!5329 = !DILocation(line: 2756, column: 42, scope: !5311)
!5330 = !DILocation(line: 2756, column: 66, scope: !5311)
!5331 = !DILocation(line: 2757, column: 42, scope: !5311)
!5332 = !DILocation(line: 2757, column: 45, scope: !5311)
!5333 = !DILocation(line: 2756, column: 25, scope: !5311)
!5334 = !DILocation(line: 2758, column: 15, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5311, file: !289, line: 2758, column: 11)
!5336 = !DILocation(line: 2758, column: 13, scope: !5335)
!5337 = !DILocation(line: 2758, column: 27, scope: !5335)
!5338 = !DILocation(line: 2758, column: 30, scope: !5335)
!5339 = !DILocation(line: 2758, column: 33, scope: !5335)
!5340 = !DILocation(line: 2758, column: 40, scope: !5335)
!5341 = !DILocation(line: 2758, column: 44, scope: !5335)
!5342 = !DILocation(line: 2758, column: 52, scope: !5335)
!5343 = !DILocation(line: 2758, column: 55, scope: !5335)
!5344 = !DILocation(line: 2759, column: 11, scope: !5335)
!5345 = !DILocation(line: 2759, column: 21, scope: !5335)
!5346 = !DILocation(line: 2759, column: 40, scope: !5335)
!5347 = !DILocation(line: 2759, column: 32, scope: !5335)
!5348 = !DILocation(line: 2759, column: 29, scope: !5335)
!5349 = !DILocation(line: 2758, column: 11, scope: !5311)
!5350 = !DILocalVariable(name: "dest_link_val", scope: !5351, file: !289, line: 2765, type: !7)
!5351 = distinct !DILexicalBlock(scope: !5335, file: !289, line: 2760, column: 9)
!5352 = !DILocation(line: 2765, column: 17, scope: !5351)
!5353 = !DILocation(line: 2766, column: 34, scope: !5351)
!5354 = !DILocation(line: 2766, column: 51, scope: !5351)
!5355 = !DILocation(line: 2766, column: 13, scope: !5351)
!5356 = !DILocation(line: 2767, column: 15, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5351, file: !289, line: 2767, column: 15)
!5358 = !DILocation(line: 2767, column: 15, scope: !5351)
!5359 = !DILocation(line: 2769, column: 19, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5361, file: !289, line: 2769, column: 19)
!5361 = distinct !DILexicalBlock(scope: !5357, file: !289, line: 2768, column: 13)
!5362 = !DILocation(line: 2769, column: 19, scope: !5361)
!5363 = !DILocation(line: 2770, column: 29, scope: !5360)
!5364 = !DILocation(line: 2770, column: 17, scope: !5360)
!5365 = !DILocation(line: 2771, column: 21, scope: !5361)
!5366 = !DILocation(line: 2771, column: 15, scope: !5361)
!5367 = !DILocation(line: 2772, column: 13, scope: !5361)
!5368 = !DILocation(line: 2773, column: 9, scope: !5351)
!5369 = !DILocation(line: 2774, column: 13, scope: !5311)
!5370 = !DILocation(line: 2774, column: 7, scope: !5311)
!5371 = !DILocation(line: 2775, column: 15, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5311, file: !289, line: 2775, column: 11)
!5373 = !DILocation(line: 2775, column: 13, scope: !5372)
!5374 = !DILocation(line: 2775, column: 11, scope: !5311)
!5375 = !DILocation(line: 2777, column: 21, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5372, file: !289, line: 2776, column: 9)
!5377 = !DILocation(line: 2777, column: 34, scope: !5376)
!5378 = !DILocation(line: 2778, column: 18, scope: !5376)
!5379 = !DILocation(line: 2777, column: 11, scope: !5376)
!5380 = !DILocation(line: 2779, column: 11, scope: !5376)
!5381 = !DILocation(line: 2782, column: 11, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5311, file: !289, line: 2782, column: 11)
!5383 = !DILocation(line: 2782, column: 14, scope: !5382)
!5384 = !DILocation(line: 2782, column: 11, scope: !5311)
!5385 = !DILocation(line: 2783, column: 9, scope: !5382)
!5386 = !DILocation(line: 2785, column: 11, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5311, file: !289, line: 2785, column: 11)
!5388 = !DILocation(line: 2785, column: 14, scope: !5387)
!5389 = !DILocation(line: 2785, column: 11, scope: !5311)
!5390 = !DILocation(line: 2790, column: 26, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !289, line: 2789, column: 15)
!5392 = distinct !DILexicalBlock(scope: !5387, file: !289, line: 2786, column: 9)
!5393 = !DILocation(line: 2790, column: 43, scope: !5391)
!5394 = !DILocation(line: 2790, column: 58, scope: !5391)
!5395 = !DILocation(line: 2790, column: 18, scope: !5391)
!5396 = !DILocation(line: 2790, column: 66, scope: !5391)
!5397 = !DILocation(line: 2791, column: 15, scope: !5391)
!5398 = !DILocation(line: 2791, column: 38, scope: !5391)
!5399 = !DILocation(line: 2791, column: 20, scope: !5391)
!5400 = !DILocation(line: 2789, column: 15, scope: !5392)
!5401 = !DILocation(line: 2793, column: 25, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5391, file: !289, line: 2792, column: 13)
!5403 = !DILocation(line: 2793, column: 32, scope: !5402)
!5404 = !DILocation(line: 2794, column: 22, scope: !5402)
!5405 = !DILocation(line: 2793, column: 15, scope: !5402)
!5406 = !DILocation(line: 2795, column: 19, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5402, file: !289, line: 2795, column: 19)
!5408 = !DILocation(line: 2795, column: 22, scope: !5407)
!5409 = !DILocation(line: 2795, column: 19, scope: !5402)
!5410 = !DILocation(line: 2796, column: 17, scope: !5407)
!5411 = !DILocation(line: 2797, column: 13, scope: !5402)
!5412 = !DILocation(line: 2805, column: 9, scope: !5392)
!5413 = !DILocation(line: 2806, column: 5, scope: !5311)
!5414 = !DILocation(line: 2809, column: 20, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5308, file: !289, line: 2808, column: 5)
!5416 = !DILocation(line: 2809, column: 51, scope: !5415)
!5417 = !DILocation(line: 2809, column: 7, scope: !5415)
!5418 = !DILocation(line: 2810, column: 7, scope: !5415)
!5419 = !DILocation(line: 2815, column: 8, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2815, column: 7)
!5421 = !DILocation(line: 2815, column: 16, scope: !5420)
!5422 = !DILocation(line: 2815, column: 20, scope: !5420)
!5423 = !DILocation(line: 2815, column: 23, scope: !5420)
!5424 = !DILocation(line: 2815, column: 39, scope: !5420)
!5425 = !DILocation(line: 2815, column: 43, scope: !5420)
!5426 = !DILocation(line: 2816, column: 7, scope: !5420)
!5427 = !DILocation(line: 2816, column: 11, scope: !5420)
!5428 = !DILocation(line: 2816, column: 14, scope: !5420)
!5429 = !DILocation(line: 2816, column: 35, scope: !5420)
!5430 = !DILocation(line: 2816, column: 38, scope: !5420)
!5431 = !DILocation(line: 2816, column: 41, scope: !5420)
!5432 = !DILocation(line: 2815, column: 7, scope: !4060)
!5433 = !DILocation(line: 2818, column: 36, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5435, file: !289, line: 2818, column: 11)
!5435 = distinct !DILexicalBlock(scope: !5420, file: !289, line: 2817, column: 5)
!5436 = !DILocation(line: 2818, column: 46, scope: !5434)
!5437 = !DILocation(line: 2818, column: 49, scope: !5434)
!5438 = !DILocation(line: 2819, column: 43, scope: !5434)
!5439 = !DILocation(line: 2818, column: 13, scope: !5434)
!5440 = !DILocation(line: 2818, column: 11, scope: !5435)
!5441 = !DILocation(line: 2821, column: 16, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5443, file: !289, line: 2821, column: 16)
!5443 = distinct !DILexicalBlock(scope: !5434, file: !289, line: 2820, column: 9)
!5444 = !DILocation(line: 2821, column: 19, scope: !5442)
!5445 = !DILocation(line: 2821, column: 16, scope: !5443)
!5446 = !DILocation(line: 2822, column: 14, scope: !5442)
!5447 = !DILocation(line: 2823, column: 9, scope: !5443)
!5448 = !DILocation(line: 2824, column: 5, scope: !5435)
!5449 = !DILocation(line: 2826, column: 7, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2826, column: 7)
!5451 = !DILocation(line: 2826, column: 24, scope: !5450)
!5452 = !DILocation(line: 2826, column: 27, scope: !5450)
!5453 = !DILocation(line: 2826, column: 30, scope: !5450)
!5454 = !DILocation(line: 2826, column: 7, scope: !4060)
!5455 = !DILocalVariable(name: "sb", scope: !5456, file: !289, line: 2830, type: !335)
!5456 = distinct !DILexicalBlock(scope: !5450, file: !289, line: 2827, column: 5)
!5457 = !DILocation(line: 2830, column: 19, scope: !5456)
!5458 = !DILocation(line: 2831, column: 18, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5456, file: !289, line: 2831, column: 11)
!5460 = !DILocation(line: 2831, column: 11, scope: !5459)
!5461 = !DILocation(line: 2831, column: 33, scope: !5459)
!5462 = !DILocation(line: 2831, column: 11, scope: !5456)
!5463 = !DILocation(line: 2832, column: 22, scope: !5459)
!5464 = !DILocation(line: 2832, column: 25, scope: !5459)
!5465 = !DILocation(line: 2832, column: 36, scope: !5459)
!5466 = !DILocation(line: 2832, column: 9, scope: !5459)
!5467 = !DILocation(line: 2833, column: 5, scope: !5456)
!5468 = !DILocation(line: 2837, column: 7, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2837, column: 7)
!5470 = !DILocation(line: 2837, column: 10, scope: !5469)
!5471 = !DILocation(line: 2837, column: 20, scope: !5469)
!5472 = !DILocation(line: 2837, column: 25, scope: !5469)
!5473 = !DILocation(line: 2837, column: 7, scope: !4060)
!5474 = !DILocation(line: 2840, column: 12, scope: !5469)
!5475 = !DILocation(line: 2840, column: 5, scope: !5469)
!5476 = !DILocation(line: 2842, column: 7, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2842, column: 7)
!5478 = !DILocation(line: 2842, column: 7, scope: !4060)
!5479 = !DILocation(line: 2843, column: 12, scope: !5477)
!5480 = !DILocation(line: 2843, column: 5, scope: !5477)
!5481 = !DILocation(line: 2857, column: 7, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2857, column: 7)
!5483 = !DILocation(line: 2857, column: 10, scope: !5482)
!5484 = !DILocation(line: 2857, column: 7, scope: !4060)
!5485 = !DILocalVariable(name: "timespec", scope: !5486, file: !289, line: 2859, type: !387)
!5486 = distinct !DILexicalBlock(scope: !5482, file: !289, line: 2858, column: 5)
!5487 = !DILocation(line: 2859, column: 23, scope: !5486)
!5488 = !DILocation(line: 2860, column: 7, scope: !5486)
!5489 = !DILocation(line: 2860, column: 21, scope: !5486)
!5490 = !DILocation(line: 2861, column: 7, scope: !5486)
!5491 = !DILocation(line: 2861, column: 21, scope: !5486)
!5492 = !DILocation(line: 2863, column: 12, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5486, file: !289, line: 2863, column: 11)
!5494 = !DILocation(line: 2864, column: 31, scope: !5493)
!5495 = !DILocation(line: 2864, column: 41, scope: !5493)
!5496 = !DILocation(line: 2864, column: 14, scope: !5493)
!5497 = !DILocation(line: 2865, column: 23, scope: !5493)
!5498 = !DILocation(line: 2865, column: 33, scope: !5493)
!5499 = !DILocation(line: 2865, column: 14, scope: !5493)
!5500 = !DILocation(line: 2866, column: 11, scope: !5493)
!5501 = !DILocation(line: 2863, column: 11, scope: !5486)
!5502 = !DILocation(line: 2868, column: 21, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5493, file: !289, line: 2867, column: 9)
!5504 = !DILocation(line: 2868, column: 28, scope: !5503)
!5505 = !DILocation(line: 2868, column: 58, scope: !5503)
!5506 = !DILocation(line: 2868, column: 11, scope: !5503)
!5507 = !DILocation(line: 2869, column: 15, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5503, file: !289, line: 2869, column: 15)
!5509 = !DILocation(line: 2869, column: 18, scope: !5508)
!5510 = !DILocation(line: 2869, column: 15, scope: !5503)
!5511 = !DILocation(line: 2870, column: 13, scope: !5508)
!5512 = !DILocation(line: 2871, column: 9, scope: !5503)
!5513 = !DILocation(line: 2872, column: 5, scope: !5486)
!5514 = !DILocation(line: 2875, column: 8, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2875, column: 7)
!5516 = !DILocation(line: 2875, column: 24, scope: !5515)
!5517 = !DILocation(line: 2875, column: 27, scope: !5515)
!5518 = !DILocation(line: 2875, column: 30, scope: !5515)
!5519 = !DILocation(line: 2876, column: 7, scope: !5515)
!5520 = !DILocation(line: 2876, column: 11, scope: !5515)
!5521 = !DILocation(line: 2876, column: 19, scope: !5515)
!5522 = !DILocation(line: 2876, column: 23, scope: !5515)
!5523 = !DILocation(line: 2875, column: 7, scope: !4060)
!5524 = !DILocation(line: 2878, column: 26, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5515, file: !289, line: 2877, column: 5)
!5526 = !DILocation(line: 2878, column: 29, scope: !5525)
!5527 = !DILocation(line: 2878, column: 52, scope: !5525)
!5528 = !DILocation(line: 2878, column: 15, scope: !5525)
!5529 = !DILocation(line: 2878, column: 7, scope: !5525)
!5530 = !DILocation(line: 2881, column: 11, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5525, file: !289, line: 2879, column: 9)
!5532 = !DILocation(line: 2884, column: 20, scope: !5531)
!5533 = !DILocation(line: 2885, column: 11, scope: !5531)
!5534 = !DILocation(line: 2887, column: 5, scope: !5525)
!5535 = !DILocation(line: 2890, column: 7, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2890, column: 7)
!5537 = !DILocation(line: 2890, column: 10, scope: !5536)
!5538 = !DILocation(line: 2890, column: 25, scope: !5536)
!5539 = !DILocation(line: 2890, column: 41, scope: !5536)
!5540 = !DILocation(line: 2890, column: 55, scope: !5536)
!5541 = !DILocation(line: 2890, column: 69, scope: !5536)
!5542 = !DILocation(line: 2890, column: 30, scope: !5536)
!5543 = !DILocation(line: 2891, column: 7, scope: !5536)
!5544 = !DILocation(line: 2891, column: 10, scope: !5536)
!5545 = !DILocation(line: 2891, column: 13, scope: !5536)
!5546 = !DILocation(line: 2890, column: 7, scope: !4060)
!5547 = !DILocation(line: 2892, column: 5, scope: !5536)
!5548 = !DILocation(line: 2895, column: 7, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2895, column: 7)
!5550 = !DILocation(line: 2895, column: 7, scope: !4060)
!5551 = !DILocation(line: 2896, column: 12, scope: !5549)
!5552 = !DILocation(line: 2896, column: 5, scope: !5549)
!5553 = !DILocation(line: 2898, column: 15, scope: !4060)
!5554 = !DILocation(line: 2898, column: 3, scope: !4060)
!5555 = !DILocation(line: 2900, column: 7, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2900, column: 7)
!5557 = !DILocation(line: 2900, column: 10, scope: !5556)
!5558 = !DILocation(line: 2900, column: 24, scope: !5556)
!5559 = !DILocation(line: 2900, column: 27, scope: !5556)
!5560 = !DILocation(line: 2900, column: 30, scope: !5556)
!5561 = !DILocation(line: 2900, column: 7, scope: !4060)
!5562 = !DILocation(line: 2902, column: 21, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5564, file: !289, line: 2902, column: 11)
!5564 = distinct !DILexicalBlock(scope: !5556, file: !289, line: 2901, column: 5)
!5565 = !DILocation(line: 2902, column: 35, scope: !5563)
!5566 = !DILocation(line: 2902, column: 49, scope: !5563)
!5567 = !DILocation(line: 2902, column: 11, scope: !5563)
!5568 = !DILocation(line: 2902, column: 59, scope: !5563)
!5569 = !DILocation(line: 2903, column: 11, scope: !5563)
!5570 = !DILocation(line: 2903, column: 14, scope: !5563)
!5571 = !DILocation(line: 2903, column: 17, scope: !5563)
!5572 = !DILocation(line: 2902, column: 11, scope: !5564)
!5573 = !DILocation(line: 2904, column: 9, scope: !5563)
!5574 = !DILocation(line: 2905, column: 5, scope: !5564)
!5575 = !DILocation(line: 2906, column: 12, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5556, file: !289, line: 2906, column: 12)
!5577 = !DILocation(line: 2906, column: 15, scope: !5576)
!5578 = !DILocation(line: 2906, column: 12, scope: !5556)
!5579 = !DILocation(line: 2908, column: 20, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5581, file: !289, line: 2908, column: 11)
!5581 = distinct !DILexicalBlock(scope: !5576, file: !289, line: 2907, column: 5)
!5582 = !DILocation(line: 2908, column: 34, scope: !5580)
!5583 = !DILocation(line: 2908, column: 37, scope: !5580)
!5584 = !DILocation(line: 2908, column: 11, scope: !5580)
!5585 = !DILocation(line: 2908, column: 43, scope: !5580)
!5586 = !DILocation(line: 2908, column: 11, scope: !5581)
!5587 = !DILocation(line: 2909, column: 9, scope: !5580)
!5588 = !DILocation(line: 2910, column: 5, scope: !5581)
!5589 = !DILocation(line: 2911, column: 12, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5576, file: !289, line: 2911, column: 12)
!5591 = !DILocation(line: 2911, column: 15, scope: !5590)
!5592 = !DILocation(line: 2911, column: 41, scope: !5590)
!5593 = !DILocation(line: 2911, column: 44, scope: !5590)
!5594 = !DILocation(line: 2911, column: 12, scope: !5576)
!5595 = !DILocalVariable(name: "default_permissions", scope: !5596, file: !289, line: 2913, type: !5)
!5596 = distinct !DILexicalBlock(scope: !5590, file: !289, line: 2912, column: 5)
!5597 = !DILocation(line: 2913, column: 11, scope: !5596)
!5598 = !DILocation(line: 2913, column: 33, scope: !5596)
!5599 = !DILocation(line: 2913, column: 52, scope: !5596)
!5600 = !DILocation(line: 2913, column: 55, scope: !5596)
!5601 = !DILocation(line: 2915, column: 20, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5596, file: !289, line: 2915, column: 11)
!5603 = !DILocation(line: 2915, column: 34, scope: !5602)
!5604 = !DILocation(line: 2915, column: 57, scope: !5602)
!5605 = !DILocation(line: 2915, column: 56, scope: !5602)
!5606 = !DILocation(line: 2915, column: 54, scope: !5602)
!5607 = !DILocation(line: 2915, column: 11, scope: !5602)
!5608 = !DILocation(line: 2915, column: 74, scope: !5602)
!5609 = !DILocation(line: 2915, column: 11, scope: !5596)
!5610 = !DILocation(line: 2916, column: 9, scope: !5602)
!5611 = !DILocation(line: 2917, column: 5, scope: !5596)
!5612 = !DILocation(line: 2920, column: 11, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5614, file: !289, line: 2920, column: 11)
!5614 = distinct !DILexicalBlock(scope: !5590, file: !289, line: 2919, column: 5)
!5615 = !DILocation(line: 2920, column: 11, scope: !5614)
!5616 = !DILocation(line: 2922, column: 36, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5613, file: !289, line: 2921, column: 9)
!5618 = !DILocation(line: 2922, column: 34, scope: !5617)
!5619 = !DILocation(line: 2922, column: 31, scope: !5617)
!5620 = !DILocation(line: 2924, column: 15, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5617, file: !289, line: 2924, column: 15)
!5622 = !DILocation(line: 2924, column: 35, scope: !5621)
!5623 = !DILocation(line: 2924, column: 39, scope: !5621)
!5624 = !DILocation(line: 2924, column: 15, scope: !5617)
!5625 = !DILocation(line: 2932, column: 19, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5627, file: !289, line: 2932, column: 19)
!5627 = distinct !DILexicalBlock(scope: !5621, file: !289, line: 2925, column: 13)
!5628 = !DILocation(line: 2932, column: 27, scope: !5626)
!5629 = !DILocation(line: 2932, column: 37, scope: !5626)
!5630 = !DILocation(line: 2932, column: 30, scope: !5626)
!5631 = !DILocation(line: 2932, column: 56, scope: !5626)
!5632 = !DILocation(line: 2932, column: 19, scope: !5627)
!5633 = !DILocation(line: 2934, column: 29, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5626, file: !289, line: 2933, column: 17)
!5635 = !DILocation(line: 2934, column: 36, scope: !5634)
!5636 = !DILocation(line: 2934, column: 57, scope: !5634)
!5637 = !DILocation(line: 2934, column: 19, scope: !5634)
!5638 = !DILocation(line: 2935, column: 19, scope: !5634)
!5639 = !DILocation(line: 2937, column: 33, scope: !5627)
!5640 = !DILocation(line: 2937, column: 24, scope: !5627)
!5641 = !DILocation(line: 2938, column: 19, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5627, file: !289, line: 2938, column: 19)
!5643 = !DILocation(line: 2938, column: 42, scope: !5642)
!5644 = !DILocation(line: 2938, column: 41, scope: !5642)
!5645 = !DILocation(line: 2938, column: 39, scope: !5642)
!5646 = !DILocation(line: 2938, column: 19, scope: !5627)
!5647 = !DILocation(line: 2939, column: 34, scope: !5642)
!5648 = !DILocation(line: 2939, column: 17, scope: !5642)
!5649 = !DILocation(line: 2940, column: 13, scope: !5627)
!5650 = !DILocation(line: 2941, column: 9, scope: !5617)
!5651 = !DILocation(line: 2943, column: 11, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5614, file: !289, line: 2943, column: 11)
!5653 = !DILocation(line: 2943, column: 11, scope: !5614)
!5654 = !DILocation(line: 2945, column: 23, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5656, file: !289, line: 2945, column: 15)
!5656 = distinct !DILexicalBlock(scope: !5652, file: !289, line: 2944, column: 9)
!5657 = !DILocation(line: 2945, column: 33, scope: !5655)
!5658 = !DILocation(line: 2945, column: 44, scope: !5655)
!5659 = !DILocation(line: 2945, column: 42, scope: !5655)
!5660 = !DILocation(line: 2945, column: 15, scope: !5655)
!5661 = !DILocation(line: 2945, column: 65, scope: !5655)
!5662 = !DILocation(line: 2945, column: 15, scope: !5656)
!5663 = !DILocation(line: 2947, column: 25, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5655, file: !289, line: 2946, column: 13)
!5665 = !DILocation(line: 2947, column: 32, scope: !5664)
!5666 = !DILocation(line: 2948, column: 22, scope: !5664)
!5667 = !DILocation(line: 2947, column: 15, scope: !5664)
!5668 = !DILocation(line: 2949, column: 19, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5664, file: !289, line: 2949, column: 19)
!5670 = !DILocation(line: 2949, column: 22, scope: !5669)
!5671 = !DILocation(line: 2949, column: 19, scope: !5664)
!5672 = !DILocation(line: 2950, column: 17, scope: !5669)
!5673 = !DILocation(line: 2951, column: 13, scope: !5664)
!5674 = !DILocation(line: 2952, column: 9, scope: !5656)
!5675 = !DILocation(line: 2955, column: 10, scope: !4060)
!5676 = !DILocation(line: 2955, column: 3, scope: !4060)
!5677 = !DILabel(scope: !4060, name: "un_backup", file: !289, line: 2957)
!5678 = !DILocation(line: 2957, column: 1, scope: !4060)
!5679 = !DILocation(line: 2959, column: 7, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2959, column: 7)
!5681 = !DILocation(line: 2959, column: 10, scope: !5680)
!5682 = !DILocation(line: 2959, column: 7, scope: !4060)
!5683 = !DILocation(line: 2960, column: 5, scope: !5680)
!5684 = !DILocation(line: 2968, column: 7, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2968, column: 7)
!5686 = !DILocation(line: 2968, column: 20, scope: !5685)
!5687 = !DILocation(line: 2968, column: 7, scope: !4060)
!5688 = !DILocation(line: 2969, column: 28, scope: !5685)
!5689 = !DILocation(line: 2969, column: 43, scope: !5685)
!5690 = !DILocation(line: 2969, column: 5, scope: !5685)
!5691 = !DILocation(line: 2971, column: 7, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !4060, file: !289, line: 2971, column: 7)
!5693 = !DILocation(line: 2971, column: 7, scope: !4060)
!5694 = !DILocation(line: 2973, column: 19, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5696, file: !289, line: 2973, column: 11)
!5696 = distinct !DILexicalBlock(scope: !5692, file: !289, line: 2972, column: 5)
!5697 = !DILocation(line: 2973, column: 31, scope: !5695)
!5698 = !DILocation(line: 2973, column: 11, scope: !5695)
!5699 = !DILocation(line: 2973, column: 41, scope: !5695)
!5700 = !DILocation(line: 2973, column: 11, scope: !5696)
!5701 = !DILocation(line: 2974, column: 19, scope: !5695)
!5702 = !DILocation(line: 2974, column: 26, scope: !5695)
!5703 = !DILocation(line: 2974, column: 52, scope: !5695)
!5704 = !DILocation(line: 2974, column: 9, scope: !5695)
!5705 = !DILocation(line: 2977, column: 15, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5707, file: !289, line: 2977, column: 15)
!5707 = distinct !DILexicalBlock(scope: !5695, file: !289, line: 2976, column: 9)
!5708 = !DILocation(line: 2977, column: 18, scope: !5706)
!5709 = !DILocation(line: 2977, column: 15, scope: !5707)
!5710 = !DILocation(line: 2978, column: 21, scope: !5706)
!5711 = !DILocation(line: 2979, column: 21, scope: !5706)
!5712 = !DILocation(line: 2979, column: 48, scope: !5706)
!5713 = !DILocation(line: 2978, column: 13, scope: !5706)
!5714 = !DILocation(line: 2981, column: 5, scope: !5696)
!5715 = !DILocation(line: 2982, column: 3, scope: !4060)
!5716 = !DILocation(line: 2983, column: 1, scope: !4060)
!5717 = distinct !DISubprogram(name: "follow_fstatat", scope: !289, file: !289, line: 158, type: !5718, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!5718 = !DISubroutineType(types: !5719)
!5719 = !{!5, !5, !113, !334, !5}
!5720 = !DILocalVariable(name: "dirfd", arg: 1, scope: !5717, file: !289, line: 158, type: !5)
!5721 = !DILocation(line: 158, column: 21, scope: !5717)
!5722 = !DILocalVariable(name: "filename", arg: 2, scope: !5717, file: !289, line: 158, type: !113)
!5723 = !DILocation(line: 158, column: 40, scope: !5717)
!5724 = !DILocalVariable(name: "st", arg: 3, scope: !5717, file: !289, line: 158, type: !334)
!5725 = !DILocation(line: 158, column: 63, scope: !5717)
!5726 = !DILocalVariable(name: "flags", arg: 4, scope: !5717, file: !289, line: 158, type: !5)
!5727 = !DILocation(line: 158, column: 71, scope: !5717)
!5728 = !DILocalVariable(name: "result", scope: !5717, file: !289, line: 160, type: !5)
!5729 = !DILocation(line: 160, column: 7, scope: !5717)
!5730 = !DILocation(line: 160, column: 25, scope: !5717)
!5731 = !DILocation(line: 160, column: 32, scope: !5717)
!5732 = !DILocation(line: 160, column: 42, scope: !5717)
!5733 = !DILocation(line: 160, column: 46, scope: !5717)
!5734 = !DILocation(line: 160, column: 16, scope: !5717)
!5735 = !DILocation(line: 183, column: 10, scope: !5717)
!5736 = !DILocation(line: 183, column: 3, scope: !5717)
!5737 = distinct !DISubprogram(name: "should_dereference", scope: !289, file: !289, line: 1840, type: !5738, scopeLine: 1841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!5738 = !DISubroutineType(types: !5739)
!5739 = !{!139, !3751, !139}
!5740 = !DILocalVariable(name: "x", arg: 1, scope: !5737, file: !289, line: 1840, type: !3751)
!5741 = !DILocation(line: 1840, column: 46, scope: !5737)
!5742 = !DILocalVariable(name: "command_line_arg", arg: 2, scope: !5737, file: !289, line: 1840, type: !139)
!5743 = !DILocation(line: 1840, column: 54, scope: !5737)
!5744 = !DILocation(line: 1842, column: 10, scope: !5737)
!5745 = !DILocation(line: 1842, column: 13, scope: !5737)
!5746 = !DILocation(line: 1842, column: 25, scope: !5737)
!5747 = !DILocation(line: 1843, column: 10, scope: !5737)
!5748 = !DILocation(line: 1843, column: 14, scope: !5737)
!5749 = !DILocation(line: 1843, column: 17, scope: !5737)
!5750 = !DILocation(line: 1843, column: 29, scope: !5737)
!5751 = !DILocation(line: 1844, column: 14, scope: !5737)
!5752 = !DILocation(line: 1844, column: 17, scope: !5737)
!5753 = !DILocation(line: 0, scope: !5737)
!5754 = !DILocation(line: 1842, column: 3, scope: !5737)
!5755 = distinct !DISubprogram(name: "same_file_ok", scope: !289, file: !289, line: 1464, type: !5756, scopeLine: 1467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!5756 = !DISubroutineType(types: !5757)
!5757 = !{!139, !113, !388, !113, !388, !3751, !4020}
!5758 = !DILocalVariable(name: "src_name", arg: 1, scope: !5755, file: !289, line: 1464, type: !113)
!5759 = !DILocation(line: 1464, column: 27, scope: !5755)
!5760 = !DILocalVariable(name: "src_sb", arg: 2, scope: !5755, file: !289, line: 1464, type: !388)
!5761 = !DILocation(line: 1464, column: 56, scope: !5755)
!5762 = !DILocalVariable(name: "dst_name", arg: 3, scope: !5755, file: !289, line: 1465, type: !113)
!5763 = !DILocation(line: 1465, column: 27, scope: !5755)
!5764 = !DILocalVariable(name: "dst_sb", arg: 4, scope: !5755, file: !289, line: 1465, type: !388)
!5765 = !DILocation(line: 1465, column: 56, scope: !5755)
!5766 = !DILocalVariable(name: "x", arg: 5, scope: !5755, file: !289, line: 1466, type: !3751)
!5767 = !DILocation(line: 1466, column: 40, scope: !5755)
!5768 = !DILocalVariable(name: "return_now", arg: 6, scope: !5755, file: !289, line: 1466, type: !4020)
!5769 = !DILocation(line: 1466, column: 49, scope: !5755)
!5770 = !DILocalVariable(name: "src_sb_link", scope: !5755, file: !289, line: 1468, type: !388)
!5771 = !DILocation(line: 1468, column: 22, scope: !5755)
!5772 = !DILocalVariable(name: "dst_sb_link", scope: !5755, file: !289, line: 1469, type: !388)
!5773 = !DILocation(line: 1469, column: 22, scope: !5755)
!5774 = !DILocalVariable(name: "tmp_dst_sb", scope: !5755, file: !289, line: 1470, type: !335)
!5775 = !DILocation(line: 1470, column: 15, scope: !5755)
!5776 = !DILocalVariable(name: "tmp_src_sb", scope: !5755, file: !289, line: 1471, type: !335)
!5777 = !DILocation(line: 1471, column: 15, scope: !5755)
!5778 = !DILocalVariable(name: "same_link", scope: !5755, file: !289, line: 1473, type: !139)
!5779 = !DILocation(line: 1473, column: 8, scope: !5755)
!5780 = !DILocalVariable(name: "same", scope: !5755, file: !289, line: 1474, type: !139)
!5781 = !DILocation(line: 1474, column: 8, scope: !5755)
!5782 = !DILocation(line: 1474, column: 15, scope: !5755)
!5783 = !DILocation(line: 0, scope: !5755)
!5784 = !DILocation(line: 1476, column: 4, scope: !5755)
!5785 = !DILocation(line: 1476, column: 15, scope: !5755)
!5786 = !DILocation(line: 1483, column: 7, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5755, file: !289, line: 1483, column: 7)
!5788 = !DILocation(line: 1483, column: 12, scope: !5787)
!5789 = !DILocation(line: 1483, column: 15, scope: !5787)
!5790 = !DILocation(line: 1483, column: 18, scope: !5787)
!5791 = !DILocation(line: 1483, column: 7, scope: !5755)
!5792 = !DILocation(line: 1485, column: 8, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5787, file: !289, line: 1484, column: 5)
!5794 = !DILocation(line: 1485, column: 19, scope: !5793)
!5795 = !DILocation(line: 1486, column: 7, scope: !5793)
!5796 = !DILocation(line: 1489, column: 7, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5755, file: !289, line: 1489, column: 7)
!5798 = !DILocation(line: 1489, column: 10, scope: !5797)
!5799 = !DILocation(line: 1489, column: 22, scope: !5797)
!5800 = !DILocation(line: 1489, column: 7, scope: !5755)
!5801 = !DILocation(line: 1491, column: 19, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5797, file: !289, line: 1490, column: 5)
!5803 = !DILocation(line: 1491, column: 17, scope: !5802)
!5804 = !DILocation(line: 1496, column: 11, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5802, file: !289, line: 1496, column: 11)
!5806 = !DILocation(line: 1496, column: 37, scope: !5805)
!5807 = !DILocation(line: 1496, column: 40, scope: !5805)
!5808 = !DILocation(line: 1496, column: 11, scope: !5802)
!5809 = !DILocalVariable(name: "sn", scope: !5810, file: !289, line: 1498, type: !139)
!5810 = distinct !DILexicalBlock(scope: !5805, file: !289, line: 1497, column: 9)
!5811 = !DILocation(line: 1498, column: 16, scope: !5810)
!5812 = !DILocation(line: 1498, column: 32, scope: !5810)
!5813 = !DILocation(line: 1498, column: 42, scope: !5810)
!5814 = !DILocation(line: 1498, column: 21, scope: !5810)
!5815 = !DILocation(line: 1499, column: 18, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5810, file: !289, line: 1499, column: 16)
!5817 = !DILocation(line: 1499, column: 16, scope: !5810)
!5818 = !DILocation(line: 1502, column: 19, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5820, file: !289, line: 1502, column: 19)
!5820 = distinct !DILexicalBlock(scope: !5816, file: !289, line: 1500, column: 13)
!5821 = !DILocation(line: 1502, column: 22, scope: !5819)
!5822 = !DILocation(line: 1502, column: 34, scope: !5819)
!5823 = !DILocation(line: 1502, column: 19, scope: !5820)
!5824 = !DILocation(line: 1503, column: 17, scope: !5819)
!5825 = !DILocation(line: 1509, column: 19, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5820, file: !289, line: 1509, column: 19)
!5827 = !DILocation(line: 1509, column: 19, scope: !5820)
!5828 = !DILocation(line: 1511, column: 20, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5826, file: !289, line: 1510, column: 17)
!5830 = !DILocation(line: 1511, column: 31, scope: !5829)
!5831 = !DILocation(line: 1512, column: 28, scope: !5829)
!5832 = !DILocation(line: 1512, column: 31, scope: !5829)
!5833 = !DILocation(line: 1512, column: 26, scope: !5829)
!5834 = !DILocation(line: 1512, column: 19, scope: !5829)
!5835 = !DILocation(line: 1514, column: 13, scope: !5820)
!5836 = !DILocation(line: 1516, column: 20, scope: !5810)
!5837 = !DILocation(line: 1516, column: 18, scope: !5810)
!5838 = !DILocation(line: 1516, column: 11, scope: !5810)
!5839 = !DILocation(line: 1519, column: 21, scope: !5802)
!5840 = !DILocation(line: 1519, column: 19, scope: !5802)
!5841 = !DILocation(line: 1520, column: 21, scope: !5802)
!5842 = !DILocation(line: 1520, column: 19, scope: !5802)
!5843 = !DILocation(line: 1521, column: 5, scope: !5802)
!5844 = !DILocation(line: 1524, column: 12, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5846, file: !289, line: 1524, column: 11)
!5846 = distinct !DILexicalBlock(scope: !5797, file: !289, line: 1523, column: 5)
!5847 = !DILocation(line: 1524, column: 11, scope: !5846)
!5848 = !DILocation(line: 1525, column: 9, scope: !5845)
!5849 = !DILocation(line: 1527, column: 18, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5846, file: !289, line: 1527, column: 11)
!5851 = !DILocation(line: 1527, column: 11, scope: !5850)
!5852 = !DILocation(line: 1527, column: 41, scope: !5850)
!5853 = !DILocation(line: 1528, column: 11, scope: !5850)
!5854 = !DILocation(line: 1528, column: 21, scope: !5850)
!5855 = !DILocation(line: 1528, column: 14, scope: !5850)
!5856 = !DILocation(line: 1528, column: 44, scope: !5850)
!5857 = !DILocation(line: 1527, column: 11, scope: !5846)
!5858 = !DILocation(line: 1529, column: 9, scope: !5850)
!5859 = !DILocation(line: 1531, column: 19, scope: !5846)
!5860 = !DILocation(line: 1532, column: 19, scope: !5846)
!5861 = !DILocation(line: 1534, column: 19, scope: !5846)
!5862 = !DILocation(line: 0, scope: !5846)
!5863 = !DILocation(line: 1534, column: 17, scope: !5846)
!5864 = !DILocation(line: 1541, column: 11, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5846, file: !289, line: 1541, column: 11)
!5866 = !DILocation(line: 1541, column: 42, scope: !5865)
!5867 = !DILocation(line: 1541, column: 45, scope: !5865)
!5868 = !DILocation(line: 1542, column: 11, scope: !5865)
!5869 = !DILocation(line: 1542, column: 14, scope: !5865)
!5870 = !DILocation(line: 1542, column: 17, scope: !5865)
!5871 = !DILocation(line: 1541, column: 11, scope: !5846)
!5872 = !DILocation(line: 1543, column: 9, scope: !5865)
!5873 = !DILocation(line: 1551, column: 7, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5755, file: !289, line: 1551, column: 7)
!5875 = !DILocation(line: 1551, column: 10, scope: !5874)
!5876 = !DILocation(line: 1551, column: 22, scope: !5874)
!5877 = !DILocation(line: 1551, column: 7, scope: !5755)
!5878 = !DILocation(line: 1553, column: 12, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5880, file: !289, line: 1553, column: 11)
!5880 = distinct !DILexicalBlock(scope: !5874, file: !289, line: 1552, column: 5)
!5881 = !DILocation(line: 1553, column: 11, scope: !5880)
!5882 = !DILocation(line: 1571, column: 18, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5884, file: !289, line: 1571, column: 16)
!5884 = distinct !DILexicalBlock(scope: !5879, file: !289, line: 1554, column: 9)
!5885 = !DILocation(line: 1571, column: 21, scope: !5883)
!5886 = !DILocation(line: 1572, column: 16, scope: !5883)
!5887 = !DILocation(line: 1572, column: 19, scope: !5883)
!5888 = !DILocation(line: 1572, column: 22, scope: !5883)
!5889 = !DILocation(line: 1572, column: 34, scope: !5883)
!5890 = !DILocation(line: 1573, column: 16, scope: !5883)
!5891 = !DILocation(line: 1573, column: 19, scope: !5883)
!5892 = !DILocation(line: 1574, column: 16, scope: !5883)
!5893 = !DILocation(line: 1574, column: 21, scope: !5883)
!5894 = !DILocation(line: 1571, column: 16, scope: !5884)
!5895 = !DILocation(line: 1575, column: 13, scope: !5883)
!5896 = !DILocation(line: 1577, column: 11, scope: !5884)
!5897 = !DILocation(line: 1581, column: 27, scope: !5880)
!5898 = !DILocation(line: 1581, column: 37, scope: !5880)
!5899 = !DILocation(line: 1581, column: 16, scope: !5880)
!5900 = !DILocation(line: 1581, column: 14, scope: !5880)
!5901 = !DILocation(line: 1581, column: 7, scope: !5880)
!5902 = !DILocation(line: 1601, column: 7, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5755, file: !289, line: 1601, column: 7)
!5904 = !DILocation(line: 1601, column: 10, scope: !5903)
!5905 = !DILocation(line: 1601, column: 20, scope: !5903)
!5906 = !DILocation(line: 1601, column: 23, scope: !5903)
!5907 = !DILocation(line: 1601, column: 26, scope: !5903)
!5908 = !DILocation(line: 1601, column: 7, scope: !5755)
!5909 = !DILocation(line: 1607, column: 11, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5911, file: !289, line: 1607, column: 11)
!5911 = distinct !DILexicalBlock(scope: !5903, file: !289, line: 1602, column: 5)
!5912 = !DILocation(line: 1607, column: 11, scope: !5911)
!5913 = !DILocation(line: 1608, column: 9, scope: !5910)
!5914 = !DILocation(line: 1612, column: 11, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5911, file: !289, line: 1612, column: 11)
!5916 = !DILocation(line: 1613, column: 11, scope: !5915)
!5917 = !DILocation(line: 1613, column: 18, scope: !5915)
!5918 = !DILocation(line: 1613, column: 31, scope: !5915)
!5919 = !DILocation(line: 1613, column: 16, scope: !5915)
!5920 = !DILocation(line: 1614, column: 11, scope: !5915)
!5921 = !DILocation(line: 1614, column: 27, scope: !5915)
!5922 = !DILocation(line: 1614, column: 37, scope: !5915)
!5923 = !DILocation(line: 1614, column: 16, scope: !5915)
!5924 = !DILocation(line: 1612, column: 11, scope: !5911)
!5925 = !DILocation(line: 1615, column: 18, scope: !5915)
!5926 = !DILocation(line: 1615, column: 21, scope: !5915)
!5927 = !DILocation(line: 1615, column: 16, scope: !5915)
!5928 = !DILocation(line: 1615, column: 9, scope: !5915)
!5929 = !DILocation(line: 1616, column: 5, scope: !5911)
!5930 = !DILocation(line: 1620, column: 8, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5755, file: !289, line: 1620, column: 7)
!5932 = !DILocation(line: 1620, column: 39, scope: !5931)
!5933 = !DILocation(line: 1620, column: 43, scope: !5931)
!5934 = !DILocation(line: 1620, column: 7, scope: !5755)
!5935 = !DILocation(line: 1622, column: 12, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5937, file: !289, line: 1622, column: 11)
!5937 = distinct !DILexicalBlock(scope: !5931, file: !289, line: 1621, column: 5)
!5938 = !DILocation(line: 1622, column: 11, scope: !5937)
!5939 = !DILocation(line: 1623, column: 9, scope: !5936)
!5940 = !DILocation(line: 1626, column: 11, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5937, file: !289, line: 1626, column: 11)
!5942 = !DILocation(line: 1626, column: 14, scope: !5941)
!5943 = !DILocation(line: 1626, column: 11, scope: !5937)
!5944 = !DILocation(line: 1628, column: 12, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5941, file: !289, line: 1627, column: 9)
!5946 = !DILocation(line: 1628, column: 23, scope: !5945)
!5947 = !DILocation(line: 1629, column: 11, scope: !5945)
!5948 = !DILocation(line: 1631, column: 5, scope: !5937)
!5949 = !DILocation(line: 1653, column: 7, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5755, file: !289, line: 1653, column: 7)
!5951 = !DILocation(line: 1653, column: 10, scope: !5950)
!5952 = !DILocation(line: 1654, column: 7, scope: !5950)
!5953 = !DILocation(line: 1654, column: 10, scope: !5950)
!5954 = !DILocation(line: 1655, column: 7, scope: !5950)
!5955 = !DILocation(line: 1655, column: 14, scope: !5950)
!5956 = !DILocation(line: 1655, column: 27, scope: !5950)
!5957 = !DILocation(line: 1655, column: 12, scope: !5950)
!5958 = !DILocation(line: 1653, column: 7, scope: !5755)
!5959 = !DILocalVariable(name: "abs_src", scope: !5960, file: !289, line: 1657, type: !7)
!5960 = distinct !DILexicalBlock(scope: !5950, file: !289, line: 1656, column: 5)
!5961 = !DILocation(line: 1657, column: 13, scope: !5960)
!5962 = !DILocation(line: 1657, column: 47, scope: !5960)
!5963 = !DILocation(line: 1657, column: 23, scope: !5960)
!5964 = !DILocation(line: 1658, column: 11, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5960, file: !289, line: 1658, column: 11)
!5966 = !DILocation(line: 1658, column: 11, scope: !5960)
!5967 = !DILocalVariable(name: "result", scope: !5968, file: !289, line: 1660, type: !139)
!5968 = distinct !DILexicalBlock(scope: !5965, file: !289, line: 1659, column: 9)
!5969 = !DILocation(line: 1660, column: 16, scope: !5968)
!5970 = !DILocation(line: 1660, column: 38, scope: !5968)
!5971 = !DILocation(line: 1660, column: 47, scope: !5968)
!5972 = !DILocation(line: 1660, column: 27, scope: !5968)
!5973 = !DILocation(line: 1660, column: 25, scope: !5968)
!5974 = !DILocation(line: 1661, column: 17, scope: !5968)
!5975 = !DILocation(line: 1661, column: 11, scope: !5968)
!5976 = !DILocation(line: 1662, column: 18, scope: !5968)
!5977 = !DILocation(line: 1662, column: 11, scope: !5968)
!5978 = !DILocation(line: 1664, column: 5, scope: !5960)
!5979 = !DILocation(line: 1667, column: 7, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5755, file: !289, line: 1667, column: 7)
!5981 = !DILocation(line: 1667, column: 10, scope: !5980)
!5982 = !DILocation(line: 1667, column: 24, scope: !5980)
!5983 = !DILocation(line: 1667, column: 27, scope: !5980)
!5984 = !DILocation(line: 1667, column: 7, scope: !5755)
!5985 = !DILocation(line: 1668, column: 5, scope: !5980)
!5986 = !DILocation(line: 1670, column: 7, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5755, file: !289, line: 1670, column: 7)
!5988 = !DILocation(line: 1670, column: 10, scope: !5987)
!5989 = !DILocation(line: 1670, column: 22, scope: !5987)
!5990 = !DILocation(line: 1670, column: 7, scope: !5755)
!5991 = !DILocation(line: 1672, column: 14, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5993, file: !289, line: 1672, column: 12)
!5993 = distinct !DILexicalBlock(scope: !5987, file: !289, line: 1671, column: 5)
!5994 = !DILocation(line: 1672, column: 12, scope: !5993)
!5995 = !DILocation(line: 1673, column: 23, scope: !5992)
!5996 = !DILocation(line: 1673, column: 22, scope: !5992)
!5997 = !DILocation(line: 1673, column: 9, scope: !5992)
!5998 = !DILocation(line: 1674, column: 22, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5992, file: !289, line: 1674, column: 16)
!6000 = !DILocation(line: 1674, column: 16, scope: !5999)
!6001 = !DILocation(line: 1674, column: 45, scope: !5999)
!6002 = !DILocation(line: 1674, column: 16, scope: !5992)
!6003 = !DILocation(line: 1675, column: 9, scope: !5999)
!6004 = !DILocation(line: 1677, column: 14, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5993, file: !289, line: 1677, column: 12)
!6006 = !DILocation(line: 1677, column: 12, scope: !5993)
!6007 = !DILocation(line: 1678, column: 23, scope: !6005)
!6008 = !DILocation(line: 1678, column: 22, scope: !6005)
!6009 = !DILocation(line: 1678, column: 9, scope: !6005)
!6010 = !DILocation(line: 1679, column: 22, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6005, file: !289, line: 1679, column: 16)
!6012 = !DILocation(line: 1679, column: 16, scope: !6011)
!6013 = !DILocation(line: 1679, column: 45, scope: !6011)
!6014 = !DILocation(line: 1679, column: 16, scope: !6005)
!6015 = !DILocation(line: 1680, column: 9, scope: !6011)
!6016 = !DILocation(line: 1682, column: 14, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !5993, file: !289, line: 1682, column: 12)
!6018 = !DILocation(line: 1682, column: 12, scope: !5993)
!6019 = !DILocation(line: 1683, column: 9, scope: !6017)
!6020 = !DILocation(line: 1685, column: 11, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !5993, file: !289, line: 1685, column: 11)
!6022 = !DILocation(line: 1685, column: 14, scope: !6021)
!6023 = !DILocation(line: 1685, column: 11, scope: !5993)
!6024 = !DILocation(line: 1691, column: 27, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6021, file: !289, line: 1686, column: 9)
!6026 = !DILocation(line: 1691, column: 25, scope: !6025)
!6027 = !DILocation(line: 1691, column: 12, scope: !6025)
!6028 = !DILocation(line: 1691, column: 23, scope: !6025)
!6029 = !DILocation(line: 1692, column: 11, scope: !6025)
!6030 = !DILocation(line: 1694, column: 5, scope: !5993)
!6031 = !DILocation(line: 1696, column: 3, scope: !5755)
!6032 = !DILocation(line: 1697, column: 1, scope: !5755)
!6033 = distinct !DISubprogram(name: "create_hard_link", scope: !289, file: !289, line: 1819, type: !6034, scopeLine: 1821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!6034 = !DISubroutineType(types: !6035)
!6035 = !{!139, !113, !113, !139, !139, !139}
!6036 = !DILocalVariable(name: "src_name", arg: 1, scope: !6033, file: !289, line: 1819, type: !113)
!6037 = !DILocation(line: 1819, column: 31, scope: !6033)
!6038 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6033, file: !289, line: 1819, type: !113)
!6039 = !DILocation(line: 1819, column: 53, scope: !6033)
!6040 = !DILocalVariable(name: "replace", arg: 3, scope: !6033, file: !289, line: 1820, type: !139)
!6041 = !DILocation(line: 1820, column: 24, scope: !6033)
!6042 = !DILocalVariable(name: "verbose", arg: 4, scope: !6033, file: !289, line: 1820, type: !139)
!6043 = !DILocation(line: 1820, column: 38, scope: !6033)
!6044 = !DILocalVariable(name: "dereference", arg: 5, scope: !6033, file: !289, line: 1820, type: !139)
!6045 = !DILocation(line: 1820, column: 52, scope: !6033)
!6046 = !DILocalVariable(name: "err", scope: !6033, file: !289, line: 1822, type: !5)
!6047 = !DILocation(line: 1822, column: 7, scope: !6033)
!6048 = !DILocation(line: 1822, column: 37, scope: !6033)
!6049 = !DILocation(line: 1822, column: 57, scope: !6033)
!6050 = !DILocation(line: 1823, column: 27, scope: !6033)
!6051 = !DILocation(line: 1824, column: 27, scope: !6033)
!6052 = !DILocation(line: 1822, column: 13, scope: !6033)
!6053 = !DILocation(line: 1825, column: 11, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6033, file: !289, line: 1825, column: 7)
!6055 = !DILocation(line: 1825, column: 9, scope: !6054)
!6056 = !DILocation(line: 1825, column: 7, scope: !6033)
!6057 = !DILocation(line: 1827, column: 17, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6054, file: !289, line: 1826, column: 5)
!6059 = !DILocation(line: 1827, column: 22, scope: !6058)
!6060 = !DILocation(line: 1828, column: 14, scope: !6058)
!6061 = !DILocation(line: 1828, column: 39, scope: !6058)
!6062 = !DILocation(line: 1827, column: 7, scope: !6058)
!6063 = !DILocation(line: 1829, column: 7, scope: !6058)
!6064 = !DILocation(line: 1831, column: 7, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6033, file: !289, line: 1831, column: 7)
!6066 = !DILocation(line: 1831, column: 11, scope: !6065)
!6067 = !DILocation(line: 1831, column: 15, scope: !6065)
!6068 = !DILocation(line: 1831, column: 18, scope: !6065)
!6069 = !DILocation(line: 1831, column: 7, scope: !6033)
!6070 = !DILocation(line: 1832, column: 13, scope: !6065)
!6071 = !DILocation(line: 1832, column: 32, scope: !6065)
!6072 = !DILocation(line: 1832, column: 5, scope: !6065)
!6073 = !DILocation(line: 1833, column: 3, scope: !6033)
!6074 = !DILocation(line: 1834, column: 1, scope: !6033)
!6075 = distinct !DISubprogram(name: "abandon_move", scope: !289, file: !289, line: 1778, type: !6076, scopeLine: 1781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!6076 = !DISubroutineType(types: !6077)
!6077 = !{!139, !3751, !113, !388}
!6078 = !DILocalVariable(name: "x", arg: 1, scope: !6075, file: !289, line: 1778, type: !3751)
!6079 = !DILocation(line: 1778, column: 40, scope: !6075)
!6080 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6075, file: !289, line: 1779, type: !113)
!6081 = !DILocation(line: 1779, column: 27, scope: !6075)
!6082 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6075, file: !289, line: 1780, type: !388)
!6083 = !DILocation(line: 1780, column: 34, scope: !6075)
!6084 = !DILocation(line: 1782, column: 3, scope: !6075)
!6085 = !DILocation(line: 1783, column: 11, scope: !6075)
!6086 = !DILocation(line: 1783, column: 14, scope: !6075)
!6087 = !DILocation(line: 1783, column: 26, scope: !6075)
!6088 = !DILocation(line: 1784, column: 11, scope: !6075)
!6089 = !DILocation(line: 1784, column: 16, scope: !6075)
!6090 = !DILocation(line: 1784, column: 19, scope: !6075)
!6091 = !DILocation(line: 1784, column: 31, scope: !6075)
!6092 = !DILocation(line: 1785, column: 16, scope: !6075)
!6093 = !DILocation(line: 1785, column: 20, scope: !6075)
!6094 = !DILocation(line: 1785, column: 23, scope: !6075)
!6095 = !DILocation(line: 1785, column: 35, scope: !6075)
!6096 = !DILocation(line: 1786, column: 20, scope: !6075)
!6097 = !DILocation(line: 1786, column: 23, scope: !6075)
!6098 = !DILocation(line: 1786, column: 26, scope: !6075)
!6099 = !DILocation(line: 1787, column: 20, scope: !6075)
!6100 = !DILocation(line: 1787, column: 47, scope: !6075)
!6101 = !DILocation(line: 1787, column: 57, scope: !6075)
!6102 = !DILocation(line: 1787, column: 65, scope: !6075)
!6103 = !DILocation(line: 1787, column: 25, scope: !6075)
!6104 = !DILocation(line: 1788, column: 15, scope: !6075)
!6105 = !DILocation(line: 1788, column: 34, scope: !6075)
!6106 = !DILocation(line: 1788, column: 37, scope: !6075)
!6107 = !DILocation(line: 1788, column: 47, scope: !6075)
!6108 = !DILocation(line: 1788, column: 20, scope: !6075)
!6109 = !DILocation(line: 1788, column: 18, scope: !6075)
!6110 = !DILocation(line: 0, scope: !6075)
!6111 = !DILocation(line: 1783, column: 3, scope: !6075)
!6112 = distinct !DISubprogram(name: "overwrite_ok", scope: !289, file: !289, line: 1710, type: !6076, scopeLine: 1712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!6113 = !DILocalVariable(name: "x", arg: 1, scope: !6112, file: !289, line: 1710, type: !3751)
!6114 = !DILocation(line: 1710, column: 40, scope: !6112)
!6115 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6112, file: !289, line: 1710, type: !113)
!6116 = !DILocation(line: 1710, column: 55, scope: !6112)
!6117 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6112, file: !289, line: 1711, type: !388)
!6118 = !DILocation(line: 1711, column: 34, scope: !6112)
!6119 = !DILocation(line: 1713, column: 31, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6112, file: !289, line: 1713, column: 7)
!6121 = !DILocation(line: 1713, column: 41, scope: !6120)
!6122 = !DILocation(line: 1713, column: 49, scope: !6120)
!6123 = !DILocation(line: 1713, column: 9, scope: !6120)
!6124 = !DILocation(line: 1713, column: 7, scope: !6112)
!6125 = !DILocalVariable(name: "perms", scope: !6126, file: !289, line: 1715, type: !170)
!6126 = distinct !DILexicalBlock(scope: !6120, file: !289, line: 1714, column: 5)
!6127 = !DILocation(line: 1715, column: 12, scope: !6126)
!6128 = !DILocation(line: 1716, column: 16, scope: !6126)
!6129 = !DILocation(line: 1716, column: 24, scope: !6126)
!6130 = !DILocation(line: 1716, column: 33, scope: !6126)
!6131 = !DILocation(line: 1716, column: 7, scope: !6126)
!6132 = !DILocation(line: 1717, column: 7, scope: !6126)
!6133 = !DILocation(line: 1717, column: 17, scope: !6126)
!6134 = !DILocation(line: 1718, column: 16, scope: !6126)
!6135 = !DILocation(line: 1719, column: 17, scope: !6126)
!6136 = !DILocation(line: 1719, column: 20, scope: !6126)
!6137 = !DILocation(line: 1719, column: 30, scope: !6126)
!6138 = !DILocation(line: 1719, column: 33, scope: !6126)
!6139 = !DILocation(line: 1719, column: 36, scope: !6126)
!6140 = !DILocation(line: 1720, column: 17, scope: !6126)
!6141 = !DILocation(line: 1720, column: 20, scope: !6126)
!6142 = !DILocation(line: 1720, column: 23, scope: !6126)
!6143 = !DILocation(line: 1719, column: 16, scope: !6126)
!6144 = !DILocation(line: 1721, column: 18, scope: !6126)
!6145 = !DILocation(line: 1722, column: 18, scope: !6126)
!6146 = !DILocation(line: 1723, column: 16, scope: !6126)
!6147 = !DILocation(line: 1723, column: 30, scope: !6126)
!6148 = !DILocation(line: 1724, column: 37, scope: !6126)
!6149 = !DILocation(line: 1724, column: 45, scope: !6126)
!6150 = !DILocation(line: 1724, column: 53, scope: !6126)
!6151 = !DILocation(line: 1724, column: 16, scope: !6126)
!6152 = !DILocation(line: 1725, column: 17, scope: !6126)
!6153 = !DILocation(line: 1718, column: 7, scope: !6126)
!6154 = !DILocation(line: 1726, column: 5, scope: !6126)
!6155 = !DILocation(line: 1729, column: 16, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6120, file: !289, line: 1728, column: 5)
!6157 = !DILocation(line: 1729, column: 24, scope: !6156)
!6158 = !DILocation(line: 1730, column: 16, scope: !6156)
!6159 = !DILocation(line: 1730, column: 30, scope: !6156)
!6160 = !DILocation(line: 1729, column: 7, scope: !6156)
!6161 = !DILocation(line: 1733, column: 10, scope: !6112)
!6162 = !DILocation(line: 1733, column: 3, scope: !6112)
!6163 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !209, file: !209, line: 265, type: !2628, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!6164 = !DILocalVariable(name: "file_name", arg: 1, scope: !6163, file: !209, line: 265, type: !113)
!6165 = !DILocation(line: 265, column: 28, scope: !6163)
!6166 = !DILocation(line: 267, column: 7, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6163, file: !209, line: 267, column: 7)
!6168 = !DILocation(line: 267, column: 20, scope: !6167)
!6169 = !DILocation(line: 267, column: 7, scope: !6163)
!6170 = !DILocalVariable(name: "sep", scope: !6171, file: !209, line: 269, type: !8)
!6171 = distinct !DILexicalBlock(scope: !6167, file: !209, line: 268, column: 5)
!6172 = !DILocation(line: 269, column: 12, scope: !6171)
!6173 = !DILocation(line: 269, column: 18, scope: !6171)
!6174 = !DILocation(line: 269, column: 29, scope: !6171)
!6175 = !DILocation(line: 269, column: 42, scope: !6171)
!6176 = !DILocation(line: 269, column: 50, scope: !6171)
!6177 = !DILocation(line: 270, column: 17, scope: !6171)
!6178 = !DILocation(line: 270, column: 21, scope: !6171)
!6179 = !DILocation(line: 270, column: 24, scope: !6171)
!6180 = !DILocation(line: 270, column: 7, scope: !6171)
!6181 = !DILocation(line: 273, column: 5, scope: !6167)
!6182 = !DILocation(line: 274, column: 1, scope: !6163)
!6183 = distinct !DISubprogram(name: "source_is_dst_backup", scope: !289, file: !289, line: 1850, type: !6184, scopeLine: 1852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{!139, !113, !388, !113}
!6186 = !DILocalVariable(name: "srcbase", arg: 1, scope: !6183, file: !289, line: 1850, type: !113)
!6187 = !DILocation(line: 1850, column: 35, scope: !6183)
!6188 = !DILocalVariable(name: "src_st", arg: 2, scope: !6183, file: !289, line: 1850, type: !388)
!6189 = !DILocation(line: 1850, column: 63, scope: !6183)
!6190 = !DILocalVariable(name: "dst_name", arg: 3, scope: !6183, file: !289, line: 1851, type: !113)
!6191 = !DILocation(line: 1851, column: 35, scope: !6183)
!6192 = !DILocalVariable(name: "srcbaselen", scope: !6183, file: !289, line: 1853, type: !52)
!6193 = !DILocation(line: 1853, column: 10, scope: !6183)
!6194 = !DILocation(line: 1853, column: 31, scope: !6183)
!6195 = !DILocation(line: 1853, column: 23, scope: !6183)
!6196 = !DILocalVariable(name: "dstbase", scope: !6183, file: !289, line: 1854, type: !113)
!6197 = !DILocation(line: 1854, column: 15, scope: !6183)
!6198 = !DILocation(line: 1854, column: 41, scope: !6183)
!6199 = !DILocation(line: 1854, column: 25, scope: !6183)
!6200 = !DILocalVariable(name: "dstbaselen", scope: !6183, file: !289, line: 1855, type: !52)
!6201 = !DILocation(line: 1855, column: 10, scope: !6183)
!6202 = !DILocation(line: 1855, column: 31, scope: !6183)
!6203 = !DILocation(line: 1855, column: 23, scope: !6183)
!6204 = !DILocalVariable(name: "suffixlen", scope: !6183, file: !289, line: 1856, type: !52)
!6205 = !DILocation(line: 1856, column: 10, scope: !6183)
!6206 = !DILocation(line: 1856, column: 30, scope: !6183)
!6207 = !DILocation(line: 1856, column: 22, scope: !6183)
!6208 = !DILocation(line: 1857, column: 10, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6183, file: !289, line: 1857, column: 7)
!6210 = !DILocation(line: 1857, column: 24, scope: !6209)
!6211 = !DILocation(line: 1857, column: 37, scope: !6209)
!6212 = !DILocation(line: 1857, column: 35, scope: !6209)
!6213 = !DILocation(line: 1857, column: 21, scope: !6209)
!6214 = !DILocation(line: 1858, column: 10, scope: !6209)
!6215 = !DILocation(line: 1858, column: 21, scope: !6209)
!6216 = !DILocation(line: 1858, column: 30, scope: !6209)
!6217 = !DILocation(line: 1858, column: 39, scope: !6209)
!6218 = !DILocation(line: 1858, column: 13, scope: !6209)
!6219 = !DILocation(line: 1858, column: 51, scope: !6209)
!6220 = !DILocation(line: 1859, column: 10, scope: !6209)
!6221 = !DILocation(line: 1859, column: 13, scope: !6209)
!6222 = !DILocation(line: 1857, column: 7, scope: !6183)
!6223 = !DILocation(line: 1860, column: 5, scope: !6209)
!6224 = !DILocalVariable(name: "dstlen", scope: !6183, file: !289, line: 1861, type: !52)
!6225 = !DILocation(line: 1861, column: 10, scope: !6183)
!6226 = !DILocation(line: 1861, column: 27, scope: !6183)
!6227 = !DILocation(line: 1861, column: 19, scope: !6183)
!6228 = !DILocalVariable(name: "dst_back", scope: !6183, file: !289, line: 1862, type: !7)
!6229 = !DILocation(line: 1862, column: 9, scope: !6183)
!6230 = !DILocation(line: 1862, column: 29, scope: !6183)
!6231 = !DILocation(line: 1862, column: 38, scope: !6183)
!6232 = !DILocation(line: 1862, column: 36, scope: !6183)
!6233 = !DILocation(line: 1862, column: 48, scope: !6183)
!6234 = !DILocation(line: 1862, column: 20, scope: !6183)
!6235 = !DILocation(line: 1863, column: 20, scope: !6183)
!6236 = !DILocation(line: 1863, column: 30, scope: !6183)
!6237 = !DILocation(line: 1863, column: 40, scope: !6183)
!6238 = !DILocation(line: 1863, column: 11, scope: !6183)
!6239 = !DILocation(line: 1863, column: 49, scope: !6183)
!6240 = !DILocation(line: 1863, column: 3, scope: !6183)
!6241 = !DILocalVariable(name: "dst_back_sb", scope: !6183, file: !289, line: 1864, type: !335)
!6242 = !DILocation(line: 1864, column: 15, scope: !6183)
!6243 = !DILocalVariable(name: "dst_back_status", scope: !6183, file: !289, line: 1865, type: !5)
!6244 = !DILocation(line: 1865, column: 7, scope: !6183)
!6245 = !DILocation(line: 1865, column: 31, scope: !6183)
!6246 = !DILocation(line: 1865, column: 25, scope: !6183)
!6247 = !DILocation(line: 1866, column: 9, scope: !6183)
!6248 = !DILocation(line: 1866, column: 3, scope: !6183)
!6249 = !DILocation(line: 1867, column: 10, scope: !6183)
!6250 = !DILocation(line: 1867, column: 26, scope: !6183)
!6251 = !DILocation(line: 1867, column: 31, scope: !6183)
!6252 = !DILocation(line: 1867, column: 34, scope: !6183)
!6253 = !DILocation(line: 0, scope: !6183)
!6254 = !DILocation(line: 1867, column: 3, scope: !6183)
!6255 = !DILocation(line: 1868, column: 1, scope: !6183)
!6256 = distinct !DISubprogram(name: "emit_verbose", scope: !289, file: !289, line: 1795, type: !6257, scopeLine: 1796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!6257 = !DISubroutineType(types: !6258)
!6258 = !{null, !113, !113, !113}
!6259 = !DILocalVariable(name: "src", arg: 1, scope: !6256, file: !289, line: 1795, type: !113)
!6260 = !DILocation(line: 1795, column: 27, scope: !6256)
!6261 = !DILocalVariable(name: "dst", arg: 2, scope: !6256, file: !289, line: 1795, type: !113)
!6262 = !DILocation(line: 1795, column: 44, scope: !6256)
!6263 = !DILocalVariable(name: "backup_dst_name", arg: 3, scope: !6256, file: !289, line: 1795, type: !113)
!6264 = !DILocation(line: 1795, column: 61, scope: !6256)
!6265 = !DILocation(line: 1797, column: 23, scope: !6256)
!6266 = !DILocation(line: 1797, column: 43, scope: !6256)
!6267 = !DILocation(line: 1797, column: 3, scope: !6256)
!6268 = !DILocation(line: 1798, column: 7, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6256, file: !289, line: 1798, column: 7)
!6270 = !DILocation(line: 1798, column: 7, scope: !6256)
!6271 = !DILocation(line: 1799, column: 13, scope: !6269)
!6272 = !DILocation(line: 1799, column: 33, scope: !6269)
!6273 = !DILocation(line: 1799, column: 5, scope: !6269)
!6274 = !DILocation(line: 1800, column: 3, scope: !6256)
!6275 = !DILocation(line: 1801, column: 1, scope: !6256)
!6276 = distinct !DISubprogram(name: "is_ancestor", scope: !289, file: !289, line: 620, type: !6277, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!6277 = !DISubroutineType(types: !6278)
!6278 = !{!139, !388, !6279}
!6279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6280, size: 64)
!6280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !373)
!6281 = !DILocalVariable(name: "sb", arg: 1, scope: !6276, file: !289, line: 620, type: !388)
!6282 = !DILocation(line: 620, column: 33, scope: !6276)
!6283 = !DILocalVariable(name: "ancestors", arg: 2, scope: !6276, file: !289, line: 620, type: !6279)
!6284 = !DILocation(line: 620, column: 60, scope: !6276)
!6285 = !DILocation(line: 622, column: 3, scope: !6276)
!6286 = !DILocation(line: 622, column: 10, scope: !6276)
!6287 = !DILocation(line: 622, column: 20, scope: !6276)
!6288 = !DILocation(line: 624, column: 11, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6290, file: !289, line: 624, column: 11)
!6290 = distinct !DILexicalBlock(scope: !6276, file: !289, line: 623, column: 5)
!6291 = !DILocation(line: 624, column: 22, scope: !6289)
!6292 = !DILocation(line: 624, column: 29, scope: !6289)
!6293 = !DILocation(line: 624, column: 33, scope: !6289)
!6294 = !DILocation(line: 624, column: 26, scope: !6289)
!6295 = !DILocation(line: 624, column: 40, scope: !6289)
!6296 = !DILocation(line: 624, column: 43, scope: !6289)
!6297 = !DILocation(line: 624, column: 54, scope: !6289)
!6298 = !DILocation(line: 624, column: 61, scope: !6289)
!6299 = !DILocation(line: 624, column: 65, scope: !6289)
!6300 = !DILocation(line: 624, column: 58, scope: !6289)
!6301 = !DILocation(line: 624, column: 11, scope: !6290)
!6302 = !DILocation(line: 625, column: 9, scope: !6289)
!6303 = !DILocation(line: 626, column: 19, scope: !6290)
!6304 = !DILocation(line: 626, column: 30, scope: !6290)
!6305 = !DILocation(line: 626, column: 17, scope: !6290)
!6306 = distinct !{!6306, !6285, !6307}
!6307 = !DILocation(line: 627, column: 5, scope: !6276)
!6308 = !DILocation(line: 628, column: 3, scope: !6276)
!6309 = !DILocation(line: 629, column: 1, scope: !6276)
!6310 = distinct !DISubprogram(name: "copy_dir", scope: !289, file: !289, line: 745, type: !6311, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!6311 = !DISubroutineType(types: !6312)
!6312 = !{!139, !113, !113, !139, !388, !372, !3751, !4020, !4020}
!6313 = !DILocalVariable(name: "src_name_in", arg: 1, scope: !6310, file: !289, line: 745, type: !113)
!6314 = !DILocation(line: 745, column: 23, scope: !6310)
!6315 = !DILocalVariable(name: "dst_name_in", arg: 2, scope: !6310, file: !289, line: 745, type: !113)
!6316 = !DILocation(line: 745, column: 48, scope: !6310)
!6317 = !DILocalVariable(name: "new_dst", arg: 3, scope: !6310, file: !289, line: 745, type: !139)
!6318 = !DILocation(line: 745, column: 66, scope: !6310)
!6319 = !DILocalVariable(name: "src_sb", arg: 4, scope: !6310, file: !289, line: 746, type: !388)
!6320 = !DILocation(line: 746, column: 30, scope: !6310)
!6321 = !DILocalVariable(name: "ancestors", arg: 5, scope: !6310, file: !289, line: 746, type: !372)
!6322 = !DILocation(line: 746, column: 55, scope: !6310)
!6323 = !DILocalVariable(name: "x", arg: 6, scope: !6310, file: !289, line: 747, type: !3751)
!6324 = !DILocation(line: 747, column: 36, scope: !6310)
!6325 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 7, scope: !6310, file: !289, line: 748, type: !4020)
!6326 = !DILocation(line: 748, column: 17, scope: !6310)
!6327 = !DILocalVariable(name: "copy_into_self", arg: 8, scope: !6310, file: !289, line: 749, type: !4020)
!6328 = !DILocation(line: 749, column: 17, scope: !6310)
!6329 = !DILocalVariable(name: "name_space", scope: !6310, file: !289, line: 751, type: !7)
!6330 = !DILocation(line: 751, column: 9, scope: !6310)
!6331 = !DILocalVariable(name: "namep", scope: !6310, file: !289, line: 752, type: !7)
!6332 = !DILocation(line: 752, column: 9, scope: !6310)
!6333 = !DILocalVariable(name: "non_command_line_options", scope: !6310, file: !289, line: 753, type: !3753)
!6334 = !DILocation(line: 753, column: 21, scope: !6310)
!6335 = !DILocation(line: 753, column: 49, scope: !6310)
!6336 = !DILocation(line: 753, column: 48, scope: !6310)
!6337 = !DILocalVariable(name: "ok", scope: !6310, file: !289, line: 754, type: !139)
!6338 = !DILocation(line: 754, column: 8, scope: !6310)
!6339 = !DILocation(line: 756, column: 25, scope: !6310)
!6340 = !DILocation(line: 756, column: 16, scope: !6310)
!6341 = !DILocation(line: 756, column: 14, scope: !6310)
!6342 = !DILocation(line: 757, column: 7, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6310, file: !289, line: 757, column: 7)
!6344 = !DILocation(line: 757, column: 18, scope: !6343)
!6345 = !DILocation(line: 757, column: 7, scope: !6310)
!6346 = !DILocation(line: 761, column: 17, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6343, file: !289, line: 758, column: 5)
!6348 = !DILocation(line: 761, column: 24, scope: !6347)
!6349 = !DILocation(line: 761, column: 47, scope: !6347)
!6350 = !DILocation(line: 761, column: 7, scope: !6347)
!6351 = !DILocation(line: 762, column: 7, scope: !6347)
!6352 = !DILocation(line: 767, column: 7, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6310, file: !289, line: 767, column: 7)
!6354 = !DILocation(line: 767, column: 10, scope: !6353)
!6355 = !DILocation(line: 767, column: 22, scope: !6353)
!6356 = !DILocation(line: 767, column: 7, scope: !6310)
!6357 = !DILocation(line: 768, column: 30, scope: !6353)
!6358 = !DILocation(line: 768, column: 42, scope: !6353)
!6359 = !DILocation(line: 768, column: 5, scope: !6353)
!6360 = !DILocalVariable(name: "new_first_dir_created", scope: !6310, file: !289, line: 770, type: !139)
!6361 = !DILocation(line: 770, column: 8, scope: !6310)
!6362 = !DILocation(line: 771, column: 11, scope: !6310)
!6363 = !DILocation(line: 771, column: 9, scope: !6310)
!6364 = !DILocation(line: 772, column: 3, scope: !6310)
!6365 = !DILocation(line: 772, column: 11, scope: !6310)
!6366 = !DILocation(line: 772, column: 10, scope: !6310)
!6367 = !DILocation(line: 772, column: 17, scope: !6310)
!6368 = !DILocalVariable(name: "local_copy_into_self", scope: !6369, file: !289, line: 774, type: !139)
!6369 = distinct !DILexicalBlock(scope: !6310, file: !289, line: 773, column: 5)
!6370 = !DILocation(line: 774, column: 12, scope: !6369)
!6371 = !DILocalVariable(name: "src_name", scope: !6369, file: !289, line: 775, type: !7)
!6372 = !DILocation(line: 775, column: 13, scope: !6369)
!6373 = !DILocation(line: 775, column: 42, scope: !6369)
!6374 = !DILocation(line: 775, column: 55, scope: !6369)
!6375 = !DILocation(line: 775, column: 24, scope: !6369)
!6376 = !DILocalVariable(name: "dst_name", scope: !6369, file: !289, line: 776, type: !7)
!6377 = !DILocation(line: 776, column: 13, scope: !6369)
!6378 = !DILocation(line: 776, column: 42, scope: !6369)
!6379 = !DILocation(line: 776, column: 55, scope: !6369)
!6380 = !DILocation(line: 776, column: 24, scope: !6369)
!6381 = !DILocalVariable(name: "first_dir_created", scope: !6369, file: !289, line: 777, type: !139)
!6382 = !DILocation(line: 777, column: 12, scope: !6369)
!6383 = !DILocation(line: 777, column: 33, scope: !6369)
!6384 = !DILocation(line: 777, column: 32, scope: !6369)
!6385 = !DILocation(line: 779, column: 28, scope: !6369)
!6386 = !DILocation(line: 779, column: 38, scope: !6369)
!6387 = !DILocation(line: 779, column: 48, scope: !6369)
!6388 = !DILocation(line: 779, column: 57, scope: !6369)
!6389 = !DILocation(line: 780, column: 28, scope: !6369)
!6390 = !DILocation(line: 779, column: 13, scope: !6369)
!6391 = !DILocation(line: 779, column: 10, scope: !6369)
!6392 = !DILocation(line: 783, column: 26, scope: !6369)
!6393 = !DILocation(line: 783, column: 8, scope: !6369)
!6394 = !DILocation(line: 783, column: 23, scope: !6369)
!6395 = !DILocation(line: 785, column: 13, scope: !6369)
!6396 = !DILocation(line: 785, column: 7, scope: !6369)
!6397 = !DILocation(line: 786, column: 13, scope: !6369)
!6398 = !DILocation(line: 786, column: 7, scope: !6369)
!6399 = !DILocation(line: 791, column: 11, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6369, file: !289, line: 791, column: 11)
!6401 = !DILocation(line: 791, column: 11, scope: !6369)
!6402 = !DILocation(line: 792, column: 9, scope: !6400)
!6403 = !DILocation(line: 794, column: 32, scope: !6369)
!6404 = !DILocation(line: 794, column: 29, scope: !6369)
!6405 = !DILocation(line: 795, column: 24, scope: !6369)
!6406 = !DILocation(line: 795, column: 16, scope: !6369)
!6407 = !DILocation(line: 795, column: 31, scope: !6369)
!6408 = !DILocation(line: 795, column: 13, scope: !6369)
!6409 = distinct !{!6409, !6364, !6410}
!6410 = !DILocation(line: 796, column: 5, scope: !6310)
!6411 = !DILocation(line: 797, column: 9, scope: !6310)
!6412 = !DILocation(line: 797, column: 3, scope: !6310)
!6413 = !DILocation(line: 798, column: 45, scope: !6310)
!6414 = !DILocation(line: 798, column: 4, scope: !6310)
!6415 = !DILocation(line: 798, column: 43, scope: !6310)
!6416 = !DILocation(line: 800, column: 10, scope: !6310)
!6417 = !DILocation(line: 800, column: 3, scope: !6310)
!6418 = !DILocation(line: 801, column: 1, scope: !6310)
!6419 = distinct !DISubprogram(name: "copy_reg", scope: !289, file: !289, line: 1052, type: !6420, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!6420 = !DISubroutineType(types: !6421)
!6421 = !{!139, !113, !113, !3751, !236, !236, !4020, !388}
!6422 = !DILocalVariable(name: "src_name", arg: 1, scope: !6419, file: !289, line: 1052, type: !113)
!6423 = !DILocation(line: 1052, column: 23, scope: !6419)
!6424 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6419, file: !289, line: 1052, type: !113)
!6425 = !DILocation(line: 1052, column: 45, scope: !6419)
!6426 = !DILocalVariable(name: "x", arg: 3, scope: !6419, file: !289, line: 1053, type: !3751)
!6427 = !DILocation(line: 1053, column: 36, scope: !6419)
!6428 = !DILocalVariable(name: "dst_mode", arg: 4, scope: !6419, file: !289, line: 1054, type: !236)
!6429 = !DILocation(line: 1054, column: 18, scope: !6419)
!6430 = !DILocalVariable(name: "omitted_permissions", arg: 5, scope: !6419, file: !289, line: 1054, type: !236)
!6431 = !DILocation(line: 1054, column: 35, scope: !6419)
!6432 = !DILocalVariable(name: "new_dst", arg: 6, scope: !6419, file: !289, line: 1054, type: !4020)
!6433 = !DILocation(line: 1054, column: 62, scope: !6419)
!6434 = !DILocalVariable(name: "src_sb", arg: 7, scope: !6419, file: !289, line: 1055, type: !388)
!6435 = !DILocation(line: 1055, column: 30, scope: !6419)
!6436 = !DILocalVariable(name: "buf", scope: !6419, file: !289, line: 1057, type: !7)
!6437 = !DILocation(line: 1057, column: 9, scope: !6419)
!6438 = !DILocalVariable(name: "buf_alloc", scope: !6419, file: !289, line: 1058, type: !7)
!6439 = !DILocation(line: 1058, column: 9, scope: !6419)
!6440 = !DILocalVariable(name: "name_alloc", scope: !6419, file: !289, line: 1059, type: !7)
!6441 = !DILocation(line: 1059, column: 9, scope: !6419)
!6442 = !DILocalVariable(name: "dest_desc", scope: !6419, file: !289, line: 1060, type: !5)
!6443 = !DILocation(line: 1060, column: 7, scope: !6419)
!6444 = !DILocalVariable(name: "dest_errno", scope: !6419, file: !289, line: 1061, type: !5)
!6445 = !DILocation(line: 1061, column: 7, scope: !6419)
!6446 = !DILocalVariable(name: "source_desc", scope: !6419, file: !289, line: 1062, type: !5)
!6447 = !DILocation(line: 1062, column: 7, scope: !6419)
!6448 = !DILocalVariable(name: "src_mode", scope: !6419, file: !289, line: 1063, type: !236)
!6449 = !DILocation(line: 1063, column: 10, scope: !6419)
!6450 = !DILocation(line: 1063, column: 21, scope: !6419)
!6451 = !DILocation(line: 1063, column: 29, scope: !6419)
!6452 = !DILocalVariable(name: "sb", scope: !6419, file: !289, line: 1064, type: !335)
!6453 = !DILocation(line: 1064, column: 15, scope: !6419)
!6454 = !DILocalVariable(name: "src_open_sb", scope: !6419, file: !289, line: 1065, type: !335)
!6455 = !DILocation(line: 1065, column: 15, scope: !6419)
!6456 = !DILocalVariable(name: "return_val", scope: !6419, file: !289, line: 1066, type: !139)
!6457 = !DILocation(line: 1066, column: 8, scope: !6419)
!6458 = !DILocalVariable(name: "data_copy_required", scope: !6419, file: !289, line: 1067, type: !139)
!6459 = !DILocation(line: 1067, column: 8, scope: !6419)
!6460 = !DILocation(line: 1067, column: 29, scope: !6419)
!6461 = !DILocation(line: 1067, column: 32, scope: !6419)
!6462 = !DILocation(line: 1069, column: 23, scope: !6419)
!6463 = !DILocation(line: 1071, column: 27, scope: !6419)
!6464 = !DILocation(line: 1071, column: 30, scope: !6419)
!6465 = !DILocation(line: 1071, column: 42, scope: !6419)
!6466 = !DILocation(line: 1071, column: 24, scope: !6419)
!6467 = !DILocation(line: 1069, column: 17, scope: !6419)
!6468 = !DILocation(line: 1069, column: 15, scope: !6419)
!6469 = !DILocation(line: 1072, column: 7, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1072, column: 7)
!6471 = !DILocation(line: 1072, column: 19, scope: !6470)
!6472 = !DILocation(line: 1072, column: 7, scope: !6419)
!6473 = !DILocation(line: 1074, column: 17, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6470, file: !289, line: 1073, column: 5)
!6475 = !DILocation(line: 1074, column: 24, scope: !6474)
!6476 = !DILocation(line: 1074, column: 57, scope: !6474)
!6477 = !DILocation(line: 1074, column: 7, scope: !6474)
!6478 = !DILocation(line: 1075, column: 7, scope: !6474)
!6479 = !DILocation(line: 1078, column: 14, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1078, column: 7)
!6481 = !DILocation(line: 1078, column: 7, scope: !6480)
!6482 = !DILocation(line: 1078, column: 41, scope: !6480)
!6483 = !DILocation(line: 1078, column: 7, scope: !6419)
!6484 = !DILocation(line: 1080, column: 17, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6480, file: !289, line: 1079, column: 5)
!6486 = !DILocation(line: 1080, column: 24, scope: !6485)
!6487 = !DILocation(line: 1080, column: 46, scope: !6485)
!6488 = !DILocation(line: 1080, column: 7, scope: !6485)
!6489 = !DILocation(line: 1081, column: 18, scope: !6485)
!6490 = !DILocation(line: 1082, column: 7, scope: !6485)
!6491 = !DILocation(line: 1087, column: 9, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1087, column: 7)
!6493 = !DILocation(line: 1087, column: 7, scope: !6419)
!6494 = !DILocation(line: 1090, column: 14, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6492, file: !289, line: 1088, column: 5)
!6496 = !DILocation(line: 1091, column: 14, scope: !6495)
!6497 = !DILocation(line: 1089, column: 7, scope: !6495)
!6498 = !DILocation(line: 1092, column: 18, scope: !6495)
!6499 = !DILocation(line: 1093, column: 7, scope: !6495)
!6500 = !DILocation(line: 1098, column: 10, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1098, column: 7)
!6502 = !DILocation(line: 1098, column: 9, scope: !6501)
!6503 = !DILocation(line: 1098, column: 7, scope: !6419)
!6504 = !DILocalVariable(name: "open_flags", scope: !6505, file: !289, line: 1100, type: !5)
!6505 = distinct !DILexicalBlock(scope: !6501, file: !289, line: 1099, column: 5)
!6506 = !DILocation(line: 1100, column: 11, scope: !6505)
!6507 = !DILocation(line: 1101, column: 32, scope: !6505)
!6508 = !DILocation(line: 1101, column: 35, scope: !6505)
!6509 = !DILocation(line: 1101, column: 29, scope: !6505)
!6510 = !DILocation(line: 1102, column: 25, scope: !6505)
!6511 = !DILocation(line: 1102, column: 35, scope: !6505)
!6512 = !DILocation(line: 1102, column: 19, scope: !6505)
!6513 = !DILocation(line: 1102, column: 17, scope: !6505)
!6514 = !DILocation(line: 1103, column: 20, scope: !6505)
!6515 = !DILocation(line: 1103, column: 18, scope: !6505)
!6516 = !DILocation(line: 1112, column: 12, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6505, file: !289, line: 1112, column: 11)
!6518 = !DILocation(line: 1112, column: 15, scope: !6517)
!6519 = !DILocation(line: 1112, column: 36, scope: !6517)
!6520 = !DILocation(line: 1112, column: 39, scope: !6517)
!6521 = !DILocation(line: 1112, column: 42, scope: !6517)
!6522 = !DILocation(line: 1113, column: 11, scope: !6517)
!6523 = !DILocation(line: 1113, column: 19, scope: !6517)
!6524 = !DILocation(line: 1113, column: 16, scope: !6517)
!6525 = !DILocation(line: 1112, column: 11, scope: !6505)
!6526 = !DILocation(line: 1115, column: 40, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6528, file: !289, line: 1115, column: 15)
!6528 = distinct !DILexicalBlock(scope: !6517, file: !289, line: 1114, column: 9)
!6529 = !DILocation(line: 1115, column: 50, scope: !6527)
!6530 = !DILocation(line: 1115, column: 53, scope: !6527)
!6531 = !DILocation(line: 1116, column: 47, scope: !6527)
!6532 = !DILocation(line: 1115, column: 17, scope: !6527)
!6533 = !DILocation(line: 1115, column: 15, scope: !6528)
!6534 = !DILocation(line: 1118, column: 19, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6536, file: !289, line: 1118, column: 19)
!6536 = distinct !DILexicalBlock(scope: !6527, file: !289, line: 1117, column: 13)
!6537 = !DILocation(line: 1118, column: 22, scope: !6535)
!6538 = !DILocation(line: 1118, column: 19, scope: !6536)
!6539 = !DILocation(line: 1120, column: 30, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6535, file: !289, line: 1119, column: 17)
!6541 = !DILocation(line: 1121, column: 19, scope: !6540)
!6542 = !DILocation(line: 1123, column: 13, scope: !6536)
!6543 = !DILocation(line: 1124, column: 9, scope: !6528)
!6544 = !DILocation(line: 1126, column: 11, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6505, file: !289, line: 1126, column: 11)
!6546 = !DILocation(line: 1126, column: 21, scope: !6545)
!6547 = !DILocation(line: 1126, column: 25, scope: !6545)
!6548 = !DILocation(line: 1126, column: 28, scope: !6545)
!6549 = !DILocation(line: 1126, column: 31, scope: !6545)
!6550 = !DILocation(line: 1126, column: 11, scope: !6505)
!6551 = !DILocation(line: 1128, column: 23, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6553, file: !289, line: 1128, column: 15)
!6553 = distinct !DILexicalBlock(scope: !6545, file: !289, line: 1127, column: 9)
!6554 = !DILocation(line: 1128, column: 15, scope: !6552)
!6555 = !DILocation(line: 1128, column: 33, scope: !6552)
!6556 = !DILocation(line: 1128, column: 15, scope: !6553)
!6557 = !DILocation(line: 1130, column: 25, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6552, file: !289, line: 1129, column: 13)
!6559 = !DILocation(line: 1130, column: 32, scope: !6558)
!6560 = !DILocation(line: 1130, column: 55, scope: !6558)
!6561 = !DILocation(line: 1130, column: 15, scope: !6558)
!6562 = !DILocation(line: 1131, column: 26, scope: !6558)
!6563 = !DILocation(line: 1132, column: 15, scope: !6558)
!6564 = !DILocation(line: 1134, column: 15, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6553, file: !289, line: 1134, column: 15)
!6566 = !DILocation(line: 1134, column: 18, scope: !6565)
!6567 = !DILocation(line: 1134, column: 15, scope: !6553)
!6568 = !DILocation(line: 1135, column: 21, scope: !6565)
!6569 = !DILocation(line: 1135, column: 40, scope: !6565)
!6570 = !DILocation(line: 1135, column: 13, scope: !6565)
!6571 = !DILocation(line: 1138, column: 12, scope: !6553)
!6572 = !DILocation(line: 1138, column: 20, scope: !6553)
!6573 = !DILocation(line: 1142, column: 15, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6553, file: !289, line: 1142, column: 15)
!6575 = !DILocation(line: 1142, column: 18, scope: !6574)
!6576 = !DILocation(line: 1142, column: 15, scope: !6553)
!6577 = !DILocation(line: 1144, column: 47, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6579, file: !289, line: 1144, column: 19)
!6579 = distinct !DILexicalBlock(scope: !6574, file: !289, line: 1143, column: 13)
!6580 = !DILocation(line: 1144, column: 57, scope: !6578)
!6581 = !DILocation(line: 1144, column: 67, scope: !6578)
!6582 = !DILocation(line: 1145, column: 48, scope: !6578)
!6583 = !DILocation(line: 1145, column: 47, scope: !6578)
!6584 = !DILocation(line: 1145, column: 57, scope: !6578)
!6585 = !DILocation(line: 1144, column: 21, scope: !6578)
!6586 = !DILocation(line: 1144, column: 19, scope: !6579)
!6587 = !DILocation(line: 1147, column: 30, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6578, file: !289, line: 1146, column: 17)
!6589 = !DILocation(line: 1148, column: 19, scope: !6588)
!6590 = !DILocation(line: 1150, column: 13, scope: !6579)
!6591 = !DILocation(line: 1151, column: 9, scope: !6553)
!6592 = !DILocation(line: 1152, column: 5, scope: !6505)
!6593 = !DILocation(line: 1154, column: 8, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1154, column: 7)
!6595 = !DILocation(line: 1154, column: 7, scope: !6594)
!6596 = !DILocation(line: 1154, column: 7, scope: !6419)
!6597 = !DILocation(line: 1155, column: 5, scope: !6594)
!6598 = !DILabel(scope: !6599, name: "open_with_O_CREAT", file: !289, line: 1156)
!6599 = distinct !DILexicalBlock(scope: !6594, file: !289, line: 1155, column: 5)
!6600 = !DILocation(line: 1156, column: 5, scope: !6599)
!6601 = !DILocalVariable(name: "open_flags", scope: !6599, file: !289, line: 1158, type: !5)
!6602 = !DILocation(line: 1158, column: 11, scope: !6599)
!6603 = !DILocation(line: 1159, column: 25, scope: !6599)
!6604 = !DILocation(line: 1159, column: 35, scope: !6599)
!6605 = !DILocation(line: 1159, column: 46, scope: !6599)
!6606 = !DILocation(line: 1160, column: 25, scope: !6599)
!6607 = !DILocation(line: 1160, column: 37, scope: !6599)
!6608 = !DILocation(line: 1160, column: 36, scope: !6599)
!6609 = !DILocation(line: 1160, column: 34, scope: !6599)
!6610 = !DILocation(line: 1159, column: 19, scope: !6599)
!6611 = !DILocation(line: 1159, column: 17, scope: !6599)
!6612 = !DILocation(line: 1161, column: 20, scope: !6599)
!6613 = !DILocation(line: 1161, column: 18, scope: !6599)
!6614 = !DILocation(line: 1173, column: 11, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6599, file: !289, line: 1173, column: 11)
!6616 = !DILocation(line: 1173, column: 21, scope: !6615)
!6617 = !DILocation(line: 1173, column: 25, scope: !6615)
!6618 = !DILocation(line: 1173, column: 28, scope: !6615)
!6619 = !DILocation(line: 1173, column: 39, scope: !6615)
!6620 = !DILocation(line: 1173, column: 49, scope: !6615)
!6621 = !DILocation(line: 1173, column: 54, scope: !6615)
!6622 = !DILocation(line: 1173, column: 57, scope: !6615)
!6623 = !DILocation(line: 1173, column: 11, scope: !6599)
!6624 = !DILocalVariable(name: "dangling_link_sb", scope: !6625, file: !289, line: 1175, type: !335)
!6625 = distinct !DILexicalBlock(scope: !6615, file: !289, line: 1174, column: 9)
!6626 = !DILocation(line: 1175, column: 23, scope: !6625)
!6627 = !DILocation(line: 1176, column: 22, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6625, file: !289, line: 1176, column: 15)
!6629 = !DILocation(line: 1176, column: 15, scope: !6628)
!6630 = !DILocation(line: 1176, column: 51, scope: !6628)
!6631 = !DILocation(line: 1177, column: 15, scope: !6628)
!6632 = !DILocation(line: 1177, column: 18, scope: !6628)
!6633 = !DILocation(line: 1176, column: 15, scope: !6625)
!6634 = !DILocation(line: 1179, column: 19, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6636, file: !289, line: 1179, column: 19)
!6636 = distinct !DILexicalBlock(scope: !6628, file: !289, line: 1178, column: 13)
!6637 = !DILocation(line: 1179, column: 22, scope: !6635)
!6638 = !DILocation(line: 1179, column: 19, scope: !6636)
!6639 = !DILocation(line: 1181, column: 37, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6635, file: !289, line: 1180, column: 17)
!6641 = !DILocation(line: 1181, column: 47, scope: !6640)
!6642 = !DILocation(line: 1182, column: 37, scope: !6640)
!6643 = !DILocation(line: 1182, column: 49, scope: !6640)
!6644 = !DILocation(line: 1182, column: 48, scope: !6640)
!6645 = !DILocation(line: 1182, column: 46, scope: !6640)
!6646 = !DILocation(line: 1181, column: 31, scope: !6640)
!6647 = !DILocation(line: 1181, column: 29, scope: !6640)
!6648 = !DILocation(line: 1183, column: 32, scope: !6640)
!6649 = !DILocation(line: 1183, column: 30, scope: !6640)
!6650 = !DILocation(line: 1184, column: 17, scope: !6640)
!6651 = !DILocation(line: 1187, column: 32, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6635, file: !289, line: 1186, column: 17)
!6653 = !DILocation(line: 1188, column: 26, scope: !6652)
!6654 = !DILocation(line: 1187, column: 19, scope: !6652)
!6655 = !DILocation(line: 1189, column: 30, scope: !6652)
!6656 = !DILocation(line: 1190, column: 19, scope: !6652)
!6657 = !DILocation(line: 1192, column: 13, scope: !6636)
!6658 = !DILocation(line: 1193, column: 9, scope: !6625)
!6659 = !DILocation(line: 1197, column: 11, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6599, file: !289, line: 1197, column: 11)
!6661 = !DILocation(line: 1197, column: 21, scope: !6660)
!6662 = !DILocation(line: 1197, column: 25, scope: !6660)
!6663 = !DILocation(line: 1197, column: 28, scope: !6660)
!6664 = !DILocation(line: 1197, column: 39, scope: !6660)
!6665 = !DILocation(line: 1198, column: 11, scope: !6660)
!6666 = !DILocation(line: 1198, column: 15, scope: !6660)
!6667 = !DILocation(line: 1198, column: 14, scope: !6660)
!6668 = !DILocation(line: 1198, column: 24, scope: !6660)
!6669 = !DILocation(line: 1198, column: 27, scope: !6660)
!6670 = !DILocation(line: 1198, column: 44, scope: !6660)
!6671 = !DILocation(line: 1198, column: 36, scope: !6660)
!6672 = !DILocation(line: 1198, column: 54, scope: !6660)
!6673 = !DILocation(line: 1198, column: 59, scope: !6660)
!6674 = !DILocation(line: 1197, column: 11, scope: !6599)
!6675 = !DILocation(line: 1199, column: 20, scope: !6660)
!6676 = !DILocation(line: 1199, column: 9, scope: !6660)
!6677 = !DILocation(line: 1200, column: 5, scope: !6599)
!6678 = !DILocation(line: 1203, column: 27, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6594, file: !289, line: 1202, column: 5)
!6680 = !DILocation(line: 1206, column: 7, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1206, column: 7)
!6682 = !DILocation(line: 1206, column: 17, scope: !6681)
!6683 = !DILocation(line: 1206, column: 7, scope: !6419)
!6684 = !DILocation(line: 1218, column: 11, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6686, file: !289, line: 1218, column: 11)
!6686 = distinct !DILexicalBlock(scope: !6681, file: !289, line: 1207, column: 5)
!6687 = !DILocation(line: 1218, column: 22, scope: !6685)
!6688 = !DILocation(line: 1218, column: 32, scope: !6685)
!6689 = !DILocation(line: 1218, column: 38, scope: !6685)
!6690 = !DILocation(line: 1218, column: 37, scope: !6685)
!6691 = !DILocation(line: 1218, column: 46, scope: !6685)
!6692 = !DILocation(line: 1218, column: 51, scope: !6685)
!6693 = !DILocation(line: 1218, column: 54, scope: !6685)
!6694 = !DILocation(line: 1218, column: 11, scope: !6686)
!6695 = !DILocation(line: 1220, column: 12, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6685, file: !289, line: 1219, column: 9)
!6697 = !DILocation(line: 1220, column: 20, scope: !6696)
!6698 = !DILocation(line: 1221, column: 11, scope: !6696)
!6699 = !DILocation(line: 1225, column: 17, scope: !6686)
!6700 = !DILocation(line: 1225, column: 29, scope: !6686)
!6701 = !DILocation(line: 1226, column: 14, scope: !6686)
!6702 = !DILocation(line: 1225, column: 7, scope: !6686)
!6703 = !DILocation(line: 1227, column: 18, scope: !6686)
!6704 = !DILocation(line: 1228, column: 7, scope: !6686)
!6705 = !DILocation(line: 1231, column: 14, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1231, column: 7)
!6707 = !DILocation(line: 1231, column: 7, scope: !6706)
!6708 = !DILocation(line: 1231, column: 30, scope: !6706)
!6709 = !DILocation(line: 1231, column: 7, scope: !6419)
!6710 = !DILocation(line: 1233, column: 17, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6706, file: !289, line: 1232, column: 5)
!6712 = !DILocation(line: 1233, column: 24, scope: !6711)
!6713 = !DILocation(line: 1233, column: 46, scope: !6711)
!6714 = !DILocation(line: 1233, column: 7, scope: !6711)
!6715 = !DILocation(line: 1234, column: 18, scope: !6711)
!6716 = !DILocation(line: 1235, column: 7, scope: !6711)
!6717 = !DILocation(line: 1239, column: 7, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1239, column: 7)
!6719 = !DILocation(line: 1239, column: 26, scope: !6718)
!6720 = !DILocation(line: 1239, column: 29, scope: !6718)
!6721 = !DILocation(line: 1239, column: 32, scope: !6718)
!6722 = !DILocation(line: 1239, column: 7, scope: !6419)
!6723 = !DILocalVariable(name: "clone_ok", scope: !6724, file: !289, line: 1241, type: !139)
!6724 = distinct !DILexicalBlock(scope: !6718, file: !289, line: 1240, column: 5)
!6725 = !DILocation(line: 1241, column: 12, scope: !6724)
!6726 = !DILocation(line: 1241, column: 35, scope: !6724)
!6727 = !DILocation(line: 1241, column: 46, scope: !6724)
!6728 = !DILocation(line: 1241, column: 23, scope: !6724)
!6729 = !DILocation(line: 1241, column: 59, scope: !6724)
!6730 = !DILocation(line: 1242, column: 11, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6724, file: !289, line: 1242, column: 11)
!6732 = !DILocation(line: 1242, column: 20, scope: !6731)
!6733 = !DILocation(line: 1242, column: 23, scope: !6731)
!6734 = !DILocation(line: 1242, column: 26, scope: !6731)
!6735 = !DILocation(line: 1242, column: 39, scope: !6731)
!6736 = !DILocation(line: 1242, column: 11, scope: !6724)
!6737 = !DILocation(line: 1244, column: 16, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !289, line: 1244, column: 15)
!6739 = distinct !DILexicalBlock(scope: !6731, file: !289, line: 1243, column: 9)
!6740 = !DILocation(line: 1244, column: 15, scope: !6739)
!6741 = !DILocation(line: 1246, column: 25, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6738, file: !289, line: 1245, column: 13)
!6743 = !DILocation(line: 1246, column: 32, scope: !6742)
!6744 = !DILocation(line: 1247, column: 22, scope: !6742)
!6745 = !DILocation(line: 1247, column: 47, scope: !6742)
!6746 = !DILocation(line: 1246, column: 15, scope: !6742)
!6747 = !DILocation(line: 1248, column: 26, scope: !6742)
!6748 = !DILocation(line: 1249, column: 15, scope: !6742)
!6749 = !DILocation(line: 1251, column: 30, scope: !6739)
!6750 = !DILocation(line: 1252, column: 9, scope: !6739)
!6751 = !DILocation(line: 1253, column: 5, scope: !6724)
!6752 = !DILocation(line: 1255, column: 7, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1255, column: 7)
!6754 = !DILocation(line: 1255, column: 7, scope: !6419)
!6755 = !DILocalVariable(name: "buf_alignment", scope: !6756, file: !289, line: 1258, type: !52)
!6756 = distinct !DILexicalBlock(scope: !6753, file: !289, line: 1256, column: 5)
!6757 = !DILocation(line: 1258, column: 14, scope: !6756)
!6758 = !DILocation(line: 1258, column: 30, scope: !6756)
!6759 = !DILocalVariable(name: "buf_size", scope: !6756, file: !289, line: 1259, type: !52)
!6760 = !DILocation(line: 1259, column: 14, scope: !6756)
!6761 = !DILocation(line: 1259, column: 25, scope: !6756)
!6762 = !DILocalVariable(name: "hole_size", scope: !6756, file: !289, line: 1260, type: !52)
!6763 = !DILocation(line: 1260, column: 14, scope: !6756)
!6764 = !DILocation(line: 1260, column: 26, scope: !6756)
!6765 = !DILocation(line: 1262, column: 17, scope: !6756)
!6766 = !DILocation(line: 1262, column: 7, scope: !6756)
!6767 = !DILocalVariable(name: "make_holes", scope: !6756, file: !289, line: 1265, type: !139)
!6768 = !DILocation(line: 1265, column: 12, scope: !6756)
!6769 = !DILocalVariable(name: "sparse_src", scope: !6756, file: !289, line: 1266, type: !139)
!6770 = !DILocation(line: 1266, column: 12, scope: !6756)
!6771 = !DILocation(line: 1266, column: 25, scope: !6756)
!6772 = !DILocation(line: 1268, column: 11, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6756, file: !289, line: 1268, column: 11)
!6774 = !DILocation(line: 1268, column: 11, scope: !6756)
!6775 = !DILocation(line: 1272, column: 15, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6777, file: !289, line: 1272, column: 15)
!6777 = distinct !DILexicalBlock(scope: !6773, file: !289, line: 1269, column: 9)
!6778 = !DILocation(line: 1272, column: 18, scope: !6776)
!6779 = !DILocation(line: 1272, column: 30, scope: !6776)
!6780 = !DILocation(line: 1272, column: 15, scope: !6777)
!6781 = !DILocation(line: 1273, column: 24, scope: !6776)
!6782 = !DILocation(line: 1273, column: 13, scope: !6776)
!6783 = !DILocation(line: 1279, column: 15, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6777, file: !289, line: 1279, column: 15)
!6785 = !DILocation(line: 1279, column: 18, scope: !6784)
!6786 = !DILocation(line: 1279, column: 30, scope: !6784)
!6787 = !DILocation(line: 1279, column: 45, scope: !6784)
!6788 = !DILocation(line: 1279, column: 48, scope: !6784)
!6789 = !DILocation(line: 1279, column: 15, scope: !6777)
!6790 = !DILocation(line: 1280, column: 24, scope: !6784)
!6791 = !DILocation(line: 1280, column: 13, scope: !6784)
!6792 = !DILocation(line: 1281, column: 9, scope: !6777)
!6793 = !DILocation(line: 1285, column: 13, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6756, file: !289, line: 1285, column: 11)
!6795 = !DILocation(line: 1285, column: 11, scope: !6756)
!6796 = !DILocalVariable(name: "blcm_max", scope: !6797, file: !289, line: 1289, type: !52)
!6797 = distinct !DILexicalBlock(scope: !6794, file: !289, line: 1286, column: 9)
!6798 = !DILocation(line: 1289, column: 18, scope: !6797)
!6799 = !DILocation(line: 1289, column: 57, scope: !6797)
!6800 = !DILocation(line: 1289, column: 55, scope: !6797)
!6801 = !DILocalVariable(name: "blcm", scope: !6797, file: !289, line: 1290, type: !52)
!6802 = !DILocation(line: 1290, column: 18, scope: !6797)
!6803 = !DILocation(line: 1290, column: 37, scope: !6797)
!6804 = !DILocation(line: 1290, column: 63, scope: !6797)
!6805 = !DILocation(line: 1291, column: 37, scope: !6797)
!6806 = !DILocation(line: 1290, column: 25, scope: !6797)
!6807 = !DILocation(line: 1295, column: 15, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6797, file: !289, line: 1295, column: 15)
!6809 = !DILocation(line: 1295, column: 45, scope: !6808)
!6810 = !DILocation(line: 1295, column: 60, scope: !6808)
!6811 = !DILocation(line: 1295, column: 70, scope: !6808)
!6812 = !DILocation(line: 1295, column: 68, scope: !6808)
!6813 = !DILocation(line: 1295, column: 15, scope: !6797)
!6814 = !DILocation(line: 1296, column: 36, scope: !6808)
!6815 = !DILocation(line: 1296, column: 44, scope: !6808)
!6816 = !DILocation(line: 1296, column: 22, scope: !6808)
!6817 = !DILocation(line: 1296, column: 13, scope: !6808)
!6818 = !DILocation(line: 1301, column: 23, scope: !6797)
!6819 = !DILocation(line: 1301, column: 28, scope: !6797)
!6820 = !DILocation(line: 1301, column: 20, scope: !6797)
!6821 = !DILocation(line: 1302, column: 23, scope: !6797)
!6822 = !DILocation(line: 1302, column: 34, scope: !6797)
!6823 = !DILocation(line: 1302, column: 32, scope: !6797)
!6824 = !DILocation(line: 1302, column: 20, scope: !6797)
!6825 = !DILocation(line: 1303, column: 15, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6797, file: !289, line: 1303, column: 15)
!6827 = !DILocation(line: 1303, column: 24, scope: !6826)
!6828 = !DILocation(line: 1303, column: 29, scope: !6826)
!6829 = !DILocation(line: 1303, column: 32, scope: !6826)
!6830 = !DILocation(line: 1303, column: 43, scope: !6826)
!6831 = !DILocation(line: 1303, column: 41, scope: !6826)
!6832 = !DILocation(line: 1303, column: 15, scope: !6797)
!6833 = !DILocation(line: 1304, column: 24, scope: !6826)
!6834 = !DILocation(line: 1304, column: 22, scope: !6826)
!6835 = !DILocation(line: 1304, column: 13, scope: !6826)
!6836 = !DILocation(line: 1305, column: 9, scope: !6797)
!6837 = !DILocation(line: 1307, column: 28, scope: !6756)
!6838 = !DILocation(line: 1307, column: 39, scope: !6756)
!6839 = !DILocation(line: 1307, column: 37, scope: !6756)
!6840 = !DILocation(line: 1307, column: 19, scope: !6756)
!6841 = !DILocation(line: 1307, column: 17, scope: !6756)
!6842 = !DILocation(line: 1308, column: 24, scope: !6756)
!6843 = !DILocation(line: 1308, column: 35, scope: !6756)
!6844 = !DILocation(line: 1308, column: 13, scope: !6756)
!6845 = !DILocation(line: 1308, column: 11, scope: !6756)
!6846 = !DILocation(line: 1310, column: 11, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6756, file: !289, line: 1310, column: 11)
!6848 = !DILocation(line: 1310, column: 11, scope: !6756)
!6849 = !DILocalVariable(name: "normal_copy_required", scope: !6850, file: !289, line: 1312, type: !139)
!6850 = distinct !DILexicalBlock(scope: !6847, file: !289, line: 1311, column: 9)
!6851 = !DILocation(line: 1312, column: 16, scope: !6850)
!6852 = !DILocation(line: 1318, column: 28, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6850, file: !289, line: 1318, column: 15)
!6854 = !DILocation(line: 1318, column: 41, scope: !6853)
!6855 = !DILocation(line: 1318, column: 52, scope: !6853)
!6856 = !DILocation(line: 1318, column: 57, scope: !6853)
!6857 = !DILocation(line: 1318, column: 67, scope: !6853)
!6858 = !DILocation(line: 1319, column: 40, scope: !6853)
!6859 = !DILocation(line: 1320, column: 28, scope: !6853)
!6860 = !DILocation(line: 1320, column: 41, scope: !6853)
!6861 = !DILocation(line: 1320, column: 44, scope: !6853)
!6862 = !DILocation(line: 1321, column: 28, scope: !6853)
!6863 = !DILocation(line: 1321, column: 38, scope: !6853)
!6864 = !DILocation(line: 1318, column: 15, scope: !6853)
!6865 = !DILocation(line: 1318, column: 15, scope: !6850)
!6866 = !DILocation(line: 1322, column: 13, scope: !6853)
!6867 = !DILocation(line: 1324, column: 17, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6850, file: !289, line: 1324, column: 15)
!6869 = !DILocation(line: 1324, column: 15, scope: !6850)
!6870 = !DILocation(line: 1326, column: 26, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6868, file: !289, line: 1325, column: 13)
!6872 = !DILocation(line: 1327, column: 15, scope: !6871)
!6873 = !DILocation(line: 1329, column: 9, scope: !6850)
!6874 = !DILocalVariable(name: "n_read", scope: !6756, file: !289, line: 1331, type: !292)
!6875 = !DILocation(line: 1331, column: 13, scope: !6756)
!6876 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !6756, file: !289, line: 1332, type: !139)
!6877 = !DILocation(line: 1332, column: 12, scope: !6756)
!6878 = !DILocation(line: 1333, column: 26, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6756, file: !289, line: 1333, column: 11)
!6880 = !DILocation(line: 1333, column: 39, scope: !6879)
!6881 = !DILocation(line: 1333, column: 50, scope: !6879)
!6882 = !DILocation(line: 1333, column: 55, scope: !6879)
!6883 = !DILocation(line: 1334, column: 26, scope: !6879)
!6884 = !DILocation(line: 1334, column: 39, scope: !6879)
!6885 = !DILocation(line: 1335, column: 26, scope: !6879)
!6886 = !DILocation(line: 1335, column: 29, scope: !6879)
!6887 = !DILocation(line: 1335, column: 41, scope: !6879)
!6888 = !DILocation(line: 1335, column: 59, scope: !6879)
!6889 = !DILocation(line: 1335, column: 69, scope: !6879)
!6890 = !DILocation(line: 1333, column: 13, scope: !6879)
!6891 = !DILocation(line: 1333, column: 11, scope: !6756)
!6892 = !DILocation(line: 1339, column: 22, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6879, file: !289, line: 1338, column: 9)
!6894 = !DILocation(line: 1340, column: 11, scope: !6893)
!6895 = !DILocation(line: 1342, column: 16, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6879, file: !289, line: 1342, column: 16)
!6897 = !DILocation(line: 1342, column: 34, scope: !6896)
!6898 = !DILocation(line: 1342, column: 48, scope: !6896)
!6899 = !DILocation(line: 1342, column: 59, scope: !6896)
!6900 = !DILocation(line: 1342, column: 37, scope: !6896)
!6901 = !DILocation(line: 1342, column: 67, scope: !6896)
!6902 = !DILocation(line: 1342, column: 16, scope: !6879)
!6903 = !DILocation(line: 1344, column: 21, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6896, file: !289, line: 1343, column: 9)
!6905 = !DILocation(line: 1344, column: 28, scope: !6904)
!6906 = !DILocation(line: 1344, column: 54, scope: !6904)
!6907 = !DILocation(line: 1344, column: 11, scope: !6904)
!6908 = !DILocation(line: 1345, column: 22, scope: !6904)
!6909 = !DILocation(line: 1346, column: 11, scope: !6904)
!6910 = !DILocation(line: 1348, column: 5, scope: !6756)
!6911 = !DILabel(scope: !6419, name: "preserve_metadata", file: !289, line: 1350)
!6912 = !DILocation(line: 1350, column: 1, scope: !6419)
!6913 = !DILocation(line: 1351, column: 7, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1351, column: 7)
!6915 = !DILocation(line: 1351, column: 10, scope: !6914)
!6916 = !DILocation(line: 1351, column: 7, scope: !6419)
!6917 = !DILocalVariable(name: "timespec", scope: !6918, file: !289, line: 1353, type: !387)
!6918 = distinct !DILexicalBlock(scope: !6914, file: !289, line: 1352, column: 5)
!6919 = !DILocation(line: 1353, column: 23, scope: !6918)
!6920 = !DILocation(line: 1354, column: 7, scope: !6918)
!6921 = !DILocation(line: 1354, column: 37, scope: !6918)
!6922 = !DILocation(line: 1354, column: 21, scope: !6918)
!6923 = !DILocation(line: 1355, column: 7, scope: !6918)
!6924 = !DILocation(line: 1355, column: 37, scope: !6918)
!6925 = !DILocation(line: 1355, column: 21, scope: !6918)
!6926 = !DILocation(line: 1357, column: 22, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6918, file: !289, line: 1357, column: 11)
!6928 = !DILocation(line: 1357, column: 33, scope: !6927)
!6929 = !DILocation(line: 1357, column: 43, scope: !6927)
!6930 = !DILocation(line: 1357, column: 11, scope: !6927)
!6931 = !DILocation(line: 1357, column: 53, scope: !6927)
!6932 = !DILocation(line: 1357, column: 11, scope: !6918)
!6933 = !DILocation(line: 1359, column: 21, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6927, file: !289, line: 1358, column: 9)
!6935 = !DILocation(line: 1359, column: 28, scope: !6934)
!6936 = !DILocation(line: 1359, column: 58, scope: !6934)
!6937 = !DILocation(line: 1359, column: 11, scope: !6934)
!6938 = !DILocation(line: 1360, column: 15, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6934, file: !289, line: 1360, column: 15)
!6940 = !DILocation(line: 1360, column: 18, scope: !6939)
!6941 = !DILocation(line: 1360, column: 15, scope: !6934)
!6942 = !DILocation(line: 1362, column: 26, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6939, file: !289, line: 1361, column: 13)
!6944 = !DILocation(line: 1363, column: 15, scope: !6943)
!6945 = !DILocation(line: 1365, column: 9, scope: !6934)
!6946 = !DILocation(line: 1366, column: 5, scope: !6918)
!6947 = !DILocation(line: 1370, column: 7, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1370, column: 7)
!6949 = !DILocation(line: 1370, column: 10, scope: !6948)
!6950 = !DILocation(line: 1370, column: 29, scope: !6948)
!6951 = !DILocation(line: 1370, column: 34, scope: !6948)
!6952 = !DILocation(line: 1370, column: 7, scope: !6419)
!6953 = !DILocation(line: 1372, column: 26, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6948, file: !289, line: 1371, column: 5)
!6955 = !DILocation(line: 1372, column: 29, scope: !6954)
!6956 = !DILocation(line: 1372, column: 39, scope: !6954)
!6957 = !DILocation(line: 1372, column: 50, scope: !6954)
!6958 = !DILocation(line: 1372, column: 59, scope: !6954)
!6959 = !DILocation(line: 1372, column: 58, scope: !6954)
!6960 = !DILocation(line: 1372, column: 15, scope: !6954)
!6961 = !DILocation(line: 1372, column: 7, scope: !6954)
!6962 = !DILocation(line: 1375, column: 22, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6954, file: !289, line: 1373, column: 9)
!6964 = !DILocation(line: 1376, column: 11, scope: !6963)
!6965 = !DILocation(line: 1379, column: 20, scope: !6963)
!6966 = !DILocation(line: 1380, column: 11, scope: !6963)
!6967 = !DILocation(line: 1382, column: 5, scope: !6954)
!6968 = !DILocation(line: 1387, column: 7, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1387, column: 7)
!6970 = !DILocation(line: 1387, column: 10, scope: !6969)
!6971 = !DILocation(line: 1387, column: 7, scope: !6419)
!6972 = !DILocalVariable(name: "access_changed", scope: !6973, file: !289, line: 1389, type: !139)
!6973 = distinct !DILexicalBlock(scope: !6969, file: !289, line: 1388, column: 5)
!6974 = !DILocation(line: 1389, column: 12, scope: !6973)
!6975 = !DILocation(line: 1391, column: 16, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6973, file: !289, line: 1391, column: 11)
!6977 = !DILocation(line: 1391, column: 24, scope: !6976)
!6978 = !DILocation(line: 1391, column: 35, scope: !6976)
!6979 = !DILocation(line: 1391, column: 38, scope: !6976)
!6980 = !DILocation(line: 1391, column: 49, scope: !6976)
!6981 = !DILocation(line: 1391, column: 11, scope: !6973)
!6982 = !DILocation(line: 1393, column: 46, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6976, file: !289, line: 1392, column: 9)
!6984 = !DILocation(line: 1393, column: 57, scope: !6983)
!6985 = !DILocation(line: 1393, column: 28, scope: !6983)
!6986 = !DILocation(line: 1394, column: 65, scope: !6983)
!6987 = !DILocation(line: 1393, column: 26, scope: !6983)
!6988 = !DILocation(line: 1395, column: 9, scope: !6983)
!6989 = !DILocation(line: 1397, column: 23, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6973, file: !289, line: 1397, column: 11)
!6991 = !DILocation(line: 1397, column: 33, scope: !6990)
!6992 = !DILocation(line: 1397, column: 46, scope: !6990)
!6993 = !DILocation(line: 1397, column: 56, scope: !6990)
!6994 = !DILocation(line: 1397, column: 67, scope: !6990)
!6995 = !DILocation(line: 1397, column: 12, scope: !6990)
!6996 = !DILocation(line: 1398, column: 11, scope: !6990)
!6997 = !DILocation(line: 1398, column: 14, scope: !6990)
!6998 = !DILocation(line: 1398, column: 17, scope: !6990)
!6999 = !DILocation(line: 1397, column: 11, scope: !6973)
!7000 = !DILocation(line: 1399, column: 20, scope: !6990)
!7001 = !DILocation(line: 1399, column: 9, scope: !6990)
!7002 = !DILocation(line: 1401, column: 11, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6973, file: !289, line: 1401, column: 11)
!7004 = !DILocation(line: 1401, column: 11, scope: !6973)
!7005 = !DILocation(line: 1402, column: 27, scope: !7003)
!7006 = !DILocation(line: 1402, column: 38, scope: !7003)
!7007 = !DILocation(line: 1402, column: 48, scope: !7003)
!7008 = !DILocation(line: 1402, column: 60, scope: !7003)
!7009 = !DILocation(line: 1402, column: 59, scope: !7003)
!7010 = !DILocation(line: 1402, column: 57, scope: !7003)
!7011 = !DILocation(line: 1402, column: 9, scope: !7003)
!7012 = !DILocation(line: 1403, column: 5, scope: !6973)
!7013 = !DILocation(line: 1405, column: 15, scope: !6419)
!7014 = !DILocation(line: 1405, column: 25, scope: !6419)
!7015 = !DILocation(line: 1405, column: 36, scope: !6419)
!7016 = !DILocation(line: 1405, column: 3, scope: !6419)
!7017 = !DILocation(line: 1407, column: 7, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1407, column: 7)
!7019 = !DILocation(line: 1407, column: 10, scope: !7018)
!7020 = !DILocation(line: 1407, column: 24, scope: !7018)
!7021 = !DILocation(line: 1407, column: 27, scope: !7018)
!7022 = !DILocation(line: 1407, column: 30, scope: !7018)
!7023 = !DILocation(line: 1407, column: 7, scope: !6419)
!7024 = !DILocation(line: 1409, column: 21, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7026, file: !289, line: 1409, column: 11)
!7026 = distinct !DILexicalBlock(scope: !7018, file: !289, line: 1408, column: 5)
!7027 = !DILocation(line: 1409, column: 31, scope: !7025)
!7028 = !DILocation(line: 1409, column: 44, scope: !7025)
!7029 = !DILocation(line: 1409, column: 54, scope: !7025)
!7030 = !DILocation(line: 1409, column: 65, scope: !7025)
!7031 = !DILocation(line: 1409, column: 11, scope: !7025)
!7032 = !DILocation(line: 1409, column: 75, scope: !7025)
!7033 = !DILocation(line: 1410, column: 11, scope: !7025)
!7034 = !DILocation(line: 1410, column: 14, scope: !7025)
!7035 = !DILocation(line: 1410, column: 17, scope: !7025)
!7036 = !DILocation(line: 1409, column: 11, scope: !7026)
!7037 = !DILocation(line: 1411, column: 20, scope: !7025)
!7038 = !DILocation(line: 1411, column: 9, scope: !7025)
!7039 = !DILocation(line: 1412, column: 5, scope: !7026)
!7040 = !DILocation(line: 1413, column: 12, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7018, file: !289, line: 1413, column: 12)
!7042 = !DILocation(line: 1413, column: 15, scope: !7041)
!7043 = !DILocation(line: 1413, column: 12, scope: !7018)
!7044 = !DILocation(line: 1415, column: 20, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !289, line: 1415, column: 11)
!7046 = distinct !DILexicalBlock(scope: !7041, file: !289, line: 1414, column: 5)
!7047 = !DILocation(line: 1415, column: 30, scope: !7045)
!7048 = !DILocation(line: 1415, column: 41, scope: !7045)
!7049 = !DILocation(line: 1415, column: 44, scope: !7045)
!7050 = !DILocation(line: 1415, column: 11, scope: !7045)
!7051 = !DILocation(line: 1415, column: 50, scope: !7045)
!7052 = !DILocation(line: 1415, column: 11, scope: !7046)
!7053 = !DILocation(line: 1416, column: 20, scope: !7045)
!7054 = !DILocation(line: 1416, column: 9, scope: !7045)
!7055 = !DILocation(line: 1417, column: 5, scope: !7046)
!7056 = !DILocation(line: 1418, column: 12, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7041, file: !289, line: 1418, column: 12)
!7058 = !DILocation(line: 1418, column: 15, scope: !7057)
!7059 = !DILocation(line: 1418, column: 41, scope: !7057)
!7060 = !DILocation(line: 1418, column: 45, scope: !7057)
!7061 = !DILocation(line: 1418, column: 44, scope: !7057)
!7062 = !DILocation(line: 1418, column: 12, scope: !7041)
!7063 = !DILocation(line: 1420, column: 20, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7065, file: !289, line: 1420, column: 11)
!7065 = distinct !DILexicalBlock(scope: !7057, file: !289, line: 1419, column: 5)
!7066 = !DILocation(line: 1420, column: 30, scope: !7064)
!7067 = !DILocation(line: 1420, column: 56, scope: !7064)
!7068 = !DILocation(line: 1420, column: 55, scope: !7064)
!7069 = !DILocation(line: 1420, column: 53, scope: !7064)
!7070 = !DILocation(line: 1420, column: 11, scope: !7064)
!7071 = !DILocation(line: 1420, column: 73, scope: !7064)
!7072 = !DILocation(line: 1420, column: 11, scope: !7065)
!7073 = !DILocation(line: 1421, column: 20, scope: !7064)
!7074 = !DILocation(line: 1421, column: 9, scope: !7064)
!7075 = !DILocation(line: 1422, column: 5, scope: !7065)
!7076 = !DILocation(line: 1423, column: 12, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7057, file: !289, line: 1423, column: 12)
!7078 = !DILocation(line: 1423, column: 12, scope: !7057)
!7079 = !DILocation(line: 1425, column: 32, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7077, file: !289, line: 1424, column: 5)
!7081 = !DILocation(line: 1425, column: 30, scope: !7080)
!7082 = !DILocation(line: 1425, column: 27, scope: !7080)
!7083 = !DILocation(line: 1426, column: 11, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7080, file: !289, line: 1426, column: 11)
!7085 = !DILocation(line: 1427, column: 11, scope: !7084)
!7086 = !DILocation(line: 1427, column: 32, scope: !7084)
!7087 = !DILocation(line: 1427, column: 43, scope: !7084)
!7088 = !DILocation(line: 1427, column: 53, scope: !7084)
!7089 = !DILocation(line: 1427, column: 14, scope: !7084)
!7090 = !DILocation(line: 1427, column: 63, scope: !7084)
!7091 = !DILocation(line: 1426, column: 11, scope: !7080)
!7092 = !DILocation(line: 1429, column: 21, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7084, file: !289, line: 1428, column: 9)
!7094 = !DILocation(line: 1429, column: 28, scope: !7093)
!7095 = !DILocation(line: 1430, column: 18, scope: !7093)
!7096 = !DILocation(line: 1429, column: 11, scope: !7093)
!7097 = !DILocation(line: 1431, column: 15, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7093, file: !289, line: 1431, column: 15)
!7099 = !DILocation(line: 1431, column: 18, scope: !7098)
!7100 = !DILocation(line: 1431, column: 15, scope: !7093)
!7101 = !DILocation(line: 1432, column: 24, scope: !7098)
!7102 = !DILocation(line: 1432, column: 13, scope: !7098)
!7103 = !DILocation(line: 1433, column: 9, scope: !7093)
!7104 = !DILocation(line: 1434, column: 5, scope: !7080)
!7105 = !DILabel(scope: !6419, name: "close_src_and_dst_desc", file: !289, line: 1436)
!7106 = !DILocation(line: 1436, column: 1, scope: !6419)
!7107 = !DILocation(line: 1437, column: 14, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1437, column: 7)
!7109 = !DILocation(line: 1437, column: 7, scope: !7108)
!7110 = !DILocation(line: 1437, column: 25, scope: !7108)
!7111 = !DILocation(line: 1437, column: 7, scope: !6419)
!7112 = !DILocation(line: 1439, column: 17, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7108, file: !289, line: 1438, column: 5)
!7114 = !DILocation(line: 1439, column: 24, scope: !7113)
!7115 = !DILocation(line: 1439, column: 49, scope: !7113)
!7116 = !DILocation(line: 1439, column: 7, scope: !7113)
!7117 = !DILocation(line: 1440, column: 18, scope: !7113)
!7118 = !DILocation(line: 1441, column: 5, scope: !7113)
!7119 = !DILocation(line: 1437, column: 27, scope: !7108)
!7120 = !DILabel(scope: !6419, name: "close_src_desc", file: !289, line: 1442)
!7121 = !DILocation(line: 1442, column: 1, scope: !6419)
!7122 = !DILocation(line: 1443, column: 14, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !6419, file: !289, line: 1443, column: 7)
!7124 = !DILocation(line: 1443, column: 7, scope: !7123)
!7125 = !DILocation(line: 1443, column: 27, scope: !7123)
!7126 = !DILocation(line: 1443, column: 7, scope: !6419)
!7127 = !DILocation(line: 1445, column: 17, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7123, file: !289, line: 1444, column: 5)
!7129 = !DILocation(line: 1445, column: 24, scope: !7128)
!7130 = !DILocation(line: 1445, column: 49, scope: !7128)
!7131 = !DILocation(line: 1445, column: 7, scope: !7128)
!7132 = !DILocation(line: 1446, column: 18, scope: !7128)
!7133 = !DILocation(line: 1447, column: 5, scope: !7128)
!7134 = !DILocation(line: 1449, column: 9, scope: !6419)
!7135 = !DILocation(line: 1449, column: 3, scope: !6419)
!7136 = !DILocation(line: 1450, column: 9, scope: !6419)
!7137 = !DILocation(line: 1450, column: 3, scope: !6419)
!7138 = !DILocation(line: 1451, column: 10, scope: !6419)
!7139 = !DILocation(line: 1451, column: 3, scope: !6419)
!7140 = !DILocation(line: 1452, column: 1, scope: !6419)
!7141 = distinct !DISubprogram(name: "restore_default_fscreatecon_or_die", scope: !289, file: !289, line: 1805, type: !562, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!7142 = !DILocation(line: 1807, column: 7, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7141, file: !289, line: 1807, column: 7)
!7144 = !DILocation(line: 1807, column: 29, scope: !7143)
!7145 = !DILocation(line: 1807, column: 7, scope: !7141)
!7146 = !DILocation(line: 1808, column: 5, scope: !7143)
!7147 = !DILocation(line: 1810, column: 1, scope: !7141)
!7148 = distinct !DISubprogram(name: "chown_failure_ok", scope: !289, file: !289, line: 3061, type: !4049, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !213)
!7149 = !DILocalVariable(name: "x", arg: 1, scope: !7148, file: !289, line: 3061, type: !3751)
!7150 = !DILocation(line: 3061, column: 44, scope: !7148)
!7151 = !DILocation(line: 3067, column: 12, scope: !7148)
!7152 = !DILocation(line: 3067, column: 18, scope: !7148)
!7153 = !DILocation(line: 3067, column: 27, scope: !7148)
!7154 = !DILocation(line: 3067, column: 30, scope: !7148)
!7155 = !DILocation(line: 3067, column: 36, scope: !7148)
!7156 = !DILocation(line: 3067, column: 47, scope: !7148)
!7157 = !DILocation(line: 3067, column: 51, scope: !7148)
!7158 = !DILocation(line: 3067, column: 54, scope: !7148)
!7159 = !DILocation(line: 3067, column: 50, scope: !7148)
!7160 = !DILocation(line: 0, scope: !7148)
!7161 = !DILocation(line: 3067, column: 3, scope: !7148)
!7162 = distinct !DISubprogram(name: "utimens_symlink", scope: !289, file: !289, line: 189, type: !7163, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!7163 = !DISubroutineType(types: !7164)
!7164 = !{!5, !113, !7165}
!7165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7166, size: 64)
!7166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !354)
!7167 = !DILocalVariable(name: "file", arg: 1, scope: !7162, file: !289, line: 189, type: !113)
!7168 = !DILocation(line: 189, column: 30, scope: !7162)
!7169 = !DILocalVariable(name: "timespec", arg: 2, scope: !7162, file: !289, line: 189, type: !7165)
!7170 = !DILocation(line: 189, column: 59, scope: !7162)
!7171 = !DILocalVariable(name: "err", scope: !7162, file: !289, line: 191, type: !5)
!7172 = !DILocation(line: 191, column: 7, scope: !7162)
!7173 = !DILocation(line: 191, column: 23, scope: !7162)
!7174 = !DILocation(line: 191, column: 29, scope: !7162)
!7175 = !DILocation(line: 191, column: 13, scope: !7162)
!7176 = !DILocation(line: 195, column: 7, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7162, file: !289, line: 195, column: 7)
!7178 = !DILocation(line: 195, column: 11, scope: !7177)
!7179 = !DILocation(line: 195, column: 14, scope: !7177)
!7180 = !DILocation(line: 195, column: 20, scope: !7177)
!7181 = !DILocation(line: 195, column: 7, scope: !7162)
!7182 = !DILocation(line: 196, column: 9, scope: !7177)
!7183 = !DILocation(line: 196, column: 5, scope: !7177)
!7184 = !DILocation(line: 197, column: 10, scope: !7162)
!7185 = !DILocation(line: 197, column: 3, scope: !7162)
!7186 = distinct !DISubprogram(name: "set_owner", scope: !289, file: !289, line: 816, type: !7187, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!7187 = !DISubroutineType(types: !7188)
!7188 = !{!5, !3751, !113, !5, !388, !139, !388}
!7189 = !DILocalVariable(name: "x", arg: 1, scope: !7186, file: !289, line: 816, type: !3751)
!7190 = !DILocation(line: 816, column: 37, scope: !7186)
!7191 = !DILocalVariable(name: "dst_name", arg: 2, scope: !7186, file: !289, line: 816, type: !113)
!7192 = !DILocation(line: 816, column: 52, scope: !7186)
!7193 = !DILocalVariable(name: "dest_desc", arg: 3, scope: !7186, file: !289, line: 816, type: !5)
!7194 = !DILocation(line: 816, column: 66, scope: !7186)
!7195 = !DILocalVariable(name: "src_sb", arg: 4, scope: !7186, file: !289, line: 817, type: !388)
!7196 = !DILocation(line: 817, column: 31, scope: !7186)
!7197 = !DILocalVariable(name: "new_dst", arg: 5, scope: !7186, file: !289, line: 817, type: !139)
!7198 = !DILocation(line: 817, column: 44, scope: !7186)
!7199 = !DILocalVariable(name: "dst_sb", arg: 6, scope: !7186, file: !289, line: 818, type: !388)
!7200 = !DILocation(line: 818, column: 31, scope: !7186)
!7201 = !DILocalVariable(name: "uid", scope: !7186, file: !289, line: 820, type: !452)
!7202 = !DILocation(line: 820, column: 9, scope: !7186)
!7203 = !DILocation(line: 820, column: 15, scope: !7186)
!7204 = !DILocation(line: 820, column: 23, scope: !7186)
!7205 = !DILocalVariable(name: "gid", scope: !7186, file: !289, line: 821, type: !453)
!7206 = !DILocation(line: 821, column: 9, scope: !7186)
!7207 = !DILocation(line: 821, column: 15, scope: !7186)
!7208 = !DILocation(line: 821, column: 23, scope: !7186)
!7209 = !DILocation(line: 829, column: 8, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7186, file: !289, line: 829, column: 7)
!7211 = !DILocation(line: 829, column: 16, scope: !7210)
!7212 = !DILocation(line: 829, column: 20, scope: !7210)
!7213 = !DILocation(line: 829, column: 23, scope: !7210)
!7214 = !DILocation(line: 829, column: 37, scope: !7210)
!7215 = !DILocation(line: 829, column: 40, scope: !7210)
!7216 = !DILocation(line: 829, column: 43, scope: !7210)
!7217 = !DILocation(line: 829, column: 53, scope: !7210)
!7218 = !DILocation(line: 829, column: 56, scope: !7210)
!7219 = !DILocation(line: 829, column: 59, scope: !7210)
!7220 = !DILocation(line: 829, column: 7, scope: !7186)
!7221 = !DILocalVariable(name: "old_mode", scope: !7222, file: !289, line: 831, type: !236)
!7222 = distinct !DILexicalBlock(scope: !7210, file: !289, line: 830, column: 5)
!7223 = !DILocation(line: 831, column: 14, scope: !7222)
!7224 = !DILocation(line: 831, column: 25, scope: !7222)
!7225 = !DILocation(line: 831, column: 33, scope: !7222)
!7226 = !DILocalVariable(name: "new_mode", scope: !7222, file: !289, line: 832, type: !236)
!7227 = !DILocation(line: 832, column: 14, scope: !7222)
!7228 = !DILocation(line: 833, column: 10, scope: !7222)
!7229 = !DILocation(line: 833, column: 13, scope: !7222)
!7230 = !DILocation(line: 833, column: 27, scope: !7222)
!7231 = !DILocation(line: 833, column: 30, scope: !7222)
!7232 = !DILocation(line: 833, column: 33, scope: !7222)
!7233 = !DILocation(line: 833, column: 45, scope: !7222)
!7234 = !DILocation(line: 833, column: 53, scope: !7222)
!7235 = !DILocation(line: 833, column: 63, scope: !7222)
!7236 = !DILocation(line: 833, column: 66, scope: !7222)
!7237 = !DILocalVariable(name: "restrictive_temp_mode", scope: !7222, file: !289, line: 834, type: !236)
!7238 = !DILocation(line: 834, column: 14, scope: !7222)
!7239 = !DILocation(line: 834, column: 38, scope: !7222)
!7240 = !DILocation(line: 834, column: 49, scope: !7222)
!7241 = !DILocation(line: 834, column: 47, scope: !7222)
!7242 = !DILocation(line: 834, column: 58, scope: !7222)
!7243 = !DILocation(line: 837, column: 16, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7222, file: !289, line: 836, column: 11)
!7245 = !DILocation(line: 837, column: 25, scope: !7244)
!7246 = !DILocation(line: 838, column: 20, scope: !7244)
!7247 = !DILocation(line: 838, column: 19, scope: !7244)
!7248 = !DILocation(line: 838, column: 29, scope: !7244)
!7249 = !DILocation(line: 838, column: 39, scope: !7244)
!7250 = !DILocation(line: 838, column: 49, scope: !7244)
!7251 = !DILocation(line: 838, column: 16, scope: !7244)
!7252 = !DILocation(line: 839, column: 11, scope: !7244)
!7253 = !DILocation(line: 839, column: 24, scope: !7244)
!7254 = !DILocation(line: 839, column: 34, scope: !7244)
!7255 = !DILocation(line: 839, column: 45, scope: !7244)
!7256 = !DILocation(line: 839, column: 14, scope: !7244)
!7257 = !DILocation(line: 839, column: 68, scope: !7244)
!7258 = !DILocation(line: 836, column: 11, scope: !7222)
!7259 = !DILocation(line: 841, column: 35, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7261, file: !289, line: 841, column: 15)
!7261 = distinct !DILexicalBlock(scope: !7244, file: !289, line: 840, column: 9)
!7262 = !DILocation(line: 841, column: 17, scope: !7260)
!7263 = !DILocation(line: 841, column: 15, scope: !7261)
!7264 = !DILocation(line: 842, column: 23, scope: !7260)
!7265 = !DILocation(line: 842, column: 30, scope: !7260)
!7266 = !DILocation(line: 843, column: 20, scope: !7260)
!7267 = !DILocation(line: 842, column: 13, scope: !7260)
!7268 = !DILocation(line: 844, column: 19, scope: !7261)
!7269 = !DILocation(line: 844, column: 22, scope: !7261)
!7270 = !DILocation(line: 844, column: 18, scope: !7261)
!7271 = !DILocation(line: 844, column: 11, scope: !7261)
!7272 = !DILocation(line: 846, column: 5, scope: !7222)
!7273 = !DILocation(line: 848, column: 22, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7186, file: !289, line: 848, column: 7)
!7275 = !DILocation(line: 848, column: 32, scope: !7274)
!7276 = !DILocation(line: 848, column: 7, scope: !7186)
!7277 = !DILocation(line: 850, column: 19, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !289, line: 850, column: 11)
!7279 = distinct !DILexicalBlock(scope: !7274, file: !289, line: 849, column: 5)
!7280 = !DILocation(line: 850, column: 30, scope: !7278)
!7281 = !DILocation(line: 850, column: 35, scope: !7278)
!7282 = !DILocation(line: 850, column: 11, scope: !7278)
!7283 = !DILocation(line: 850, column: 40, scope: !7278)
!7284 = !DILocation(line: 850, column: 11, scope: !7279)
!7285 = !DILocation(line: 851, column: 9, scope: !7278)
!7286 = !DILocation(line: 852, column: 11, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7279, file: !289, line: 852, column: 11)
!7288 = !DILocation(line: 852, column: 17, scope: !7287)
!7289 = !DILocation(line: 852, column: 26, scope: !7287)
!7290 = !DILocation(line: 852, column: 29, scope: !7287)
!7291 = !DILocation(line: 852, column: 35, scope: !7287)
!7292 = !DILocation(line: 852, column: 11, scope: !7279)
!7293 = !DILocalVariable(name: "saved_errno", scope: !7294, file: !289, line: 856, type: !5)
!7294 = distinct !DILexicalBlock(scope: !7287, file: !289, line: 853, column: 9)
!7295 = !DILocation(line: 856, column: 15, scope: !7294)
!7296 = !DILocation(line: 856, column: 29, scope: !7294)
!7297 = !DILocalVariable(name: "__x", scope: !7298, file: !289, line: 857, type: !5)
!7298 = distinct !DILexicalBlock(scope: !7294, file: !289, line: 857, column: 11)
!7299 = !DILocation(line: 857, column: 11, scope: !7298)
!7300 = !DILocation(line: 858, column: 19, scope: !7294)
!7301 = !DILocation(line: 858, column: 11, scope: !7294)
!7302 = !DILocation(line: 858, column: 17, scope: !7294)
!7303 = !DILocation(line: 859, column: 9, scope: !7294)
!7304 = !DILocation(line: 860, column: 5, scope: !7279)
!7305 = !DILocation(line: 863, column: 19, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7307, file: !289, line: 863, column: 11)
!7307 = distinct !DILexicalBlock(scope: !7274, file: !289, line: 862, column: 5)
!7308 = !DILocation(line: 863, column: 29, scope: !7306)
!7309 = !DILocation(line: 863, column: 34, scope: !7306)
!7310 = !DILocation(line: 863, column: 11, scope: !7306)
!7311 = !DILocation(line: 863, column: 39, scope: !7306)
!7312 = !DILocation(line: 863, column: 11, scope: !7307)
!7313 = !DILocation(line: 864, column: 9, scope: !7306)
!7314 = !DILocation(line: 865, column: 11, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7307, file: !289, line: 865, column: 11)
!7316 = !DILocation(line: 865, column: 17, scope: !7315)
!7317 = !DILocation(line: 865, column: 26, scope: !7315)
!7318 = !DILocation(line: 865, column: 29, scope: !7315)
!7319 = !DILocation(line: 865, column: 35, scope: !7315)
!7320 = !DILocation(line: 865, column: 11, scope: !7307)
!7321 = !DILocalVariable(name: "saved_errno", scope: !7322, file: !289, line: 869, type: !5)
!7322 = distinct !DILexicalBlock(scope: !7315, file: !289, line: 866, column: 9)
!7323 = !DILocation(line: 869, column: 15, scope: !7322)
!7324 = !DILocation(line: 869, column: 29, scope: !7322)
!7325 = !DILocalVariable(name: "__x", scope: !7326, file: !289, line: 870, type: !5)
!7326 = distinct !DILexicalBlock(scope: !7322, file: !289, line: 870, column: 11)
!7327 = !DILocation(line: 870, column: 11, scope: !7326)
!7328 = !DILocation(line: 871, column: 19, scope: !7322)
!7329 = !DILocation(line: 871, column: 11, scope: !7322)
!7330 = !DILocation(line: 871, column: 17, scope: !7322)
!7331 = !DILocation(line: 872, column: 9, scope: !7322)
!7332 = !DILocation(line: 875, column: 27, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7186, file: !289, line: 875, column: 7)
!7334 = !DILocation(line: 875, column: 9, scope: !7333)
!7335 = !DILocation(line: 875, column: 7, scope: !7186)
!7336 = !DILocation(line: 877, column: 17, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7333, file: !289, line: 876, column: 5)
!7338 = !DILocation(line: 877, column: 24, scope: !7337)
!7339 = !DILocation(line: 878, column: 14, scope: !7337)
!7340 = !DILocation(line: 877, column: 7, scope: !7337)
!7341 = !DILocation(line: 879, column: 11, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7337, file: !289, line: 879, column: 11)
!7343 = !DILocation(line: 879, column: 14, scope: !7342)
!7344 = !DILocation(line: 879, column: 11, scope: !7337)
!7345 = !DILocation(line: 880, column: 9, scope: !7342)
!7346 = !DILocation(line: 881, column: 5, scope: !7337)
!7347 = !DILocation(line: 883, column: 3, scope: !7186)
!7348 = !DILocation(line: 884, column: 1, scope: !7186)
!7349 = distinct !DISubprogram(name: "copy_attr", scope: !289, file: !289, line: 722, type: !7350, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!7350 = !DISubroutineType(types: !7351)
!7351 = !{!139, !113, !5, !113, !5, !3751}
!7352 = !DILocalVariable(name: "src_path", arg: 1, scope: !7349, file: !289, line: 722, type: !113)
!7353 = !DILocation(line: 722, column: 24, scope: !7349)
!7354 = !DILocalVariable(name: "src_fd", arg: 2, scope: !7349, file: !289, line: 723, type: !5)
!7355 = !DILocation(line: 723, column: 16, scope: !7349)
!7356 = !DILocalVariable(name: "dst_path", arg: 3, scope: !7349, file: !289, line: 724, type: !113)
!7357 = !DILocation(line: 724, column: 24, scope: !7349)
!7358 = !DILocalVariable(name: "dst_fd", arg: 4, scope: !7349, file: !289, line: 725, type: !5)
!7359 = !DILocation(line: 725, column: 16, scope: !7349)
!7360 = !DILocalVariable(name: "x", arg: 5, scope: !7349, file: !289, line: 726, type: !3751)
!7361 = !DILocation(line: 726, column: 37, scope: !7349)
!7362 = !DILocation(line: 728, column: 3, scope: !7349)
!7363 = distinct !DISubprogram(name: "set_author", scope: !289, file: !289, line: 892, type: !7364, scopeLine: 893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{null, !113, !5, !388}
!7366 = !DILocalVariable(name: "dst_name", arg: 1, scope: !7363, file: !289, line: 892, type: !113)
!7367 = !DILocation(line: 892, column: 25, scope: !7363)
!7368 = !DILocalVariable(name: "dest_desc", arg: 2, scope: !7363, file: !289, line: 892, type: !5)
!7369 = !DILocation(line: 892, column: 39, scope: !7363)
!7370 = !DILocalVariable(name: "src_sb", arg: 3, scope: !7363, file: !289, line: 892, type: !388)
!7371 = !DILocation(line: 892, column: 69, scope: !7363)
!7372 = !DILocation(line: 913, column: 10, scope: !7363)
!7373 = !DILocation(line: 914, column: 10, scope: !7363)
!7374 = !DILocation(line: 915, column: 10, scope: !7363)
!7375 = !DILocation(line: 917, column: 1, scope: !7363)
!7376 = !DILocation(line: 3090, column: 7, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !457, file: !289, line: 3090, column: 7)
!7378 = !DILocation(line: 3090, column: 12, scope: !7377)
!7379 = !DILocation(line: 3090, column: 7, scope: !457)
!7380 = !DILocation(line: 3092, column: 14, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7377, file: !289, line: 3091, column: 5)
!7382 = !DILocation(line: 3092, column: 12, scope: !7381)
!7383 = !DILocation(line: 3093, column: 14, scope: !7381)
!7384 = !DILocation(line: 3093, column: 7, scope: !7381)
!7385 = !DILocation(line: 3094, column: 5, scope: !7381)
!7386 = !DILocation(line: 3095, column: 10, scope: !457)
!7387 = !DILocation(line: 3095, column: 3, scope: !457)
!7388 = distinct !DISubprogram(name: "owner_failure_ok", scope: !289, file: !289, line: 3075, type: !4049, scopeLine: 3076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!7389 = !DILocalVariable(name: "x", arg: 1, scope: !7388, file: !289, line: 3075, type: !3751)
!7390 = !DILocation(line: 3075, column: 44, scope: !7388)
!7391 = !DILocation(line: 3077, column: 12, scope: !7388)
!7392 = !DILocation(line: 3077, column: 18, scope: !7388)
!7393 = !DILocation(line: 3077, column: 27, scope: !7388)
!7394 = !DILocation(line: 3077, column: 30, scope: !7388)
!7395 = !DILocation(line: 3077, column: 36, scope: !7388)
!7396 = !DILocation(line: 3077, column: 47, scope: !7388)
!7397 = !DILocation(line: 3077, column: 51, scope: !7388)
!7398 = !DILocation(line: 3077, column: 54, scope: !7388)
!7399 = !DILocation(line: 3077, column: 50, scope: !7388)
!7400 = !DILocation(line: 0, scope: !7388)
!7401 = !DILocation(line: 3077, column: 3, scope: !7388)
!7402 = distinct !DISubprogram(name: "clone_file", scope: !289, file: !289, line: 370, type: !1037, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!7403 = !DILocalVariable(name: "dest_fd", arg: 1, scope: !7402, file: !289, line: 370, type: !5)
!7404 = !DILocation(line: 370, column: 17, scope: !7402)
!7405 = !DILocalVariable(name: "src_fd", arg: 2, scope: !7402, file: !289, line: 370, type: !5)
!7406 = !DILocation(line: 370, column: 30, scope: !7402)
!7407 = !DILocation(line: 373, column: 17, scope: !7402)
!7408 = !DILocation(line: 373, column: 35, scope: !7402)
!7409 = !DILocation(line: 373, column: 10, scope: !7402)
!7410 = !DILocation(line: 373, column: 3, scope: !7402)
!7411 = distinct !DISubprogram(name: "io_blksize", scope: !7412, file: !7412, line: 75, type: !7413, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!7412 = !DIFile(filename: "src/ioblksize.h", directory: "/home/mohamad/clone/coreutils")
!7413 = !DISubroutineType(types: !7414)
!7414 = !{!52, !335}
!7415 = !DILocalVariable(name: "sb", arg: 1, scope: !7411, file: !7412, line: 75, type: !335)
!7416 = !DILocation(line: 75, column: 25, scope: !7411)
!7417 = !DILocation(line: 77, column: 10, scope: !7411)
!7418 = !DILocation(line: 77, column: 3, scope: !7411)
!7419 = distinct !DISubprogram(name: "is_probably_sparse", scope: !289, file: !289, line: 1031, type: !7420, scopeLine: 1032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!7420 = !DISubroutineType(types: !7421)
!7421 = !{!139, !388}
!7422 = !DILocalVariable(name: "sb", arg: 1, scope: !7419, file: !289, line: 1031, type: !388)
!7423 = !DILocation(line: 1031, column: 40, scope: !7419)
!7424 = !DILocation(line: 1034, column: 14, scope: !7419)
!7425 = !DILocation(line: 1035, column: 11, scope: !7419)
!7426 = !DILocation(line: 1035, column: 14, scope: !7419)
!7427 = !DILocation(line: 1035, column: 33, scope: !7419)
!7428 = !DILocation(line: 1035, column: 37, scope: !7419)
!7429 = !DILocation(line: 1035, column: 45, scope: !7419)
!7430 = !DILocation(line: 1035, column: 31, scope: !7419)
!7431 = !DILocation(line: 0, scope: !7419)
!7432 = !DILocation(line: 1033, column: 3, scope: !7419)
!7433 = distinct !DISubprogram(name: "ptr_align", scope: !209, file: !209, line: 498, type: !7434, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!7434 = !DISubroutineType(types: !7435)
!7435 = !{!47, !553, !52}
!7436 = !DILocalVariable(name: "ptr", arg: 1, scope: !7433, file: !209, line: 498, type: !553)
!7437 = !DILocation(line: 498, column: 24, scope: !7433)
!7438 = !DILocalVariable(name: "alignment", arg: 2, scope: !7433, file: !209, line: 498, type: !52)
!7439 = !DILocation(line: 498, column: 36, scope: !7433)
!7440 = !DILocalVariable(name: "p0", scope: !7433, file: !209, line: 500, type: !113)
!7441 = !DILocation(line: 500, column: 15, scope: !7433)
!7442 = !DILocation(line: 500, column: 20, scope: !7433)
!7443 = !DILocalVariable(name: "p1", scope: !7433, file: !209, line: 501, type: !113)
!7444 = !DILocation(line: 501, column: 15, scope: !7433)
!7445 = !DILocation(line: 501, column: 20, scope: !7433)
!7446 = !DILocation(line: 501, column: 25, scope: !7433)
!7447 = !DILocation(line: 501, column: 23, scope: !7433)
!7448 = !DILocation(line: 501, column: 35, scope: !7433)
!7449 = !DILocation(line: 502, column: 20, scope: !7433)
!7450 = !DILocation(line: 502, column: 34, scope: !7433)
!7451 = !DILocation(line: 502, column: 25, scope: !7433)
!7452 = !DILocation(line: 502, column: 39, scope: !7433)
!7453 = !DILocation(line: 502, column: 37, scope: !7433)
!7454 = !DILocation(line: 502, column: 23, scope: !7433)
!7455 = !DILocation(line: 502, column: 3, scope: !7433)
!7456 = distinct !DISubprogram(name: "extent_copy", scope: !289, file: !289, line: 423, type: !7457, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!7457 = !DISubroutineType(types: !7458)
!7458 = !{!139, !5, !5, !7, !52, !52, !292, !86, !113, !113, !4020}
!7459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !439, line: 36, size: 384, elements: !7460)
!7460 = !{!7461, !7462, !7463, !7464, !7465, !7466, !7467}
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !7459, file: !439, line: 39, baseType: !5, size: 32)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !7459, file: !439, line: 42, baseType: !292, size: 64, offset: 64)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !7459, file: !439, line: 45, baseType: !67, size: 32, offset: 128)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !7459, file: !439, line: 48, baseType: !52, size: 64, offset: 192)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !7459, file: !439, line: 52, baseType: !139, size: 8, offset: 256)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !7459, file: !439, line: 55, baseType: !139, size: 8, offset: 264)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !7459, file: !439, line: 58, baseType: !437, size: 64, offset: 320)
!7468 = !DILocalVariable(name: "src_fd", arg: 1, scope: !7456, file: !289, line: 423, type: !5)
!7469 = !DILocation(line: 423, column: 18, scope: !7456)
!7470 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !7456, file: !289, line: 423, type: !5)
!7471 = !DILocation(line: 423, column: 30, scope: !7456)
!7472 = !DILocalVariable(name: "buf", arg: 3, scope: !7456, file: !289, line: 423, type: !7)
!7473 = !DILocation(line: 423, column: 45, scope: !7456)
!7474 = !DILocalVariable(name: "buf_size", arg: 4, scope: !7456, file: !289, line: 423, type: !52)
!7475 = !DILocation(line: 423, column: 57, scope: !7456)
!7476 = !DILocalVariable(name: "hole_size", arg: 5, scope: !7456, file: !289, line: 424, type: !52)
!7477 = !DILocation(line: 424, column: 21, scope: !7456)
!7478 = !DILocalVariable(name: "src_total_size", arg: 6, scope: !7456, file: !289, line: 424, type: !292)
!7479 = !DILocation(line: 424, column: 38, scope: !7456)
!7480 = !DILocalVariable(name: "sparse_mode", arg: 7, scope: !7456, file: !289, line: 425, type: !86)
!7481 = !DILocation(line: 425, column: 31, scope: !7456)
!7482 = !DILocalVariable(name: "src_name", arg: 8, scope: !7456, file: !289, line: 426, type: !113)
!7483 = !DILocation(line: 426, column: 26, scope: !7456)
!7484 = !DILocalVariable(name: "dst_name", arg: 9, scope: !7456, file: !289, line: 426, type: !113)
!7485 = !DILocation(line: 426, column: 48, scope: !7456)
!7486 = !DILocalVariable(name: "require_normal_copy", arg: 10, scope: !7456, file: !289, line: 427, type: !4020)
!7487 = !DILocation(line: 427, column: 20, scope: !7456)
!7488 = !DILocalVariable(name: "scan", scope: !7456, file: !289, line: 429, type: !7459)
!7489 = !DILocation(line: 429, column: 22, scope: !7456)
!7490 = !DILocalVariable(name: "last_ext_start", scope: !7456, file: !289, line: 430, type: !292)
!7491 = !DILocation(line: 430, column: 9, scope: !7456)
!7492 = !DILocalVariable(name: "last_ext_len", scope: !7456, file: !289, line: 431, type: !292)
!7493 = !DILocation(line: 431, column: 9, scope: !7456)
!7494 = !DILocalVariable(name: "dest_pos", scope: !7456, file: !289, line: 435, type: !292)
!7495 = !DILocation(line: 435, column: 9, scope: !7456)
!7496 = !DILocation(line: 437, column: 21, scope: !7456)
!7497 = !DILocation(line: 437, column: 3, scope: !7456)
!7498 = !DILocation(line: 439, column: 4, scope: !7456)
!7499 = !DILocation(line: 439, column: 24, scope: !7456)
!7500 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !7456, file: !289, line: 440, type: !139)
!7501 = !DILocation(line: 440, column: 8, scope: !7456)
!7502 = !DILocation(line: 441, column: 3, scope: !7456)
!7503 = !DILocalVariable(name: "ok", scope: !7504, file: !289, line: 443, type: !139)
!7504 = distinct !DILexicalBlock(scope: !7456, file: !289, line: 442, column: 5)
!7505 = !DILocation(line: 443, column: 12, scope: !7504)
!7506 = !DILocation(line: 443, column: 17, scope: !7504)
!7507 = !DILocation(line: 444, column: 13, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7504, file: !289, line: 444, column: 11)
!7509 = !DILocation(line: 444, column: 11, scope: !7504)
!7510 = !DILocation(line: 446, column: 20, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7512, file: !289, line: 446, column: 15)
!7512 = distinct !DILexicalBlock(scope: !7508, file: !289, line: 445, column: 9)
!7513 = !DILocation(line: 446, column: 15, scope: !7512)
!7514 = !DILocation(line: 447, column: 13, scope: !7511)
!7515 = !DILocation(line: 449, column: 20, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7512, file: !289, line: 449, column: 15)
!7517 = !DILocation(line: 449, column: 15, scope: !7512)
!7518 = !DILocation(line: 451, column: 16, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7516, file: !289, line: 450, column: 13)
!7520 = !DILocation(line: 451, column: 36, scope: !7519)
!7521 = !DILocation(line: 452, column: 15, scope: !7519)
!7522 = !DILocation(line: 455, column: 21, scope: !7512)
!7523 = !DILocation(line: 455, column: 28, scope: !7512)
!7524 = !DILocation(line: 456, column: 18, scope: !7512)
!7525 = !DILocation(line: 455, column: 11, scope: !7512)
!7526 = !DILocation(line: 457, column: 11, scope: !7512)
!7527 = !DILocalVariable(name: "empty_extent", scope: !7504, file: !289, line: 460, type: !139)
!7528 = !DILocation(line: 460, column: 12, scope: !7504)
!7529 = !DILocalVariable(name: "i", scope: !7530, file: !289, line: 461, type: !67)
!7530 = distinct !DILexicalBlock(scope: !7504, file: !289, line: 461, column: 7)
!7531 = !DILocation(line: 461, column: 25, scope: !7530)
!7532 = !DILocation(line: 461, column: 12, scope: !7530)
!7533 = !DILocation(line: 461, column: 32, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7530, file: !289, line: 461, column: 7)
!7535 = !DILocation(line: 461, column: 41, scope: !7534)
!7536 = !DILocation(line: 461, column: 34, scope: !7534)
!7537 = !DILocation(line: 461, column: 50, scope: !7534)
!7538 = !DILocation(line: 461, column: 53, scope: !7534)
!7539 = !DILocation(line: 461, column: 7, scope: !7530)
!7540 = !DILocalVariable(name: "ext_start", scope: !7541, file: !289, line: 463, type: !292)
!7541 = distinct !DILexicalBlock(scope: !7534, file: !289, line: 462, column: 9)
!7542 = !DILocation(line: 463, column: 17, scope: !7541)
!7543 = !DILocalVariable(name: "ext_len", scope: !7541, file: !289, line: 464, type: !292)
!7544 = !DILocation(line: 464, column: 17, scope: !7541)
!7545 = !DILocalVariable(name: "ext_hole_size", scope: !7541, file: !289, line: 465, type: !292)
!7546 = !DILocation(line: 465, column: 17, scope: !7541)
!7547 = !DILocation(line: 467, column: 15, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7541, file: !289, line: 467, column: 15)
!7549 = !DILocation(line: 467, column: 24, scope: !7548)
!7550 = !DILocation(line: 467, column: 17, scope: !7548)
!7551 = !DILocation(line: 467, column: 15, scope: !7541)
!7552 = !DILocation(line: 469, column: 32, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7548, file: !289, line: 468, column: 13)
!7554 = !DILocation(line: 469, column: 41, scope: !7553)
!7555 = !DILocation(line: 469, column: 27, scope: !7553)
!7556 = !DILocation(line: 469, column: 44, scope: !7553)
!7557 = !DILocation(line: 469, column: 25, scope: !7553)
!7558 = !DILocation(line: 470, column: 30, scope: !7553)
!7559 = !DILocation(line: 470, column: 39, scope: !7553)
!7560 = !DILocation(line: 470, column: 25, scope: !7553)
!7561 = !DILocation(line: 470, column: 42, scope: !7553)
!7562 = !DILocation(line: 470, column: 23, scope: !7553)
!7563 = !DILocation(line: 471, column: 13, scope: !7553)
!7564 = !DILocation(line: 474, column: 16, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7548, file: !289, line: 473, column: 13)
!7566 = !DILocation(line: 475, column: 27, scope: !7565)
!7567 = !DILocation(line: 475, column: 49, scope: !7565)
!7568 = !DILocation(line: 475, column: 58, scope: !7565)
!7569 = !DILocation(line: 475, column: 44, scope: !7565)
!7570 = !DILocation(line: 475, column: 61, scope: !7565)
!7571 = !DILocation(line: 475, column: 42, scope: !7565)
!7572 = !DILocation(line: 475, column: 25, scope: !7565)
!7573 = !DILocation(line: 476, column: 23, scope: !7565)
!7574 = !DILocation(line: 486, column: 15, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7541, file: !289, line: 486, column: 15)
!7576 = !DILocation(line: 486, column: 32, scope: !7575)
!7577 = !DILocation(line: 486, column: 44, scope: !7575)
!7578 = !DILocation(line: 486, column: 42, scope: !7575)
!7579 = !DILocation(line: 486, column: 30, scope: !7575)
!7580 = !DILocation(line: 486, column: 15, scope: !7541)
!7581 = !DILocation(line: 488, column: 19, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7583, file: !289, line: 488, column: 19)
!7583 = distinct !DILexicalBlock(scope: !7575, file: !289, line: 487, column: 13)
!7584 = !DILocation(line: 488, column: 36, scope: !7582)
!7585 = !DILocation(line: 488, column: 34, scope: !7582)
!7586 = !DILocation(line: 488, column: 19, scope: !7583)
!7587 = !DILocation(line: 489, column: 29, scope: !7582)
!7588 = !DILocation(line: 489, column: 27, scope: !7582)
!7589 = !DILocation(line: 489, column: 17, scope: !7582)
!7590 = !DILocation(line: 490, column: 25, scope: !7583)
!7591 = !DILocation(line: 490, column: 42, scope: !7583)
!7592 = !DILocation(line: 490, column: 40, scope: !7583)
!7593 = !DILocation(line: 490, column: 23, scope: !7583)
!7594 = !DILocation(line: 491, column: 13, scope: !7583)
!7595 = !DILocation(line: 493, column: 27, scope: !7541)
!7596 = !DILocation(line: 493, column: 39, scope: !7541)
!7597 = !DILocation(line: 493, column: 37, scope: !7541)
!7598 = !DILocation(line: 493, column: 56, scope: !7541)
!7599 = !DILocation(line: 493, column: 54, scope: !7541)
!7600 = !DILocation(line: 493, column: 25, scope: !7541)
!7601 = !DILocation(line: 495, column: 29, scope: !7541)
!7602 = !DILocation(line: 497, column: 15, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7541, file: !289, line: 497, column: 15)
!7604 = !DILocation(line: 497, column: 15, scope: !7541)
!7605 = !DILocation(line: 499, column: 26, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7607, file: !289, line: 499, column: 19)
!7607 = distinct !DILexicalBlock(scope: !7603, file: !289, line: 498, column: 13)
!7608 = !DILocation(line: 499, column: 34, scope: !7606)
!7609 = !DILocation(line: 499, column: 19, scope: !7606)
!7610 = !DILocation(line: 499, column: 55, scope: !7606)
!7611 = !DILocation(line: 499, column: 19, scope: !7607)
!7612 = !DILocation(line: 501, column: 29, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7606, file: !289, line: 500, column: 17)
!7614 = !DILocation(line: 501, column: 36, scope: !7613)
!7615 = !DILocation(line: 501, column: 58, scope: !7613)
!7616 = !DILocation(line: 501, column: 19, scope: !7613)
!7617 = !DILabel(scope: !7613, name: "fail", file: !289, line: 502)
!7618 = !DILocation(line: 502, column: 17, scope: !7613)
!7619 = !DILocation(line: 503, column: 19, scope: !7613)
!7620 = !DILocation(line: 504, column: 19, scope: !7613)
!7621 = !DILocation(line: 507, column: 20, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7607, file: !289, line: 507, column: 19)
!7623 = !DILocation(line: 507, column: 33, scope: !7622)
!7624 = !DILocation(line: 507, column: 36, scope: !7622)
!7625 = !DILocation(line: 507, column: 48, scope: !7622)
!7626 = !DILocation(line: 508, column: 19, scope: !7622)
!7627 = !DILocation(line: 508, column: 24, scope: !7622)
!7628 = !DILocation(line: 508, column: 37, scope: !7622)
!7629 = !DILocation(line: 508, column: 40, scope: !7622)
!7630 = !DILocation(line: 508, column: 52, scope: !7622)
!7631 = !DILocation(line: 507, column: 19, scope: !7607)
!7632 = !DILocation(line: 510, column: 38, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7634, file: !289, line: 510, column: 23)
!7634 = distinct !DILexicalBlock(scope: !7622, file: !289, line: 509, column: 17)
!7635 = !DILocation(line: 510, column: 47, scope: !7633)
!7636 = !DILocation(line: 511, column: 38, scope: !7633)
!7637 = !DILocation(line: 511, column: 50, scope: !7633)
!7638 = !DILocation(line: 512, column: 38, scope: !7633)
!7639 = !DILocation(line: 510, column: 25, scope: !7633)
!7640 = !DILocation(line: 510, column: 23, scope: !7634)
!7641 = !DILocation(line: 513, column: 21, scope: !7633)
!7642 = !DILocation(line: 514, column: 37, scope: !7634)
!7643 = !DILocation(line: 515, column: 17, scope: !7634)
!7644 = !DILocalVariable(name: "nzeros", scope: !7645, file: !289, line: 521, type: !292)
!7645 = distinct !DILexicalBlock(scope: !7622, file: !289, line: 517, column: 17)
!7646 = !DILocation(line: 521, column: 25, scope: !7645)
!7647 = !DILocation(line: 521, column: 34, scope: !7645)
!7648 = !DILocation(line: 522, column: 23, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7645, file: !289, line: 522, column: 23)
!7650 = !DILocation(line: 522, column: 23, scope: !7645)
!7651 = !DILocation(line: 523, column: 30, scope: !7649)
!7652 = !DILocation(line: 523, column: 28, scope: !7649)
!7653 = !DILocation(line: 523, column: 21, scope: !7649)
!7654 = !DILocation(line: 525, column: 38, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7645, file: !289, line: 525, column: 23)
!7656 = !DILocation(line: 525, column: 47, scope: !7655)
!7657 = !DILocation(line: 525, column: 25, scope: !7655)
!7658 = !DILocation(line: 525, column: 23, scope: !7645)
!7659 = !DILocation(line: 527, column: 33, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7655, file: !289, line: 526, column: 21)
!7661 = !DILocation(line: 527, column: 40, scope: !7660)
!7662 = !DILocation(line: 528, column: 30, scope: !7660)
!7663 = !DILocation(line: 527, column: 23, scope: !7660)
!7664 = !DILocation(line: 529, column: 23, scope: !7660)
!7665 = !DILocation(line: 532, column: 30, scope: !7645)
!7666 = !DILocation(line: 532, column: 28, scope: !7645)
!7667 = !DILocation(line: 534, column: 13, scope: !7607)
!7668 = !DILocation(line: 536, column: 28, scope: !7541)
!7669 = !DILocation(line: 536, column: 26, scope: !7541)
!7670 = !DILocalVariable(name: "n_read", scope: !7671, file: !289, line: 553, type: !292)
!7671 = distinct !DILexicalBlock(scope: !7672, file: !289, line: 552, column: 13)
!7672 = distinct !DILexicalBlock(scope: !7541, file: !289, line: 544, column: 15)
!7673 = !DILocation(line: 553, column: 21, scope: !7671)
!7674 = !DILocation(line: 554, column: 28, scope: !7671)
!7675 = !DILocation(line: 555, column: 30, scope: !7671)
!7676 = !DILocation(line: 555, column: 28, scope: !7671)
!7677 = !DILocalVariable(name: "read_hole", scope: !7671, file: !289, line: 556, type: !139)
!7678 = !DILocation(line: 556, column: 20, scope: !7671)
!7679 = !DILocation(line: 558, column: 35, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7671, file: !289, line: 558, column: 20)
!7681 = !DILocation(line: 558, column: 43, scope: !7680)
!7682 = !DILocation(line: 558, column: 52, scope: !7680)
!7683 = !DILocation(line: 558, column: 57, scope: !7680)
!7684 = !DILocation(line: 559, column: 35, scope: !7680)
!7685 = !DILocation(line: 559, column: 47, scope: !7680)
!7686 = !DILocation(line: 559, column: 66, scope: !7680)
!7687 = !DILocation(line: 560, column: 41, scope: !7680)
!7688 = !DILocation(line: 560, column: 51, scope: !7680)
!7689 = !DILocation(line: 560, column: 61, scope: !7680)
!7690 = !DILocation(line: 558, column: 22, scope: !7680)
!7691 = !DILocation(line: 558, column: 20, scope: !7671)
!7692 = !DILocation(line: 562, column: 17, scope: !7680)
!7693 = !DILocation(line: 564, column: 26, scope: !7671)
!7694 = !DILocation(line: 564, column: 38, scope: !7671)
!7695 = !DILocation(line: 564, column: 36, scope: !7671)
!7696 = !DILocation(line: 564, column: 24, scope: !7671)
!7697 = !DILocation(line: 565, column: 19, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7671, file: !289, line: 565, column: 19)
!7699 = !DILocation(line: 565, column: 19, scope: !7671)
!7700 = !DILocation(line: 566, column: 37, scope: !7698)
!7701 = !DILocation(line: 566, column: 35, scope: !7698)
!7702 = !DILocation(line: 566, column: 17, scope: !7698)
!7703 = !DILocation(line: 574, column: 15, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7541, file: !289, line: 574, column: 15)
!7705 = !DILocation(line: 574, column: 27, scope: !7704)
!7706 = !DILocation(line: 574, column: 24, scope: !7704)
!7707 = !DILocation(line: 574, column: 15, scope: !7541)
!7708 = !DILocation(line: 576, column: 20, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7704, file: !289, line: 575, column: 13)
!7710 = !DILocation(line: 576, column: 37, scope: !7709)
!7711 = !DILocation(line: 577, column: 15, scope: !7709)
!7712 = !DILocation(line: 579, column: 9, scope: !7541)
!7713 = !DILocation(line: 461, column: 68, scope: !7534)
!7714 = !DILocation(line: 461, column: 7, scope: !7534)
!7715 = distinct !{!7715, !7539, !7716}
!7716 = !DILocation(line: 579, column: 9, scope: !7530)
!7717 = !DILocation(line: 582, column: 7, scope: !7504)
!7718 = !DILocation(line: 584, column: 5, scope: !7504)
!7719 = !DILocation(line: 585, column: 17, scope: !7456)
!7720 = !DILocation(line: 585, column: 10, scope: !7456)
!7721 = distinct !{!7721, !7502, !7722}
!7722 = !DILocation(line: 585, column: 33, scope: !7456)
!7723 = !DILocation(line: 595, column: 8, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7456, file: !289, line: 595, column: 7)
!7725 = !DILocation(line: 595, column: 19, scope: !7724)
!7726 = !DILocation(line: 595, column: 17, scope: !7724)
!7727 = !DILocation(line: 595, column: 34, scope: !7724)
!7728 = !DILocation(line: 595, column: 37, scope: !7724)
!7729 = !DILocation(line: 596, column: 7, scope: !7724)
!7730 = !DILocation(line: 596, column: 11, scope: !7724)
!7731 = !DILocation(line: 596, column: 23, scope: !7724)
!7732 = !DILocation(line: 595, column: 7, scope: !7456)
!7733 = !DILocation(line: 597, column: 24, scope: !7724)
!7734 = !DILocation(line: 597, column: 33, scope: !7724)
!7735 = !DILocation(line: 597, column: 13, scope: !7724)
!7736 = !DILocation(line: 598, column: 28, scope: !7724)
!7737 = !DILocation(line: 598, column: 37, scope: !7724)
!7738 = !DILocation(line: 598, column: 54, scope: !7724)
!7739 = !DILocation(line: 598, column: 52, scope: !7724)
!7740 = !DILocation(line: 598, column: 15, scope: !7724)
!7741 = !DILocation(line: 600, column: 17, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7724, file: !289, line: 599, column: 5)
!7743 = !DILocation(line: 600, column: 24, scope: !7742)
!7744 = !DILocation(line: 600, column: 50, scope: !7742)
!7745 = !DILocation(line: 600, column: 7, scope: !7742)
!7746 = !DILocation(line: 601, column: 7, scope: !7742)
!7747 = !DILocation(line: 604, column: 7, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7456, file: !289, line: 604, column: 7)
!7749 = !DILocation(line: 604, column: 19, scope: !7748)
!7750 = !DILocation(line: 604, column: 36, scope: !7748)
!7751 = !DILocation(line: 604, column: 39, scope: !7748)
!7752 = !DILocation(line: 604, column: 50, scope: !7748)
!7753 = !DILocation(line: 604, column: 48, scope: !7748)
!7754 = !DILocation(line: 605, column: 7, scope: !7748)
!7755 = !DILocation(line: 605, column: 22, scope: !7748)
!7756 = !DILocation(line: 605, column: 31, scope: !7748)
!7757 = !DILocation(line: 605, column: 41, scope: !7748)
!7758 = !DILocation(line: 605, column: 58, scope: !7748)
!7759 = !DILocation(line: 605, column: 56, scope: !7748)
!7760 = !DILocation(line: 605, column: 10, scope: !7748)
!7761 = !DILocation(line: 605, column: 68, scope: !7748)
!7762 = !DILocation(line: 604, column: 7, scope: !7456)
!7763 = !DILocation(line: 607, column: 17, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7748, file: !289, line: 606, column: 5)
!7765 = !DILocation(line: 607, column: 24, scope: !7764)
!7766 = !DILocation(line: 607, column: 52, scope: !7764)
!7767 = !DILocation(line: 607, column: 7, scope: !7764)
!7768 = !DILocation(line: 608, column: 7, scope: !7764)
!7769 = !DILocation(line: 611, column: 3, scope: !7456)
!7770 = !DILocation(line: 612, column: 1, scope: !7456)
!7771 = distinct !DISubprogram(name: "sparse_copy", scope: !289, file: !289, line: 260, type: !7772, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!7772 = !DISubroutineType(types: !7773)
!7773 = !{!139, !5, !5, !7, !52, !52, !139, !113, !113, !476, !7774, !4020}
!7774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!7775 = !DILocalVariable(name: "src_fd", arg: 1, scope: !7771, file: !289, line: 260, type: !5)
!7776 = !DILocation(line: 260, column: 18, scope: !7771)
!7777 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !7771, file: !289, line: 260, type: !5)
!7778 = !DILocation(line: 260, column: 30, scope: !7771)
!7779 = !DILocalVariable(name: "buf", arg: 3, scope: !7771, file: !289, line: 260, type: !7)
!7780 = !DILocation(line: 260, column: 45, scope: !7771)
!7781 = !DILocalVariable(name: "buf_size", arg: 4, scope: !7771, file: !289, line: 260, type: !52)
!7782 = !DILocation(line: 260, column: 57, scope: !7771)
!7783 = !DILocalVariable(name: "hole_size", arg: 5, scope: !7771, file: !289, line: 261, type: !52)
!7784 = !DILocation(line: 261, column: 21, scope: !7771)
!7785 = !DILocalVariable(name: "punch_holes", arg: 6, scope: !7771, file: !289, line: 261, type: !139)
!7786 = !DILocation(line: 261, column: 37, scope: !7771)
!7787 = !DILocalVariable(name: "src_name", arg: 7, scope: !7771, file: !289, line: 262, type: !113)
!7788 = !DILocation(line: 262, column: 26, scope: !7771)
!7789 = !DILocalVariable(name: "dst_name", arg: 8, scope: !7771, file: !289, line: 262, type: !113)
!7790 = !DILocation(line: 262, column: 48, scope: !7771)
!7791 = !DILocalVariable(name: "max_n_read", arg: 9, scope: !7771, file: !289, line: 263, type: !476)
!7792 = !DILocation(line: 263, column: 24, scope: !7771)
!7793 = !DILocalVariable(name: "total_n_read", arg: 10, scope: !7771, file: !289, line: 263, type: !7774)
!7794 = !DILocation(line: 263, column: 43, scope: !7771)
!7795 = !DILocalVariable(name: "last_write_made_hole", arg: 11, scope: !7771, file: !289, line: 264, type: !4020)
!7796 = !DILocation(line: 264, column: 20, scope: !7771)
!7797 = !DILocation(line: 266, column: 4, scope: !7771)
!7798 = !DILocation(line: 266, column: 25, scope: !7771)
!7799 = !DILocation(line: 267, column: 4, scope: !7771)
!7800 = !DILocation(line: 267, column: 17, scope: !7771)
!7801 = !DILocalVariable(name: "make_hole", scope: !7771, file: !289, line: 268, type: !139)
!7802 = !DILocation(line: 268, column: 8, scope: !7771)
!7803 = !DILocalVariable(name: "psize", scope: !7771, file: !289, line: 269, type: !292)
!7804 = !DILocation(line: 269, column: 9, scope: !7771)
!7805 = !DILocation(line: 271, column: 3, scope: !7771)
!7806 = !DILocation(line: 271, column: 10, scope: !7771)
!7807 = !DILocalVariable(name: "n_read", scope: !7808, file: !289, line: 273, type: !447)
!7808 = distinct !DILexicalBlock(scope: !7771, file: !289, line: 272, column: 5)
!7809 = !DILocation(line: 273, column: 15, scope: !7808)
!7810 = !DILocation(line: 273, column: 30, scope: !7808)
!7811 = !DILocation(line: 273, column: 38, scope: !7808)
!7812 = !DILocation(line: 273, column: 43, scope: !7808)
!7813 = !DILocation(line: 273, column: 24, scope: !7808)
!7814 = !DILocation(line: 274, column: 11, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7808, file: !289, line: 274, column: 11)
!7816 = !DILocation(line: 274, column: 18, scope: !7815)
!7817 = !DILocation(line: 274, column: 11, scope: !7808)
!7818 = !DILocation(line: 276, column: 15, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7820, file: !289, line: 276, column: 15)
!7820 = distinct !DILexicalBlock(scope: !7815, file: !289, line: 275, column: 9)
!7821 = !DILocation(line: 276, column: 21, scope: !7819)
!7822 = !DILocation(line: 276, column: 15, scope: !7820)
!7823 = !DILocation(line: 277, column: 13, scope: !7819)
!7824 = distinct !{!7824, !7805, !7825}
!7825 = !DILocation(line: 357, column: 5, scope: !7771)
!7826 = !DILocation(line: 278, column: 21, scope: !7820)
!7827 = !DILocation(line: 278, column: 28, scope: !7820)
!7828 = !DILocation(line: 278, column: 51, scope: !7820)
!7829 = !DILocation(line: 278, column: 11, scope: !7820)
!7830 = !DILocation(line: 279, column: 11, scope: !7820)
!7831 = !DILocation(line: 281, column: 11, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7808, file: !289, line: 281, column: 11)
!7833 = !DILocation(line: 281, column: 18, scope: !7832)
!7834 = !DILocation(line: 281, column: 11, scope: !7808)
!7835 = !DILocation(line: 282, column: 9, scope: !7832)
!7836 = !DILocation(line: 283, column: 21, scope: !7808)
!7837 = !DILocation(line: 283, column: 18, scope: !7808)
!7838 = !DILocation(line: 284, column: 24, scope: !7808)
!7839 = !DILocation(line: 284, column: 8, scope: !7808)
!7840 = !DILocation(line: 284, column: 21, scope: !7808)
!7841 = !DILocalVariable(name: "csize", scope: !7808, file: !289, line: 287, type: !52)
!7842 = !DILocation(line: 287, column: 14, scope: !7808)
!7843 = !DILocation(line: 287, column: 22, scope: !7808)
!7844 = !DILocation(line: 287, column: 34, scope: !7808)
!7845 = !DILocation(line: 287, column: 46, scope: !7808)
!7846 = !DILocalVariable(name: "cbuf", scope: !7808, file: !289, line: 288, type: !7)
!7847 = !DILocation(line: 288, column: 13, scope: !7808)
!7848 = !DILocation(line: 288, column: 20, scope: !7808)
!7849 = !DILocalVariable(name: "pbuf", scope: !7808, file: !289, line: 289, type: !7)
!7850 = !DILocation(line: 289, column: 13, scope: !7808)
!7851 = !DILocation(line: 289, column: 20, scope: !7808)
!7852 = !DILocation(line: 291, column: 7, scope: !7808)
!7853 = !DILocation(line: 291, column: 14, scope: !7808)
!7854 = !DILocalVariable(name: "prev_hole", scope: !7855, file: !289, line: 293, type: !139)
!7855 = distinct !DILexicalBlock(scope: !7808, file: !289, line: 292, column: 9)
!7856 = !DILocation(line: 293, column: 16, scope: !7855)
!7857 = !DILocation(line: 293, column: 28, scope: !7855)
!7858 = !DILocation(line: 294, column: 19, scope: !7855)
!7859 = !DILocation(line: 294, column: 17, scope: !7855)
!7860 = !DILocation(line: 296, column: 15, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7855, file: !289, line: 296, column: 15)
!7862 = !DILocation(line: 296, column: 25, scope: !7861)
!7863 = !DILocation(line: 296, column: 28, scope: !7861)
!7864 = !DILocation(line: 296, column: 15, scope: !7855)
!7865 = !DILocation(line: 297, column: 33, scope: !7861)
!7866 = !DILocation(line: 297, column: 39, scope: !7861)
!7867 = !DILocation(line: 297, column: 25, scope: !7861)
!7868 = !DILocation(line: 297, column: 23, scope: !7861)
!7869 = !DILocation(line: 297, column: 13, scope: !7861)
!7870 = !DILocalVariable(name: "transition", scope: !7855, file: !289, line: 299, type: !139)
!7871 = !DILocation(line: 299, column: 16, scope: !7855)
!7872 = !DILocation(line: 299, column: 30, scope: !7855)
!7873 = !DILocation(line: 299, column: 43, scope: !7855)
!7874 = !DILocation(line: 299, column: 40, scope: !7855)
!7875 = !DILocation(line: 299, column: 54, scope: !7855)
!7876 = !DILocation(line: 299, column: 57, scope: !7855)
!7877 = !DILocation(line: 0, scope: !7855)
!7878 = !DILocalVariable(name: "last_chunk", scope: !7855, file: !289, line: 300, type: !139)
!7879 = !DILocation(line: 300, column: 16, scope: !7855)
!7880 = !DILocation(line: 300, column: 30, scope: !7855)
!7881 = !DILocation(line: 300, column: 40, scope: !7855)
!7882 = !DILocation(line: 300, column: 37, scope: !7855)
!7883 = !DILocation(line: 300, column: 46, scope: !7855)
!7884 = !DILocation(line: 300, column: 51, scope: !7855)
!7885 = !DILocation(line: 300, column: 62, scope: !7855)
!7886 = !DILocation(line: 300, column: 67, scope: !7855)
!7887 = !DILocation(line: 300, column: 65, scope: !7855)
!7888 = !DILocation(line: 302, column: 15, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7855, file: !289, line: 302, column: 15)
!7890 = !DILocation(line: 302, column: 26, scope: !7889)
!7891 = !DILocation(line: 302, column: 29, scope: !7889)
!7892 = !DILocation(line: 302, column: 15, scope: !7855)
!7893 = !DILocation(line: 304, column: 21, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7895, file: !289, line: 304, column: 19)
!7895 = distinct !DILexicalBlock(scope: !7889, file: !289, line: 303, column: 13)
!7896 = !DILocation(line: 304, column: 19, scope: !7895)
!7897 = !DILocation(line: 305, column: 26, scope: !7894)
!7898 = !DILocation(line: 305, column: 23, scope: !7894)
!7899 = !DILocation(line: 305, column: 17, scope: !7894)
!7900 = !DILocation(line: 307, column: 21, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7895, file: !289, line: 307, column: 19)
!7902 = !DILocation(line: 307, column: 19, scope: !7895)
!7903 = !DILocation(line: 309, column: 35, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !289, line: 309, column: 23)
!7905 = distinct !DILexicalBlock(scope: !7901, file: !289, line: 308, column: 17)
!7906 = !DILocation(line: 309, column: 44, scope: !7904)
!7907 = !DILocation(line: 309, column: 50, scope: !7904)
!7908 = !DILocation(line: 309, column: 23, scope: !7904)
!7909 = !DILocation(line: 309, column: 60, scope: !7904)
!7910 = !DILocation(line: 309, column: 57, scope: !7904)
!7911 = !DILocation(line: 309, column: 23, scope: !7905)
!7912 = !DILocation(line: 311, column: 33, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7904, file: !289, line: 310, column: 21)
!7914 = !DILocation(line: 311, column: 40, scope: !7913)
!7915 = !DILocation(line: 312, column: 30, scope: !7913)
!7916 = !DILocation(line: 311, column: 23, scope: !7913)
!7917 = !DILocation(line: 313, column: 23, scope: !7913)
!7918 = !DILocation(line: 315, column: 17, scope: !7905)
!7919 = !DILocation(line: 318, column: 38, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7921, file: !289, line: 318, column: 23)
!7921 = distinct !DILexicalBlock(scope: !7901, file: !289, line: 317, column: 17)
!7922 = !DILocation(line: 318, column: 47, scope: !7920)
!7923 = !DILocation(line: 318, column: 57, scope: !7920)
!7924 = !DILocation(line: 318, column: 70, scope: !7920)
!7925 = !DILocation(line: 318, column: 25, scope: !7920)
!7926 = !DILocation(line: 318, column: 23, scope: !7921)
!7927 = !DILocation(line: 319, column: 21, scope: !7920)
!7928 = !DILocation(line: 322, column: 22, scope: !7895)
!7929 = !DILocation(line: 322, column: 20, scope: !7895)
!7930 = !DILocation(line: 323, column: 23, scope: !7895)
!7931 = !DILocation(line: 323, column: 21, scope: !7895)
!7932 = !DILocation(line: 325, column: 19, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7895, file: !289, line: 325, column: 19)
!7934 = !DILocation(line: 325, column: 19, scope: !7895)
!7935 = !DILocation(line: 327, column: 25, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7937, file: !289, line: 327, column: 23)
!7937 = distinct !DILexicalBlock(scope: !7933, file: !289, line: 326, column: 17)
!7938 = !DILocation(line: 327, column: 23, scope: !7937)
!7939 = !DILocation(line: 328, column: 28, scope: !7936)
!7940 = !DILocation(line: 328, column: 21, scope: !7936)
!7941 = !DILocation(line: 330, column: 23, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7937, file: !289, line: 330, column: 23)
!7943 = !DILocation(line: 330, column: 23, scope: !7937)
!7944 = !DILocation(line: 331, column: 27, scope: !7942)
!7945 = !DILocation(line: 331, column: 21, scope: !7942)
!7946 = !DILocation(line: 333, column: 27, scope: !7942)
!7947 = !DILocation(line: 334, column: 17, scope: !7937)
!7948 = !DILocation(line: 335, column: 13, scope: !7895)
!7949 = !DILocation(line: 338, column: 19, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7951, file: !289, line: 338, column: 19)
!7951 = distinct !DILexicalBlock(scope: !7889, file: !289, line: 337, column: 13)
!7952 = !DILocation(line: 338, column: 40, scope: !7950)
!7953 = !DILocation(line: 338, column: 38, scope: !7950)
!7954 = !DILocation(line: 338, column: 25, scope: !7950)
!7955 = !DILocation(line: 338, column: 19, scope: !7951)
!7956 = !DILocation(line: 339, column: 26, scope: !7950)
!7957 = !DILocation(line: 339, column: 23, scope: !7950)
!7958 = !DILocation(line: 339, column: 17, scope: !7950)
!7959 = !DILocation(line: 342, column: 32, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7950, file: !289, line: 341, column: 17)
!7961 = !DILocation(line: 342, column: 58, scope: !7960)
!7962 = !DILocation(line: 342, column: 19, scope: !7960)
!7963 = !DILocation(line: 343, column: 19, scope: !7960)
!7964 = !DILocation(line: 347, column: 21, scope: !7855)
!7965 = !DILocation(line: 347, column: 18, scope: !7855)
!7966 = !DILocation(line: 348, column: 19, scope: !7855)
!7967 = !DILocation(line: 348, column: 16, scope: !7855)
!7968 = distinct !{!7968, !7852, !7969}
!7969 = !DILocation(line: 349, column: 9, scope: !7808)
!7970 = !DILocation(line: 351, column: 31, scope: !7808)
!7971 = !DILocation(line: 351, column: 8, scope: !7808)
!7972 = !DILocation(line: 351, column: 29, scope: !7808)
!7973 = !DILocation(line: 361, column: 7, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7771, file: !289, line: 361, column: 7)
!7975 = !DILocation(line: 361, column: 17, scope: !7974)
!7976 = !DILocation(line: 361, column: 35, scope: !7974)
!7977 = !DILocation(line: 361, column: 44, scope: !7974)
!7978 = !DILocation(line: 361, column: 54, scope: !7974)
!7979 = !DILocation(line: 361, column: 67, scope: !7974)
!7980 = !DILocation(line: 361, column: 22, scope: !7974)
!7981 = !DILocation(line: 361, column: 7, scope: !7771)
!7982 = !DILocation(line: 362, column: 5, scope: !7974)
!7983 = !DILocation(line: 364, column: 5, scope: !7974)
!7984 = !DILocation(line: 365, column: 1, scope: !7771)
!7985 = distinct !DISubprogram(name: "fchmod_or_lchmod", scope: !289, file: !289, line: 1013, type: !7986, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!7986 = !DISubroutineType(types: !7987)
!7987 = !{!5, !5, !113, !236}
!7988 = !DILocalVariable(name: "desc", arg: 1, scope: !7985, file: !289, line: 1013, type: !5)
!7989 = !DILocation(line: 1013, column: 23, scope: !7985)
!7990 = !DILocalVariable(name: "name", arg: 2, scope: !7985, file: !289, line: 1013, type: !113)
!7991 = !DILocation(line: 1013, column: 41, scope: !7985)
!7992 = !DILocalVariable(name: "mode", arg: 3, scope: !7985, file: !289, line: 1013, type: !236)
!7993 = !DILocation(line: 1013, column: 54, scope: !7985)
!7994 = !DILocation(line: 1016, column: 12, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7985, file: !289, line: 1016, column: 7)
!7996 = !DILocation(line: 1016, column: 9, scope: !7995)
!7997 = !DILocation(line: 1016, column: 7, scope: !7985)
!7998 = !DILocation(line: 1017, column: 20, scope: !7995)
!7999 = !DILocation(line: 1017, column: 26, scope: !7995)
!8000 = !DILocation(line: 1017, column: 12, scope: !7995)
!8001 = !DILocation(line: 1017, column: 5, scope: !7995)
!8002 = !DILocation(line: 1019, column: 18, scope: !7985)
!8003 = !DILocation(line: 1019, column: 24, scope: !7985)
!8004 = !DILocation(line: 1019, column: 10, scope: !7985)
!8005 = !DILocation(line: 1019, column: 3, scope: !7985)
!8006 = !DILocation(line: 1020, column: 1, scope: !7985)
!8007 = distinct !DISubprogram(name: "is_nul", scope: !209, file: !209, line: 509, type: !8008, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!8008 = !DISubroutineType(types: !8009)
!8009 = !{!139, !553, !52}
!8010 = !DILocalVariable(name: "buf", arg: 1, scope: !8007, file: !209, line: 509, type: !553)
!8011 = !DILocation(line: 509, column: 21, scope: !8007)
!8012 = !DILocalVariable(name: "length", arg: 2, scope: !8007, file: !209, line: 509, type: !52)
!8013 = !DILocation(line: 509, column: 33, scope: !8007)
!8014 = !DILocalVariable(name: "p", scope: !8007, file: !209, line: 511, type: !449)
!8015 = !DILocation(line: 511, column: 24, scope: !8007)
!8016 = !DILocation(line: 511, column: 28, scope: !8007)
!8017 = !DILocalVariable(name: "word", scope: !8007, file: !209, line: 521, type: !451)
!8018 = !DILocation(line: 521, column: 17, scope: !8007)
!8019 = !DILocation(line: 524, column: 9, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8007, file: !209, line: 524, column: 7)
!8021 = !DILocation(line: 524, column: 7, scope: !8007)
!8022 = !DILocation(line: 525, column: 7, scope: !8020)
!8023 = !DILocation(line: 528, column: 3, scope: !8007)
!8024 = !DILocation(line: 528, column: 10, scope: !8007)
!8025 = !DILocation(line: 530, column: 12, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8027, file: !209, line: 530, column: 11)
!8027 = distinct !DILexicalBlock(scope: !8007, file: !209, line: 529, column: 5)
!8028 = !DILocation(line: 530, column: 11, scope: !8026)
!8029 = !DILocation(line: 530, column: 11, scope: !8027)
!8030 = !DILocation(line: 531, column: 9, scope: !8026)
!8031 = !DILocation(line: 532, column: 8, scope: !8027)
!8032 = !DILocation(line: 533, column: 13, scope: !8027)
!8033 = !DILocation(line: 534, column: 13, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8027, file: !209, line: 534, column: 11)
!8035 = !DILocation(line: 534, column: 11, scope: !8027)
!8036 = !DILocation(line: 535, column: 9, scope: !8034)
!8037 = distinct !{!8037, !8023, !8038}
!8038 = !DILocation(line: 536, column: 4, scope: !8007)
!8039 = !DILocation(line: 539, column: 3, scope: !8007)
!8040 = !DILocation(line: 541, column: 22, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !209, line: 540, column: 5)
!8042 = distinct !DILexicalBlock(scope: !8043, file: !209, line: 539, column: 3)
!8043 = distinct !DILexicalBlock(scope: !8007, file: !209, line: 539, column: 3)
!8044 = !DILocation(line: 541, column: 7, scope: !8041)
!8045 = !DILocation(line: 542, column: 11, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8041, file: !209, line: 542, column: 11)
!8047 = !DILocation(line: 542, column: 11, scope: !8041)
!8048 = !DILocation(line: 543, column: 9, scope: !8046)
!8049 = !DILocation(line: 544, column: 9, scope: !8041)
!8050 = !DILocation(line: 545, column: 14, scope: !8041)
!8051 = !DILocation(line: 546, column: 13, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8041, file: !209, line: 546, column: 11)
!8053 = !DILocation(line: 546, column: 11, scope: !8041)
!8054 = !DILocation(line: 547, column: 9, scope: !8052)
!8055 = !DILocation(line: 548, column: 11, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8041, file: !209, line: 548, column: 11)
!8057 = !DILocation(line: 548, column: 34, scope: !8056)
!8058 = !DILocation(line: 548, column: 11, scope: !8041)
!8059 = !DILocation(line: 549, column: 9, scope: !8056)
!8060 = !DILocation(line: 539, column: 3, scope: !8042)
!8061 = distinct !{!8061, !8062, !8063}
!8062 = !DILocation(line: 539, column: 3, scope: !8043)
!8063 = !DILocation(line: 550, column: 4, scope: !8043)
!8064 = !DILocation(line: 553, column: 19, scope: !8007)
!8065 = !DILocation(line: 553, column: 24, scope: !8007)
!8066 = !DILocation(line: 553, column: 27, scope: !8007)
!8067 = !DILocation(line: 553, column: 11, scope: !8007)
!8068 = !DILocation(line: 553, column: 35, scope: !8007)
!8069 = !DILocation(line: 553, column: 4, scope: !8007)
!8070 = !DILocation(line: 554, column: 1, scope: !8007)
!8071 = distinct !DISubprogram(name: "create_hole", scope: !289, file: !289, line: 224, type: !8072, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!8072 = !DISubroutineType(types: !8073)
!8073 = !{!139, !5, !113, !139, !292}
!8074 = !DILocalVariable(name: "fd", arg: 1, scope: !8071, file: !289, line: 224, type: !5)
!8075 = !DILocation(line: 224, column: 18, scope: !8071)
!8076 = !DILocalVariable(name: "name", arg: 2, scope: !8071, file: !289, line: 224, type: !113)
!8077 = !DILocation(line: 224, column: 34, scope: !8071)
!8078 = !DILocalVariable(name: "punch_holes", arg: 3, scope: !8071, file: !289, line: 224, type: !139)
!8079 = !DILocation(line: 224, column: 45, scope: !8071)
!8080 = !DILocalVariable(name: "size", arg: 4, scope: !8071, file: !289, line: 224, type: !292)
!8081 = !DILocation(line: 224, column: 64, scope: !8071)
!8082 = !DILocalVariable(name: "file_end", scope: !8071, file: !289, line: 226, type: !292)
!8083 = !DILocation(line: 226, column: 9, scope: !8071)
!8084 = !DILocation(line: 226, column: 27, scope: !8071)
!8085 = !DILocation(line: 226, column: 31, scope: !8071)
!8086 = !DILocation(line: 226, column: 20, scope: !8071)
!8087 = !DILocation(line: 228, column: 7, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8071, file: !289, line: 228, column: 7)
!8089 = !DILocation(line: 228, column: 16, scope: !8088)
!8090 = !DILocation(line: 228, column: 7, scope: !8071)
!8091 = !DILocation(line: 230, column: 17, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8088, file: !289, line: 229, column: 5)
!8093 = !DILocation(line: 230, column: 24, scope: !8092)
!8094 = !DILocation(line: 230, column: 46, scope: !8092)
!8095 = !DILocation(line: 230, column: 7, scope: !8092)
!8096 = !DILocation(line: 231, column: 7, scope: !8092)
!8097 = !DILocation(line: 238, column: 7, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8071, file: !289, line: 238, column: 7)
!8099 = !DILocation(line: 238, column: 19, scope: !8098)
!8100 = !DILocation(line: 238, column: 34, scope: !8098)
!8101 = !DILocation(line: 238, column: 38, scope: !8098)
!8102 = !DILocation(line: 238, column: 49, scope: !8098)
!8103 = !DILocation(line: 238, column: 47, scope: !8098)
!8104 = !DILocation(line: 238, column: 55, scope: !8098)
!8105 = !DILocation(line: 238, column: 22, scope: !8098)
!8106 = !DILocation(line: 238, column: 61, scope: !8098)
!8107 = !DILocation(line: 238, column: 7, scope: !8071)
!8108 = !DILocation(line: 240, column: 17, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8098, file: !289, line: 239, column: 5)
!8110 = !DILocation(line: 240, column: 24, scope: !8109)
!8111 = !DILocation(line: 240, column: 52, scope: !8109)
!8112 = !DILocation(line: 240, column: 7, scope: !8109)
!8113 = !DILocation(line: 241, column: 7, scope: !8109)
!8114 = !DILocation(line: 244, column: 3, scope: !8071)
!8115 = !DILocation(line: 245, column: 1, scope: !8071)
!8116 = distinct !DISubprogram(name: "punch_hole", scope: !289, file: !289, line: 205, type: !8117, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!8117 = !DISubroutineType(types: !8118)
!8118 = !{!5, !5, !292, !292}
!8119 = !DILocalVariable(name: "fd", arg: 1, scope: !8116, file: !289, line: 205, type: !5)
!8120 = !DILocation(line: 205, column: 17, scope: !8116)
!8121 = !DILocalVariable(name: "offset", arg: 2, scope: !8116, file: !289, line: 205, type: !292)
!8122 = !DILocation(line: 205, column: 27, scope: !8116)
!8123 = !DILocalVariable(name: "length", arg: 3, scope: !8116, file: !289, line: 205, type: !292)
!8124 = !DILocation(line: 205, column: 41, scope: !8116)
!8125 = !DILocalVariable(name: "ret", scope: !8116, file: !289, line: 207, type: !5)
!8126 = !DILocation(line: 207, column: 7, scope: !8116)
!8127 = !DILocation(line: 211, column: 20, scope: !8116)
!8128 = !DILocation(line: 212, column: 20, scope: !8116)
!8129 = !DILocation(line: 212, column: 28, scope: !8116)
!8130 = !DILocation(line: 211, column: 9, scope: !8116)
!8131 = !DILocation(line: 211, column: 7, scope: !8116)
!8132 = !DILocation(line: 213, column: 7, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8116, file: !289, line: 213, column: 7)
!8134 = !DILocation(line: 213, column: 11, scope: !8133)
!8135 = !DILocation(line: 213, column: 15, scope: !8133)
!8136 = !DILocation(line: 213, column: 31, scope: !8133)
!8137 = !DILocation(line: 213, column: 19, scope: !8133)
!8138 = !DILocation(line: 213, column: 38, scope: !8133)
!8139 = !DILocation(line: 213, column: 41, scope: !8133)
!8140 = !DILocation(line: 213, column: 47, scope: !8133)
!8141 = !DILocation(line: 213, column: 7, scope: !8116)
!8142 = !DILocation(line: 214, column: 9, scope: !8133)
!8143 = !DILocation(line: 214, column: 5, scope: !8133)
!8144 = !DILocation(line: 217, column: 10, scope: !8116)
!8145 = !DILocation(line: 217, column: 3, scope: !8116)
!8146 = distinct !DISubprogram(name: "is_ENOTSUP", scope: !209, file: !209, line: 762, type: !3623, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!8147 = !DILocalVariable(name: "err", arg: 1, scope: !8146, file: !209, line: 762, type: !5)
!8148 = !DILocation(line: 762, column: 17, scope: !8146)
!8149 = !DILocation(line: 764, column: 10, scope: !8146)
!8150 = !DILocation(line: 764, column: 14, scope: !8146)
!8151 = !DILocation(line: 764, column: 28, scope: !8146)
!8152 = !DILocation(line: 764, column: 3, scope: !8146)
!8153 = distinct !DISubprogram(name: "extent_scan_free", scope: !439, file: !439, line: 66, type: !8154, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!8154 = !DISubroutineType(types: !8155)
!8155 = !{null, !8156}
!8156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7459, size: 64)
!8157 = !DILocalVariable(name: "scan", arg: 1, scope: !8153, file: !439, line: 66, type: !8156)
!8158 = !DILocation(line: 66, column: 39, scope: !8153)
!8159 = !DILocation(line: 68, column: 9, scope: !8153)
!8160 = !DILocation(line: 68, column: 15, scope: !8153)
!8161 = !DILocation(line: 68, column: 3, scope: !8153)
!8162 = !DILocation(line: 69, column: 3, scope: !8153)
!8163 = !DILocation(line: 69, column: 9, scope: !8153)
!8164 = !DILocation(line: 69, column: 18, scope: !8153)
!8165 = !DILocation(line: 70, column: 3, scope: !8153)
!8166 = !DILocation(line: 70, column: 9, scope: !8153)
!8167 = !DILocation(line: 70, column: 18, scope: !8153)
!8168 = !DILocation(line: 71, column: 1, scope: !8153)
!8169 = !DILocalVariable(name: "fd", arg: 1, scope: !464, file: !289, line: 385, type: !5)
!8170 = !DILocation(line: 385, column: 18, scope: !464)
!8171 = !DILocalVariable(name: "n_bytes", arg: 2, scope: !464, file: !289, line: 385, type: !292)
!8172 = !DILocation(line: 385, column: 28, scope: !464)
!8173 = !DILocation(line: 393, column: 7, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !464, file: !289, line: 393, column: 7)
!8175 = !DILocation(line: 393, column: 13, scope: !8174)
!8176 = !DILocation(line: 393, column: 7, scope: !464)
!8177 = !DILocation(line: 396, column: 23, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8174, file: !289, line: 394, column: 5)
!8179 = !DILocation(line: 396, column: 15, scope: !8178)
!8180 = !DILocation(line: 396, column: 13, scope: !8178)
!8181 = !DILocation(line: 397, column: 11, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8178, file: !289, line: 397, column: 11)
!8183 = !DILocation(line: 397, column: 17, scope: !8182)
!8184 = !DILocation(line: 397, column: 11, scope: !8178)
!8185 = !DILocation(line: 399, column: 17, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8182, file: !289, line: 398, column: 9)
!8187 = !DILocation(line: 400, column: 14, scope: !8186)
!8188 = !DILocation(line: 401, column: 9, scope: !8186)
!8189 = !DILocation(line: 402, column: 5, scope: !8178)
!8190 = !DILocation(line: 404, column: 3, scope: !464)
!8191 = !DILocation(line: 404, column: 10, scope: !464)
!8192 = !DILocalVariable(name: "n", scope: !8193, file: !289, line: 406, type: !52)
!8193 = distinct !DILexicalBlock(scope: !464, file: !289, line: 405, column: 5)
!8194 = !DILocation(line: 406, column: 14, scope: !8193)
!8195 = !DILocation(line: 406, column: 18, scope: !8193)
!8196 = !DILocation(line: 407, column: 24, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8193, file: !289, line: 407, column: 11)
!8198 = !DILocation(line: 407, column: 28, scope: !8197)
!8199 = !DILocation(line: 407, column: 35, scope: !8197)
!8200 = !DILocation(line: 407, column: 12, scope: !8197)
!8201 = !DILocation(line: 407, column: 42, scope: !8197)
!8202 = !DILocation(line: 407, column: 39, scope: !8197)
!8203 = !DILocation(line: 407, column: 11, scope: !8193)
!8204 = !DILocation(line: 408, column: 9, scope: !8197)
!8205 = !DILocation(line: 409, column: 18, scope: !8193)
!8206 = !DILocation(line: 409, column: 15, scope: !8193)
!8207 = distinct !{!8207, !8190, !8208}
!8208 = !DILocation(line: 410, column: 5, scope: !464)
!8209 = !DILocation(line: 412, column: 3, scope: !464)
!8210 = !DILocation(line: 413, column: 1, scope: !464)
!8211 = distinct !DISubprogram(name: "writable_destination", scope: !289, file: !289, line: 1702, type: !8212, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !288, retainedNodes: !213)
!8212 = !DISubroutineType(types: !8213)
!8213 = !{!139, !113, !236}
!8214 = !DILocalVariable(name: "file", arg: 1, scope: !8211, file: !289, line: 1702, type: !113)
!8215 = !DILocation(line: 1702, column: 35, scope: !8211)
!8216 = !DILocalVariable(name: "mode", arg: 2, scope: !8211, file: !289, line: 1702, type: !236)
!8217 = !DILocation(line: 1702, column: 48, scope: !8211)
!8218 = !DILocation(line: 1704, column: 11, scope: !8211)
!8219 = !DILocation(line: 1705, column: 11, scope: !8211)
!8220 = !DILocation(line: 1705, column: 14, scope: !8211)
!8221 = !DILocation(line: 1706, column: 11, scope: !8211)
!8222 = !DILocation(line: 1706, column: 26, scope: !8211)
!8223 = !DILocation(line: 1706, column: 14, scope: !8211)
!8224 = !DILocation(line: 1706, column: 38, scope: !8211)
!8225 = !DILocation(line: 1704, column: 3, scope: !8211)
!8226 = distinct !DISubprogram(name: "cp_options_default", scope: !289, file: !289, line: 3035, type: !3999, scopeLine: 3036, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !213)
!8227 = !DILocalVariable(name: "x", arg: 1, scope: !8226, file: !289, line: 3035, type: !4001)
!8228 = !DILocation(line: 3035, column: 40, scope: !8226)
!8229 = !DILocation(line: 3037, column: 11, scope: !8226)
!8230 = !DILocation(line: 3037, column: 3, scope: !8226)
!8231 = !DILocation(line: 3051, column: 48, scope: !8226)
!8232 = !DILocation(line: 3051, column: 59, scope: !8226)
!8233 = !DILocation(line: 3051, column: 25, scope: !8226)
!8234 = !DILocation(line: 3051, column: 28, scope: !8226)
!8235 = !DILocation(line: 3051, column: 45, scope: !8226)
!8236 = !DILocation(line: 3051, column: 3, scope: !8226)
!8237 = !DILocation(line: 3051, column: 6, scope: !8226)
!8238 = !DILocation(line: 3051, column: 23, scope: !8226)
!8239 = !DILocation(line: 3053, column: 3, scope: !8226)
!8240 = !DILocation(line: 3053, column: 6, scope: !8226)
!8241 = !DILocation(line: 3053, column: 19, scope: !8226)
!8242 = !DILocation(line: 3054, column: 1, scope: !8226)
!8243 = distinct !DISubprogram(name: "forget_created", scope: !474, file: !474, line: 82, type: !8244, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !473, retainedNodes: !213)
!8244 = !DISubroutineType(types: !8245)
!8245 = !{null, !256, !259}
!8246 = !DILocalVariable(name: "ino", arg: 1, scope: !8243, file: !474, line: 82, type: !256)
!8247 = !DILocation(line: 82, column: 23, scope: !8243)
!8248 = !DILocalVariable(name: "dev", arg: 2, scope: !8243, file: !474, line: 82, type: !259)
!8249 = !DILocation(line: 82, column: 34, scope: !8243)
!8250 = !DILocalVariable(name: "probe", scope: !8243, file: !474, line: 84, type: !479)
!8251 = !DILocation(line: 84, column: 22, scope: !8243)
!8252 = !DILocalVariable(name: "ent", scope: !8243, file: !474, line: 85, type: !478)
!8253 = !DILocation(line: 85, column: 23, scope: !8243)
!8254 = !DILocation(line: 87, column: 18, scope: !8243)
!8255 = !DILocation(line: 87, column: 9, scope: !8243)
!8256 = !DILocation(line: 87, column: 16, scope: !8243)
!8257 = !DILocation(line: 88, column: 18, scope: !8243)
!8258 = !DILocation(line: 88, column: 9, scope: !8243)
!8259 = !DILocation(line: 88, column: 16, scope: !8243)
!8260 = !DILocation(line: 89, column: 9, scope: !8243)
!8261 = !DILocation(line: 89, column: 14, scope: !8243)
!8262 = !DILocation(line: 91, column: 22, scope: !8243)
!8263 = !DILocation(line: 91, column: 35, scope: !8243)
!8264 = !DILocation(line: 91, column: 9, scope: !8243)
!8265 = !DILocation(line: 91, column: 7, scope: !8243)
!8266 = !DILocation(line: 92, column: 7, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8243, file: !474, line: 92, column: 7)
!8268 = !DILocation(line: 92, column: 7, scope: !8243)
!8269 = !DILocation(line: 93, column: 23, scope: !8267)
!8270 = !DILocation(line: 93, column: 5, scope: !8267)
!8271 = !DILocation(line: 94, column: 1, scope: !8243)
!8272 = distinct !DISubprogram(name: "src_to_dest_free", scope: !474, file: !474, line: 72, type: !716, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !473, retainedNodes: !213)
!8273 = !DILocalVariable(name: "x", arg: 1, scope: !8272, file: !474, line: 72, type: !47)
!8274 = !DILocation(line: 72, column: 25, scope: !8272)
!8275 = !DILocalVariable(name: "a", scope: !8272, file: !474, line: 74, type: !478)
!8276 = !DILocation(line: 74, column: 23, scope: !8272)
!8277 = !DILocation(line: 74, column: 27, scope: !8272)
!8278 = !DILocation(line: 75, column: 9, scope: !8272)
!8279 = !DILocation(line: 75, column: 12, scope: !8272)
!8280 = !DILocation(line: 75, column: 3, scope: !8272)
!8281 = !DILocation(line: 76, column: 9, scope: !8272)
!8282 = !DILocation(line: 76, column: 3, scope: !8272)
!8283 = !DILocation(line: 77, column: 1, scope: !8272)
!8284 = distinct !DISubprogram(name: "src_to_dest_lookup", scope: !474, file: !474, line: 100, type: !8285, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !473, retainedNodes: !213)
!8285 = !DISubroutineType(types: !8286)
!8286 = !{!7, !256, !259}
!8287 = !DILocalVariable(name: "ino", arg: 1, scope: !8284, file: !474, line: 100, type: !256)
!8288 = !DILocation(line: 100, column: 27, scope: !8284)
!8289 = !DILocalVariable(name: "dev", arg: 2, scope: !8284, file: !474, line: 100, type: !259)
!8290 = !DILocation(line: 100, column: 38, scope: !8284)
!8291 = !DILocalVariable(name: "ent", scope: !8284, file: !474, line: 102, type: !479)
!8292 = !DILocation(line: 102, column: 22, scope: !8284)
!8293 = !DILocalVariable(name: "e", scope: !8284, file: !474, line: 103, type: !484)
!8294 = !DILocation(line: 103, column: 29, scope: !8284)
!8295 = !DILocation(line: 104, column: 16, scope: !8284)
!8296 = !DILocation(line: 104, column: 7, scope: !8284)
!8297 = !DILocation(line: 104, column: 14, scope: !8284)
!8298 = !DILocation(line: 105, column: 16, scope: !8284)
!8299 = !DILocation(line: 105, column: 7, scope: !8284)
!8300 = !DILocation(line: 105, column: 14, scope: !8284)
!8301 = !DILocation(line: 106, column: 20, scope: !8284)
!8302 = !DILocation(line: 106, column: 33, scope: !8284)
!8303 = !DILocation(line: 106, column: 7, scope: !8284)
!8304 = !DILocation(line: 106, column: 5, scope: !8284)
!8305 = !DILocation(line: 107, column: 10, scope: !8284)
!8306 = !DILocation(line: 107, column: 14, scope: !8284)
!8307 = !DILocation(line: 107, column: 17, scope: !8284)
!8308 = !DILocation(line: 107, column: 3, scope: !8284)
!8309 = distinct !DISubprogram(name: "remember_copied", scope: !474, file: !474, line: 115, type: !8310, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !473, retainedNodes: !213)
!8310 = !DISubroutineType(types: !8311)
!8311 = !{!7, !113, !256, !259}
!8312 = !DILocalVariable(name: "name", arg: 1, scope: !8309, file: !474, line: 115, type: !113)
!8313 = !DILocation(line: 115, column: 30, scope: !8309)
!8314 = !DILocalVariable(name: "ino", arg: 2, scope: !8309, file: !474, line: 115, type: !256)
!8315 = !DILocation(line: 115, column: 42, scope: !8309)
!8316 = !DILocalVariable(name: "dev", arg: 3, scope: !8309, file: !474, line: 115, type: !259)
!8317 = !DILocation(line: 115, column: 53, scope: !8309)
!8318 = !DILocalVariable(name: "ent", scope: !8309, file: !474, line: 117, type: !478)
!8319 = !DILocation(line: 117, column: 23, scope: !8309)
!8320 = !DILocalVariable(name: "ent_from_table", scope: !8309, file: !474, line: 118, type: !478)
!8321 = !DILocation(line: 118, column: 23, scope: !8309)
!8322 = !DILocation(line: 120, column: 9, scope: !8309)
!8323 = !DILocation(line: 120, column: 7, scope: !8309)
!8324 = !DILocation(line: 121, column: 24, scope: !8309)
!8325 = !DILocation(line: 121, column: 15, scope: !8309)
!8326 = !DILocation(line: 121, column: 3, scope: !8309)
!8327 = !DILocation(line: 121, column: 8, scope: !8309)
!8328 = !DILocation(line: 121, column: 13, scope: !8309)
!8329 = !DILocation(line: 122, column: 17, scope: !8309)
!8330 = !DILocation(line: 122, column: 3, scope: !8309)
!8331 = !DILocation(line: 122, column: 8, scope: !8309)
!8332 = !DILocation(line: 122, column: 15, scope: !8309)
!8333 = !DILocation(line: 123, column: 17, scope: !8309)
!8334 = !DILocation(line: 123, column: 3, scope: !8309)
!8335 = !DILocation(line: 123, column: 8, scope: !8309)
!8336 = !DILocation(line: 123, column: 15, scope: !8309)
!8337 = !DILocation(line: 125, column: 33, scope: !8309)
!8338 = !DILocation(line: 125, column: 46, scope: !8309)
!8339 = !DILocation(line: 125, column: 20, scope: !8309)
!8340 = !DILocation(line: 125, column: 18, scope: !8309)
!8341 = !DILocation(line: 126, column: 7, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8309, file: !474, line: 126, column: 7)
!8343 = !DILocation(line: 126, column: 22, scope: !8342)
!8344 = !DILocation(line: 126, column: 7, scope: !8309)
!8345 = !DILocation(line: 129, column: 7, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8342, file: !474, line: 127, column: 5)
!8347 = !DILocation(line: 135, column: 7, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8309, file: !474, line: 135, column: 7)
!8349 = !DILocation(line: 135, column: 25, scope: !8348)
!8350 = !DILocation(line: 135, column: 22, scope: !8348)
!8351 = !DILocation(line: 135, column: 7, scope: !8309)
!8352 = !DILocation(line: 137, column: 25, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8348, file: !474, line: 136, column: 5)
!8354 = !DILocation(line: 137, column: 7, scope: !8353)
!8355 = !DILocation(line: 138, column: 23, scope: !8353)
!8356 = !DILocation(line: 138, column: 39, scope: !8353)
!8357 = !DILocation(line: 138, column: 7, scope: !8353)
!8358 = !DILocation(line: 142, column: 3, scope: !8309)
!8359 = !DILocation(line: 143, column: 1, scope: !8309)
!8360 = distinct !DISubprogram(name: "hash_init", scope: !474, file: !474, line: 147, type: !562, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !473, retainedNodes: !213)
!8361 = !DILocation(line: 149, column: 17, scope: !8360)
!8362 = !DILocation(line: 149, column: 15, scope: !8360)
!8363 = !DILocation(line: 153, column: 7, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8360, file: !474, line: 153, column: 7)
!8365 = !DILocation(line: 153, column: 19, scope: !8364)
!8366 = !DILocation(line: 153, column: 7, scope: !8360)
!8367 = !DILocation(line: 154, column: 5, scope: !8364)
!8368 = !DILocation(line: 155, column: 1, scope: !8360)
!8369 = distinct !DISubprogram(name: "src_to_dest_hash", scope: !474, file: !474, line: 51, type: !706, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !473, retainedNodes: !213)
!8370 = !DILocalVariable(name: "x", arg: 1, scope: !8369, file: !474, line: 51, type: !553)
!8371 = !DILocation(line: 51, column: 31, scope: !8369)
!8372 = !DILocalVariable(name: "table_size", arg: 2, scope: !8369, file: !474, line: 51, type: !52)
!8373 = !DILocation(line: 51, column: 41, scope: !8369)
!8374 = !DILocalVariable(name: "p", scope: !8369, file: !474, line: 53, type: !484)
!8375 = !DILocation(line: 53, column: 29, scope: !8369)
!8376 = !DILocation(line: 53, column: 33, scope: !8369)
!8377 = !DILocation(line: 58, column: 22, scope: !8369)
!8378 = !DILocation(line: 58, column: 25, scope: !8369)
!8379 = !DILocation(line: 58, column: 34, scope: !8369)
!8380 = !DILocation(line: 58, column: 32, scope: !8369)
!8381 = !DILocation(line: 58, column: 3, scope: !8369)
!8382 = distinct !DISubprogram(name: "src_to_dest_compare", scope: !474, file: !474, line: 64, type: !711, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !473, retainedNodes: !213)
!8383 = !DILocalVariable(name: "x", arg: 1, scope: !8382, file: !474, line: 64, type: !553)
!8384 = !DILocation(line: 64, column: 34, scope: !8382)
!8385 = !DILocalVariable(name: "y", arg: 2, scope: !8382, file: !474, line: 64, type: !553)
!8386 = !DILocation(line: 64, column: 49, scope: !8382)
!8387 = !DILocalVariable(name: "a", scope: !8382, file: !474, line: 66, type: !484)
!8388 = !DILocation(line: 66, column: 29, scope: !8382)
!8389 = !DILocation(line: 66, column: 33, scope: !8382)
!8390 = !DILocalVariable(name: "b", scope: !8382, file: !474, line: 67, type: !484)
!8391 = !DILocation(line: 67, column: 29, scope: !8382)
!8392 = !DILocation(line: 67, column: 33, scope: !8382)
!8393 = !DILocation(line: 68, column: 10, scope: !8382)
!8394 = !DILocation(line: 0, scope: !8382)
!8395 = !DILocation(line: 68, column: 3, scope: !8382)
!8396 = distinct !DISubprogram(name: "forget_all", scope: !474, file: !474, line: 161, type: !562, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !473, retainedNodes: !213)
!8397 = !DILocation(line: 163, column: 14, scope: !8396)
!8398 = !DILocation(line: 163, column: 3, scope: !8396)
!8399 = !DILocation(line: 164, column: 1, scope: !8396)
!8400 = distinct !DISubprogram(name: "extent_scan_init", scope: !1235, file: !1235, line: 69, type: !8401, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1234, retainedNodes: !213)
!8401 = !DISubroutineType(types: !8402)
!8402 = !{null, !5, !8403}
!8403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8404, size: 64)
!8404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !439, line: 36, size: 384, elements: !8405)
!8405 = !{!8406, !8407, !8408, !8409, !8410, !8411, !8412}
!8406 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !8404, file: !439, line: 39, baseType: !5, size: 32)
!8407 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !8404, file: !439, line: 42, baseType: !1237, size: 64, offset: 64)
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !8404, file: !439, line: 45, baseType: !67, size: 32, offset: 128)
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !8404, file: !439, line: 48, baseType: !52, size: 64, offset: 192)
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !8404, file: !439, line: 52, baseType: !139, size: 8, offset: 256)
!8411 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !8404, file: !439, line: 55, baseType: !139, size: 8, offset: 264)
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !8404, file: !439, line: 58, baseType: !1238, size: 64, offset: 320)
!8413 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8400, file: !1235, line: 69, type: !5)
!8414 = !DILocation(line: 69, column: 23, scope: !8400)
!8415 = !DILocalVariable(name: "scan", arg: 2, scope: !8400, file: !1235, line: 69, type: !8403)
!8416 = !DILocation(line: 69, column: 51, scope: !8400)
!8417 = !DILocation(line: 71, column: 14, scope: !8400)
!8418 = !DILocation(line: 71, column: 3, scope: !8400)
!8419 = !DILocation(line: 71, column: 9, scope: !8400)
!8420 = !DILocation(line: 71, column: 12, scope: !8400)
!8421 = !DILocation(line: 72, column: 3, scope: !8400)
!8422 = !DILocation(line: 72, column: 9, scope: !8400)
!8423 = !DILocation(line: 72, column: 18, scope: !8400)
!8424 = !DILocation(line: 73, column: 3, scope: !8400)
!8425 = !DILocation(line: 73, column: 9, scope: !8400)
!8426 = !DILocation(line: 73, column: 18, scope: !8400)
!8427 = !DILocation(line: 74, column: 3, scope: !8400)
!8428 = !DILocation(line: 74, column: 9, scope: !8400)
!8429 = !DILocation(line: 74, column: 20, scope: !8400)
!8430 = !DILocation(line: 75, column: 3, scope: !8400)
!8431 = !DILocation(line: 75, column: 9, scope: !8400)
!8432 = !DILocation(line: 75, column: 29, scope: !8400)
!8433 = !DILocation(line: 76, column: 3, scope: !8400)
!8434 = !DILocation(line: 76, column: 9, scope: !8400)
!8435 = !DILocation(line: 76, column: 26, scope: !8400)
!8436 = !DILocation(line: 77, column: 20, scope: !8400)
!8437 = !DILocation(line: 77, column: 3, scope: !8400)
!8438 = !DILocation(line: 77, column: 9, scope: !8400)
!8439 = !DILocation(line: 77, column: 18, scope: !8400)
!8440 = !DILocation(line: 78, column: 1, scope: !8400)
!8441 = distinct !DISubprogram(name: "extent_need_sync", scope: !1235, file: !1235, line: 33, type: !980, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1234, retainedNodes: !213)
!8442 = !DILocation(line: 39, column: 3, scope: !8441)
!8443 = distinct !DISubprogram(name: "extent_scan_read", scope: !1235, file: !1235, line: 87, type: !8444, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1234, retainedNodes: !213)
!8444 = !DISubroutineType(types: !8445)
!8445 = !{!139, !8403}
!8446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8443, file: !1235, line: 94, size: 32768, elements: !8447)
!8447 = !{!8448, !8449}
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !8446, file: !1235, line: 94, baseType: !1245, size: 256)
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !8446, file: !1235, line: 94, baseType: !2006, size: 32768)
!8450 = !DILocalVariable(name: "scan", arg: 1, scope: !8443, file: !1235, line: 87, type: !8403)
!8451 = !DILocation(line: 87, column: 39, scope: !8443)
!8452 = !DILocalVariable(name: "si", scope: !8443, file: !1235, line: 89, type: !67)
!8453 = !DILocation(line: 89, column: 16, scope: !8443)
!8454 = !DILocalVariable(name: "last_ei", scope: !8443, file: !1235, line: 90, type: !1238)
!8455 = !DILocation(line: 90, column: 23, scope: !8443)
!8456 = !DILocation(line: 90, column: 33, scope: !8443)
!8457 = !DILocation(line: 90, column: 39, scope: !8443)
!8458 = !DILocation(line: 92, column: 3, scope: !8443)
!8459 = !DILocalVariable(name: "fiemap_buf", scope: !8460, file: !1235, line: 94, type: !8446)
!8460 = distinct !DILexicalBlock(scope: !8443, file: !1235, line: 93, column: 5)
!8461 = !DILocation(line: 94, column: 48, scope: !8460)
!8462 = !DILocalVariable(name: "fiemap", scope: !8460, file: !1235, line: 95, type: !1244)
!8463 = !DILocation(line: 95, column: 22, scope: !8460)
!8464 = !DILocation(line: 95, column: 43, scope: !8460)
!8465 = !DILocalVariable(name: "fm_extents", scope: !8460, file: !1235, line: 96, type: !1268)
!8466 = !DILocation(line: 96, column: 29, scope: !8460)
!8467 = !DILocation(line: 96, column: 43, scope: !8460)
!8468 = !DILocation(line: 96, column: 51, scope: !8460)
!8469 = !DILocation(line: 104, column: 7, scope: !8460)
!8470 = !DILocation(line: 106, column: 26, scope: !8460)
!8471 = !DILocation(line: 106, column: 32, scope: !8460)
!8472 = !DILocation(line: 106, column: 7, scope: !8460)
!8473 = !DILocation(line: 106, column: 15, scope: !8460)
!8474 = !DILocation(line: 106, column: 24, scope: !8460)
!8475 = !DILocation(line: 107, column: 26, scope: !8460)
!8476 = !DILocation(line: 107, column: 32, scope: !8460)
!8477 = !DILocation(line: 107, column: 7, scope: !8460)
!8478 = !DILocation(line: 107, column: 15, scope: !8460)
!8479 = !DILocation(line: 107, column: 24, scope: !8460)
!8480 = !DILocation(line: 108, column: 7, scope: !8460)
!8481 = !DILocation(line: 108, column: 15, scope: !8460)
!8482 = !DILocation(line: 108, column: 31, scope: !8460)
!8483 = !DILocation(line: 109, column: 47, scope: !8460)
!8484 = !DILocation(line: 109, column: 53, scope: !8460)
!8485 = !DILocation(line: 109, column: 45, scope: !8460)
!8486 = !DILocation(line: 109, column: 7, scope: !8460)
!8487 = !DILocation(line: 109, column: 15, scope: !8460)
!8488 = !DILocation(line: 109, column: 25, scope: !8460)
!8489 = !DILocation(line: 113, column: 18, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8460, file: !1235, line: 113, column: 11)
!8491 = !DILocation(line: 113, column: 24, scope: !8490)
!8492 = !DILocation(line: 113, column: 43, scope: !8490)
!8493 = !DILocation(line: 113, column: 11, scope: !8490)
!8494 = !DILocation(line: 113, column: 51, scope: !8490)
!8495 = !DILocation(line: 113, column: 11, scope: !8460)
!8496 = !DILocation(line: 115, column: 15, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8498, file: !1235, line: 115, column: 15)
!8498 = distinct !DILexicalBlock(scope: !8490, file: !1235, line: 114, column: 9)
!8499 = !DILocation(line: 115, column: 21, scope: !8497)
!8500 = !DILocation(line: 115, column: 32, scope: !8497)
!8501 = !DILocation(line: 115, column: 15, scope: !8498)
!8502 = !DILocation(line: 116, column: 13, scope: !8497)
!8503 = !DILocation(line: 116, column: 19, scope: !8497)
!8504 = !DILocation(line: 116, column: 39, scope: !8497)
!8505 = !DILocation(line: 117, column: 11, scope: !8498)
!8506 = !DILocation(line: 121, column: 11, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8460, file: !1235, line: 121, column: 11)
!8508 = !DILocation(line: 121, column: 19, scope: !8507)
!8509 = !DILocation(line: 121, column: 37, scope: !8507)
!8510 = !DILocation(line: 121, column: 11, scope: !8460)
!8511 = !DILocation(line: 123, column: 11, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8507, file: !1235, line: 122, column: 9)
!8513 = !DILocation(line: 123, column: 17, scope: !8512)
!8514 = !DILocation(line: 123, column: 34, scope: !8512)
!8515 = !DILocation(line: 124, column: 18, scope: !8512)
!8516 = !DILocation(line: 124, column: 24, scope: !8512)
!8517 = !DILocation(line: 124, column: 35, scope: !8512)
!8518 = !DILocation(line: 124, column: 11, scope: !8512)
!8519 = !DILocation(line: 127, column: 7, scope: !8460)
!8520 = !DILocation(line: 128, column: 25, scope: !8460)
!8521 = !DILocation(line: 128, column: 33, scope: !8460)
!8522 = !DILocation(line: 128, column: 7, scope: !8460)
!8523 = !DILocation(line: 128, column: 13, scope: !8460)
!8524 = !DILocation(line: 128, column: 22, scope: !8460)
!8525 = !DILocalVariable(name: "prev_idx", scope: !8526, file: !1235, line: 132, type: !52)
!8526 = distinct !DILexicalBlock(scope: !8460, file: !1235, line: 129, column: 7)
!8527 = !DILocation(line: 132, column: 16, scope: !8526)
!8528 = !DILocation(line: 132, column: 27, scope: !8526)
!8529 = !DILocation(line: 132, column: 37, scope: !8526)
!8530 = !DILocation(line: 132, column: 43, scope: !8526)
!8531 = !DILocation(line: 132, column: 35, scope: !8526)
!8532 = !DILocation(line: 133, column: 37, scope: !8526)
!8533 = !DILocation(line: 133, column: 43, scope: !8526)
!8534 = !DILocation(line: 133, column: 53, scope: !8526)
!8535 = !DILocation(line: 133, column: 59, scope: !8526)
!8536 = !DILocation(line: 133, column: 26, scope: !8526)
!8537 = !DILocation(line: 133, column: 9, scope: !8526)
!8538 = !DILocation(line: 133, column: 15, scope: !8526)
!8539 = !DILocation(line: 133, column: 24, scope: !8526)
!8540 = !DILocation(line: 135, column: 19, scope: !8526)
!8541 = !DILocation(line: 135, column: 25, scope: !8526)
!8542 = !DILocation(line: 135, column: 36, scope: !8526)
!8543 = !DILocation(line: 135, column: 34, scope: !8526)
!8544 = !DILocation(line: 135, column: 17, scope: !8526)
!8545 = !DILocalVariable(name: "i", scope: !8460, file: !1235, line: 138, type: !67)
!8546 = !DILocation(line: 138, column: 20, scope: !8460)
!8547 = !DILocation(line: 139, column: 14, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8460, file: !1235, line: 139, column: 7)
!8549 = !DILocation(line: 139, column: 12, scope: !8548)
!8550 = !DILocation(line: 139, column: 19, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8548, file: !1235, line: 139, column: 7)
!8552 = !DILocation(line: 139, column: 23, scope: !8551)
!8553 = !DILocation(line: 139, column: 31, scope: !8551)
!8554 = !DILocation(line: 139, column: 21, scope: !8551)
!8555 = !DILocation(line: 139, column: 7, scope: !8548)
!8556 = !DILocation(line: 141, column: 11, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8551, file: !1235, line: 140, column: 9)
!8558 = !DILocation(line: 146, column: 15, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8557, file: !1235, line: 146, column: 15)
!8560 = !DILocation(line: 146, column: 18, scope: !8559)
!8561 = !DILocation(line: 146, column: 21, scope: !8559)
!8562 = !DILocation(line: 146, column: 30, scope: !8559)
!8563 = !DILocation(line: 147, column: 19, scope: !8559)
!8564 = !DILocation(line: 147, column: 30, scope: !8559)
!8565 = !DILocation(line: 147, column: 33, scope: !8559)
!8566 = !DILocation(line: 147, column: 42, scope: !8559)
!8567 = !DILocation(line: 147, column: 15, scope: !8559)
!8568 = !DILocation(line: 148, column: 15, scope: !8559)
!8569 = !DILocation(line: 148, column: 19, scope: !8559)
!8570 = !DILocation(line: 148, column: 28, scope: !8559)
!8571 = !DILocation(line: 148, column: 42, scope: !8559)
!8572 = !DILocation(line: 148, column: 51, scope: !8559)
!8573 = !DILocation(line: 148, column: 40, scope: !8559)
!8574 = !DILocation(line: 149, column: 22, scope: !8559)
!8575 = !DILocation(line: 149, column: 33, scope: !8559)
!8576 = !DILocation(line: 149, column: 36, scope: !8559)
!8577 = !DILocation(line: 149, column: 19, scope: !8559)
!8578 = !DILocation(line: 146, column: 15, scope: !8557)
!8579 = !DILocation(line: 152, column: 38, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8559, file: !1235, line: 150, column: 13)
!8581 = !DILocation(line: 152, column: 49, scope: !8580)
!8582 = !DILocation(line: 152, column: 52, scope: !8580)
!8583 = !DILocation(line: 152, column: 15, scope: !8580)
!8584 = !DILocation(line: 152, column: 24, scope: !8580)
!8585 = !DILocation(line: 152, column: 35, scope: !8580)
!8586 = !DILocation(line: 154, column: 36, scope: !8580)
!8587 = !DILocation(line: 154, column: 47, scope: !8580)
!8588 = !DILocation(line: 154, column: 50, scope: !8580)
!8589 = !DILocation(line: 154, column: 15, scope: !8580)
!8590 = !DILocation(line: 154, column: 24, scope: !8580)
!8591 = !DILocation(line: 154, column: 34, scope: !8580)
!8592 = !DILocation(line: 155, column: 13, scope: !8580)
!8593 = !DILocation(line: 156, column: 21, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8559, file: !1235, line: 156, column: 20)
!8595 = !DILocation(line: 156, column: 24, scope: !8594)
!8596 = !DILocation(line: 156, column: 29, scope: !8594)
!8597 = !DILocation(line: 156, column: 32, scope: !8594)
!8598 = !DILocation(line: 156, column: 38, scope: !8594)
!8599 = !DILocation(line: 156, column: 51, scope: !8594)
!8600 = !DILocation(line: 156, column: 62, scope: !8594)
!8601 = !DILocation(line: 156, column: 65, scope: !8594)
!8602 = !DILocation(line: 156, column: 49, scope: !8594)
!8603 = !DILocation(line: 157, column: 20, scope: !8594)
!8604 = !DILocation(line: 157, column: 24, scope: !8594)
!8605 = !DILocation(line: 157, column: 27, scope: !8594)
!8606 = !DILocation(line: 157, column: 31, scope: !8594)
!8607 = !DILocation(line: 157, column: 40, scope: !8594)
!8608 = !DILocation(line: 157, column: 54, scope: !8594)
!8609 = !DILocation(line: 157, column: 63, scope: !8594)
!8610 = !DILocation(line: 157, column: 52, scope: !8594)
!8611 = !DILocation(line: 158, column: 33, scope: !8594)
!8612 = !DILocation(line: 158, column: 44, scope: !8594)
!8613 = !DILocation(line: 158, column: 47, scope: !8594)
!8614 = !DILocation(line: 158, column: 31, scope: !8594)
!8615 = !DILocation(line: 156, column: 20, scope: !8559)
!8616 = !DILocalVariable(name: "new_logical", scope: !8617, file: !1235, line: 164, type: !1249)
!8617 = distinct !DILexicalBlock(scope: !8594, file: !1235, line: 159, column: 13)
!8618 = !DILocation(line: 164, column: 24, scope: !8617)
!8619 = !DILocalVariable(name: "length_adjust", scope: !8617, file: !1235, line: 165, type: !1249)
!8620 = !DILocation(line: 165, column: 24, scope: !8617)
!8621 = !DILocation(line: 166, column: 19, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8617, file: !1235, line: 166, column: 19)
!8623 = !DILocation(line: 166, column: 22, scope: !8622)
!8624 = !DILocation(line: 166, column: 19, scope: !8617)
!8625 = !DILocation(line: 167, column: 31, scope: !8622)
!8626 = !DILocation(line: 167, column: 37, scope: !8622)
!8627 = !DILocation(line: 167, column: 29, scope: !8622)
!8628 = !DILocation(line: 167, column: 17, scope: !8622)
!8629 = !DILocation(line: 172, column: 33, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8622, file: !1235, line: 169, column: 17)
!8631 = !DILocation(line: 172, column: 42, scope: !8630)
!8632 = !DILocation(line: 172, column: 56, scope: !8630)
!8633 = !DILocation(line: 172, column: 65, scope: !8630)
!8634 = !DILocation(line: 172, column: 54, scope: !8630)
!8635 = !DILocation(line: 172, column: 31, scope: !8630)
!8636 = !DILocation(line: 174, column: 31, scope: !8617)
!8637 = !DILocation(line: 174, column: 45, scope: !8617)
!8638 = !DILocation(line: 174, column: 56, scope: !8617)
!8639 = !DILocation(line: 174, column: 59, scope: !8617)
!8640 = !DILocation(line: 174, column: 43, scope: !8617)
!8641 = !DILocation(line: 174, column: 29, scope: !8617)
!8642 = !DILocation(line: 176, column: 19, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8617, file: !1235, line: 176, column: 19)
!8644 = !DILocation(line: 176, column: 35, scope: !8643)
!8645 = !DILocation(line: 176, column: 46, scope: !8643)
!8646 = !DILocation(line: 176, column: 49, scope: !8643)
!8647 = !DILocation(line: 176, column: 33, scope: !8643)
!8648 = !DILocation(line: 176, column: 19, scope: !8617)
!8649 = !DILocation(line: 178, column: 23, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8651, file: !1235, line: 178, column: 23)
!8651 = distinct !DILexicalBlock(scope: !8643, file: !1235, line: 177, column: 17)
!8652 = !DILocation(line: 178, column: 29, scope: !8650)
!8653 = !DILocation(line: 178, column: 40, scope: !8650)
!8654 = !DILocation(line: 178, column: 23, scope: !8651)
!8655 = !DILocation(line: 179, column: 21, scope: !8650)
!8656 = !DILocation(line: 179, column: 27, scope: !8650)
!8657 = !DILocation(line: 179, column: 47, scope: !8650)
!8658 = !DILocation(line: 180, column: 19, scope: !8651)
!8659 = !DILocation(line: 182, column: 42, scope: !8617)
!8660 = !DILocation(line: 182, column: 15, scope: !8617)
!8661 = !DILocation(line: 182, column: 26, scope: !8617)
!8662 = !DILocation(line: 182, column: 29, scope: !8617)
!8663 = !DILocation(line: 182, column: 40, scope: !8617)
!8664 = !DILocation(line: 183, column: 42, scope: !8617)
!8665 = !DILocation(line: 183, column: 15, scope: !8617)
!8666 = !DILocation(line: 183, column: 26, scope: !8617)
!8667 = !DILocation(line: 183, column: 29, scope: !8617)
!8668 = !DILocation(line: 183, column: 39, scope: !8617)
!8669 = !DILocation(line: 185, column: 16, scope: !8617)
!8670 = !DILocation(line: 186, column: 15, scope: !8617)
!8671 = !DILocation(line: 190, column: 25, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8594, file: !1235, line: 189, column: 13)
!8673 = !DILocation(line: 190, column: 31, scope: !8672)
!8674 = !DILocation(line: 190, column: 42, scope: !8672)
!8675 = !DILocation(line: 190, column: 40, scope: !8672)
!8676 = !DILocation(line: 190, column: 23, scope: !8672)
!8677 = !DILocation(line: 191, column: 38, scope: !8672)
!8678 = !DILocation(line: 191, column: 49, scope: !8672)
!8679 = !DILocation(line: 191, column: 52, scope: !8672)
!8680 = !DILocation(line: 191, column: 15, scope: !8672)
!8681 = !DILocation(line: 191, column: 24, scope: !8672)
!8682 = !DILocation(line: 191, column: 36, scope: !8672)
!8683 = !DILocation(line: 192, column: 37, scope: !8672)
!8684 = !DILocation(line: 192, column: 48, scope: !8672)
!8685 = !DILocation(line: 192, column: 51, scope: !8672)
!8686 = !DILocation(line: 192, column: 15, scope: !8672)
!8687 = !DILocation(line: 192, column: 24, scope: !8672)
!8688 = !DILocation(line: 192, column: 35, scope: !8672)
!8689 = !DILocation(line: 193, column: 36, scope: !8672)
!8690 = !DILocation(line: 193, column: 47, scope: !8672)
!8691 = !DILocation(line: 193, column: 50, scope: !8672)
!8692 = !DILocation(line: 193, column: 15, scope: !8672)
!8693 = !DILocation(line: 193, column: 24, scope: !8672)
!8694 = !DILocation(line: 193, column: 34, scope: !8672)
!8695 = !DILocation(line: 194, column: 17, scope: !8672)
!8696 = !DILocation(line: 196, column: 9, scope: !8557)
!8697 = !DILocation(line: 139, column: 51, scope: !8551)
!8698 = !DILocation(line: 139, column: 7, scope: !8551)
!8699 = distinct !{!8699, !8555, !8700}
!8700 = !DILocation(line: 196, column: 9, scope: !8548)
!8701 = !DILocation(line: 198, column: 11, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8460, file: !1235, line: 198, column: 11)
!8703 = !DILocation(line: 198, column: 20, scope: !8702)
!8704 = !DILocation(line: 198, column: 30, scope: !8702)
!8705 = !DILocation(line: 198, column: 11, scope: !8460)
!8706 = !DILocation(line: 199, column: 9, scope: !8702)
!8707 = !DILocation(line: 199, column: 15, scope: !8702)
!8708 = !DILocation(line: 199, column: 32, scope: !8702)
!8709 = !DILocation(line: 203, column: 11, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8460, file: !1235, line: 203, column: 11)
!8711 = !DILocation(line: 203, column: 14, scope: !8710)
!8712 = !DILocation(line: 203, column: 22, scope: !8710)
!8713 = !DILocation(line: 203, column: 26, scope: !8710)
!8714 = !DILocation(line: 203, column: 32, scope: !8710)
!8715 = !DILocation(line: 203, column: 11, scope: !8460)
!8716 = !DILocation(line: 204, column: 19, scope: !8710)
!8717 = !DILocation(line: 204, column: 25, scope: !8710)
!8718 = !DILocation(line: 204, column: 36, scope: !8710)
!8719 = !DILocation(line: 204, column: 34, scope: !8710)
!8720 = !DILocation(line: 204, column: 41, scope: !8710)
!8721 = !DILocation(line: 204, column: 17, scope: !8710)
!8722 = !DILocation(line: 204, column: 9, scope: !8710)
!8723 = !DILocation(line: 207, column: 24, scope: !8460)
!8724 = !DILocation(line: 207, column: 7, scope: !8460)
!8725 = !DILocation(line: 207, column: 13, scope: !8460)
!8726 = !DILocation(line: 207, column: 22, scope: !8460)
!8727 = !DILocation(line: 209, column: 11, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8460, file: !1235, line: 209, column: 11)
!8729 = !DILocation(line: 209, column: 17, scope: !8728)
!8730 = !DILocation(line: 209, column: 11, scope: !8460)
!8731 = !DILocation(line: 210, column: 9, scope: !8728)
!8732 = !DILocation(line: 212, column: 28, scope: !8728)
!8733 = !DILocation(line: 212, column: 37, scope: !8728)
!8734 = !DILocation(line: 212, column: 51, scope: !8728)
!8735 = !DILocation(line: 212, column: 60, scope: !8728)
!8736 = !DILocation(line: 212, column: 49, scope: !8728)
!8737 = !DILocation(line: 212, column: 9, scope: !8728)
!8738 = !DILocation(line: 212, column: 15, scope: !8728)
!8739 = !DILocation(line: 212, column: 26, scope: !8728)
!8740 = !DILocation(line: 214, column: 11, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8460, file: !1235, line: 214, column: 11)
!8742 = !DILocation(line: 214, column: 14, scope: !8741)
!8743 = !DILocation(line: 214, column: 11, scope: !8460)
!8744 = !DILocation(line: 215, column: 9, scope: !8741)
!8745 = distinct !{!8745, !8458, !8746}
!8746 = !DILocation(line: 216, column: 5, scope: !8443)
!8747 = !DILocation(line: 218, column: 3, scope: !8443)
!8748 = !DILocation(line: 219, column: 1, scope: !8443)
!8749 = distinct !DISubprogram(name: "force_linkat", scope: !490, file: !490, line: 95, type: !8750, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !489, retainedNodes: !213)
!8750 = !DISubroutineType(types: !8751)
!8751 = !{!5, !5, !113, !5, !113, !5, !139, !5}
!8752 = !DILocalVariable(name: "srcdir", arg: 1, scope: !8749, file: !490, line: 95, type: !5)
!8753 = !DILocation(line: 95, column: 19, scope: !8749)
!8754 = !DILocalVariable(name: "srcname", arg: 2, scope: !8749, file: !490, line: 95, type: !113)
!8755 = !DILocation(line: 95, column: 39, scope: !8749)
!8756 = !DILocalVariable(name: "dstdir", arg: 3, scope: !8749, file: !490, line: 96, type: !5)
!8757 = !DILocation(line: 96, column: 19, scope: !8749)
!8758 = !DILocalVariable(name: "dstname", arg: 4, scope: !8749, file: !490, line: 96, type: !113)
!8759 = !DILocation(line: 96, column: 39, scope: !8749)
!8760 = !DILocalVariable(name: "flags", arg: 5, scope: !8749, file: !490, line: 96, type: !5)
!8761 = !DILocation(line: 96, column: 52, scope: !8749)
!8762 = !DILocalVariable(name: "force", arg: 6, scope: !8749, file: !490, line: 96, type: !139)
!8763 = !DILocation(line: 96, column: 64, scope: !8749)
!8764 = !DILocalVariable(name: "linkat_errno", arg: 7, scope: !8749, file: !490, line: 97, type: !5)
!8765 = !DILocation(line: 97, column: 19, scope: !8749)
!8766 = !DILocation(line: 99, column: 7, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8749, file: !490, line: 99, column: 7)
!8768 = !DILocation(line: 99, column: 20, scope: !8767)
!8769 = !DILocation(line: 99, column: 7, scope: !8749)
!8770 = !DILocation(line: 100, column: 29, scope: !8767)
!8771 = !DILocation(line: 100, column: 37, scope: !8767)
!8772 = !DILocation(line: 100, column: 46, scope: !8767)
!8773 = !DILocation(line: 100, column: 54, scope: !8767)
!8774 = !DILocation(line: 100, column: 63, scope: !8767)
!8775 = !DILocation(line: 100, column: 21, scope: !8767)
!8776 = !DILocation(line: 100, column: 70, scope: !8767)
!8777 = !DILocation(line: 101, column: 27, scope: !8767)
!8778 = !DILocation(line: 100, column: 18, scope: !8767)
!8779 = !DILocation(line: 100, column: 5, scope: !8767)
!8780 = !DILocation(line: 102, column: 8, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8749, file: !490, line: 102, column: 7)
!8782 = !DILocation(line: 102, column: 14, scope: !8781)
!8783 = !DILocation(line: 102, column: 17, scope: !8781)
!8784 = !DILocation(line: 102, column: 30, scope: !8781)
!8785 = !DILocation(line: 102, column: 7, scope: !8749)
!8786 = !DILocation(line: 103, column: 12, scope: !8781)
!8787 = !DILocation(line: 103, column: 5, scope: !8781)
!8788 = !DILocalVariable(name: "buf", scope: !8749, file: !490, line: 105, type: !492)
!8789 = !DILocation(line: 105, column: 8, scope: !8749)
!8790 = !DILocalVariable(name: "dsttmp", scope: !8749, file: !490, line: 106, type: !7)
!8791 = !DILocation(line: 106, column: 9, scope: !8749)
!8792 = !DILocation(line: 106, column: 36, scope: !8749)
!8793 = !DILocation(line: 106, column: 45, scope: !8749)
!8794 = !DILocation(line: 106, column: 18, scope: !8749)
!8795 = !DILocation(line: 107, column: 9, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8749, file: !490, line: 107, column: 7)
!8797 = !DILocation(line: 107, column: 7, scope: !8749)
!8798 = !DILocation(line: 108, column: 12, scope: !8796)
!8799 = !DILocation(line: 108, column: 5, scope: !8796)
!8800 = !DILocalVariable(name: "arg", scope: !8749, file: !490, line: 109, type: !498)
!8801 = !DILocation(line: 109, column: 19, scope: !8749)
!8802 = !DILocation(line: 109, column: 25, scope: !8749)
!8803 = !DILocation(line: 109, column: 27, scope: !8749)
!8804 = !DILocation(line: 109, column: 35, scope: !8749)
!8805 = !DILocation(line: 109, column: 44, scope: !8749)
!8806 = !DILocation(line: 109, column: 52, scope: !8749)
!8807 = !DILocalVariable(name: "err", scope: !8749, file: !490, line: 110, type: !5)
!8808 = !DILocation(line: 110, column: 7, scope: !8749)
!8809 = !DILocation(line: 112, column: 25, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8749, file: !490, line: 112, column: 7)
!8811 = !DILocation(line: 112, column: 36, scope: !8810)
!8812 = !DILocation(line: 112, column: 7, scope: !8810)
!8813 = !DILocation(line: 112, column: 66, scope: !8810)
!8814 = !DILocation(line: 112, column: 7, scope: !8749)
!8815 = !DILocation(line: 113, column: 11, scope: !8810)
!8816 = !DILocation(line: 113, column: 9, scope: !8810)
!8817 = !DILocation(line: 113, column: 5, scope: !8810)
!8818 = !DILocation(line: 116, column: 23, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8810, file: !490, line: 115, column: 5)
!8820 = !DILocation(line: 116, column: 31, scope: !8819)
!8821 = !DILocation(line: 116, column: 39, scope: !8819)
!8822 = !DILocation(line: 116, column: 47, scope: !8819)
!8823 = !DILocation(line: 116, column: 13, scope: !8819)
!8824 = !DILocation(line: 116, column: 56, scope: !8819)
!8825 = !DILocation(line: 116, column: 68, scope: !8819)
!8826 = !DILocation(line: 116, column: 11, scope: !8819)
!8827 = !DILocation(line: 120, column: 17, scope: !8819)
!8828 = !DILocation(line: 120, column: 25, scope: !8819)
!8829 = !DILocation(line: 120, column: 7, scope: !8819)
!8830 = !DILocation(line: 123, column: 7, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8749, file: !490, line: 123, column: 7)
!8832 = !DILocation(line: 123, column: 17, scope: !8831)
!8833 = !DILocation(line: 123, column: 14, scope: !8831)
!8834 = !DILocation(line: 123, column: 7, scope: !8749)
!8835 = !DILocation(line: 124, column: 11, scope: !8831)
!8836 = !DILocation(line: 124, column: 5, scope: !8831)
!8837 = !DILocation(line: 125, column: 10, scope: !8749)
!8838 = !DILocation(line: 125, column: 3, scope: !8749)
!8839 = !DILocation(line: 126, column: 1, scope: !8749)
!8840 = distinct !DISubprogram(name: "samedir_template", scope: !490, file: !490, line: 51, type: !8841, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !489, retainedNodes: !213)
!8841 = !DISubroutineType(types: !8842)
!8842 = !{!7, !113, !7}
!8843 = !DILocalVariable(name: "dstname", arg: 1, scope: !8840, file: !490, line: 51, type: !113)
!8844 = !DILocation(line: 51, column: 31, scope: !8840)
!8845 = !DILocalVariable(name: "buf", arg: 2, scope: !8840, file: !490, line: 51, type: !7)
!8846 = !DILocation(line: 51, column: 45, scope: !8840)
!8847 = !DILocalVariable(name: "dstdirlen", scope: !8840, file: !490, line: 53, type: !495)
!8848 = !DILocation(line: 53, column: 13, scope: !8840)
!8849 = !DILocation(line: 53, column: 41, scope: !8840)
!8850 = !DILocation(line: 53, column: 25, scope: !8840)
!8851 = !DILocation(line: 53, column: 52, scope: !8840)
!8852 = !DILocation(line: 53, column: 50, scope: !8840)
!8853 = !DILocalVariable(name: "dsttmpsize", scope: !8840, file: !490, line: 54, type: !52)
!8854 = !DILocation(line: 54, column: 10, scope: !8840)
!8855 = !DILocation(line: 54, column: 23, scope: !8840)
!8856 = !DILocation(line: 54, column: 33, scope: !8840)
!8857 = !DILocalVariable(name: "dsttmp", scope: !8840, file: !490, line: 55, type: !7)
!8858 = !DILocation(line: 55, column: 9, scope: !8840)
!8859 = !DILocation(line: 56, column: 7, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8840, file: !490, line: 56, column: 7)
!8861 = !DILocation(line: 56, column: 18, scope: !8860)
!8862 = !DILocation(line: 56, column: 7, scope: !8840)
!8863 = !DILocation(line: 57, column: 14, scope: !8860)
!8864 = !DILocation(line: 57, column: 12, scope: !8860)
!8865 = !DILocation(line: 57, column: 5, scope: !8860)
!8866 = !DILocation(line: 60, column: 24, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8860, file: !490, line: 59, column: 5)
!8868 = !DILocation(line: 60, column: 16, scope: !8867)
!8869 = !DILocation(line: 60, column: 14, scope: !8867)
!8870 = !DILocation(line: 61, column: 12, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8867, file: !490, line: 61, column: 11)
!8872 = !DILocation(line: 61, column: 11, scope: !8867)
!8873 = !DILocation(line: 62, column: 16, scope: !8871)
!8874 = !DILocation(line: 62, column: 9, scope: !8871)
!8875 = !DILocation(line: 64, column: 20, scope: !8840)
!8876 = !DILocation(line: 64, column: 28, scope: !8840)
!8877 = !DILocation(line: 64, column: 37, scope: !8840)
!8878 = !DILocation(line: 64, column: 11, scope: !8840)
!8879 = !DILocation(line: 64, column: 3, scope: !8840)
!8880 = !DILocation(line: 65, column: 10, scope: !8840)
!8881 = !DILocation(line: 65, column: 3, scope: !8840)
!8882 = !DILocation(line: 66, column: 1, scope: !8840)
!8883 = distinct !DISubprogram(name: "try_link", scope: !490, file: !490, line: 80, type: !893, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !489, retainedNodes: !213)
!8884 = !DILocalVariable(name: "dest", arg: 1, scope: !8883, file: !490, line: 80, type: !7)
!8885 = !DILocation(line: 80, column: 17, scope: !8883)
!8886 = !DILocalVariable(name: "arg", arg: 2, scope: !8883, file: !490, line: 80, type: !47)
!8887 = !DILocation(line: 80, column: 29, scope: !8883)
!8888 = !DILocalVariable(name: "a", scope: !8883, file: !490, line: 82, type: !497)
!8889 = !DILocation(line: 82, column: 20, scope: !8883)
!8890 = !DILocation(line: 82, column: 24, scope: !8883)
!8891 = !DILocation(line: 83, column: 18, scope: !8883)
!8892 = !DILocation(line: 83, column: 21, scope: !8883)
!8893 = !DILocation(line: 83, column: 29, scope: !8883)
!8894 = !DILocation(line: 83, column: 32, scope: !8883)
!8895 = !DILocation(line: 83, column: 41, scope: !8883)
!8896 = !DILocation(line: 83, column: 44, scope: !8883)
!8897 = !DILocation(line: 83, column: 52, scope: !8883)
!8898 = !DILocation(line: 83, column: 58, scope: !8883)
!8899 = !DILocation(line: 83, column: 61, scope: !8883)
!8900 = !DILocation(line: 83, column: 10, scope: !8883)
!8901 = !DILocation(line: 83, column: 3, scope: !8883)
!8902 = distinct !DISubprogram(name: "force_symlinkat", scope: !490, file: !490, line: 152, type: !8903, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !489, retainedNodes: !213)
!8903 = !DISubroutineType(types: !8904)
!8904 = !{!5, !113, !5, !113, !139, !5}
!8905 = !DILocalVariable(name: "srcname", arg: 1, scope: !8902, file: !490, line: 152, type: !113)
!8906 = !DILocation(line: 152, column: 30, scope: !8902)
!8907 = !DILocalVariable(name: "dstdir", arg: 2, scope: !8902, file: !490, line: 152, type: !5)
!8908 = !DILocation(line: 152, column: 43, scope: !8902)
!8909 = !DILocalVariable(name: "dstname", arg: 3, scope: !8902, file: !490, line: 152, type: !113)
!8910 = !DILocation(line: 152, column: 63, scope: !8902)
!8911 = !DILocalVariable(name: "force", arg: 4, scope: !8902, file: !490, line: 153, type: !139)
!8912 = !DILocation(line: 153, column: 23, scope: !8902)
!8913 = !DILocalVariable(name: "symlinkat_errno", arg: 5, scope: !8902, file: !490, line: 153, type: !5)
!8914 = !DILocation(line: 153, column: 34, scope: !8902)
!8915 = !DILocation(line: 155, column: 7, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8902, file: !490, line: 155, column: 7)
!8917 = !DILocation(line: 155, column: 23, scope: !8916)
!8918 = !DILocation(line: 155, column: 7, scope: !8902)
!8919 = !DILocation(line: 156, column: 34, scope: !8916)
!8920 = !DILocation(line: 156, column: 43, scope: !8916)
!8921 = !DILocation(line: 156, column: 51, scope: !8916)
!8922 = !DILocation(line: 156, column: 23, scope: !8916)
!8923 = !DILocation(line: 156, column: 60, scope: !8916)
!8924 = !DILocation(line: 156, column: 71, scope: !8916)
!8925 = !DILocation(line: 156, column: 21, scope: !8916)
!8926 = !DILocation(line: 156, column: 5, scope: !8916)
!8927 = !DILocation(line: 157, column: 8, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8902, file: !490, line: 157, column: 7)
!8929 = !DILocation(line: 157, column: 14, scope: !8928)
!8930 = !DILocation(line: 157, column: 17, scope: !8928)
!8931 = !DILocation(line: 157, column: 33, scope: !8928)
!8932 = !DILocation(line: 157, column: 7, scope: !8902)
!8933 = !DILocation(line: 158, column: 12, scope: !8928)
!8934 = !DILocation(line: 158, column: 5, scope: !8928)
!8935 = !DILocalVariable(name: "buf", scope: !8902, file: !490, line: 160, type: !492)
!8936 = !DILocation(line: 160, column: 8, scope: !8902)
!8937 = !DILocalVariable(name: "dsttmp", scope: !8902, file: !490, line: 161, type: !7)
!8938 = !DILocation(line: 161, column: 9, scope: !8902)
!8939 = !DILocation(line: 161, column: 36, scope: !8902)
!8940 = !DILocation(line: 161, column: 45, scope: !8902)
!8941 = !DILocation(line: 161, column: 18, scope: !8902)
!8942 = !DILocation(line: 162, column: 8, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8902, file: !490, line: 162, column: 7)
!8944 = !DILocation(line: 162, column: 7, scope: !8902)
!8945 = !DILocation(line: 163, column: 12, scope: !8943)
!8946 = !DILocation(line: 163, column: 5, scope: !8943)
!8947 = !DILocalVariable(name: "arg", scope: !8902, file: !490, line: 164, type: !505)
!8948 = !DILocation(line: 164, column: 22, scope: !8902)
!8949 = !DILocation(line: 164, column: 28, scope: !8902)
!8950 = !DILocation(line: 164, column: 30, scope: !8902)
!8951 = !DILocation(line: 164, column: 39, scope: !8902)
!8952 = !DILocalVariable(name: "err", scope: !8902, file: !490, line: 165, type: !5)
!8953 = !DILocation(line: 165, column: 7, scope: !8902)
!8954 = !DILocation(line: 167, column: 25, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8902, file: !490, line: 167, column: 7)
!8956 = !DILocation(line: 167, column: 36, scope: !8955)
!8957 = !DILocation(line: 167, column: 7, scope: !8955)
!8958 = !DILocation(line: 167, column: 69, scope: !8955)
!8959 = !DILocation(line: 167, column: 7, scope: !8902)
!8960 = !DILocation(line: 168, column: 11, scope: !8955)
!8961 = !DILocation(line: 168, column: 9, scope: !8955)
!8962 = !DILocation(line: 168, column: 5, scope: !8955)
!8963 = !DILocation(line: 169, column: 22, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8955, file: !490, line: 169, column: 12)
!8965 = !DILocation(line: 169, column: 30, scope: !8964)
!8966 = !DILocation(line: 169, column: 38, scope: !8964)
!8967 = !DILocation(line: 169, column: 46, scope: !8964)
!8968 = !DILocation(line: 169, column: 12, scope: !8964)
!8969 = !DILocation(line: 169, column: 55, scope: !8964)
!8970 = !DILocation(line: 169, column: 12, scope: !8955)
!8971 = !DILocation(line: 171, column: 13, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8964, file: !490, line: 170, column: 5)
!8973 = !DILocation(line: 171, column: 11, scope: !8972)
!8974 = !DILocation(line: 172, column: 17, scope: !8972)
!8975 = !DILocation(line: 172, column: 25, scope: !8972)
!8976 = !DILocation(line: 172, column: 7, scope: !8972)
!8977 = !DILocation(line: 173, column: 5, scope: !8972)
!8978 = !DILocation(line: 178, column: 11, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8964, file: !490, line: 175, column: 5)
!8980 = !DILocation(line: 181, column: 7, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8902, file: !490, line: 181, column: 7)
!8982 = !DILocation(line: 181, column: 17, scope: !8981)
!8983 = !DILocation(line: 181, column: 14, scope: !8981)
!8984 = !DILocation(line: 181, column: 7, scope: !8902)
!8985 = !DILocation(line: 182, column: 11, scope: !8981)
!8986 = !DILocation(line: 182, column: 5, scope: !8981)
!8987 = !DILocation(line: 183, column: 10, scope: !8902)
!8988 = !DILocation(line: 183, column: 3, scope: !8902)
!8989 = !DILocation(line: 184, column: 1, scope: !8902)
!8990 = distinct !DISubprogram(name: "try_symlink", scope: !490, file: !490, line: 138, type: !893, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !489, retainedNodes: !213)
!8991 = !DILocalVariable(name: "dest", arg: 1, scope: !8990, file: !490, line: 138, type: !7)
!8992 = !DILocation(line: 138, column: 20, scope: !8990)
!8993 = !DILocalVariable(name: "arg", arg: 2, scope: !8990, file: !490, line: 138, type: !47)
!8994 = !DILocation(line: 138, column: 32, scope: !8990)
!8995 = !DILocalVariable(name: "a", scope: !8990, file: !490, line: 140, type: !504)
!8996 = !DILocation(line: 140, column: 23, scope: !8990)
!8997 = !DILocation(line: 140, column: 27, scope: !8990)
!8998 = !DILocation(line: 141, column: 21, scope: !8990)
!8999 = !DILocation(line: 141, column: 24, scope: !8990)
!9000 = !DILocation(line: 141, column: 33, scope: !8990)
!9001 = !DILocation(line: 141, column: 36, scope: !8990)
!9002 = !DILocation(line: 141, column: 44, scope: !8990)
!9003 = !DILocation(line: 141, column: 10, scope: !8990)
!9004 = !DILocation(line: 141, column: 3, scope: !8990)
!9005 = distinct !DISubprogram(name: "copy_acl", scope: !9006, file: !9006, line: 43, type: !9007, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1281, retainedNodes: !213)
!9006 = !DIFile(filename: "lib/copy-acl.c", directory: "/home/mohamad/clone/coreutils")
!9007 = !DISubroutineType(types: !9008)
!9008 = !{!5, !113, !5, !113, !5, !236}
!9009 = !DILocalVariable(name: "src_name", arg: 1, scope: !9005, file: !9006, line: 43, type: !113)
!9010 = !DILocation(line: 43, column: 23, scope: !9005)
!9011 = !DILocalVariable(name: "source_desc", arg: 2, scope: !9005, file: !9006, line: 43, type: !5)
!9012 = !DILocation(line: 43, column: 37, scope: !9005)
!9013 = !DILocalVariable(name: "dst_name", arg: 3, scope: !9005, file: !9006, line: 43, type: !113)
!9014 = !DILocation(line: 43, column: 62, scope: !9005)
!9015 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !9005, file: !9006, line: 44, type: !5)
!9016 = !DILocation(line: 44, column: 15, scope: !9005)
!9017 = !DILocalVariable(name: "mode", arg: 5, scope: !9005, file: !9006, line: 44, type: !236)
!9018 = !DILocation(line: 44, column: 33, scope: !9005)
!9019 = !DILocalVariable(name: "ret", scope: !9005, file: !9006, line: 46, type: !5)
!9020 = !DILocation(line: 46, column: 7, scope: !9005)
!9021 = !DILocation(line: 46, column: 24, scope: !9005)
!9022 = !DILocation(line: 46, column: 34, scope: !9005)
!9023 = !DILocation(line: 46, column: 47, scope: !9005)
!9024 = !DILocation(line: 46, column: 57, scope: !9005)
!9025 = !DILocation(line: 46, column: 68, scope: !9005)
!9026 = !DILocation(line: 46, column: 13, scope: !9005)
!9027 = !DILocation(line: 47, column: 11, scope: !9005)
!9028 = !DILocation(line: 47, column: 3, scope: !9005)
!9029 = !DILocation(line: 50, column: 17, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9005, file: !9006, line: 48, column: 5)
!9031 = !DILocation(line: 50, column: 37, scope: !9030)
!9032 = !DILocation(line: 50, column: 30, scope: !9030)
!9033 = !DILocation(line: 50, column: 7, scope: !9030)
!9034 = !DILocation(line: 51, column: 7, scope: !9030)
!9035 = !DILocation(line: 54, column: 17, scope: !9030)
!9036 = !DILocation(line: 54, column: 24, scope: !9030)
!9037 = !DILocation(line: 54, column: 67, scope: !9030)
!9038 = !DILocation(line: 54, column: 60, scope: !9030)
!9039 = !DILocation(line: 54, column: 7, scope: !9030)
!9040 = !DILocation(line: 55, column: 7, scope: !9030)
!9041 = !DILocation(line: 58, column: 7, scope: !9030)
!9042 = !DILocation(line: 60, column: 10, scope: !9005)
!9043 = !DILocation(line: 60, column: 3, scope: !9005)
!9044 = distinct !DISubprogram(name: "set_acl", scope: !9045, file: !9045, line: 42, type: !9046, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1284, retainedNodes: !213)
!9045 = !DIFile(filename: "lib/set-acl.c", directory: "/home/mohamad/clone/coreutils")
!9046 = !DISubroutineType(types: !9047)
!9047 = !{!5, !113, !5, !236}
!9048 = !DILocalVariable(name: "name", arg: 1, scope: !9044, file: !9045, line: 42, type: !113)
!9049 = !DILocation(line: 42, column: 22, scope: !9044)
!9050 = !DILocalVariable(name: "desc", arg: 2, scope: !9044, file: !9045, line: 42, type: !5)
!9051 = !DILocation(line: 42, column: 32, scope: !9044)
!9052 = !DILocalVariable(name: "mode", arg: 3, scope: !9044, file: !9045, line: 42, type: !236)
!9053 = !DILocation(line: 42, column: 45, scope: !9044)
!9054 = !DILocalVariable(name: "ret", scope: !9044, file: !9045, line: 44, type: !5)
!9055 = !DILocation(line: 44, column: 7, scope: !9044)
!9056 = !DILocation(line: 44, column: 23, scope: !9044)
!9057 = !DILocation(line: 44, column: 29, scope: !9044)
!9058 = !DILocation(line: 44, column: 35, scope: !9044)
!9059 = !DILocation(line: 44, column: 13, scope: !9044)
!9060 = !DILocation(line: 45, column: 7, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9044, file: !9045, line: 45, column: 7)
!9062 = !DILocation(line: 45, column: 11, scope: !9061)
!9063 = !DILocation(line: 45, column: 7, scope: !9044)
!9064 = !DILocation(line: 46, column: 15, scope: !9061)
!9065 = !DILocation(line: 46, column: 22, scope: !9061)
!9066 = !DILocation(line: 46, column: 62, scope: !9061)
!9067 = !DILocation(line: 46, column: 55, scope: !9061)
!9068 = !DILocation(line: 46, column: 5, scope: !9061)
!9069 = !DILocation(line: 47, column: 10, scope: !9044)
!9070 = !DILocation(line: 47, column: 3, scope: !9044)
!9071 = distinct !DISubprogram(name: "areadlink_with_size", scope: !9072, file: !9072, line: 53, type: !9073, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1287, retainedNodes: !213)
!9072 = !DIFile(filename: "lib/areadlink-with-size.c", directory: "/home/mohamad/clone/coreutils")
!9073 = !DISubroutineType(types: !9074)
!9074 = !{!7, !113, !52}
!9075 = !DILocalVariable(name: "file", arg: 1, scope: !9071, file: !9072, line: 53, type: !113)
!9076 = !DILocation(line: 53, column: 34, scope: !9071)
!9077 = !DILocalVariable(name: "size", arg: 2, scope: !9071, file: !9072, line: 53, type: !52)
!9078 = !DILocation(line: 53, column: 47, scope: !9071)
!9079 = !DILocalVariable(name: "symlink_max", scope: !9071, file: !9072, line: 58, type: !52)
!9080 = !DILocation(line: 58, column: 10, scope: !9071)
!9081 = !DILocalVariable(name: "INITIAL_LIMIT_BOUND", scope: !9071, file: !9072, line: 59, type: !52)
!9082 = !DILocation(line: 59, column: 10, scope: !9071)
!9083 = !DILocalVariable(name: "initial_limit", scope: !9071, file: !9072, line: 60, type: !52)
!9084 = !DILocation(line: 60, column: 10, scope: !9071)
!9085 = !DILocation(line: 60, column: 27, scope: !9071)
!9086 = !DILocation(line: 60, column: 41, scope: !9071)
!9087 = !DILocation(line: 60, column: 39, scope: !9071)
!9088 = !DILocation(line: 61, column: 29, scope: !9071)
!9089 = !DILocation(line: 61, column: 41, scope: !9071)
!9090 = !DILocation(line: 62, column: 29, scope: !9071)
!9091 = !DILocalVariable(name: "buf_size", scope: !9071, file: !9072, line: 67, type: !52)
!9092 = !DILocation(line: 67, column: 10, scope: !9071)
!9093 = !DILocation(line: 67, column: 22, scope: !9071)
!9094 = !DILocation(line: 67, column: 27, scope: !9071)
!9095 = !DILocation(line: 68, column: 24, scope: !9071)
!9096 = !DILocation(line: 68, column: 31, scope: !9071)
!9097 = !DILocation(line: 68, column: 29, scope: !9071)
!9098 = !DILocation(line: 68, column: 47, scope: !9071)
!9099 = !DILocation(line: 68, column: 52, scope: !9071)
!9100 = !DILocation(line: 68, column: 58, scope: !9071)
!9101 = !DILocation(line: 70, column: 3, scope: !9071)
!9102 = !DILocalVariable(name: "r", scope: !9103, file: !9072, line: 72, type: !529)
!9103 = distinct !DILexicalBlock(scope: !9071, file: !9072, line: 71, column: 5)
!9104 = !DILocation(line: 72, column: 15, scope: !9103)
!9105 = !DILocalVariable(name: "link_length", scope: !9103, file: !9072, line: 73, type: !52)
!9106 = !DILocation(line: 73, column: 14, scope: !9103)
!9107 = !DILocalVariable(name: "stackbuf", scope: !9103, file: !9072, line: 74, type: !1290)
!9108 = !DILocation(line: 74, column: 12, scope: !9103)
!9109 = !DILocalVariable(name: "buf", scope: !9103, file: !9072, line: 75, type: !7)
!9110 = !DILocation(line: 75, column: 13, scope: !9103)
!9111 = !DILocation(line: 75, column: 19, scope: !9103)
!9112 = !DILocalVariable(name: "buffer", scope: !9103, file: !9072, line: 76, type: !7)
!9113 = !DILocation(line: 76, column: 13, scope: !9103)
!9114 = !DILocation(line: 78, column: 14, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9103, file: !9072, line: 78, column: 11)
!9116 = !DILocation(line: 78, column: 19, scope: !9115)
!9117 = !DILocation(line: 78, column: 24, scope: !9115)
!9118 = !DILocation(line: 78, column: 27, scope: !9115)
!9119 = !DILocation(line: 78, column: 36, scope: !9115)
!9120 = !DILocation(line: 78, column: 11, scope: !9103)
!9121 = !DILocation(line: 80, column: 34, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9115, file: !9072, line: 79, column: 9)
!9123 = !DILocation(line: 80, column: 26, scope: !9122)
!9124 = !DILocation(line: 80, column: 24, scope: !9122)
!9125 = !DILocation(line: 80, column: 15, scope: !9122)
!9126 = !DILocation(line: 81, column: 16, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9122, file: !9072, line: 81, column: 15)
!9128 = !DILocation(line: 81, column: 15, scope: !9122)
!9129 = !DILocation(line: 82, column: 13, scope: !9127)
!9130 = !DILocation(line: 83, column: 9, scope: !9122)
!9131 = !DILocation(line: 85, column: 21, scope: !9103)
!9132 = !DILocation(line: 85, column: 27, scope: !9103)
!9133 = !DILocation(line: 85, column: 32, scope: !9103)
!9134 = !DILocation(line: 85, column: 11, scope: !9103)
!9135 = !DILocation(line: 85, column: 9, scope: !9103)
!9136 = !DILocation(line: 86, column: 21, scope: !9103)
!9137 = !DILocation(line: 86, column: 19, scope: !9103)
!9138 = !DILocation(line: 90, column: 11, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9103, file: !9072, line: 90, column: 11)
!9140 = !DILocation(line: 90, column: 13, scope: !9139)
!9141 = !DILocation(line: 90, column: 17, scope: !9139)
!9142 = !DILocation(line: 90, column: 20, scope: !9139)
!9143 = !DILocation(line: 90, column: 26, scope: !9139)
!9144 = !DILocation(line: 90, column: 11, scope: !9103)
!9145 = !DILocalVariable(name: "saved_errno", scope: !9146, file: !9072, line: 92, type: !5)
!9146 = distinct !DILexicalBlock(scope: !9139, file: !9072, line: 91, column: 9)
!9147 = !DILocation(line: 92, column: 15, scope: !9146)
!9148 = !DILocation(line: 92, column: 29, scope: !9146)
!9149 = !DILocation(line: 93, column: 17, scope: !9146)
!9150 = !DILocation(line: 93, column: 11, scope: !9146)
!9151 = !DILocation(line: 94, column: 19, scope: !9146)
!9152 = !DILocation(line: 94, column: 11, scope: !9146)
!9153 = !DILocation(line: 94, column: 17, scope: !9146)
!9154 = !DILocation(line: 95, column: 11, scope: !9146)
!9155 = !DILocation(line: 98, column: 11, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9103, file: !9072, line: 98, column: 11)
!9157 = !DILocation(line: 98, column: 25, scope: !9156)
!9158 = !DILocation(line: 98, column: 23, scope: !9156)
!9159 = !DILocation(line: 98, column: 11, scope: !9103)
!9160 = !DILocation(line: 100, column: 11, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9156, file: !9072, line: 99, column: 9)
!9162 = !DILocation(line: 100, column: 15, scope: !9161)
!9163 = !DILocation(line: 100, column: 28, scope: !9161)
!9164 = !DILocation(line: 101, column: 16, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9161, file: !9072, line: 101, column: 15)
!9166 = !DILocation(line: 101, column: 15, scope: !9161)
!9167 = !DILocation(line: 103, column: 32, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9165, file: !9072, line: 102, column: 13)
!9169 = !DILocation(line: 103, column: 44, scope: !9168)
!9170 = !DILocation(line: 103, column: 24, scope: !9168)
!9171 = !DILocation(line: 103, column: 22, scope: !9168)
!9172 = !DILocation(line: 104, column: 19, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9168, file: !9072, line: 104, column: 19)
!9174 = !DILocation(line: 104, column: 19, scope: !9168)
!9175 = !DILocation(line: 105, column: 32, scope: !9173)
!9176 = !DILocation(line: 105, column: 40, scope: !9173)
!9177 = !DILocation(line: 105, column: 45, scope: !9173)
!9178 = !DILocation(line: 105, column: 57, scope: !9173)
!9179 = !DILocation(line: 105, column: 24, scope: !9173)
!9180 = !DILocation(line: 105, column: 17, scope: !9173)
!9181 = !DILocation(line: 106, column: 13, scope: !9168)
!9182 = !DILocation(line: 107, column: 20, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9165, file: !9072, line: 107, column: 20)
!9184 = !DILocation(line: 107, column: 32, scope: !9183)
!9185 = !DILocation(line: 107, column: 38, scope: !9183)
!9186 = !DILocation(line: 107, column: 36, scope: !9183)
!9187 = !DILocation(line: 107, column: 20, scope: !9165)
!9188 = !DILocalVariable(name: "shrinked_buffer", scope: !9189, file: !9072, line: 110, type: !7)
!9189 = distinct !DILexicalBlock(scope: !9183, file: !9072, line: 108, column: 13)
!9190 = !DILocation(line: 110, column: 21, scope: !9189)
!9191 = !DILocation(line: 110, column: 48, scope: !9189)
!9192 = !DILocation(line: 110, column: 56, scope: !9189)
!9193 = !DILocation(line: 110, column: 68, scope: !9189)
!9194 = !DILocation(line: 110, column: 39, scope: !9189)
!9195 = !DILocation(line: 111, column: 19, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9189, file: !9072, line: 111, column: 19)
!9197 = !DILocation(line: 111, column: 35, scope: !9196)
!9198 = !DILocation(line: 111, column: 19, scope: !9189)
!9199 = !DILocation(line: 112, column: 26, scope: !9196)
!9200 = !DILocation(line: 112, column: 24, scope: !9196)
!9201 = !DILocation(line: 112, column: 17, scope: !9196)
!9202 = !DILocation(line: 113, column: 13, scope: !9189)
!9203 = !DILocation(line: 114, column: 18, scope: !9161)
!9204 = !DILocation(line: 114, column: 11, scope: !9161)
!9205 = !DILocation(line: 117, column: 13, scope: !9103)
!9206 = !DILocation(line: 117, column: 7, scope: !9103)
!9207 = !DILocation(line: 118, column: 11, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9103, file: !9072, line: 118, column: 11)
!9209 = !DILocation(line: 118, column: 20, scope: !9208)
!9210 = !DILocation(line: 118, column: 11, scope: !9103)
!9211 = !DILocation(line: 119, column: 18, scope: !9208)
!9212 = !DILocation(line: 119, column: 9, scope: !9208)
!9213 = !DILocation(line: 120, column: 16, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9208, file: !9072, line: 120, column: 16)
!9215 = !DILocation(line: 120, column: 25, scope: !9214)
!9216 = !DILocation(line: 120, column: 16, scope: !9208)
!9217 = !DILocation(line: 121, column: 18, scope: !9214)
!9218 = !DILocation(line: 121, column: 9, scope: !9214)
!9219 = !DILocation(line: 124, column: 11, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9214, file: !9072, line: 123, column: 9)
!9221 = !DILocation(line: 124, column: 17, scope: !9220)
!9222 = !DILocation(line: 125, column: 11, scope: !9220)
!9223 = distinct !{!9223, !9101, !9224}
!9224 = !DILocation(line: 127, column: 5, scope: !9071)
!9225 = !DILocation(line: 128, column: 1, scope: !9071)
!9226 = distinct !DISubprogram(name: "set_simple_backup_suffix", scope: !522, file: !522, line: 88, type: !211, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !518, retainedNodes: !213)
!9227 = !DILocalVariable(name: "s", arg: 1, scope: !9226, file: !522, line: 88, type: !113)
!9228 = !DILocation(line: 88, column: 39, scope: !9226)
!9229 = !DILocation(line: 90, column: 8, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9226, file: !522, line: 90, column: 7)
!9231 = !DILocation(line: 90, column: 7, scope: !9226)
!9232 = !DILocation(line: 91, column: 9, scope: !9230)
!9233 = !DILocation(line: 91, column: 7, scope: !9230)
!9234 = !DILocation(line: 91, column: 5, scope: !9230)
!9235 = !DILocation(line: 92, column: 26, scope: !9226)
!9236 = !DILocation(line: 92, column: 28, scope: !9226)
!9237 = !DILocation(line: 92, column: 32, scope: !9226)
!9238 = !DILocation(line: 92, column: 31, scope: !9226)
!9239 = !DILocation(line: 92, column: 34, scope: !9226)
!9240 = !DILocation(line: 92, column: 37, scope: !9226)
!9241 = !DILocation(line: 92, column: 58, scope: !9226)
!9242 = !DILocation(line: 92, column: 42, scope: !9226)
!9243 = !DILocation(line: 92, column: 39, scope: !9226)
!9244 = !DILocation(line: 92, column: 63, scope: !9226)
!9245 = !DILocation(line: 92, column: 24, scope: !9226)
!9246 = !DILocation(line: 93, column: 1, scope: !9226)
!9247 = distinct !DISubprogram(name: "backupfile_internal", scope: !522, file: !522, line: 314, type: !9248, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !518, retainedNodes: !213)
!9248 = !DISubroutineType(types: !9249)
!9249 = !{!7, !5, !113, !65, !139}
!9250 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9247, file: !522, line: 314, type: !5)
!9251 = !DILocation(line: 314, column: 26, scope: !9247)
!9252 = !DILocalVariable(name: "file", arg: 2, scope: !9247, file: !522, line: 314, type: !113)
!9253 = !DILocation(line: 314, column: 46, scope: !9247)
!9254 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9247, file: !522, line: 315, type: !65)
!9255 = !DILocation(line: 315, column: 39, scope: !9247)
!9256 = !DILocalVariable(name: "rename", arg: 4, scope: !9247, file: !522, line: 315, type: !139)
!9257 = !DILocation(line: 315, column: 57, scope: !9247)
!9258 = !DILocalVariable(name: "base_offset", scope: !9247, file: !522, line: 317, type: !495)
!9259 = !DILocation(line: 317, column: 13, scope: !9247)
!9260 = !DILocation(line: 317, column: 43, scope: !9247)
!9261 = !DILocation(line: 317, column: 27, scope: !9247)
!9262 = !DILocation(line: 317, column: 51, scope: !9247)
!9263 = !DILocation(line: 317, column: 49, scope: !9247)
!9264 = !DILocalVariable(name: "filelen", scope: !9247, file: !522, line: 318, type: !52)
!9265 = !DILocation(line: 318, column: 10, scope: !9247)
!9266 = !DILocation(line: 318, column: 20, scope: !9247)
!9267 = !DILocation(line: 318, column: 42, scope: !9247)
!9268 = !DILocation(line: 318, column: 49, scope: !9247)
!9269 = !DILocation(line: 318, column: 47, scope: !9247)
!9270 = !DILocation(line: 318, column: 34, scope: !9247)
!9271 = !DILocation(line: 318, column: 32, scope: !9247)
!9272 = !DILocation(line: 320, column: 9, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9247, file: !522, line: 320, column: 7)
!9274 = !DILocation(line: 320, column: 7, scope: !9247)
!9275 = !DILocation(line: 321, column: 5, scope: !9273)
!9276 = !DILocalVariable(name: "simple_backup_suffix_size", scope: !9247, file: !522, line: 325, type: !52)
!9277 = !DILocation(line: 325, column: 10, scope: !9247)
!9278 = !DILocation(line: 325, column: 46, scope: !9247)
!9279 = !DILocation(line: 325, column: 38, scope: !9247)
!9280 = !DILocation(line: 325, column: 68, scope: !9247)
!9281 = !DILocalVariable(name: "backup_suffix_size_guess", scope: !9247, file: !522, line: 326, type: !52)
!9282 = !DILocation(line: 326, column: 10, scope: !9247)
!9283 = !DILocation(line: 326, column: 37, scope: !9247)
!9284 = !DILocation(line: 328, column: 7, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9247, file: !522, line: 328, column: 7)
!9286 = !DILocation(line: 328, column: 32, scope: !9285)
!9287 = !DILocation(line: 328, column: 7, scope: !9247)
!9288 = !DILocation(line: 329, column: 30, scope: !9285)
!9289 = !DILocation(line: 329, column: 5, scope: !9285)
!9290 = !DILocalVariable(name: "ssize", scope: !9247, file: !522, line: 331, type: !529)
!9291 = !DILocation(line: 331, column: 11, scope: !9247)
!9292 = !DILocation(line: 331, column: 19, scope: !9247)
!9293 = !DILocation(line: 331, column: 29, scope: !9247)
!9294 = !DILocation(line: 331, column: 27, scope: !9247)
!9295 = !DILocation(line: 331, column: 54, scope: !9247)
!9296 = !DILocalVariable(name: "s", scope: !9247, file: !522, line: 332, type: !7)
!9297 = !DILocation(line: 332, column: 9, scope: !9247)
!9298 = !DILocation(line: 332, column: 21, scope: !9247)
!9299 = !DILocation(line: 332, column: 13, scope: !9247)
!9300 = !DILocation(line: 333, column: 8, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9247, file: !522, line: 333, column: 7)
!9302 = !DILocation(line: 333, column: 7, scope: !9247)
!9303 = !DILocation(line: 334, column: 12, scope: !9301)
!9304 = !DILocation(line: 334, column: 5, scope: !9301)
!9305 = !DILocalVariable(name: "dirp", scope: !9247, file: !522, line: 336, type: !530)
!9306 = !DILocation(line: 336, column: 8, scope: !9247)
!9307 = !DILocalVariable(name: "sdir", scope: !9247, file: !522, line: 337, type: !5)
!9308 = !DILocation(line: 337, column: 7, scope: !9247)
!9309 = !DILocalVariable(name: "base_max", scope: !9247, file: !522, line: 338, type: !52)
!9310 = !DILocation(line: 338, column: 10, scope: !9247)
!9311 = !DILocation(line: 339, column: 3, scope: !9247)
!9312 = !DILocation(line: 341, column: 15, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9247, file: !522, line: 340, column: 5)
!9314 = !DILocation(line: 341, column: 18, scope: !9313)
!9315 = !DILocation(line: 341, column: 24, scope: !9313)
!9316 = !DILocation(line: 341, column: 32, scope: !9313)
!9317 = !DILocation(line: 341, column: 7, scope: !9313)
!9318 = !DILocation(line: 343, column: 11, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9313, file: !522, line: 343, column: 11)
!9320 = !DILocation(line: 343, column: 23, scope: !9319)
!9321 = !DILocation(line: 343, column: 11, scope: !9313)
!9322 = !DILocation(line: 344, column: 17, scope: !9319)
!9323 = !DILocation(line: 344, column: 21, scope: !9319)
!9324 = !DILocation(line: 344, column: 19, scope: !9319)
!9325 = !DILocation(line: 344, column: 30, scope: !9319)
!9326 = !DILocation(line: 344, column: 52, scope: !9319)
!9327 = !DILocation(line: 344, column: 9, scope: !9319)
!9328 = !DILocation(line: 346, column: 34, scope: !9319)
!9329 = !DILocation(line: 346, column: 46, scope: !9319)
!9330 = !DILocation(line: 346, column: 53, scope: !9319)
!9331 = !DILocation(line: 346, column: 62, scope: !9319)
!9332 = !DILocation(line: 346, column: 17, scope: !9319)
!9333 = !DILocation(line: 346, column: 9, scope: !9319)
!9334 = !DILocation(line: 350, column: 13, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9319, file: !522, line: 348, column: 11)
!9336 = !DILocation(line: 353, column: 17, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9335, file: !522, line: 353, column: 17)
!9338 = !DILocation(line: 353, column: 29, scope: !9337)
!9339 = !DILocation(line: 353, column: 17, scope: !9335)
!9340 = !DILocation(line: 355, column: 29, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9337, file: !522, line: 354, column: 15)
!9342 = !DILocation(line: 356, column: 25, scope: !9341)
!9343 = !DILocation(line: 356, column: 29, scope: !9341)
!9344 = !DILocation(line: 356, column: 27, scope: !9341)
!9345 = !DILocation(line: 356, column: 38, scope: !9341)
!9346 = !DILocation(line: 357, column: 25, scope: !9341)
!9347 = !DILocation(line: 356, column: 17, scope: !9341)
!9348 = !DILocation(line: 358, column: 15, scope: !9341)
!9349 = !DILocation(line: 359, column: 13, scope: !9335)
!9350 = !DILocation(line: 361, column: 30, scope: !9335)
!9351 = !DILocation(line: 361, column: 33, scope: !9335)
!9352 = !DILocation(line: 361, column: 47, scope: !9335)
!9353 = !DILocation(line: 361, column: 13, scope: !9335)
!9354 = !DILocation(line: 362, column: 13, scope: !9335)
!9355 = !DILocation(line: 365, column: 17, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9335, file: !522, line: 365, column: 17)
!9357 = !DILocation(line: 365, column: 17, scope: !9335)
!9358 = !DILocation(line: 366, column: 25, scope: !9356)
!9359 = !DILocation(line: 366, column: 15, scope: !9356)
!9360 = !DILocation(line: 367, column: 19, scope: !9335)
!9361 = !DILocation(line: 367, column: 13, scope: !9335)
!9362 = !DILocation(line: 368, column: 13, scope: !9335)
!9363 = !DILocation(line: 368, column: 19, scope: !9335)
!9364 = !DILocation(line: 369, column: 13, scope: !9335)
!9365 = !DILocation(line: 372, column: 13, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9313, file: !522, line: 372, column: 11)
!9367 = !DILocation(line: 372, column: 11, scope: !9313)
!9368 = !DILocation(line: 373, column: 9, scope: !9366)
!9369 = !DILocation(line: 375, column: 11, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9313, file: !522, line: 375, column: 11)
!9371 = !DILocation(line: 375, column: 16, scope: !9370)
!9372 = !DILocation(line: 375, column: 11, scope: !9313)
!9373 = !DILocation(line: 377, column: 16, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9370, file: !522, line: 376, column: 9)
!9375 = !DILocation(line: 378, column: 23, scope: !9374)
!9376 = !DILocation(line: 379, column: 9, scope: !9374)
!9377 = !DILocalVariable(name: "flags", scope: !9313, file: !522, line: 380, type: !67)
!9378 = !DILocation(line: 380, column: 16, scope: !9313)
!9379 = !DILocation(line: 380, column: 24, scope: !9313)
!9380 = !DILocation(line: 380, column: 36, scope: !9313)
!9381 = !DILocation(line: 381, column: 32, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9313, file: !522, line: 381, column: 11)
!9383 = !DILocation(line: 381, column: 38, scope: !9382)
!9384 = !DILocation(line: 381, column: 44, scope: !9382)
!9385 = !DILocation(line: 381, column: 48, scope: !9382)
!9386 = !DILocation(line: 381, column: 46, scope: !9382)
!9387 = !DILocation(line: 381, column: 61, scope: !9382)
!9388 = !DILocation(line: 381, column: 11, scope: !9382)
!9389 = !DILocation(line: 381, column: 68, scope: !9382)
!9390 = !DILocation(line: 381, column: 11, scope: !9313)
!9391 = !DILocation(line: 382, column: 9, scope: !9382)
!9392 = !DILocalVariable(name: "e", scope: !9313, file: !522, line: 383, type: !5)
!9393 = !DILocation(line: 383, column: 11, scope: !9313)
!9394 = !DILocation(line: 383, column: 15, scope: !9313)
!9395 = !DILocation(line: 384, column: 11, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9313, file: !522, line: 384, column: 11)
!9397 = !DILocation(line: 384, column: 13, scope: !9396)
!9398 = !DILocation(line: 384, column: 11, scope: !9313)
!9399 = !DILocation(line: 386, column: 15, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9401, file: !522, line: 386, column: 15)
!9401 = distinct !DILexicalBlock(scope: !9396, file: !522, line: 385, column: 9)
!9402 = !DILocation(line: 386, column: 15, scope: !9401)
!9403 = !DILocation(line: 387, column: 23, scope: !9400)
!9404 = !DILocation(line: 387, column: 13, scope: !9400)
!9405 = !DILocation(line: 388, column: 17, scope: !9401)
!9406 = !DILocation(line: 388, column: 11, scope: !9401)
!9407 = !DILocation(line: 389, column: 19, scope: !9401)
!9408 = !DILocation(line: 389, column: 11, scope: !9401)
!9409 = !DILocation(line: 389, column: 17, scope: !9401)
!9410 = !DILocation(line: 390, column: 11, scope: !9401)
!9411 = distinct !{!9411, !9311, !9412}
!9412 = !DILocation(line: 392, column: 5, scope: !9247)
!9413 = !DILocation(line: 394, column: 7, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9247, file: !522, line: 394, column: 7)
!9415 = !DILocation(line: 394, column: 7, scope: !9247)
!9416 = !DILocation(line: 395, column: 15, scope: !9414)
!9417 = !DILocation(line: 395, column: 5, scope: !9414)
!9418 = !DILocation(line: 396, column: 10, scope: !9247)
!9419 = !DILocation(line: 396, column: 3, scope: !9247)
!9420 = !DILocation(line: 397, column: 1, scope: !9247)
!9421 = distinct !DISubprogram(name: "numbered_backup", scope: !522, file: !522, line: 207, type: !9422, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !518, retainedNodes: !213)
!9422 = !DISubroutineType(types: !9423)
!9423 = !{!521, !5, !140, !52, !52, !495, !9424, !158}
!9424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!9425 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9421, file: !522, line: 207, type: !5)
!9426 = !DILocation(line: 207, column: 22, scope: !9421)
!9427 = !DILocalVariable(name: "buffer", arg: 2, scope: !9421, file: !522, line: 207, type: !140)
!9428 = !DILocation(line: 207, column: 37, scope: !9421)
!9429 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !9421, file: !522, line: 207, type: !52)
!9430 = !DILocation(line: 207, column: 52, scope: !9421)
!9431 = !DILocalVariable(name: "filelen", arg: 4, scope: !9421, file: !522, line: 207, type: !52)
!9432 = !DILocation(line: 207, column: 72, scope: !9421)
!9433 = !DILocalVariable(name: "base_offset", arg: 5, scope: !9421, file: !522, line: 208, type: !495)
!9434 = !DILocation(line: 208, column: 28, scope: !9421)
!9435 = !DILocalVariable(name: "dirpp", arg: 6, scope: !9421, file: !522, line: 208, type: !9424)
!9436 = !DILocation(line: 208, column: 47, scope: !9421)
!9437 = !DILocalVariable(name: "pnew_fd", arg: 7, scope: !9421, file: !522, line: 208, type: !158)
!9438 = !DILocation(line: 208, column: 59, scope: !9421)
!9439 = !DILocalVariable(name: "result", scope: !9421, file: !522, line: 210, type: !521)
!9440 = !DILocation(line: 210, column: 31, scope: !9421)
!9441 = !DILocalVariable(name: "dirp", scope: !9421, file: !522, line: 211, type: !530)
!9442 = !DILocation(line: 211, column: 8, scope: !9421)
!9443 = !DILocation(line: 211, column: 16, scope: !9421)
!9444 = !DILocation(line: 211, column: 15, scope: !9421)
!9445 = !DILocalVariable(name: "dp", scope: !9421, file: !522, line: 212, type: !534)
!9446 = !DILocation(line: 212, column: 18, scope: !9421)
!9447 = !DILocalVariable(name: "buf", scope: !9421, file: !522, line: 213, type: !7)
!9448 = !DILocation(line: 213, column: 9, scope: !9421)
!9449 = !DILocation(line: 213, column: 16, scope: !9421)
!9450 = !DILocation(line: 213, column: 15, scope: !9421)
!9451 = !DILocalVariable(name: "versionlenmax", scope: !9421, file: !522, line: 214, type: !52)
!9452 = !DILocation(line: 214, column: 10, scope: !9421)
!9453 = !DILocalVariable(name: "base", scope: !9421, file: !522, line: 215, type: !7)
!9454 = !DILocation(line: 215, column: 9, scope: !9421)
!9455 = !DILocation(line: 215, column: 16, scope: !9421)
!9456 = !DILocation(line: 215, column: 22, scope: !9421)
!9457 = !DILocation(line: 215, column: 20, scope: !9421)
!9458 = !DILocalVariable(name: "baselen", scope: !9421, file: !522, line: 216, type: !52)
!9459 = !DILocation(line: 216, column: 10, scope: !9421)
!9460 = !DILocation(line: 216, column: 30, scope: !9421)
!9461 = !DILocation(line: 216, column: 20, scope: !9421)
!9462 = !DILocation(line: 218, column: 7, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9421, file: !522, line: 218, column: 7)
!9464 = !DILocation(line: 218, column: 7, scope: !9421)
!9465 = !DILocation(line: 219, column: 16, scope: !9463)
!9466 = !DILocation(line: 219, column: 5, scope: !9463)
!9467 = !DILocalVariable(name: "tmp", scope: !9468, file: !522, line: 224, type: !264)
!9468 = distinct !DILexicalBlock(scope: !9463, file: !522, line: 221, column: 5)
!9469 = !DILocation(line: 224, column: 12, scope: !9468)
!9470 = !DILocation(line: 225, column: 7, scope: !9468)
!9471 = !DILocation(line: 225, column: 20, scope: !9468)
!9472 = !DILocation(line: 226, column: 15, scope: !9468)
!9473 = !DILocation(line: 226, column: 7, scope: !9468)
!9474 = !DILocation(line: 227, column: 25, scope: !9468)
!9475 = !DILocation(line: 227, column: 33, scope: !9468)
!9476 = !DILocation(line: 227, column: 41, scope: !9468)
!9477 = !DILocation(line: 227, column: 14, scope: !9468)
!9478 = !DILocation(line: 227, column: 12, scope: !9468)
!9479 = !DILocation(line: 228, column: 12, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9468, file: !522, line: 228, column: 11)
!9481 = !DILocation(line: 228, column: 17, scope: !9480)
!9482 = !DILocation(line: 228, column: 20, scope: !9480)
!9483 = !DILocation(line: 228, column: 26, scope: !9480)
!9484 = !DILocation(line: 228, column: 11, scope: !9468)
!9485 = !DILocation(line: 229, column: 16, scope: !9480)
!9486 = !DILocation(line: 229, column: 9, scope: !9480)
!9487 = !DILocation(line: 230, column: 15, scope: !9468)
!9488 = !DILocation(line: 230, column: 7, scope: !9468)
!9489 = !DILocation(line: 231, column: 15, scope: !9468)
!9490 = !DILocation(line: 231, column: 22, scope: !9468)
!9491 = !DILocation(line: 231, column: 20, scope: !9468)
!9492 = !DILocation(line: 231, column: 7, scope: !9468)
!9493 = !DILocation(line: 232, column: 12, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9468, file: !522, line: 232, column: 11)
!9495 = !DILocation(line: 232, column: 11, scope: !9468)
!9496 = !DILocation(line: 233, column: 16, scope: !9494)
!9497 = !DILocation(line: 233, column: 9, scope: !9494)
!9498 = !DILocation(line: 234, column: 16, scope: !9468)
!9499 = !DILocation(line: 234, column: 8, scope: !9468)
!9500 = !DILocation(line: 234, column: 14, scope: !9468)
!9501 = !DILocation(line: 237, column: 3, scope: !9421)
!9502 = !DILocation(line: 237, column: 25, scope: !9421)
!9503 = !DILocation(line: 237, column: 16, scope: !9421)
!9504 = !DILocation(line: 237, column: 14, scope: !9421)
!9505 = !DILocation(line: 237, column: 32, scope: !9421)
!9506 = !DILocalVariable(name: "p", scope: !9507, file: !522, line: 239, type: !113)
!9507 = distinct !DILexicalBlock(scope: !9421, file: !522, line: 238, column: 5)
!9508 = !DILocation(line: 239, column: 19, scope: !9507)
!9509 = !DILocalVariable(name: "q", scope: !9507, file: !522, line: 240, type: !7)
!9510 = !DILocation(line: 240, column: 13, scope: !9507)
!9511 = !DILocalVariable(name: "all_9s", scope: !9507, file: !522, line: 241, type: !139)
!9512 = !DILocation(line: 241, column: 12, scope: !9507)
!9513 = !DILocalVariable(name: "versionlen", scope: !9507, file: !522, line: 242, type: !52)
!9514 = !DILocation(line: 242, column: 14, scope: !9507)
!9515 = !DILocation(line: 244, column: 11, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9507, file: !522, line: 244, column: 11)
!9517 = !DILocation(line: 244, column: 34, scope: !9516)
!9518 = !DILocation(line: 244, column: 42, scope: !9516)
!9519 = !DILocation(line: 244, column: 32, scope: !9516)
!9520 = !DILocation(line: 244, column: 11, scope: !9507)
!9521 = !DILocation(line: 245, column: 9, scope: !9516)
!9522 = distinct !{!9522, !9501, !9523}
!9523 = !DILocation(line: 301, column: 5, scope: !9421)
!9524 = !DILocation(line: 247, column: 19, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9507, file: !522, line: 247, column: 11)
!9526 = !DILocation(line: 247, column: 25, scope: !9525)
!9527 = !DILocation(line: 247, column: 23, scope: !9525)
!9528 = !DILocation(line: 247, column: 38, scope: !9525)
!9529 = !DILocation(line: 247, column: 42, scope: !9525)
!9530 = !DILocation(line: 247, column: 50, scope: !9525)
!9531 = !DILocation(line: 247, column: 58, scope: !9525)
!9532 = !DILocation(line: 247, column: 11, scope: !9525)
!9533 = !DILocation(line: 247, column: 63, scope: !9525)
!9534 = !DILocation(line: 247, column: 11, scope: !9507)
!9535 = !DILocation(line: 248, column: 9, scope: !9525)
!9536 = !DILocation(line: 250, column: 11, scope: !9507)
!9537 = !DILocation(line: 250, column: 15, scope: !9507)
!9538 = !DILocation(line: 250, column: 24, scope: !9507)
!9539 = !DILocation(line: 250, column: 22, scope: !9507)
!9540 = !DILocation(line: 250, column: 32, scope: !9507)
!9541 = !DILocation(line: 250, column: 9, scope: !9507)
!9542 = !DILocation(line: 256, column: 22, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9507, file: !522, line: 256, column: 11)
!9544 = !DILocation(line: 256, column: 21, scope: !9543)
!9545 = !DILocation(line: 256, column: 18, scope: !9543)
!9546 = !DILocation(line: 256, column: 24, scope: !9543)
!9547 = !DILocation(line: 256, column: 28, scope: !9543)
!9548 = !DILocation(line: 256, column: 27, scope: !9543)
!9549 = !DILocation(line: 256, column: 30, scope: !9543)
!9550 = !DILocation(line: 256, column: 11, scope: !9507)
!9551 = !DILocation(line: 257, column: 9, scope: !9543)
!9552 = !DILocation(line: 258, column: 18, scope: !9507)
!9553 = !DILocation(line: 258, column: 17, scope: !9507)
!9554 = !DILocation(line: 258, column: 20, scope: !9507)
!9555 = !DILocation(line: 258, column: 14, scope: !9507)
!9556 = !DILocation(line: 259, column: 23, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9507, file: !522, line: 259, column: 7)
!9558 = !DILocation(line: 259, column: 12, scope: !9557)
!9559 = !DILocation(line: 259, column: 28, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9557, file: !522, line: 259, column: 7)
!9561 = !DILocation(line: 259, column: 7, scope: !9557)
!9562 = !DILocation(line: 260, column: 20, scope: !9560)
!9563 = !DILocation(line: 260, column: 22, scope: !9560)
!9564 = !DILocation(line: 260, column: 34, scope: !9560)
!9565 = !DILocation(line: 260, column: 16, scope: !9560)
!9566 = !DILocation(line: 260, column: 9, scope: !9560)
!9567 = !DILocation(line: 259, column: 63, scope: !9560)
!9568 = !DILocation(line: 259, column: 7, scope: !9560)
!9569 = distinct !{!9569, !9561, !9570}
!9570 = !DILocation(line: 260, column: 40, scope: !9557)
!9571 = !DILocation(line: 262, column: 14, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9507, file: !522, line: 262, column: 11)
!9573 = !DILocation(line: 262, column: 16, scope: !9572)
!9574 = !DILocation(line: 262, column: 28, scope: !9572)
!9575 = !DILocation(line: 262, column: 35, scope: !9572)
!9576 = !DILocation(line: 262, column: 39, scope: !9572)
!9577 = !DILocation(line: 262, column: 41, scope: !9572)
!9578 = !DILocation(line: 262, column: 52, scope: !9572)
!9579 = !DILocation(line: 263, column: 14, scope: !9572)
!9580 = !DILocation(line: 263, column: 18, scope: !9572)
!9581 = !DILocation(line: 263, column: 34, scope: !9572)
!9582 = !DILocation(line: 263, column: 32, scope: !9572)
!9583 = !DILocation(line: 264, column: 18, scope: !9572)
!9584 = !DILocation(line: 264, column: 22, scope: !9572)
!9585 = !DILocation(line: 264, column: 39, scope: !9572)
!9586 = !DILocation(line: 264, column: 36, scope: !9572)
!9587 = !DILocation(line: 265, column: 22, scope: !9572)
!9588 = !DILocation(line: 265, column: 33, scope: !9572)
!9589 = !DILocation(line: 265, column: 39, scope: !9572)
!9590 = !DILocation(line: 265, column: 37, scope: !9572)
!9591 = !DILocation(line: 265, column: 47, scope: !9572)
!9592 = !DILocation(line: 265, column: 52, scope: !9572)
!9593 = !DILocation(line: 265, column: 55, scope: !9572)
!9594 = !DILocation(line: 265, column: 25, scope: !9572)
!9595 = !DILocation(line: 265, column: 67, scope: !9572)
!9596 = !DILocation(line: 262, column: 11, scope: !9507)
!9597 = !DILocation(line: 266, column: 9, scope: !9572)
!9598 = !DILocation(line: 272, column: 23, scope: !9507)
!9599 = !DILocation(line: 272, column: 32, scope: !9507)
!9600 = !DILocation(line: 272, column: 30, scope: !9507)
!9601 = !DILocation(line: 272, column: 21, scope: !9507)
!9602 = !DILocation(line: 273, column: 17, scope: !9507)
!9603 = !DILocation(line: 273, column: 14, scope: !9507)
!9604 = !DILocalVariable(name: "new_buffer_size", scope: !9507, file: !522, line: 274, type: !52)
!9605 = !DILocation(line: 274, column: 14, scope: !9507)
!9606 = !DILocation(line: 274, column: 32, scope: !9507)
!9607 = !DILocation(line: 274, column: 40, scope: !9507)
!9608 = !DILocation(line: 274, column: 46, scope: !9507)
!9609 = !DILocation(line: 274, column: 44, scope: !9507)
!9610 = !DILocation(line: 274, column: 60, scope: !9507)
!9611 = !DILocation(line: 275, column: 11, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9507, file: !522, line: 275, column: 11)
!9613 = !DILocation(line: 275, column: 25, scope: !9612)
!9614 = !DILocation(line: 275, column: 23, scope: !9612)
!9615 = !DILocation(line: 275, column: 11, scope: !9507)
!9616 = !DILocation(line: 277, column: 17, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9618, file: !522, line: 277, column: 15)
!9618 = distinct !DILexicalBlock(scope: !9612, file: !522, line: 276, column: 9)
!9619 = !DILocation(line: 277, column: 15, scope: !9618)
!9620 = !DILocation(line: 278, column: 29, scope: !9617)
!9621 = !DILocation(line: 278, column: 13, scope: !9617)
!9622 = !DILocalVariable(name: "new_buf", scope: !9618, file: !522, line: 279, type: !7)
!9623 = !DILocation(line: 279, column: 17, scope: !9618)
!9624 = !DILocation(line: 279, column: 36, scope: !9618)
!9625 = !DILocation(line: 279, column: 41, scope: !9618)
!9626 = !DILocation(line: 279, column: 27, scope: !9618)
!9627 = !DILocation(line: 280, column: 16, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9618, file: !522, line: 280, column: 15)
!9629 = !DILocation(line: 280, column: 15, scope: !9618)
!9630 = !DILocation(line: 282, column: 25, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9628, file: !522, line: 281, column: 13)
!9632 = !DILocation(line: 282, column: 16, scope: !9631)
!9633 = !DILocation(line: 282, column: 23, scope: !9631)
!9634 = !DILocation(line: 283, column: 15, scope: !9631)
!9635 = !DILocation(line: 285, column: 17, scope: !9618)
!9636 = !DILocation(line: 285, column: 15, scope: !9618)
!9637 = !DILocation(line: 286, column: 25, scope: !9618)
!9638 = !DILocation(line: 286, column: 23, scope: !9618)
!9639 = !DILocation(line: 287, column: 9, scope: !9618)
!9640 = !DILocation(line: 288, column: 11, scope: !9507)
!9641 = !DILocation(line: 288, column: 17, scope: !9507)
!9642 = !DILocation(line: 288, column: 15, scope: !9507)
!9643 = !DILocation(line: 288, column: 9, scope: !9507)
!9644 = !DILocation(line: 289, column: 9, scope: !9507)
!9645 = !DILocation(line: 289, column: 12, scope: !9507)
!9646 = !DILocation(line: 290, column: 9, scope: !9507)
!9647 = !DILocation(line: 290, column: 12, scope: !9507)
!9648 = !DILocation(line: 291, column: 8, scope: !9507)
!9649 = !DILocation(line: 291, column: 10, scope: !9507)
!9650 = !DILocation(line: 292, column: 12, scope: !9507)
!9651 = !DILocation(line: 292, column: 9, scope: !9507)
!9652 = !DILocation(line: 293, column: 15, scope: !9507)
!9653 = !DILocation(line: 293, column: 18, scope: !9507)
!9654 = !DILocation(line: 293, column: 21, scope: !9507)
!9655 = !DILocation(line: 293, column: 32, scope: !9507)
!9656 = !DILocation(line: 293, column: 7, scope: !9507)
!9657 = !DILocation(line: 297, column: 12, scope: !9507)
!9658 = !DILocation(line: 297, column: 9, scope: !9507)
!9659 = !DILocation(line: 298, column: 7, scope: !9507)
!9660 = !DILocation(line: 298, column: 15, scope: !9507)
!9661 = !DILocation(line: 298, column: 14, scope: !9507)
!9662 = !DILocation(line: 298, column: 19, scope: !9507)
!9663 = !DILocation(line: 299, column: 10, scope: !9507)
!9664 = !DILocation(line: 299, column: 12, scope: !9507)
!9665 = distinct !{!9665, !9659, !9666}
!9666 = !DILocation(line: 299, column: 14, scope: !9507)
!9667 = !DILocation(line: 300, column: 10, scope: !9507)
!9668 = !DILocation(line: 300, column: 7, scope: !9507)
!9669 = !DILocation(line: 303, column: 13, scope: !9421)
!9670 = !DILocation(line: 303, column: 4, scope: !9421)
!9671 = !DILocation(line: 303, column: 11, scope: !9421)
!9672 = !DILocation(line: 304, column: 10, scope: !9421)
!9673 = !DILocation(line: 304, column: 3, scope: !9421)
!9674 = !DILocation(line: 305, column: 1, scope: !9421)
!9675 = distinct !DISubprogram(name: "check_extension", scope: !522, file: !522, line: 105, type: !9676, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !518, retainedNodes: !213)
!9676 = !DISubroutineType(types: !9677)
!9677 = !{null, !7, !52, !8, !5, !9678}
!9678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!9679 = !DILocalVariable(name: "file", arg: 1, scope: !9675, file: !522, line: 105, type: !7)
!9680 = !DILocation(line: 105, column: 24, scope: !9675)
!9681 = !DILocalVariable(name: "filelen", arg: 2, scope: !9675, file: !522, line: 105, type: !52)
!9682 = !DILocation(line: 105, column: 37, scope: !9675)
!9683 = !DILocalVariable(name: "e", arg: 3, scope: !9675, file: !522, line: 105, type: !8)
!9684 = !DILocation(line: 105, column: 51, scope: !9675)
!9685 = !DILocalVariable(name: "dir_fd", arg: 4, scope: !9675, file: !522, line: 106, type: !5)
!9686 = !DILocation(line: 106, column: 22, scope: !9675)
!9687 = !DILocalVariable(name: "base_max", arg: 5, scope: !9675, file: !522, line: 106, type: !9678)
!9688 = !DILocation(line: 106, column: 38, scope: !9675)
!9689 = !DILocalVariable(name: "base", scope: !9675, file: !522, line: 108, type: !7)
!9690 = !DILocation(line: 108, column: 9, scope: !9675)
!9691 = !DILocation(line: 108, column: 32, scope: !9675)
!9692 = !DILocation(line: 108, column: 16, scope: !9675)
!9693 = !DILocalVariable(name: "baselen", scope: !9675, file: !522, line: 109, type: !52)
!9694 = !DILocation(line: 109, column: 10, scope: !9675)
!9695 = !DILocation(line: 109, column: 30, scope: !9675)
!9696 = !DILocation(line: 109, column: 20, scope: !9675)
!9697 = !DILocalVariable(name: "baselen_max", scope: !9675, file: !522, line: 110, type: !52)
!9698 = !DILocation(line: 110, column: 10, scope: !9675)
!9699 = !DILocation(line: 112, column: 49, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9675, file: !522, line: 112, column: 7)
!9701 = !DILocation(line: 112, column: 47, scope: !9700)
!9702 = !DILocation(line: 112, column: 7, scope: !9675)
!9703 = !DILocation(line: 115, column: 12, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9705, file: !522, line: 115, column: 11)
!9705 = distinct !DILexicalBlock(scope: !9700, file: !522, line: 113, column: 5)
!9706 = !DILocation(line: 115, column: 11, scope: !9704)
!9707 = !DILocation(line: 115, column: 21, scope: !9704)
!9708 = !DILocation(line: 115, column: 11, scope: !9705)
!9709 = !DILocalVariable(name: "name_max", scope: !9710, file: !522, line: 117, type: !32)
!9710 = distinct !DILexicalBlock(scope: !9704, file: !522, line: 116, column: 9)
!9711 = !DILocation(line: 117, column: 16, scope: !9710)
!9712 = !DILocation(line: 118, column: 15, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9710, file: !522, line: 118, column: 15)
!9714 = !DILocation(line: 118, column: 22, scope: !9713)
!9715 = !DILocation(line: 118, column: 15, scope: !9710)
!9716 = !DILocalVariable(name: "tmp", scope: !9717, file: !522, line: 123, type: !264)
!9717 = distinct !DILexicalBlock(scope: !9713, file: !522, line: 119, column: 13)
!9718 = !DILocation(line: 123, column: 20, scope: !9717)
!9719 = !DILocation(line: 124, column: 15, scope: !9717)
!9720 = !DILocation(line: 124, column: 28, scope: !9717)
!9721 = !DILocation(line: 125, column: 23, scope: !9717)
!9722 = !DILocation(line: 125, column: 15, scope: !9717)
!9723 = !DILocation(line: 126, column: 15, scope: !9717)
!9724 = !DILocation(line: 126, column: 21, scope: !9717)
!9725 = !DILocation(line: 127, column: 36, scope: !9717)
!9726 = !DILocation(line: 127, column: 26, scope: !9717)
!9727 = !DILocation(line: 127, column: 24, scope: !9717)
!9728 = !DILocation(line: 128, column: 28, scope: !9717)
!9729 = !DILocation(line: 128, column: 27, scope: !9717)
!9730 = !DILocation(line: 128, column: 24, scope: !9717)
!9731 = !DILocation(line: 129, column: 23, scope: !9717)
!9732 = !DILocation(line: 129, column: 15, scope: !9717)
!9733 = !DILocation(line: 130, column: 13, scope: !9717)
!9734 = !DILocation(line: 133, column: 15, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9713, file: !522, line: 132, column: 13)
!9736 = !DILocation(line: 133, column: 21, scope: !9735)
!9737 = !DILocation(line: 134, column: 37, scope: !9735)
!9738 = !DILocation(line: 134, column: 26, scope: !9735)
!9739 = !DILocation(line: 134, column: 24, scope: !9735)
!9740 = !DILocation(line: 135, column: 28, scope: !9735)
!9741 = !DILocation(line: 135, column: 27, scope: !9735)
!9742 = !DILocation(line: 135, column: 24, scope: !9735)
!9743 = !DILocation(line: 138, column: 29, scope: !9710)
!9744 = !DILocation(line: 138, column: 26, scope: !9710)
!9745 = !DILocation(line: 138, column: 38, scope: !9710)
!9746 = !DILocation(line: 138, column: 41, scope: !9710)
!9747 = !DILocation(line: 138, column: 50, scope: !9710)
!9748 = !DILocation(line: 138, column: 24, scope: !9710)
!9749 = !DILocation(line: 138, column: 64, scope: !9710)
!9750 = !DILocation(line: 139, column: 26, scope: !9710)
!9751 = !DILocation(line: 139, column: 35, scope: !9710)
!9752 = !DILocation(line: 138, column: 12, scope: !9710)
!9753 = !DILocation(line: 138, column: 21, scope: !9710)
!9754 = !DILocation(line: 140, column: 9, scope: !9710)
!9755 = !DILocation(line: 142, column: 22, scope: !9705)
!9756 = !DILocation(line: 142, column: 21, scope: !9705)
!9757 = !DILocation(line: 142, column: 19, scope: !9705)
!9758 = !DILocation(line: 143, column: 5, scope: !9705)
!9759 = !DILocation(line: 160, column: 7, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9675, file: !522, line: 160, column: 7)
!9761 = !DILocation(line: 160, column: 21, scope: !9760)
!9762 = !DILocation(line: 160, column: 19, scope: !9760)
!9763 = !DILocation(line: 160, column: 7, scope: !9675)
!9764 = !DILocation(line: 162, column: 17, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9760, file: !522, line: 161, column: 5)
!9766 = !DILocation(line: 162, column: 24, scope: !9765)
!9767 = !DILocation(line: 162, column: 22, scope: !9765)
!9768 = !DILocation(line: 162, column: 34, scope: !9765)
!9769 = !DILocation(line: 162, column: 32, scope: !9765)
!9770 = !DILocation(line: 162, column: 15, scope: !9765)
!9771 = !DILocation(line: 163, column: 11, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9765, file: !522, line: 163, column: 11)
!9773 = !DILocation(line: 163, column: 26, scope: !9772)
!9774 = !DILocation(line: 163, column: 23, scope: !9772)
!9775 = !DILocation(line: 163, column: 11, scope: !9765)
!9776 = !DILocation(line: 164, column: 19, scope: !9772)
!9777 = !DILocation(line: 164, column: 31, scope: !9772)
!9778 = !DILocation(line: 164, column: 17, scope: !9772)
!9779 = !DILocation(line: 164, column: 9, scope: !9772)
!9780 = !DILocation(line: 165, column: 23, scope: !9765)
!9781 = !DILocation(line: 165, column: 7, scope: !9765)
!9782 = !DILocation(line: 165, column: 12, scope: !9765)
!9783 = !DILocation(line: 165, column: 21, scope: !9765)
!9784 = !DILocation(line: 166, column: 7, scope: !9765)
!9785 = !DILocation(line: 166, column: 12, scope: !9765)
!9786 = !DILocation(line: 166, column: 20, scope: !9765)
!9787 = !DILocation(line: 166, column: 25, scope: !9765)
!9788 = !DILocation(line: 167, column: 5, scope: !9765)
!9789 = !DILocation(line: 168, column: 1, scope: !9675)
!9790 = distinct !DISubprogram(name: "backup_file_rename", scope: !9791, file: !9791, line: 28, type: !9792, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1293, retainedNodes: !213)
!9791 = !DIFile(filename: "lib/backup-rename.c", directory: "/home/mohamad/clone/coreutils")
!9792 = !DISubroutineType(types: !9793)
!9793 = !{!7, !5, !113, !65}
!9794 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9790, file: !9791, line: 28, type: !5)
!9795 = !DILocation(line: 28, column: 25, scope: !9790)
!9796 = !DILocalVariable(name: "file", arg: 2, scope: !9790, file: !9791, line: 28, type: !113)
!9797 = !DILocation(line: 28, column: 45, scope: !9790)
!9798 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9790, file: !9791, line: 28, type: !65)
!9799 = !DILocation(line: 28, column: 68, scope: !9790)
!9800 = !DILocation(line: 30, column: 31, scope: !9790)
!9801 = !DILocation(line: 30, column: 39, scope: !9790)
!9802 = !DILocation(line: 30, column: 45, scope: !9790)
!9803 = !DILocation(line: 30, column: 10, scope: !9790)
!9804 = !DILocation(line: 30, column: 3, scope: !9790)
!9805 = distinct !DISubprogram(name: "find_backup_file_name", scope: !567, file: !567, line: 33, type: !9792, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !549, retainedNodes: !213)
!9806 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9805, file: !567, line: 33, type: !5)
!9807 = !DILocation(line: 33, column: 28, scope: !9805)
!9808 = !DILocalVariable(name: "file", arg: 2, scope: !9805, file: !567, line: 33, type: !113)
!9809 = !DILocation(line: 33, column: 48, scope: !9805)
!9810 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9805, file: !567, line: 34, type: !65)
!9811 = !DILocation(line: 34, column: 41, scope: !9805)
!9812 = !DILocalVariable(name: "result", scope: !9805, file: !567, line: 36, type: !7)
!9813 = !DILocation(line: 36, column: 9, scope: !9805)
!9814 = !DILocation(line: 36, column: 39, scope: !9805)
!9815 = !DILocation(line: 36, column: 47, scope: !9805)
!9816 = !DILocation(line: 36, column: 53, scope: !9805)
!9817 = !DILocation(line: 36, column: 18, scope: !9805)
!9818 = !DILocation(line: 37, column: 8, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9805, file: !567, line: 37, column: 7)
!9820 = !DILocation(line: 37, column: 7, scope: !9805)
!9821 = !DILocation(line: 38, column: 5, scope: !9819)
!9822 = !DILocation(line: 39, column: 10, scope: !9805)
!9823 = !DILocation(line: 39, column: 3, scope: !9805)
!9824 = distinct !DISubprogram(name: "get_version", scope: !567, file: !567, line: 71, type: !9825, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !549, retainedNodes: !213)
!9825 = !DISubroutineType(types: !9826)
!9826 = !{!65, !113, !113}
!9827 = !DILocalVariable(name: "context", arg: 1, scope: !9824, file: !567, line: 71, type: !113)
!9828 = !DILocation(line: 71, column: 26, scope: !9824)
!9829 = !DILocalVariable(name: "version", arg: 2, scope: !9824, file: !567, line: 71, type: !113)
!9830 = !DILocation(line: 71, column: 47, scope: !9824)
!9831 = !DILocation(line: 73, column: 7, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9824, file: !567, line: 73, column: 7)
!9833 = !DILocation(line: 73, column: 15, scope: !9832)
!9834 = !DILocation(line: 73, column: 20, scope: !9832)
!9835 = !DILocation(line: 73, column: 24, scope: !9832)
!9836 = !DILocation(line: 73, column: 23, scope: !9832)
!9837 = !DILocation(line: 73, column: 32, scope: !9832)
!9838 = !DILocation(line: 73, column: 7, scope: !9824)
!9839 = !DILocation(line: 74, column: 5, scope: !9832)
!9840 = !DILocation(line: 76, column: 12, scope: !9832)
!9841 = !DILocation(line: 76, column: 5, scope: !9832)
!9842 = !DILocation(line: 77, column: 1, scope: !9824)
!9843 = distinct !DISubprogram(name: "xget_version", scope: !567, file: !567, line: 87, type: !9825, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !549, retainedNodes: !213)
!9844 = !DILocalVariable(name: "context", arg: 1, scope: !9843, file: !567, line: 87, type: !113)
!9845 = !DILocation(line: 87, column: 27, scope: !9843)
!9846 = !DILocalVariable(name: "version", arg: 2, scope: !9843, file: !567, line: 87, type: !113)
!9847 = !DILocation(line: 87, column: 48, scope: !9843)
!9848 = !DILocation(line: 89, column: 7, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9843, file: !567, line: 89, column: 7)
!9850 = !DILocation(line: 89, column: 15, scope: !9849)
!9851 = !DILocation(line: 89, column: 19, scope: !9849)
!9852 = !DILocation(line: 89, column: 18, scope: !9849)
!9853 = !DILocation(line: 89, column: 7, scope: !9843)
!9854 = !DILocation(line: 90, column: 25, scope: !9849)
!9855 = !DILocation(line: 90, column: 34, scope: !9849)
!9856 = !DILocation(line: 90, column: 12, scope: !9849)
!9857 = !DILocation(line: 90, column: 5, scope: !9849)
!9858 = !DILocation(line: 92, column: 45, scope: !9849)
!9859 = !DILocation(line: 92, column: 12, scope: !9849)
!9860 = !DILocation(line: 92, column: 5, scope: !9849)
!9861 = !DILocation(line: 93, column: 1, scope: !9843)
!9862 = distinct !DISubprogram(name: "buffer_lcm", scope: !9863, file: !9863, line: 28, type: !9864, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1295, retainedNodes: !213)
!9863 = !DIFile(filename: "lib/buffer-lcm.c", directory: "/home/mohamad/clone/coreutils")
!9864 = !DISubroutineType(types: !9865)
!9865 = !{!52, !52, !52, !52}
!9866 = !DILocalVariable(name: "a", arg: 1, scope: !9862, file: !9863, line: 28, type: !52)
!9867 = !DILocation(line: 28, column: 20, scope: !9862)
!9868 = !DILocalVariable(name: "b", arg: 2, scope: !9862, file: !9863, line: 28, type: !52)
!9869 = !DILocation(line: 28, column: 30, scope: !9862)
!9870 = !DILocalVariable(name: "lcm_max", arg: 3, scope: !9862, file: !9863, line: 28, type: !52)
!9871 = !DILocation(line: 28, column: 40, scope: !9862)
!9872 = !DILocalVariable(name: "size", scope: !9862, file: !9863, line: 30, type: !52)
!9873 = !DILocation(line: 30, column: 10, scope: !9862)
!9874 = !DILocation(line: 33, column: 8, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9862, file: !9863, line: 33, column: 7)
!9876 = !DILocation(line: 33, column: 7, scope: !9862)
!9877 = !DILocation(line: 34, column: 12, scope: !9875)
!9878 = !DILocation(line: 34, column: 16, scope: !9875)
!9879 = !DILocation(line: 34, column: 10, scope: !9875)
!9880 = !DILocation(line: 34, column: 5, scope: !9875)
!9881 = !DILocation(line: 37, column: 11, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9883, file: !9863, line: 37, column: 11)
!9883 = distinct !DILexicalBlock(scope: !9875, file: !9863, line: 36, column: 5)
!9884 = !DILocation(line: 37, column: 11, scope: !9883)
!9885 = !DILocalVariable(name: "lcm", scope: !9886, file: !9863, line: 42, type: !52)
!9886 = distinct !DILexicalBlock(scope: !9882, file: !9863, line: 38, column: 9)
!9887 = !DILocation(line: 42, column: 18, scope: !9886)
!9888 = !DILocalVariable(name: "m", scope: !9886, file: !9863, line: 42, type: !52)
!9889 = !DILocation(line: 42, column: 23, scope: !9886)
!9890 = !DILocalVariable(name: "n", scope: !9886, file: !9863, line: 42, type: !52)
!9891 = !DILocation(line: 42, column: 26, scope: !9886)
!9892 = !DILocalVariable(name: "q", scope: !9886, file: !9863, line: 42, type: !52)
!9893 = !DILocation(line: 42, column: 29, scope: !9886)
!9894 = !DILocalVariable(name: "r", scope: !9886, file: !9863, line: 42, type: !52)
!9895 = !DILocation(line: 42, column: 32, scope: !9886)
!9896 = !DILocation(line: 45, column: 20, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9886, file: !9863, line: 45, column: 11)
!9898 = !DILocation(line: 45, column: 18, scope: !9897)
!9899 = !DILocation(line: 45, column: 27, scope: !9897)
!9900 = !DILocation(line: 45, column: 25, scope: !9897)
!9901 = !DILocation(line: 45, column: 16, scope: !9897)
!9902 = !DILocation(line: 45, column: 36, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9897, file: !9863, line: 45, column: 11)
!9904 = !DILocation(line: 45, column: 40, scope: !9903)
!9905 = !DILocation(line: 45, column: 38, scope: !9903)
!9906 = !DILocation(line: 45, column: 34, scope: !9903)
!9907 = !DILocation(line: 45, column: 43, scope: !9903)
!9908 = !DILocation(line: 45, column: 11, scope: !9897)
!9909 = !DILocation(line: 46, column: 13, scope: !9903)
!9910 = !DILocation(line: 45, column: 54, scope: !9903)
!9911 = !DILocation(line: 45, column: 52, scope: !9903)
!9912 = !DILocation(line: 45, column: 61, scope: !9903)
!9913 = !DILocation(line: 45, column: 59, scope: !9903)
!9914 = !DILocation(line: 45, column: 11, scope: !9903)
!9915 = distinct !{!9915, !9908, !9916}
!9916 = !DILocation(line: 46, column: 13, scope: !9897)
!9917 = !DILocation(line: 49, column: 15, scope: !9886)
!9918 = !DILocation(line: 49, column: 19, scope: !9886)
!9919 = !DILocation(line: 49, column: 17, scope: !9886)
!9920 = !DILocation(line: 49, column: 13, scope: !9886)
!9921 = !DILocation(line: 50, column: 17, scope: !9886)
!9922 = !DILocation(line: 50, column: 21, scope: !9886)
!9923 = !DILocation(line: 50, column: 19, scope: !9886)
!9924 = !DILocation(line: 50, column: 15, scope: !9886)
!9925 = !DILocation(line: 51, column: 15, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9886, file: !9863, line: 51, column: 15)
!9927 = !DILocation(line: 51, column: 22, scope: !9926)
!9928 = !DILocation(line: 51, column: 19, scope: !9926)
!9929 = !DILocation(line: 51, column: 30, scope: !9926)
!9930 = !DILocation(line: 51, column: 33, scope: !9926)
!9931 = !DILocation(line: 51, column: 39, scope: !9926)
!9932 = !DILocation(line: 51, column: 37, scope: !9926)
!9933 = !DILocation(line: 51, column: 44, scope: !9926)
!9934 = !DILocation(line: 51, column: 41, scope: !9926)
!9935 = !DILocation(line: 51, column: 15, scope: !9886)
!9936 = !DILocation(line: 52, column: 20, scope: !9926)
!9937 = !DILocation(line: 52, column: 13, scope: !9926)
!9938 = !DILocation(line: 53, column: 9, scope: !9886)
!9939 = !DILocation(line: 55, column: 14, scope: !9883)
!9940 = !DILocation(line: 55, column: 12, scope: !9883)
!9941 = !DILocation(line: 58, column: 10, scope: !9862)
!9942 = !DILocation(line: 58, column: 18, scope: !9862)
!9943 = !DILocation(line: 58, column: 15, scope: !9862)
!9944 = !DILocation(line: 58, column: 28, scope: !9862)
!9945 = !DILocation(line: 58, column: 35, scope: !9862)
!9946 = !DILocation(line: 58, column: 3, scope: !9862)
!9947 = !DILocation(line: 59, column: 1, scope: !9862)
!9948 = distinct !DISubprogram(name: "close_stdin_set_file_name", scope: !614, file: !614, line: 43, type: !211, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !213)
!9949 = !DILocalVariable(name: "file", arg: 1, scope: !9948, file: !614, line: 43, type: !113)
!9950 = !DILocation(line: 43, column: 40, scope: !9948)
!9951 = !DILocation(line: 45, column: 15, scope: !9948)
!9952 = !DILocation(line: 45, column: 13, scope: !9948)
!9953 = !DILocation(line: 46, column: 1, scope: !9948)
!9954 = distinct !DISubprogram(name: "close_stdin", scope: !614, file: !614, line: 79, type: !562, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !570, retainedNodes: !213)
!9955 = !DILocalVariable(name: "fail", scope: !9954, file: !614, line: 81, type: !139)
!9956 = !DILocation(line: 81, column: 8, scope: !9954)
!9957 = !DILocation(line: 87, column: 19, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9954, file: !614, line: 87, column: 7)
!9959 = !DILocation(line: 87, column: 7, scope: !9958)
!9960 = !DILocation(line: 87, column: 26, scope: !9958)
!9961 = !DILocation(line: 87, column: 7, scope: !9954)
!9962 = !DILocation(line: 91, column: 19, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9964, file: !614, line: 91, column: 11)
!9964 = distinct !DILexicalBlock(scope: !9958, file: !614, line: 88, column: 5)
!9965 = !DILocation(line: 91, column: 11, scope: !9963)
!9966 = !DILocation(line: 91, column: 39, scope: !9963)
!9967 = !DILocation(line: 91, column: 44, scope: !9963)
!9968 = !DILocation(line: 91, column: 55, scope: !9963)
!9969 = !DILocation(line: 91, column: 47, scope: !9963)
!9970 = !DILocation(line: 91, column: 62, scope: !9963)
!9971 = !DILocation(line: 91, column: 11, scope: !9964)
!9972 = !DILocation(line: 92, column: 14, scope: !9963)
!9973 = !DILocation(line: 92, column: 9, scope: !9963)
!9974 = !DILocation(line: 93, column: 5, scope: !9964)
!9975 = !DILocation(line: 94, column: 21, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9954, file: !614, line: 94, column: 7)
!9977 = !DILocation(line: 94, column: 7, scope: !9976)
!9978 = !DILocation(line: 94, column: 28, scope: !9976)
!9979 = !DILocation(line: 94, column: 7, scope: !9954)
!9980 = !DILocation(line: 95, column: 10, scope: !9976)
!9981 = !DILocation(line: 95, column: 5, scope: !9976)
!9982 = !DILocation(line: 96, column: 7, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9954, file: !614, line: 96, column: 7)
!9984 = !DILocation(line: 96, column: 7, scope: !9954)
!9985 = !DILocalVariable(name: "close_error", scope: !9986, file: !614, line: 100, type: !113)
!9986 = distinct !DILexicalBlock(scope: !9983, file: !614, line: 97, column: 5)
!9987 = !DILocation(line: 100, column: 19, scope: !9986)
!9988 = !DILocation(line: 100, column: 33, scope: !9986)
!9989 = !DILocation(line: 101, column: 11, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9986, file: !614, line: 101, column: 11)
!9991 = !DILocation(line: 101, column: 11, scope: !9986)
!9992 = !DILocation(line: 102, column: 19, scope: !9990)
!9993 = !DILocation(line: 102, column: 52, scope: !9990)
!9994 = !DILocation(line: 102, column: 36, scope: !9990)
!9995 = !DILocation(line: 103, column: 16, scope: !9990)
!9996 = !DILocation(line: 102, column: 9, scope: !9990)
!9997 = !DILocation(line: 105, column: 19, scope: !9990)
!9998 = !DILocation(line: 105, column: 32, scope: !9990)
!9999 = !DILocation(line: 105, column: 9, scope: !9990)
!10000 = !DILocation(line: 106, column: 5, scope: !9986)
!10001 = !DILocation(line: 108, column: 3, scope: !9954)
!10002 = !DILocation(line: 110, column: 7, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9954, file: !614, line: 110, column: 7)
!10004 = !DILocation(line: 110, column: 7, scope: !9954)
!10005 = !DILocation(line: 111, column: 12, scope: !10003)
!10006 = !DILocation(line: 111, column: 5, scope: !10003)
!10007 = !DILocation(line: 112, column: 1, scope: !9954)
!10008 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !661, file: !661, line: 51, type: !211, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !617, retainedNodes: !213)
!10009 = !DILocalVariable(name: "file", arg: 1, scope: !10008, file: !661, line: 51, type: !113)
!10010 = !DILocation(line: 51, column: 41, scope: !10008)
!10011 = !DILocation(line: 53, column: 15, scope: !10008)
!10012 = !DILocation(line: 53, column: 13, scope: !10008)
!10013 = !DILocation(line: 54, column: 1, scope: !10008)
!10014 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !661, file: !661, line: 88, type: !10015, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !617, retainedNodes: !213)
!10015 = !DISubroutineType(types: !10016)
!10016 = !{null, !139}
!10017 = !DILocalVariable(name: "ignore", arg: 1, scope: !10014, file: !661, line: 88, type: !139)
!10018 = !DILocation(line: 88, column: 37, scope: !10014)
!10019 = !DILocation(line: 90, column: 18, scope: !10014)
!10020 = !DILocation(line: 90, column: 16, scope: !10014)
!10021 = !DILocation(line: 91, column: 1, scope: !10014)
!10022 = distinct !DISubprogram(name: "close_stdout", scope: !661, file: !661, line: 117, type: !562, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !617, retainedNodes: !213)
!10023 = !DILocation(line: 119, column: 21, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10022, file: !661, line: 119, column: 7)
!10025 = !DILocation(line: 119, column: 7, scope: !10024)
!10026 = !DILocation(line: 119, column: 29, scope: !10024)
!10027 = !DILocation(line: 120, column: 7, scope: !10024)
!10028 = !DILocation(line: 120, column: 12, scope: !10024)
!10029 = !DILocation(line: 120, column: 25, scope: !10024)
!10030 = !DILocation(line: 120, column: 28, scope: !10024)
!10031 = !DILocation(line: 120, column: 34, scope: !10024)
!10032 = !DILocation(line: 119, column: 7, scope: !10022)
!10033 = !DILocalVariable(name: "write_error", scope: !10034, file: !661, line: 122, type: !113)
!10034 = distinct !DILexicalBlock(scope: !10024, file: !661, line: 121, column: 5)
!10035 = !DILocation(line: 122, column: 19, scope: !10034)
!10036 = !DILocation(line: 122, column: 33, scope: !10034)
!10037 = !DILocation(line: 123, column: 11, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10034, file: !661, line: 123, column: 11)
!10039 = !DILocation(line: 123, column: 11, scope: !10034)
!10040 = !DILocation(line: 124, column: 19, scope: !10038)
!10041 = !DILocation(line: 124, column: 52, scope: !10038)
!10042 = !DILocation(line: 124, column: 36, scope: !10038)
!10043 = !DILocation(line: 125, column: 16, scope: !10038)
!10044 = !DILocation(line: 124, column: 9, scope: !10038)
!10045 = !DILocation(line: 127, column: 19, scope: !10038)
!10046 = !DILocation(line: 127, column: 32, scope: !10038)
!10047 = !DILocation(line: 127, column: 9, scope: !10038)
!10048 = !DILocation(line: 129, column: 14, scope: !10034)
!10049 = !DILocation(line: 129, column: 7, scope: !10034)
!10050 = !DILocation(line: 134, column: 42, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10022, file: !661, line: 134, column: 7)
!10052 = !DILocation(line: 134, column: 28, scope: !10051)
!10053 = !DILocation(line: 134, column: 50, scope: !10051)
!10054 = !DILocation(line: 134, column: 7, scope: !10022)
!10055 = !DILocation(line: 135, column: 12, scope: !10051)
!10056 = !DILocation(line: 135, column: 5, scope: !10051)
!10057 = !DILocation(line: 136, column: 1, scope: !10022)
!10058 = distinct !DISubprogram(name: "dir_name", scope: !10059, file: !10059, line: 32, type: !10060, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1298, retainedNodes: !213)
!10059 = !DIFile(filename: "lib/dirname.c", directory: "/home/mohamad/clone/coreutils")
!10060 = !DISubroutineType(types: !10061)
!10061 = !{!7, !113}
!10062 = !DILocalVariable(name: "file", arg: 1, scope: !10058, file: !10059, line: 32, type: !113)
!10063 = !DILocation(line: 32, column: 23, scope: !10058)
!10064 = !DILocalVariable(name: "result", scope: !10058, file: !10059, line: 34, type: !7)
!10065 = !DILocation(line: 34, column: 9, scope: !10058)
!10066 = !DILocation(line: 34, column: 29, scope: !10058)
!10067 = !DILocation(line: 34, column: 18, scope: !10058)
!10068 = !DILocation(line: 35, column: 8, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10058, file: !10059, line: 35, column: 7)
!10070 = !DILocation(line: 35, column: 7, scope: !10058)
!10071 = !DILocation(line: 36, column: 5, scope: !10069)
!10072 = !DILocation(line: 37, column: 10, scope: !10058)
!10073 = !DILocation(line: 37, column: 3, scope: !10058)
!10074 = distinct !DISubprogram(name: "dir_len", scope: !10075, file: !10075, line: 32, type: !10076, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1301, retainedNodes: !213)
!10075 = !DIFile(filename: "lib/dirname-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!10076 = !DISubroutineType(types: !10077)
!10077 = !{!52, !113}
!10078 = !DILocalVariable(name: "file", arg: 1, scope: !10074, file: !10075, line: 32, type: !113)
!10079 = !DILocation(line: 32, column: 22, scope: !10074)
!10080 = !DILocalVariable(name: "prefix_length", scope: !10074, file: !10075, line: 34, type: !52)
!10081 = !DILocation(line: 34, column: 10, scope: !10074)
!10082 = !DILocalVariable(name: "length", scope: !10074, file: !10075, line: 35, type: !52)
!10083 = !DILocation(line: 35, column: 10, scope: !10074)
!10084 = !DILocation(line: 38, column: 21, scope: !10074)
!10085 = !DILocation(line: 38, column: 35, scope: !10074)
!10086 = !DILocation(line: 41, column: 24, scope: !10074)
!10087 = !DILocation(line: 38, column: 20, scope: !10074)
!10088 = !DILocation(line: 38, column: 17, scope: !10074)
!10089 = !DILocation(line: 48, column: 33, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10074, file: !10075, line: 48, column: 3)
!10091 = !DILocation(line: 48, column: 17, scope: !10090)
!10092 = !DILocation(line: 48, column: 41, scope: !10090)
!10093 = !DILocation(line: 48, column: 39, scope: !10090)
!10094 = !DILocation(line: 48, column: 15, scope: !10090)
!10095 = !DILocation(line: 48, column: 8, scope: !10090)
!10096 = !DILocation(line: 49, column: 8, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10090, file: !10075, line: 48, column: 3)
!10098 = !DILocation(line: 49, column: 24, scope: !10097)
!10099 = !DILocation(line: 49, column: 22, scope: !10097)
!10100 = !DILocation(line: 48, column: 3, scope: !10090)
!10101 = !DILocation(line: 50, column: 11, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10097, file: !10075, line: 50, column: 9)
!10103 = !DILocation(line: 50, column: 9, scope: !10097)
!10104 = !DILocation(line: 51, column: 7, scope: !10102)
!10105 = !DILocation(line: 49, column: 38, scope: !10097)
!10106 = !DILocation(line: 48, column: 3, scope: !10097)
!10107 = distinct !{!10107, !10100, !10108}
!10108 = !DILocation(line: 51, column: 7, scope: !10090)
!10109 = !DILocation(line: 52, column: 10, scope: !10074)
!10110 = !DILocation(line: 52, column: 3, scope: !10074)
!10111 = distinct !DISubprogram(name: "mdir_name", scope: !10075, file: !10075, line: 71, type: !10060, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1301, retainedNodes: !213)
!10112 = !DILocalVariable(name: "file", arg: 1, scope: !10111, file: !10075, line: 71, type: !113)
!10113 = !DILocation(line: 71, column: 24, scope: !10111)
!10114 = !DILocalVariable(name: "length", scope: !10111, file: !10075, line: 73, type: !52)
!10115 = !DILocation(line: 73, column: 10, scope: !10111)
!10116 = !DILocation(line: 73, column: 28, scope: !10111)
!10117 = !DILocation(line: 73, column: 19, scope: !10111)
!10118 = !DILocalVariable(name: "append_dot", scope: !10111, file: !10075, line: 74, type: !139)
!10119 = !DILocation(line: 74, column: 8, scope: !10111)
!10120 = !DILocation(line: 74, column: 22, scope: !10111)
!10121 = !DILocation(line: 74, column: 29, scope: !10111)
!10122 = !DILocation(line: 75, column: 22, scope: !10111)
!10123 = !DILocalVariable(name: "dir", scope: !10111, file: !10075, line: 78, type: !7)
!10124 = !DILocation(line: 78, column: 9, scope: !10111)
!10125 = !DILocation(line: 78, column: 23, scope: !10111)
!10126 = !DILocation(line: 78, column: 32, scope: !10111)
!10127 = !DILocation(line: 78, column: 30, scope: !10111)
!10128 = !DILocation(line: 78, column: 43, scope: !10111)
!10129 = !DILocation(line: 78, column: 15, scope: !10111)
!10130 = !DILocation(line: 79, column: 8, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10111, file: !10075, line: 79, column: 7)
!10132 = !DILocation(line: 79, column: 7, scope: !10111)
!10133 = !DILocation(line: 80, column: 5, scope: !10131)
!10134 = !DILocation(line: 81, column: 11, scope: !10111)
!10135 = !DILocation(line: 81, column: 16, scope: !10111)
!10136 = !DILocation(line: 81, column: 22, scope: !10111)
!10137 = !DILocation(line: 81, column: 3, scope: !10111)
!10138 = !DILocation(line: 82, column: 7, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10111, file: !10075, line: 82, column: 7)
!10140 = !DILocation(line: 82, column: 7, scope: !10111)
!10141 = !DILocation(line: 83, column: 5, scope: !10139)
!10142 = !DILocation(line: 83, column: 15, scope: !10139)
!10143 = !DILocation(line: 83, column: 19, scope: !10139)
!10144 = !DILocation(line: 84, column: 3, scope: !10111)
!10145 = !DILocation(line: 84, column: 7, scope: !10111)
!10146 = !DILocation(line: 84, column: 15, scope: !10111)
!10147 = !DILocation(line: 85, column: 10, scope: !10111)
!10148 = !DILocation(line: 85, column: 3, scope: !10111)
!10149 = !DILocation(line: 86, column: 1, scope: !10111)
!10150 = distinct !DISubprogram(name: "last_component", scope: !10151, file: !10151, line: 30, type: !10060, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1304, retainedNodes: !213)
!10151 = !DIFile(filename: "lib/basename-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!10152 = !DILocalVariable(name: "name", arg: 1, scope: !10150, file: !10151, line: 30, type: !113)
!10153 = !DILocation(line: 30, column: 29, scope: !10150)
!10154 = !DILocalVariable(name: "base", scope: !10150, file: !10151, line: 32, type: !113)
!10155 = !DILocation(line: 32, column: 15, scope: !10150)
!10156 = !DILocation(line: 32, column: 22, scope: !10150)
!10157 = !DILocation(line: 32, column: 27, scope: !10150)
!10158 = !DILocalVariable(name: "p", scope: !10150, file: !10151, line: 33, type: !113)
!10159 = !DILocation(line: 33, column: 15, scope: !10150)
!10160 = !DILocalVariable(name: "saw_slash", scope: !10150, file: !10151, line: 34, type: !139)
!10161 = !DILocation(line: 34, column: 8, scope: !10150)
!10162 = !DILocation(line: 36, column: 3, scope: !10150)
!10163 = !DILocation(line: 36, column: 10, scope: !10150)
!10164 = !DILocation(line: 37, column: 9, scope: !10150)
!10165 = distinct !{!10165, !10162, !10164}
!10166 = !DILocation(line: 39, column: 12, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10150, file: !10151, line: 39, column: 3)
!10168 = !DILocation(line: 39, column: 10, scope: !10167)
!10169 = !DILocation(line: 39, column: 8, scope: !10167)
!10170 = !DILocation(line: 39, column: 19, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10167, file: !10151, line: 39, column: 3)
!10172 = !DILocation(line: 39, column: 18, scope: !10171)
!10173 = !DILocation(line: 39, column: 3, scope: !10167)
!10174 = !DILocation(line: 41, column: 11, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10176, file: !10151, line: 41, column: 11)
!10176 = distinct !DILexicalBlock(scope: !10171, file: !10151, line: 40, column: 5)
!10177 = !DILocation(line: 41, column: 11, scope: !10176)
!10178 = !DILocation(line: 42, column: 19, scope: !10175)
!10179 = !DILocation(line: 42, column: 9, scope: !10175)
!10180 = !DILocation(line: 43, column: 16, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10175, file: !10151, line: 43, column: 16)
!10182 = !DILocation(line: 43, column: 16, scope: !10175)
!10183 = !DILocation(line: 45, column: 18, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10181, file: !10151, line: 44, column: 9)
!10185 = !DILocation(line: 45, column: 16, scope: !10184)
!10186 = !DILocation(line: 46, column: 21, scope: !10184)
!10187 = !DILocation(line: 47, column: 9, scope: !10184)
!10188 = !DILocation(line: 48, column: 5, scope: !10176)
!10189 = !DILocation(line: 39, column: 23, scope: !10171)
!10190 = !DILocation(line: 39, column: 3, scope: !10171)
!10191 = distinct !{!10191, !10173, !10192}
!10192 = !DILocation(line: 48, column: 5, scope: !10167)
!10193 = !DILocation(line: 50, column: 19, scope: !10150)
!10194 = !DILocation(line: 50, column: 3, scope: !10150)
!10195 = distinct !DISubprogram(name: "base_len", scope: !10151, file: !10151, line: 58, type: !10076, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1304, retainedNodes: !213)
!10196 = !DILocalVariable(name: "name", arg: 1, scope: !10195, file: !10151, line: 58, type: !113)
!10197 = !DILocation(line: 58, column: 23, scope: !10195)
!10198 = !DILocalVariable(name: "len", scope: !10195, file: !10151, line: 60, type: !52)
!10199 = !DILocation(line: 60, column: 10, scope: !10195)
!10200 = !DILocalVariable(name: "prefix_len", scope: !10195, file: !10151, line: 61, type: !52)
!10201 = !DILocation(line: 61, column: 10, scope: !10195)
!10202 = !DILocation(line: 63, column: 22, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10195, file: !10151, line: 63, column: 3)
!10204 = !DILocation(line: 63, column: 14, scope: !10203)
!10205 = !DILocation(line: 63, column: 12, scope: !10203)
!10206 = !DILocation(line: 63, column: 8, scope: !10203)
!10207 = !DILocation(line: 63, column: 34, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10203, file: !10151, line: 63, column: 3)
!10209 = !DILocation(line: 63, column: 32, scope: !10208)
!10210 = !DILocation(line: 63, column: 38, scope: !10208)
!10211 = !DILocation(line: 63, column: 41, scope: !10208)
!10212 = !DILocation(line: 0, scope: !10208)
!10213 = !DILocation(line: 63, column: 3, scope: !10203)
!10214 = !DILocation(line: 64, column: 5, scope: !10208)
!10215 = !DILocation(line: 63, column: 70, scope: !10208)
!10216 = !DILocation(line: 63, column: 3, scope: !10208)
!10217 = distinct !{!10217, !10213, !10218}
!10218 = !DILocation(line: 64, column: 5, scope: !10203)
!10219 = !DILocation(line: 74, column: 10, scope: !10195)
!10220 = !DILocation(line: 74, column: 3, scope: !10195)
!10221 = distinct !DISubprogram(name: "strip_trailing_slashes", scope: !10222, file: !10222, line: 31, type: !10223, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1307, retainedNodes: !213)
!10222 = !DIFile(filename: "lib/stripslash.c", directory: "/home/mohamad/clone/coreutils")
!10223 = !DISubroutineType(types: !10224)
!10224 = !{!139, !7}
!10225 = !DILocalVariable(name: "file", arg: 1, scope: !10221, file: !10222, line: 31, type: !7)
!10226 = !DILocation(line: 31, column: 31, scope: !10221)
!10227 = !DILocalVariable(name: "base", scope: !10221, file: !10222, line: 33, type: !7)
!10228 = !DILocation(line: 33, column: 9, scope: !10221)
!10229 = !DILocation(line: 33, column: 32, scope: !10221)
!10230 = !DILocation(line: 33, column: 16, scope: !10221)
!10231 = !DILocalVariable(name: "base_lim", scope: !10221, file: !10222, line: 34, type: !7)
!10232 = !DILocation(line: 34, column: 9, scope: !10221)
!10233 = !DILocalVariable(name: "had_slash", scope: !10221, file: !10222, line: 35, type: !139)
!10234 = !DILocation(line: 35, column: 8, scope: !10221)
!10235 = !DILocation(line: 39, column: 10, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10221, file: !10222, line: 39, column: 7)
!10237 = !DILocation(line: 39, column: 9, scope: !10236)
!10238 = !DILocation(line: 39, column: 7, scope: !10221)
!10239 = !DILocation(line: 40, column: 12, scope: !10236)
!10240 = !DILocation(line: 40, column: 10, scope: !10236)
!10241 = !DILocation(line: 40, column: 5, scope: !10236)
!10242 = !DILocation(line: 41, column: 14, scope: !10221)
!10243 = !DILocation(line: 41, column: 31, scope: !10221)
!10244 = !DILocation(line: 41, column: 21, scope: !10221)
!10245 = !DILocation(line: 41, column: 19, scope: !10221)
!10246 = !DILocation(line: 41, column: 12, scope: !10221)
!10247 = !DILocation(line: 42, column: 17, scope: !10221)
!10248 = !DILocation(line: 42, column: 16, scope: !10221)
!10249 = !DILocation(line: 42, column: 26, scope: !10221)
!10250 = !DILocation(line: 42, column: 13, scope: !10221)
!10251 = !DILocation(line: 43, column: 4, scope: !10221)
!10252 = !DILocation(line: 43, column: 13, scope: !10221)
!10253 = !DILocation(line: 44, column: 10, scope: !10221)
!10254 = !DILocation(line: 44, column: 3, scope: !10221)
!10255 = distinct !DISubprogram(name: "fdadvise", scope: !10256, file: !10256, line: 31, type: !10257, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1310, retainedNodes: !213)
!10256 = !DIFile(filename: "lib/fadvise.c", directory: "/home/mohamad/clone/coreutils")
!10257 = !DISubroutineType(types: !10258)
!10258 = !{null, !5, !292, !292, !10259}
!10259 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !1314, line: 52, baseType: !1313)
!10260 = !DILocalVariable(name: "fd", arg: 1, scope: !10255, file: !10256, line: 31, type: !5)
!10261 = !DILocation(line: 31, column: 15, scope: !10255)
!10262 = !DILocalVariable(name: "offset", arg: 2, scope: !10255, file: !10256, line: 31, type: !292)
!10263 = !DILocation(line: 31, column: 25, scope: !10255)
!10264 = !DILocalVariable(name: "len", arg: 3, scope: !10255, file: !10256, line: 31, type: !292)
!10265 = !DILocation(line: 31, column: 39, scope: !10255)
!10266 = !DILocalVariable(name: "advice", arg: 4, scope: !10255, file: !10256, line: 31, type: !10259)
!10267 = !DILocation(line: 31, column: 54, scope: !10255)
!10268 = !DILocalVariable(name: "__x", scope: !10269, file: !10256, line: 34, type: !5)
!10269 = distinct !DILexicalBlock(scope: !10255, file: !10256, line: 34, column: 3)
!10270 = !DILocation(line: 34, column: 3, scope: !10269)
!10271 = !DILocation(line: 36, column: 1, scope: !10255)
!10272 = distinct !DISubprogram(name: "fadvise", scope: !10256, file: !10256, line: 39, type: !10273, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1310, retainedNodes: !213)
!10273 = !DISubroutineType(types: !10274)
!10274 = !{null, !10275, !10259}
!10275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10276, size: 64)
!10276 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !293, line: 48, baseType: !10277)
!10277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !10278)
!10278 = !{!10279, !10280, !10281, !10282, !10283, !10284, !10285, !10286, !10287, !10288, !10289, !10290, !10291, !10299, !10300, !10301, !10302, !10303, !10304, !10305, !10306, !10307, !10308, !10309, !10310, !10311, !10312, !10313, !10314}
!10279 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !10277, file: !2, line: 242, baseType: !5, size: 32)
!10280 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !10277, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!10281 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !10277, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!10282 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !10277, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !10277, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!10284 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !10277, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!10285 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !10277, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !10277, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!10287 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !10277, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!10288 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !10277, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!10289 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !10277, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!10290 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !10277, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!10291 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !10277, file: !2, line: 260, baseType: !10292, size: 64, offset: 768)
!10292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10293, size: 64)
!10293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !10294)
!10294 = !{!10295, !10296, !10298}
!10295 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !10293, file: !2, line: 157, baseType: !10292, size: 64)
!10296 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !10293, file: !2, line: 158, baseType: !10297, size: 64, offset: 64)
!10297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10277, size: 64)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !10293, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !10277, file: !2, line: 262, baseType: !10297, size: 64, offset: 832)
!10300 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !10277, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!10301 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !10277, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!10302 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !10277, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !10277, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !10277, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !10277, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !10277, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !10277, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!10308 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !10277, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!10309 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !10277, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!10310 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !10277, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!10311 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !10277, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!10312 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !10277, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!10313 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !10277, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!10314 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !10277, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!10315 = !DILocalVariable(name: "fp", arg: 1, scope: !10272, file: !10256, line: 39, type: !10275)
!10316 = !DILocation(line: 39, column: 16, scope: !10272)
!10317 = !DILocalVariable(name: "advice", arg: 2, scope: !10272, file: !10256, line: 39, type: !10259)
!10318 = !DILocation(line: 39, column: 30, scope: !10272)
!10319 = !DILocation(line: 41, column: 7, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10272, file: !10256, line: 41, column: 7)
!10321 = !DILocation(line: 41, column: 7, scope: !10272)
!10322 = !DILocation(line: 42, column: 23, scope: !10320)
!10323 = !DILocation(line: 42, column: 15, scope: !10320)
!10324 = !DILocation(line: 42, column: 34, scope: !10320)
!10325 = !DILocation(line: 42, column: 5, scope: !10320)
!10326 = !DILocation(line: 43, column: 1, scope: !10272)
!10327 = distinct !DISubprogram(name: "open_safer", scope: !10328, file: !10328, line: 29, type: !10329, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1322, retainedNodes: !213)
!10328 = !DIFile(filename: "lib/open-safer.c", directory: "/home/mohamad/clone/coreutils")
!10329 = !DISubroutineType(types: !10330)
!10330 = !{!5, !113, !5, null}
!10331 = !DILocalVariable(name: "file", arg: 1, scope: !10327, file: !10328, line: 29, type: !113)
!10332 = !DILocation(line: 29, column: 25, scope: !10327)
!10333 = !DILocalVariable(name: "flags", arg: 2, scope: !10327, file: !10328, line: 29, type: !5)
!10334 = !DILocation(line: 29, column: 35, scope: !10327)
!10335 = !DILocalVariable(name: "mode", scope: !10327, file: !10328, line: 31, type: !236)
!10336 = !DILocation(line: 31, column: 10, scope: !10327)
!10337 = !DILocation(line: 33, column: 7, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10327, file: !10328, line: 33, column: 7)
!10339 = !DILocation(line: 33, column: 13, scope: !10338)
!10340 = !DILocation(line: 33, column: 7, scope: !10327)
!10341 = !DILocalVariable(name: "ap", scope: !10342, file: !10328, line: 35, type: !1325)
!10342 = distinct !DILexicalBlock(scope: !10338, file: !10328, line: 34, column: 5)
!10343 = !DILocation(line: 35, column: 15, scope: !10342)
!10344 = !DILocation(line: 36, column: 7, scope: !10342)
!10345 = !DILocation(line: 40, column: 14, scope: !10342)
!10346 = !DILocation(line: 40, column: 12, scope: !10342)
!10347 = !DILocation(line: 42, column: 7, scope: !10342)
!10348 = !DILocation(line: 43, column: 5, scope: !10342)
!10349 = !DILocation(line: 45, column: 26, scope: !10327)
!10350 = !DILocation(line: 45, column: 32, scope: !10327)
!10351 = !DILocation(line: 45, column: 39, scope: !10327)
!10352 = !DILocation(line: 45, column: 20, scope: !10327)
!10353 = !DILocation(line: 45, column: 10, scope: !10327)
!10354 = !DILocation(line: 45, column: 3, scope: !10327)
!10355 = distinct !DISubprogram(name: "record_file", scope: !10356, file: !10356, line: 29, type: !10357, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1334, retainedNodes: !213)
!10356 = !DIFile(filename: "lib/file-set.c", directory: "/home/mohamad/clone/coreutils")
!10357 = !DISubroutineType(types: !10358)
!10358 = !{null, !238, !113, !10359}
!10359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10360, size: 64)
!10360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10361)
!10361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !10362)
!10362 = !{!10363, !10364, !10365, !10366, !10367, !10368, !10369, !10370, !10371, !10372, !10373, !10374, !10379, !10380, !10381}
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10361, file: !336, line: 48, baseType: !260, size: 64)
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10361, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10361, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!10366 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10361, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!10367 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10361, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10361, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!10369 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10361, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10361, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!10371 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10361, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10361, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!10373 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10361, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!10374 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10361, file: !336, line: 91, baseType: !10375, size: 128, offset: 576)
!10375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !10376)
!10376 = !{!10377, !10378}
!10377 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10375, file: !355, line: 122, baseType: !358, size: 64)
!10378 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10375, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!10379 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10361, file: !336, line: 92, baseType: !10375, size: 128, offset: 704)
!10380 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10361, file: !336, line: 93, baseType: !10375, size: 128, offset: 832)
!10381 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10361, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!10382 = !DILocalVariable(name: "ht", arg: 1, scope: !10355, file: !10356, line: 29, type: !238)
!10383 = !DILocation(line: 29, column: 26, scope: !10355)
!10384 = !DILocalVariable(name: "file", arg: 2, scope: !10355, file: !10356, line: 29, type: !113)
!10385 = !DILocation(line: 29, column: 42, scope: !10355)
!10386 = !DILocalVariable(name: "stats", arg: 3, scope: !10355, file: !10356, line: 29, type: !10359)
!10387 = !DILocation(line: 29, column: 67, scope: !10355)
!10388 = !DILocalVariable(name: "ent", scope: !10355, file: !10356, line: 31, type: !1337)
!10389 = !DILocation(line: 31, column: 20, scope: !10355)
!10390 = !DILocation(line: 33, column: 7, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10355, file: !10356, line: 33, column: 7)
!10392 = !DILocation(line: 33, column: 10, scope: !10391)
!10393 = !DILocation(line: 33, column: 7, scope: !10355)
!10394 = !DILocation(line: 34, column: 5, scope: !10391)
!10395 = !DILocation(line: 36, column: 9, scope: !10355)
!10396 = !DILocation(line: 36, column: 7, scope: !10355)
!10397 = !DILocation(line: 37, column: 24, scope: !10355)
!10398 = !DILocation(line: 37, column: 15, scope: !10355)
!10399 = !DILocation(line: 37, column: 3, scope: !10355)
!10400 = !DILocation(line: 37, column: 8, scope: !10355)
!10401 = !DILocation(line: 37, column: 13, scope: !10355)
!10402 = !DILocation(line: 38, column: 17, scope: !10355)
!10403 = !DILocation(line: 38, column: 24, scope: !10355)
!10404 = !DILocation(line: 38, column: 3, scope: !10355)
!10405 = !DILocation(line: 38, column: 8, scope: !10355)
!10406 = !DILocation(line: 38, column: 15, scope: !10355)
!10407 = !DILocation(line: 39, column: 17, scope: !10355)
!10408 = !DILocation(line: 39, column: 24, scope: !10355)
!10409 = !DILocation(line: 39, column: 3, scope: !10355)
!10410 = !DILocation(line: 39, column: 8, scope: !10355)
!10411 = !DILocation(line: 39, column: 15, scope: !10355)
!10412 = !DILocalVariable(name: "ent_from_table", scope: !10413, file: !10356, line: 42, type: !1337)
!10413 = distinct !DILexicalBlock(scope: !10355, file: !10356, line: 41, column: 3)
!10414 = !DILocation(line: 42, column: 22, scope: !10413)
!10415 = !DILocation(line: 42, column: 52, scope: !10413)
!10416 = !DILocation(line: 42, column: 56, scope: !10413)
!10417 = !DILocation(line: 42, column: 39, scope: !10413)
!10418 = !DILocation(line: 43, column: 9, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10413, file: !10356, line: 43, column: 9)
!10420 = !DILocation(line: 43, column: 24, scope: !10419)
!10421 = !DILocation(line: 43, column: 9, scope: !10413)
!10422 = !DILocation(line: 46, column: 9, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10419, file: !10356, line: 44, column: 7)
!10424 = !DILocation(line: 49, column: 9, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10413, file: !10356, line: 49, column: 9)
!10426 = !DILocation(line: 49, column: 27, scope: !10425)
!10427 = !DILocation(line: 49, column: 24, scope: !10425)
!10428 = !DILocation(line: 49, column: 9, scope: !10413)
!10429 = !DILocation(line: 53, column: 22, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10425, file: !10356, line: 50, column: 7)
!10431 = !DILocation(line: 53, column: 9, scope: !10430)
!10432 = !DILocation(line: 54, column: 7, scope: !10430)
!10433 = !DILocation(line: 56, column: 1, scope: !10355)
!10434 = distinct !DISubprogram(name: "seen_file", scope: !10356, file: !10356, line: 61, type: !10435, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1334, retainedNodes: !213)
!10435 = !DISubroutineType(types: !10436)
!10436 = !{!139, !10437, !113, !10359}
!10437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10438, size: 64)
!10438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!10439 = !DILocalVariable(name: "ht", arg: 1, scope: !10434, file: !10356, line: 61, type: !10437)
!10440 = !DILocation(line: 61, column: 30, scope: !10434)
!10441 = !DILocalVariable(name: "file", arg: 2, scope: !10434, file: !10356, line: 61, type: !113)
!10442 = !DILocation(line: 61, column: 46, scope: !10434)
!10443 = !DILocalVariable(name: "stats", arg: 3, scope: !10434, file: !10356, line: 62, type: !10359)
!10444 = !DILocation(line: 62, column: 31, scope: !10434)
!10445 = !DILocalVariable(name: "new_ent", scope: !10434, file: !10356, line: 64, type: !1338)
!10446 = !DILocation(line: 64, column: 19, scope: !10434)
!10447 = !DILocation(line: 66, column: 7, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10434, file: !10356, line: 66, column: 7)
!10449 = !DILocation(line: 66, column: 10, scope: !10448)
!10450 = !DILocation(line: 66, column: 7, scope: !10434)
!10451 = !DILocation(line: 67, column: 5, scope: !10448)
!10452 = !DILocation(line: 69, column: 27, scope: !10434)
!10453 = !DILocation(line: 69, column: 11, scope: !10434)
!10454 = !DILocation(line: 69, column: 16, scope: !10434)
!10455 = !DILocation(line: 70, column: 20, scope: !10434)
!10456 = !DILocation(line: 70, column: 27, scope: !10434)
!10457 = !DILocation(line: 70, column: 11, scope: !10434)
!10458 = !DILocation(line: 70, column: 18, scope: !10434)
!10459 = !DILocation(line: 71, column: 20, scope: !10434)
!10460 = !DILocation(line: 71, column: 27, scope: !10434)
!10461 = !DILocation(line: 71, column: 11, scope: !10434)
!10462 = !DILocation(line: 71, column: 18, scope: !10434)
!10463 = !DILocation(line: 73, column: 25, scope: !10434)
!10464 = !DILocation(line: 73, column: 29, scope: !10434)
!10465 = !DILocation(line: 73, column: 12, scope: !10434)
!10466 = !DILocation(line: 73, column: 11, scope: !10434)
!10467 = !DILocation(line: 73, column: 10, scope: !10434)
!10468 = !DILocation(line: 73, column: 3, scope: !10434)
!10469 = !DILocation(line: 74, column: 1, scope: !10434)
!10470 = distinct !DISubprogram(name: "file_type", scope: !10471, file: !10471, line: 29, type: !10472, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1344, retainedNodes: !213)
!10471 = !DIFile(filename: "lib/file-type.c", directory: "/home/mohamad/clone/coreutils")
!10472 = !DISubroutineType(types: !10473)
!10473 = !{!113, !10474}
!10474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10475, size: 64)
!10475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10476)
!10476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !10477)
!10477 = !{!10478, !10479, !10480, !10481, !10482, !10483, !10484, !10485, !10486, !10487, !10488, !10489, !10494, !10495, !10496}
!10478 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10476, file: !336, line: 48, baseType: !260, size: 64)
!10479 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10476, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!10480 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10476, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!10481 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10476, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!10482 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10476, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!10483 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10476, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!10484 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10476, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!10485 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10476, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!10486 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10476, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!10487 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10476, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!10488 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10476, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!10489 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10476, file: !336, line: 91, baseType: !10490, size: 128, offset: 576)
!10490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !10491)
!10491 = !{!10492, !10493}
!10492 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10490, file: !355, line: 122, baseType: !358, size: 64)
!10493 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10490, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!10494 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10476, file: !336, line: 92, baseType: !10490, size: 128, offset: 704)
!10495 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10476, file: !336, line: 93, baseType: !10490, size: 128, offset: 832)
!10496 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10476, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!10497 = !DILocalVariable(name: "st", arg: 1, scope: !10470, file: !10471, line: 29, type: !10474)
!10498 = !DILocation(line: 29, column: 31, scope: !10470)
!10499 = !DILocation(line: 39, column: 7, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10470, file: !10471, line: 39, column: 7)
!10501 = !DILocation(line: 39, column: 7, scope: !10470)
!10502 = !DILocation(line: 40, column: 12, scope: !10500)
!10503 = !DILocation(line: 40, column: 16, scope: !10500)
!10504 = !DILocation(line: 40, column: 24, scope: !10500)
!10505 = !DILocation(line: 40, column: 31, scope: !10500)
!10506 = !DILocation(line: 40, column: 57, scope: !10500)
!10507 = !DILocation(line: 40, column: 5, scope: !10500)
!10508 = !DILocation(line: 42, column: 7, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10470, file: !10471, line: 42, column: 7)
!10510 = !DILocation(line: 42, column: 7, scope: !10470)
!10511 = !DILocation(line: 43, column: 12, scope: !10509)
!10512 = !DILocation(line: 43, column: 5, scope: !10509)
!10513 = !DILocation(line: 45, column: 7, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10470, file: !10471, line: 45, column: 7)
!10515 = !DILocation(line: 45, column: 7, scope: !10470)
!10516 = !DILocation(line: 46, column: 12, scope: !10514)
!10517 = !DILocation(line: 46, column: 5, scope: !10514)
!10518 = !DILocation(line: 51, column: 7, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10470, file: !10471, line: 51, column: 7)
!10520 = !DILocation(line: 51, column: 7, scope: !10470)
!10521 = !DILocation(line: 52, column: 12, scope: !10519)
!10522 = !DILocation(line: 52, column: 5, scope: !10519)
!10523 = !DILocation(line: 54, column: 7, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10470, file: !10471, line: 54, column: 7)
!10525 = !DILocation(line: 54, column: 7, scope: !10470)
!10526 = !DILocation(line: 55, column: 12, scope: !10524)
!10527 = !DILocation(line: 55, column: 5, scope: !10524)
!10528 = !DILocation(line: 57, column: 7, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10470, file: !10471, line: 57, column: 7)
!10530 = !DILocation(line: 57, column: 7, scope: !10470)
!10531 = !DILocation(line: 58, column: 12, scope: !10529)
!10532 = !DILocation(line: 58, column: 5, scope: !10529)
!10533 = !DILocation(line: 65, column: 7, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10470, file: !10471, line: 65, column: 7)
!10535 = !DILocation(line: 65, column: 7, scope: !10470)
!10536 = !DILocation(line: 66, column: 12, scope: !10534)
!10537 = !DILocation(line: 66, column: 5, scope: !10534)
!10538 = !DILocation(line: 68, column: 7, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10470, file: !10471, line: 68, column: 7)
!10540 = !DILocation(line: 68, column: 7, scope: !10470)
!10541 = !DILocation(line: 69, column: 12, scope: !10539)
!10542 = !DILocation(line: 69, column: 5, scope: !10539)
!10543 = !DILocation(line: 74, column: 7, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10470, file: !10471, line: 74, column: 7)
!10545 = !DILocation(line: 74, column: 7, scope: !10470)
!10546 = !DILocation(line: 75, column: 12, scope: !10544)
!10547 = !DILocation(line: 75, column: 5, scope: !10544)
!10548 = !DILocation(line: 104, column: 7, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10470, file: !10471, line: 104, column: 7)
!10550 = !DILocation(line: 104, column: 7, scope: !10470)
!10551 = !DILocation(line: 105, column: 12, scope: !10549)
!10552 = !DILocation(line: 105, column: 5, scope: !10549)
!10553 = !DILocation(line: 110, column: 10, scope: !10470)
!10554 = !DILocation(line: 110, column: 3, scope: !10470)
!10555 = !DILocation(line: 111, column: 1, scope: !10470)
!10556 = distinct !DISubprogram(name: "strmode", scope: !10557, file: !10557, line: 96, type: !10558, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1347, retainedNodes: !213)
!10557 = !DIFile(filename: "lib/filemode.c", directory: "/home/mohamad/clone/coreutils")
!10558 = !DISubroutineType(types: !10559)
!10559 = !{null, !236, !7}
!10560 = !DILocalVariable(name: "mode", arg: 1, scope: !10556, file: !10557, line: 96, type: !236)
!10561 = !DILocation(line: 96, column: 17, scope: !10556)
!10562 = !DILocalVariable(name: "str", arg: 2, scope: !10556, file: !10557, line: 96, type: !7)
!10563 = !DILocation(line: 96, column: 29, scope: !10556)
!10564 = !DILocation(line: 98, column: 22, scope: !10556)
!10565 = !DILocation(line: 98, column: 12, scope: !10556)
!10566 = !DILocation(line: 98, column: 3, scope: !10556)
!10567 = !DILocation(line: 98, column: 10, scope: !10556)
!10568 = !DILocation(line: 99, column: 12, scope: !10556)
!10569 = !DILocation(line: 99, column: 17, scope: !10556)
!10570 = !DILocation(line: 99, column: 3, scope: !10556)
!10571 = !DILocation(line: 99, column: 10, scope: !10556)
!10572 = !DILocation(line: 100, column: 12, scope: !10556)
!10573 = !DILocation(line: 100, column: 17, scope: !10556)
!10574 = !DILocation(line: 100, column: 3, scope: !10556)
!10575 = !DILocation(line: 100, column: 10, scope: !10556)
!10576 = !DILocation(line: 101, column: 13, scope: !10556)
!10577 = !DILocation(line: 101, column: 18, scope: !10556)
!10578 = !DILocation(line: 102, column: 16, scope: !10556)
!10579 = !DILocation(line: 102, column: 21, scope: !10556)
!10580 = !DILocation(line: 103, column: 16, scope: !10556)
!10581 = !DILocation(line: 103, column: 21, scope: !10556)
!10582 = !DILocation(line: 101, column: 12, scope: !10556)
!10583 = !DILocation(line: 101, column: 3, scope: !10556)
!10584 = !DILocation(line: 101, column: 10, scope: !10556)
!10585 = !DILocation(line: 104, column: 12, scope: !10556)
!10586 = !DILocation(line: 104, column: 17, scope: !10556)
!10587 = !DILocation(line: 104, column: 3, scope: !10556)
!10588 = !DILocation(line: 104, column: 10, scope: !10556)
!10589 = !DILocation(line: 105, column: 12, scope: !10556)
!10590 = !DILocation(line: 105, column: 17, scope: !10556)
!10591 = !DILocation(line: 105, column: 3, scope: !10556)
!10592 = !DILocation(line: 105, column: 10, scope: !10556)
!10593 = !DILocation(line: 106, column: 13, scope: !10556)
!10594 = !DILocation(line: 106, column: 18, scope: !10556)
!10595 = !DILocation(line: 107, column: 16, scope: !10556)
!10596 = !DILocation(line: 107, column: 21, scope: !10556)
!10597 = !DILocation(line: 108, column: 16, scope: !10556)
!10598 = !DILocation(line: 108, column: 21, scope: !10556)
!10599 = !DILocation(line: 106, column: 12, scope: !10556)
!10600 = !DILocation(line: 106, column: 3, scope: !10556)
!10601 = !DILocation(line: 106, column: 10, scope: !10556)
!10602 = !DILocation(line: 109, column: 12, scope: !10556)
!10603 = !DILocation(line: 109, column: 17, scope: !10556)
!10604 = !DILocation(line: 109, column: 3, scope: !10556)
!10605 = !DILocation(line: 109, column: 10, scope: !10556)
!10606 = !DILocation(line: 110, column: 12, scope: !10556)
!10607 = !DILocation(line: 110, column: 17, scope: !10556)
!10608 = !DILocation(line: 110, column: 3, scope: !10556)
!10609 = !DILocation(line: 110, column: 10, scope: !10556)
!10610 = !DILocation(line: 111, column: 13, scope: !10556)
!10611 = !DILocation(line: 111, column: 18, scope: !10556)
!10612 = !DILocation(line: 112, column: 16, scope: !10556)
!10613 = !DILocation(line: 112, column: 21, scope: !10556)
!10614 = !DILocation(line: 113, column: 16, scope: !10556)
!10615 = !DILocation(line: 113, column: 21, scope: !10556)
!10616 = !DILocation(line: 111, column: 12, scope: !10556)
!10617 = !DILocation(line: 111, column: 3, scope: !10556)
!10618 = !DILocation(line: 111, column: 10, scope: !10556)
!10619 = !DILocation(line: 114, column: 3, scope: !10556)
!10620 = !DILocation(line: 114, column: 11, scope: !10556)
!10621 = !DILocation(line: 115, column: 3, scope: !10556)
!10622 = !DILocation(line: 115, column: 11, scope: !10556)
!10623 = !DILocation(line: 116, column: 1, scope: !10556)
!10624 = distinct !DISubprogram(name: "ftypelet", scope: !10557, file: !10557, line: 54, type: !10625, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1347, retainedNodes: !213)
!10625 = !DISubroutineType(types: !10626)
!10626 = !{!8, !236}
!10627 = !DILocalVariable(name: "bits", arg: 1, scope: !10624, file: !10557, line: 54, type: !236)
!10628 = !DILocation(line: 54, column: 18, scope: !10624)
!10629 = !DILocation(line: 57, column: 7, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10624, file: !10557, line: 57, column: 7)
!10631 = !DILocation(line: 57, column: 7, scope: !10624)
!10632 = !DILocation(line: 58, column: 5, scope: !10630)
!10633 = !DILocation(line: 59, column: 7, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10624, file: !10557, line: 59, column: 7)
!10635 = !DILocation(line: 59, column: 7, scope: !10624)
!10636 = !DILocation(line: 60, column: 5, scope: !10634)
!10637 = !DILocation(line: 63, column: 7, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10624, file: !10557, line: 63, column: 7)
!10639 = !DILocation(line: 63, column: 7, scope: !10624)
!10640 = !DILocation(line: 64, column: 5, scope: !10638)
!10641 = !DILocation(line: 65, column: 7, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10624, file: !10557, line: 65, column: 7)
!10643 = !DILocation(line: 65, column: 7, scope: !10624)
!10644 = !DILocation(line: 66, column: 5, scope: !10642)
!10645 = !DILocation(line: 67, column: 7, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10624, file: !10557, line: 67, column: 7)
!10647 = !DILocation(line: 67, column: 7, scope: !10624)
!10648 = !DILocation(line: 68, column: 5, scope: !10646)
!10649 = !DILocation(line: 69, column: 7, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10624, file: !10557, line: 69, column: 7)
!10651 = !DILocation(line: 69, column: 7, scope: !10624)
!10652 = !DILocation(line: 70, column: 5, scope: !10650)
!10653 = !DILocation(line: 73, column: 7, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10624, file: !10557, line: 73, column: 7)
!10655 = !DILocation(line: 73, column: 7, scope: !10624)
!10656 = !DILocation(line: 74, column: 5, scope: !10654)
!10657 = !DILocation(line: 90, column: 3, scope: !10624)
!10658 = !DILocation(line: 91, column: 1, scope: !10624)
!10659 = distinct !DISubprogram(name: "filemodestring", scope: !10557, file: !10557, line: 166, type: !10660, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1347, retainedNodes: !213)
!10660 = !DISubroutineType(types: !10661)
!10661 = !{null, !10662, !7}
!10662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10663, size: 64)
!10663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10664)
!10664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !10665)
!10665 = !{!10666, !10667, !10668, !10669, !10670, !10671, !10672, !10673, !10674, !10675, !10676, !10677, !10682, !10683, !10684}
!10666 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10664, file: !336, line: 48, baseType: !260, size: 64)
!10667 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10664, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!10668 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10664, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!10669 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10664, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!10670 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10664, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!10671 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10664, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!10672 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10664, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!10673 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10664, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!10674 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10664, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!10675 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10664, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!10676 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10664, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!10677 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10664, file: !336, line: 91, baseType: !10678, size: 128, offset: 576)
!10678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !10679)
!10679 = !{!10680, !10681}
!10680 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10678, file: !355, line: 122, baseType: !358, size: 64)
!10681 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10678, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!10682 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10664, file: !336, line: 92, baseType: !10678, size: 128, offset: 704)
!10683 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10664, file: !336, line: 93, baseType: !10678, size: 128, offset: 832)
!10684 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10664, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!10685 = !DILocalVariable(name: "statp", arg: 1, scope: !10659, file: !10557, line: 166, type: !10662)
!10686 = !DILocation(line: 166, column: 36, scope: !10659)
!10687 = !DILocalVariable(name: "str", arg: 2, scope: !10659, file: !10557, line: 166, type: !7)
!10688 = !DILocation(line: 166, column: 49, scope: !10659)
!10689 = !DILocation(line: 168, column: 12, scope: !10659)
!10690 = !DILocation(line: 168, column: 19, scope: !10659)
!10691 = !DILocation(line: 168, column: 28, scope: !10659)
!10692 = !DILocation(line: 168, column: 3, scope: !10659)
!10693 = !DILocation(line: 170, column: 7, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10659, file: !10557, line: 170, column: 7)
!10695 = !DILocation(line: 170, column: 7, scope: !10659)
!10696 = !DILocation(line: 171, column: 5, scope: !10694)
!10697 = !DILocation(line: 171, column: 12, scope: !10694)
!10698 = !DILocation(line: 174, column: 12, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10700, file: !10557, line: 174, column: 12)
!10700 = distinct !DILexicalBlock(scope: !10694, file: !10557, line: 172, column: 12)
!10701 = !DILocation(line: 174, column: 12, scope: !10700)
!10702 = !DILocation(line: 175, column: 5, scope: !10699)
!10703 = !DILocation(line: 175, column: 12, scope: !10699)
!10704 = !DILocation(line: 176, column: 12, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10699, file: !10557, line: 176, column: 12)
!10706 = !DILocation(line: 176, column: 12, scope: !10699)
!10707 = !DILocation(line: 177, column: 5, scope: !10705)
!10708 = !DILocation(line: 177, column: 12, scope: !10705)
!10709 = !DILocation(line: 180, column: 1, scope: !10659)
!10710 = distinct !DISubprogram(name: "file_name_concat", scope: !10711, file: !10711, line: 35, type: !10712, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1350, retainedNodes: !213)
!10711 = !DIFile(filename: "lib/filenamecat.c", directory: "/home/mohamad/clone/coreutils")
!10712 = !DISubroutineType(types: !10713)
!10713 = !{!7, !113, !113, !140}
!10714 = !DILocalVariable(name: "dir", arg: 1, scope: !10710, file: !10711, line: 35, type: !113)
!10715 = !DILocation(line: 35, column: 31, scope: !10710)
!10716 = !DILocalVariable(name: "base", arg: 2, scope: !10710, file: !10711, line: 35, type: !113)
!10717 = !DILocation(line: 35, column: 48, scope: !10710)
!10718 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10710, file: !10711, line: 35, type: !140)
!10719 = !DILocation(line: 35, column: 61, scope: !10710)
!10720 = !DILocalVariable(name: "p", scope: !10710, file: !10711, line: 37, type: !7)
!10721 = !DILocation(line: 37, column: 9, scope: !10710)
!10722 = !DILocation(line: 37, column: 32, scope: !10710)
!10723 = !DILocation(line: 37, column: 37, scope: !10710)
!10724 = !DILocation(line: 37, column: 43, scope: !10710)
!10725 = !DILocation(line: 37, column: 13, scope: !10710)
!10726 = !DILocation(line: 38, column: 7, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10710, file: !10711, line: 38, column: 7)
!10728 = !DILocation(line: 38, column: 9, scope: !10727)
!10729 = !DILocation(line: 38, column: 7, scope: !10710)
!10730 = !DILocation(line: 39, column: 5, scope: !10727)
!10731 = !DILocation(line: 40, column: 10, scope: !10710)
!10732 = !DILocation(line: 40, column: 3, scope: !10710)
!10733 = distinct !DISubprogram(name: "mfile_name_concat", scope: !10734, file: !10734, line: 47, type: !10712, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1353, retainedNodes: !213)
!10734 = !DIFile(filename: "lib/filenamecat-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!10735 = !DILocalVariable(name: "dir", arg: 1, scope: !10733, file: !10734, line: 47, type: !113)
!10736 = !DILocation(line: 47, column: 32, scope: !10733)
!10737 = !DILocalVariable(name: "base", arg: 2, scope: !10733, file: !10734, line: 47, type: !113)
!10738 = !DILocation(line: 47, column: 49, scope: !10733)
!10739 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10733, file: !10734, line: 47, type: !140)
!10740 = !DILocation(line: 47, column: 62, scope: !10733)
!10741 = !DILocalVariable(name: "dirbase", scope: !10733, file: !10734, line: 49, type: !113)
!10742 = !DILocation(line: 49, column: 15, scope: !10733)
!10743 = !DILocation(line: 49, column: 41, scope: !10733)
!10744 = !DILocation(line: 49, column: 25, scope: !10733)
!10745 = !DILocalVariable(name: "dirbaselen", scope: !10733, file: !10734, line: 50, type: !52)
!10746 = !DILocation(line: 50, column: 10, scope: !10733)
!10747 = !DILocation(line: 50, column: 33, scope: !10733)
!10748 = !DILocation(line: 50, column: 23, scope: !10733)
!10749 = !DILocalVariable(name: "dirlen", scope: !10733, file: !10734, line: 51, type: !52)
!10750 = !DILocation(line: 51, column: 10, scope: !10733)
!10751 = !DILocation(line: 51, column: 19, scope: !10733)
!10752 = !DILocation(line: 51, column: 29, scope: !10733)
!10753 = !DILocation(line: 51, column: 27, scope: !10733)
!10754 = !DILocation(line: 51, column: 35, scope: !10733)
!10755 = !DILocation(line: 51, column: 33, scope: !10733)
!10756 = !DILocalVariable(name: "baselen", scope: !10733, file: !10734, line: 52, type: !52)
!10757 = !DILocation(line: 52, column: 10, scope: !10733)
!10758 = !DILocation(line: 52, column: 28, scope: !10733)
!10759 = !DILocation(line: 52, column: 20, scope: !10733)
!10760 = !DILocalVariable(name: "sep", scope: !10733, file: !10734, line: 53, type: !8)
!10761 = !DILocation(line: 53, column: 8, scope: !10733)
!10762 = !DILocation(line: 54, column: 7, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10733, file: !10734, line: 54, column: 7)
!10764 = !DILocation(line: 54, column: 7, scope: !10733)
!10765 = !DILocation(line: 57, column: 13, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10767, file: !10734, line: 57, column: 11)
!10767 = distinct !DILexicalBlock(scope: !10763, file: !10734, line: 55, column: 5)
!10768 = !DILocation(line: 57, column: 39, scope: !10766)
!10769 = !DILocation(line: 57, column: 44, scope: !10766)
!10770 = !DILocation(line: 57, column: 11, scope: !10767)
!10771 = !DILocation(line: 58, column: 13, scope: !10766)
!10772 = !DILocation(line: 58, column: 9, scope: !10766)
!10773 = !DILocation(line: 59, column: 5, scope: !10767)
!10774 = !DILocation(line: 60, column: 12, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10763, file: !10734, line: 60, column: 12)
!10776 = !DILocation(line: 60, column: 12, scope: !10763)
!10777 = !DILocation(line: 67, column: 11, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10775, file: !10734, line: 61, column: 5)
!10779 = !DILocation(line: 68, column: 5, scope: !10778)
!10780 = !DILocalVariable(name: "p_concat", scope: !10733, file: !10734, line: 70, type: !7)
!10781 = !DILocation(line: 70, column: 9, scope: !10733)
!10782 = !DILocation(line: 70, column: 28, scope: !10733)
!10783 = !DILocation(line: 70, column: 38, scope: !10733)
!10784 = !DILocation(line: 70, column: 42, scope: !10733)
!10785 = !DILocation(line: 70, column: 37, scope: !10733)
!10786 = !DILocation(line: 70, column: 35, scope: !10733)
!10787 = !DILocation(line: 70, column: 54, scope: !10733)
!10788 = !DILocation(line: 70, column: 52, scope: !10733)
!10789 = !DILocation(line: 70, column: 62, scope: !10733)
!10790 = !DILocation(line: 70, column: 20, scope: !10733)
!10791 = !DILocalVariable(name: "p", scope: !10733, file: !10734, line: 71, type: !7)
!10792 = !DILocation(line: 71, column: 9, scope: !10733)
!10793 = !DILocation(line: 73, column: 7, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10733, file: !10734, line: 73, column: 7)
!10795 = !DILocation(line: 73, column: 16, scope: !10794)
!10796 = !DILocation(line: 73, column: 7, scope: !10733)
!10797 = !DILocation(line: 74, column: 5, scope: !10794)
!10798 = !DILocation(line: 76, column: 16, scope: !10733)
!10799 = !DILocation(line: 76, column: 26, scope: !10733)
!10800 = !DILocation(line: 76, column: 31, scope: !10733)
!10801 = !DILocation(line: 76, column: 7, scope: !10733)
!10802 = !DILocation(line: 76, column: 5, scope: !10733)
!10803 = !DILocation(line: 77, column: 8, scope: !10733)
!10804 = !DILocation(line: 77, column: 4, scope: !10733)
!10805 = !DILocation(line: 77, column: 6, scope: !10733)
!10806 = !DILocation(line: 78, column: 8, scope: !10733)
!10807 = !DILocation(line: 78, column: 12, scope: !10733)
!10808 = !DILocation(line: 78, column: 5, scope: !10733)
!10809 = !DILocation(line: 80, column: 7, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10733, file: !10734, line: 80, column: 7)
!10811 = !DILocation(line: 80, column: 7, scope: !10733)
!10812 = !DILocation(line: 81, column: 23, scope: !10810)
!10813 = !DILocation(line: 81, column: 6, scope: !10810)
!10814 = !DILocation(line: 81, column: 21, scope: !10810)
!10815 = !DILocation(line: 81, column: 5, scope: !10810)
!10816 = !DILocation(line: 83, column: 16, scope: !10733)
!10817 = !DILocation(line: 83, column: 19, scope: !10733)
!10818 = !DILocation(line: 83, column: 25, scope: !10733)
!10819 = !DILocation(line: 83, column: 7, scope: !10733)
!10820 = !DILocation(line: 83, column: 5, scope: !10733)
!10821 = !DILocation(line: 84, column: 4, scope: !10733)
!10822 = !DILocation(line: 84, column: 6, scope: !10733)
!10823 = !DILocation(line: 86, column: 10, scope: !10733)
!10824 = !DILocation(line: 86, column: 3, scope: !10733)
!10825 = !DILocation(line: 87, column: 1, scope: !10733)
!10826 = distinct !DISubprogram(name: "full_write", scope: !10827, file: !10827, line: 58, type: !10828, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1356, retainedNodes: !213)
!10827 = !DIFile(filename: "lib/full-write.c", directory: "/home/mohamad/clone/coreutils")
!10828 = !DISubroutineType(types: !10829)
!10829 = !{!52, !5, !553, !52}
!10830 = !DILocalVariable(name: "fd", arg: 1, scope: !10826, file: !10827, line: 58, type: !5)
!10831 = !DILocation(line: 58, column: 14, scope: !10826)
!10832 = !DILocalVariable(name: "buf", arg: 2, scope: !10826, file: !10827, line: 58, type: !553)
!10833 = !DILocation(line: 58, column: 30, scope: !10826)
!10834 = !DILocalVariable(name: "count", arg: 3, scope: !10826, file: !10827, line: 58, type: !52)
!10835 = !DILocation(line: 58, column: 42, scope: !10826)
!10836 = !DILocalVariable(name: "total", scope: !10826, file: !10827, line: 60, type: !52)
!10837 = !DILocation(line: 60, column: 10, scope: !10826)
!10838 = !DILocalVariable(name: "ptr", scope: !10826, file: !10827, line: 61, type: !113)
!10839 = !DILocation(line: 61, column: 15, scope: !10826)
!10840 = !DILocation(line: 61, column: 36, scope: !10826)
!10841 = !DILocation(line: 63, column: 3, scope: !10826)
!10842 = !DILocation(line: 63, column: 10, scope: !10826)
!10843 = !DILocation(line: 63, column: 16, scope: !10826)
!10844 = !DILocalVariable(name: "n_rw", scope: !10845, file: !10827, line: 65, type: !52)
!10845 = distinct !DILexicalBlock(scope: !10826, file: !10827, line: 64, column: 5)
!10846 = !DILocation(line: 65, column: 14, scope: !10845)
!10847 = !DILocation(line: 65, column: 30, scope: !10845)
!10848 = !DILocation(line: 65, column: 34, scope: !10845)
!10849 = !DILocation(line: 65, column: 39, scope: !10845)
!10850 = !DILocation(line: 65, column: 21, scope: !10845)
!10851 = !DILocation(line: 66, column: 11, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10845, file: !10827, line: 66, column: 11)
!10853 = !DILocation(line: 66, column: 16, scope: !10852)
!10854 = !DILocation(line: 66, column: 11, scope: !10845)
!10855 = !DILocation(line: 67, column: 9, scope: !10852)
!10856 = !DILocation(line: 68, column: 11, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10845, file: !10827, line: 68, column: 11)
!10858 = !DILocation(line: 68, column: 16, scope: !10857)
!10859 = !DILocation(line: 68, column: 11, scope: !10845)
!10860 = !DILocation(line: 70, column: 11, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10857, file: !10827, line: 69, column: 9)
!10862 = !DILocation(line: 70, column: 17, scope: !10861)
!10863 = !DILocation(line: 71, column: 11, scope: !10861)
!10864 = !DILocation(line: 73, column: 16, scope: !10845)
!10865 = !DILocation(line: 73, column: 13, scope: !10845)
!10866 = !DILocation(line: 74, column: 14, scope: !10845)
!10867 = !DILocation(line: 74, column: 11, scope: !10845)
!10868 = !DILocation(line: 75, column: 16, scope: !10845)
!10869 = !DILocation(line: 75, column: 13, scope: !10845)
!10870 = distinct !{!10870, !10841, !10871}
!10871 = !DILocation(line: 76, column: 5, scope: !10826)
!10872 = !DILocation(line: 78, column: 10, scope: !10826)
!10873 = !DILocation(line: 78, column: 3, scope: !10826)
!10874 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !677, file: !677, line: 150, type: !10875, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!10875 = !DISubroutineType(types: !10876)
!10876 = !{!52, !10877}
!10877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!10878 = !DILocalVariable(name: "table", arg: 1, scope: !10874, file: !677, line: 150, type: !10877)
!10879 = !DILocation(line: 150, column: 39, scope: !10874)
!10880 = !DILocation(line: 152, column: 10, scope: !10874)
!10881 = !DILocation(line: 152, column: 17, scope: !10874)
!10882 = !DILocation(line: 152, column: 3, scope: !10874)
!10883 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !677, file: !677, line: 158, type: !10875, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!10884 = !DILocalVariable(name: "table", arg: 1, scope: !10883, file: !677, line: 158, type: !10877)
!10885 = !DILocation(line: 158, column: 44, scope: !10883)
!10886 = !DILocation(line: 160, column: 10, scope: !10883)
!10887 = !DILocation(line: 160, column: 17, scope: !10883)
!10888 = !DILocation(line: 160, column: 3, scope: !10883)
!10889 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !677, file: !677, line: 166, type: !10875, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!10890 = !DILocalVariable(name: "table", arg: 1, scope: !10889, file: !677, line: 166, type: !10877)
!10891 = !DILocation(line: 166, column: 39, scope: !10889)
!10892 = !DILocation(line: 168, column: 10, scope: !10889)
!10893 = !DILocation(line: 168, column: 17, scope: !10889)
!10894 = !DILocation(line: 168, column: 3, scope: !10889)
!10895 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !677, file: !677, line: 174, type: !10875, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!10896 = !DILocalVariable(name: "table", arg: 1, scope: !10895, file: !677, line: 174, type: !10877)
!10897 = !DILocation(line: 174, column: 47, scope: !10895)
!10898 = !DILocalVariable(name: "bucket", scope: !10895, file: !677, line: 176, type: !686)
!10899 = !DILocation(line: 176, column: 28, scope: !10895)
!10900 = !DILocalVariable(name: "max_bucket_length", scope: !10895, file: !677, line: 177, type: !52)
!10901 = !DILocation(line: 177, column: 10, scope: !10895)
!10902 = !DILocation(line: 179, column: 17, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10895, file: !677, line: 179, column: 3)
!10904 = !DILocation(line: 179, column: 24, scope: !10903)
!10905 = !DILocation(line: 179, column: 15, scope: !10903)
!10906 = !DILocation(line: 179, column: 8, scope: !10903)
!10907 = !DILocation(line: 179, column: 32, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10903, file: !677, line: 179, column: 3)
!10909 = !DILocation(line: 179, column: 41, scope: !10908)
!10910 = !DILocation(line: 179, column: 48, scope: !10908)
!10911 = !DILocation(line: 179, column: 39, scope: !10908)
!10912 = !DILocation(line: 179, column: 3, scope: !10903)
!10913 = !DILocation(line: 181, column: 11, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10915, file: !677, line: 181, column: 11)
!10915 = distinct !DILexicalBlock(scope: !10908, file: !677, line: 180, column: 5)
!10916 = !DILocation(line: 181, column: 19, scope: !10914)
!10917 = !DILocation(line: 181, column: 11, scope: !10915)
!10918 = !DILocalVariable(name: "cursor", scope: !10919, file: !677, line: 183, type: !686)
!10919 = distinct !DILexicalBlock(scope: !10914, file: !677, line: 182, column: 9)
!10920 = !DILocation(line: 183, column: 36, scope: !10919)
!10921 = !DILocation(line: 183, column: 45, scope: !10919)
!10922 = !DILocalVariable(name: "bucket_length", scope: !10919, file: !677, line: 184, type: !52)
!10923 = !DILocation(line: 184, column: 18, scope: !10919)
!10924 = !DILocation(line: 186, column: 11, scope: !10919)
!10925 = !DILocation(line: 186, column: 27, scope: !10919)
!10926 = !DILocation(line: 186, column: 35, scope: !10919)
!10927 = !DILocation(line: 186, column: 25, scope: !10919)
!10928 = !DILocation(line: 186, column: 41, scope: !10919)
!10929 = !DILocation(line: 187, column: 26, scope: !10919)
!10930 = distinct !{!10930, !10924, !10929}
!10931 = !DILocation(line: 189, column: 15, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10919, file: !677, line: 189, column: 15)
!10933 = !DILocation(line: 189, column: 31, scope: !10932)
!10934 = !DILocation(line: 189, column: 29, scope: !10932)
!10935 = !DILocation(line: 189, column: 15, scope: !10919)
!10936 = !DILocation(line: 190, column: 33, scope: !10932)
!10937 = !DILocation(line: 190, column: 31, scope: !10932)
!10938 = !DILocation(line: 190, column: 13, scope: !10932)
!10939 = !DILocation(line: 191, column: 9, scope: !10919)
!10940 = !DILocation(line: 192, column: 5, scope: !10915)
!10941 = !DILocation(line: 179, column: 68, scope: !10908)
!10942 = !DILocation(line: 179, column: 3, scope: !10908)
!10943 = distinct !{!10943, !10912, !10944}
!10944 = !DILocation(line: 192, column: 5, scope: !10903)
!10945 = !DILocation(line: 194, column: 10, scope: !10895)
!10946 = !DILocation(line: 194, column: 3, scope: !10895)
!10947 = distinct !DISubprogram(name: "hash_table_ok", scope: !677, file: !677, line: 201, type: !10948, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!10948 = !DISubroutineType(types: !10949)
!10949 = !{!139, !10877}
!10950 = !DILocalVariable(name: "table", arg: 1, scope: !10947, file: !677, line: 201, type: !10877)
!10951 = !DILocation(line: 201, column: 34, scope: !10947)
!10952 = !DILocalVariable(name: "bucket", scope: !10947, file: !677, line: 203, type: !686)
!10953 = !DILocation(line: 203, column: 28, scope: !10947)
!10954 = !DILocalVariable(name: "n_buckets_used", scope: !10947, file: !677, line: 204, type: !52)
!10955 = !DILocation(line: 204, column: 10, scope: !10947)
!10956 = !DILocalVariable(name: "n_entries", scope: !10947, file: !677, line: 205, type: !52)
!10957 = !DILocation(line: 205, column: 10, scope: !10947)
!10958 = !DILocation(line: 207, column: 17, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10947, file: !677, line: 207, column: 3)
!10960 = !DILocation(line: 207, column: 24, scope: !10959)
!10961 = !DILocation(line: 207, column: 15, scope: !10959)
!10962 = !DILocation(line: 207, column: 8, scope: !10959)
!10963 = !DILocation(line: 207, column: 32, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10959, file: !677, line: 207, column: 3)
!10965 = !DILocation(line: 207, column: 41, scope: !10964)
!10966 = !DILocation(line: 207, column: 48, scope: !10964)
!10967 = !DILocation(line: 207, column: 39, scope: !10964)
!10968 = !DILocation(line: 207, column: 3, scope: !10959)
!10969 = !DILocation(line: 209, column: 11, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10971, file: !677, line: 209, column: 11)
!10971 = distinct !DILexicalBlock(scope: !10964, file: !677, line: 208, column: 5)
!10972 = !DILocation(line: 209, column: 19, scope: !10970)
!10973 = !DILocation(line: 209, column: 11, scope: !10971)
!10974 = !DILocalVariable(name: "cursor", scope: !10975, file: !677, line: 211, type: !686)
!10975 = distinct !DILexicalBlock(scope: !10970, file: !677, line: 210, column: 9)
!10976 = !DILocation(line: 211, column: 36, scope: !10975)
!10977 = !DILocation(line: 211, column: 45, scope: !10975)
!10978 = !DILocation(line: 214, column: 25, scope: !10975)
!10979 = !DILocation(line: 215, column: 20, scope: !10975)
!10980 = !DILocation(line: 218, column: 11, scope: !10975)
!10981 = !DILocation(line: 218, column: 27, scope: !10975)
!10982 = !DILocation(line: 218, column: 35, scope: !10975)
!10983 = !DILocation(line: 218, column: 25, scope: !10975)
!10984 = !DILocation(line: 218, column: 41, scope: !10975)
!10985 = !DILocation(line: 219, column: 22, scope: !10975)
!10986 = distinct !{!10986, !10980, !10985}
!10987 = !DILocation(line: 220, column: 9, scope: !10975)
!10988 = !DILocation(line: 221, column: 5, scope: !10971)
!10989 = !DILocation(line: 207, column: 68, scope: !10964)
!10990 = !DILocation(line: 207, column: 3, scope: !10964)
!10991 = distinct !{!10991, !10968, !10992}
!10992 = !DILocation(line: 221, column: 5, scope: !10959)
!10993 = !DILocation(line: 223, column: 7, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10947, file: !677, line: 223, column: 7)
!10995 = !DILocation(line: 223, column: 25, scope: !10994)
!10996 = !DILocation(line: 223, column: 32, scope: !10994)
!10997 = !DILocation(line: 223, column: 22, scope: !10994)
!10998 = !DILocation(line: 223, column: 47, scope: !10994)
!10999 = !DILocation(line: 223, column: 50, scope: !10994)
!11000 = !DILocation(line: 223, column: 63, scope: !10994)
!11001 = !DILocation(line: 223, column: 70, scope: !10994)
!11002 = !DILocation(line: 223, column: 60, scope: !10994)
!11003 = !DILocation(line: 223, column: 7, scope: !10947)
!11004 = !DILocation(line: 224, column: 5, scope: !10994)
!11005 = !DILocation(line: 226, column: 3, scope: !10947)
!11006 = !DILocation(line: 227, column: 1, scope: !10947)
!11007 = distinct !DISubprogram(name: "hash_print_statistics", scope: !677, file: !677, line: 230, type: !11008, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11008 = !DISubroutineType(types: !11009)
!11009 = !{null, !10877, !11010}
!11010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11011, size: 64)
!11011 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !293, line: 48, baseType: !11012)
!11012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !11013)
!11013 = !{!11014, !11015, !11016, !11017, !11018, !11019, !11020, !11021, !11022, !11023, !11024, !11025, !11026, !11034, !11035, !11036, !11037, !11038, !11039, !11040, !11041, !11042, !11043, !11044, !11045, !11046, !11047, !11048, !11049}
!11014 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !11012, file: !2, line: 242, baseType: !5, size: 32)
!11015 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !11012, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!11016 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !11012, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!11017 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !11012, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!11018 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !11012, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!11019 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !11012, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!11020 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !11012, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!11021 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !11012, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!11022 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !11012, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!11023 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !11012, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!11024 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !11012, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!11025 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !11012, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!11026 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !11012, file: !2, line: 260, baseType: !11027, size: 64, offset: 768)
!11027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11028, size: 64)
!11028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !11029)
!11029 = !{!11030, !11031, !11033}
!11030 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !11028, file: !2, line: 157, baseType: !11027, size: 64)
!11031 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !11028, file: !2, line: 158, baseType: !11032, size: 64, offset: 64)
!11032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11012, size: 64)
!11033 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !11028, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!11034 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !11012, file: !2, line: 262, baseType: !11032, size: 64, offset: 832)
!11035 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !11012, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!11036 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !11012, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!11037 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !11012, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!11038 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !11012, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!11039 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !11012, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!11040 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !11012, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!11041 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !11012, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!11042 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !11012, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!11043 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !11012, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!11044 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !11012, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!11045 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !11012, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!11046 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !11012, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!11047 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !11012, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!11048 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !11012, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!11049 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !11012, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!11050 = !DILocalVariable(name: "table", arg: 1, scope: !11007, file: !677, line: 230, type: !10877)
!11051 = !DILocation(line: 230, column: 42, scope: !11007)
!11052 = !DILocalVariable(name: "stream", arg: 2, scope: !11007, file: !677, line: 230, type: !11010)
!11053 = !DILocation(line: 230, column: 55, scope: !11007)
!11054 = !DILocalVariable(name: "n_entries", scope: !11007, file: !677, line: 232, type: !52)
!11055 = !DILocation(line: 232, column: 10, scope: !11007)
!11056 = !DILocation(line: 232, column: 42, scope: !11007)
!11057 = !DILocation(line: 232, column: 22, scope: !11007)
!11058 = !DILocalVariable(name: "n_buckets", scope: !11007, file: !677, line: 233, type: !52)
!11059 = !DILocation(line: 233, column: 10, scope: !11007)
!11060 = !DILocation(line: 233, column: 42, scope: !11007)
!11061 = !DILocation(line: 233, column: 22, scope: !11007)
!11062 = !DILocalVariable(name: "n_buckets_used", scope: !11007, file: !677, line: 234, type: !52)
!11063 = !DILocation(line: 234, column: 10, scope: !11007)
!11064 = !DILocation(line: 234, column: 52, scope: !11007)
!11065 = !DILocation(line: 234, column: 27, scope: !11007)
!11066 = !DILocalVariable(name: "max_bucket_length", scope: !11007, file: !677, line: 235, type: !52)
!11067 = !DILocation(line: 235, column: 10, scope: !11007)
!11068 = !DILocation(line: 235, column: 58, scope: !11007)
!11069 = !DILocation(line: 235, column: 30, scope: !11007)
!11070 = !DILocation(line: 237, column: 12, scope: !11007)
!11071 = !DILocation(line: 237, column: 68, scope: !11007)
!11072 = !DILocation(line: 237, column: 3, scope: !11007)
!11073 = !DILocation(line: 238, column: 12, scope: !11007)
!11074 = !DILocation(line: 238, column: 68, scope: !11007)
!11075 = !DILocation(line: 238, column: 3, scope: !11007)
!11076 = !DILocation(line: 239, column: 12, scope: !11007)
!11077 = !DILocation(line: 240, column: 32, scope: !11007)
!11078 = !DILocation(line: 241, column: 21, scope: !11007)
!11079 = !DILocation(line: 241, column: 19, scope: !11007)
!11080 = !DILocation(line: 241, column: 39, scope: !11007)
!11081 = !DILocation(line: 241, column: 37, scope: !11007)
!11082 = !DILocation(line: 239, column: 3, scope: !11007)
!11083 = !DILocation(line: 242, column: 12, scope: !11007)
!11084 = !DILocation(line: 243, column: 32, scope: !11007)
!11085 = !DILocation(line: 242, column: 3, scope: !11007)
!11086 = !DILocation(line: 244, column: 1, scope: !11007)
!11087 = distinct !DISubprogram(name: "hash_lookup", scope: !677, file: !677, line: 261, type: !11088, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11088 = !DISubroutineType(types: !11089)
!11089 = !{!47, !10877, !553}
!11090 = !DILocalVariable(name: "table", arg: 1, scope: !11087, file: !677, line: 261, type: !10877)
!11091 = !DILocation(line: 261, column: 32, scope: !11087)
!11092 = !DILocalVariable(name: "entry", arg: 2, scope: !11087, file: !677, line: 261, type: !553)
!11093 = !DILocation(line: 261, column: 51, scope: !11087)
!11094 = !DILocalVariable(name: "bucket", scope: !11087, file: !677, line: 263, type: !686)
!11095 = !DILocation(line: 263, column: 28, scope: !11087)
!11096 = !DILocation(line: 263, column: 50, scope: !11087)
!11097 = !DILocation(line: 263, column: 57, scope: !11087)
!11098 = !DILocation(line: 263, column: 37, scope: !11087)
!11099 = !DILocalVariable(name: "cursor", scope: !11087, file: !677, line: 264, type: !686)
!11100 = !DILocation(line: 264, column: 28, scope: !11087)
!11101 = !DILocation(line: 266, column: 7, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11087, file: !677, line: 266, column: 7)
!11103 = !DILocation(line: 266, column: 15, scope: !11102)
!11104 = !DILocation(line: 266, column: 20, scope: !11102)
!11105 = !DILocation(line: 266, column: 7, scope: !11087)
!11106 = !DILocation(line: 267, column: 5, scope: !11102)
!11107 = !DILocation(line: 269, column: 17, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11087, file: !677, line: 269, column: 3)
!11109 = !DILocation(line: 269, column: 15, scope: !11108)
!11110 = !DILocation(line: 269, column: 8, scope: !11108)
!11111 = !DILocation(line: 269, column: 25, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11108, file: !677, line: 269, column: 3)
!11113 = !DILocation(line: 269, column: 3, scope: !11108)
!11114 = !DILocation(line: 270, column: 9, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11112, file: !677, line: 270, column: 9)
!11116 = !DILocation(line: 270, column: 18, scope: !11115)
!11117 = !DILocation(line: 270, column: 26, scope: !11115)
!11118 = !DILocation(line: 270, column: 15, scope: !11115)
!11119 = !DILocation(line: 270, column: 31, scope: !11115)
!11120 = !DILocation(line: 270, column: 34, scope: !11115)
!11121 = !DILocation(line: 270, column: 41, scope: !11115)
!11122 = !DILocation(line: 270, column: 53, scope: !11115)
!11123 = !DILocation(line: 270, column: 60, scope: !11115)
!11124 = !DILocation(line: 270, column: 68, scope: !11115)
!11125 = !DILocation(line: 270, column: 9, scope: !11112)
!11126 = !DILocation(line: 271, column: 14, scope: !11115)
!11127 = !DILocation(line: 271, column: 22, scope: !11115)
!11128 = !DILocation(line: 271, column: 7, scope: !11115)
!11129 = !DILocation(line: 270, column: 72, scope: !11115)
!11130 = !DILocation(line: 269, column: 42, scope: !11112)
!11131 = !DILocation(line: 269, column: 50, scope: !11112)
!11132 = !DILocation(line: 269, column: 40, scope: !11112)
!11133 = !DILocation(line: 269, column: 3, scope: !11112)
!11134 = distinct !{!11134, !11113, !11135}
!11135 = !DILocation(line: 271, column: 22, scope: !11108)
!11136 = !DILocation(line: 273, column: 3, scope: !11087)
!11137 = !DILocation(line: 274, column: 1, scope: !11087)
!11138 = distinct !DISubprogram(name: "safe_hasher", scope: !677, file: !677, line: 249, type: !11139, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11139 = !DISubroutineType(types: !11140)
!11140 = !{!680, !10877, !553}
!11141 = !DILocalVariable(name: "table", arg: 1, scope: !11138, file: !677, line: 249, type: !10877)
!11142 = !DILocation(line: 249, column: 32, scope: !11138)
!11143 = !DILocalVariable(name: "key", arg: 2, scope: !11138, file: !677, line: 249, type: !553)
!11144 = !DILocation(line: 249, column: 51, scope: !11138)
!11145 = !DILocalVariable(name: "n", scope: !11138, file: !677, line: 251, type: !52)
!11146 = !DILocation(line: 251, column: 10, scope: !11138)
!11147 = !DILocation(line: 251, column: 14, scope: !11138)
!11148 = !DILocation(line: 251, column: 21, scope: !11138)
!11149 = !DILocation(line: 251, column: 29, scope: !11138)
!11150 = !DILocation(line: 251, column: 34, scope: !11138)
!11151 = !DILocation(line: 251, column: 41, scope: !11138)
!11152 = !DILocation(line: 252, column: 10, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11138, file: !677, line: 252, column: 7)
!11154 = !DILocation(line: 252, column: 14, scope: !11153)
!11155 = !DILocation(line: 252, column: 21, scope: !11153)
!11156 = !DILocation(line: 252, column: 12, scope: !11153)
!11157 = !DILocation(line: 252, column: 7, scope: !11138)
!11158 = !DILocation(line: 253, column: 5, scope: !11153)
!11159 = !DILocation(line: 254, column: 10, scope: !11138)
!11160 = !DILocation(line: 254, column: 17, scope: !11138)
!11161 = !DILocation(line: 254, column: 26, scope: !11138)
!11162 = !DILocation(line: 254, column: 24, scope: !11138)
!11163 = !DILocation(line: 254, column: 3, scope: !11138)
!11164 = distinct !DISubprogram(name: "hash_get_first", scope: !677, file: !677, line: 288, type: !11165, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11165 = !DISubroutineType(types: !11166)
!11166 = !{!47, !10877}
!11167 = !DILocalVariable(name: "table", arg: 1, scope: !11164, file: !677, line: 288, type: !10877)
!11168 = !DILocation(line: 288, column: 35, scope: !11164)
!11169 = !DILocalVariable(name: "bucket", scope: !11164, file: !677, line: 290, type: !686)
!11170 = !DILocation(line: 290, column: 28, scope: !11164)
!11171 = !DILocation(line: 292, column: 7, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11164, file: !677, line: 292, column: 7)
!11173 = !DILocation(line: 292, column: 14, scope: !11172)
!11174 = !DILocation(line: 292, column: 24, scope: !11172)
!11175 = !DILocation(line: 292, column: 7, scope: !11164)
!11176 = !DILocation(line: 293, column: 5, scope: !11172)
!11177 = !DILocation(line: 295, column: 17, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11164, file: !677, line: 295, column: 3)
!11179 = !DILocation(line: 295, column: 24, scope: !11178)
!11180 = !DILocation(line: 295, column: 15, scope: !11178)
!11181 = !DILocation(line: 295, column: 8, scope: !11178)
!11182 = !DILocation(line: 296, column: 12, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11184, file: !677, line: 296, column: 9)
!11184 = distinct !DILexicalBlock(scope: !11178, file: !677, line: 295, column: 3)
!11185 = !DILocation(line: 296, column: 21, scope: !11183)
!11186 = !DILocation(line: 296, column: 28, scope: !11183)
!11187 = !DILocation(line: 296, column: 19, scope: !11183)
!11188 = !DILocation(line: 296, column: 9, scope: !11184)
!11189 = !DILocation(line: 297, column: 7, scope: !11183)
!11190 = !DILocation(line: 298, column: 14, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11183, file: !677, line: 298, column: 14)
!11192 = !DILocation(line: 298, column: 22, scope: !11191)
!11193 = !DILocation(line: 298, column: 14, scope: !11183)
!11194 = !DILocation(line: 299, column: 14, scope: !11191)
!11195 = !DILocation(line: 299, column: 22, scope: !11191)
!11196 = !DILocation(line: 299, column: 7, scope: !11191)
!11197 = !DILocation(line: 296, column: 40, scope: !11183)
!11198 = !DILocation(line: 295, column: 40, scope: !11184)
!11199 = !DILocation(line: 295, column: 3, scope: !11184)
!11200 = distinct !{!11200, !11201, !11202}
!11201 = !DILocation(line: 295, column: 3, scope: !11178)
!11202 = !DILocation(line: 299, column: 22, scope: !11178)
!11203 = !DILocation(line: 300, column: 1, scope: !11164)
!11204 = distinct !DISubprogram(name: "hash_get_next", scope: !677, file: !677, line: 307, type: !11088, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11205 = !DILocalVariable(name: "table", arg: 1, scope: !11204, file: !677, line: 307, type: !10877)
!11206 = !DILocation(line: 307, column: 34, scope: !11204)
!11207 = !DILocalVariable(name: "entry", arg: 2, scope: !11204, file: !677, line: 307, type: !553)
!11208 = !DILocation(line: 307, column: 53, scope: !11204)
!11209 = !DILocalVariable(name: "bucket", scope: !11204, file: !677, line: 309, type: !686)
!11210 = !DILocation(line: 309, column: 28, scope: !11204)
!11211 = !DILocation(line: 309, column: 50, scope: !11204)
!11212 = !DILocation(line: 309, column: 57, scope: !11204)
!11213 = !DILocation(line: 309, column: 37, scope: !11204)
!11214 = !DILocalVariable(name: "cursor", scope: !11204, file: !677, line: 310, type: !686)
!11215 = !DILocation(line: 310, column: 28, scope: !11204)
!11216 = !DILocation(line: 313, column: 12, scope: !11204)
!11217 = !DILocation(line: 313, column: 10, scope: !11204)
!11218 = !DILocation(line: 314, column: 3, scope: !11204)
!11219 = !DILocation(line: 316, column: 11, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11221, file: !677, line: 316, column: 11)
!11221 = distinct !DILexicalBlock(scope: !11204, file: !677, line: 315, column: 5)
!11222 = !DILocation(line: 316, column: 19, scope: !11220)
!11223 = !DILocation(line: 316, column: 27, scope: !11220)
!11224 = !DILocation(line: 316, column: 24, scope: !11220)
!11225 = !DILocation(line: 316, column: 33, scope: !11220)
!11226 = !DILocation(line: 316, column: 36, scope: !11220)
!11227 = !DILocation(line: 316, column: 44, scope: !11220)
!11228 = !DILocation(line: 316, column: 11, scope: !11221)
!11229 = !DILocation(line: 317, column: 16, scope: !11220)
!11230 = !DILocation(line: 317, column: 24, scope: !11220)
!11231 = !DILocation(line: 317, column: 30, scope: !11220)
!11232 = !DILocation(line: 317, column: 9, scope: !11220)
!11233 = !DILocation(line: 318, column: 16, scope: !11221)
!11234 = !DILocation(line: 318, column: 24, scope: !11221)
!11235 = !DILocation(line: 318, column: 14, scope: !11221)
!11236 = !DILocation(line: 319, column: 5, scope: !11221)
!11237 = !DILocation(line: 320, column: 10, scope: !11204)
!11238 = !DILocation(line: 320, column: 17, scope: !11204)
!11239 = distinct !{!11239, !11218, !11240}
!11240 = !DILocation(line: 320, column: 24, scope: !11204)
!11241 = !DILocation(line: 323, column: 3, scope: !11204)
!11242 = !DILocation(line: 323, column: 10, scope: !11204)
!11243 = !DILocation(line: 323, column: 21, scope: !11204)
!11244 = !DILocation(line: 323, column: 28, scope: !11204)
!11245 = !DILocation(line: 323, column: 19, scope: !11204)
!11246 = !DILocation(line: 324, column: 9, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11204, file: !677, line: 324, column: 9)
!11248 = !DILocation(line: 324, column: 17, scope: !11247)
!11249 = !DILocation(line: 324, column: 9, scope: !11204)
!11250 = !DILocation(line: 325, column: 14, scope: !11247)
!11251 = !DILocation(line: 325, column: 22, scope: !11247)
!11252 = !DILocation(line: 325, column: 7, scope: !11247)
!11253 = distinct !{!11253, !11241, !11254}
!11254 = !DILocation(line: 325, column: 22, scope: !11204)
!11255 = !DILocation(line: 328, column: 3, scope: !11204)
!11256 = !DILocation(line: 329, column: 1, scope: !11204)
!11257 = distinct !DISubprogram(name: "hash_get_entries", scope: !677, file: !677, line: 336, type: !11258, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11258 = !DISubroutineType(types: !11259)
!11259 = !{!52, !10877, !719, !52}
!11260 = !DILocalVariable(name: "table", arg: 1, scope: !11257, file: !677, line: 336, type: !10877)
!11261 = !DILocation(line: 336, column: 37, scope: !11257)
!11262 = !DILocalVariable(name: "buffer", arg: 2, scope: !11257, file: !677, line: 336, type: !719)
!11263 = !DILocation(line: 336, column: 51, scope: !11257)
!11264 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !11257, file: !677, line: 337, type: !52)
!11265 = !DILocation(line: 337, column: 26, scope: !11257)
!11266 = !DILocalVariable(name: "counter", scope: !11257, file: !677, line: 339, type: !52)
!11267 = !DILocation(line: 339, column: 10, scope: !11257)
!11268 = !DILocalVariable(name: "bucket", scope: !11257, file: !677, line: 340, type: !686)
!11269 = !DILocation(line: 340, column: 28, scope: !11257)
!11270 = !DILocalVariable(name: "cursor", scope: !11257, file: !677, line: 341, type: !686)
!11271 = !DILocation(line: 341, column: 28, scope: !11257)
!11272 = !DILocation(line: 343, column: 17, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11257, file: !677, line: 343, column: 3)
!11274 = !DILocation(line: 343, column: 24, scope: !11273)
!11275 = !DILocation(line: 343, column: 15, scope: !11273)
!11276 = !DILocation(line: 343, column: 8, scope: !11273)
!11277 = !DILocation(line: 343, column: 32, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11273, file: !677, line: 343, column: 3)
!11279 = !DILocation(line: 343, column: 41, scope: !11278)
!11280 = !DILocation(line: 343, column: 48, scope: !11278)
!11281 = !DILocation(line: 343, column: 39, scope: !11278)
!11282 = !DILocation(line: 343, column: 3, scope: !11273)
!11283 = !DILocation(line: 345, column: 11, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11285, file: !677, line: 345, column: 11)
!11285 = distinct !DILexicalBlock(scope: !11278, file: !677, line: 344, column: 5)
!11286 = !DILocation(line: 345, column: 19, scope: !11284)
!11287 = !DILocation(line: 345, column: 11, scope: !11285)
!11288 = !DILocation(line: 347, column: 25, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11290, file: !677, line: 347, column: 11)
!11290 = distinct !DILexicalBlock(scope: !11284, file: !677, line: 346, column: 9)
!11291 = !DILocation(line: 347, column: 23, scope: !11289)
!11292 = !DILocation(line: 347, column: 16, scope: !11289)
!11293 = !DILocation(line: 347, column: 33, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11289, file: !677, line: 347, column: 11)
!11295 = !DILocation(line: 347, column: 11, scope: !11289)
!11296 = !DILocation(line: 349, column: 19, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11298, file: !677, line: 349, column: 19)
!11298 = distinct !DILexicalBlock(scope: !11294, file: !677, line: 348, column: 13)
!11299 = !DILocation(line: 349, column: 30, scope: !11297)
!11300 = !DILocation(line: 349, column: 27, scope: !11297)
!11301 = !DILocation(line: 349, column: 19, scope: !11298)
!11302 = !DILocation(line: 350, column: 24, scope: !11297)
!11303 = !DILocation(line: 350, column: 17, scope: !11297)
!11304 = !DILocation(line: 351, column: 35, scope: !11298)
!11305 = !DILocation(line: 351, column: 43, scope: !11298)
!11306 = !DILocation(line: 351, column: 15, scope: !11298)
!11307 = !DILocation(line: 351, column: 29, scope: !11298)
!11308 = !DILocation(line: 351, column: 33, scope: !11298)
!11309 = !DILocation(line: 352, column: 13, scope: !11298)
!11310 = !DILocation(line: 347, column: 50, scope: !11294)
!11311 = !DILocation(line: 347, column: 58, scope: !11294)
!11312 = !DILocation(line: 347, column: 48, scope: !11294)
!11313 = !DILocation(line: 347, column: 11, scope: !11294)
!11314 = distinct !{!11314, !11295, !11315}
!11315 = !DILocation(line: 352, column: 13, scope: !11289)
!11316 = !DILocation(line: 353, column: 9, scope: !11290)
!11317 = !DILocation(line: 354, column: 5, scope: !11285)
!11318 = !DILocation(line: 343, column: 68, scope: !11278)
!11319 = !DILocation(line: 343, column: 3, scope: !11278)
!11320 = distinct !{!11320, !11282, !11321}
!11321 = !DILocation(line: 354, column: 5, scope: !11273)
!11322 = !DILocation(line: 356, column: 10, scope: !11257)
!11323 = !DILocation(line: 356, column: 3, scope: !11257)
!11324 = !DILocation(line: 357, column: 1, scope: !11257)
!11325 = distinct !DISubprogram(name: "hash_do_for_each", scope: !677, file: !677, line: 368, type: !11326, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11326 = !DISubroutineType(types: !11327)
!11327 = !{!52, !10877, !11328, !47}
!11328 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !240, line: 51, baseType: !11329)
!11329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11330, size: 64)
!11330 = !DISubroutineType(types: !11331)
!11331 = !{!139, !47, !47}
!11332 = !DILocalVariable(name: "table", arg: 1, scope: !11325, file: !677, line: 368, type: !10877)
!11333 = !DILocation(line: 368, column: 37, scope: !11325)
!11334 = !DILocalVariable(name: "processor", arg: 2, scope: !11325, file: !677, line: 368, type: !11328)
!11335 = !DILocation(line: 368, column: 59, scope: !11325)
!11336 = !DILocalVariable(name: "processor_data", arg: 3, scope: !11325, file: !677, line: 369, type: !47)
!11337 = !DILocation(line: 369, column: 25, scope: !11325)
!11338 = !DILocalVariable(name: "counter", scope: !11325, file: !677, line: 371, type: !52)
!11339 = !DILocation(line: 371, column: 10, scope: !11325)
!11340 = !DILocalVariable(name: "bucket", scope: !11325, file: !677, line: 372, type: !686)
!11341 = !DILocation(line: 372, column: 28, scope: !11325)
!11342 = !DILocalVariable(name: "cursor", scope: !11325, file: !677, line: 373, type: !686)
!11343 = !DILocation(line: 373, column: 28, scope: !11325)
!11344 = !DILocation(line: 375, column: 17, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11325, file: !677, line: 375, column: 3)
!11346 = !DILocation(line: 375, column: 24, scope: !11345)
!11347 = !DILocation(line: 375, column: 15, scope: !11345)
!11348 = !DILocation(line: 375, column: 8, scope: !11345)
!11349 = !DILocation(line: 375, column: 32, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11345, file: !677, line: 375, column: 3)
!11351 = !DILocation(line: 375, column: 41, scope: !11350)
!11352 = !DILocation(line: 375, column: 48, scope: !11350)
!11353 = !DILocation(line: 375, column: 39, scope: !11350)
!11354 = !DILocation(line: 375, column: 3, scope: !11345)
!11355 = !DILocation(line: 377, column: 11, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11357, file: !677, line: 377, column: 11)
!11357 = distinct !DILexicalBlock(scope: !11350, file: !677, line: 376, column: 5)
!11358 = !DILocation(line: 377, column: 19, scope: !11356)
!11359 = !DILocation(line: 377, column: 11, scope: !11357)
!11360 = !DILocation(line: 379, column: 25, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11362, file: !677, line: 379, column: 11)
!11362 = distinct !DILexicalBlock(scope: !11356, file: !677, line: 378, column: 9)
!11363 = !DILocation(line: 379, column: 23, scope: !11361)
!11364 = !DILocation(line: 379, column: 16, scope: !11361)
!11365 = !DILocation(line: 379, column: 33, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11361, file: !677, line: 379, column: 11)
!11367 = !DILocation(line: 379, column: 11, scope: !11361)
!11368 = !DILocation(line: 381, column: 21, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11370, file: !677, line: 381, column: 19)
!11370 = distinct !DILexicalBlock(scope: !11366, file: !677, line: 380, column: 13)
!11371 = !DILocation(line: 381, column: 32, scope: !11369)
!11372 = !DILocation(line: 381, column: 40, scope: !11369)
!11373 = !DILocation(line: 381, column: 46, scope: !11369)
!11374 = !DILocation(line: 381, column: 19, scope: !11370)
!11375 = !DILocation(line: 382, column: 24, scope: !11369)
!11376 = !DILocation(line: 382, column: 17, scope: !11369)
!11377 = !DILocation(line: 383, column: 22, scope: !11370)
!11378 = !DILocation(line: 384, column: 13, scope: !11370)
!11379 = !DILocation(line: 379, column: 50, scope: !11366)
!11380 = !DILocation(line: 379, column: 58, scope: !11366)
!11381 = !DILocation(line: 379, column: 48, scope: !11366)
!11382 = !DILocation(line: 379, column: 11, scope: !11366)
!11383 = distinct !{!11383, !11367, !11384}
!11384 = !DILocation(line: 384, column: 13, scope: !11361)
!11385 = !DILocation(line: 385, column: 9, scope: !11362)
!11386 = !DILocation(line: 386, column: 5, scope: !11357)
!11387 = !DILocation(line: 375, column: 68, scope: !11350)
!11388 = !DILocation(line: 375, column: 3, scope: !11350)
!11389 = distinct !{!11389, !11354, !11390}
!11390 = !DILocation(line: 386, column: 5, scope: !11345)
!11391 = !DILocation(line: 388, column: 10, scope: !11325)
!11392 = !DILocation(line: 388, column: 3, scope: !11325)
!11393 = !DILocation(line: 389, column: 1, scope: !11325)
!11394 = distinct !DISubprogram(name: "hash_string", scope: !677, file: !677, line: 428, type: !11395, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11395 = !DISubroutineType(types: !11396)
!11396 = !{!52, !113, !52}
!11397 = !DILocalVariable(name: "string", arg: 1, scope: !11394, file: !677, line: 428, type: !113)
!11398 = !DILocation(line: 428, column: 26, scope: !11394)
!11399 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !11394, file: !677, line: 428, type: !52)
!11400 = !DILocation(line: 428, column: 41, scope: !11394)
!11401 = !DILocalVariable(name: "value", scope: !11394, file: !677, line: 430, type: !52)
!11402 = !DILocation(line: 430, column: 10, scope: !11394)
!11403 = !DILocalVariable(name: "ch", scope: !11394, file: !677, line: 431, type: !451)
!11404 = !DILocation(line: 431, column: 17, scope: !11394)
!11405 = !DILocation(line: 433, column: 3, scope: !11394)
!11406 = !DILocation(line: 433, column: 17, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11408, file: !677, line: 433, column: 3)
!11408 = distinct !DILexicalBlock(scope: !11394, file: !677, line: 433, column: 3)
!11409 = !DILocation(line: 433, column: 16, scope: !11407)
!11410 = !DILocation(line: 433, column: 14, scope: !11407)
!11411 = !DILocation(line: 433, column: 3, scope: !11408)
!11412 = !DILocation(line: 434, column: 14, scope: !11407)
!11413 = !DILocation(line: 434, column: 20, scope: !11407)
!11414 = !DILocation(line: 434, column: 27, scope: !11407)
!11415 = !DILocation(line: 434, column: 25, scope: !11407)
!11416 = !DILocation(line: 434, column: 33, scope: !11407)
!11417 = !DILocation(line: 434, column: 31, scope: !11407)
!11418 = !DILocation(line: 434, column: 11, scope: !11407)
!11419 = !DILocation(line: 434, column: 5, scope: !11407)
!11420 = !DILocation(line: 433, column: 32, scope: !11407)
!11421 = !DILocation(line: 433, column: 3, scope: !11407)
!11422 = distinct !{!11422, !11411, !11423}
!11423 = !DILocation(line: 434, column: 33, scope: !11408)
!11424 = !DILocation(line: 435, column: 10, scope: !11394)
!11425 = !DILocation(line: 435, column: 3, scope: !11394)
!11426 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !677, file: !677, line: 479, type: !11427, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11427 = !DISubroutineType(types: !11428)
!11428 = !{null, !11429}
!11429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!11430 = !DILocalVariable(name: "tuning", arg: 1, scope: !11426, file: !677, line: 479, type: !11429)
!11431 = !DILocation(line: 479, column: 33, scope: !11426)
!11432 = !DILocation(line: 481, column: 4, scope: !11426)
!11433 = !DILocation(line: 481, column: 13, scope: !11426)
!11434 = !DILocation(line: 482, column: 1, scope: !11426)
!11435 = distinct !DISubprogram(name: "hash_initialize", scope: !677, file: !677, line: 594, type: !11436, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11436 = !DISubroutineType(types: !11437)
!11437 = !{!720, !52, !692, !704, !709, !714}
!11438 = !DILocalVariable(name: "candidate", arg: 1, scope: !11435, file: !677, line: 594, type: !52)
!11439 = !DILocation(line: 594, column: 25, scope: !11435)
!11440 = !DILocalVariable(name: "tuning", arg: 2, scope: !11435, file: !677, line: 594, type: !692)
!11441 = !DILocation(line: 594, column: 55, scope: !11435)
!11442 = !DILocalVariable(name: "hasher", arg: 3, scope: !11435, file: !677, line: 595, type: !704)
!11443 = !DILocation(line: 595, column: 30, scope: !11435)
!11444 = !DILocalVariable(name: "comparator", arg: 4, scope: !11435, file: !677, line: 595, type: !709)
!11445 = !DILocation(line: 595, column: 54, scope: !11435)
!11446 = !DILocalVariable(name: "data_freer", arg: 5, scope: !11435, file: !677, line: 596, type: !714)
!11447 = !DILocation(line: 596, column: 34, scope: !11435)
!11448 = !DILocalVariable(name: "table", scope: !11435, file: !677, line: 598, type: !720)
!11449 = !DILocation(line: 598, column: 15, scope: !11435)
!11450 = !DILocation(line: 600, column: 7, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11435, file: !677, line: 600, column: 7)
!11452 = !DILocation(line: 600, column: 14, scope: !11451)
!11453 = !DILocation(line: 600, column: 7, scope: !11435)
!11454 = !DILocation(line: 601, column: 12, scope: !11451)
!11455 = !DILocation(line: 601, column: 5, scope: !11451)
!11456 = !DILocation(line: 602, column: 7, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11435, file: !677, line: 602, column: 7)
!11458 = !DILocation(line: 602, column: 18, scope: !11457)
!11459 = !DILocation(line: 602, column: 7, scope: !11435)
!11460 = !DILocation(line: 603, column: 16, scope: !11457)
!11461 = !DILocation(line: 603, column: 5, scope: !11457)
!11462 = !DILocation(line: 605, column: 11, scope: !11435)
!11463 = !DILocation(line: 605, column: 9, scope: !11435)
!11464 = !DILocation(line: 606, column: 7, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11435, file: !677, line: 606, column: 7)
!11466 = !DILocation(line: 606, column: 13, scope: !11465)
!11467 = !DILocation(line: 606, column: 7, scope: !11435)
!11468 = !DILocation(line: 607, column: 5, scope: !11465)
!11469 = !DILocation(line: 609, column: 8, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11435, file: !677, line: 609, column: 7)
!11471 = !DILocation(line: 609, column: 7, scope: !11435)
!11472 = !DILocation(line: 610, column: 12, scope: !11470)
!11473 = !DILocation(line: 610, column: 5, scope: !11470)
!11474 = !DILocation(line: 611, column: 19, scope: !11435)
!11475 = !DILocation(line: 611, column: 3, scope: !11435)
!11476 = !DILocation(line: 611, column: 10, scope: !11435)
!11477 = !DILocation(line: 611, column: 17, scope: !11435)
!11478 = !DILocation(line: 612, column: 22, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11435, file: !677, line: 612, column: 7)
!11480 = !DILocation(line: 612, column: 8, scope: !11479)
!11481 = !DILocation(line: 612, column: 7, scope: !11435)
!11482 = !DILocation(line: 619, column: 7, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11479, file: !677, line: 613, column: 5)
!11484 = !DILocation(line: 622, column: 43, scope: !11435)
!11485 = !DILocation(line: 622, column: 54, scope: !11435)
!11486 = !DILocation(line: 622, column: 22, scope: !11435)
!11487 = !DILocation(line: 622, column: 3, scope: !11435)
!11488 = !DILocation(line: 622, column: 10, scope: !11435)
!11489 = !DILocation(line: 622, column: 20, scope: !11435)
!11490 = !DILocation(line: 623, column: 8, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11435, file: !677, line: 623, column: 7)
!11492 = !DILocation(line: 623, column: 15, scope: !11491)
!11493 = !DILocation(line: 623, column: 7, scope: !11435)
!11494 = !DILocation(line: 624, column: 5, scope: !11491)
!11495 = !DILocation(line: 626, column: 27, scope: !11435)
!11496 = !DILocation(line: 626, column: 34, scope: !11435)
!11497 = !DILocation(line: 626, column: 19, scope: !11435)
!11498 = !DILocation(line: 626, column: 3, scope: !11435)
!11499 = !DILocation(line: 626, column: 10, scope: !11435)
!11500 = !DILocation(line: 626, column: 17, scope: !11435)
!11501 = !DILocation(line: 627, column: 7, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11435, file: !677, line: 627, column: 7)
!11503 = !DILocation(line: 627, column: 14, scope: !11502)
!11504 = !DILocation(line: 627, column: 21, scope: !11502)
!11505 = !DILocation(line: 627, column: 7, scope: !11435)
!11506 = !DILocation(line: 628, column: 5, scope: !11502)
!11507 = !DILocation(line: 629, column: 25, scope: !11435)
!11508 = !DILocation(line: 629, column: 32, scope: !11435)
!11509 = !DILocation(line: 629, column: 41, scope: !11435)
!11510 = !DILocation(line: 629, column: 48, scope: !11435)
!11511 = !DILocation(line: 629, column: 39, scope: !11435)
!11512 = !DILocation(line: 629, column: 3, scope: !11435)
!11513 = !DILocation(line: 629, column: 10, scope: !11435)
!11514 = !DILocation(line: 629, column: 23, scope: !11435)
!11515 = !DILocation(line: 630, column: 3, scope: !11435)
!11516 = !DILocation(line: 630, column: 10, scope: !11435)
!11517 = !DILocation(line: 630, column: 25, scope: !11435)
!11518 = !DILocation(line: 631, column: 3, scope: !11435)
!11519 = !DILocation(line: 631, column: 10, scope: !11435)
!11520 = !DILocation(line: 631, column: 20, scope: !11435)
!11521 = !DILocation(line: 633, column: 19, scope: !11435)
!11522 = !DILocation(line: 633, column: 3, scope: !11435)
!11523 = !DILocation(line: 633, column: 10, scope: !11435)
!11524 = !DILocation(line: 633, column: 17, scope: !11435)
!11525 = !DILocation(line: 634, column: 23, scope: !11435)
!11526 = !DILocation(line: 634, column: 3, scope: !11435)
!11527 = !DILocation(line: 634, column: 10, scope: !11435)
!11528 = !DILocation(line: 634, column: 21, scope: !11435)
!11529 = !DILocation(line: 635, column: 23, scope: !11435)
!11530 = !DILocation(line: 635, column: 3, scope: !11435)
!11531 = !DILocation(line: 635, column: 10, scope: !11435)
!11532 = !DILocation(line: 635, column: 21, scope: !11435)
!11533 = !DILocation(line: 637, column: 3, scope: !11435)
!11534 = !DILocation(line: 637, column: 10, scope: !11435)
!11535 = !DILocation(line: 637, column: 26, scope: !11435)
!11536 = !DILocation(line: 641, column: 10, scope: !11435)
!11537 = !DILocation(line: 641, column: 3, scope: !11435)
!11538 = !DILabel(scope: !11435, name: "fail", file: !677, line: 643)
!11539 = !DILocation(line: 643, column: 2, scope: !11435)
!11540 = !DILocation(line: 644, column: 9, scope: !11435)
!11541 = !DILocation(line: 644, column: 3, scope: !11435)
!11542 = !DILocation(line: 645, column: 3, scope: !11435)
!11543 = !DILocation(line: 646, column: 1, scope: !11435)
!11544 = distinct !DISubprogram(name: "raw_hasher", scope: !677, file: !677, line: 486, type: !706, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11545 = !DILocalVariable(name: "data", arg: 1, scope: !11544, file: !677, line: 486, type: !553)
!11546 = !DILocation(line: 486, column: 25, scope: !11544)
!11547 = !DILocalVariable(name: "n", arg: 2, scope: !11544, file: !677, line: 486, type: !52)
!11548 = !DILocation(line: 486, column: 38, scope: !11544)
!11549 = !DILocalVariable(name: "val", scope: !11544, file: !677, line: 493, type: !52)
!11550 = !DILocation(line: 493, column: 10, scope: !11544)
!11551 = !DILocation(line: 493, column: 34, scope: !11544)
!11552 = !DILocation(line: 493, column: 25, scope: !11544)
!11553 = !DILocation(line: 493, column: 16, scope: !11544)
!11554 = !DILocation(line: 494, column: 10, scope: !11544)
!11555 = !DILocation(line: 494, column: 16, scope: !11544)
!11556 = !DILocation(line: 494, column: 14, scope: !11544)
!11557 = !DILocation(line: 494, column: 3, scope: !11544)
!11558 = distinct !DISubprogram(name: "raw_comparator", scope: !677, file: !677, line: 499, type: !711, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11559 = !DILocalVariable(name: "a", arg: 1, scope: !11558, file: !677, line: 499, type: !553)
!11560 = !DILocation(line: 499, column: 29, scope: !11558)
!11561 = !DILocalVariable(name: "b", arg: 2, scope: !11558, file: !677, line: 499, type: !553)
!11562 = !DILocation(line: 499, column: 44, scope: !11558)
!11563 = !DILocation(line: 501, column: 10, scope: !11558)
!11564 = !DILocation(line: 501, column: 15, scope: !11558)
!11565 = !DILocation(line: 501, column: 12, scope: !11558)
!11566 = !DILocation(line: 501, column: 3, scope: !11558)
!11567 = distinct !DISubprogram(name: "check_tuning", scope: !677, file: !677, line: 512, type: !11568, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11568 = !DISubroutineType(types: !11569)
!11569 = !{!139, !720}
!11570 = !DILocalVariable(name: "table", arg: 1, scope: !11567, file: !677, line: 512, type: !720)
!11571 = !DILocation(line: 512, column: 27, scope: !11567)
!11572 = !DILocalVariable(name: "tuning", scope: !11567, file: !677, line: 514, type: !692)
!11573 = !DILocation(line: 514, column: 22, scope: !11567)
!11574 = !DILocation(line: 514, column: 31, scope: !11567)
!11575 = !DILocation(line: 514, column: 38, scope: !11567)
!11576 = !DILocalVariable(name: "epsilon", scope: !11567, file: !677, line: 515, type: !698)
!11577 = !DILocation(line: 515, column: 9, scope: !11567)
!11578 = !DILocation(line: 516, column: 7, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11567, file: !677, line: 516, column: 7)
!11580 = !DILocation(line: 516, column: 14, scope: !11579)
!11581 = !DILocation(line: 516, column: 7, scope: !11567)
!11582 = !DILocation(line: 517, column: 5, scope: !11579)
!11583 = !DILocation(line: 524, column: 11, scope: !11567)
!11584 = !DILocation(line: 526, column: 7, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11567, file: !677, line: 526, column: 7)
!11586 = !DILocation(line: 526, column: 17, scope: !11585)
!11587 = !DILocation(line: 526, column: 25, scope: !11585)
!11588 = !DILocation(line: 526, column: 15, scope: !11585)
!11589 = !DILocation(line: 527, column: 7, scope: !11585)
!11590 = !DILocation(line: 527, column: 10, scope: !11585)
!11591 = !DILocation(line: 527, column: 18, scope: !11585)
!11592 = !DILocation(line: 527, column: 41, scope: !11585)
!11593 = !DILocation(line: 527, column: 39, scope: !11585)
!11594 = !DILocation(line: 527, column: 35, scope: !11585)
!11595 = !DILocation(line: 528, column: 7, scope: !11585)
!11596 = !DILocation(line: 528, column: 14, scope: !11585)
!11597 = !DILocation(line: 528, column: 12, scope: !11585)
!11598 = !DILocation(line: 528, column: 24, scope: !11585)
!11599 = !DILocation(line: 528, column: 32, scope: !11585)
!11600 = !DILocation(line: 528, column: 22, scope: !11585)
!11601 = !DILocation(line: 529, column: 7, scope: !11585)
!11602 = !DILocation(line: 529, column: 15, scope: !11585)
!11603 = !DILocation(line: 529, column: 23, scope: !11585)
!11604 = !DILocation(line: 529, column: 12, scope: !11585)
!11605 = !DILocation(line: 530, column: 7, scope: !11585)
!11606 = !DILocation(line: 530, column: 10, scope: !11585)
!11607 = !DILocation(line: 530, column: 18, scope: !11585)
!11608 = !DILocation(line: 530, column: 37, scope: !11585)
!11609 = !DILocation(line: 530, column: 35, scope: !11585)
!11610 = !DILocation(line: 530, column: 47, scope: !11585)
!11611 = !DILocation(line: 530, column: 55, scope: !11585)
!11612 = !DILocation(line: 530, column: 45, scope: !11585)
!11613 = !DILocation(line: 531, column: 7, scope: !11585)
!11614 = !DILocation(line: 531, column: 10, scope: !11585)
!11615 = !DILocation(line: 531, column: 18, scope: !11585)
!11616 = !DILocation(line: 531, column: 32, scope: !11585)
!11617 = !DILocation(line: 532, column: 7, scope: !11585)
!11618 = !DILocation(line: 532, column: 10, scope: !11585)
!11619 = !DILocation(line: 532, column: 18, scope: !11585)
!11620 = !DILocation(line: 532, column: 37, scope: !11585)
!11621 = !DILocation(line: 532, column: 35, scope: !11585)
!11622 = !DILocation(line: 532, column: 47, scope: !11585)
!11623 = !DILocation(line: 532, column: 55, scope: !11585)
!11624 = !DILocation(line: 532, column: 45, scope: !11585)
!11625 = !DILocation(line: 526, column: 7, scope: !11567)
!11626 = !DILocation(line: 533, column: 5, scope: !11585)
!11627 = !DILocation(line: 535, column: 3, scope: !11567)
!11628 = !DILocation(line: 535, column: 10, scope: !11567)
!11629 = !DILocation(line: 535, column: 17, scope: !11567)
!11630 = !DILocation(line: 536, column: 3, scope: !11567)
!11631 = !DILocation(line: 537, column: 1, scope: !11567)
!11632 = distinct !DISubprogram(name: "compute_bucket_size", scope: !677, file: !677, line: 544, type: !11633, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11633 = !DISubroutineType(types: !11634)
!11634 = !{!52, !52, !692}
!11635 = !DILocalVariable(name: "candidate", arg: 1, scope: !11632, file: !677, line: 544, type: !52)
!11636 = !DILocation(line: 544, column: 29, scope: !11632)
!11637 = !DILocalVariable(name: "tuning", arg: 2, scope: !11632, file: !677, line: 544, type: !692)
!11638 = !DILocation(line: 544, column: 59, scope: !11632)
!11639 = !DILocation(line: 546, column: 8, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11632, file: !677, line: 546, column: 7)
!11641 = !DILocation(line: 546, column: 16, scope: !11640)
!11642 = !DILocation(line: 546, column: 7, scope: !11632)
!11643 = !DILocalVariable(name: "new_candidate", scope: !11644, file: !677, line: 548, type: !698)
!11644 = distinct !DILexicalBlock(scope: !11640, file: !677, line: 547, column: 5)
!11645 = !DILocation(line: 548, column: 13, scope: !11644)
!11646 = !DILocation(line: 548, column: 29, scope: !11644)
!11647 = !DILocation(line: 548, column: 41, scope: !11644)
!11648 = !DILocation(line: 548, column: 49, scope: !11644)
!11649 = !DILocation(line: 548, column: 39, scope: !11644)
!11650 = !DILocation(line: 549, column: 23, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11644, file: !677, line: 549, column: 11)
!11652 = !DILocation(line: 549, column: 20, scope: !11651)
!11653 = !DILocation(line: 549, column: 11, scope: !11644)
!11654 = !DILocation(line: 550, column: 9, scope: !11651)
!11655 = !DILocation(line: 551, column: 19, scope: !11644)
!11656 = !DILocation(line: 551, column: 17, scope: !11644)
!11657 = !DILocation(line: 552, column: 5, scope: !11644)
!11658 = !DILocation(line: 553, column: 27, scope: !11632)
!11659 = !DILocation(line: 553, column: 15, scope: !11632)
!11660 = !DILocation(line: 553, column: 13, scope: !11632)
!11661 = !DILocation(line: 554, column: 7, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11632, file: !677, line: 554, column: 7)
!11663 = !DILocation(line: 554, column: 7, scope: !11632)
!11664 = !DILocation(line: 555, column: 5, scope: !11662)
!11665 = !DILocation(line: 556, column: 10, scope: !11632)
!11666 = !DILocation(line: 556, column: 3, scope: !11632)
!11667 = !DILocation(line: 557, column: 1, scope: !11632)
!11668 = distinct !DISubprogram(name: "next_prime", scope: !677, file: !677, line: 463, type: !11669, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11669 = !DISubroutineType(types: !11670)
!11670 = !{!52, !52}
!11671 = !DILocalVariable(name: "candidate", arg: 1, scope: !11668, file: !677, line: 463, type: !52)
!11672 = !DILocation(line: 463, column: 20, scope: !11668)
!11673 = !DILocation(line: 466, column: 7, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11668, file: !677, line: 466, column: 7)
!11675 = !DILocation(line: 466, column: 17, scope: !11674)
!11676 = !DILocation(line: 466, column: 7, scope: !11668)
!11677 = !DILocation(line: 467, column: 15, scope: !11674)
!11678 = !DILocation(line: 467, column: 5, scope: !11674)
!11679 = !DILocation(line: 470, column: 13, scope: !11668)
!11680 = !DILocation(line: 472, column: 3, scope: !11668)
!11681 = !DILocation(line: 472, column: 22, scope: !11668)
!11682 = !DILocation(line: 472, column: 19, scope: !11668)
!11683 = !DILocation(line: 472, column: 32, scope: !11668)
!11684 = !DILocation(line: 472, column: 46, scope: !11668)
!11685 = !DILocation(line: 472, column: 36, scope: !11668)
!11686 = !DILocation(line: 472, column: 35, scope: !11668)
!11687 = !DILocation(line: 0, scope: !11668)
!11688 = !DILocation(line: 473, column: 15, scope: !11668)
!11689 = distinct !{!11689, !11680, !11690}
!11690 = !DILocation(line: 473, column: 18, scope: !11668)
!11691 = !DILocation(line: 475, column: 10, scope: !11668)
!11692 = !DILocation(line: 475, column: 3, scope: !11668)
!11693 = distinct !DISubprogram(name: "is_prime", scope: !677, file: !677, line: 444, type: !11694, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11694 = !DISubroutineType(types: !11695)
!11695 = !{!139, !52}
!11696 = !DILocalVariable(name: "candidate", arg: 1, scope: !11693, file: !677, line: 444, type: !52)
!11697 = !DILocation(line: 444, column: 18, scope: !11693)
!11698 = !DILocalVariable(name: "divisor", scope: !11693, file: !677, line: 446, type: !52)
!11699 = !DILocation(line: 446, column: 10, scope: !11693)
!11700 = !DILocalVariable(name: "square", scope: !11693, file: !677, line: 447, type: !52)
!11701 = !DILocation(line: 447, column: 10, scope: !11693)
!11702 = !DILocation(line: 447, column: 19, scope: !11693)
!11703 = !DILocation(line: 447, column: 29, scope: !11693)
!11704 = !DILocation(line: 447, column: 27, scope: !11693)
!11705 = !DILocation(line: 449, column: 3, scope: !11693)
!11706 = !DILocation(line: 449, column: 10, scope: !11693)
!11707 = !DILocation(line: 449, column: 19, scope: !11693)
!11708 = !DILocation(line: 449, column: 17, scope: !11693)
!11709 = !DILocation(line: 449, column: 29, scope: !11693)
!11710 = !DILocation(line: 449, column: 33, scope: !11693)
!11711 = !DILocation(line: 449, column: 45, scope: !11693)
!11712 = !DILocation(line: 449, column: 43, scope: !11693)
!11713 = !DILocation(line: 0, scope: !11693)
!11714 = !DILocation(line: 451, column: 14, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11693, file: !677, line: 450, column: 5)
!11716 = !DILocation(line: 452, column: 21, scope: !11715)
!11717 = !DILocation(line: 452, column: 19, scope: !11715)
!11718 = !DILocation(line: 452, column: 14, scope: !11715)
!11719 = !DILocation(line: 453, column: 14, scope: !11715)
!11720 = distinct !{!11720, !11705, !11721}
!11721 = !DILocation(line: 454, column: 5, scope: !11693)
!11722 = !DILocation(line: 456, column: 11, scope: !11693)
!11723 = !DILocation(line: 456, column: 23, scope: !11693)
!11724 = !DILocation(line: 456, column: 21, scope: !11693)
!11725 = !DILocation(line: 456, column: 10, scope: !11693)
!11726 = !DILocation(line: 456, column: 3, scope: !11693)
!11727 = distinct !DISubprogram(name: "hash_clear", scope: !677, file: !677, line: 653, type: !11728, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11728 = !DISubroutineType(types: !11729)
!11729 = !{null, !720}
!11730 = !DILocalVariable(name: "table", arg: 1, scope: !11727, file: !677, line: 653, type: !720)
!11731 = !DILocation(line: 653, column: 25, scope: !11727)
!11732 = !DILocalVariable(name: "bucket", scope: !11727, file: !677, line: 655, type: !680)
!11733 = !DILocation(line: 655, column: 22, scope: !11727)
!11734 = !DILocation(line: 657, column: 17, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11727, file: !677, line: 657, column: 3)
!11736 = !DILocation(line: 657, column: 24, scope: !11735)
!11737 = !DILocation(line: 657, column: 15, scope: !11735)
!11738 = !DILocation(line: 657, column: 8, scope: !11735)
!11739 = !DILocation(line: 657, column: 32, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11735, file: !677, line: 657, column: 3)
!11741 = !DILocation(line: 657, column: 41, scope: !11740)
!11742 = !DILocation(line: 657, column: 48, scope: !11740)
!11743 = !DILocation(line: 657, column: 39, scope: !11740)
!11744 = !DILocation(line: 657, column: 3, scope: !11735)
!11745 = !DILocation(line: 659, column: 11, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11747, file: !677, line: 659, column: 11)
!11747 = distinct !DILexicalBlock(scope: !11740, file: !677, line: 658, column: 5)
!11748 = !DILocation(line: 659, column: 19, scope: !11746)
!11749 = !DILocation(line: 659, column: 11, scope: !11747)
!11750 = !DILocalVariable(name: "cursor", scope: !11751, file: !677, line: 661, type: !680)
!11751 = distinct !DILexicalBlock(scope: !11746, file: !677, line: 660, column: 9)
!11752 = !DILocation(line: 661, column: 30, scope: !11751)
!11753 = !DILocalVariable(name: "next", scope: !11751, file: !677, line: 662, type: !680)
!11754 = !DILocation(line: 662, column: 30, scope: !11751)
!11755 = !DILocation(line: 665, column: 25, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11751, file: !677, line: 665, column: 11)
!11757 = !DILocation(line: 665, column: 33, scope: !11756)
!11758 = !DILocation(line: 665, column: 23, scope: !11756)
!11759 = !DILocation(line: 665, column: 16, scope: !11756)
!11760 = !DILocation(line: 665, column: 39, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11756, file: !677, line: 665, column: 11)
!11762 = !DILocation(line: 665, column: 11, scope: !11756)
!11763 = !DILocation(line: 667, column: 19, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11765, file: !677, line: 667, column: 19)
!11765 = distinct !DILexicalBlock(scope: !11761, file: !677, line: 666, column: 13)
!11766 = !DILocation(line: 667, column: 26, scope: !11764)
!11767 = !DILocation(line: 667, column: 19, scope: !11765)
!11768 = !DILocation(line: 668, column: 17, scope: !11764)
!11769 = !DILocation(line: 668, column: 24, scope: !11764)
!11770 = !DILocation(line: 668, column: 36, scope: !11764)
!11771 = !DILocation(line: 668, column: 44, scope: !11764)
!11772 = !DILocation(line: 669, column: 15, scope: !11765)
!11773 = !DILocation(line: 669, column: 23, scope: !11765)
!11774 = !DILocation(line: 669, column: 28, scope: !11765)
!11775 = !DILocation(line: 671, column: 22, scope: !11765)
!11776 = !DILocation(line: 671, column: 30, scope: !11765)
!11777 = !DILocation(line: 671, column: 20, scope: !11765)
!11778 = !DILocation(line: 674, column: 30, scope: !11765)
!11779 = !DILocation(line: 674, column: 37, scope: !11765)
!11780 = !DILocation(line: 674, column: 15, scope: !11765)
!11781 = !DILocation(line: 674, column: 23, scope: !11765)
!11782 = !DILocation(line: 674, column: 28, scope: !11765)
!11783 = !DILocation(line: 675, column: 40, scope: !11765)
!11784 = !DILocation(line: 675, column: 15, scope: !11765)
!11785 = !DILocation(line: 675, column: 22, scope: !11765)
!11786 = !DILocation(line: 675, column: 38, scope: !11765)
!11787 = !DILocation(line: 676, column: 13, scope: !11765)
!11788 = !DILocation(line: 665, column: 56, scope: !11761)
!11789 = !DILocation(line: 665, column: 54, scope: !11761)
!11790 = !DILocation(line: 665, column: 11, scope: !11761)
!11791 = distinct !{!11791, !11762, !11792}
!11792 = !DILocation(line: 676, column: 13, scope: !11756)
!11793 = !DILocation(line: 679, column: 15, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11751, file: !677, line: 679, column: 15)
!11795 = !DILocation(line: 679, column: 22, scope: !11794)
!11796 = !DILocation(line: 679, column: 15, scope: !11751)
!11797 = !DILocation(line: 680, column: 13, scope: !11794)
!11798 = !DILocation(line: 680, column: 20, scope: !11794)
!11799 = !DILocation(line: 680, column: 32, scope: !11794)
!11800 = !DILocation(line: 680, column: 40, scope: !11794)
!11801 = !DILocation(line: 681, column: 11, scope: !11751)
!11802 = !DILocation(line: 681, column: 19, scope: !11751)
!11803 = !DILocation(line: 681, column: 24, scope: !11751)
!11804 = !DILocation(line: 682, column: 11, scope: !11751)
!11805 = !DILocation(line: 682, column: 19, scope: !11751)
!11806 = !DILocation(line: 682, column: 24, scope: !11751)
!11807 = !DILocation(line: 683, column: 9, scope: !11751)
!11808 = !DILocation(line: 684, column: 5, scope: !11747)
!11809 = !DILocation(line: 657, column: 68, scope: !11740)
!11810 = !DILocation(line: 657, column: 3, scope: !11740)
!11811 = distinct !{!11811, !11744, !11812}
!11812 = !DILocation(line: 684, column: 5, scope: !11735)
!11813 = !DILocation(line: 686, column: 3, scope: !11727)
!11814 = !DILocation(line: 686, column: 10, scope: !11727)
!11815 = !DILocation(line: 686, column: 25, scope: !11727)
!11816 = !DILocation(line: 687, column: 3, scope: !11727)
!11817 = !DILocation(line: 687, column: 10, scope: !11727)
!11818 = !DILocation(line: 687, column: 20, scope: !11727)
!11819 = !DILocation(line: 688, column: 1, scope: !11727)
!11820 = distinct !DISubprogram(name: "hash_free", scope: !677, file: !677, line: 696, type: !11728, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11821 = !DILocalVariable(name: "table", arg: 1, scope: !11820, file: !677, line: 696, type: !720)
!11822 = !DILocation(line: 696, column: 24, scope: !11820)
!11823 = !DILocalVariable(name: "bucket", scope: !11820, file: !677, line: 698, type: !680)
!11824 = !DILocation(line: 698, column: 22, scope: !11820)
!11825 = !DILocalVariable(name: "cursor", scope: !11820, file: !677, line: 699, type: !680)
!11826 = !DILocation(line: 699, column: 22, scope: !11820)
!11827 = !DILocalVariable(name: "next", scope: !11820, file: !677, line: 700, type: !680)
!11828 = !DILocation(line: 700, column: 22, scope: !11820)
!11829 = !DILocation(line: 703, column: 7, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11820, file: !677, line: 703, column: 7)
!11831 = !DILocation(line: 703, column: 14, scope: !11830)
!11832 = !DILocation(line: 703, column: 25, scope: !11830)
!11833 = !DILocation(line: 703, column: 28, scope: !11830)
!11834 = !DILocation(line: 703, column: 35, scope: !11830)
!11835 = !DILocation(line: 703, column: 7, scope: !11820)
!11836 = !DILocation(line: 705, column: 21, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11838, file: !677, line: 705, column: 7)
!11838 = distinct !DILexicalBlock(scope: !11830, file: !677, line: 704, column: 5)
!11839 = !DILocation(line: 705, column: 28, scope: !11837)
!11840 = !DILocation(line: 705, column: 19, scope: !11837)
!11841 = !DILocation(line: 705, column: 12, scope: !11837)
!11842 = !DILocation(line: 705, column: 36, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11837, file: !677, line: 705, column: 7)
!11844 = !DILocation(line: 705, column: 45, scope: !11843)
!11845 = !DILocation(line: 705, column: 52, scope: !11843)
!11846 = !DILocation(line: 705, column: 43, scope: !11843)
!11847 = !DILocation(line: 705, column: 7, scope: !11837)
!11848 = !DILocation(line: 707, column: 15, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11850, file: !677, line: 707, column: 15)
!11850 = distinct !DILexicalBlock(scope: !11843, file: !677, line: 706, column: 9)
!11851 = !DILocation(line: 707, column: 23, scope: !11849)
!11852 = !DILocation(line: 707, column: 15, scope: !11850)
!11853 = !DILocation(line: 709, column: 29, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11855, file: !677, line: 709, column: 15)
!11855 = distinct !DILexicalBlock(scope: !11849, file: !677, line: 708, column: 13)
!11856 = !DILocation(line: 709, column: 27, scope: !11854)
!11857 = !DILocation(line: 709, column: 20, scope: !11854)
!11858 = !DILocation(line: 709, column: 37, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11854, file: !677, line: 709, column: 15)
!11860 = !DILocation(line: 709, column: 15, scope: !11854)
!11861 = !DILocation(line: 710, column: 17, scope: !11859)
!11862 = !DILocation(line: 710, column: 24, scope: !11859)
!11863 = !DILocation(line: 710, column: 36, scope: !11859)
!11864 = !DILocation(line: 710, column: 44, scope: !11859)
!11865 = !DILocation(line: 709, column: 54, scope: !11859)
!11866 = !DILocation(line: 709, column: 62, scope: !11859)
!11867 = !DILocation(line: 709, column: 52, scope: !11859)
!11868 = !DILocation(line: 709, column: 15, scope: !11859)
!11869 = distinct !{!11869, !11860, !11870}
!11870 = !DILocation(line: 710, column: 48, scope: !11854)
!11871 = !DILocation(line: 711, column: 13, scope: !11855)
!11872 = !DILocation(line: 712, column: 9, scope: !11850)
!11873 = !DILocation(line: 705, column: 72, scope: !11843)
!11874 = !DILocation(line: 705, column: 7, scope: !11843)
!11875 = distinct !{!11875, !11847, !11876}
!11876 = !DILocation(line: 712, column: 9, scope: !11837)
!11877 = !DILocation(line: 713, column: 5, scope: !11838)
!11878 = !DILocation(line: 722, column: 17, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11820, file: !677, line: 722, column: 3)
!11880 = !DILocation(line: 722, column: 24, scope: !11879)
!11881 = !DILocation(line: 722, column: 15, scope: !11879)
!11882 = !DILocation(line: 722, column: 8, scope: !11879)
!11883 = !DILocation(line: 722, column: 32, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11879, file: !677, line: 722, column: 3)
!11885 = !DILocation(line: 722, column: 41, scope: !11884)
!11886 = !DILocation(line: 722, column: 48, scope: !11884)
!11887 = !DILocation(line: 722, column: 39, scope: !11884)
!11888 = !DILocation(line: 722, column: 3, scope: !11879)
!11889 = !DILocation(line: 724, column: 21, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11891, file: !677, line: 724, column: 7)
!11891 = distinct !DILexicalBlock(scope: !11884, file: !677, line: 723, column: 5)
!11892 = !DILocation(line: 724, column: 29, scope: !11890)
!11893 = !DILocation(line: 724, column: 19, scope: !11890)
!11894 = !DILocation(line: 724, column: 12, scope: !11890)
!11895 = !DILocation(line: 724, column: 35, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11890, file: !677, line: 724, column: 7)
!11897 = !DILocation(line: 724, column: 7, scope: !11890)
!11898 = !DILocation(line: 726, column: 18, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11896, file: !677, line: 725, column: 9)
!11900 = !DILocation(line: 726, column: 26, scope: !11899)
!11901 = !DILocation(line: 726, column: 16, scope: !11899)
!11902 = !DILocation(line: 727, column: 17, scope: !11899)
!11903 = !DILocation(line: 727, column: 11, scope: !11899)
!11904 = !DILocation(line: 728, column: 9, scope: !11899)
!11905 = !DILocation(line: 724, column: 52, scope: !11896)
!11906 = !DILocation(line: 724, column: 50, scope: !11896)
!11907 = !DILocation(line: 724, column: 7, scope: !11896)
!11908 = distinct !{!11908, !11897, !11909}
!11909 = !DILocation(line: 728, column: 9, scope: !11890)
!11910 = !DILocation(line: 729, column: 5, scope: !11891)
!11911 = !DILocation(line: 722, column: 68, scope: !11884)
!11912 = !DILocation(line: 722, column: 3, scope: !11884)
!11913 = distinct !{!11913, !11888, !11914}
!11914 = !DILocation(line: 729, column: 5, scope: !11879)
!11915 = !DILocation(line: 732, column: 17, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11820, file: !677, line: 732, column: 3)
!11917 = !DILocation(line: 732, column: 24, scope: !11916)
!11918 = !DILocation(line: 732, column: 15, scope: !11916)
!11919 = !DILocation(line: 732, column: 8, scope: !11916)
!11920 = !DILocation(line: 732, column: 41, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11916, file: !677, line: 732, column: 3)
!11922 = !DILocation(line: 732, column: 3, scope: !11916)
!11923 = !DILocation(line: 734, column: 14, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11921, file: !677, line: 733, column: 5)
!11925 = !DILocation(line: 734, column: 22, scope: !11924)
!11926 = !DILocation(line: 734, column: 12, scope: !11924)
!11927 = !DILocation(line: 735, column: 13, scope: !11924)
!11928 = !DILocation(line: 735, column: 7, scope: !11924)
!11929 = !DILocation(line: 736, column: 5, scope: !11924)
!11930 = !DILocation(line: 732, column: 58, scope: !11921)
!11931 = !DILocation(line: 732, column: 56, scope: !11921)
!11932 = !DILocation(line: 732, column: 3, scope: !11921)
!11933 = distinct !{!11933, !11922, !11934}
!11934 = !DILocation(line: 736, column: 5, scope: !11916)
!11935 = !DILocation(line: 741, column: 9, scope: !11820)
!11936 = !DILocation(line: 741, column: 16, scope: !11820)
!11937 = !DILocation(line: 741, column: 3, scope: !11820)
!11938 = !DILocation(line: 742, column: 9, scope: !11820)
!11939 = !DILocation(line: 742, column: 3, scope: !11820)
!11940 = !DILocation(line: 743, column: 1, scope: !11820)
!11941 = distinct !DISubprogram(name: "hash_rehash", scope: !677, file: !677, line: 943, type: !11942, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!11942 = !DISubroutineType(types: !11943)
!11943 = !{!139, !720, !52}
!11944 = !DILocalVariable(name: "table", arg: 1, scope: !11941, file: !677, line: 943, type: !720)
!11945 = !DILocation(line: 943, column: 26, scope: !11941)
!11946 = !DILocalVariable(name: "candidate", arg: 2, scope: !11941, file: !677, line: 943, type: !52)
!11947 = !DILocation(line: 943, column: 40, scope: !11941)
!11948 = !DILocalVariable(name: "storage", scope: !11941, file: !677, line: 945, type: !675)
!11949 = !DILocation(line: 945, column: 14, scope: !11941)
!11950 = !DILocalVariable(name: "new_table", scope: !11941, file: !677, line: 946, type: !720)
!11951 = !DILocation(line: 946, column: 15, scope: !11941)
!11952 = !DILocalVariable(name: "new_size", scope: !11941, file: !677, line: 947, type: !52)
!11953 = !DILocation(line: 947, column: 10, scope: !11941)
!11954 = !DILocation(line: 947, column: 42, scope: !11941)
!11955 = !DILocation(line: 947, column: 53, scope: !11941)
!11956 = !DILocation(line: 947, column: 60, scope: !11941)
!11957 = !DILocation(line: 947, column: 21, scope: !11941)
!11958 = !DILocation(line: 949, column: 8, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11941, file: !677, line: 949, column: 7)
!11960 = !DILocation(line: 949, column: 7, scope: !11941)
!11961 = !DILocation(line: 950, column: 5, scope: !11959)
!11962 = !DILocation(line: 951, column: 7, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11941, file: !677, line: 951, column: 7)
!11964 = !DILocation(line: 951, column: 19, scope: !11963)
!11965 = !DILocation(line: 951, column: 26, scope: !11963)
!11966 = !DILocation(line: 951, column: 16, scope: !11963)
!11967 = !DILocation(line: 951, column: 7, scope: !11941)
!11968 = !DILocation(line: 952, column: 5, scope: !11963)
!11969 = !DILocation(line: 953, column: 13, scope: !11941)
!11970 = !DILocation(line: 954, column: 31, scope: !11941)
!11971 = !DILocation(line: 954, column: 23, scope: !11941)
!11972 = !DILocation(line: 954, column: 3, scope: !11941)
!11973 = !DILocation(line: 954, column: 14, scope: !11941)
!11974 = !DILocation(line: 954, column: 21, scope: !11941)
!11975 = !DILocation(line: 955, column: 7, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11941, file: !677, line: 955, column: 7)
!11977 = !DILocation(line: 955, column: 18, scope: !11976)
!11978 = !DILocation(line: 955, column: 25, scope: !11976)
!11979 = !DILocation(line: 955, column: 7, scope: !11941)
!11980 = !DILocation(line: 956, column: 5, scope: !11976)
!11981 = !DILocation(line: 957, column: 26, scope: !11941)
!11982 = !DILocation(line: 957, column: 3, scope: !11941)
!11983 = !DILocation(line: 957, column: 14, scope: !11941)
!11984 = !DILocation(line: 957, column: 24, scope: !11941)
!11985 = !DILocation(line: 958, column: 29, scope: !11941)
!11986 = !DILocation(line: 958, column: 40, scope: !11941)
!11987 = !DILocation(line: 958, column: 49, scope: !11941)
!11988 = !DILocation(line: 958, column: 47, scope: !11941)
!11989 = !DILocation(line: 958, column: 3, scope: !11941)
!11990 = !DILocation(line: 958, column: 14, scope: !11941)
!11991 = !DILocation(line: 958, column: 27, scope: !11941)
!11992 = !DILocation(line: 959, column: 3, scope: !11941)
!11993 = !DILocation(line: 959, column: 14, scope: !11941)
!11994 = !DILocation(line: 959, column: 29, scope: !11941)
!11995 = !DILocation(line: 960, column: 3, scope: !11941)
!11996 = !DILocation(line: 960, column: 14, scope: !11941)
!11997 = !DILocation(line: 960, column: 24, scope: !11941)
!11998 = !DILocation(line: 961, column: 23, scope: !11941)
!11999 = !DILocation(line: 961, column: 30, scope: !11941)
!12000 = !DILocation(line: 961, column: 3, scope: !11941)
!12001 = !DILocation(line: 961, column: 14, scope: !11941)
!12002 = !DILocation(line: 961, column: 21, scope: !11941)
!12003 = !DILocation(line: 962, column: 23, scope: !11941)
!12004 = !DILocation(line: 962, column: 30, scope: !11941)
!12005 = !DILocation(line: 962, column: 3, scope: !11941)
!12006 = !DILocation(line: 962, column: 14, scope: !11941)
!12007 = !DILocation(line: 962, column: 21, scope: !11941)
!12008 = !DILocation(line: 963, column: 27, scope: !11941)
!12009 = !DILocation(line: 963, column: 34, scope: !11941)
!12010 = !DILocation(line: 963, column: 3, scope: !11941)
!12011 = !DILocation(line: 963, column: 14, scope: !11941)
!12012 = !DILocation(line: 963, column: 25, scope: !11941)
!12013 = !DILocation(line: 964, column: 27, scope: !11941)
!12014 = !DILocation(line: 964, column: 34, scope: !11941)
!12015 = !DILocation(line: 964, column: 3, scope: !11941)
!12016 = !DILocation(line: 964, column: 14, scope: !11941)
!12017 = !DILocation(line: 964, column: 25, scope: !11941)
!12018 = !DILocation(line: 984, column: 32, scope: !11941)
!12019 = !DILocation(line: 984, column: 39, scope: !11941)
!12020 = !DILocation(line: 984, column: 3, scope: !11941)
!12021 = !DILocation(line: 984, column: 14, scope: !11941)
!12022 = !DILocation(line: 984, column: 30, scope: !11941)
!12023 = !DILocation(line: 986, column: 25, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !11941, file: !677, line: 986, column: 7)
!12025 = !DILocation(line: 986, column: 36, scope: !12024)
!12026 = !DILocation(line: 986, column: 7, scope: !12024)
!12027 = !DILocation(line: 986, column: 7, scope: !11941)
!12028 = !DILocation(line: 989, column: 13, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12024, file: !677, line: 987, column: 5)
!12030 = !DILocation(line: 989, column: 20, scope: !12029)
!12031 = !DILocation(line: 989, column: 7, scope: !12029)
!12032 = !DILocation(line: 990, column: 23, scope: !12029)
!12033 = !DILocation(line: 990, column: 34, scope: !12029)
!12034 = !DILocation(line: 990, column: 7, scope: !12029)
!12035 = !DILocation(line: 990, column: 14, scope: !12029)
!12036 = !DILocation(line: 990, column: 21, scope: !12029)
!12037 = !DILocation(line: 991, column: 29, scope: !12029)
!12038 = !DILocation(line: 991, column: 40, scope: !12029)
!12039 = !DILocation(line: 991, column: 7, scope: !12029)
!12040 = !DILocation(line: 991, column: 14, scope: !12029)
!12041 = !DILocation(line: 991, column: 27, scope: !12029)
!12042 = !DILocation(line: 992, column: 26, scope: !12029)
!12043 = !DILocation(line: 992, column: 37, scope: !12029)
!12044 = !DILocation(line: 992, column: 7, scope: !12029)
!12045 = !DILocation(line: 992, column: 14, scope: !12029)
!12046 = !DILocation(line: 992, column: 24, scope: !12029)
!12047 = !DILocation(line: 993, column: 31, scope: !12029)
!12048 = !DILocation(line: 993, column: 42, scope: !12029)
!12049 = !DILocation(line: 993, column: 7, scope: !12029)
!12050 = !DILocation(line: 993, column: 14, scope: !12029)
!12051 = !DILocation(line: 993, column: 29, scope: !12029)
!12052 = !DILocation(line: 994, column: 32, scope: !12029)
!12053 = !DILocation(line: 994, column: 43, scope: !12029)
!12054 = !DILocation(line: 994, column: 7, scope: !12029)
!12055 = !DILocation(line: 994, column: 14, scope: !12029)
!12056 = !DILocation(line: 994, column: 30, scope: !12029)
!12057 = !DILocation(line: 996, column: 7, scope: !12029)
!12058 = !DILocation(line: 1012, column: 28, scope: !11941)
!12059 = !DILocation(line: 1012, column: 39, scope: !11941)
!12060 = !DILocation(line: 1012, column: 3, scope: !11941)
!12061 = !DILocation(line: 1012, column: 10, scope: !11941)
!12062 = !DILocation(line: 1012, column: 26, scope: !11941)
!12063 = !DILocation(line: 1013, column: 28, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !11941, file: !677, line: 1013, column: 7)
!12065 = !DILocation(line: 1013, column: 35, scope: !12064)
!12066 = !DILocation(line: 1013, column: 10, scope: !12064)
!12067 = !DILocation(line: 1014, column: 10, scope: !12064)
!12068 = !DILocation(line: 1014, column: 31, scope: !12064)
!12069 = !DILocation(line: 1014, column: 38, scope: !12064)
!12070 = !DILocation(line: 1014, column: 13, scope: !12064)
!12071 = !DILocation(line: 1013, column: 7, scope: !11941)
!12072 = !DILocation(line: 1015, column: 5, scope: !12064)
!12073 = !DILocation(line: 1017, column: 9, scope: !11941)
!12074 = !DILocation(line: 1017, column: 20, scope: !11941)
!12075 = !DILocation(line: 1017, column: 3, scope: !11941)
!12076 = !DILocation(line: 1018, column: 3, scope: !11941)
!12077 = !DILocation(line: 1019, column: 1, scope: !11941)
!12078 = distinct !DISubprogram(name: "transfer_entries", scope: !677, file: !677, line: 860, type: !12079, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !671, retainedNodes: !213)
!12079 = !DISubroutineType(types: !12080)
!12080 = !{!139, !720, !720, !139}
!12081 = !DILocalVariable(name: "dst", arg: 1, scope: !12078, file: !677, line: 860, type: !720)
!12082 = !DILocation(line: 860, column: 31, scope: !12078)
!12083 = !DILocalVariable(name: "src", arg: 2, scope: !12078, file: !677, line: 860, type: !720)
!12084 = !DILocation(line: 860, column: 48, scope: !12078)
!12085 = !DILocalVariable(name: "safe", arg: 3, scope: !12078, file: !677, line: 860, type: !139)
!12086 = !DILocation(line: 860, column: 58, scope: !12078)
!12087 = !DILocalVariable(name: "bucket", scope: !12078, file: !677, line: 862, type: !680)
!12088 = !DILocation(line: 862, column: 22, scope: !12078)
!12089 = !DILocalVariable(name: "cursor", scope: !12078, file: !677, line: 863, type: !680)
!12090 = !DILocation(line: 863, column: 22, scope: !12078)
!12091 = !DILocalVariable(name: "next", scope: !12078, file: !677, line: 864, type: !680)
!12092 = !DILocation(line: 864, column: 22, scope: !12078)
!12093 = !DILocation(line: 865, column: 17, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12078, file: !677, line: 865, column: 3)
!12095 = !DILocation(line: 865, column: 22, scope: !12094)
!12096 = !DILocation(line: 865, column: 15, scope: !12094)
!12097 = !DILocation(line: 865, column: 8, scope: !12094)
!12098 = !DILocation(line: 865, column: 30, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12094, file: !677, line: 865, column: 3)
!12100 = !DILocation(line: 865, column: 39, scope: !12099)
!12101 = !DILocation(line: 865, column: 44, scope: !12099)
!12102 = !DILocation(line: 865, column: 37, scope: !12099)
!12103 = !DILocation(line: 865, column: 3, scope: !12094)
!12104 = !DILocation(line: 866, column: 9, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12099, file: !677, line: 866, column: 9)
!12106 = !DILocation(line: 866, column: 17, scope: !12105)
!12107 = !DILocation(line: 866, column: 9, scope: !12099)
!12108 = !DILocalVariable(name: "data", scope: !12109, file: !677, line: 868, type: !47)
!12109 = distinct !DILexicalBlock(scope: !12105, file: !677, line: 867, column: 7)
!12110 = !DILocation(line: 868, column: 15, scope: !12109)
!12111 = !DILocalVariable(name: "new_bucket", scope: !12109, file: !677, line: 869, type: !680)
!12112 = !DILocation(line: 869, column: 28, scope: !12109)
!12113 = !DILocation(line: 877, column: 23, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12109, file: !677, line: 877, column: 9)
!12115 = !DILocation(line: 877, column: 31, scope: !12114)
!12116 = !DILocation(line: 877, column: 21, scope: !12114)
!12117 = !DILocation(line: 877, column: 14, scope: !12114)
!12118 = !DILocation(line: 877, column: 37, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12114, file: !677, line: 877, column: 9)
!12120 = !DILocation(line: 877, column: 9, scope: !12114)
!12121 = !DILocation(line: 879, column: 20, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12119, file: !677, line: 878, column: 11)
!12123 = !DILocation(line: 879, column: 28, scope: !12122)
!12124 = !DILocation(line: 879, column: 18, scope: !12122)
!12125 = !DILocation(line: 880, column: 39, scope: !12122)
!12126 = !DILocation(line: 880, column: 44, scope: !12122)
!12127 = !DILocation(line: 880, column: 26, scope: !12122)
!12128 = !DILocation(line: 880, column: 24, scope: !12122)
!12129 = !DILocation(line: 882, column: 20, scope: !12122)
!12130 = !DILocation(line: 882, column: 28, scope: !12122)
!12131 = !DILocation(line: 882, column: 18, scope: !12122)
!12132 = !DILocation(line: 884, column: 17, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12122, file: !677, line: 884, column: 17)
!12134 = !DILocation(line: 884, column: 29, scope: !12133)
!12135 = !DILocation(line: 884, column: 17, scope: !12122)
!12136 = !DILocation(line: 888, column: 32, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12133, file: !677, line: 885, column: 15)
!12138 = !DILocation(line: 888, column: 44, scope: !12137)
!12139 = !DILocation(line: 888, column: 17, scope: !12137)
!12140 = !DILocation(line: 888, column: 25, scope: !12137)
!12141 = !DILocation(line: 888, column: 30, scope: !12137)
!12142 = !DILocation(line: 889, column: 36, scope: !12137)
!12143 = !DILocation(line: 889, column: 17, scope: !12137)
!12144 = !DILocation(line: 889, column: 29, scope: !12137)
!12145 = !DILocation(line: 889, column: 34, scope: !12137)
!12146 = !DILocation(line: 890, column: 15, scope: !12137)
!12147 = !DILocation(line: 895, column: 36, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12133, file: !677, line: 892, column: 15)
!12149 = !DILocation(line: 895, column: 17, scope: !12148)
!12150 = !DILocation(line: 895, column: 29, scope: !12148)
!12151 = !DILocation(line: 895, column: 34, scope: !12148)
!12152 = !DILocation(line: 896, column: 17, scope: !12148)
!12153 = !DILocation(line: 896, column: 22, scope: !12148)
!12154 = !DILocation(line: 896, column: 36, scope: !12148)
!12155 = !DILocation(line: 897, column: 29, scope: !12148)
!12156 = !DILocation(line: 897, column: 34, scope: !12148)
!12157 = !DILocation(line: 897, column: 17, scope: !12148)
!12158 = !DILocation(line: 899, column: 11, scope: !12122)
!12159 = !DILocation(line: 877, column: 54, scope: !12119)
!12160 = !DILocation(line: 877, column: 52, scope: !12119)
!12161 = !DILocation(line: 877, column: 9, scope: !12119)
!12162 = distinct !{!12162, !12120, !12163}
!12163 = !DILocation(line: 899, column: 11, scope: !12114)
!12164 = !DILocation(line: 903, column: 16, scope: !12109)
!12165 = !DILocation(line: 903, column: 24, scope: !12109)
!12166 = !DILocation(line: 903, column: 14, scope: !12109)
!12167 = !DILocation(line: 904, column: 9, scope: !12109)
!12168 = !DILocation(line: 904, column: 17, scope: !12109)
!12169 = !DILocation(line: 904, column: 22, scope: !12109)
!12170 = !DILocation(line: 905, column: 13, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12109, file: !677, line: 905, column: 13)
!12172 = !DILocation(line: 905, column: 13, scope: !12109)
!12173 = !DILocation(line: 906, column: 11, scope: !12171)
!12174 = !DILocation(line: 907, column: 35, scope: !12109)
!12175 = !DILocation(line: 907, column: 40, scope: !12109)
!12176 = !DILocation(line: 907, column: 22, scope: !12109)
!12177 = !DILocation(line: 907, column: 20, scope: !12109)
!12178 = !DILocation(line: 909, column: 13, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12109, file: !677, line: 909, column: 13)
!12180 = !DILocation(line: 909, column: 25, scope: !12179)
!12181 = !DILocation(line: 909, column: 13, scope: !12109)
!12182 = !DILocalVariable(name: "new_entry", scope: !12183, file: !677, line: 913, type: !680)
!12183 = distinct !DILexicalBlock(scope: !12179, file: !677, line: 910, column: 11)
!12184 = !DILocation(line: 913, column: 32, scope: !12183)
!12185 = !DILocation(line: 913, column: 60, scope: !12183)
!12186 = !DILocation(line: 913, column: 44, scope: !12183)
!12187 = !DILocation(line: 915, column: 17, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12183, file: !677, line: 915, column: 17)
!12189 = !DILocation(line: 915, column: 27, scope: !12188)
!12190 = !DILocation(line: 915, column: 17, scope: !12183)
!12191 = !DILocation(line: 916, column: 15, scope: !12188)
!12192 = !DILocation(line: 918, column: 31, scope: !12183)
!12193 = !DILocation(line: 918, column: 13, scope: !12183)
!12194 = !DILocation(line: 918, column: 24, scope: !12183)
!12195 = !DILocation(line: 918, column: 29, scope: !12183)
!12196 = !DILocation(line: 919, column: 31, scope: !12183)
!12197 = !DILocation(line: 919, column: 43, scope: !12183)
!12198 = !DILocation(line: 919, column: 13, scope: !12183)
!12199 = !DILocation(line: 919, column: 24, scope: !12183)
!12200 = !DILocation(line: 919, column: 29, scope: !12183)
!12201 = !DILocation(line: 920, column: 32, scope: !12183)
!12202 = !DILocation(line: 920, column: 13, scope: !12183)
!12203 = !DILocation(line: 920, column: 25, scope: !12183)
!12204 = !DILocation(line: 920, column: 30, scope: !12183)
!12205 = !DILocation(line: 921, column: 11, scope: !12183)
!12206 = !DILocation(line: 925, column: 32, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12179, file: !677, line: 923, column: 11)
!12208 = !DILocation(line: 925, column: 13, scope: !12207)
!12209 = !DILocation(line: 925, column: 25, scope: !12207)
!12210 = !DILocation(line: 925, column: 30, scope: !12207)
!12211 = !DILocation(line: 926, column: 13, scope: !12207)
!12212 = !DILocation(line: 926, column: 18, scope: !12207)
!12213 = !DILocation(line: 926, column: 32, scope: !12207)
!12214 = !DILocation(line: 928, column: 9, scope: !12109)
!12215 = !DILocation(line: 928, column: 17, scope: !12109)
!12216 = !DILocation(line: 928, column: 22, scope: !12109)
!12217 = !DILocation(line: 929, column: 9, scope: !12109)
!12218 = !DILocation(line: 929, column: 14, scope: !12109)
!12219 = !DILocation(line: 929, column: 28, scope: !12109)
!12220 = !DILocation(line: 930, column: 7, scope: !12109)
!12221 = !DILocation(line: 865, column: 64, scope: !12099)
!12222 = !DILocation(line: 865, column: 3, scope: !12099)
!12223 = distinct !{!12223, !12103, !12224}
!12224 = !DILocation(line: 930, column: 7, scope: !12094)
!12225 = !DILocation(line: 931, column: 3, scope: !12078)
!12226 = !DILocation(line: 932, column: 1, scope: !12078)
!12227 = distinct !DISubprogram(name: "free_entry", scope: !677, file: !677, line: 776, type: !12228, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !671, retainedNodes: !213)
!12228 = !DISubroutineType(types: !12229)
!12229 = !{null, !720, !680}
!12230 = !DILocalVariable(name: "table", arg: 1, scope: !12227, file: !677, line: 776, type: !720)
!12231 = !DILocation(line: 776, column: 25, scope: !12227)
!12232 = !DILocalVariable(name: "entry", arg: 2, scope: !12227, file: !677, line: 776, type: !680)
!12233 = !DILocation(line: 776, column: 51, scope: !12227)
!12234 = !DILocation(line: 778, column: 3, scope: !12227)
!12235 = !DILocation(line: 778, column: 10, scope: !12227)
!12236 = !DILocation(line: 778, column: 15, scope: !12227)
!12237 = !DILocation(line: 779, column: 17, scope: !12227)
!12238 = !DILocation(line: 779, column: 24, scope: !12227)
!12239 = !DILocation(line: 779, column: 3, scope: !12227)
!12240 = !DILocation(line: 779, column: 10, scope: !12227)
!12241 = !DILocation(line: 779, column: 15, scope: !12227)
!12242 = !DILocation(line: 780, column: 28, scope: !12227)
!12243 = !DILocation(line: 780, column: 3, scope: !12227)
!12244 = !DILocation(line: 780, column: 10, scope: !12227)
!12245 = !DILocation(line: 780, column: 26, scope: !12227)
!12246 = !DILocation(line: 781, column: 1, scope: !12227)
!12247 = distinct !DISubprogram(name: "allocate_entry", scope: !677, file: !677, line: 751, type: !12248, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !671, retainedNodes: !213)
!12248 = !DISubroutineType(types: !12249)
!12249 = !{!680, !720}
!12250 = !DILocalVariable(name: "table", arg: 1, scope: !12247, file: !677, line: 751, type: !720)
!12251 = !DILocation(line: 751, column: 29, scope: !12247)
!12252 = !DILocalVariable(name: "new", scope: !12247, file: !677, line: 753, type: !680)
!12253 = !DILocation(line: 753, column: 22, scope: !12247)
!12254 = !DILocation(line: 755, column: 7, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12247, file: !677, line: 755, column: 7)
!12256 = !DILocation(line: 755, column: 14, scope: !12255)
!12257 = !DILocation(line: 755, column: 7, scope: !12247)
!12258 = !DILocation(line: 757, column: 13, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12255, file: !677, line: 756, column: 5)
!12260 = !DILocation(line: 757, column: 20, scope: !12259)
!12261 = !DILocation(line: 757, column: 11, scope: !12259)
!12262 = !DILocation(line: 758, column: 32, scope: !12259)
!12263 = !DILocation(line: 758, column: 37, scope: !12259)
!12264 = !DILocation(line: 758, column: 7, scope: !12259)
!12265 = !DILocation(line: 758, column: 14, scope: !12259)
!12266 = !DILocation(line: 758, column: 30, scope: !12259)
!12267 = !DILocation(line: 759, column: 5, scope: !12259)
!12268 = !DILocation(line: 765, column: 13, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12255, file: !677, line: 761, column: 5)
!12270 = !DILocation(line: 765, column: 11, scope: !12269)
!12271 = !DILocation(line: 769, column: 10, scope: !12247)
!12272 = !DILocation(line: 769, column: 3, scope: !12247)
!12273 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !677, file: !677, line: 1038, type: !12274, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!12274 = !DISubroutineType(types: !12275)
!12275 = !{!5, !720, !553, !12276}
!12276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!12277 = !DILocalVariable(name: "table", arg: 1, scope: !12273, file: !677, line: 1038, type: !720)
!12278 = !DILocation(line: 1038, column: 36, scope: !12273)
!12279 = !DILocalVariable(name: "entry", arg: 2, scope: !12273, file: !677, line: 1038, type: !553)
!12280 = !DILocation(line: 1038, column: 55, scope: !12273)
!12281 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !12273, file: !677, line: 1039, type: !12276)
!12282 = !DILocation(line: 1039, column: 37, scope: !12273)
!12283 = !DILocalVariable(name: "data", scope: !12273, file: !677, line: 1041, type: !47)
!12284 = !DILocation(line: 1041, column: 9, scope: !12273)
!12285 = !DILocalVariable(name: "bucket", scope: !12273, file: !677, line: 1042, type: !680)
!12286 = !DILocation(line: 1042, column: 22, scope: !12273)
!12287 = !DILocation(line: 1047, column: 9, scope: !12288)
!12288 = distinct !DILexicalBlock(scope: !12273, file: !677, line: 1047, column: 7)
!12289 = !DILocation(line: 1047, column: 7, scope: !12273)
!12290 = !DILocation(line: 1048, column: 5, scope: !12288)
!12291 = !DILocation(line: 1051, column: 32, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12273, file: !677, line: 1051, column: 7)
!12293 = !DILocation(line: 1051, column: 39, scope: !12292)
!12294 = !DILocation(line: 1051, column: 15, scope: !12292)
!12295 = !DILocation(line: 1051, column: 13, scope: !12292)
!12296 = !DILocation(line: 1051, column: 63, scope: !12292)
!12297 = !DILocation(line: 1051, column: 7, scope: !12273)
!12298 = !DILocation(line: 1053, column: 11, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12300, file: !677, line: 1053, column: 11)
!12300 = distinct !DILexicalBlock(scope: !12292, file: !677, line: 1052, column: 5)
!12301 = !DILocation(line: 1053, column: 11, scope: !12300)
!12302 = !DILocation(line: 1054, column: 24, scope: !12299)
!12303 = !DILocation(line: 1054, column: 10, scope: !12299)
!12304 = !DILocation(line: 1054, column: 22, scope: !12299)
!12305 = !DILocation(line: 1054, column: 9, scope: !12299)
!12306 = !DILocation(line: 1055, column: 7, scope: !12300)
!12307 = !DILocation(line: 1063, column: 7, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12273, file: !677, line: 1063, column: 7)
!12309 = !DILocation(line: 1063, column: 14, scope: !12308)
!12310 = !DILocation(line: 1064, column: 9, scope: !12308)
!12311 = !DILocation(line: 1064, column: 16, scope: !12308)
!12312 = !DILocation(line: 1064, column: 24, scope: !12308)
!12313 = !DILocation(line: 1064, column: 43, scope: !12308)
!12314 = !DILocation(line: 1064, column: 50, scope: !12308)
!12315 = !DILocation(line: 1064, column: 41, scope: !12308)
!12316 = !DILocation(line: 1064, column: 7, scope: !12308)
!12317 = !DILocation(line: 1063, column: 7, scope: !12273)
!12318 = !DILocation(line: 1068, column: 21, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12308, file: !677, line: 1065, column: 5)
!12320 = !DILocation(line: 1068, column: 7, scope: !12319)
!12321 = !DILocation(line: 1069, column: 11, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12319, file: !677, line: 1069, column: 11)
!12323 = !DILocation(line: 1069, column: 18, scope: !12322)
!12324 = !DILocation(line: 1070, column: 13, scope: !12322)
!12325 = !DILocation(line: 1070, column: 20, scope: !12322)
!12326 = !DILocation(line: 1070, column: 28, scope: !12322)
!12327 = !DILocation(line: 1070, column: 47, scope: !12322)
!12328 = !DILocation(line: 1070, column: 54, scope: !12322)
!12329 = !DILocation(line: 1070, column: 45, scope: !12322)
!12330 = !DILocation(line: 1070, column: 11, scope: !12322)
!12331 = !DILocation(line: 1069, column: 11, scope: !12319)
!12332 = !DILocalVariable(name: "tuning", scope: !12333, file: !677, line: 1072, type: !692)
!12333 = distinct !DILexicalBlock(scope: !12322, file: !677, line: 1071, column: 9)
!12334 = !DILocation(line: 1072, column: 30, scope: !12333)
!12335 = !DILocation(line: 1072, column: 39, scope: !12333)
!12336 = !DILocation(line: 1072, column: 46, scope: !12333)
!12337 = !DILocalVariable(name: "candidate", scope: !12333, file: !677, line: 1073, type: !698)
!12338 = !DILocation(line: 1073, column: 17, scope: !12333)
!12339 = !DILocation(line: 1074, column: 14, scope: !12333)
!12340 = !DILocation(line: 1074, column: 22, scope: !12333)
!12341 = !DILocation(line: 1075, column: 17, scope: !12333)
!12342 = !DILocation(line: 1075, column: 24, scope: !12333)
!12343 = !DILocation(line: 1075, column: 36, scope: !12333)
!12344 = !DILocation(line: 1075, column: 44, scope: !12333)
!12345 = !DILocation(line: 1075, column: 34, scope: !12333)
!12346 = !DILocation(line: 1076, column: 17, scope: !12333)
!12347 = !DILocation(line: 1076, column: 24, scope: !12333)
!12348 = !DILocation(line: 1076, column: 36, scope: !12333)
!12349 = !DILocation(line: 1076, column: 44, scope: !12333)
!12350 = !DILocation(line: 1076, column: 34, scope: !12333)
!12351 = !DILocation(line: 1077, column: 19, scope: !12333)
!12352 = !DILocation(line: 1077, column: 27, scope: !12333)
!12353 = !DILocation(line: 1077, column: 17, scope: !12333)
!12354 = !DILocation(line: 1079, column: 27, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12333, file: !677, line: 1079, column: 15)
!12356 = !DILocation(line: 1079, column: 24, scope: !12355)
!12357 = !DILocation(line: 1079, column: 15, scope: !12333)
!12358 = !DILocation(line: 1080, column: 13, scope: !12355)
!12359 = !DILocation(line: 1083, column: 29, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12333, file: !677, line: 1083, column: 15)
!12361 = !DILocation(line: 1083, column: 36, scope: !12360)
!12362 = !DILocation(line: 1083, column: 16, scope: !12360)
!12363 = !DILocation(line: 1083, column: 15, scope: !12333)
!12364 = !DILocation(line: 1084, column: 13, scope: !12360)
!12365 = !DILocation(line: 1087, column: 32, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12333, file: !677, line: 1087, column: 15)
!12367 = !DILocation(line: 1087, column: 39, scope: !12366)
!12368 = !DILocation(line: 1087, column: 15, scope: !12366)
!12369 = !DILocation(line: 1087, column: 62, scope: !12366)
!12370 = !DILocation(line: 1087, column: 15, scope: !12333)
!12371 = !DILocation(line: 1088, column: 13, scope: !12366)
!12372 = !DILocation(line: 1089, column: 9, scope: !12333)
!12373 = !DILocation(line: 1090, column: 5, scope: !12319)
!12374 = !DILocation(line: 1094, column: 7, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12273, file: !677, line: 1094, column: 7)
!12376 = !DILocation(line: 1094, column: 15, scope: !12375)
!12377 = !DILocation(line: 1094, column: 7, scope: !12273)
!12378 = !DILocalVariable(name: "new_entry", scope: !12379, file: !677, line: 1096, type: !680)
!12379 = distinct !DILexicalBlock(scope: !12375, file: !677, line: 1095, column: 5)
!12380 = !DILocation(line: 1096, column: 26, scope: !12379)
!12381 = !DILocation(line: 1096, column: 54, scope: !12379)
!12382 = !DILocation(line: 1096, column: 38, scope: !12379)
!12383 = !DILocation(line: 1098, column: 11, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12379, file: !677, line: 1098, column: 11)
!12385 = !DILocation(line: 1098, column: 21, scope: !12384)
!12386 = !DILocation(line: 1098, column: 11, scope: !12379)
!12387 = !DILocation(line: 1099, column: 9, scope: !12384)
!12388 = !DILocation(line: 1103, column: 34, scope: !12379)
!12389 = !DILocation(line: 1103, column: 7, scope: !12379)
!12390 = !DILocation(line: 1103, column: 18, scope: !12379)
!12391 = !DILocation(line: 1103, column: 23, scope: !12379)
!12392 = !DILocation(line: 1104, column: 25, scope: !12379)
!12393 = !DILocation(line: 1104, column: 33, scope: !12379)
!12394 = !DILocation(line: 1104, column: 7, scope: !12379)
!12395 = !DILocation(line: 1104, column: 18, scope: !12379)
!12396 = !DILocation(line: 1104, column: 23, scope: !12379)
!12397 = !DILocation(line: 1105, column: 22, scope: !12379)
!12398 = !DILocation(line: 1105, column: 7, scope: !12379)
!12399 = !DILocation(line: 1105, column: 15, scope: !12379)
!12400 = !DILocation(line: 1105, column: 20, scope: !12379)
!12401 = !DILocation(line: 1106, column: 7, scope: !12379)
!12402 = !DILocation(line: 1106, column: 14, scope: !12379)
!12403 = !DILocation(line: 1106, column: 23, scope: !12379)
!12404 = !DILocation(line: 1107, column: 7, scope: !12379)
!12405 = !DILocation(line: 1112, column: 27, scope: !12273)
!12406 = !DILocation(line: 1112, column: 3, scope: !12273)
!12407 = !DILocation(line: 1112, column: 11, scope: !12273)
!12408 = !DILocation(line: 1112, column: 16, scope: !12273)
!12409 = !DILocation(line: 1113, column: 3, scope: !12273)
!12410 = !DILocation(line: 1113, column: 10, scope: !12273)
!12411 = !DILocation(line: 1113, column: 19, scope: !12273)
!12412 = !DILocation(line: 1114, column: 3, scope: !12273)
!12413 = !DILocation(line: 1114, column: 10, scope: !12273)
!12414 = !DILocation(line: 1114, column: 24, scope: !12273)
!12415 = !DILocation(line: 1116, column: 3, scope: !12273)
!12416 = !DILocation(line: 1117, column: 1, scope: !12273)
!12417 = distinct !DISubprogram(name: "hash_find_entry", scope: !677, file: !677, line: 790, type: !12418, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !671, retainedNodes: !213)
!12418 = !DISubroutineType(types: !12419)
!12419 = !{!47, !720, !553, !12420, !139}
!12420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!12421 = !DILocalVariable(name: "table", arg: 1, scope: !12417, file: !677, line: 790, type: !720)
!12422 = !DILocation(line: 790, column: 30, scope: !12417)
!12423 = !DILocalVariable(name: "entry", arg: 2, scope: !12417, file: !677, line: 790, type: !553)
!12424 = !DILocation(line: 790, column: 49, scope: !12417)
!12425 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !12417, file: !677, line: 791, type: !12420)
!12426 = !DILocation(line: 791, column: 38, scope: !12417)
!12427 = !DILocalVariable(name: "delete", arg: 4, scope: !12417, file: !677, line: 791, type: !139)
!12428 = !DILocation(line: 791, column: 56, scope: !12417)
!12429 = !DILocalVariable(name: "bucket", scope: !12417, file: !677, line: 793, type: !680)
!12430 = !DILocation(line: 793, column: 22, scope: !12417)
!12431 = !DILocation(line: 793, column: 44, scope: !12417)
!12432 = !DILocation(line: 793, column: 51, scope: !12417)
!12433 = !DILocation(line: 793, column: 31, scope: !12417)
!12434 = !DILocalVariable(name: "cursor", scope: !12417, file: !677, line: 794, type: !680)
!12435 = !DILocation(line: 794, column: 22, scope: !12417)
!12436 = !DILocation(line: 796, column: 18, scope: !12417)
!12437 = !DILocation(line: 796, column: 4, scope: !12417)
!12438 = !DILocation(line: 796, column: 16, scope: !12417)
!12439 = !DILocation(line: 799, column: 7, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12417, file: !677, line: 799, column: 7)
!12441 = !DILocation(line: 799, column: 15, scope: !12440)
!12442 = !DILocation(line: 799, column: 20, scope: !12440)
!12443 = !DILocation(line: 799, column: 7, scope: !12417)
!12444 = !DILocation(line: 800, column: 5, scope: !12440)
!12445 = !DILocation(line: 803, column: 7, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12417, file: !677, line: 803, column: 7)
!12447 = !DILocation(line: 803, column: 16, scope: !12446)
!12448 = !DILocation(line: 803, column: 24, scope: !12446)
!12449 = !DILocation(line: 803, column: 13, scope: !12446)
!12450 = !DILocation(line: 803, column: 29, scope: !12446)
!12451 = !DILocation(line: 803, column: 32, scope: !12446)
!12452 = !DILocation(line: 803, column: 39, scope: !12446)
!12453 = !DILocation(line: 803, column: 51, scope: !12446)
!12454 = !DILocation(line: 803, column: 58, scope: !12446)
!12455 = !DILocation(line: 803, column: 66, scope: !12446)
!12456 = !DILocation(line: 803, column: 7, scope: !12417)
!12457 = !DILocalVariable(name: "data", scope: !12458, file: !677, line: 805, type: !47)
!12458 = distinct !DILexicalBlock(scope: !12446, file: !677, line: 804, column: 5)
!12459 = !DILocation(line: 805, column: 13, scope: !12458)
!12460 = !DILocation(line: 805, column: 20, scope: !12458)
!12461 = !DILocation(line: 805, column: 28, scope: !12458)
!12462 = !DILocation(line: 807, column: 11, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12458, file: !677, line: 807, column: 11)
!12464 = !DILocation(line: 807, column: 11, scope: !12458)
!12465 = !DILocation(line: 809, column: 15, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12467, file: !677, line: 809, column: 15)
!12467 = distinct !DILexicalBlock(scope: !12463, file: !677, line: 808, column: 9)
!12468 = !DILocation(line: 809, column: 23, scope: !12466)
!12469 = !DILocation(line: 809, column: 15, scope: !12467)
!12470 = !DILocalVariable(name: "next", scope: !12471, file: !677, line: 811, type: !680)
!12471 = distinct !DILexicalBlock(scope: !12466, file: !677, line: 810, column: 13)
!12472 = !DILocation(line: 811, column: 34, scope: !12471)
!12473 = !DILocation(line: 811, column: 41, scope: !12471)
!12474 = !DILocation(line: 811, column: 49, scope: !12471)
!12475 = !DILocation(line: 815, column: 16, scope: !12471)
!12476 = !DILocation(line: 815, column: 26, scope: !12471)
!12477 = !DILocation(line: 815, column: 25, scope: !12471)
!12478 = !DILocation(line: 816, column: 27, scope: !12471)
!12479 = !DILocation(line: 816, column: 34, scope: !12471)
!12480 = !DILocation(line: 816, column: 15, scope: !12471)
!12481 = !DILocation(line: 817, column: 13, scope: !12471)
!12482 = !DILocation(line: 820, column: 15, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12466, file: !677, line: 819, column: 13)
!12484 = !DILocation(line: 820, column: 23, scope: !12483)
!12485 = !DILocation(line: 820, column: 28, scope: !12483)
!12486 = !DILocation(line: 822, column: 9, scope: !12467)
!12487 = !DILocation(line: 824, column: 14, scope: !12458)
!12488 = !DILocation(line: 824, column: 7, scope: !12458)
!12489 = !DILocation(line: 828, column: 17, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12417, file: !677, line: 828, column: 3)
!12491 = !DILocation(line: 828, column: 15, scope: !12490)
!12492 = !DILocation(line: 828, column: 8, scope: !12490)
!12493 = !DILocation(line: 828, column: 25, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12490, file: !677, line: 828, column: 3)
!12495 = !DILocation(line: 828, column: 33, scope: !12494)
!12496 = !DILocation(line: 828, column: 3, scope: !12490)
!12497 = !DILocation(line: 830, column: 11, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12499, file: !677, line: 830, column: 11)
!12499 = distinct !DILexicalBlock(scope: !12494, file: !677, line: 829, column: 5)
!12500 = !DILocation(line: 830, column: 20, scope: !12498)
!12501 = !DILocation(line: 830, column: 28, scope: !12498)
!12502 = !DILocation(line: 830, column: 34, scope: !12498)
!12503 = !DILocation(line: 830, column: 17, scope: !12498)
!12504 = !DILocation(line: 831, column: 11, scope: !12498)
!12505 = !DILocation(line: 831, column: 14, scope: !12498)
!12506 = !DILocation(line: 831, column: 21, scope: !12498)
!12507 = !DILocation(line: 831, column: 33, scope: !12498)
!12508 = !DILocation(line: 831, column: 40, scope: !12498)
!12509 = !DILocation(line: 831, column: 48, scope: !12498)
!12510 = !DILocation(line: 831, column: 54, scope: !12498)
!12511 = !DILocation(line: 830, column: 11, scope: !12499)
!12512 = !DILocalVariable(name: "data", scope: !12513, file: !677, line: 833, type: !47)
!12513 = distinct !DILexicalBlock(scope: !12498, file: !677, line: 832, column: 9)
!12514 = !DILocation(line: 833, column: 17, scope: !12513)
!12515 = !DILocation(line: 833, column: 24, scope: !12513)
!12516 = !DILocation(line: 833, column: 32, scope: !12513)
!12517 = !DILocation(line: 833, column: 38, scope: !12513)
!12518 = !DILocation(line: 835, column: 15, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12513, file: !677, line: 835, column: 15)
!12520 = !DILocation(line: 835, column: 15, scope: !12513)
!12521 = !DILocalVariable(name: "next", scope: !12522, file: !677, line: 837, type: !680)
!12522 = distinct !DILexicalBlock(scope: !12519, file: !677, line: 836, column: 13)
!12523 = !DILocation(line: 837, column: 34, scope: !12522)
!12524 = !DILocation(line: 837, column: 41, scope: !12522)
!12525 = !DILocation(line: 837, column: 49, scope: !12522)
!12526 = !DILocation(line: 841, column: 30, scope: !12522)
!12527 = !DILocation(line: 841, column: 36, scope: !12522)
!12528 = !DILocation(line: 841, column: 15, scope: !12522)
!12529 = !DILocation(line: 841, column: 23, scope: !12522)
!12530 = !DILocation(line: 841, column: 28, scope: !12522)
!12531 = !DILocation(line: 842, column: 27, scope: !12522)
!12532 = !DILocation(line: 842, column: 34, scope: !12522)
!12533 = !DILocation(line: 842, column: 15, scope: !12522)
!12534 = !DILocation(line: 843, column: 13, scope: !12522)
!12535 = !DILocation(line: 845, column: 18, scope: !12513)
!12536 = !DILocation(line: 845, column: 11, scope: !12513)
!12537 = !DILocation(line: 847, column: 5, scope: !12499)
!12538 = !DILocation(line: 828, column: 48, scope: !12494)
!12539 = !DILocation(line: 828, column: 56, scope: !12494)
!12540 = !DILocation(line: 828, column: 46, scope: !12494)
!12541 = !DILocation(line: 828, column: 3, scope: !12494)
!12542 = distinct !{!12542, !12496, !12543}
!12543 = !DILocation(line: 847, column: 5, scope: !12490)
!12544 = !DILocation(line: 850, column: 3, scope: !12417)
!12545 = !DILocation(line: 851, column: 1, scope: !12417)
!12546 = distinct !DISubprogram(name: "hash_insert", scope: !677, file: !677, line: 1126, type: !12547, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!12547 = !DISubroutineType(types: !12548)
!12548 = !{!47, !720, !553}
!12549 = !DILocalVariable(name: "table", arg: 1, scope: !12546, file: !677, line: 1126, type: !720)
!12550 = !DILocation(line: 1126, column: 26, scope: !12546)
!12551 = !DILocalVariable(name: "entry", arg: 2, scope: !12546, file: !677, line: 1126, type: !553)
!12552 = !DILocation(line: 1126, column: 45, scope: !12546)
!12553 = !DILocalVariable(name: "matched_ent", scope: !12546, file: !677, line: 1128, type: !553)
!12554 = !DILocation(line: 1128, column: 15, scope: !12546)
!12555 = !DILocalVariable(name: "err", scope: !12546, file: !677, line: 1129, type: !5)
!12556 = !DILocation(line: 1129, column: 7, scope: !12546)
!12557 = !DILocation(line: 1129, column: 36, scope: !12546)
!12558 = !DILocation(line: 1129, column: 43, scope: !12546)
!12559 = !DILocation(line: 1129, column: 13, scope: !12546)
!12560 = !DILocation(line: 1130, column: 11, scope: !12546)
!12561 = !DILocation(line: 1130, column: 15, scope: !12546)
!12562 = !DILocation(line: 1132, column: 23, scope: !12546)
!12563 = !DILocation(line: 1132, column: 27, scope: !12546)
!12564 = !DILocation(line: 1132, column: 34, scope: !12546)
!12565 = !DILocation(line: 1132, column: 48, scope: !12546)
!12566 = !DILocation(line: 1130, column: 3, scope: !12546)
!12567 = distinct !DISubprogram(name: "hash_delete", scope: !677, file: !677, line: 1140, type: !12547, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !671, retainedNodes: !213)
!12568 = !DILocalVariable(name: "table", arg: 1, scope: !12567, file: !677, line: 1140, type: !720)
!12569 = !DILocation(line: 1140, column: 26, scope: !12567)
!12570 = !DILocalVariable(name: "entry", arg: 2, scope: !12567, file: !677, line: 1140, type: !553)
!12571 = !DILocation(line: 1140, column: 45, scope: !12567)
!12572 = !DILocalVariable(name: "data", scope: !12567, file: !677, line: 1142, type: !47)
!12573 = !DILocation(line: 1142, column: 9, scope: !12567)
!12574 = !DILocalVariable(name: "bucket", scope: !12567, file: !677, line: 1143, type: !680)
!12575 = !DILocation(line: 1143, column: 22, scope: !12567)
!12576 = !DILocation(line: 1145, column: 27, scope: !12567)
!12577 = !DILocation(line: 1145, column: 34, scope: !12567)
!12578 = !DILocation(line: 1145, column: 10, scope: !12567)
!12579 = !DILocation(line: 1145, column: 8, scope: !12567)
!12580 = !DILocation(line: 1146, column: 8, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12567, file: !677, line: 1146, column: 7)
!12582 = !DILocation(line: 1146, column: 7, scope: !12567)
!12583 = !DILocation(line: 1147, column: 5, scope: !12581)
!12584 = !DILocation(line: 1149, column: 3, scope: !12567)
!12585 = !DILocation(line: 1149, column: 10, scope: !12567)
!12586 = !DILocation(line: 1149, column: 19, scope: !12567)
!12587 = !DILocation(line: 1150, column: 8, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12567, file: !677, line: 1150, column: 7)
!12589 = !DILocation(line: 1150, column: 16, scope: !12588)
!12590 = !DILocation(line: 1150, column: 7, scope: !12567)
!12591 = !DILocation(line: 1152, column: 7, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12588, file: !677, line: 1151, column: 5)
!12593 = !DILocation(line: 1152, column: 14, scope: !12592)
!12594 = !DILocation(line: 1152, column: 28, scope: !12592)
!12595 = !DILocation(line: 1157, column: 11, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12592, file: !677, line: 1157, column: 11)
!12597 = !DILocation(line: 1157, column: 18, scope: !12596)
!12598 = !DILocation(line: 1158, column: 13, scope: !12596)
!12599 = !DILocation(line: 1158, column: 20, scope: !12596)
!12600 = !DILocation(line: 1158, column: 28, scope: !12596)
!12601 = !DILocation(line: 1158, column: 47, scope: !12596)
!12602 = !DILocation(line: 1158, column: 54, scope: !12596)
!12603 = !DILocation(line: 1158, column: 45, scope: !12596)
!12604 = !DILocation(line: 1158, column: 11, scope: !12596)
!12605 = !DILocation(line: 1157, column: 11, scope: !12592)
!12606 = !DILocation(line: 1162, column: 25, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12596, file: !677, line: 1159, column: 9)
!12608 = !DILocation(line: 1162, column: 11, scope: !12607)
!12609 = !DILocation(line: 1163, column: 15, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12607, file: !677, line: 1163, column: 15)
!12611 = !DILocation(line: 1163, column: 22, scope: !12610)
!12612 = !DILocation(line: 1164, column: 17, scope: !12610)
!12613 = !DILocation(line: 1164, column: 24, scope: !12610)
!12614 = !DILocation(line: 1164, column: 32, scope: !12610)
!12615 = !DILocation(line: 1164, column: 51, scope: !12610)
!12616 = !DILocation(line: 1164, column: 58, scope: !12610)
!12617 = !DILocation(line: 1164, column: 49, scope: !12610)
!12618 = !DILocation(line: 1164, column: 15, scope: !12610)
!12619 = !DILocation(line: 1163, column: 15, scope: !12607)
!12620 = !DILocalVariable(name: "tuning", scope: !12621, file: !677, line: 1166, type: !692)
!12621 = distinct !DILexicalBlock(scope: !12610, file: !677, line: 1165, column: 13)
!12622 = !DILocation(line: 1166, column: 34, scope: !12621)
!12623 = !DILocation(line: 1166, column: 43, scope: !12621)
!12624 = !DILocation(line: 1166, column: 50, scope: !12621)
!12625 = !DILocalVariable(name: "candidate", scope: !12621, file: !677, line: 1167, type: !52)
!12626 = !DILocation(line: 1167, column: 22, scope: !12621)
!12627 = !DILocation(line: 1168, column: 18, scope: !12621)
!12628 = !DILocation(line: 1168, column: 26, scope: !12621)
!12629 = !DILocation(line: 1169, column: 20, scope: !12621)
!12630 = !DILocation(line: 1169, column: 27, scope: !12621)
!12631 = !DILocation(line: 1169, column: 39, scope: !12621)
!12632 = !DILocation(line: 1169, column: 47, scope: !12621)
!12633 = !DILocation(line: 1169, column: 37, scope: !12621)
!12634 = !DILocation(line: 1170, column: 21, scope: !12621)
!12635 = !DILocation(line: 1170, column: 28, scope: !12621)
!12636 = !DILocation(line: 1170, column: 40, scope: !12621)
!12637 = !DILocation(line: 1170, column: 48, scope: !12621)
!12638 = !DILocation(line: 1170, column: 38, scope: !12621)
!12639 = !DILocation(line: 1171, column: 23, scope: !12621)
!12640 = !DILocation(line: 1171, column: 31, scope: !12621)
!12641 = !DILocation(line: 1171, column: 21, scope: !12621)
!12642 = !DILocation(line: 1168, column: 17, scope: !12621)
!12643 = !DILocation(line: 1173, column: 33, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12621, file: !677, line: 1173, column: 19)
!12645 = !DILocation(line: 1173, column: 40, scope: !12644)
!12646 = !DILocation(line: 1173, column: 20, scope: !12644)
!12647 = !DILocation(line: 1173, column: 19, scope: !12621)
!12648 = !DILocalVariable(name: "cursor", scope: !12649, file: !677, line: 1181, type: !680)
!12649 = distinct !DILexicalBlock(scope: !12644, file: !677, line: 1174, column: 17)
!12650 = !DILocation(line: 1181, column: 38, scope: !12649)
!12651 = !DILocation(line: 1181, column: 47, scope: !12649)
!12652 = !DILocation(line: 1181, column: 54, scope: !12649)
!12653 = !DILocalVariable(name: "next", scope: !12649, file: !677, line: 1182, type: !680)
!12654 = !DILocation(line: 1182, column: 38, scope: !12649)
!12655 = !DILocation(line: 1183, column: 19, scope: !12649)
!12656 = !DILocation(line: 1183, column: 26, scope: !12649)
!12657 = !DILocation(line: 1185, column: 30, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12649, file: !677, line: 1184, column: 21)
!12659 = !DILocation(line: 1185, column: 38, scope: !12658)
!12660 = !DILocation(line: 1185, column: 28, scope: !12658)
!12661 = !DILocation(line: 1186, column: 29, scope: !12658)
!12662 = !DILocation(line: 1186, column: 23, scope: !12658)
!12663 = !DILocation(line: 1187, column: 32, scope: !12658)
!12664 = !DILocation(line: 1187, column: 30, scope: !12658)
!12665 = distinct !{!12665, !12655, !12666}
!12666 = !DILocation(line: 1188, column: 21, scope: !12649)
!12667 = !DILocation(line: 1189, column: 19, scope: !12649)
!12668 = !DILocation(line: 1189, column: 26, scope: !12649)
!12669 = !DILocation(line: 1189, column: 42, scope: !12649)
!12670 = !DILocation(line: 1191, column: 17, scope: !12649)
!12671 = !DILocation(line: 1192, column: 13, scope: !12621)
!12672 = !DILocation(line: 1193, column: 9, scope: !12607)
!12673 = !DILocation(line: 1194, column: 5, scope: !12592)
!12674 = !DILocation(line: 1196, column: 10, scope: !12567)
!12675 = !DILocation(line: 1196, column: 3, scope: !12567)
!12676 = !DILocation(line: 1197, column: 1, scope: !12567)
!12677 = distinct !DISubprogram(name: "triple_hash", scope: !12678, file: !12678, line: 34, type: !706, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1359, retainedNodes: !213)
!12678 = !DIFile(filename: "lib/hash-triple.c", directory: "/home/mohamad/clone/coreutils")
!12679 = !DILocalVariable(name: "x", arg: 1, scope: !12677, file: !12678, line: 34, type: !553)
!12680 = !DILocation(line: 34, column: 26, scope: !12677)
!12681 = !DILocalVariable(name: "table_size", arg: 2, scope: !12677, file: !12678, line: 34, type: !52)
!12682 = !DILocation(line: 34, column: 36, scope: !12677)
!12683 = !DILocalVariable(name: "p", scope: !12677, file: !12678, line: 36, type: !1362)
!12684 = !DILocation(line: 36, column: 26, scope: !12677)
!12685 = !DILocation(line: 36, column: 30, scope: !12677)
!12686 = !DILocalVariable(name: "tmp", scope: !12677, file: !12678, line: 37, type: !52)
!12687 = !DILocation(line: 37, column: 10, scope: !12677)
!12688 = !DILocation(line: 37, column: 26, scope: !12677)
!12689 = !DILocation(line: 37, column: 29, scope: !12677)
!12690 = !DILocation(line: 37, column: 35, scope: !12677)
!12691 = !DILocation(line: 37, column: 16, scope: !12677)
!12692 = !DILocation(line: 40, column: 11, scope: !12677)
!12693 = !DILocation(line: 40, column: 17, scope: !12677)
!12694 = !DILocation(line: 40, column: 20, scope: !12677)
!12695 = !DILocation(line: 40, column: 15, scope: !12677)
!12696 = !DILocation(line: 40, column: 30, scope: !12677)
!12697 = !DILocation(line: 40, column: 28, scope: !12677)
!12698 = !DILocation(line: 40, column: 3, scope: !12677)
!12699 = distinct !DISubprogram(name: "triple_hash_no_name", scope: !12678, file: !12678, line: 45, type: !706, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1359, retainedNodes: !213)
!12700 = !DILocalVariable(name: "x", arg: 1, scope: !12699, file: !12678, line: 45, type: !553)
!12701 = !DILocation(line: 45, column: 34, scope: !12699)
!12702 = !DILocalVariable(name: "table_size", arg: 2, scope: !12699, file: !12678, line: 45, type: !52)
!12703 = !DILocation(line: 45, column: 44, scope: !12699)
!12704 = !DILocalVariable(name: "p", scope: !12699, file: !12678, line: 47, type: !1362)
!12705 = !DILocation(line: 47, column: 26, scope: !12699)
!12706 = !DILocation(line: 47, column: 30, scope: !12699)
!12707 = !DILocation(line: 50, column: 10, scope: !12699)
!12708 = !DILocation(line: 50, column: 13, scope: !12699)
!12709 = !DILocation(line: 50, column: 22, scope: !12699)
!12710 = !DILocation(line: 50, column: 20, scope: !12699)
!12711 = !DILocation(line: 50, column: 3, scope: !12699)
!12712 = distinct !DISubprogram(name: "triple_compare", scope: !12678, file: !12678, line: 55, type: !711, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1359, retainedNodes: !213)
!12713 = !DILocalVariable(name: "x", arg: 1, scope: !12712, file: !12678, line: 55, type: !553)
!12714 = !DILocation(line: 55, column: 29, scope: !12712)
!12715 = !DILocalVariable(name: "y", arg: 2, scope: !12712, file: !12678, line: 55, type: !553)
!12716 = !DILocation(line: 55, column: 44, scope: !12712)
!12717 = !DILocalVariable(name: "a", scope: !12712, file: !12678, line: 57, type: !1362)
!12718 = !DILocation(line: 57, column: 26, scope: !12712)
!12719 = !DILocation(line: 57, column: 30, scope: !12712)
!12720 = !DILocalVariable(name: "b", scope: !12712, file: !12678, line: 58, type: !1362)
!12721 = !DILocation(line: 58, column: 26, scope: !12712)
!12722 = !DILocation(line: 58, column: 30, scope: !12712)
!12723 = !DILocation(line: 59, column: 11, scope: !12712)
!12724 = !DILocation(line: 59, column: 31, scope: !12712)
!12725 = !DILocation(line: 59, column: 45, scope: !12712)
!12726 = !DILocation(line: 59, column: 48, scope: !12712)
!12727 = !DILocation(line: 59, column: 54, scope: !12712)
!12728 = !DILocation(line: 59, column: 57, scope: !12712)
!12729 = !DILocation(line: 59, column: 34, scope: !12712)
!12730 = !DILocation(line: 0, scope: !12712)
!12731 = !DILocation(line: 59, column: 10, scope: !12712)
!12732 = !DILocation(line: 59, column: 3, scope: !12712)
!12733 = distinct !DISubprogram(name: "triple_compare_ino_str", scope: !12678, file: !12678, line: 63, type: !711, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1359, retainedNodes: !213)
!12734 = !DILocalVariable(name: "x", arg: 1, scope: !12733, file: !12678, line: 63, type: !553)
!12735 = !DILocation(line: 63, column: 37, scope: !12733)
!12736 = !DILocalVariable(name: "y", arg: 2, scope: !12733, file: !12678, line: 63, type: !553)
!12737 = !DILocation(line: 63, column: 52, scope: !12733)
!12738 = !DILocalVariable(name: "a", scope: !12733, file: !12678, line: 65, type: !1362)
!12739 = !DILocation(line: 65, column: 26, scope: !12733)
!12740 = !DILocation(line: 65, column: 30, scope: !12733)
!12741 = !DILocalVariable(name: "b", scope: !12733, file: !12678, line: 66, type: !1362)
!12742 = !DILocation(line: 66, column: 26, scope: !12733)
!12743 = !DILocation(line: 66, column: 30, scope: !12733)
!12744 = !DILocation(line: 67, column: 11, scope: !12733)
!12745 = !DILocation(line: 67, column: 31, scope: !12733)
!12746 = !DILocation(line: 67, column: 34, scope: !12733)
!12747 = !DILocation(line: 0, scope: !12733)
!12748 = !DILocation(line: 67, column: 10, scope: !12733)
!12749 = !DILocation(line: 67, column: 3, scope: !12733)
!12750 = distinct !DISubprogram(name: "triple_free", scope: !12678, file: !12678, line: 72, type: !716, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1359, retainedNodes: !213)
!12751 = !DILocalVariable(name: "x", arg: 1, scope: !12750, file: !12678, line: 72, type: !47)
!12752 = !DILocation(line: 72, column: 20, scope: !12750)
!12753 = !DILocalVariable(name: "a", scope: !12750, file: !12678, line: 74, type: !1369)
!12754 = !DILocation(line: 74, column: 20, scope: !12750)
!12755 = !DILocation(line: 74, column: 24, scope: !12750)
!12756 = !DILocation(line: 75, column: 9, scope: !12750)
!12757 = !DILocation(line: 75, column: 12, scope: !12750)
!12758 = !DILocation(line: 75, column: 3, scope: !12750)
!12759 = !DILocation(line: 76, column: 9, scope: !12750)
!12760 = !DILocation(line: 76, column: 3, scope: !12750)
!12761 = !DILocation(line: 77, column: 1, scope: !12750)
!12762 = distinct !DISubprogram(name: "opendirat", scope: !12763, file: !12763, line: 36, type: !12764, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !213)
!12763 = !DIFile(filename: "lib/opendirat.c", directory: "/home/mohamad/clone/coreutils")
!12764 = !DISubroutineType(types: !12765)
!12765 = !{!530, !5, !113, !5, !158}
!12766 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !12762, file: !12763, line: 36, type: !5)
!12767 = !DILocation(line: 36, column: 16, scope: !12762)
!12768 = !DILocalVariable(name: "dir", arg: 2, scope: !12762, file: !12763, line: 36, type: !113)
!12769 = !DILocation(line: 36, column: 36, scope: !12762)
!12770 = !DILocalVariable(name: "extra_flags", arg: 3, scope: !12762, file: !12763, line: 36, type: !5)
!12771 = !DILocation(line: 36, column: 45, scope: !12762)
!12772 = !DILocalVariable(name: "pnew_fd", arg: 4, scope: !12762, file: !12763, line: 36, type: !158)
!12773 = !DILocation(line: 36, column: 63, scope: !12762)
!12774 = !DILocalVariable(name: "open_flags", scope: !12762, file: !12763, line: 38, type: !5)
!12775 = !DILocation(line: 38, column: 7, scope: !12762)
!12776 = !DILocation(line: 39, column: 36, scope: !12762)
!12777 = !DILocation(line: 39, column: 34, scope: !12762)
!12778 = !DILocalVariable(name: "new_fd", scope: !12762, file: !12763, line: 40, type: !5)
!12779 = !DILocation(line: 40, column: 7, scope: !12762)
!12780 = !DILocation(line: 40, column: 24, scope: !12762)
!12781 = !DILocation(line: 40, column: 32, scope: !12762)
!12782 = !DILocation(line: 40, column: 37, scope: !12762)
!12783 = !DILocation(line: 40, column: 16, scope: !12762)
!12784 = !DILocation(line: 42, column: 7, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12762, file: !12763, line: 42, column: 7)
!12786 = !DILocation(line: 42, column: 14, scope: !12785)
!12787 = !DILocation(line: 42, column: 7, scope: !12762)
!12788 = !DILocation(line: 43, column: 5, scope: !12785)
!12789 = !DILocalVariable(name: "dirp", scope: !12762, file: !12763, line: 44, type: !530)
!12790 = !DILocation(line: 44, column: 8, scope: !12762)
!12791 = !DILocation(line: 44, column: 26, scope: !12762)
!12792 = !DILocation(line: 44, column: 15, scope: !12762)
!12793 = !DILocation(line: 45, column: 7, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12762, file: !12763, line: 45, column: 7)
!12795 = !DILocation(line: 45, column: 7, scope: !12762)
!12796 = !DILocation(line: 46, column: 16, scope: !12794)
!12797 = !DILocation(line: 46, column: 6, scope: !12794)
!12798 = !DILocation(line: 46, column: 14, scope: !12794)
!12799 = !DILocation(line: 46, column: 5, scope: !12794)
!12800 = !DILocalVariable(name: "fdopendir_errno", scope: !12801, file: !12763, line: 49, type: !5)
!12801 = distinct !DILexicalBlock(scope: !12794, file: !12763, line: 48, column: 5)
!12802 = !DILocation(line: 49, column: 11, scope: !12801)
!12803 = !DILocation(line: 49, column: 29, scope: !12801)
!12804 = !DILocation(line: 50, column: 14, scope: !12801)
!12805 = !DILocation(line: 50, column: 7, scope: !12801)
!12806 = !DILocation(line: 51, column: 15, scope: !12801)
!12807 = !DILocation(line: 51, column: 7, scope: !12801)
!12808 = !DILocation(line: 51, column: 13, scope: !12801)
!12809 = !DILocation(line: 53, column: 10, scope: !12762)
!12810 = !DILocation(line: 53, column: 3, scope: !12762)
!12811 = !DILocation(line: 54, column: 1, scope: !12762)
!12812 = distinct !DISubprogram(name: "priv_set_remove_linkdir", scope: !12813, file: !12813, line: 51, type: !12814, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1373, retainedNodes: !213)
!12813 = !DIFile(filename: "./lib/priv-set.h", directory: "/home/mohamad/clone/coreutils")
!12814 = !DISubroutineType(types: !1377)
!12815 = !DILocation(line: 53, column: 3, scope: !12812)
!12816 = distinct !DISubprogram(name: "priv_set_restore_linkdir", scope: !12813, file: !12813, line: 57, type: !12814, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1373, retainedNodes: !213)
!12817 = !DILocation(line: 59, column: 3, scope: !12816)
!12818 = distinct !DISubprogram(name: "set_program_name", scope: !766, file: !766, line: 39, type: !211, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !724, retainedNodes: !213)
!12819 = !DILocalVariable(name: "argv0", arg: 1, scope: !12818, file: !766, line: 39, type: !113)
!12820 = !DILocation(line: 39, column: 31, scope: !12818)
!12821 = !DILocalVariable(name: "slash", scope: !12818, file: !766, line: 46, type: !113)
!12822 = !DILocation(line: 46, column: 15, scope: !12818)
!12823 = !DILocalVariable(name: "base", scope: !12818, file: !766, line: 47, type: !113)
!12824 = !DILocation(line: 47, column: 15, scope: !12818)
!12825 = !DILocation(line: 51, column: 7, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12818, file: !766, line: 51, column: 7)
!12827 = !DILocation(line: 51, column: 13, scope: !12826)
!12828 = !DILocation(line: 51, column: 7, scope: !12818)
!12829 = !DILocation(line: 55, column: 14, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12826, file: !766, line: 52, column: 5)
!12831 = !DILocation(line: 54, column: 7, scope: !12830)
!12832 = !DILocation(line: 56, column: 7, scope: !12830)
!12833 = !DILocation(line: 59, column: 20, scope: !12818)
!12834 = !DILocation(line: 59, column: 11, scope: !12818)
!12835 = !DILocation(line: 59, column: 9, scope: !12818)
!12836 = !DILocation(line: 60, column: 11, scope: !12818)
!12837 = !DILocation(line: 60, column: 17, scope: !12818)
!12838 = !DILocation(line: 60, column: 27, scope: !12818)
!12839 = !DILocation(line: 60, column: 33, scope: !12818)
!12840 = !DILocation(line: 60, column: 39, scope: !12818)
!12841 = !DILocation(line: 60, column: 8, scope: !12818)
!12842 = !DILocation(line: 61, column: 7, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12818, file: !766, line: 61, column: 7)
!12844 = !DILocation(line: 61, column: 14, scope: !12843)
!12845 = !DILocation(line: 61, column: 12, scope: !12843)
!12846 = !DILocation(line: 61, column: 20, scope: !12843)
!12847 = !DILocation(line: 61, column: 25, scope: !12843)
!12848 = !DILocation(line: 61, column: 37, scope: !12843)
!12849 = !DILocation(line: 61, column: 42, scope: !12843)
!12850 = !DILocation(line: 61, column: 28, scope: !12843)
!12851 = !DILocation(line: 61, column: 61, scope: !12843)
!12852 = !DILocation(line: 61, column: 7, scope: !12818)
!12853 = !DILocation(line: 63, column: 15, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12843, file: !766, line: 62, column: 5)
!12855 = !DILocation(line: 63, column: 13, scope: !12854)
!12856 = !DILocation(line: 64, column: 20, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12854, file: !766, line: 64, column: 11)
!12858 = !DILocation(line: 64, column: 11, scope: !12857)
!12859 = !DILocation(line: 64, column: 36, scope: !12857)
!12860 = !DILocation(line: 64, column: 11, scope: !12854)
!12861 = !DILocation(line: 66, column: 19, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12857, file: !766, line: 65, column: 9)
!12863 = !DILocation(line: 66, column: 24, scope: !12862)
!12864 = !DILocation(line: 66, column: 17, scope: !12862)
!12865 = !DILocation(line: 70, column: 52, scope: !12862)
!12866 = !DILocation(line: 70, column: 41, scope: !12862)
!12867 = !DILocation(line: 72, column: 9, scope: !12862)
!12868 = !DILocation(line: 73, column: 5, scope: !12854)
!12869 = !DILocation(line: 84, column: 18, scope: !12818)
!12870 = !DILocation(line: 84, column: 16, scope: !12818)
!12871 = !DILocation(line: 90, column: 38, scope: !12818)
!12872 = !DILocation(line: 90, column: 27, scope: !12818)
!12873 = !DILocation(line: 92, column: 1, scope: !12818)
!12874 = distinct !DISubprogram(name: "qcopy_acl", scope: !12875, file: !12875, line: 39, type: !9007, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1375, retainedNodes: !213)
!12875 = !DIFile(filename: "lib/qcopy-acl.c", directory: "/home/mohamad/clone/coreutils")
!12876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !12877, line: 260, size: 32, elements: !12878)
!12877 = !DIFile(filename: "./lib/acl-internal.h", directory: "/home/mohamad/clone/coreutils")
!12878 = !{!12879}
!12879 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !12876, file: !12877, line: 261, baseType: !236, size: 32)
!12880 = !DILocalVariable(name: "src_name", arg: 1, scope: !12874, file: !12875, line: 39, type: !113)
!12881 = !DILocation(line: 39, column: 24, scope: !12874)
!12882 = !DILocalVariable(name: "source_desc", arg: 2, scope: !12874, file: !12875, line: 39, type: !5)
!12883 = !DILocation(line: 39, column: 38, scope: !12874)
!12884 = !DILocalVariable(name: "dst_name", arg: 3, scope: !12874, file: !12875, line: 39, type: !113)
!12885 = !DILocation(line: 39, column: 63, scope: !12874)
!12886 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !12874, file: !12875, line: 40, type: !5)
!12887 = !DILocation(line: 40, column: 16, scope: !12874)
!12888 = !DILocalVariable(name: "mode", arg: 5, scope: !12874, file: !12875, line: 40, type: !236)
!12889 = !DILocation(line: 40, column: 34, scope: !12874)
!12890 = !DILocalVariable(name: "ctx", scope: !12874, file: !12875, line: 42, type: !12876)
!12891 = !DILocation(line: 42, column: 29, scope: !12874)
!12892 = !DILocalVariable(name: "ret", scope: !12874, file: !12875, line: 43, type: !5)
!12893 = !DILocation(line: 43, column: 7, scope: !12874)
!12894 = !DILocation(line: 45, column: 26, scope: !12874)
!12895 = !DILocation(line: 45, column: 36, scope: !12874)
!12896 = !DILocation(line: 45, column: 49, scope: !12874)
!12897 = !DILocation(line: 45, column: 9, scope: !12874)
!12898 = !DILocation(line: 45, column: 7, scope: !12874)
!12899 = !DILocation(line: 46, column: 7, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12874, file: !12875, line: 46, column: 7)
!12901 = !DILocation(line: 46, column: 11, scope: !12900)
!12902 = !DILocation(line: 46, column: 7, scope: !12874)
!12903 = !DILocation(line: 47, column: 5, scope: !12900)
!12904 = !DILocation(line: 48, column: 32, scope: !12874)
!12905 = !DILocation(line: 48, column: 42, scope: !12874)
!12906 = !DILocation(line: 48, column: 9, scope: !12874)
!12907 = !DILocation(line: 48, column: 7, scope: !12874)
!12908 = !DILocation(line: 49, column: 3, scope: !12874)
!12909 = !DILocation(line: 50, column: 10, scope: !12874)
!12910 = !DILocation(line: 50, column: 3, scope: !12874)
!12911 = !DILocation(line: 51, column: 1, scope: !12874)
!12912 = distinct !DISubprogram(name: "qset_acl", scope: !12913, file: !12913, line: 39, type: !9046, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1378, retainedNodes: !213)
!12913 = !DIFile(filename: "lib/qset-acl.c", directory: "/home/mohamad/clone/coreutils")
!12914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !12877, line: 260, size: 32, elements: !12915)
!12915 = !{!12916}
!12916 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !12914, file: !12877, line: 261, baseType: !236, size: 32)
!12917 = !DILocalVariable(name: "name", arg: 1, scope: !12912, file: !12913, line: 39, type: !113)
!12918 = !DILocation(line: 39, column: 23, scope: !12912)
!12919 = !DILocalVariable(name: "desc", arg: 2, scope: !12912, file: !12913, line: 39, type: !5)
!12920 = !DILocation(line: 39, column: 33, scope: !12912)
!12921 = !DILocalVariable(name: "mode", arg: 3, scope: !12912, file: !12913, line: 39, type: !236)
!12922 = !DILocation(line: 39, column: 46, scope: !12912)
!12923 = !DILocalVariable(name: "ctx", scope: !12912, file: !12913, line: 41, type: !12914)
!12924 = !DILocation(line: 41, column: 29, scope: !12912)
!12925 = !DILocalVariable(name: "ret", scope: !12912, file: !12913, line: 42, type: !5)
!12926 = !DILocation(line: 42, column: 7, scope: !12912)
!12927 = !DILocation(line: 44, column: 3, scope: !12912)
!12928 = !DILocation(line: 45, column: 14, scope: !12912)
!12929 = !DILocation(line: 45, column: 7, scope: !12912)
!12930 = !DILocation(line: 45, column: 12, scope: !12912)
!12931 = !DILocation(line: 46, column: 32, scope: !12912)
!12932 = !DILocation(line: 46, column: 38, scope: !12912)
!12933 = !DILocation(line: 46, column: 9, scope: !12912)
!12934 = !DILocation(line: 46, column: 7, scope: !12912)
!12935 = !DILocation(line: 47, column: 3, scope: !12912)
!12936 = !DILocation(line: 48, column: 10, scope: !12912)
!12937 = !DILocation(line: 48, column: 3, scope: !12912)
!12938 = distinct !DISubprogram(name: "clone_quoting_options", scope: !792, file: !792, line: 122, type: !12939, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!12939 = !DISubroutineType(types: !12940)
!12940 = !{!790, !790}
!12941 = !DILocalVariable(name: "o", arg: 1, scope: !12938, file: !792, line: 122, type: !790)
!12942 = !DILocation(line: 122, column: 48, scope: !12938)
!12943 = !DILocalVariable(name: "e", scope: !12938, file: !792, line: 124, type: !5)
!12944 = !DILocation(line: 124, column: 7, scope: !12938)
!12945 = !DILocation(line: 124, column: 11, scope: !12938)
!12946 = !DILocalVariable(name: "p", scope: !12938, file: !792, line: 125, type: !790)
!12947 = !DILocation(line: 125, column: 27, scope: !12938)
!12948 = !DILocation(line: 125, column: 40, scope: !12938)
!12949 = !DILocation(line: 125, column: 44, scope: !12938)
!12950 = !DILocation(line: 125, column: 31, scope: !12938)
!12951 = !DILocation(line: 127, column: 11, scope: !12938)
!12952 = !DILocation(line: 127, column: 3, scope: !12938)
!12953 = !DILocation(line: 127, column: 9, scope: !12938)
!12954 = !DILocation(line: 128, column: 10, scope: !12938)
!12955 = !DILocation(line: 128, column: 3, scope: !12938)
!12956 = distinct !DISubprogram(name: "get_quoting_style", scope: !792, file: !792, line: 133, type: !12957, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!12957 = !DISubroutineType(types: !12958)
!12958 = !{!772, !801}
!12959 = !DILocalVariable(name: "o", arg: 1, scope: !12956, file: !792, line: 133, type: !801)
!12960 = !DILocation(line: 133, column: 50, scope: !12956)
!12961 = !DILocation(line: 135, column: 11, scope: !12956)
!12962 = !DILocation(line: 135, column: 15, scope: !12956)
!12963 = !DILocation(line: 135, column: 46, scope: !12956)
!12964 = !DILocation(line: 135, column: 3, scope: !12956)
!12965 = distinct !DISubprogram(name: "set_quoting_style", scope: !792, file: !792, line: 141, type: !12966, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!12966 = !DISubroutineType(types: !12967)
!12967 = !{null, !790, !772}
!12968 = !DILocalVariable(name: "o", arg: 1, scope: !12965, file: !792, line: 141, type: !790)
!12969 = !DILocation(line: 141, column: 44, scope: !12965)
!12970 = !DILocalVariable(name: "s", arg: 2, scope: !12965, file: !792, line: 141, type: !772)
!12971 = !DILocation(line: 141, column: 66, scope: !12965)
!12972 = !DILocation(line: 143, column: 47, scope: !12965)
!12973 = !DILocation(line: 143, column: 4, scope: !12965)
!12974 = !DILocation(line: 143, column: 8, scope: !12965)
!12975 = !DILocation(line: 143, column: 39, scope: !12965)
!12976 = !DILocation(line: 143, column: 45, scope: !12965)
!12977 = !DILocation(line: 144, column: 1, scope: !12965)
!12978 = distinct !DISubprogram(name: "set_char_quoting", scope: !792, file: !792, line: 152, type: !12979, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!12979 = !DISubroutineType(types: !12980)
!12980 = !{!5, !790, !8, !5}
!12981 = !DILocalVariable(name: "o", arg: 1, scope: !12978, file: !792, line: 152, type: !790)
!12982 = !DILocation(line: 152, column: 43, scope: !12978)
!12983 = !DILocalVariable(name: "c", arg: 2, scope: !12978, file: !792, line: 152, type: !8)
!12984 = !DILocation(line: 152, column: 51, scope: !12978)
!12985 = !DILocalVariable(name: "i", arg: 3, scope: !12978, file: !792, line: 152, type: !5)
!12986 = !DILocation(line: 152, column: 58, scope: !12978)
!12987 = !DILocalVariable(name: "uc", scope: !12978, file: !792, line: 154, type: !451)
!12988 = !DILocation(line: 154, column: 17, scope: !12978)
!12989 = !DILocation(line: 154, column: 22, scope: !12978)
!12990 = !DILocalVariable(name: "p", scope: !12978, file: !792, line: 155, type: !800)
!12991 = !DILocation(line: 155, column: 17, scope: !12978)
!12992 = !DILocation(line: 156, column: 6, scope: !12978)
!12993 = !DILocation(line: 156, column: 10, scope: !12978)
!12994 = !DILocation(line: 156, column: 41, scope: !12978)
!12995 = !DILocation(line: 156, column: 5, scope: !12978)
!12996 = !DILocation(line: 156, column: 59, scope: !12978)
!12997 = !DILocation(line: 156, column: 62, scope: !12978)
!12998 = !DILocation(line: 156, column: 57, scope: !12978)
!12999 = !DILocalVariable(name: "shift", scope: !12978, file: !792, line: 157, type: !5)
!13000 = !DILocation(line: 157, column: 7, scope: !12978)
!13001 = !DILocation(line: 157, column: 15, scope: !12978)
!13002 = !DILocation(line: 157, column: 18, scope: !12978)
!13003 = !DILocalVariable(name: "r", scope: !12978, file: !792, line: 158, type: !5)
!13004 = !DILocation(line: 158, column: 7, scope: !12978)
!13005 = !DILocation(line: 158, column: 13, scope: !12978)
!13006 = !DILocation(line: 158, column: 12, scope: !12978)
!13007 = !DILocation(line: 158, column: 18, scope: !12978)
!13008 = !DILocation(line: 158, column: 15, scope: !12978)
!13009 = !DILocation(line: 158, column: 25, scope: !12978)
!13010 = !DILocation(line: 159, column: 11, scope: !12978)
!13011 = !DILocation(line: 159, column: 13, scope: !12978)
!13012 = !DILocation(line: 159, column: 20, scope: !12978)
!13013 = !DILocation(line: 159, column: 18, scope: !12978)
!13014 = !DILocation(line: 159, column: 26, scope: !12978)
!13015 = !DILocation(line: 159, column: 23, scope: !12978)
!13016 = !DILocation(line: 159, column: 4, scope: !12978)
!13017 = !DILocation(line: 159, column: 6, scope: !12978)
!13018 = !DILocation(line: 160, column: 10, scope: !12978)
!13019 = !DILocation(line: 160, column: 3, scope: !12978)
!13020 = distinct !DISubprogram(name: "set_quoting_flags", scope: !792, file: !792, line: 168, type: !13021, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!13021 = !DISubroutineType(types: !13022)
!13022 = !{!5, !790, !5}
!13023 = !DILocalVariable(name: "o", arg: 1, scope: !13020, file: !792, line: 168, type: !790)
!13024 = !DILocation(line: 168, column: 44, scope: !13020)
!13025 = !DILocalVariable(name: "i", arg: 2, scope: !13020, file: !792, line: 168, type: !5)
!13026 = !DILocation(line: 168, column: 51, scope: !13020)
!13027 = !DILocalVariable(name: "r", scope: !13020, file: !792, line: 170, type: !5)
!13028 = !DILocation(line: 170, column: 7, scope: !13020)
!13029 = !DILocation(line: 171, column: 8, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13020, file: !792, line: 171, column: 7)
!13031 = !DILocation(line: 171, column: 7, scope: !13020)
!13032 = !DILocation(line: 172, column: 7, scope: !13030)
!13033 = !DILocation(line: 172, column: 5, scope: !13030)
!13034 = !DILocation(line: 173, column: 7, scope: !13020)
!13035 = !DILocation(line: 173, column: 10, scope: !13020)
!13036 = !DILocation(line: 173, column: 5, scope: !13020)
!13037 = !DILocation(line: 174, column: 14, scope: !13020)
!13038 = !DILocation(line: 174, column: 3, scope: !13020)
!13039 = !DILocation(line: 174, column: 6, scope: !13020)
!13040 = !DILocation(line: 174, column: 12, scope: !13020)
!13041 = !DILocation(line: 175, column: 10, scope: !13020)
!13042 = !DILocation(line: 175, column: 3, scope: !13020)
!13043 = distinct !DISubprogram(name: "set_custom_quoting", scope: !792, file: !792, line: 179, type: !13044, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!13044 = !DISubroutineType(types: !13045)
!13045 = !{null, !790, !113, !113}
!13046 = !DILocalVariable(name: "o", arg: 1, scope: !13043, file: !792, line: 179, type: !790)
!13047 = !DILocation(line: 179, column: 45, scope: !13043)
!13048 = !DILocalVariable(name: "left_quote", arg: 2, scope: !13043, file: !792, line: 180, type: !113)
!13049 = !DILocation(line: 180, column: 33, scope: !13043)
!13050 = !DILocalVariable(name: "right_quote", arg: 3, scope: !13043, file: !792, line: 180, type: !113)
!13051 = !DILocation(line: 180, column: 57, scope: !13043)
!13052 = !DILocation(line: 182, column: 8, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13043, file: !792, line: 182, column: 7)
!13054 = !DILocation(line: 182, column: 7, scope: !13043)
!13055 = !DILocation(line: 183, column: 7, scope: !13053)
!13056 = !DILocation(line: 183, column: 5, scope: !13053)
!13057 = !DILocation(line: 184, column: 3, scope: !13043)
!13058 = !DILocation(line: 184, column: 6, scope: !13043)
!13059 = !DILocation(line: 184, column: 12, scope: !13043)
!13060 = !DILocation(line: 185, column: 8, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13043, file: !792, line: 185, column: 7)
!13062 = !DILocation(line: 185, column: 19, scope: !13061)
!13063 = !DILocation(line: 185, column: 23, scope: !13061)
!13064 = !DILocation(line: 185, column: 7, scope: !13043)
!13065 = !DILocation(line: 186, column: 5, scope: !13061)
!13066 = !DILocation(line: 187, column: 19, scope: !13043)
!13067 = !DILocation(line: 187, column: 3, scope: !13043)
!13068 = !DILocation(line: 187, column: 6, scope: !13043)
!13069 = !DILocation(line: 187, column: 17, scope: !13043)
!13070 = !DILocation(line: 188, column: 20, scope: !13043)
!13071 = !DILocation(line: 188, column: 3, scope: !13043)
!13072 = !DILocation(line: 188, column: 6, scope: !13043)
!13073 = !DILocation(line: 188, column: 18, scope: !13043)
!13074 = !DILocation(line: 189, column: 1, scope: !13043)
!13075 = distinct !DISubprogram(name: "quotearg_buffer", scope: !792, file: !792, line: 784, type: !13076, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!13076 = !DISubroutineType(types: !13077)
!13077 = !{!52, !7, !52, !113, !52, !801}
!13078 = !DILocalVariable(name: "buffer", arg: 1, scope: !13075, file: !792, line: 784, type: !7)
!13079 = !DILocation(line: 784, column: 24, scope: !13075)
!13080 = !DILocalVariable(name: "buffersize", arg: 2, scope: !13075, file: !792, line: 784, type: !52)
!13081 = !DILocation(line: 784, column: 39, scope: !13075)
!13082 = !DILocalVariable(name: "arg", arg: 3, scope: !13075, file: !792, line: 785, type: !113)
!13083 = !DILocation(line: 785, column: 30, scope: !13075)
!13084 = !DILocalVariable(name: "argsize", arg: 4, scope: !13075, file: !792, line: 785, type: !52)
!13085 = !DILocation(line: 785, column: 42, scope: !13075)
!13086 = !DILocalVariable(name: "o", arg: 5, scope: !13075, file: !792, line: 786, type: !801)
!13087 = !DILocation(line: 786, column: 48, scope: !13075)
!13088 = !DILocalVariable(name: "p", scope: !13075, file: !792, line: 788, type: !801)
!13089 = !DILocation(line: 788, column: 33, scope: !13075)
!13090 = !DILocation(line: 788, column: 37, scope: !13075)
!13091 = !DILocation(line: 788, column: 41, scope: !13075)
!13092 = !DILocalVariable(name: "e", scope: !13075, file: !792, line: 789, type: !5)
!13093 = !DILocation(line: 789, column: 7, scope: !13075)
!13094 = !DILocation(line: 789, column: 11, scope: !13075)
!13095 = !DILocalVariable(name: "r", scope: !13075, file: !792, line: 790, type: !52)
!13096 = !DILocation(line: 790, column: 10, scope: !13075)
!13097 = !DILocation(line: 790, column: 40, scope: !13075)
!13098 = !DILocation(line: 790, column: 48, scope: !13075)
!13099 = !DILocation(line: 790, column: 60, scope: !13075)
!13100 = !DILocation(line: 790, column: 65, scope: !13075)
!13101 = !DILocation(line: 791, column: 40, scope: !13075)
!13102 = !DILocation(line: 791, column: 43, scope: !13075)
!13103 = !DILocation(line: 791, column: 50, scope: !13075)
!13104 = !DILocation(line: 791, column: 53, scope: !13075)
!13105 = !DILocation(line: 791, column: 60, scope: !13075)
!13106 = !DILocation(line: 791, column: 63, scope: !13075)
!13107 = !DILocation(line: 792, column: 40, scope: !13075)
!13108 = !DILocation(line: 792, column: 43, scope: !13075)
!13109 = !DILocation(line: 792, column: 55, scope: !13075)
!13110 = !DILocation(line: 792, column: 58, scope: !13075)
!13111 = !DILocation(line: 790, column: 14, scope: !13075)
!13112 = !DILocation(line: 793, column: 11, scope: !13075)
!13113 = !DILocation(line: 793, column: 3, scope: !13075)
!13114 = !DILocation(line: 793, column: 9, scope: !13075)
!13115 = !DILocation(line: 794, column: 10, scope: !13075)
!13116 = !DILocation(line: 794, column: 3, scope: !13075)
!13117 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !792, file: !792, line: 256, type: !13118, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !769, retainedNodes: !213)
!13118 = !DISubroutineType(types: !13119)
!13119 = !{!52, !7, !52, !113, !52, !772, !5, !823, !113, !113}
!13120 = !DILocalVariable(name: "buffer", arg: 1, scope: !13117, file: !792, line: 256, type: !7)
!13121 = !DILocation(line: 256, column: 33, scope: !13117)
!13122 = !DILocalVariable(name: "buffersize", arg: 2, scope: !13117, file: !792, line: 256, type: !52)
!13123 = !DILocation(line: 256, column: 48, scope: !13117)
!13124 = !DILocalVariable(name: "arg", arg: 3, scope: !13117, file: !792, line: 257, type: !113)
!13125 = !DILocation(line: 257, column: 39, scope: !13117)
!13126 = !DILocalVariable(name: "argsize", arg: 4, scope: !13117, file: !792, line: 257, type: !52)
!13127 = !DILocation(line: 257, column: 51, scope: !13117)
!13128 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !13117, file: !792, line: 258, type: !772)
!13129 = !DILocation(line: 258, column: 46, scope: !13117)
!13130 = !DILocalVariable(name: "flags", arg: 6, scope: !13117, file: !792, line: 258, type: !5)
!13131 = !DILocation(line: 258, column: 65, scope: !13117)
!13132 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !13117, file: !792, line: 259, type: !823)
!13133 = !DILocation(line: 259, column: 47, scope: !13117)
!13134 = !DILocalVariable(name: "left_quote", arg: 8, scope: !13117, file: !792, line: 260, type: !113)
!13135 = !DILocation(line: 260, column: 39, scope: !13117)
!13136 = !DILocalVariable(name: "right_quote", arg: 9, scope: !13117, file: !792, line: 261, type: !113)
!13137 = !DILocation(line: 261, column: 39, scope: !13117)
!13138 = !DILocalVariable(name: "i", scope: !13117, file: !792, line: 263, type: !52)
!13139 = !DILocation(line: 263, column: 10, scope: !13117)
!13140 = !DILocalVariable(name: "len", scope: !13117, file: !792, line: 264, type: !52)
!13141 = !DILocation(line: 264, column: 10, scope: !13117)
!13142 = !DILocalVariable(name: "orig_buffersize", scope: !13117, file: !792, line: 265, type: !52)
!13143 = !DILocation(line: 265, column: 10, scope: !13117)
!13144 = !DILocalVariable(name: "quote_string", scope: !13117, file: !792, line: 266, type: !113)
!13145 = !DILocation(line: 266, column: 15, scope: !13117)
!13146 = !DILocalVariable(name: "quote_string_len", scope: !13117, file: !792, line: 267, type: !52)
!13147 = !DILocation(line: 267, column: 10, scope: !13117)
!13148 = !DILocalVariable(name: "backslash_escapes", scope: !13117, file: !792, line: 268, type: !139)
!13149 = !DILocation(line: 268, column: 8, scope: !13117)
!13150 = !DILocalVariable(name: "unibyte_locale", scope: !13117, file: !792, line: 269, type: !139)
!13151 = !DILocation(line: 269, column: 8, scope: !13117)
!13152 = !DILocation(line: 269, column: 25, scope: !13117)
!13153 = !DILocation(line: 269, column: 36, scope: !13117)
!13154 = !DILocalVariable(name: "elide_outer_quotes", scope: !13117, file: !792, line: 270, type: !139)
!13155 = !DILocation(line: 270, column: 8, scope: !13117)
!13156 = !DILocation(line: 270, column: 30, scope: !13117)
!13157 = !DILocation(line: 270, column: 36, scope: !13117)
!13158 = !DILocation(line: 270, column: 61, scope: !13117)
!13159 = !DILocalVariable(name: "pending_shell_escape_end", scope: !13117, file: !792, line: 271, type: !139)
!13160 = !DILocation(line: 271, column: 8, scope: !13117)
!13161 = !DILocalVariable(name: "encountered_single_quote", scope: !13117, file: !792, line: 272, type: !139)
!13162 = !DILocation(line: 272, column: 8, scope: !13117)
!13163 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !13117, file: !792, line: 273, type: !139)
!13164 = !DILocation(line: 273, column: 8, scope: !13117)
!13165 = !DILocation(line: 273, column: 3, scope: !13117)
!13166 = !DILabel(scope: !13117, name: "process_input", file: !792, line: 314)
!13167 = !DILocation(line: 314, column: 2, scope: !13117)
!13168 = !DILocation(line: 316, column: 11, scope: !13117)
!13169 = !DILocation(line: 316, column: 3, scope: !13117)
!13170 = !DILocation(line: 319, column: 21, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13117, file: !792, line: 317, column: 5)
!13172 = !DILocation(line: 320, column: 26, scope: !13171)
!13173 = !DILocation(line: 321, column: 7, scope: !13171)
!13174 = !DILocation(line: 323, column: 12, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13171, file: !792, line: 323, column: 11)
!13176 = !DILocation(line: 323, column: 11, scope: !13171)
!13177 = !DILocation(line: 324, column: 9, scope: !13175)
!13178 = !DILocation(line: 324, column: 9, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13180, file: !792, line: 324, column: 9)
!13180 = distinct !DILexicalBlock(scope: !13175, file: !792, line: 324, column: 9)
!13181 = !DILocation(line: 324, column: 9, scope: !13180)
!13182 = !DILocation(line: 325, column: 25, scope: !13171)
!13183 = !DILocation(line: 326, column: 20, scope: !13171)
!13184 = !DILocation(line: 327, column: 24, scope: !13171)
!13185 = !DILocation(line: 328, column: 7, scope: !13171)
!13186 = !DILocation(line: 331, column: 25, scope: !13171)
!13187 = !DILocation(line: 332, column: 26, scope: !13171)
!13188 = !DILocation(line: 333, column: 7, scope: !13171)
!13189 = !DILocation(line: 339, column: 13, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13191, file: !792, line: 339, column: 13)
!13191 = distinct !DILexicalBlock(scope: !13171, file: !792, line: 338, column: 7)
!13192 = !DILocation(line: 339, column: 27, scope: !13190)
!13193 = !DILocation(line: 339, column: 13, scope: !13191)
!13194 = !DILocation(line: 362, column: 50, scope: !13195)
!13195 = distinct !DILexicalBlock(scope: !13190, file: !792, line: 340, column: 11)
!13196 = !DILocation(line: 362, column: 26, scope: !13195)
!13197 = !DILocation(line: 362, column: 24, scope: !13195)
!13198 = !DILocation(line: 363, column: 51, scope: !13195)
!13199 = !DILocation(line: 363, column: 27, scope: !13195)
!13200 = !DILocation(line: 363, column: 25, scope: !13195)
!13201 = !DILocation(line: 364, column: 11, scope: !13195)
!13202 = !DILocation(line: 365, column: 14, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13191, file: !792, line: 365, column: 13)
!13204 = !DILocation(line: 365, column: 13, scope: !13191)
!13205 = !DILocation(line: 366, column: 31, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !13203, file: !792, line: 366, column: 11)
!13207 = !DILocation(line: 366, column: 29, scope: !13206)
!13208 = !DILocation(line: 366, column: 16, scope: !13206)
!13209 = !DILocation(line: 366, column: 44, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13206, file: !792, line: 366, column: 11)
!13211 = !DILocation(line: 366, column: 43, scope: !13210)
!13212 = !DILocation(line: 366, column: 11, scope: !13206)
!13213 = !DILocation(line: 367, column: 13, scope: !13210)
!13214 = !DILocation(line: 367, column: 13, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13216, file: !792, line: 367, column: 13)
!13216 = distinct !DILexicalBlock(scope: !13210, file: !792, line: 367, column: 13)
!13217 = !DILocation(line: 367, column: 13, scope: !13216)
!13218 = !DILocation(line: 366, column: 70, scope: !13210)
!13219 = !DILocation(line: 366, column: 11, scope: !13210)
!13220 = distinct !{!13220, !13212, !13221}
!13221 = !DILocation(line: 367, column: 13, scope: !13206)
!13222 = !DILocation(line: 368, column: 27, scope: !13191)
!13223 = !DILocation(line: 369, column: 24, scope: !13191)
!13224 = !DILocation(line: 369, column: 22, scope: !13191)
!13225 = !DILocation(line: 370, column: 36, scope: !13191)
!13226 = !DILocation(line: 370, column: 28, scope: !13191)
!13227 = !DILocation(line: 370, column: 26, scope: !13191)
!13228 = !DILocation(line: 372, column: 7, scope: !13171)
!13229 = !DILocation(line: 375, column: 25, scope: !13171)
!13230 = !DILocation(line: 376, column: 7, scope: !13171)
!13231 = !DILocation(line: 378, column: 26, scope: !13171)
!13232 = !DILocation(line: 379, column: 7, scope: !13171)
!13233 = !DILocation(line: 381, column: 12, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13171, file: !792, line: 381, column: 11)
!13235 = !DILocation(line: 381, column: 11, scope: !13171)
!13236 = !DILocation(line: 382, column: 27, scope: !13234)
!13237 = !DILocation(line: 382, column: 9, scope: !13234)
!13238 = !DILocation(line: 383, column: 7, scope: !13171)
!13239 = !DILocation(line: 385, column: 21, scope: !13171)
!13240 = !DILocation(line: 386, column: 12, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13171, file: !792, line: 386, column: 11)
!13242 = !DILocation(line: 386, column: 11, scope: !13171)
!13243 = !DILocation(line: 387, column: 9, scope: !13241)
!13244 = !DILocation(line: 387, column: 9, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13246, file: !792, line: 387, column: 9)
!13246 = distinct !DILexicalBlock(scope: !13241, file: !792, line: 387, column: 9)
!13247 = !DILocation(line: 387, column: 9, scope: !13246)
!13248 = !DILocation(line: 388, column: 20, scope: !13171)
!13249 = !DILocation(line: 389, column: 24, scope: !13171)
!13250 = !DILocation(line: 390, column: 7, scope: !13171)
!13251 = !DILocation(line: 393, column: 26, scope: !13171)
!13252 = !DILocation(line: 394, column: 7, scope: !13171)
!13253 = !DILocation(line: 397, column: 7, scope: !13171)
!13254 = !DILocation(line: 400, column: 10, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13117, file: !792, line: 400, column: 3)
!13256 = !DILocation(line: 400, column: 8, scope: !13255)
!13257 = !DILocation(line: 400, column: 19, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13255, file: !792, line: 400, column: 3)
!13259 = !DILocation(line: 400, column: 27, scope: !13258)
!13260 = !DILocation(line: 400, column: 41, scope: !13258)
!13261 = !DILocation(line: 400, column: 45, scope: !13258)
!13262 = !DILocation(line: 400, column: 48, scope: !13258)
!13263 = !DILocation(line: 400, column: 58, scope: !13258)
!13264 = !DILocation(line: 400, column: 63, scope: !13258)
!13265 = !DILocation(line: 400, column: 60, scope: !13258)
!13266 = !DILocation(line: 400, column: 16, scope: !13258)
!13267 = !DILocation(line: 400, column: 3, scope: !13255)
!13268 = !DILocalVariable(name: "c", scope: !13269, file: !792, line: 402, type: !451)
!13269 = distinct !DILexicalBlock(scope: !13258, file: !792, line: 401, column: 5)
!13270 = !DILocation(line: 402, column: 21, scope: !13269)
!13271 = !DILocalVariable(name: "esc", scope: !13269, file: !792, line: 403, type: !451)
!13272 = !DILocation(line: 403, column: 21, scope: !13269)
!13273 = !DILocalVariable(name: "is_right_quote", scope: !13269, file: !792, line: 404, type: !139)
!13274 = !DILocation(line: 404, column: 12, scope: !13269)
!13275 = !DILocalVariable(name: "escaping", scope: !13269, file: !792, line: 405, type: !139)
!13276 = !DILocation(line: 405, column: 12, scope: !13269)
!13277 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !13269, file: !792, line: 406, type: !139)
!13278 = !DILocation(line: 406, column: 12, scope: !13269)
!13279 = !DILocation(line: 408, column: 11, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13269, file: !792, line: 408, column: 11)
!13281 = !DILocation(line: 409, column: 11, scope: !13280)
!13282 = !DILocation(line: 409, column: 14, scope: !13280)
!13283 = !DILocation(line: 409, column: 28, scope: !13280)
!13284 = !DILocation(line: 410, column: 11, scope: !13280)
!13285 = !DILocation(line: 410, column: 14, scope: !13280)
!13286 = !DILocation(line: 411, column: 11, scope: !13280)
!13287 = !DILocation(line: 411, column: 15, scope: !13280)
!13288 = !DILocation(line: 411, column: 19, scope: !13280)
!13289 = !DILocation(line: 411, column: 17, scope: !13280)
!13290 = !DILocation(line: 412, column: 19, scope: !13280)
!13291 = !DILocation(line: 412, column: 27, scope: !13280)
!13292 = !DILocation(line: 412, column: 39, scope: !13280)
!13293 = !DILocation(line: 412, column: 46, scope: !13280)
!13294 = !DILocation(line: 412, column: 44, scope: !13280)
!13295 = !DILocation(line: 416, column: 40, scope: !13280)
!13296 = !DILocation(line: 416, column: 32, scope: !13280)
!13297 = !DILocation(line: 416, column: 30, scope: !13280)
!13298 = !DILocation(line: 416, column: 48, scope: !13280)
!13299 = !DILocation(line: 412, column: 15, scope: !13280)
!13300 = !DILocation(line: 417, column: 11, scope: !13280)
!13301 = !DILocation(line: 417, column: 22, scope: !13280)
!13302 = !DILocation(line: 417, column: 28, scope: !13280)
!13303 = !DILocation(line: 417, column: 26, scope: !13280)
!13304 = !DILocation(line: 417, column: 31, scope: !13280)
!13305 = !DILocation(line: 417, column: 45, scope: !13280)
!13306 = !DILocation(line: 417, column: 14, scope: !13280)
!13307 = !DILocation(line: 417, column: 63, scope: !13280)
!13308 = !DILocation(line: 408, column: 11, scope: !13269)
!13309 = !DILocation(line: 419, column: 15, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13311, file: !792, line: 419, column: 15)
!13311 = distinct !DILexicalBlock(scope: !13280, file: !792, line: 418, column: 9)
!13312 = !DILocation(line: 419, column: 15, scope: !13311)
!13313 = !DILocation(line: 420, column: 13, scope: !13310)
!13314 = !DILocation(line: 421, column: 26, scope: !13311)
!13315 = !DILocation(line: 422, column: 9, scope: !13311)
!13316 = !DILocation(line: 424, column: 11, scope: !13269)
!13317 = !DILocation(line: 424, column: 15, scope: !13269)
!13318 = !DILocation(line: 424, column: 9, scope: !13269)
!13319 = !DILocation(line: 425, column: 15, scope: !13269)
!13320 = !DILocation(line: 425, column: 7, scope: !13269)
!13321 = !DILocation(line: 428, column: 15, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13323, file: !792, line: 428, column: 15)
!13323 = distinct !DILexicalBlock(scope: !13269, file: !792, line: 426, column: 9)
!13324 = !DILocation(line: 428, column: 15, scope: !13323)
!13325 = !DILocation(line: 430, column: 15, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13322, file: !792, line: 429, column: 13)
!13327 = !DILocation(line: 430, column: 15, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13329, file: !792, line: 430, column: 15)
!13329 = distinct !DILexicalBlock(scope: !13326, file: !792, line: 430, column: 15)
!13330 = !DILocation(line: 430, column: 15, scope: !13329)
!13331 = !DILocation(line: 430, column: 15, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13329, file: !792, line: 430, column: 15)
!13333 = !DILocation(line: 430, column: 15, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13332, file: !792, line: 430, column: 15)
!13335 = !DILocation(line: 430, column: 15, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13337, file: !792, line: 430, column: 15)
!13337 = distinct !DILexicalBlock(scope: !13334, file: !792, line: 430, column: 15)
!13338 = !DILocation(line: 430, column: 15, scope: !13337)
!13339 = !DILocation(line: 430, column: 15, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13341, file: !792, line: 430, column: 15)
!13341 = distinct !DILexicalBlock(scope: !13334, file: !792, line: 430, column: 15)
!13342 = !DILocation(line: 430, column: 15, scope: !13341)
!13343 = !DILocation(line: 430, column: 15, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !13345, file: !792, line: 430, column: 15)
!13345 = distinct !DILexicalBlock(scope: !13334, file: !792, line: 430, column: 15)
!13346 = !DILocation(line: 430, column: 15, scope: !13345)
!13347 = !DILocation(line: 430, column: 15, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13349, file: !792, line: 430, column: 15)
!13349 = distinct !DILexicalBlock(scope: !13329, file: !792, line: 430, column: 15)
!13350 = !DILocation(line: 430, column: 15, scope: !13349)
!13351 = !DILocation(line: 437, column: 19, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13326, file: !792, line: 437, column: 19)
!13353 = !DILocation(line: 437, column: 33, scope: !13352)
!13354 = !DILocation(line: 438, column: 19, scope: !13352)
!13355 = !DILocation(line: 438, column: 22, scope: !13352)
!13356 = !DILocation(line: 438, column: 24, scope: !13352)
!13357 = !DILocation(line: 438, column: 30, scope: !13352)
!13358 = !DILocation(line: 438, column: 28, scope: !13352)
!13359 = !DILocation(line: 438, column: 38, scope: !13352)
!13360 = !DILocation(line: 438, column: 48, scope: !13352)
!13361 = !DILocation(line: 438, column: 52, scope: !13352)
!13362 = !DILocation(line: 438, column: 54, scope: !13352)
!13363 = !DILocation(line: 438, column: 45, scope: !13352)
!13364 = !DILocation(line: 438, column: 59, scope: !13352)
!13365 = !DILocation(line: 438, column: 62, scope: !13352)
!13366 = !DILocation(line: 438, column: 66, scope: !13352)
!13367 = !DILocation(line: 438, column: 68, scope: !13352)
!13368 = !DILocation(line: 438, column: 73, scope: !13352)
!13369 = !DILocation(line: 437, column: 19, scope: !13326)
!13370 = !DILocation(line: 440, column: 19, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13352, file: !792, line: 439, column: 17)
!13372 = !DILocation(line: 440, column: 19, scope: !13373)
!13373 = distinct !DILexicalBlock(scope: !13374, file: !792, line: 440, column: 19)
!13374 = distinct !DILexicalBlock(scope: !13371, file: !792, line: 440, column: 19)
!13375 = !DILocation(line: 440, column: 19, scope: !13374)
!13376 = !DILocation(line: 441, column: 19, scope: !13371)
!13377 = !DILocation(line: 441, column: 19, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !13379, file: !792, line: 441, column: 19)
!13379 = distinct !DILexicalBlock(scope: !13371, file: !792, line: 441, column: 19)
!13380 = !DILocation(line: 441, column: 19, scope: !13379)
!13381 = !DILocation(line: 442, column: 17, scope: !13371)
!13382 = !DILocation(line: 443, column: 17, scope: !13326)
!13383 = !DILocation(line: 448, column: 13, scope: !13326)
!13384 = !DILocation(line: 449, column: 20, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13322, file: !792, line: 449, column: 20)
!13386 = !DILocation(line: 449, column: 26, scope: !13385)
!13387 = !DILocation(line: 449, column: 20, scope: !13322)
!13388 = !DILocation(line: 450, column: 13, scope: !13385)
!13389 = !DILocation(line: 451, column: 11, scope: !13323)
!13390 = !DILocation(line: 454, column: 19, scope: !13323)
!13391 = !DILocation(line: 454, column: 11, scope: !13323)
!13392 = !DILocation(line: 457, column: 19, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13394, file: !792, line: 457, column: 19)
!13394 = distinct !DILexicalBlock(scope: !13323, file: !792, line: 455, column: 13)
!13395 = !DILocation(line: 457, column: 19, scope: !13394)
!13396 = !DILocation(line: 458, column: 17, scope: !13393)
!13397 = !DILocation(line: 459, column: 15, scope: !13394)
!13398 = !DILocation(line: 462, column: 20, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13394, file: !792, line: 462, column: 19)
!13400 = !DILocation(line: 462, column: 26, scope: !13399)
!13401 = !DILocation(line: 463, column: 19, scope: !13399)
!13402 = !DILocation(line: 463, column: 22, scope: !13399)
!13403 = !DILocation(line: 463, column: 24, scope: !13399)
!13404 = !DILocation(line: 463, column: 30, scope: !13399)
!13405 = !DILocation(line: 463, column: 28, scope: !13399)
!13406 = !DILocation(line: 463, column: 38, scope: !13399)
!13407 = !DILocation(line: 463, column: 41, scope: !13399)
!13408 = !DILocation(line: 463, column: 45, scope: !13399)
!13409 = !DILocation(line: 463, column: 47, scope: !13399)
!13410 = !DILocation(line: 463, column: 52, scope: !13399)
!13411 = !DILocation(line: 462, column: 19, scope: !13394)
!13412 = !DILocation(line: 464, column: 25, scope: !13399)
!13413 = !DILocation(line: 464, column: 29, scope: !13399)
!13414 = !DILocation(line: 464, column: 31, scope: !13399)
!13415 = !DILocation(line: 464, column: 17, scope: !13399)
!13416 = !DILocation(line: 471, column: 25, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13418, file: !792, line: 471, column: 25)
!13418 = distinct !DILexicalBlock(scope: !13399, file: !792, line: 465, column: 19)
!13419 = !DILocation(line: 471, column: 25, scope: !13418)
!13420 = !DILocation(line: 472, column: 23, scope: !13417)
!13421 = !DILocation(line: 473, column: 25, scope: !13418)
!13422 = !DILocation(line: 473, column: 29, scope: !13418)
!13423 = !DILocation(line: 473, column: 31, scope: !13418)
!13424 = !DILocation(line: 473, column: 23, scope: !13418)
!13425 = !DILocation(line: 474, column: 23, scope: !13418)
!13426 = !DILocation(line: 475, column: 21, scope: !13418)
!13427 = !DILocation(line: 475, column: 21, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !13429, file: !792, line: 475, column: 21)
!13429 = distinct !DILexicalBlock(scope: !13418, file: !792, line: 475, column: 21)
!13430 = !DILocation(line: 475, column: 21, scope: !13429)
!13431 = !DILocation(line: 476, column: 21, scope: !13418)
!13432 = !DILocation(line: 476, column: 21, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13434, file: !792, line: 476, column: 21)
!13434 = distinct !DILexicalBlock(scope: !13418, file: !792, line: 476, column: 21)
!13435 = !DILocation(line: 476, column: 21, scope: !13434)
!13436 = !DILocation(line: 477, column: 21, scope: !13418)
!13437 = !DILocation(line: 477, column: 21, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13439, file: !792, line: 477, column: 21)
!13439 = distinct !DILexicalBlock(scope: !13418, file: !792, line: 477, column: 21)
!13440 = !DILocation(line: 477, column: 21, scope: !13439)
!13441 = !DILocation(line: 478, column: 21, scope: !13418)
!13442 = !DILocation(line: 478, column: 21, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13444, file: !792, line: 478, column: 21)
!13444 = distinct !DILexicalBlock(scope: !13418, file: !792, line: 478, column: 21)
!13445 = !DILocation(line: 478, column: 21, scope: !13444)
!13446 = !DILocation(line: 479, column: 21, scope: !13418)
!13447 = !DILocation(line: 482, column: 21, scope: !13418)
!13448 = !DILocation(line: 483, column: 19, scope: !13418)
!13449 = !DILocation(line: 484, column: 15, scope: !13394)
!13450 = !DILocation(line: 487, column: 15, scope: !13394)
!13451 = !DILocation(line: 489, column: 11, scope: !13323)
!13452 = !DILocation(line: 491, column: 24, scope: !13323)
!13453 = !DILocation(line: 491, column: 31, scope: !13323)
!13454 = !DILocation(line: 492, column: 24, scope: !13323)
!13455 = !DILocation(line: 492, column: 31, scope: !13323)
!13456 = !DILocation(line: 493, column: 24, scope: !13323)
!13457 = !DILocation(line: 493, column: 31, scope: !13323)
!13458 = !DILocation(line: 494, column: 24, scope: !13323)
!13459 = !DILocation(line: 494, column: 31, scope: !13323)
!13460 = !DILocation(line: 495, column: 24, scope: !13323)
!13461 = !DILocation(line: 495, column: 31, scope: !13323)
!13462 = !DILocation(line: 496, column: 24, scope: !13323)
!13463 = !DILocation(line: 496, column: 31, scope: !13323)
!13464 = !DILocation(line: 497, column: 24, scope: !13323)
!13465 = !DILocation(line: 497, column: 31, scope: !13323)
!13466 = !DILocation(line: 498, column: 26, scope: !13323)
!13467 = !DILocation(line: 498, column: 24, scope: !13323)
!13468 = !DILocation(line: 500, column: 15, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13323, file: !792, line: 500, column: 15)
!13470 = !DILocation(line: 500, column: 29, scope: !13469)
!13471 = !DILocation(line: 500, column: 15, scope: !13323)
!13472 = !DILocation(line: 502, column: 19, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13474, file: !792, line: 502, column: 19)
!13474 = distinct !DILexicalBlock(scope: !13469, file: !792, line: 501, column: 13)
!13475 = !DILocation(line: 502, column: 19, scope: !13474)
!13476 = !DILocation(line: 503, column: 17, scope: !13473)
!13477 = !DILocation(line: 504, column: 15, scope: !13474)
!13478 = !DILocation(line: 509, column: 15, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13323, file: !792, line: 509, column: 15)
!13480 = !DILocation(line: 509, column: 33, scope: !13479)
!13481 = !DILocation(line: 509, column: 36, scope: !13479)
!13482 = !DILocation(line: 509, column: 55, scope: !13479)
!13483 = !DILocation(line: 509, column: 58, scope: !13479)
!13484 = !DILocation(line: 509, column: 15, scope: !13323)
!13485 = !DILocation(line: 510, column: 13, scope: !13479)
!13486 = !DILabel(scope: !13323, name: "c_and_shell_escape", file: !792, line: 512)
!13487 = !DILocation(line: 512, column: 9, scope: !13323)
!13488 = !DILocation(line: 513, column: 15, scope: !13489)
!13489 = distinct !DILexicalBlock(scope: !13323, file: !792, line: 513, column: 15)
!13490 = !DILocation(line: 513, column: 29, scope: !13489)
!13491 = !DILocation(line: 514, column: 15, scope: !13489)
!13492 = !DILocation(line: 514, column: 18, scope: !13489)
!13493 = !DILocation(line: 513, column: 15, scope: !13323)
!13494 = !DILocation(line: 515, column: 13, scope: !13489)
!13495 = !DILabel(scope: !13323, name: "c_escape", file: !792, line: 517)
!13496 = !DILocation(line: 517, column: 9, scope: !13323)
!13497 = !DILocation(line: 518, column: 15, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13323, file: !792, line: 518, column: 15)
!13499 = !DILocation(line: 518, column: 15, scope: !13323)
!13500 = !DILocation(line: 520, column: 19, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !13498, file: !792, line: 519, column: 13)
!13502 = !DILocation(line: 520, column: 17, scope: !13501)
!13503 = !DILocation(line: 521, column: 15, scope: !13501)
!13504 = !DILocation(line: 523, column: 11, scope: !13323)
!13505 = !DILocation(line: 526, column: 18, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13323, file: !792, line: 526, column: 15)
!13507 = !DILocation(line: 526, column: 26, scope: !13506)
!13508 = !DILocation(line: 526, column: 15, scope: !13323)
!13509 = !DILocation(line: 526, column: 40, scope: !13506)
!13510 = !DILocation(line: 526, column: 47, scope: !13506)
!13511 = !DILocation(line: 526, column: 57, scope: !13506)
!13512 = !DILocation(line: 526, column: 65, scope: !13506)
!13513 = !DILocation(line: 527, column: 13, scope: !13506)
!13514 = !DILocation(line: 528, column: 11, scope: !13323)
!13515 = !DILocation(line: 530, column: 15, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13323, file: !792, line: 530, column: 15)
!13517 = !DILocation(line: 530, column: 17, scope: !13516)
!13518 = !DILocation(line: 530, column: 15, scope: !13323)
!13519 = !DILocation(line: 531, column: 13, scope: !13516)
!13520 = !DILocation(line: 532, column: 11, scope: !13323)
!13521 = !DILocation(line: 534, column: 36, scope: !13323)
!13522 = !DILocation(line: 535, column: 11, scope: !13323)
!13523 = !DILocation(line: 548, column: 15, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13323, file: !792, line: 548, column: 15)
!13525 = !DILocation(line: 548, column: 29, scope: !13524)
!13526 = !DILocation(line: 549, column: 15, scope: !13524)
!13527 = !DILocation(line: 549, column: 18, scope: !13524)
!13528 = !DILocation(line: 548, column: 15, scope: !13323)
!13529 = !DILocation(line: 550, column: 13, scope: !13524)
!13530 = !DILocation(line: 551, column: 11, scope: !13323)
!13531 = !DILocation(line: 554, column: 36, scope: !13323)
!13532 = !DILocation(line: 555, column: 36, scope: !13323)
!13533 = !DILocation(line: 556, column: 15, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13323, file: !792, line: 556, column: 15)
!13535 = !DILocation(line: 556, column: 29, scope: !13534)
!13536 = !DILocation(line: 556, column: 15, scope: !13323)
!13537 = !DILocation(line: 558, column: 19, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13539, file: !792, line: 558, column: 19)
!13539 = distinct !DILexicalBlock(scope: !13534, file: !792, line: 557, column: 13)
!13540 = !DILocation(line: 558, column: 19, scope: !13539)
!13541 = !DILocation(line: 559, column: 17, scope: !13538)
!13542 = !DILocation(line: 561, column: 19, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !13539, file: !792, line: 561, column: 19)
!13544 = !DILocation(line: 561, column: 30, scope: !13543)
!13545 = !DILocation(line: 561, column: 35, scope: !13543)
!13546 = !DILocation(line: 561, column: 19, scope: !13539)
!13547 = !DILocation(line: 566, column: 37, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13543, file: !792, line: 562, column: 17)
!13549 = !DILocation(line: 566, column: 35, scope: !13548)
!13550 = !DILocation(line: 567, column: 30, scope: !13548)
!13551 = !DILocation(line: 568, column: 17, scope: !13548)
!13552 = !DILocation(line: 570, column: 15, scope: !13539)
!13553 = !DILocation(line: 570, column: 15, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13555, file: !792, line: 570, column: 15)
!13555 = distinct !DILexicalBlock(scope: !13539, file: !792, line: 570, column: 15)
!13556 = !DILocation(line: 570, column: 15, scope: !13555)
!13557 = !DILocation(line: 571, column: 15, scope: !13539)
!13558 = !DILocation(line: 571, column: 15, scope: !13559)
!13559 = distinct !DILexicalBlock(scope: !13560, file: !792, line: 571, column: 15)
!13560 = distinct !DILexicalBlock(scope: !13539, file: !792, line: 571, column: 15)
!13561 = !DILocation(line: 571, column: 15, scope: !13560)
!13562 = !DILocation(line: 572, column: 15, scope: !13539)
!13563 = !DILocation(line: 572, column: 15, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13565, file: !792, line: 572, column: 15)
!13565 = distinct !DILexicalBlock(scope: !13539, file: !792, line: 572, column: 15)
!13566 = !DILocation(line: 572, column: 15, scope: !13565)
!13567 = !DILocation(line: 573, column: 40, scope: !13539)
!13568 = !DILocation(line: 574, column: 13, scope: !13539)
!13569 = !DILocation(line: 575, column: 11, scope: !13323)
!13570 = !DILocation(line: 599, column: 36, scope: !13323)
!13571 = !DILocation(line: 600, column: 11, scope: !13323)
!13572 = !DILocalVariable(name: "m", scope: !13573, file: !792, line: 610, type: !52)
!13573 = distinct !DILexicalBlock(scope: !13323, file: !792, line: 608, column: 11)
!13574 = !DILocation(line: 610, column: 20, scope: !13573)
!13575 = !DILocalVariable(name: "printable", scope: !13573, file: !792, line: 612, type: !139)
!13576 = !DILocation(line: 612, column: 18, scope: !13573)
!13577 = !DILocation(line: 614, column: 17, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13573, file: !792, line: 614, column: 17)
!13579 = !DILocation(line: 614, column: 17, scope: !13573)
!13580 = !DILocation(line: 616, column: 19, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13578, file: !792, line: 615, column: 15)
!13582 = !DILocation(line: 617, column: 29, scope: !13581)
!13583 = !DILocation(line: 617, column: 41, scope: !13581)
!13584 = !DILocation(line: 617, column: 27, scope: !13581)
!13585 = !DILocation(line: 618, column: 15, scope: !13581)
!13586 = !DILocalVariable(name: "mbstate", scope: !13587, file: !792, line: 621, type: !811)
!13587 = distinct !DILexicalBlock(scope: !13578, file: !792, line: 620, column: 15)
!13588 = !DILocation(line: 621, column: 27, scope: !13587)
!13589 = !DILocation(line: 622, column: 17, scope: !13587)
!13590 = !DILocation(line: 624, column: 19, scope: !13587)
!13591 = !DILocation(line: 625, column: 27, scope: !13587)
!13592 = !DILocation(line: 626, column: 21, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13587, file: !792, line: 626, column: 21)
!13594 = !DILocation(line: 626, column: 29, scope: !13593)
!13595 = !DILocation(line: 626, column: 21, scope: !13587)
!13596 = !DILocation(line: 627, column: 37, scope: !13593)
!13597 = !DILocation(line: 627, column: 29, scope: !13593)
!13598 = !DILocation(line: 627, column: 27, scope: !13593)
!13599 = !DILocation(line: 627, column: 19, scope: !13593)
!13600 = !DILocation(line: 629, column: 17, scope: !13587)
!13601 = !DILocalVariable(name: "w", scope: !13602, file: !792, line: 631, type: !822)
!13602 = distinct !DILexicalBlock(scope: !13587, file: !792, line: 630, column: 19)
!13603 = !DILocation(line: 631, column: 29, scope: !13602)
!13604 = !DILocalVariable(name: "bytes", scope: !13602, file: !792, line: 632, type: !52)
!13605 = !DILocation(line: 632, column: 28, scope: !13602)
!13606 = !DILocation(line: 632, column: 50, scope: !13602)
!13607 = !DILocation(line: 632, column: 54, scope: !13602)
!13608 = !DILocation(line: 632, column: 58, scope: !13602)
!13609 = !DILocation(line: 632, column: 56, scope: !13602)
!13610 = !DILocation(line: 633, column: 45, scope: !13602)
!13611 = !DILocation(line: 633, column: 56, scope: !13602)
!13612 = !DILocation(line: 633, column: 60, scope: !13602)
!13613 = !DILocation(line: 633, column: 58, scope: !13602)
!13614 = !DILocation(line: 633, column: 53, scope: !13602)
!13615 = !DILocation(line: 632, column: 36, scope: !13602)
!13616 = !DILocation(line: 634, column: 25, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13602, file: !792, line: 634, column: 25)
!13618 = !DILocation(line: 634, column: 31, scope: !13617)
!13619 = !DILocation(line: 634, column: 25, scope: !13602)
!13620 = !DILocation(line: 635, column: 23, scope: !13617)
!13621 = !DILocation(line: 636, column: 30, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13617, file: !792, line: 636, column: 30)
!13623 = !DILocation(line: 636, column: 36, scope: !13622)
!13624 = !DILocation(line: 636, column: 30, scope: !13617)
!13625 = !DILocation(line: 638, column: 35, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13622, file: !792, line: 637, column: 23)
!13627 = !DILocation(line: 639, column: 25, scope: !13626)
!13628 = !DILocation(line: 641, column: 30, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13622, file: !792, line: 641, column: 30)
!13630 = !DILocation(line: 641, column: 36, scope: !13629)
!13631 = !DILocation(line: 641, column: 30, scope: !13622)
!13632 = !DILocation(line: 643, column: 35, scope: !13633)
!13633 = distinct !DILexicalBlock(scope: !13629, file: !792, line: 642, column: 23)
!13634 = !DILocation(line: 644, column: 25, scope: !13633)
!13635 = !DILocation(line: 644, column: 32, scope: !13633)
!13636 = !DILocation(line: 644, column: 36, scope: !13633)
!13637 = !DILocation(line: 644, column: 34, scope: !13633)
!13638 = !DILocation(line: 644, column: 40, scope: !13633)
!13639 = !DILocation(line: 644, column: 38, scope: !13633)
!13640 = !DILocation(line: 644, column: 48, scope: !13633)
!13641 = !DILocation(line: 644, column: 51, scope: !13633)
!13642 = !DILocation(line: 644, column: 55, scope: !13633)
!13643 = !DILocation(line: 644, column: 59, scope: !13633)
!13644 = !DILocation(line: 644, column: 57, scope: !13633)
!13645 = !DILocation(line: 0, scope: !13633)
!13646 = !DILocation(line: 645, column: 28, scope: !13633)
!13647 = distinct !{!13647, !13634, !13646}
!13648 = !DILocation(line: 646, column: 25, scope: !13633)
!13649 = !DILocation(line: 654, column: 44, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13651, file: !792, line: 654, column: 29)
!13651 = distinct !DILexicalBlock(scope: !13629, file: !792, line: 649, column: 23)
!13652 = !DILocation(line: 655, column: 29, scope: !13650)
!13653 = !DILocation(line: 655, column: 32, scope: !13650)
!13654 = !DILocation(line: 655, column: 46, scope: !13650)
!13655 = !DILocation(line: 654, column: 29, scope: !13651)
!13656 = !DILocalVariable(name: "j", scope: !13657, file: !792, line: 657, type: !52)
!13657 = distinct !DILexicalBlock(scope: !13650, file: !792, line: 656, column: 27)
!13658 = !DILocation(line: 657, column: 36, scope: !13657)
!13659 = !DILocation(line: 658, column: 36, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13657, file: !792, line: 658, column: 29)
!13661 = !DILocation(line: 658, column: 34, scope: !13660)
!13662 = !DILocation(line: 658, column: 41, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13660, file: !792, line: 658, column: 29)
!13664 = !DILocation(line: 658, column: 45, scope: !13663)
!13665 = !DILocation(line: 658, column: 43, scope: !13663)
!13666 = !DILocation(line: 658, column: 29, scope: !13660)
!13667 = !DILocation(line: 659, column: 39, scope: !13663)
!13668 = !DILocation(line: 659, column: 43, scope: !13663)
!13669 = !DILocation(line: 659, column: 47, scope: !13663)
!13670 = !DILocation(line: 659, column: 45, scope: !13663)
!13671 = !DILocation(line: 659, column: 51, scope: !13663)
!13672 = !DILocation(line: 659, column: 49, scope: !13663)
!13673 = !DILocation(line: 659, column: 31, scope: !13663)
!13674 = !DILocation(line: 663, column: 35, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13663, file: !792, line: 660, column: 33)
!13676 = !DILocation(line: 666, column: 35, scope: !13675)
!13677 = !DILocation(line: 667, column: 33, scope: !13675)
!13678 = !DILocation(line: 658, column: 53, scope: !13663)
!13679 = !DILocation(line: 658, column: 29, scope: !13663)
!13680 = distinct !{!13680, !13666, !13681}
!13681 = !DILocation(line: 667, column: 33, scope: !13660)
!13682 = !DILocation(line: 668, column: 27, scope: !13657)
!13683 = !DILocation(line: 670, column: 41, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13651, file: !792, line: 670, column: 29)
!13685 = !DILocation(line: 670, column: 31, scope: !13684)
!13686 = !DILocation(line: 670, column: 29, scope: !13651)
!13687 = !DILocation(line: 671, column: 37, scope: !13684)
!13688 = !DILocation(line: 671, column: 27, scope: !13684)
!13689 = !DILocation(line: 672, column: 30, scope: !13651)
!13690 = !DILocation(line: 672, column: 27, scope: !13651)
!13691 = !DILocation(line: 674, column: 19, scope: !13602)
!13692 = !DILocation(line: 675, column: 26, scope: !13587)
!13693 = !DILocation(line: 675, column: 24, scope: !13587)
!13694 = distinct !{!13694, !13600, !13695}
!13695 = !DILocation(line: 675, column: 44, scope: !13587)
!13696 = !DILocation(line: 678, column: 40, scope: !13573)
!13697 = !DILocation(line: 678, column: 38, scope: !13573)
!13698 = !DILocation(line: 680, column: 21, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13573, file: !792, line: 680, column: 17)
!13700 = !DILocation(line: 680, column: 19, scope: !13699)
!13701 = !DILocation(line: 680, column: 23, scope: !13699)
!13702 = !DILocation(line: 680, column: 27, scope: !13699)
!13703 = !DILocation(line: 680, column: 45, scope: !13699)
!13704 = !DILocation(line: 680, column: 50, scope: !13699)
!13705 = !DILocation(line: 680, column: 17, scope: !13573)
!13706 = !DILocalVariable(name: "ilim", scope: !13707, file: !792, line: 684, type: !52)
!13707 = distinct !DILexicalBlock(scope: !13699, file: !792, line: 681, column: 15)
!13708 = !DILocation(line: 684, column: 24, scope: !13707)
!13709 = !DILocation(line: 684, column: 31, scope: !13707)
!13710 = !DILocation(line: 684, column: 35, scope: !13707)
!13711 = !DILocation(line: 684, column: 33, scope: !13707)
!13712 = !DILocation(line: 686, column: 17, scope: !13707)
!13713 = !DILocation(line: 688, column: 25, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13715, file: !792, line: 688, column: 25)
!13715 = distinct !DILexicalBlock(scope: !13716, file: !792, line: 687, column: 19)
!13716 = distinct !DILexicalBlock(scope: !13717, file: !792, line: 686, column: 17)
!13717 = distinct !DILexicalBlock(scope: !13707, file: !792, line: 686, column: 17)
!13718 = !DILocation(line: 688, column: 43, scope: !13714)
!13719 = !DILocation(line: 688, column: 48, scope: !13714)
!13720 = !DILocation(line: 688, column: 25, scope: !13715)
!13721 = !DILocation(line: 690, column: 25, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13714, file: !792, line: 689, column: 23)
!13723 = !DILocation(line: 690, column: 25, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13725, file: !792, line: 690, column: 25)
!13725 = distinct !DILexicalBlock(scope: !13722, file: !792, line: 690, column: 25)
!13726 = !DILocation(line: 690, column: 25, scope: !13725)
!13727 = !DILocation(line: 690, column: 25, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !13725, file: !792, line: 690, column: 25)
!13729 = !DILocation(line: 690, column: 25, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13728, file: !792, line: 690, column: 25)
!13731 = !DILocation(line: 690, column: 25, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13733, file: !792, line: 690, column: 25)
!13733 = distinct !DILexicalBlock(scope: !13730, file: !792, line: 690, column: 25)
!13734 = !DILocation(line: 690, column: 25, scope: !13733)
!13735 = !DILocation(line: 690, column: 25, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13737, file: !792, line: 690, column: 25)
!13737 = distinct !DILexicalBlock(scope: !13730, file: !792, line: 690, column: 25)
!13738 = !DILocation(line: 690, column: 25, scope: !13737)
!13739 = !DILocation(line: 690, column: 25, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13741, file: !792, line: 690, column: 25)
!13741 = distinct !DILexicalBlock(scope: !13730, file: !792, line: 690, column: 25)
!13742 = !DILocation(line: 690, column: 25, scope: !13741)
!13743 = !DILocation(line: 690, column: 25, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13745, file: !792, line: 690, column: 25)
!13745 = distinct !DILexicalBlock(scope: !13725, file: !792, line: 690, column: 25)
!13746 = !DILocation(line: 690, column: 25, scope: !13745)
!13747 = !DILocation(line: 691, column: 25, scope: !13722)
!13748 = !DILocation(line: 691, column: 25, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13750, file: !792, line: 691, column: 25)
!13750 = distinct !DILexicalBlock(scope: !13722, file: !792, line: 691, column: 25)
!13751 = !DILocation(line: 691, column: 25, scope: !13750)
!13752 = !DILocation(line: 692, column: 25, scope: !13722)
!13753 = !DILocation(line: 692, column: 25, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13755, file: !792, line: 692, column: 25)
!13755 = distinct !DILexicalBlock(scope: !13722, file: !792, line: 692, column: 25)
!13756 = !DILocation(line: 692, column: 25, scope: !13755)
!13757 = !DILocation(line: 693, column: 36, scope: !13722)
!13758 = !DILocation(line: 693, column: 38, scope: !13722)
!13759 = !DILocation(line: 693, column: 33, scope: !13722)
!13760 = !DILocation(line: 693, column: 29, scope: !13722)
!13761 = !DILocation(line: 693, column: 27, scope: !13722)
!13762 = !DILocation(line: 694, column: 23, scope: !13722)
!13763 = !DILocation(line: 695, column: 30, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13714, file: !792, line: 695, column: 30)
!13765 = !DILocation(line: 695, column: 30, scope: !13714)
!13766 = !DILocation(line: 697, column: 25, scope: !13767)
!13767 = distinct !DILexicalBlock(scope: !13764, file: !792, line: 696, column: 23)
!13768 = !DILocation(line: 697, column: 25, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13770, file: !792, line: 697, column: 25)
!13770 = distinct !DILexicalBlock(scope: !13767, file: !792, line: 697, column: 25)
!13771 = !DILocation(line: 697, column: 25, scope: !13770)
!13772 = !DILocation(line: 698, column: 40, scope: !13767)
!13773 = !DILocation(line: 699, column: 23, scope: !13767)
!13774 = !DILocation(line: 700, column: 25, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !13715, file: !792, line: 700, column: 25)
!13776 = !DILocation(line: 700, column: 33, scope: !13775)
!13777 = !DILocation(line: 700, column: 35, scope: !13775)
!13778 = !DILocation(line: 700, column: 30, scope: !13775)
!13779 = !DILocation(line: 700, column: 25, scope: !13715)
!13780 = !DILocation(line: 701, column: 23, scope: !13775)
!13781 = !DILocation(line: 702, column: 21, scope: !13715)
!13782 = !DILocation(line: 702, column: 21, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13784, file: !792, line: 702, column: 21)
!13784 = distinct !DILexicalBlock(scope: !13715, file: !792, line: 702, column: 21)
!13785 = !DILocation(line: 702, column: 21, scope: !13784)
!13786 = !DILocation(line: 702, column: 21, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13783, file: !792, line: 702, column: 21)
!13788 = !DILocation(line: 702, column: 21, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13790, file: !792, line: 702, column: 21)
!13790 = distinct !DILexicalBlock(scope: !13787, file: !792, line: 702, column: 21)
!13791 = !DILocation(line: 702, column: 21, scope: !13790)
!13792 = !DILocation(line: 702, column: 21, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !13794, file: !792, line: 702, column: 21)
!13794 = distinct !DILexicalBlock(scope: !13787, file: !792, line: 702, column: 21)
!13795 = !DILocation(line: 702, column: 21, scope: !13794)
!13796 = !DILocation(line: 703, column: 21, scope: !13715)
!13797 = !DILocation(line: 703, column: 21, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13799, file: !792, line: 703, column: 21)
!13799 = distinct !DILexicalBlock(scope: !13715, file: !792, line: 703, column: 21)
!13800 = !DILocation(line: 703, column: 21, scope: !13799)
!13801 = !DILocation(line: 704, column: 25, scope: !13715)
!13802 = !DILocation(line: 704, column: 29, scope: !13715)
!13803 = !DILocation(line: 704, column: 23, scope: !13715)
!13804 = !DILocation(line: 686, column: 17, scope: !13716)
!13805 = distinct !{!13805, !13806, !13807}
!13806 = !DILocation(line: 686, column: 17, scope: !13717)
!13807 = !DILocation(line: 705, column: 19, scope: !13717)
!13808 = !DILocation(line: 707, column: 17, scope: !13707)
!13809 = !DILocation(line: 710, column: 9, scope: !13323)
!13810 = !DILocation(line: 712, column: 16, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13269, file: !792, line: 712, column: 11)
!13812 = !DILocation(line: 712, column: 34, scope: !13811)
!13813 = !DILocation(line: 712, column: 37, scope: !13811)
!13814 = !DILocation(line: 712, column: 51, scope: !13811)
!13815 = !DILocation(line: 713, column: 15, scope: !13811)
!13816 = !DILocation(line: 713, column: 18, scope: !13811)
!13817 = !DILocation(line: 714, column: 14, scope: !13811)
!13818 = !DILocation(line: 714, column: 17, scope: !13811)
!13819 = !DILocation(line: 715, column: 14, scope: !13811)
!13820 = !DILocation(line: 715, column: 17, scope: !13811)
!13821 = !DILocation(line: 715, column: 33, scope: !13811)
!13822 = !DILocation(line: 715, column: 35, scope: !13811)
!13823 = !DILocation(line: 715, column: 51, scope: !13811)
!13824 = !DILocation(line: 715, column: 53, scope: !13811)
!13825 = !DILocation(line: 715, column: 47, scope: !13811)
!13826 = !DILocation(line: 715, column: 65, scope: !13811)
!13827 = !DILocation(line: 716, column: 11, scope: !13811)
!13828 = !DILocation(line: 716, column: 15, scope: !13811)
!13829 = !DILocation(line: 712, column: 11, scope: !13269)
!13830 = !DILocation(line: 717, column: 9, scope: !13811)
!13831 = !DILabel(scope: !13269, name: "store_escape", file: !792, line: 719)
!13832 = !DILocation(line: 719, column: 5, scope: !13269)
!13833 = !DILocation(line: 720, column: 7, scope: !13269)
!13834 = !DILocation(line: 720, column: 7, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13836, file: !792, line: 720, column: 7)
!13836 = distinct !DILexicalBlock(scope: !13269, file: !792, line: 720, column: 7)
!13837 = !DILocation(line: 720, column: 7, scope: !13836)
!13838 = !DILocation(line: 720, column: 7, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13836, file: !792, line: 720, column: 7)
!13840 = !DILocation(line: 720, column: 7, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13839, file: !792, line: 720, column: 7)
!13842 = !DILocation(line: 720, column: 7, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13844, file: !792, line: 720, column: 7)
!13844 = distinct !DILexicalBlock(scope: !13841, file: !792, line: 720, column: 7)
!13845 = !DILocation(line: 720, column: 7, scope: !13844)
!13846 = !DILocation(line: 720, column: 7, scope: !13847)
!13847 = distinct !DILexicalBlock(scope: !13848, file: !792, line: 720, column: 7)
!13848 = distinct !DILexicalBlock(scope: !13841, file: !792, line: 720, column: 7)
!13849 = !DILocation(line: 720, column: 7, scope: !13848)
!13850 = !DILocation(line: 720, column: 7, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13852, file: !792, line: 720, column: 7)
!13852 = distinct !DILexicalBlock(scope: !13841, file: !792, line: 720, column: 7)
!13853 = !DILocation(line: 720, column: 7, scope: !13852)
!13854 = !DILocation(line: 720, column: 7, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13856, file: !792, line: 720, column: 7)
!13856 = distinct !DILexicalBlock(scope: !13836, file: !792, line: 720, column: 7)
!13857 = !DILocation(line: 720, column: 7, scope: !13856)
!13858 = !DILabel(scope: !13269, name: "store_c", file: !792, line: 722)
!13859 = !DILocation(line: 722, column: 5, scope: !13269)
!13860 = !DILocation(line: 723, column: 7, scope: !13269)
!13861 = !DILocation(line: 723, column: 7, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13863, file: !792, line: 723, column: 7)
!13863 = distinct !DILexicalBlock(scope: !13269, file: !792, line: 723, column: 7)
!13864 = !DILocation(line: 723, column: 7, scope: !13863)
!13865 = !DILocation(line: 723, column: 7, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13862, file: !792, line: 723, column: 7)
!13867 = !DILocation(line: 723, column: 7, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13869, file: !792, line: 723, column: 7)
!13869 = distinct !DILexicalBlock(scope: !13866, file: !792, line: 723, column: 7)
!13870 = !DILocation(line: 723, column: 7, scope: !13869)
!13871 = !DILocation(line: 723, column: 7, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13873, file: !792, line: 723, column: 7)
!13873 = distinct !DILexicalBlock(scope: !13866, file: !792, line: 723, column: 7)
!13874 = !DILocation(line: 723, column: 7, scope: !13873)
!13875 = !DILocation(line: 724, column: 7, scope: !13269)
!13876 = !DILocation(line: 724, column: 7, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13878, file: !792, line: 724, column: 7)
!13878 = distinct !DILexicalBlock(scope: !13269, file: !792, line: 724, column: 7)
!13879 = !DILocation(line: 724, column: 7, scope: !13878)
!13880 = !DILocation(line: 726, column: 13, scope: !13881)
!13881 = distinct !DILexicalBlock(scope: !13269, file: !792, line: 726, column: 11)
!13882 = !DILocation(line: 726, column: 11, scope: !13269)
!13883 = !DILocation(line: 727, column: 38, scope: !13881)
!13884 = !DILocation(line: 727, column: 9, scope: !13881)
!13885 = !DILocation(line: 728, column: 5, scope: !13269)
!13886 = !DILocation(line: 400, column: 75, scope: !13258)
!13887 = !DILocation(line: 400, column: 3, scope: !13258)
!13888 = distinct !{!13888, !13267, !13889}
!13889 = !DILocation(line: 728, column: 5, scope: !13255)
!13890 = !DILocation(line: 730, column: 7, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13117, file: !792, line: 730, column: 7)
!13892 = !DILocation(line: 730, column: 11, scope: !13891)
!13893 = !DILocation(line: 730, column: 16, scope: !13891)
!13894 = !DILocation(line: 730, column: 19, scope: !13891)
!13895 = !DILocation(line: 730, column: 33, scope: !13891)
!13896 = !DILocation(line: 731, column: 7, scope: !13891)
!13897 = !DILocation(line: 731, column: 10, scope: !13891)
!13898 = !DILocation(line: 730, column: 7, scope: !13117)
!13899 = !DILocation(line: 732, column: 5, scope: !13891)
!13900 = !DILocation(line: 738, column: 7, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13117, file: !792, line: 738, column: 7)
!13902 = !DILocation(line: 738, column: 21, scope: !13901)
!13903 = !DILocation(line: 738, column: 51, scope: !13901)
!13904 = !DILocation(line: 738, column: 56, scope: !13901)
!13905 = !DILocation(line: 739, column: 7, scope: !13901)
!13906 = !DILocation(line: 739, column: 10, scope: !13901)
!13907 = !DILocation(line: 738, column: 7, scope: !13117)
!13908 = !DILocation(line: 741, column: 11, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13910, file: !792, line: 741, column: 11)
!13910 = distinct !DILexicalBlock(scope: !13901, file: !792, line: 740, column: 5)
!13911 = !DILocation(line: 741, column: 11, scope: !13910)
!13912 = !DILocation(line: 742, column: 42, scope: !13909)
!13913 = !DILocation(line: 742, column: 50, scope: !13909)
!13914 = !DILocation(line: 742, column: 67, scope: !13909)
!13915 = !DILocation(line: 742, column: 72, scope: !13909)
!13916 = !DILocation(line: 744, column: 42, scope: !13909)
!13917 = !DILocation(line: 744, column: 49, scope: !13909)
!13918 = !DILocation(line: 745, column: 42, scope: !13909)
!13919 = !DILocation(line: 745, column: 54, scope: !13909)
!13920 = !DILocation(line: 742, column: 16, scope: !13909)
!13921 = !DILocation(line: 742, column: 9, scope: !13909)
!13922 = !DILocation(line: 746, column: 18, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13909, file: !792, line: 746, column: 16)
!13924 = !DILocation(line: 746, column: 29, scope: !13923)
!13925 = !DILocation(line: 746, column: 32, scope: !13923)
!13926 = !DILocation(line: 746, column: 16, scope: !13909)
!13927 = !DILocation(line: 749, column: 24, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13923, file: !792, line: 747, column: 9)
!13929 = !DILocation(line: 749, column: 22, scope: !13928)
!13930 = !DILocation(line: 750, column: 15, scope: !13928)
!13931 = !DILocation(line: 751, column: 11, scope: !13928)
!13932 = !DILocation(line: 753, column: 5, scope: !13910)
!13933 = !DILocation(line: 755, column: 7, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13117, file: !792, line: 755, column: 7)
!13935 = !DILocation(line: 755, column: 20, scope: !13934)
!13936 = !DILocation(line: 755, column: 24, scope: !13934)
!13937 = !DILocation(line: 755, column: 7, scope: !13117)
!13938 = !DILocation(line: 756, column: 5, scope: !13934)
!13939 = !DILocation(line: 756, column: 13, scope: !13940)
!13940 = distinct !DILexicalBlock(scope: !13941, file: !792, line: 756, column: 5)
!13941 = distinct !DILexicalBlock(scope: !13934, file: !792, line: 756, column: 5)
!13942 = !DILocation(line: 756, column: 12, scope: !13940)
!13943 = !DILocation(line: 756, column: 5, scope: !13941)
!13944 = !DILocation(line: 757, column: 7, scope: !13940)
!13945 = !DILocation(line: 757, column: 7, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13947, file: !792, line: 757, column: 7)
!13947 = distinct !DILexicalBlock(scope: !13940, file: !792, line: 757, column: 7)
!13948 = !DILocation(line: 757, column: 7, scope: !13947)
!13949 = !DILocation(line: 756, column: 39, scope: !13940)
!13950 = !DILocation(line: 756, column: 5, scope: !13940)
!13951 = distinct !{!13951, !13943, !13952}
!13952 = !DILocation(line: 757, column: 7, scope: !13941)
!13953 = !DILocation(line: 759, column: 7, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13117, file: !792, line: 759, column: 7)
!13955 = !DILocation(line: 759, column: 13, scope: !13954)
!13956 = !DILocation(line: 759, column: 11, scope: !13954)
!13957 = !DILocation(line: 759, column: 7, scope: !13117)
!13958 = !DILocation(line: 760, column: 5, scope: !13954)
!13959 = !DILocation(line: 760, column: 12, scope: !13954)
!13960 = !DILocation(line: 760, column: 17, scope: !13954)
!13961 = !DILocation(line: 761, column: 10, scope: !13117)
!13962 = !DILocation(line: 761, column: 3, scope: !13117)
!13963 = !DILabel(scope: !13117, name: "force_outer_quoting_style", file: !792, line: 763)
!13964 = !DILocation(line: 763, column: 2, scope: !13117)
!13965 = !DILocation(line: 766, column: 7, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13117, file: !792, line: 766, column: 7)
!13967 = !DILocation(line: 766, column: 21, scope: !13966)
!13968 = !DILocation(line: 766, column: 51, scope: !13966)
!13969 = !DILocation(line: 766, column: 54, scope: !13966)
!13970 = !DILocation(line: 766, column: 7, scope: !13117)
!13971 = !DILocation(line: 767, column: 19, scope: !13966)
!13972 = !DILocation(line: 767, column: 5, scope: !13966)
!13973 = !DILocation(line: 768, column: 36, scope: !13117)
!13974 = !DILocation(line: 768, column: 44, scope: !13117)
!13975 = !DILocation(line: 768, column: 56, scope: !13117)
!13976 = !DILocation(line: 768, column: 61, scope: !13117)
!13977 = !DILocation(line: 769, column: 36, scope: !13117)
!13978 = !DILocation(line: 770, column: 36, scope: !13117)
!13979 = !DILocation(line: 770, column: 42, scope: !13117)
!13980 = !DILocation(line: 771, column: 36, scope: !13117)
!13981 = !DILocation(line: 771, column: 48, scope: !13117)
!13982 = !DILocation(line: 768, column: 10, scope: !13117)
!13983 = !DILocation(line: 768, column: 3, scope: !13117)
!13984 = !DILocation(line: 772, column: 1, scope: !13117)
!13985 = distinct !DISubprogram(name: "gettext_quote", scope: !792, file: !792, line: 207, type: !13986, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !769, retainedNodes: !213)
!13986 = !DISubroutineType(types: !13987)
!13987 = !{!113, !113, !772}
!13988 = !DILocalVariable(name: "msgid", arg: 1, scope: !13985, file: !792, line: 207, type: !113)
!13989 = !DILocation(line: 207, column: 28, scope: !13985)
!13990 = !DILocalVariable(name: "s", arg: 2, scope: !13985, file: !792, line: 207, type: !772)
!13991 = !DILocation(line: 207, column: 54, scope: !13985)
!13992 = !DILocalVariable(name: "translation", scope: !13985, file: !792, line: 209, type: !113)
!13993 = !DILocation(line: 209, column: 15, scope: !13985)
!13994 = !DILocation(line: 209, column: 29, scope: !13985)
!13995 = !DILocalVariable(name: "locale_code", scope: !13985, file: !792, line: 210, type: !113)
!13996 = !DILocation(line: 210, column: 15, scope: !13985)
!13997 = !DILocation(line: 212, column: 7, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13985, file: !792, line: 212, column: 7)
!13999 = !DILocation(line: 212, column: 22, scope: !13998)
!14000 = !DILocation(line: 212, column: 19, scope: !13998)
!14001 = !DILocation(line: 212, column: 7, scope: !13985)
!14002 = !DILocation(line: 213, column: 12, scope: !13998)
!14003 = !DILocation(line: 213, column: 5, scope: !13998)
!14004 = !DILocation(line: 233, column: 17, scope: !13985)
!14005 = !DILocation(line: 233, column: 15, scope: !13985)
!14006 = !DILocation(line: 234, column: 7, scope: !14007)
!14007 = distinct !DILexicalBlock(scope: !13985, file: !792, line: 234, column: 7)
!14008 = !DILocation(line: 234, column: 7, scope: !13985)
!14009 = !DILocation(line: 235, column: 12, scope: !14007)
!14010 = !DILocation(line: 235, column: 21, scope: !14007)
!14011 = !DILocation(line: 235, column: 5, scope: !14007)
!14012 = !DILocation(line: 236, column: 7, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !13985, file: !792, line: 236, column: 7)
!14014 = !DILocation(line: 236, column: 7, scope: !13985)
!14015 = !DILocation(line: 237, column: 12, scope: !14013)
!14016 = !DILocation(line: 237, column: 21, scope: !14013)
!14017 = !DILocation(line: 237, column: 5, scope: !14013)
!14018 = !DILocation(line: 239, column: 11, scope: !13985)
!14019 = !DILocation(line: 239, column: 13, scope: !13985)
!14020 = !DILocation(line: 239, column: 3, scope: !13985)
!14021 = !DILocation(line: 240, column: 1, scope: !13985)
!14022 = distinct !DISubprogram(name: "quotearg_alloc", scope: !792, file: !792, line: 799, type: !14023, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14023 = !DISubroutineType(types: !14024)
!14024 = !{!7, !113, !52, !801}
!14025 = !DILocalVariable(name: "arg", arg: 1, scope: !14022, file: !792, line: 799, type: !113)
!14026 = !DILocation(line: 799, column: 29, scope: !14022)
!14027 = !DILocalVariable(name: "argsize", arg: 2, scope: !14022, file: !792, line: 799, type: !52)
!14028 = !DILocation(line: 799, column: 41, scope: !14022)
!14029 = !DILocalVariable(name: "o", arg: 3, scope: !14022, file: !792, line: 800, type: !801)
!14030 = !DILocation(line: 800, column: 47, scope: !14022)
!14031 = !DILocation(line: 802, column: 30, scope: !14022)
!14032 = !DILocation(line: 802, column: 35, scope: !14022)
!14033 = !DILocation(line: 802, column: 50, scope: !14022)
!14034 = !DILocation(line: 802, column: 10, scope: !14022)
!14035 = !DILocation(line: 802, column: 3, scope: !14022)
!14036 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !792, file: !792, line: 812, type: !14037, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14037 = !DISubroutineType(types: !14038)
!14038 = !{!7, !113, !52, !9678, !801}
!14039 = !DILocalVariable(name: "arg", arg: 1, scope: !14036, file: !792, line: 812, type: !113)
!14040 = !DILocation(line: 812, column: 33, scope: !14036)
!14041 = !DILocalVariable(name: "argsize", arg: 2, scope: !14036, file: !792, line: 812, type: !52)
!14042 = !DILocation(line: 812, column: 45, scope: !14036)
!14043 = !DILocalVariable(name: "size", arg: 3, scope: !14036, file: !792, line: 812, type: !9678)
!14044 = !DILocation(line: 812, column: 62, scope: !14036)
!14045 = !DILocalVariable(name: "o", arg: 4, scope: !14036, file: !792, line: 813, type: !801)
!14046 = !DILocation(line: 813, column: 51, scope: !14036)
!14047 = !DILocalVariable(name: "p", scope: !14036, file: !792, line: 815, type: !801)
!14048 = !DILocation(line: 815, column: 33, scope: !14036)
!14049 = !DILocation(line: 815, column: 37, scope: !14036)
!14050 = !DILocation(line: 815, column: 41, scope: !14036)
!14051 = !DILocalVariable(name: "e", scope: !14036, file: !792, line: 816, type: !5)
!14052 = !DILocation(line: 816, column: 7, scope: !14036)
!14053 = !DILocation(line: 816, column: 11, scope: !14036)
!14054 = !DILocalVariable(name: "flags", scope: !14036, file: !792, line: 818, type: !5)
!14055 = !DILocation(line: 818, column: 7, scope: !14036)
!14056 = !DILocation(line: 818, column: 15, scope: !14036)
!14057 = !DILocation(line: 818, column: 18, scope: !14036)
!14058 = !DILocation(line: 818, column: 27, scope: !14036)
!14059 = !DILocation(line: 818, column: 24, scope: !14036)
!14060 = !DILocalVariable(name: "bufsize", scope: !14036, file: !792, line: 819, type: !52)
!14061 = !DILocation(line: 819, column: 10, scope: !14036)
!14062 = !DILocation(line: 819, column: 52, scope: !14036)
!14063 = !DILocation(line: 819, column: 57, scope: !14036)
!14064 = !DILocation(line: 819, column: 66, scope: !14036)
!14065 = !DILocation(line: 819, column: 69, scope: !14036)
!14066 = !DILocation(line: 820, column: 46, scope: !14036)
!14067 = !DILocation(line: 820, column: 53, scope: !14036)
!14068 = !DILocation(line: 820, column: 56, scope: !14036)
!14069 = !DILocation(line: 821, column: 46, scope: !14036)
!14070 = !DILocation(line: 821, column: 49, scope: !14036)
!14071 = !DILocation(line: 822, column: 46, scope: !14036)
!14072 = !DILocation(line: 822, column: 49, scope: !14036)
!14073 = !DILocation(line: 819, column: 20, scope: !14036)
!14074 = !DILocation(line: 822, column: 62, scope: !14036)
!14075 = !DILocalVariable(name: "buf", scope: !14036, file: !792, line: 823, type: !7)
!14076 = !DILocation(line: 823, column: 9, scope: !14036)
!14077 = !DILocation(line: 823, column: 27, scope: !14036)
!14078 = !DILocation(line: 823, column: 15, scope: !14036)
!14079 = !DILocation(line: 824, column: 29, scope: !14036)
!14080 = !DILocation(line: 824, column: 34, scope: !14036)
!14081 = !DILocation(line: 824, column: 43, scope: !14036)
!14082 = !DILocation(line: 824, column: 48, scope: !14036)
!14083 = !DILocation(line: 824, column: 57, scope: !14036)
!14084 = !DILocation(line: 824, column: 60, scope: !14036)
!14085 = !DILocation(line: 824, column: 67, scope: !14036)
!14086 = !DILocation(line: 825, column: 29, scope: !14036)
!14087 = !DILocation(line: 825, column: 32, scope: !14036)
!14088 = !DILocation(line: 826, column: 29, scope: !14036)
!14089 = !DILocation(line: 826, column: 32, scope: !14036)
!14090 = !DILocation(line: 826, column: 44, scope: !14036)
!14091 = !DILocation(line: 826, column: 47, scope: !14036)
!14092 = !DILocation(line: 824, column: 3, scope: !14036)
!14093 = !DILocation(line: 827, column: 11, scope: !14036)
!14094 = !DILocation(line: 827, column: 3, scope: !14036)
!14095 = !DILocation(line: 827, column: 9, scope: !14036)
!14096 = !DILocation(line: 828, column: 7, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14036, file: !792, line: 828, column: 7)
!14098 = !DILocation(line: 828, column: 7, scope: !14036)
!14099 = !DILocation(line: 829, column: 13, scope: !14097)
!14100 = !DILocation(line: 829, column: 21, scope: !14097)
!14101 = !DILocation(line: 829, column: 6, scope: !14097)
!14102 = !DILocation(line: 829, column: 11, scope: !14097)
!14103 = !DILocation(line: 829, column: 5, scope: !14097)
!14104 = !DILocation(line: 830, column: 10, scope: !14036)
!14105 = !DILocation(line: 830, column: 3, scope: !14036)
!14106 = distinct !DISubprogram(name: "quotearg_free", scope: !792, file: !792, line: 848, type: !562, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14107 = !DILocalVariable(name: "sv", scope: !14106, file: !792, line: 850, type: !804)
!14108 = !DILocation(line: 850, column: 19, scope: !14106)
!14109 = !DILocation(line: 850, column: 24, scope: !14106)
!14110 = !DILocalVariable(name: "i", scope: !14106, file: !792, line: 851, type: !5)
!14111 = !DILocation(line: 851, column: 7, scope: !14106)
!14112 = !DILocation(line: 852, column: 10, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14106, file: !792, line: 852, column: 3)
!14114 = !DILocation(line: 852, column: 8, scope: !14113)
!14115 = !DILocation(line: 852, column: 15, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14113, file: !792, line: 852, column: 3)
!14117 = !DILocation(line: 852, column: 19, scope: !14116)
!14118 = !DILocation(line: 852, column: 17, scope: !14116)
!14119 = !DILocation(line: 852, column: 3, scope: !14113)
!14120 = !DILocation(line: 853, column: 11, scope: !14116)
!14121 = !DILocation(line: 853, column: 14, scope: !14116)
!14122 = !DILocation(line: 853, column: 17, scope: !14116)
!14123 = !DILocation(line: 853, column: 5, scope: !14116)
!14124 = !DILocation(line: 852, column: 28, scope: !14116)
!14125 = !DILocation(line: 852, column: 3, scope: !14116)
!14126 = distinct !{!14126, !14119, !14127}
!14127 = !DILocation(line: 853, column: 20, scope: !14113)
!14128 = !DILocation(line: 854, column: 7, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14106, file: !792, line: 854, column: 7)
!14130 = !DILocation(line: 854, column: 13, scope: !14129)
!14131 = !DILocation(line: 854, column: 17, scope: !14129)
!14132 = !DILocation(line: 854, column: 7, scope: !14106)
!14133 = !DILocation(line: 856, column: 13, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14129, file: !792, line: 855, column: 5)
!14135 = !DILocation(line: 856, column: 19, scope: !14134)
!14136 = !DILocation(line: 856, column: 7, scope: !14134)
!14137 = !DILocation(line: 857, column: 21, scope: !14134)
!14138 = !DILocation(line: 858, column: 20, scope: !14134)
!14139 = !DILocation(line: 859, column: 5, scope: !14134)
!14140 = !DILocation(line: 860, column: 7, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !14106, file: !792, line: 860, column: 7)
!14142 = !DILocation(line: 860, column: 10, scope: !14141)
!14143 = !DILocation(line: 860, column: 7, scope: !14106)
!14144 = !DILocation(line: 862, column: 13, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14141, file: !792, line: 861, column: 5)
!14146 = !DILocation(line: 862, column: 7, scope: !14145)
!14147 = !DILocation(line: 863, column: 15, scope: !14145)
!14148 = !DILocation(line: 864, column: 5, scope: !14145)
!14149 = !DILocation(line: 865, column: 10, scope: !14106)
!14150 = !DILocation(line: 866, column: 1, scope: !14106)
!14151 = distinct !DISubprogram(name: "quotearg_n", scope: !792, file: !792, line: 931, type: !14152, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14152 = !DISubroutineType(types: !14153)
!14153 = !{!7, !5, !113}
!14154 = !DILocalVariable(name: "n", arg: 1, scope: !14151, file: !792, line: 931, type: !5)
!14155 = !DILocation(line: 931, column: 17, scope: !14151)
!14156 = !DILocalVariable(name: "arg", arg: 2, scope: !14151, file: !792, line: 931, type: !113)
!14157 = !DILocation(line: 931, column: 32, scope: !14151)
!14158 = !DILocation(line: 933, column: 30, scope: !14151)
!14159 = !DILocation(line: 933, column: 33, scope: !14151)
!14160 = !DILocation(line: 933, column: 10, scope: !14151)
!14161 = !DILocation(line: 933, column: 3, scope: !14151)
!14162 = distinct !DISubprogram(name: "quotearg_n_options", scope: !792, file: !792, line: 877, type: !14163, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14163 = !DISubroutineType(types: !14164)
!14164 = !{!7, !5, !113, !52, !801}
!14165 = !DILocalVariable(name: "n", arg: 1, scope: !14162, file: !792, line: 877, type: !5)
!14166 = !DILocation(line: 877, column: 25, scope: !14162)
!14167 = !DILocalVariable(name: "arg", arg: 2, scope: !14162, file: !792, line: 877, type: !113)
!14168 = !DILocation(line: 877, column: 40, scope: !14162)
!14169 = !DILocalVariable(name: "argsize", arg: 3, scope: !14162, file: !792, line: 877, type: !52)
!14170 = !DILocation(line: 877, column: 52, scope: !14162)
!14171 = !DILocalVariable(name: "options", arg: 4, scope: !14162, file: !792, line: 878, type: !801)
!14172 = !DILocation(line: 878, column: 51, scope: !14162)
!14173 = !DILocalVariable(name: "e", scope: !14162, file: !792, line: 880, type: !5)
!14174 = !DILocation(line: 880, column: 7, scope: !14162)
!14175 = !DILocation(line: 880, column: 11, scope: !14162)
!14176 = !DILocalVariable(name: "sv", scope: !14162, file: !792, line: 882, type: !804)
!14177 = !DILocation(line: 882, column: 19, scope: !14162)
!14178 = !DILocation(line: 882, column: 24, scope: !14162)
!14179 = !DILocation(line: 884, column: 7, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14162, file: !792, line: 884, column: 7)
!14181 = !DILocation(line: 884, column: 9, scope: !14180)
!14182 = !DILocation(line: 884, column: 7, scope: !14162)
!14183 = !DILocation(line: 885, column: 5, scope: !14180)
!14184 = !DILocation(line: 887, column: 7, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14162, file: !792, line: 887, column: 7)
!14186 = !DILocation(line: 887, column: 17, scope: !14185)
!14187 = !DILocation(line: 887, column: 14, scope: !14185)
!14188 = !DILocation(line: 887, column: 7, scope: !14162)
!14189 = !DILocalVariable(name: "preallocated", scope: !14190, file: !792, line: 889, type: !139)
!14190 = distinct !DILexicalBlock(scope: !14185, file: !792, line: 888, column: 5)
!14191 = !DILocation(line: 889, column: 12, scope: !14190)
!14192 = !DILocation(line: 889, column: 28, scope: !14190)
!14193 = !DILocation(line: 889, column: 31, scope: !14190)
!14194 = !DILocalVariable(name: "nmax", scope: !14190, file: !792, line: 890, type: !5)
!14195 = !DILocation(line: 890, column: 11, scope: !14190)
!14196 = !DILocation(line: 892, column: 11, scope: !14197)
!14197 = distinct !DILexicalBlock(scope: !14190, file: !792, line: 892, column: 11)
!14198 = !DILocation(line: 892, column: 18, scope: !14197)
!14199 = !DILocation(line: 892, column: 16, scope: !14197)
!14200 = !DILocation(line: 892, column: 11, scope: !14190)
!14201 = !DILocation(line: 893, column: 9, scope: !14197)
!14202 = !DILocation(line: 895, column: 32, scope: !14190)
!14203 = !DILocation(line: 895, column: 54, scope: !14190)
!14204 = !DILocation(line: 895, column: 59, scope: !14190)
!14205 = !DILocation(line: 895, column: 61, scope: !14190)
!14206 = !DILocation(line: 895, column: 58, scope: !14190)
!14207 = !DILocation(line: 895, column: 66, scope: !14190)
!14208 = !DILocation(line: 895, column: 22, scope: !14190)
!14209 = !DILocation(line: 895, column: 20, scope: !14190)
!14210 = !DILocation(line: 895, column: 15, scope: !14190)
!14211 = !DILocation(line: 896, column: 11, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14190, file: !792, line: 896, column: 11)
!14213 = !DILocation(line: 896, column: 11, scope: !14190)
!14214 = !DILocation(line: 897, column: 10, scope: !14212)
!14215 = !DILocation(line: 897, column: 15, scope: !14212)
!14216 = !DILocation(line: 897, column: 9, scope: !14212)
!14217 = !DILocation(line: 898, column: 15, scope: !14190)
!14218 = !DILocation(line: 898, column: 20, scope: !14190)
!14219 = !DILocation(line: 898, column: 18, scope: !14190)
!14220 = !DILocation(line: 898, column: 7, scope: !14190)
!14221 = !DILocation(line: 898, column: 32, scope: !14190)
!14222 = !DILocation(line: 898, column: 34, scope: !14190)
!14223 = !DILocation(line: 898, column: 40, scope: !14190)
!14224 = !DILocation(line: 898, column: 38, scope: !14190)
!14225 = !DILocation(line: 898, column: 31, scope: !14190)
!14226 = !DILocation(line: 898, column: 48, scope: !14190)
!14227 = !DILocation(line: 899, column: 16, scope: !14190)
!14228 = !DILocation(line: 899, column: 18, scope: !14190)
!14229 = !DILocation(line: 899, column: 14, scope: !14190)
!14230 = !DILocation(line: 900, column: 5, scope: !14190)
!14231 = !DILocalVariable(name: "size", scope: !14232, file: !792, line: 903, type: !52)
!14232 = distinct !DILexicalBlock(scope: !14162, file: !792, line: 902, column: 3)
!14233 = !DILocation(line: 903, column: 12, scope: !14232)
!14234 = !DILocation(line: 903, column: 19, scope: !14232)
!14235 = !DILocation(line: 903, column: 22, scope: !14232)
!14236 = !DILocation(line: 903, column: 25, scope: !14232)
!14237 = !DILocalVariable(name: "val", scope: !14232, file: !792, line: 904, type: !7)
!14238 = !DILocation(line: 904, column: 11, scope: !14232)
!14239 = !DILocation(line: 904, column: 17, scope: !14232)
!14240 = !DILocation(line: 904, column: 20, scope: !14232)
!14241 = !DILocation(line: 904, column: 23, scope: !14232)
!14242 = !DILocalVariable(name: "flags", scope: !14232, file: !792, line: 906, type: !5)
!14243 = !DILocation(line: 906, column: 9, scope: !14232)
!14244 = !DILocation(line: 906, column: 17, scope: !14232)
!14245 = !DILocation(line: 906, column: 26, scope: !14232)
!14246 = !DILocation(line: 906, column: 32, scope: !14232)
!14247 = !DILocalVariable(name: "qsize", scope: !14232, file: !792, line: 907, type: !52)
!14248 = !DILocation(line: 907, column: 12, scope: !14232)
!14249 = !DILocation(line: 907, column: 46, scope: !14232)
!14250 = !DILocation(line: 907, column: 51, scope: !14232)
!14251 = !DILocation(line: 907, column: 57, scope: !14232)
!14252 = !DILocation(line: 907, column: 62, scope: !14232)
!14253 = !DILocation(line: 908, column: 46, scope: !14232)
!14254 = !DILocation(line: 908, column: 55, scope: !14232)
!14255 = !DILocation(line: 908, column: 62, scope: !14232)
!14256 = !DILocation(line: 909, column: 46, scope: !14232)
!14257 = !DILocation(line: 909, column: 55, scope: !14232)
!14258 = !DILocation(line: 910, column: 46, scope: !14232)
!14259 = !DILocation(line: 910, column: 55, scope: !14232)
!14260 = !DILocation(line: 911, column: 46, scope: !14232)
!14261 = !DILocation(line: 911, column: 55, scope: !14232)
!14262 = !DILocation(line: 907, column: 20, scope: !14232)
!14263 = !DILocation(line: 913, column: 9, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14232, file: !792, line: 913, column: 9)
!14265 = !DILocation(line: 913, column: 17, scope: !14264)
!14266 = !DILocation(line: 913, column: 14, scope: !14264)
!14267 = !DILocation(line: 913, column: 9, scope: !14232)
!14268 = !DILocation(line: 915, column: 29, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14264, file: !792, line: 914, column: 7)
!14270 = !DILocation(line: 915, column: 35, scope: !14269)
!14271 = !DILocation(line: 915, column: 27, scope: !14269)
!14272 = !DILocation(line: 915, column: 9, scope: !14269)
!14273 = !DILocation(line: 915, column: 12, scope: !14269)
!14274 = !DILocation(line: 915, column: 15, scope: !14269)
!14275 = !DILocation(line: 915, column: 20, scope: !14269)
!14276 = !DILocation(line: 916, column: 13, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14269, file: !792, line: 916, column: 13)
!14278 = !DILocation(line: 916, column: 17, scope: !14277)
!14279 = !DILocation(line: 916, column: 13, scope: !14269)
!14280 = !DILocation(line: 917, column: 17, scope: !14277)
!14281 = !DILocation(line: 917, column: 11, scope: !14277)
!14282 = !DILocation(line: 918, column: 39, scope: !14269)
!14283 = !DILocation(line: 918, column: 27, scope: !14269)
!14284 = !DILocation(line: 918, column: 25, scope: !14269)
!14285 = !DILocation(line: 918, column: 9, scope: !14269)
!14286 = !DILocation(line: 918, column: 12, scope: !14269)
!14287 = !DILocation(line: 918, column: 15, scope: !14269)
!14288 = !DILocation(line: 918, column: 19, scope: !14269)
!14289 = !DILocation(line: 919, column: 35, scope: !14269)
!14290 = !DILocation(line: 919, column: 40, scope: !14269)
!14291 = !DILocation(line: 919, column: 46, scope: !14269)
!14292 = !DILocation(line: 919, column: 51, scope: !14269)
!14293 = !DILocation(line: 919, column: 60, scope: !14269)
!14294 = !DILocation(line: 919, column: 69, scope: !14269)
!14295 = !DILocation(line: 920, column: 35, scope: !14269)
!14296 = !DILocation(line: 920, column: 42, scope: !14269)
!14297 = !DILocation(line: 920, column: 51, scope: !14269)
!14298 = !DILocation(line: 921, column: 35, scope: !14269)
!14299 = !DILocation(line: 921, column: 44, scope: !14269)
!14300 = !DILocation(line: 922, column: 35, scope: !14269)
!14301 = !DILocation(line: 922, column: 44, scope: !14269)
!14302 = !DILocation(line: 919, column: 9, scope: !14269)
!14303 = !DILocation(line: 923, column: 7, scope: !14269)
!14304 = !DILocation(line: 925, column: 13, scope: !14232)
!14305 = !DILocation(line: 925, column: 5, scope: !14232)
!14306 = !DILocation(line: 925, column: 11, scope: !14232)
!14307 = !DILocation(line: 926, column: 12, scope: !14232)
!14308 = !DILocation(line: 926, column: 5, scope: !14232)
!14309 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !792, file: !792, line: 937, type: !14310, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14310 = !DISubroutineType(types: !14311)
!14311 = !{!7, !5, !113, !52}
!14312 = !DILocalVariable(name: "n", arg: 1, scope: !14309, file: !792, line: 937, type: !5)
!14313 = !DILocation(line: 937, column: 21, scope: !14309)
!14314 = !DILocalVariable(name: "arg", arg: 2, scope: !14309, file: !792, line: 937, type: !113)
!14315 = !DILocation(line: 937, column: 36, scope: !14309)
!14316 = !DILocalVariable(name: "argsize", arg: 3, scope: !14309, file: !792, line: 937, type: !52)
!14317 = !DILocation(line: 937, column: 48, scope: !14309)
!14318 = !DILocation(line: 939, column: 30, scope: !14309)
!14319 = !DILocation(line: 939, column: 33, scope: !14309)
!14320 = !DILocation(line: 939, column: 38, scope: !14309)
!14321 = !DILocation(line: 939, column: 10, scope: !14309)
!14322 = !DILocation(line: 939, column: 3, scope: !14309)
!14323 = distinct !DISubprogram(name: "quotearg", scope: !792, file: !792, line: 943, type: !10060, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14324 = !DILocalVariable(name: "arg", arg: 1, scope: !14323, file: !792, line: 943, type: !113)
!14325 = !DILocation(line: 943, column: 23, scope: !14323)
!14326 = !DILocation(line: 945, column: 25, scope: !14323)
!14327 = !DILocation(line: 945, column: 10, scope: !14323)
!14328 = !DILocation(line: 945, column: 3, scope: !14323)
!14329 = distinct !DISubprogram(name: "quotearg_mem", scope: !792, file: !792, line: 949, type: !9073, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14330 = !DILocalVariable(name: "arg", arg: 1, scope: !14329, file: !792, line: 949, type: !113)
!14331 = !DILocation(line: 949, column: 27, scope: !14329)
!14332 = !DILocalVariable(name: "argsize", arg: 2, scope: !14329, file: !792, line: 949, type: !52)
!14333 = !DILocation(line: 949, column: 39, scope: !14329)
!14334 = !DILocation(line: 951, column: 29, scope: !14329)
!14335 = !DILocation(line: 951, column: 34, scope: !14329)
!14336 = !DILocation(line: 951, column: 10, scope: !14329)
!14337 = !DILocation(line: 951, column: 3, scope: !14329)
!14338 = distinct !DISubprogram(name: "quotearg_n_style", scope: !792, file: !792, line: 955, type: !14339, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14339 = !DISubroutineType(types: !14340)
!14340 = !{!7, !5, !772, !113}
!14341 = !DILocalVariable(name: "n", arg: 1, scope: !14338, file: !792, line: 955, type: !5)
!14342 = !DILocation(line: 955, column: 23, scope: !14338)
!14343 = !DILocalVariable(name: "s", arg: 2, scope: !14338, file: !792, line: 955, type: !772)
!14344 = !DILocation(line: 955, column: 45, scope: !14338)
!14345 = !DILocalVariable(name: "arg", arg: 3, scope: !14338, file: !792, line: 955, type: !113)
!14346 = !DILocation(line: 955, column: 60, scope: !14338)
!14347 = !DILocalVariable(name: "o", scope: !14338, file: !792, line: 957, type: !802)
!14348 = !DILocation(line: 957, column: 32, scope: !14338)
!14349 = !DILocation(line: 957, column: 64, scope: !14338)
!14350 = !DILocation(line: 957, column: 36, scope: !14338)
!14351 = !DILocation(line: 958, column: 30, scope: !14338)
!14352 = !DILocation(line: 958, column: 33, scope: !14338)
!14353 = !DILocation(line: 958, column: 10, scope: !14338)
!14354 = !DILocation(line: 958, column: 3, scope: !14338)
!14355 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !792, file: !792, line: 193, type: !14356, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14356 = !DISubroutineType(types: !14357)
!14357 = !{!791, !772}
!14358 = !DILocalVariable(name: "style", arg: 1, scope: !14355, file: !792, line: 193, type: !772)
!14359 = !DILocation(line: 193, column: 48, scope: !14355)
!14360 = !DILocalVariable(name: "o", scope: !14355, file: !792, line: 195, type: !791)
!14361 = !DILocation(line: 195, column: 26, scope: !14355)
!14362 = !DILocation(line: 196, column: 7, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14355, file: !792, line: 196, column: 7)
!14364 = !DILocation(line: 196, column: 13, scope: !14363)
!14365 = !DILocation(line: 196, column: 7, scope: !14355)
!14366 = !DILocation(line: 197, column: 5, scope: !14363)
!14367 = !DILocation(line: 198, column: 13, scope: !14355)
!14368 = !DILocation(line: 198, column: 5, scope: !14355)
!14369 = !DILocation(line: 198, column: 11, scope: !14355)
!14370 = !DILocation(line: 199, column: 3, scope: !14355)
!14371 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !792, file: !792, line: 962, type: !14372, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14372 = !DISubroutineType(types: !14373)
!14373 = !{!7, !5, !772, !113, !52}
!14374 = !DILocalVariable(name: "n", arg: 1, scope: !14371, file: !792, line: 962, type: !5)
!14375 = !DILocation(line: 962, column: 27, scope: !14371)
!14376 = !DILocalVariable(name: "s", arg: 2, scope: !14371, file: !792, line: 962, type: !772)
!14377 = !DILocation(line: 962, column: 49, scope: !14371)
!14378 = !DILocalVariable(name: "arg", arg: 3, scope: !14371, file: !792, line: 963, type: !113)
!14379 = !DILocation(line: 963, column: 35, scope: !14371)
!14380 = !DILocalVariable(name: "argsize", arg: 4, scope: !14371, file: !792, line: 963, type: !52)
!14381 = !DILocation(line: 963, column: 47, scope: !14371)
!14382 = !DILocalVariable(name: "o", scope: !14371, file: !792, line: 965, type: !802)
!14383 = !DILocation(line: 965, column: 32, scope: !14371)
!14384 = !DILocation(line: 965, column: 64, scope: !14371)
!14385 = !DILocation(line: 965, column: 36, scope: !14371)
!14386 = !DILocation(line: 966, column: 30, scope: !14371)
!14387 = !DILocation(line: 966, column: 33, scope: !14371)
!14388 = !DILocation(line: 966, column: 38, scope: !14371)
!14389 = !DILocation(line: 966, column: 10, scope: !14371)
!14390 = !DILocation(line: 966, column: 3, scope: !14371)
!14391 = distinct !DISubprogram(name: "quotearg_style", scope: !792, file: !792, line: 970, type: !14392, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14392 = !DISubroutineType(types: !14393)
!14393 = !{!7, !772, !113}
!14394 = !DILocalVariable(name: "s", arg: 1, scope: !14391, file: !792, line: 970, type: !772)
!14395 = !DILocation(line: 970, column: 36, scope: !14391)
!14396 = !DILocalVariable(name: "arg", arg: 2, scope: !14391, file: !792, line: 970, type: !113)
!14397 = !DILocation(line: 970, column: 51, scope: !14391)
!14398 = !DILocation(line: 972, column: 31, scope: !14391)
!14399 = !DILocation(line: 972, column: 34, scope: !14391)
!14400 = !DILocation(line: 972, column: 10, scope: !14391)
!14401 = !DILocation(line: 972, column: 3, scope: !14391)
!14402 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !792, file: !792, line: 976, type: !14403, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14403 = !DISubroutineType(types: !14404)
!14404 = !{!7, !772, !113, !52}
!14405 = !DILocalVariable(name: "s", arg: 1, scope: !14402, file: !792, line: 976, type: !772)
!14406 = !DILocation(line: 976, column: 40, scope: !14402)
!14407 = !DILocalVariable(name: "arg", arg: 2, scope: !14402, file: !792, line: 976, type: !113)
!14408 = !DILocation(line: 976, column: 55, scope: !14402)
!14409 = !DILocalVariable(name: "argsize", arg: 3, scope: !14402, file: !792, line: 976, type: !52)
!14410 = !DILocation(line: 976, column: 67, scope: !14402)
!14411 = !DILocation(line: 978, column: 35, scope: !14402)
!14412 = !DILocation(line: 978, column: 38, scope: !14402)
!14413 = !DILocation(line: 978, column: 43, scope: !14402)
!14414 = !DILocation(line: 978, column: 10, scope: !14402)
!14415 = !DILocation(line: 978, column: 3, scope: !14402)
!14416 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !792, file: !792, line: 982, type: !14417, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14417 = !DISubroutineType(types: !14418)
!14418 = !{!7, !113, !52, !8}
!14419 = !DILocalVariable(name: "arg", arg: 1, scope: !14416, file: !792, line: 982, type: !113)
!14420 = !DILocation(line: 982, column: 32, scope: !14416)
!14421 = !DILocalVariable(name: "argsize", arg: 2, scope: !14416, file: !792, line: 982, type: !52)
!14422 = !DILocation(line: 982, column: 44, scope: !14416)
!14423 = !DILocalVariable(name: "ch", arg: 3, scope: !14416, file: !792, line: 982, type: !8)
!14424 = !DILocation(line: 982, column: 58, scope: !14416)
!14425 = !DILocalVariable(name: "options", scope: !14416, file: !792, line: 984, type: !791)
!14426 = !DILocation(line: 984, column: 26, scope: !14416)
!14427 = !DILocation(line: 985, column: 13, scope: !14416)
!14428 = !DILocation(line: 986, column: 31, scope: !14416)
!14429 = !DILocation(line: 986, column: 3, scope: !14416)
!14430 = !DILocation(line: 987, column: 33, scope: !14416)
!14431 = !DILocation(line: 987, column: 38, scope: !14416)
!14432 = !DILocation(line: 987, column: 10, scope: !14416)
!14433 = !DILocation(line: 987, column: 3, scope: !14416)
!14434 = distinct !DISubprogram(name: "quotearg_char", scope: !792, file: !792, line: 991, type: !14435, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14435 = !DISubroutineType(types: !14436)
!14436 = !{!7, !113, !8}
!14437 = !DILocalVariable(name: "arg", arg: 1, scope: !14434, file: !792, line: 991, type: !113)
!14438 = !DILocation(line: 991, column: 28, scope: !14434)
!14439 = !DILocalVariable(name: "ch", arg: 2, scope: !14434, file: !792, line: 991, type: !8)
!14440 = !DILocation(line: 991, column: 38, scope: !14434)
!14441 = !DILocation(line: 993, column: 29, scope: !14434)
!14442 = !DILocation(line: 993, column: 44, scope: !14434)
!14443 = !DILocation(line: 993, column: 10, scope: !14434)
!14444 = !DILocation(line: 993, column: 3, scope: !14434)
!14445 = distinct !DISubprogram(name: "quotearg_colon", scope: !792, file: !792, line: 997, type: !10060, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14446 = !DILocalVariable(name: "arg", arg: 1, scope: !14445, file: !792, line: 997, type: !113)
!14447 = !DILocation(line: 997, column: 29, scope: !14445)
!14448 = !DILocation(line: 999, column: 25, scope: !14445)
!14449 = !DILocation(line: 999, column: 10, scope: !14445)
!14450 = !DILocation(line: 999, column: 3, scope: !14445)
!14451 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !792, file: !792, line: 1003, type: !9073, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14452 = !DILocalVariable(name: "arg", arg: 1, scope: !14451, file: !792, line: 1003, type: !113)
!14453 = !DILocation(line: 1003, column: 33, scope: !14451)
!14454 = !DILocalVariable(name: "argsize", arg: 2, scope: !14451, file: !792, line: 1003, type: !52)
!14455 = !DILocation(line: 1003, column: 45, scope: !14451)
!14456 = !DILocation(line: 1005, column: 29, scope: !14451)
!14457 = !DILocation(line: 1005, column: 34, scope: !14451)
!14458 = !DILocation(line: 1005, column: 10, scope: !14451)
!14459 = !DILocation(line: 1005, column: 3, scope: !14451)
!14460 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !792, file: !792, line: 1009, type: !14339, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14461 = !DILocalVariable(name: "n", arg: 1, scope: !14460, file: !792, line: 1009, type: !5)
!14462 = !DILocation(line: 1009, column: 29, scope: !14460)
!14463 = !DILocalVariable(name: "s", arg: 2, scope: !14460, file: !792, line: 1009, type: !772)
!14464 = !DILocation(line: 1009, column: 51, scope: !14460)
!14465 = !DILocalVariable(name: "arg", arg: 3, scope: !14460, file: !792, line: 1009, type: !113)
!14466 = !DILocation(line: 1009, column: 66, scope: !14460)
!14467 = !DILocalVariable(name: "options", scope: !14460, file: !792, line: 1011, type: !791)
!14468 = !DILocation(line: 1011, column: 26, scope: !14460)
!14469 = !DILocation(line: 1012, column: 41, scope: !14460)
!14470 = !DILocation(line: 1012, column: 13, scope: !14460)
!14471 = !DILocation(line: 1013, column: 3, scope: !14460)
!14472 = !DILocation(line: 1014, column: 30, scope: !14460)
!14473 = !DILocation(line: 1014, column: 33, scope: !14460)
!14474 = !DILocation(line: 1014, column: 10, scope: !14460)
!14475 = !DILocation(line: 1014, column: 3, scope: !14460)
!14476 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !792, file: !792, line: 1018, type: !14477, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14477 = !DISubroutineType(types: !14478)
!14478 = !{!7, !5, !113, !113, !113}
!14479 = !DILocalVariable(name: "n", arg: 1, scope: !14476, file: !792, line: 1018, type: !5)
!14480 = !DILocation(line: 1018, column: 24, scope: !14476)
!14481 = !DILocalVariable(name: "left_quote", arg: 2, scope: !14476, file: !792, line: 1018, type: !113)
!14482 = !DILocation(line: 1018, column: 39, scope: !14476)
!14483 = !DILocalVariable(name: "right_quote", arg: 3, scope: !14476, file: !792, line: 1019, type: !113)
!14484 = !DILocation(line: 1019, column: 32, scope: !14476)
!14485 = !DILocalVariable(name: "arg", arg: 4, scope: !14476, file: !792, line: 1019, type: !113)
!14486 = !DILocation(line: 1019, column: 57, scope: !14476)
!14487 = !DILocation(line: 1021, column: 33, scope: !14476)
!14488 = !DILocation(line: 1021, column: 36, scope: !14476)
!14489 = !DILocation(line: 1021, column: 48, scope: !14476)
!14490 = !DILocation(line: 1021, column: 61, scope: !14476)
!14491 = !DILocation(line: 1021, column: 10, scope: !14476)
!14492 = !DILocation(line: 1021, column: 3, scope: !14476)
!14493 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !792, file: !792, line: 1026, type: !14494, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14494 = !DISubroutineType(types: !14495)
!14495 = !{!7, !5, !113, !113, !113, !52}
!14496 = !DILocalVariable(name: "n", arg: 1, scope: !14493, file: !792, line: 1026, type: !5)
!14497 = !DILocation(line: 1026, column: 28, scope: !14493)
!14498 = !DILocalVariable(name: "left_quote", arg: 2, scope: !14493, file: !792, line: 1026, type: !113)
!14499 = !DILocation(line: 1026, column: 43, scope: !14493)
!14500 = !DILocalVariable(name: "right_quote", arg: 3, scope: !14493, file: !792, line: 1027, type: !113)
!14501 = !DILocation(line: 1027, column: 36, scope: !14493)
!14502 = !DILocalVariable(name: "arg", arg: 4, scope: !14493, file: !792, line: 1028, type: !113)
!14503 = !DILocation(line: 1028, column: 36, scope: !14493)
!14504 = !DILocalVariable(name: "argsize", arg: 5, scope: !14493, file: !792, line: 1028, type: !52)
!14505 = !DILocation(line: 1028, column: 48, scope: !14493)
!14506 = !DILocalVariable(name: "o", scope: !14493, file: !792, line: 1030, type: !791)
!14507 = !DILocation(line: 1030, column: 26, scope: !14493)
!14508 = !DILocation(line: 1030, column: 30, scope: !14493)
!14509 = !DILocation(line: 1031, column: 27, scope: !14493)
!14510 = !DILocation(line: 1031, column: 39, scope: !14493)
!14511 = !DILocation(line: 1031, column: 3, scope: !14493)
!14512 = !DILocation(line: 1032, column: 30, scope: !14493)
!14513 = !DILocation(line: 1032, column: 33, scope: !14493)
!14514 = !DILocation(line: 1032, column: 38, scope: !14493)
!14515 = !DILocation(line: 1032, column: 10, scope: !14493)
!14516 = !DILocation(line: 1032, column: 3, scope: !14493)
!14517 = distinct !DISubprogram(name: "quotearg_custom", scope: !792, file: !792, line: 1036, type: !14518, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14518 = !DISubroutineType(types: !14519)
!14519 = !{!7, !113, !113, !113}
!14520 = !DILocalVariable(name: "left_quote", arg: 1, scope: !14517, file: !792, line: 1036, type: !113)
!14521 = !DILocation(line: 1036, column: 30, scope: !14517)
!14522 = !DILocalVariable(name: "right_quote", arg: 2, scope: !14517, file: !792, line: 1036, type: !113)
!14523 = !DILocation(line: 1036, column: 54, scope: !14517)
!14524 = !DILocalVariable(name: "arg", arg: 3, scope: !14517, file: !792, line: 1037, type: !113)
!14525 = !DILocation(line: 1037, column: 30, scope: !14517)
!14526 = !DILocation(line: 1039, column: 32, scope: !14517)
!14527 = !DILocation(line: 1039, column: 44, scope: !14517)
!14528 = !DILocation(line: 1039, column: 57, scope: !14517)
!14529 = !DILocation(line: 1039, column: 10, scope: !14517)
!14530 = !DILocation(line: 1039, column: 3, scope: !14517)
!14531 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !792, file: !792, line: 1043, type: !14532, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14532 = !DISubroutineType(types: !14533)
!14533 = !{!7, !113, !113, !113, !52}
!14534 = !DILocalVariable(name: "left_quote", arg: 1, scope: !14531, file: !792, line: 1043, type: !113)
!14535 = !DILocation(line: 1043, column: 34, scope: !14531)
!14536 = !DILocalVariable(name: "right_quote", arg: 2, scope: !14531, file: !792, line: 1043, type: !113)
!14537 = !DILocation(line: 1043, column: 58, scope: !14531)
!14538 = !DILocalVariable(name: "arg", arg: 3, scope: !14531, file: !792, line: 1044, type: !113)
!14539 = !DILocation(line: 1044, column: 34, scope: !14531)
!14540 = !DILocalVariable(name: "argsize", arg: 4, scope: !14531, file: !792, line: 1044, type: !52)
!14541 = !DILocation(line: 1044, column: 46, scope: !14531)
!14542 = !DILocation(line: 1046, column: 36, scope: !14531)
!14543 = !DILocation(line: 1046, column: 48, scope: !14531)
!14544 = !DILocation(line: 1046, column: 61, scope: !14531)
!14545 = !DILocation(line: 1047, column: 33, scope: !14531)
!14546 = !DILocation(line: 1046, column: 10, scope: !14531)
!14547 = !DILocation(line: 1046, column: 3, scope: !14531)
!14548 = distinct !DISubprogram(name: "quote_n_mem", scope: !792, file: !792, line: 1061, type: !14549, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14549 = !DISubroutineType(types: !14550)
!14550 = !{!113, !5, !113, !52}
!14551 = !DILocalVariable(name: "n", arg: 1, scope: !14548, file: !792, line: 1061, type: !5)
!14552 = !DILocation(line: 1061, column: 18, scope: !14548)
!14553 = !DILocalVariable(name: "arg", arg: 2, scope: !14548, file: !792, line: 1061, type: !113)
!14554 = !DILocation(line: 1061, column: 33, scope: !14548)
!14555 = !DILocalVariable(name: "argsize", arg: 3, scope: !14548, file: !792, line: 1061, type: !52)
!14556 = !DILocation(line: 1061, column: 45, scope: !14548)
!14557 = !DILocation(line: 1063, column: 30, scope: !14548)
!14558 = !DILocation(line: 1063, column: 33, scope: !14548)
!14559 = !DILocation(line: 1063, column: 38, scope: !14548)
!14560 = !DILocation(line: 1063, column: 10, scope: !14548)
!14561 = !DILocation(line: 1063, column: 3, scope: !14548)
!14562 = distinct !DISubprogram(name: "quote_mem", scope: !792, file: !792, line: 1067, type: !14563, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14563 = !DISubroutineType(types: !14564)
!14564 = !{!113, !113, !52}
!14565 = !DILocalVariable(name: "arg", arg: 1, scope: !14562, file: !792, line: 1067, type: !113)
!14566 = !DILocation(line: 1067, column: 24, scope: !14562)
!14567 = !DILocalVariable(name: "argsize", arg: 2, scope: !14562, file: !792, line: 1067, type: !52)
!14568 = !DILocation(line: 1067, column: 36, scope: !14562)
!14569 = !DILocation(line: 1069, column: 26, scope: !14562)
!14570 = !DILocation(line: 1069, column: 31, scope: !14562)
!14571 = !DILocation(line: 1069, column: 10, scope: !14562)
!14572 = !DILocation(line: 1069, column: 3, scope: !14562)
!14573 = distinct !DISubprogram(name: "quote_n", scope: !792, file: !792, line: 1073, type: !14574, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14574 = !DISubroutineType(types: !14575)
!14575 = !{!113, !5, !113}
!14576 = !DILocalVariable(name: "n", arg: 1, scope: !14573, file: !792, line: 1073, type: !5)
!14577 = !DILocation(line: 1073, column: 14, scope: !14573)
!14578 = !DILocalVariable(name: "arg", arg: 2, scope: !14573, file: !792, line: 1073, type: !113)
!14579 = !DILocation(line: 1073, column: 29, scope: !14573)
!14580 = !DILocation(line: 1075, column: 23, scope: !14573)
!14581 = !DILocation(line: 1075, column: 26, scope: !14573)
!14582 = !DILocation(line: 1075, column: 10, scope: !14573)
!14583 = !DILocation(line: 1075, column: 3, scope: !14573)
!14584 = distinct !DISubprogram(name: "quote", scope: !792, file: !792, line: 1079, type: !14585, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !769, retainedNodes: !213)
!14585 = !DISubroutineType(types: !14586)
!14586 = !{!113, !113}
!14587 = !DILocalVariable(name: "arg", arg: 1, scope: !14584, file: !792, line: 1079, type: !113)
!14588 = !DILocation(line: 1079, column: 20, scope: !14584)
!14589 = !DILocation(line: 1081, column: 22, scope: !14584)
!14590 = !DILocation(line: 1081, column: 10, scope: !14584)
!14591 = !DILocation(line: 1081, column: 3, scope: !14584)
!14592 = distinct !DISubprogram(name: "renameatu", scope: !14593, file: !14593, line: 77, type: !14594, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1381, retainedNodes: !213)
!14593 = !DIFile(filename: "lib/renameatu.c", directory: "/home/mohamad/clone/coreutils")
!14594 = !DISubroutineType(types: !14595)
!14595 = !{!5, !5, !113, !5, !113, !67}
!14596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !14597)
!14597 = !{!14598, !14599, !14600, !14601, !14602, !14603, !14604, !14605, !14606, !14607, !14608, !14609, !14614, !14615, !14616}
!14598 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !14596, file: !336, line: 48, baseType: !260, size: 64)
!14599 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !14596, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!14600 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !14596, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!14601 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !14596, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!14602 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !14596, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!14603 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !14596, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!14604 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !14596, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!14605 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !14596, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!14606 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !14596, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!14607 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !14596, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!14608 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !14596, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!14609 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !14596, file: !336, line: 91, baseType: !14610, size: 128, offset: 576)
!14610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !14611)
!14611 = !{!14612, !14613}
!14612 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !14610, file: !355, line: 122, baseType: !358, size: 64)
!14613 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !14610, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!14614 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !14596, file: !336, line: 92, baseType: !14610, size: 128, offset: 704)
!14615 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !14596, file: !336, line: 93, baseType: !14610, size: 128, offset: 832)
!14616 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !14596, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!14617 = !DILocalVariable(name: "fd1", arg: 1, scope: !14592, file: !14593, line: 77, type: !5)
!14618 = !DILocation(line: 77, column: 16, scope: !14592)
!14619 = !DILocalVariable(name: "src", arg: 2, scope: !14592, file: !14593, line: 77, type: !113)
!14620 = !DILocation(line: 77, column: 33, scope: !14592)
!14621 = !DILocalVariable(name: "fd2", arg: 3, scope: !14592, file: !14593, line: 77, type: !5)
!14622 = !DILocation(line: 77, column: 42, scope: !14592)
!14623 = !DILocalVariable(name: "dst", arg: 4, scope: !14592, file: !14593, line: 77, type: !113)
!14624 = !DILocation(line: 77, column: 59, scope: !14592)
!14625 = !DILocalVariable(name: "flags", arg: 5, scope: !14592, file: !14593, line: 78, type: !67)
!14626 = !DILocation(line: 78, column: 25, scope: !14592)
!14627 = !DILocalVariable(name: "ret_val", scope: !14592, file: !14593, line: 80, type: !5)
!14628 = !DILocation(line: 80, column: 7, scope: !14592)
!14629 = !DILocalVariable(name: "err", scope: !14592, file: !14593, line: 81, type: !5)
!14630 = !DILocation(line: 81, column: 7, scope: !14592)
!14631 = !DILocation(line: 87, column: 37, scope: !14592)
!14632 = !DILocation(line: 87, column: 42, scope: !14592)
!14633 = !DILocation(line: 87, column: 47, scope: !14592)
!14634 = !DILocation(line: 87, column: 52, scope: !14592)
!14635 = !DILocation(line: 87, column: 57, scope: !14592)
!14636 = !DILocation(line: 87, column: 13, scope: !14592)
!14637 = !DILocation(line: 87, column: 11, scope: !14592)
!14638 = !DILocation(line: 88, column: 9, scope: !14592)
!14639 = !DILocation(line: 88, column: 7, scope: !14592)
!14640 = !DILocation(line: 99, column: 10, scope: !14641)
!14641 = distinct !DILexicalBlock(scope: !14592, file: !14593, line: 99, column: 7)
!14642 = !DILocation(line: 99, column: 18, scope: !14641)
!14643 = !DILocation(line: 99, column: 22, scope: !14641)
!14644 = !DILocation(line: 99, column: 26, scope: !14641)
!14645 = !DILocation(line: 99, column: 30, scope: !14641)
!14646 = !DILocation(line: 99, column: 40, scope: !14641)
!14647 = !DILocation(line: 99, column: 43, scope: !14641)
!14648 = !DILocation(line: 99, column: 47, scope: !14641)
!14649 = !DILocation(line: 99, column: 57, scope: !14641)
!14650 = !DILocation(line: 99, column: 60, scope: !14641)
!14651 = !DILocation(line: 99, column: 64, scope: !14641)
!14652 = !DILocation(line: 99, column: 7, scope: !14592)
!14653 = !DILocation(line: 100, column: 12, scope: !14641)
!14654 = !DILocation(line: 100, column: 5, scope: !14641)
!14655 = !DILocalVariable(name: "src_len", scope: !14656, file: !14593, line: 104, type: !52)
!14656 = distinct !DILexicalBlock(scope: !14592, file: !14593, line: 103, column: 3)
!14657 = !DILocation(line: 104, column: 10, scope: !14656)
!14658 = !DILocalVariable(name: "dst_len", scope: !14656, file: !14593, line: 105, type: !52)
!14659 = !DILocation(line: 105, column: 10, scope: !14656)
!14660 = !DILocalVariable(name: "src_temp", scope: !14656, file: !14593, line: 106, type: !7)
!14661 = !DILocation(line: 106, column: 9, scope: !14656)
!14662 = !DILocation(line: 106, column: 29, scope: !14656)
!14663 = !DILocalVariable(name: "dst_temp", scope: !14656, file: !14593, line: 107, type: !7)
!14664 = !DILocation(line: 107, column: 9, scope: !14656)
!14665 = !DILocation(line: 107, column: 29, scope: !14656)
!14666 = !DILocalVariable(name: "src_slash", scope: !14656, file: !14593, line: 108, type: !139)
!14667 = !DILocation(line: 108, column: 8, scope: !14656)
!14668 = !DILocalVariable(name: "dst_slash", scope: !14656, file: !14593, line: 109, type: !139)
!14669 = !DILocation(line: 109, column: 8, scope: !14656)
!14670 = !DILocalVariable(name: "rename_errno", scope: !14656, file: !14593, line: 110, type: !5)
!14671 = !DILocation(line: 110, column: 7, scope: !14656)
!14672 = !DILocalVariable(name: "src_st", scope: !14656, file: !14593, line: 111, type: !14596)
!14673 = !DILocation(line: 111, column: 15, scope: !14656)
!14674 = !DILocalVariable(name: "dst_st", scope: !14656, file: !14593, line: 112, type: !14596)
!14675 = !DILocation(line: 112, column: 15, scope: !14656)
!14676 = !DILocalVariable(name: "dst_found_nonexistent", scope: !14656, file: !14593, line: 113, type: !139)
!14677 = !DILocation(line: 113, column: 8, scope: !14656)
!14678 = !DILocation(line: 115, column: 7, scope: !14679)
!14679 = distinct !DILexicalBlock(scope: !14656, file: !14593, line: 115, column: 7)
!14680 = !DILocation(line: 115, column: 13, scope: !14679)
!14681 = !DILocation(line: 115, column: 7, scope: !14656)
!14682 = !DILocation(line: 118, column: 11, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !14684, file: !14593, line: 118, column: 11)
!14684 = distinct !DILexicalBlock(scope: !14679, file: !14593, line: 116, column: 5)
!14685 = !DILocation(line: 118, column: 17, scope: !14683)
!14686 = !DILocation(line: 118, column: 11, scope: !14684)
!14687 = !DILocation(line: 119, column: 16, scope: !14683)
!14688 = !DILocation(line: 119, column: 9, scope: !14683)
!14689 = !DILocation(line: 124, column: 24, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14691, file: !14593, line: 124, column: 15)
!14691 = distinct !DILexicalBlock(scope: !14683, file: !14593, line: 121, column: 9)
!14692 = !DILocation(line: 124, column: 29, scope: !14690)
!14693 = !DILocation(line: 124, column: 15, scope: !14690)
!14694 = !DILocation(line: 124, column: 43, scope: !14690)
!14695 = !DILocation(line: 124, column: 48, scope: !14690)
!14696 = !DILocation(line: 124, column: 51, scope: !14690)
!14697 = !DILocation(line: 124, column: 57, scope: !14690)
!14698 = !DILocation(line: 124, column: 15, scope: !14691)
!14699 = !DILocation(line: 125, column: 20, scope: !14690)
!14700 = !DILocation(line: 125, column: 13, scope: !14690)
!14701 = !DILocation(line: 126, column: 15, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14691, file: !14593, line: 126, column: 15)
!14703 = !DILocation(line: 126, column: 21, scope: !14702)
!14704 = !DILocation(line: 126, column: 15, scope: !14691)
!14705 = !DILocation(line: 127, column: 13, scope: !14702)
!14706 = !DILocation(line: 128, column: 33, scope: !14691)
!14707 = !DILocation(line: 130, column: 5, scope: !14684)
!14708 = !DILocation(line: 133, column: 21, scope: !14656)
!14709 = !DILocation(line: 133, column: 13, scope: !14656)
!14710 = !DILocation(line: 133, column: 11, scope: !14656)
!14711 = !DILocation(line: 134, column: 21, scope: !14656)
!14712 = !DILocation(line: 134, column: 13, scope: !14656)
!14713 = !DILocation(line: 134, column: 11, scope: !14656)
!14714 = !DILocation(line: 135, column: 8, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14656, file: !14593, line: 135, column: 7)
!14716 = !DILocation(line: 135, column: 16, scope: !14715)
!14717 = !DILocation(line: 135, column: 20, scope: !14715)
!14718 = !DILocation(line: 135, column: 7, scope: !14656)
!14719 = !DILocation(line: 136, column: 22, scope: !14715)
!14720 = !DILocation(line: 136, column: 27, scope: !14715)
!14721 = !DILocation(line: 136, column: 32, scope: !14715)
!14722 = !DILocation(line: 136, column: 37, scope: !14715)
!14723 = !DILocation(line: 136, column: 12, scope: !14715)
!14724 = !DILocation(line: 136, column: 5, scope: !14715)
!14725 = !DILocation(line: 138, column: 15, scope: !14656)
!14726 = !DILocation(line: 138, column: 19, scope: !14656)
!14727 = !DILocation(line: 138, column: 27, scope: !14656)
!14728 = !DILocation(line: 138, column: 32, scope: !14656)
!14729 = !DILocation(line: 138, column: 13, scope: !14656)
!14730 = !DILocation(line: 139, column: 15, scope: !14656)
!14731 = !DILocation(line: 139, column: 19, scope: !14656)
!14732 = !DILocation(line: 139, column: 27, scope: !14656)
!14733 = !DILocation(line: 139, column: 32, scope: !14656)
!14734 = !DILocation(line: 139, column: 13, scope: !14656)
!14735 = !DILocation(line: 140, column: 8, scope: !14736)
!14736 = distinct !DILexicalBlock(scope: !14656, file: !14593, line: 140, column: 7)
!14737 = !DILocation(line: 140, column: 18, scope: !14736)
!14738 = !DILocation(line: 140, column: 22, scope: !14736)
!14739 = !DILocation(line: 140, column: 7, scope: !14656)
!14740 = !DILocation(line: 141, column: 22, scope: !14736)
!14741 = !DILocation(line: 141, column: 27, scope: !14736)
!14742 = !DILocation(line: 141, column: 32, scope: !14736)
!14743 = !DILocation(line: 141, column: 37, scope: !14736)
!14744 = !DILocation(line: 141, column: 12, scope: !14736)
!14745 = !DILocation(line: 141, column: 5, scope: !14736)
!14746 = !DILocation(line: 147, column: 16, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14656, file: !14593, line: 147, column: 7)
!14748 = !DILocation(line: 147, column: 21, scope: !14747)
!14749 = !DILocation(line: 147, column: 7, scope: !14747)
!14750 = !DILocation(line: 147, column: 7, scope: !14656)
!14751 = !DILocation(line: 148, column: 5, scope: !14747)
!14752 = !DILocation(line: 149, column: 7, scope: !14753)
!14753 = distinct !DILexicalBlock(scope: !14656, file: !14593, line: 149, column: 7)
!14754 = !DILocation(line: 149, column: 7, scope: !14656)
!14755 = !DILocation(line: 151, column: 12, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14757, file: !14593, line: 151, column: 11)
!14757 = distinct !DILexicalBlock(scope: !14753, file: !14593, line: 150, column: 5)
!14758 = !DILocation(line: 151, column: 11, scope: !14757)
!14759 = !DILocation(line: 152, column: 16, scope: !14756)
!14760 = !DILocation(line: 152, column: 9, scope: !14756)
!14761 = !DILocation(line: 153, column: 5, scope: !14757)
!14762 = !DILocation(line: 154, column: 21, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14753, file: !14593, line: 154, column: 12)
!14764 = !DILocation(line: 154, column: 26, scope: !14763)
!14765 = !DILocation(line: 154, column: 12, scope: !14763)
!14766 = !DILocation(line: 154, column: 12, scope: !14753)
!14767 = !DILocation(line: 156, column: 11, scope: !14768)
!14768 = distinct !DILexicalBlock(scope: !14769, file: !14593, line: 156, column: 11)
!14769 = distinct !DILexicalBlock(scope: !14763, file: !14593, line: 155, column: 5)
!14770 = !DILocation(line: 156, column: 17, scope: !14768)
!14771 = !DILocation(line: 156, column: 27, scope: !14768)
!14772 = !DILocation(line: 156, column: 31, scope: !14768)
!14773 = !DILocation(line: 156, column: 11, scope: !14769)
!14774 = !DILocation(line: 157, column: 9, scope: !14768)
!14775 = !DILocation(line: 158, column: 5, scope: !14769)
!14776 = !DILocation(line: 159, column: 13, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14763, file: !14593, line: 159, column: 12)
!14778 = !DILocation(line: 159, column: 12, scope: !14763)
!14779 = !DILocation(line: 160, column: 12, scope: !14777)
!14780 = !DILocation(line: 160, column: 5, scope: !14777)
!14781 = !DILocation(line: 161, column: 13, scope: !14782)
!14782 = distinct !DILexicalBlock(scope: !14777, file: !14593, line: 161, column: 12)
!14783 = !DILocation(line: 161, column: 12, scope: !14777)
!14784 = !DILocation(line: 162, column: 12, scope: !14782)
!14785 = !DILocation(line: 162, column: 5, scope: !14782)
!14786 = !DILocation(line: 214, column: 23, scope: !14656)
!14787 = !DILocation(line: 214, column: 28, scope: !14656)
!14788 = !DILocation(line: 214, column: 38, scope: !14656)
!14789 = !DILocation(line: 214, column: 43, scope: !14656)
!14790 = !DILocation(line: 214, column: 13, scope: !14656)
!14791 = !DILocation(line: 214, column: 11, scope: !14656)
!14792 = !DILocation(line: 215, column: 18, scope: !14656)
!14793 = !DILocation(line: 215, column: 16, scope: !14656)
!14794 = !DILocation(line: 216, column: 3, scope: !14656)
!14795 = !DILabel(scope: !14656, name: "out", file: !14593, line: 217)
!14796 = !DILocation(line: 217, column: 2, scope: !14656)
!14797 = !DILocation(line: 218, column: 7, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14656, file: !14593, line: 218, column: 7)
!14799 = !DILocation(line: 218, column: 19, scope: !14798)
!14800 = !DILocation(line: 218, column: 16, scope: !14798)
!14801 = !DILocation(line: 218, column: 7, scope: !14656)
!14802 = !DILocation(line: 219, column: 11, scope: !14798)
!14803 = !DILocation(line: 219, column: 5, scope: !14798)
!14804 = !DILocation(line: 220, column: 7, scope: !14805)
!14805 = distinct !DILexicalBlock(scope: !14656, file: !14593, line: 220, column: 7)
!14806 = !DILocation(line: 220, column: 19, scope: !14805)
!14807 = !DILocation(line: 220, column: 16, scope: !14805)
!14808 = !DILocation(line: 220, column: 7, scope: !14656)
!14809 = !DILocation(line: 221, column: 11, scope: !14805)
!14810 = !DILocation(line: 221, column: 5, scope: !14805)
!14811 = !DILocation(line: 222, column: 11, scope: !14656)
!14812 = !DILocation(line: 222, column: 3, scope: !14656)
!14813 = !DILocation(line: 222, column: 9, scope: !14656)
!14814 = !DILocation(line: 223, column: 10, scope: !14656)
!14815 = !DILocation(line: 223, column: 3, scope: !14656)
!14816 = !DILocation(line: 233, column: 1, scope: !14592)
!14817 = distinct !DISubprogram(name: "errno_fail", scope: !14593, file: !14593, line: 33, type: !14818, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1381, retainedNodes: !213)
!14818 = !DISubroutineType(types: !14819)
!14819 = !{!5, !5}
!14820 = !DILocalVariable(name: "e", arg: 1, scope: !14817, file: !14593, line: 33, type: !5)
!14821 = !DILocation(line: 33, column: 17, scope: !14817)
!14822 = !DILocation(line: 35, column: 11, scope: !14817)
!14823 = !DILocation(line: 35, column: 3, scope: !14817)
!14824 = !DILocation(line: 35, column: 9, scope: !14817)
!14825 = !DILocation(line: 36, column: 3, scope: !14817)
!14826 = distinct !DISubprogram(name: "get_root_dev_ino", scope: !14827, file: !14827, line: 29, type: !14828, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1384, retainedNodes: !213)
!14827 = !DIFile(filename: "lib/root-dev-ino.c", directory: "/home/mohamad/clone/coreutils")
!14828 = !DISubroutineType(types: !14829)
!14829 = !{!14830, !14830}
!14830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14831, size: 64)
!14831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !253, line: 7, size: 128, elements: !14832)
!14832 = !{!14833, !14834}
!14833 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !14831, file: !253, line: 9, baseType: !256, size: 64)
!14834 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !14831, file: !253, line: 10, baseType: !259, size: 64, offset: 64)
!14835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !14836)
!14836 = !{!14837, !14838, !14839, !14840, !14841, !14842, !14843, !14844, !14845, !14846, !14847, !14848, !14853, !14854, !14855}
!14837 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !14835, file: !336, line: 48, baseType: !260, size: 64)
!14838 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !14835, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!14839 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !14835, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!14840 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !14835, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!14841 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !14835, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!14842 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !14835, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!14843 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !14835, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!14844 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !14835, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!14845 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !14835, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!14846 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !14835, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!14847 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !14835, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!14848 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !14835, file: !336, line: 91, baseType: !14849, size: 128, offset: 576)
!14849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !14850)
!14850 = !{!14851, !14852}
!14851 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !14849, file: !355, line: 122, baseType: !358, size: 64)
!14852 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !14849, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!14853 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !14835, file: !336, line: 92, baseType: !14849, size: 128, offset: 704)
!14854 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !14835, file: !336, line: 93, baseType: !14849, size: 128, offset: 832)
!14855 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !14835, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!14856 = !DILocalVariable(name: "root_d_i", arg: 1, scope: !14826, file: !14827, line: 29, type: !14830)
!14857 = !DILocation(line: 29, column: 35, scope: !14826)
!14858 = !DILocalVariable(name: "statbuf", scope: !14826, file: !14827, line: 31, type: !14835)
!14859 = !DILocation(line: 31, column: 15, scope: !14826)
!14860 = !DILocation(line: 32, column: 7, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14826, file: !14827, line: 32, column: 7)
!14862 = !DILocation(line: 32, column: 7, scope: !14826)
!14863 = !DILocation(line: 33, column: 5, scope: !14861)
!14864 = !DILocation(line: 34, column: 30, scope: !14826)
!14865 = !DILocation(line: 34, column: 3, scope: !14826)
!14866 = !DILocation(line: 34, column: 13, scope: !14826)
!14867 = !DILocation(line: 34, column: 20, scope: !14826)
!14868 = !DILocation(line: 35, column: 30, scope: !14826)
!14869 = !DILocation(line: 35, column: 3, scope: !14826)
!14870 = !DILocation(line: 35, column: 13, scope: !14826)
!14871 = !DILocation(line: 35, column: 20, scope: !14826)
!14872 = !DILocation(line: 36, column: 10, scope: !14826)
!14873 = !DILocation(line: 36, column: 3, scope: !14826)
!14874 = !DILocation(line: 37, column: 1, scope: !14826)
!14875 = distinct !DISubprogram(name: "safe_write", scope: !14876, file: !14876, line: 56, type: !10828, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !213)
!14876 = !DIFile(filename: "./lib/safe-read.c", directory: "/home/mohamad/clone/coreutils")
!14877 = !DILocalVariable(name: "fd", arg: 1, scope: !14875, file: !14876, line: 56, type: !5)
!14878 = !DILocation(line: 56, column: 14, scope: !14875)
!14879 = !DILocalVariable(name: "buf", arg: 2, scope: !14875, file: !14876, line: 56, type: !553)
!14880 = !DILocation(line: 56, column: 30, scope: !14875)
!14881 = !DILocalVariable(name: "count", arg: 3, scope: !14875, file: !14876, line: 56, type: !52)
!14882 = !DILocation(line: 56, column: 42, scope: !14875)
!14883 = !DILocation(line: 58, column: 3, scope: !14875)
!14884 = !DILocalVariable(name: "result", scope: !14885, file: !14876, line: 60, type: !529)
!14885 = distinct !DILexicalBlock(scope: !14886, file: !14876, line: 59, column: 5)
!14886 = distinct !DILexicalBlock(scope: !14887, file: !14876, line: 58, column: 3)
!14887 = distinct !DILexicalBlock(scope: !14875, file: !14876, line: 58, column: 3)
!14888 = !DILocation(line: 60, column: 15, scope: !14885)
!14889 = !DILocation(line: 60, column: 28, scope: !14885)
!14890 = !DILocation(line: 60, column: 32, scope: !14885)
!14891 = !DILocation(line: 60, column: 37, scope: !14885)
!14892 = !DILocation(line: 60, column: 24, scope: !14885)
!14893 = !DILocation(line: 62, column: 16, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14885, file: !14876, line: 62, column: 11)
!14895 = !DILocation(line: 62, column: 13, scope: !14894)
!14896 = !DILocation(line: 62, column: 11, scope: !14885)
!14897 = !DILocation(line: 63, column: 16, scope: !14894)
!14898 = !DILocation(line: 63, column: 9, scope: !14894)
!14899 = !DILocation(line: 64, column: 16, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14894, file: !14876, line: 64, column: 16)
!14901 = !DILocation(line: 64, column: 16, scope: !14894)
!14902 = !DILocation(line: 65, column: 9, scope: !14900)
!14903 = distinct !{!14903, !14904, !14905}
!14904 = !DILocation(line: 58, column: 3, scope: !14887)
!14905 = !DILocation(line: 70, column: 5, scope: !14887)
!14906 = !DILocation(line: 66, column: 16, scope: !14907)
!14907 = distinct !DILexicalBlock(scope: !14900, file: !14876, line: 66, column: 16)
!14908 = !DILocation(line: 66, column: 22, scope: !14907)
!14909 = !DILocation(line: 66, column: 32, scope: !14907)
!14910 = !DILocation(line: 66, column: 53, scope: !14907)
!14911 = !DILocation(line: 66, column: 51, scope: !14907)
!14912 = !DILocation(line: 66, column: 16, scope: !14900)
!14913 = !DILocation(line: 67, column: 15, scope: !14907)
!14914 = !DILocation(line: 67, column: 9, scope: !14907)
!14915 = !DILocation(line: 69, column: 16, scope: !14907)
!14916 = !DILocation(line: 69, column: 9, scope: !14907)
!14917 = !DILocation(line: 58, column: 3, scope: !14886)
!14918 = !DILocation(line: 71, column: 1, scope: !14875)
!14919 = distinct !DISubprogram(name: "same_name", scope: !14920, file: !14920, line: 61, type: !14921, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1390, retainedNodes: !213)
!14920 = !DIFile(filename: "lib/same.c", directory: "/home/mohamad/clone/coreutils")
!14921 = !DISubroutineType(types: !14922)
!14922 = !{!139, !113, !113}
!14923 = !DILocalVariable(name: "source", arg: 1, scope: !14919, file: !14920, line: 61, type: !113)
!14924 = !DILocation(line: 61, column: 24, scope: !14919)
!14925 = !DILocalVariable(name: "dest", arg: 2, scope: !14919, file: !14920, line: 61, type: !113)
!14926 = !DILocation(line: 61, column: 44, scope: !14919)
!14927 = !DILocation(line: 63, column: 33, scope: !14919)
!14928 = !DILocation(line: 63, column: 51, scope: !14919)
!14929 = !DILocation(line: 63, column: 10, scope: !14919)
!14930 = !DILocation(line: 63, column: 3, scope: !14919)
!14931 = distinct !DISubprogram(name: "same_nameat", scope: !14920, file: !14920, line: 70, type: !14932, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1390, retainedNodes: !213)
!14932 = !DISubroutineType(types: !14933)
!14933 = !{!139, !5, !113, !5, !113}
!14934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !14935)
!14935 = !{!14936, !14937, !14938, !14939, !14940, !14941, !14942, !14943, !14944, !14945, !14946, !14947, !14952, !14953, !14954}
!14936 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !14934, file: !336, line: 48, baseType: !260, size: 64)
!14937 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !14934, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!14938 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !14934, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!14939 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !14934, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!14940 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !14934, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!14941 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !14934, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!14942 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !14934, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!14943 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !14934, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!14944 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !14934, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!14945 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !14934, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!14946 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !14934, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!14947 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !14934, file: !336, line: 91, baseType: !14948, size: 128, offset: 576)
!14948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !14949)
!14949 = !{!14950, !14951}
!14950 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !14948, file: !355, line: 122, baseType: !358, size: 64)
!14951 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !14948, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!14952 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !14934, file: !336, line: 92, baseType: !14948, size: 128, offset: 704)
!14953 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !14934, file: !336, line: 93, baseType: !14948, size: 128, offset: 832)
!14954 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !14934, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!14955 = !DILocalVariable(name: "source_dfd", arg: 1, scope: !14931, file: !14920, line: 70, type: !5)
!14956 = !DILocation(line: 70, column: 18, scope: !14931)
!14957 = !DILocalVariable(name: "source", arg: 2, scope: !14931, file: !14920, line: 70, type: !113)
!14958 = !DILocation(line: 70, column: 42, scope: !14931)
!14959 = !DILocalVariable(name: "dest_dfd", arg: 3, scope: !14931, file: !14920, line: 71, type: !5)
!14960 = !DILocation(line: 71, column: 18, scope: !14931)
!14961 = !DILocalVariable(name: "dest", arg: 4, scope: !14931, file: !14920, line: 71, type: !113)
!14962 = !DILocation(line: 71, column: 40, scope: !14931)
!14963 = !DILocalVariable(name: "source_basename", scope: !14931, file: !14920, line: 74, type: !113)
!14964 = !DILocation(line: 74, column: 15, scope: !14931)
!14965 = !DILocation(line: 74, column: 49, scope: !14931)
!14966 = !DILocation(line: 74, column: 33, scope: !14931)
!14967 = !DILocalVariable(name: "dest_basename", scope: !14931, file: !14920, line: 75, type: !113)
!14968 = !DILocation(line: 75, column: 15, scope: !14931)
!14969 = !DILocation(line: 75, column: 47, scope: !14931)
!14970 = !DILocation(line: 75, column: 31, scope: !14931)
!14971 = !DILocalVariable(name: "source_baselen", scope: !14931, file: !14920, line: 76, type: !52)
!14972 = !DILocation(line: 76, column: 10, scope: !14931)
!14973 = !DILocation(line: 76, column: 37, scope: !14931)
!14974 = !DILocation(line: 76, column: 27, scope: !14931)
!14975 = !DILocalVariable(name: "dest_baselen", scope: !14931, file: !14920, line: 77, type: !52)
!14976 = !DILocation(line: 77, column: 10, scope: !14931)
!14977 = !DILocation(line: 77, column: 35, scope: !14931)
!14978 = !DILocation(line: 77, column: 25, scope: !14931)
!14979 = !DILocalVariable(name: "identical_basenames", scope: !14931, file: !14920, line: 78, type: !139)
!14980 = !DILocation(line: 78, column: 8, scope: !14931)
!14981 = !DILocation(line: 79, column: 6, scope: !14931)
!14982 = !DILocation(line: 79, column: 24, scope: !14931)
!14983 = !DILocation(line: 79, column: 21, scope: !14931)
!14984 = !DILocation(line: 80, column: 6, scope: !14931)
!14985 = !DILocation(line: 80, column: 17, scope: !14931)
!14986 = !DILocation(line: 80, column: 34, scope: !14931)
!14987 = !DILocation(line: 80, column: 49, scope: !14931)
!14988 = !DILocation(line: 80, column: 9, scope: !14931)
!14989 = !DILocation(line: 80, column: 63, scope: !14931)
!14990 = !DILocation(line: 0, scope: !14931)
!14991 = !DILocalVariable(name: "compare_dirs", scope: !14931, file: !14920, line: 81, type: !139)
!14992 = !DILocation(line: 81, column: 8, scope: !14931)
!14993 = !DILocation(line: 81, column: 23, scope: !14931)
!14994 = !DILocalVariable(name: "same", scope: !14931, file: !14920, line: 82, type: !139)
!14995 = !DILocation(line: 82, column: 8, scope: !14931)
!14996 = !DILocation(line: 92, column: 7, scope: !14997)
!14997 = distinct !DILexicalBlock(scope: !14931, file: !14920, line: 92, column: 7)
!14998 = !DILocation(line: 92, column: 7, scope: !14931)
!14999 = !DILocalVariable(name: "source_dir_stats", scope: !15000, file: !14920, line: 94, type: !14934)
!15000 = distinct !DILexicalBlock(scope: !14997, file: !14920, line: 93, column: 5)
!15001 = !DILocation(line: 94, column: 19, scope: !15000)
!15002 = !DILocalVariable(name: "dest_dir_stats", scope: !15000, file: !14920, line: 95, type: !14934)
!15003 = !DILocation(line: 95, column: 19, scope: !15000)
!15004 = !DILocalVariable(name: "source_dirname", scope: !15000, file: !14920, line: 98, type: !7)
!15005 = !DILocation(line: 98, column: 13, scope: !15000)
!15006 = !DILocation(line: 98, column: 40, scope: !15000)
!15007 = !DILocation(line: 98, column: 30, scope: !15000)
!15008 = !DILocalVariable(name: "flags", scope: !15000, file: !14920, line: 99, type: !5)
!15009 = !DILocation(line: 99, column: 11, scope: !15000)
!15010 = !DILocation(line: 100, column: 20, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !15000, file: !14920, line: 100, column: 11)
!15012 = !DILocation(line: 100, column: 32, scope: !15011)
!15013 = !DILocation(line: 100, column: 67, scope: !15011)
!15014 = !DILocation(line: 100, column: 11, scope: !15011)
!15015 = !DILocation(line: 100, column: 74, scope: !15011)
!15016 = !DILocation(line: 100, column: 11, scope: !15000)
!15017 = !DILocation(line: 103, column: 21, scope: !15018)
!15018 = distinct !DILexicalBlock(scope: !15011, file: !14920, line: 101, column: 9)
!15019 = !DILocation(line: 103, column: 34, scope: !15018)
!15020 = !DILocation(line: 103, column: 11, scope: !15018)
!15021 = !DILocation(line: 104, column: 9, scope: !15018)
!15022 = !DILocation(line: 105, column: 13, scope: !15000)
!15023 = !DILocation(line: 105, column: 7, scope: !15000)
!15024 = !DILocalVariable(name: "dest_dirname", scope: !15000, file: !14920, line: 107, type: !7)
!15025 = !DILocation(line: 107, column: 13, scope: !15000)
!15026 = !DILocation(line: 107, column: 38, scope: !15000)
!15027 = !DILocation(line: 107, column: 28, scope: !15000)
!15028 = !DILocation(line: 137, column: 20, scope: !15029)
!15029 = distinct !DILexicalBlock(scope: !15000, file: !14920, line: 137, column: 11)
!15030 = !DILocation(line: 137, column: 30, scope: !15029)
!15031 = !DILocation(line: 137, column: 61, scope: !15029)
!15032 = !DILocation(line: 137, column: 11, scope: !15029)
!15033 = !DILocation(line: 137, column: 68, scope: !15029)
!15034 = !DILocation(line: 137, column: 11, scope: !15000)
!15035 = !DILocation(line: 140, column: 21, scope: !15036)
!15036 = distinct !DILexicalBlock(scope: !15029, file: !14920, line: 138, column: 9)
!15037 = !DILocation(line: 140, column: 34, scope: !15036)
!15038 = !DILocation(line: 140, column: 11, scope: !15036)
!15039 = !DILocation(line: 141, column: 9, scope: !15036)
!15040 = !DILocation(line: 142, column: 14, scope: !15000)
!15041 = !DILocation(line: 0, scope: !15000)
!15042 = !DILocation(line: 142, column: 12, scope: !15000)
!15043 = !DILocation(line: 145, column: 13, scope: !15000)
!15044 = !DILocation(line: 145, column: 7, scope: !15000)
!15045 = !DILocation(line: 146, column: 5, scope: !15000)
!15046 = !DILocation(line: 148, column: 10, scope: !14931)
!15047 = !DILocation(line: 148, column: 3, scope: !14931)
!15048 = distinct !DISubprogram(name: "streamsavedir", scope: !858, file: !858, line: 91, type: !15049, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !845, retainedNodes: !213)
!15049 = !DISubroutineType(types: !15050)
!15050 = !{!7, !530, !848}
!15051 = !DILocalVariable(name: "dirp", arg: 1, scope: !15048, file: !858, line: 91, type: !530)
!15052 = !DILocation(line: 91, column: 21, scope: !15048)
!15053 = !DILocalVariable(name: "option", arg: 2, scope: !15048, file: !858, line: 91, type: !848)
!15054 = !DILocation(line: 91, column: 47, scope: !15048)
!15055 = !DILocalVariable(name: "name_space", scope: !15048, file: !858, line: 93, type: !7)
!15056 = !DILocation(line: 93, column: 9, scope: !15048)
!15057 = !DILocalVariable(name: "allocated", scope: !15048, file: !858, line: 94, type: !52)
!15058 = !DILocation(line: 94, column: 10, scope: !15048)
!15059 = !DILocalVariable(name: "entries", scope: !15048, file: !858, line: 95, type: !856)
!15060 = !DILocation(line: 95, column: 15, scope: !15048)
!15061 = !DILocalVariable(name: "entries_allocated", scope: !15048, file: !858, line: 96, type: !52)
!15062 = !DILocation(line: 96, column: 10, scope: !15048)
!15063 = !DILocalVariable(name: "entries_used", scope: !15048, file: !858, line: 97, type: !52)
!15064 = !DILocation(line: 97, column: 10, scope: !15048)
!15065 = !DILocalVariable(name: "used", scope: !15048, file: !858, line: 98, type: !52)
!15066 = !DILocation(line: 98, column: 10, scope: !15048)
!15067 = !DILocalVariable(name: "readdir_errno", scope: !15048, file: !858, line: 99, type: !5)
!15068 = !DILocation(line: 99, column: 7, scope: !15048)
!15069 = !DILocalVariable(name: "cmp", scope: !15048, file: !858, line: 100, type: !864)
!15070 = !DILocation(line: 100, column: 23, scope: !15048)
!15071 = !DILocation(line: 100, column: 55, scope: !15048)
!15072 = !DILocation(line: 100, column: 29, scope: !15048)
!15073 = !DILocation(line: 102, column: 7, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15048, file: !858, line: 102, column: 7)
!15075 = !DILocation(line: 102, column: 12, scope: !15074)
!15076 = !DILocation(line: 102, column: 7, scope: !15048)
!15077 = !DILocation(line: 103, column: 5, scope: !15074)
!15078 = !DILocation(line: 105, column: 3, scope: !15048)
!15079 = !DILocalVariable(name: "dp", scope: !15080, file: !858, line: 107, type: !870)
!15080 = distinct !DILexicalBlock(scope: !15081, file: !858, line: 106, column: 5)
!15081 = distinct !DILexicalBlock(scope: !15082, file: !858, line: 105, column: 3)
!15082 = distinct !DILexicalBlock(scope: !15048, file: !858, line: 105, column: 3)
!15083 = !DILocation(line: 107, column: 28, scope: !15080)
!15084 = !DILocalVariable(name: "entry", scope: !15080, file: !858, line: 108, type: !113)
!15085 = !DILocation(line: 108, column: 19, scope: !15080)
!15086 = !DILocation(line: 110, column: 7, scope: !15080)
!15087 = !DILocation(line: 110, column: 13, scope: !15080)
!15088 = !DILocation(line: 111, column: 21, scope: !15080)
!15089 = !DILocation(line: 111, column: 12, scope: !15080)
!15090 = !DILocation(line: 111, column: 10, scope: !15080)
!15091 = !DILocation(line: 112, column: 13, scope: !15092)
!15092 = distinct !DILexicalBlock(scope: !15080, file: !858, line: 112, column: 11)
!15093 = !DILocation(line: 112, column: 11, scope: !15080)
!15094 = !DILocation(line: 113, column: 9, scope: !15092)
!15095 = !DILocation(line: 117, column: 15, scope: !15080)
!15096 = !DILocation(line: 117, column: 19, scope: !15080)
!15097 = !DILocation(line: 117, column: 13, scope: !15080)
!15098 = !DILocation(line: 118, column: 11, scope: !15099)
!15099 = distinct !DILexicalBlock(scope: !15080, file: !858, line: 118, column: 11)
!15100 = !DILocation(line: 118, column: 17, scope: !15099)
!15101 = !DILocation(line: 118, column: 26, scope: !15099)
!15102 = !DILocation(line: 118, column: 39, scope: !15099)
!15103 = !DILocation(line: 118, column: 48, scope: !15099)
!15104 = !DILocation(line: 118, column: 64, scope: !15099)
!15105 = !DILocation(line: 118, column: 11, scope: !15080)
!15106 = !DILocalVariable(name: "entry_size", scope: !15107, file: !858, line: 120, type: !52)
!15107 = distinct !DILexicalBlock(scope: !15099, file: !858, line: 119, column: 9)
!15108 = !DILocation(line: 120, column: 18, scope: !15107)
!15109 = !DILocation(line: 120, column: 31, scope: !15107)
!15110 = !DILocation(line: 120, column: 52, scope: !15107)
!15111 = !DILocation(line: 121, column: 15, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15107, file: !858, line: 121, column: 15)
!15113 = !DILocation(line: 121, column: 15, scope: !15107)
!15114 = !DILocation(line: 123, column: 19, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15116, file: !858, line: 123, column: 19)
!15116 = distinct !DILexicalBlock(scope: !15112, file: !858, line: 122, column: 13)
!15117 = !DILocation(line: 123, column: 40, scope: !15115)
!15118 = !DILocation(line: 123, column: 37, scope: !15115)
!15119 = !DILocation(line: 123, column: 19, scope: !15116)
!15120 = !DILocalVariable(name: "n", scope: !15121, file: !858, line: 125, type: !52)
!15121 = distinct !DILexicalBlock(scope: !15115, file: !858, line: 124, column: 17)
!15122 = !DILocation(line: 125, column: 26, scope: !15121)
!15123 = !DILocation(line: 125, column: 30, scope: !15121)
!15124 = !DILocation(line: 126, column: 41, scope: !15121)
!15125 = !DILocation(line: 126, column: 29, scope: !15121)
!15126 = !DILocation(line: 126, column: 27, scope: !15121)
!15127 = !DILocation(line: 127, column: 39, scope: !15121)
!15128 = !DILocation(line: 127, column: 37, scope: !15121)
!15129 = !DILocation(line: 128, column: 17, scope: !15121)
!15130 = !DILocation(line: 129, column: 53, scope: !15116)
!15131 = !DILocation(line: 129, column: 44, scope: !15116)
!15132 = !DILocation(line: 129, column: 15, scope: !15116)
!15133 = !DILocation(line: 129, column: 23, scope: !15116)
!15134 = !DILocation(line: 129, column: 37, scope: !15116)
!15135 = !DILocation(line: 129, column: 42, scope: !15116)
!15136 = !DILocation(line: 131, column: 43, scope: !15116)
!15137 = !DILocation(line: 131, column: 47, scope: !15116)
!15138 = !DILocation(line: 131, column: 15, scope: !15116)
!15139 = !DILocation(line: 131, column: 23, scope: !15116)
!15140 = !DILocation(line: 131, column: 37, scope: !15116)
!15141 = !DILocation(line: 131, column: 41, scope: !15116)
!15142 = !DILocation(line: 133, column: 27, scope: !15116)
!15143 = !DILocation(line: 134, column: 13, scope: !15116)
!15144 = !DILocation(line: 137, column: 19, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15146, file: !858, line: 137, column: 19)
!15146 = distinct !DILexicalBlock(scope: !15112, file: !858, line: 136, column: 13)
!15147 = !DILocation(line: 137, column: 31, scope: !15145)
!15148 = !DILocation(line: 137, column: 29, scope: !15145)
!15149 = !DILocation(line: 137, column: 39, scope: !15145)
!15150 = !DILocation(line: 137, column: 36, scope: !15145)
!15151 = !DILocation(line: 137, column: 19, scope: !15146)
!15152 = !DILocalVariable(name: "n", scope: !15153, file: !858, line: 139, type: !52)
!15153 = distinct !DILexicalBlock(scope: !15145, file: !858, line: 138, column: 17)
!15154 = !DILocation(line: 139, column: 26, scope: !15153)
!15155 = !DILocation(line: 139, column: 30, scope: !15153)
!15156 = !DILocation(line: 139, column: 37, scope: !15153)
!15157 = !DILocation(line: 139, column: 35, scope: !15153)
!15158 = !DILocation(line: 140, column: 23, scope: !15159)
!15159 = distinct !DILexicalBlock(scope: !15153, file: !858, line: 140, column: 23)
!15160 = !DILocation(line: 140, column: 27, scope: !15159)
!15161 = !DILocation(line: 140, column: 25, scope: !15159)
!15162 = !DILocation(line: 140, column: 23, scope: !15153)
!15163 = !DILocation(line: 141, column: 21, scope: !15159)
!15164 = !DILocation(line: 142, column: 44, scope: !15153)
!15165 = !DILocation(line: 142, column: 32, scope: !15153)
!15166 = !DILocation(line: 142, column: 30, scope: !15153)
!15167 = !DILocation(line: 143, column: 31, scope: !15153)
!15168 = !DILocation(line: 143, column: 29, scope: !15153)
!15169 = !DILocation(line: 144, column: 17, scope: !15153)
!15170 = !DILocation(line: 145, column: 23, scope: !15146)
!15171 = !DILocation(line: 145, column: 36, scope: !15146)
!15172 = !DILocation(line: 145, column: 34, scope: !15146)
!15173 = !DILocation(line: 145, column: 42, scope: !15146)
!15174 = !DILocation(line: 145, column: 49, scope: !15146)
!15175 = !DILocation(line: 145, column: 15, scope: !15146)
!15176 = !DILocation(line: 147, column: 19, scope: !15107)
!15177 = !DILocation(line: 147, column: 16, scope: !15107)
!15178 = !DILocation(line: 148, column: 9, scope: !15107)
!15179 = !DILocation(line: 105, column: 3, scope: !15081)
!15180 = distinct !{!15180, !15181, !15182}
!15181 = !DILocation(line: 105, column: 3, scope: !15082)
!15182 = !DILocation(line: 149, column: 5, scope: !15082)
!15183 = !DILocation(line: 151, column: 19, scope: !15048)
!15184 = !DILocation(line: 151, column: 17, scope: !15048)
!15185 = !DILocation(line: 152, column: 7, scope: !15186)
!15186 = distinct !DILexicalBlock(scope: !15048, file: !858, line: 152, column: 7)
!15187 = !DILocation(line: 152, column: 21, scope: !15186)
!15188 = !DILocation(line: 152, column: 7, scope: !15048)
!15189 = !DILocation(line: 154, column: 13, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15186, file: !858, line: 153, column: 5)
!15191 = !DILocation(line: 154, column: 7, scope: !15190)
!15192 = !DILocation(line: 155, column: 13, scope: !15190)
!15193 = !DILocation(line: 155, column: 7, scope: !15190)
!15194 = !DILocation(line: 156, column: 15, scope: !15190)
!15195 = !DILocation(line: 156, column: 7, scope: !15190)
!15196 = !DILocation(line: 156, column: 13, scope: !15190)
!15197 = !DILocation(line: 157, column: 7, scope: !15190)
!15198 = !DILocation(line: 160, column: 7, scope: !15199)
!15199 = distinct !DILexicalBlock(scope: !15048, file: !858, line: 160, column: 7)
!15200 = !DILocation(line: 160, column: 7, scope: !15048)
!15201 = !DILocalVariable(name: "i", scope: !15202, file: !858, line: 162, type: !52)
!15202 = distinct !DILexicalBlock(scope: !15199, file: !858, line: 161, column: 5)
!15203 = !DILocation(line: 162, column: 14, scope: !15202)
!15204 = !DILocation(line: 164, column: 11, scope: !15205)
!15205 = distinct !DILexicalBlock(scope: !15202, file: !858, line: 164, column: 11)
!15206 = !DILocation(line: 164, column: 11, scope: !15202)
!15207 = !DILocation(line: 165, column: 16, scope: !15205)
!15208 = !DILocation(line: 165, column: 25, scope: !15205)
!15209 = !DILocation(line: 165, column: 56, scope: !15205)
!15210 = !DILocation(line: 165, column: 9, scope: !15205)
!15211 = !DILocation(line: 166, column: 29, scope: !15202)
!15212 = !DILocation(line: 166, column: 34, scope: !15202)
!15213 = !DILocation(line: 166, column: 20, scope: !15202)
!15214 = !DILocation(line: 166, column: 18, scope: !15202)
!15215 = !DILocation(line: 167, column: 12, scope: !15202)
!15216 = !DILocation(line: 168, column: 14, scope: !15217)
!15217 = distinct !DILexicalBlock(scope: !15202, file: !858, line: 168, column: 7)
!15218 = !DILocation(line: 168, column: 12, scope: !15217)
!15219 = !DILocation(line: 168, column: 19, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !15217, file: !858, line: 168, column: 7)
!15221 = !DILocation(line: 168, column: 23, scope: !15220)
!15222 = !DILocation(line: 168, column: 21, scope: !15220)
!15223 = !DILocation(line: 168, column: 7, scope: !15217)
!15224 = !DILocalVariable(name: "dest", scope: !15225, file: !858, line: 170, type: !7)
!15225 = distinct !DILexicalBlock(scope: !15220, file: !858, line: 169, column: 9)
!15226 = !DILocation(line: 170, column: 17, scope: !15225)
!15227 = !DILocation(line: 170, column: 24, scope: !15225)
!15228 = !DILocation(line: 170, column: 37, scope: !15225)
!15229 = !DILocation(line: 170, column: 35, scope: !15225)
!15230 = !DILocation(line: 171, column: 27, scope: !15225)
!15231 = !DILocation(line: 171, column: 33, scope: !15225)
!15232 = !DILocation(line: 171, column: 41, scope: !15225)
!15233 = !DILocation(line: 171, column: 44, scope: !15225)
!15234 = !DILocation(line: 171, column: 19, scope: !15225)
!15235 = !DILocation(line: 171, column: 52, scope: !15225)
!15236 = !DILocation(line: 171, column: 50, scope: !15225)
!15237 = !DILocation(line: 171, column: 57, scope: !15225)
!15238 = !DILocation(line: 171, column: 16, scope: !15225)
!15239 = !DILocation(line: 172, column: 17, scope: !15225)
!15240 = !DILocation(line: 172, column: 25, scope: !15225)
!15241 = !DILocation(line: 172, column: 28, scope: !15225)
!15242 = !DILocation(line: 172, column: 11, scope: !15225)
!15243 = !DILocation(line: 173, column: 9, scope: !15225)
!15244 = !DILocation(line: 168, column: 38, scope: !15220)
!15245 = !DILocation(line: 168, column: 7, scope: !15220)
!15246 = distinct !{!15246, !15223, !15247}
!15247 = !DILocation(line: 173, column: 9, scope: !15217)
!15248 = !DILocation(line: 174, column: 13, scope: !15202)
!15249 = !DILocation(line: 174, column: 7, scope: !15202)
!15250 = !DILocation(line: 175, column: 5, scope: !15202)
!15251 = !DILocation(line: 176, column: 12, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15199, file: !858, line: 176, column: 12)
!15253 = !DILocation(line: 176, column: 20, scope: !15252)
!15254 = !DILocation(line: 176, column: 17, scope: !15252)
!15255 = !DILocation(line: 176, column: 12, scope: !15199)
!15256 = !DILocation(line: 177, column: 28, scope: !15252)
!15257 = !DILocation(line: 177, column: 40, scope: !15252)
!15258 = !DILocation(line: 177, column: 45, scope: !15252)
!15259 = !DILocation(line: 177, column: 18, scope: !15252)
!15260 = !DILocation(line: 177, column: 16, scope: !15252)
!15261 = !DILocation(line: 177, column: 5, scope: !15252)
!15262 = !DILocation(line: 179, column: 3, scope: !15048)
!15263 = !DILocation(line: 179, column: 14, scope: !15048)
!15264 = !DILocation(line: 179, column: 20, scope: !15048)
!15265 = !DILocation(line: 180, column: 10, scope: !15048)
!15266 = !DILocation(line: 180, column: 3, scope: !15048)
!15267 = !DILocation(line: 181, column: 1, scope: !15048)
!15268 = distinct !DISubprogram(name: "direntry_cmp_name", scope: !858, file: !858, line: 51, type: !866, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !845, retainedNodes: !213)
!15269 = !DILocalVariable(name: "a", arg: 1, scope: !15268, file: !858, line: 51, type: !553)
!15270 = !DILocation(line: 51, column: 32, scope: !15268)
!15271 = !DILocalVariable(name: "b", arg: 2, scope: !15268, file: !858, line: 51, type: !553)
!15272 = !DILocation(line: 51, column: 47, scope: !15268)
!15273 = !DILocalVariable(name: "dea", scope: !15268, file: !858, line: 53, type: !880)
!15274 = !DILocation(line: 53, column: 21, scope: !15268)
!15275 = !DILocation(line: 53, column: 27, scope: !15268)
!15276 = !DILocalVariable(name: "deb", scope: !15268, file: !858, line: 54, type: !880)
!15277 = !DILocation(line: 54, column: 21, scope: !15268)
!15278 = !DILocation(line: 54, column: 27, scope: !15268)
!15279 = !DILocation(line: 56, column: 18, scope: !15268)
!15280 = !DILocation(line: 56, column: 23, scope: !15268)
!15281 = !DILocation(line: 56, column: 29, scope: !15268)
!15282 = !DILocation(line: 56, column: 34, scope: !15268)
!15283 = !DILocation(line: 56, column: 10, scope: !15268)
!15284 = !DILocation(line: 56, column: 3, scope: !15268)
!15285 = distinct !DISubprogram(name: "direntry_cmp_inode", scope: !858, file: !858, line: 63, type: !866, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !845, retainedNodes: !213)
!15286 = !DILocalVariable(name: "a", arg: 1, scope: !15285, file: !858, line: 63, type: !553)
!15287 = !DILocation(line: 63, column: 33, scope: !15285)
!15288 = !DILocalVariable(name: "b", arg: 2, scope: !15285, file: !858, line: 63, type: !553)
!15289 = !DILocation(line: 63, column: 48, scope: !15285)
!15290 = !DILocalVariable(name: "dea", scope: !15285, file: !858, line: 65, type: !880)
!15291 = !DILocation(line: 65, column: 21, scope: !15285)
!15292 = !DILocation(line: 65, column: 27, scope: !15285)
!15293 = !DILocalVariable(name: "deb", scope: !15285, file: !858, line: 66, type: !880)
!15294 = !DILocation(line: 66, column: 21, scope: !15285)
!15295 = !DILocation(line: 66, column: 27, scope: !15285)
!15296 = !DILocation(line: 68, column: 10, scope: !15285)
!15297 = !DILocation(line: 68, column: 15, scope: !15285)
!15298 = !DILocation(line: 68, column: 21, scope: !15285)
!15299 = !DILocation(line: 68, column: 26, scope: !15285)
!15300 = !DILocation(line: 68, column: 19, scope: !15285)
!15301 = !DILocation(line: 68, column: 37, scope: !15285)
!15302 = !DILocation(line: 68, column: 42, scope: !15285)
!15303 = !DILocation(line: 68, column: 48, scope: !15285)
!15304 = !DILocation(line: 68, column: 53, scope: !15285)
!15305 = !DILocation(line: 68, column: 46, scope: !15285)
!15306 = !DILocation(line: 68, column: 3, scope: !15285)
!15307 = distinct !DISubprogram(name: "savedir", scope: !858, file: !858, line: 189, type: !15308, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !845, retainedNodes: !213)
!15308 = !DISubroutineType(types: !15309)
!15309 = !{!7, !113, !848}
!15310 = !DILocalVariable(name: "dir", arg: 1, scope: !15307, file: !858, line: 189, type: !113)
!15311 = !DILocation(line: 189, column: 22, scope: !15307)
!15312 = !DILocalVariable(name: "option", arg: 2, scope: !15307, file: !858, line: 189, type: !848)
!15313 = !DILocation(line: 189, column: 47, scope: !15307)
!15314 = !DILocalVariable(name: "dirp", scope: !15307, file: !858, line: 191, type: !530)
!15315 = !DILocation(line: 191, column: 8, scope: !15307)
!15316 = !DILocation(line: 191, column: 24, scope: !15307)
!15317 = !DILocation(line: 191, column: 15, scope: !15307)
!15318 = !DILocation(line: 192, column: 9, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15307, file: !858, line: 192, column: 7)
!15320 = !DILocation(line: 192, column: 7, scope: !15307)
!15321 = !DILocation(line: 193, column: 5, scope: !15319)
!15322 = !DILocalVariable(name: "name_space", scope: !15323, file: !858, line: 196, type: !7)
!15323 = distinct !DILexicalBlock(scope: !15319, file: !858, line: 195, column: 5)
!15324 = !DILocation(line: 196, column: 13, scope: !15323)
!15325 = !DILocation(line: 196, column: 41, scope: !15323)
!15326 = !DILocation(line: 196, column: 47, scope: !15323)
!15327 = !DILocation(line: 196, column: 26, scope: !15323)
!15328 = !DILocation(line: 197, column: 21, scope: !15329)
!15329 = distinct !DILexicalBlock(scope: !15323, file: !858, line: 197, column: 11)
!15330 = !DILocation(line: 197, column: 11, scope: !15329)
!15331 = !DILocation(line: 197, column: 27, scope: !15329)
!15332 = !DILocation(line: 197, column: 11, scope: !15323)
!15333 = !DILocalVariable(name: "closedir_errno", scope: !15334, file: !858, line: 199, type: !5)
!15334 = distinct !DILexicalBlock(scope: !15329, file: !858, line: 198, column: 9)
!15335 = !DILocation(line: 199, column: 15, scope: !15334)
!15336 = !DILocation(line: 199, column: 32, scope: !15334)
!15337 = !DILocation(line: 200, column: 17, scope: !15334)
!15338 = !DILocation(line: 200, column: 11, scope: !15334)
!15339 = !DILocation(line: 201, column: 19, scope: !15334)
!15340 = !DILocation(line: 201, column: 11, scope: !15334)
!15341 = !DILocation(line: 201, column: 17, scope: !15334)
!15342 = !DILocation(line: 202, column: 11, scope: !15334)
!15343 = !DILocation(line: 204, column: 14, scope: !15323)
!15344 = !DILocation(line: 204, column: 7, scope: !15323)
!15345 = !DILocation(line: 206, column: 1, scope: !15307)
!15346 = distinct !DISubprogram(name: "getcon", scope: !15347, file: !15347, line: 87, type: !15348, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15347 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/mohamad/clone/coreutils")
!15348 = !DISubroutineType(types: !15349)
!15349 = !{!5, !15350}
!15350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15351, size: 64)
!15351 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !15347, line: 83, baseType: !7)
!15352 = !DILocalVariable(name: "con", arg: 1, scope: !15346, file: !15347, line: 87, type: !15350)
!15353 = !DILocation(line: 87, column: 29, scope: !15346)
!15354 = !DILocation(line: 88, column: 5, scope: !15346)
!15355 = !DILocation(line: 88, column: 11, scope: !15346)
!15356 = !DILocation(line: 88, column: 22, scope: !15346)
!15357 = distinct !DISubprogram(name: "freecon", scope: !15347, file: !15347, line: 90, type: !15358, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15358 = !DISubroutineType(types: !15359)
!15359 = !{null, !15351}
!15360 = !DILocalVariable(name: "con", arg: 1, scope: !15357, file: !15347, line: 90, type: !15351)
!15361 = !DILocation(line: 90, column: 29, scope: !15357)
!15362 = !DILocation(line: 90, column: 56, scope: !15357)
!15363 = distinct !DISubprogram(name: "getfscreatecon", scope: !15347, file: !15347, line: 93, type: !15348, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15364 = !DILocalVariable(name: "con", arg: 1, scope: !15363, file: !15347, line: 93, type: !15350)
!15365 = !DILocation(line: 93, column: 37, scope: !15363)
!15366 = !DILocation(line: 94, column: 5, scope: !15363)
!15367 = !DILocation(line: 94, column: 11, scope: !15363)
!15368 = !DILocation(line: 94, column: 22, scope: !15363)
!15369 = distinct !DISubprogram(name: "setfscreatecon", scope: !15347, file: !15347, line: 96, type: !15370, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15370 = !DISubroutineType(types: !15371)
!15371 = !{!5, !15351}
!15372 = !DILocalVariable(name: "con", arg: 1, scope: !15369, file: !15347, line: 96, type: !15351)
!15373 = !DILocation(line: 96, column: 36, scope: !15369)
!15374 = !DILocation(line: 97, column: 5, scope: !15369)
!15375 = !DILocation(line: 97, column: 11, scope: !15369)
!15376 = !DILocation(line: 97, column: 22, scope: !15369)
!15377 = distinct !DISubprogram(name: "matchpathcon", scope: !15347, file: !15347, line: 99, type: !15378, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15378 = !DISubroutineType(types: !15379)
!15379 = !{!5, !113, !236, !15350}
!15380 = !DILocalVariable(name: "file", arg: 1, scope: !15377, file: !15347, line: 99, type: !113)
!15381 = !DILocation(line: 99, column: 27, scope: !15377)
!15382 = !DILocalVariable(name: "m", arg: 2, scope: !15377, file: !15347, line: 100, type: !236)
!15383 = !DILocation(line: 100, column: 22, scope: !15377)
!15384 = !DILocalVariable(name: "con", arg: 3, scope: !15377, file: !15347, line: 101, type: !15350)
!15385 = !DILocation(line: 101, column: 23, scope: !15377)
!15386 = !DILocation(line: 102, column: 5, scope: !15377)
!15387 = !DILocation(line: 102, column: 11, scope: !15377)
!15388 = !DILocation(line: 102, column: 22, scope: !15377)
!15389 = distinct !DISubprogram(name: "getfilecon", scope: !15347, file: !15347, line: 104, type: !15390, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15390 = !DISubroutineType(types: !15391)
!15391 = !{!5, !113, !15350}
!15392 = !DILocalVariable(name: "file", arg: 1, scope: !15389, file: !15347, line: 104, type: !113)
!15393 = !DILocation(line: 104, column: 25, scope: !15389)
!15394 = !DILocalVariable(name: "con", arg: 2, scope: !15389, file: !15347, line: 105, type: !15350)
!15395 = !DILocation(line: 105, column: 33, scope: !15389)
!15396 = !DILocation(line: 106, column: 5, scope: !15389)
!15397 = !DILocation(line: 106, column: 11, scope: !15389)
!15398 = !DILocation(line: 106, column: 22, scope: !15389)
!15399 = distinct !DISubprogram(name: "lgetfilecon", scope: !15347, file: !15347, line: 108, type: !15390, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15400 = !DILocalVariable(name: "file", arg: 1, scope: !15399, file: !15347, line: 108, type: !113)
!15401 = !DILocation(line: 108, column: 26, scope: !15399)
!15402 = !DILocalVariable(name: "con", arg: 2, scope: !15399, file: !15347, line: 109, type: !15350)
!15403 = !DILocation(line: 109, column: 34, scope: !15399)
!15404 = !DILocation(line: 110, column: 5, scope: !15399)
!15405 = !DILocation(line: 110, column: 11, scope: !15399)
!15406 = !DILocation(line: 110, column: 22, scope: !15399)
!15407 = distinct !DISubprogram(name: "fgetfilecon", scope: !15347, file: !15347, line: 112, type: !15408, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15408 = !DISubroutineType(types: !15409)
!15409 = !{!5, !5, !15350}
!15410 = !DILocalVariable(name: "fd", arg: 1, scope: !15407, file: !15347, line: 112, type: !5)
!15411 = !DILocation(line: 112, column: 18, scope: !15407)
!15412 = !DILocalVariable(name: "con", arg: 2, scope: !15407, file: !15347, line: 112, type: !15350)
!15413 = !DILocation(line: 112, column: 42, scope: !15407)
!15414 = !DILocation(line: 113, column: 5, scope: !15407)
!15415 = !DILocation(line: 113, column: 11, scope: !15407)
!15416 = !DILocation(line: 113, column: 22, scope: !15407)
!15417 = distinct !DISubprogram(name: "setfilecon", scope: !15347, file: !15347, line: 115, type: !15418, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15418 = !DISubroutineType(types: !15419)
!15419 = !{!5, !113, !15351}
!15420 = !DILocalVariable(name: "file", arg: 1, scope: !15417, file: !15347, line: 115, type: !113)
!15421 = !DILocation(line: 115, column: 25, scope: !15417)
!15422 = !DILocalVariable(name: "con", arg: 2, scope: !15417, file: !15347, line: 116, type: !15351)
!15423 = !DILocation(line: 116, column: 32, scope: !15417)
!15424 = !DILocation(line: 117, column: 5, scope: !15417)
!15425 = !DILocation(line: 117, column: 11, scope: !15417)
!15426 = !DILocation(line: 117, column: 22, scope: !15417)
!15427 = distinct !DISubprogram(name: "lsetfilecon", scope: !15347, file: !15347, line: 119, type: !15418, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15428 = !DILocalVariable(name: "file", arg: 1, scope: !15427, file: !15347, line: 119, type: !113)
!15429 = !DILocation(line: 119, column: 26, scope: !15427)
!15430 = !DILocalVariable(name: "con", arg: 2, scope: !15427, file: !15347, line: 120, type: !15351)
!15431 = !DILocation(line: 120, column: 33, scope: !15427)
!15432 = !DILocation(line: 121, column: 5, scope: !15427)
!15433 = !DILocation(line: 121, column: 11, scope: !15427)
!15434 = !DILocation(line: 121, column: 22, scope: !15427)
!15435 = distinct !DISubprogram(name: "fsetfilecon", scope: !15347, file: !15347, line: 123, type: !15436, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15436 = !DISubroutineType(types: !15437)
!15437 = !{!5, !5, !15351}
!15438 = !DILocalVariable(name: "fd", arg: 1, scope: !15435, file: !15347, line: 123, type: !5)
!15439 = !DILocation(line: 123, column: 18, scope: !15435)
!15440 = !DILocalVariable(name: "con", arg: 2, scope: !15435, file: !15347, line: 124, type: !15351)
!15441 = !DILocation(line: 124, column: 33, scope: !15435)
!15442 = !DILocation(line: 125, column: 5, scope: !15435)
!15443 = !DILocation(line: 125, column: 11, scope: !15435)
!15444 = !DILocation(line: 125, column: 22, scope: !15435)
!15445 = distinct !DISubprogram(name: "security_check_context", scope: !15347, file: !15347, line: 128, type: !15370, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15446 = !DILocalVariable(name: "con", arg: 1, scope: !15445, file: !15347, line: 128, type: !15351)
!15447 = !DILocation(line: 128, column: 44, scope: !15445)
!15448 = !DILocation(line: 129, column: 5, scope: !15445)
!15449 = !DILocation(line: 129, column: 11, scope: !15445)
!15450 = !DILocation(line: 129, column: 22, scope: !15445)
!15451 = distinct !DISubprogram(name: "security_check_context_raw", scope: !15347, file: !15347, line: 131, type: !15370, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15452 = !DILocalVariable(name: "con", arg: 1, scope: !15451, file: !15347, line: 131, type: !15351)
!15453 = !DILocation(line: 131, column: 48, scope: !15451)
!15454 = !DILocation(line: 132, column: 5, scope: !15451)
!15455 = !DILocation(line: 132, column: 11, scope: !15451)
!15456 = !DILocation(line: 132, column: 22, scope: !15451)
!15457 = distinct !DISubprogram(name: "setexeccon", scope: !15347, file: !15347, line: 134, type: !15370, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15458 = !DILocalVariable(name: "con", arg: 1, scope: !15457, file: !15347, line: 134, type: !15351)
!15459 = !DILocation(line: 134, column: 32, scope: !15457)
!15460 = !DILocation(line: 135, column: 5, scope: !15457)
!15461 = !DILocation(line: 135, column: 11, scope: !15457)
!15462 = !DILocation(line: 135, column: 22, scope: !15457)
!15463 = distinct !DISubprogram(name: "security_compute_create", scope: !15347, file: !15347, line: 137, type: !15464, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15464 = !DISubroutineType(types: !15465)
!15465 = !{!5, !15351, !15351, !15466, !15350}
!15466 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_class_t", file: !15347, line: 82, baseType: !34)
!15467 = !DILocalVariable(name: "scon", arg: 1, scope: !15463, file: !15347, line: 137, type: !15351)
!15468 = !DILocation(line: 137, column: 45, scope: !15463)
!15469 = !DILocalVariable(name: "tcon", arg: 2, scope: !15463, file: !15347, line: 138, type: !15351)
!15470 = !DILocation(line: 138, column: 45, scope: !15463)
!15471 = !DILocalVariable(name: "tclass", arg: 3, scope: !15463, file: !15347, line: 139, type: !15466)
!15472 = !DILocation(line: 139, column: 43, scope: !15463)
!15473 = !DILocalVariable(name: "newcon", arg: 4, scope: !15463, file: !15347, line: 140, type: !15350)
!15474 = !DILocation(line: 140, column: 46, scope: !15463)
!15475 = !DILocation(line: 141, column: 5, scope: !15463)
!15476 = !DILocation(line: 141, column: 11, scope: !15463)
!15477 = !DILocation(line: 141, column: 22, scope: !15463)
!15478 = distinct !DISubprogram(name: "string_to_security_class", scope: !15347, file: !15347, line: 143, type: !15479, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15479 = !DISubroutineType(types: !15480)
!15480 = !{!15466, !113}
!15481 = !DILocalVariable(name: "name", arg: 1, scope: !15478, file: !15347, line: 143, type: !113)
!15482 = !DILocation(line: 143, column: 39, scope: !15478)
!15483 = !DILocation(line: 144, column: 5, scope: !15478)
!15484 = !DILocation(line: 144, column: 11, scope: !15478)
!15485 = !DILocation(line: 144, column: 22, scope: !15478)
!15486 = distinct !DISubprogram(name: "matchpathcon_init_prefix", scope: !15347, file: !15347, line: 146, type: !15487, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !213)
!15487 = !DISubroutineType(types: !15488)
!15488 = !{!5, !113, !113}
!15489 = !DILocalVariable(name: "path", arg: 1, scope: !15486, file: !15347, line: 146, type: !113)
!15490 = !DILocation(line: 146, column: 39, scope: !15486)
!15491 = !DILocalVariable(name: "prefix", arg: 2, scope: !15486, file: !15347, line: 147, type: !113)
!15492 = !DILocation(line: 147, column: 39, scope: !15486)
!15493 = !DILocation(line: 148, column: 5, scope: !15486)
!15494 = !DILocation(line: 148, column: 11, scope: !15486)
!15495 = !DILocation(line: 148, column: 22, scope: !15486)
!15496 = distinct !DISubprogram(name: "get_stat_atime_ns", scope: !15497, file: !15497, line: 66, type: !15498, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !213)
!15497 = !DIFile(filename: "./lib/stat-time.h", directory: "/home/mohamad/clone/coreutils")
!15498 = !DISubroutineType(types: !15499)
!15499 = !{!32, !15500}
!15500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15501, size: 64)
!15501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15502)
!15502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !15503)
!15503 = !{!15504, !15505, !15506, !15507, !15508, !15509, !15510, !15511, !15512, !15513, !15514, !15515, !15520, !15521, !15522}
!15504 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15502, file: !336, line: 48, baseType: !260, size: 64)
!15505 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15502, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!15506 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15502, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!15507 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15502, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!15508 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15502, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!15509 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15502, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!15510 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15502, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!15511 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15502, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!15512 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15502, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!15513 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15502, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!15514 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15502, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!15515 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15502, file: !336, line: 91, baseType: !15516, size: 128, offset: 576)
!15516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !15517)
!15517 = !{!15518, !15519}
!15518 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15516, file: !355, line: 122, baseType: !358, size: 64)
!15519 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15516, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!15520 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15502, file: !336, line: 92, baseType: !15516, size: 128, offset: 704)
!15521 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15502, file: !336, line: 93, baseType: !15516, size: 128, offset: 832)
!15522 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15502, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!15523 = !DILocalVariable(name: "st", arg: 1, scope: !15496, file: !15497, line: 66, type: !15500)
!15524 = !DILocation(line: 66, column: 39, scope: !15496)
!15525 = !DILocation(line: 69, column: 10, scope: !15496)
!15526 = !DILocation(line: 69, column: 38, scope: !15496)
!15527 = !DILocation(line: 69, column: 3, scope: !15496)
!15528 = distinct !DISubprogram(name: "get_stat_ctime_ns", scope: !15497, file: !15497, line: 79, type: !15498, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !213)
!15529 = !DILocalVariable(name: "st", arg: 1, scope: !15528, file: !15497, line: 79, type: !15500)
!15530 = !DILocation(line: 79, column: 39, scope: !15528)
!15531 = !DILocation(line: 82, column: 10, scope: !15528)
!15532 = !DILocation(line: 82, column: 38, scope: !15528)
!15533 = !DILocation(line: 82, column: 3, scope: !15528)
!15534 = distinct !DISubprogram(name: "get_stat_mtime_ns", scope: !15497, file: !15497, line: 92, type: !15498, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !213)
!15535 = !DILocalVariable(name: "st", arg: 1, scope: !15534, file: !15497, line: 92, type: !15500)
!15536 = !DILocation(line: 92, column: 39, scope: !15534)
!15537 = !DILocation(line: 95, column: 10, scope: !15534)
!15538 = !DILocation(line: 95, column: 38, scope: !15534)
!15539 = !DILocation(line: 95, column: 3, scope: !15534)
!15540 = distinct !DISubprogram(name: "get_stat_birthtime_ns", scope: !15497, file: !15497, line: 105, type: !15498, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !213)
!15541 = !DILocalVariable(name: "st", arg: 1, scope: !15540, file: !15497, line: 105, type: !15500)
!15542 = !DILocation(line: 105, column: 43, scope: !15540)
!15543 = !DILocation(line: 112, column: 3, scope: !15540)
!15544 = distinct !DISubprogram(name: "get_stat_atime", scope: !15497, file: !15497, line: 118, type: !15545, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !213)
!15545 = !DISubroutineType(types: !15546)
!15546 = !{!15516, !15500}
!15547 = !DILocalVariable(name: "st", arg: 1, scope: !15544, file: !15497, line: 118, type: !15500)
!15548 = !DILocation(line: 118, column: 36, scope: !15544)
!15549 = !DILocation(line: 121, column: 10, scope: !15544)
!15550 = !DILocation(line: 121, column: 3, scope: !15544)
!15551 = distinct !DISubprogram(name: "get_stat_ctime", scope: !15497, file: !15497, line: 132, type: !15545, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !213)
!15552 = !DILocalVariable(name: "st", arg: 1, scope: !15551, file: !15497, line: 132, type: !15500)
!15553 = !DILocation(line: 132, column: 36, scope: !15551)
!15554 = !DILocation(line: 135, column: 10, scope: !15551)
!15555 = !DILocation(line: 135, column: 3, scope: !15551)
!15556 = distinct !DISubprogram(name: "get_stat_mtime", scope: !15497, file: !15497, line: 146, type: !15545, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !213)
!15557 = !DILocalVariable(name: "st", arg: 1, scope: !15556, file: !15497, line: 146, type: !15500)
!15558 = !DILocation(line: 146, column: 36, scope: !15556)
!15559 = !DILocation(line: 149, column: 10, scope: !15556)
!15560 = !DILocation(line: 149, column: 3, scope: !15556)
!15561 = distinct !DISubprogram(name: "get_stat_birthtime", scope: !15497, file: !15497, line: 161, type: !15545, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !213)
!15562 = !DILocalVariable(name: "st", arg: 1, scope: !15561, file: !15497, line: 161, type: !15500)
!15563 = !DILocation(line: 161, column: 40, scope: !15561)
!15564 = !DILocalVariable(name: "t", scope: !15561, file: !15497, line: 163, type: !15516)
!15565 = !DILocation(line: 163, column: 19, scope: !15561)
!15566 = !DILocation(line: 183, column: 5, scope: !15561)
!15567 = !DILocation(line: 183, column: 12, scope: !15561)
!15568 = !DILocation(line: 184, column: 5, scope: !15561)
!15569 = !DILocation(line: 184, column: 13, scope: !15561)
!15570 = !DILocation(line: 202, column: 3, scope: !15561)
!15571 = distinct !DISubprogram(name: "stat_time_normalize", scope: !15497, file: !15497, line: 211, type: !15572, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !213)
!15572 = !DISubroutineType(types: !15573)
!15573 = !{!5, !5, !15574}
!15574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15502, size: 64)
!15575 = !DILocalVariable(name: "result", arg: 1, scope: !15571, file: !15497, line: 211, type: !5)
!15576 = !DILocation(line: 211, column: 26, scope: !15571)
!15577 = !DILocalVariable(name: "st", arg: 2, scope: !15571, file: !15497, line: 211, type: !15574)
!15578 = !DILocation(line: 211, column: 47, scope: !15571)
!15579 = !DILocation(line: 243, column: 10, scope: !15571)
!15580 = !DILocation(line: 243, column: 3, scope: !15571)
!15581 = distinct !DISubprogram(name: "statat", scope: !15582, file: !15582, line: 102, type: !15583, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1398, retainedNodes: !213)
!15582 = !DIFile(filename: "./lib/openat.h", directory: "/home/mohamad/clone/coreutils")
!15583 = !DISubroutineType(types: !15584)
!15584 = !{!5, !5, !113, !15585}
!15585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15586, size: 64)
!15586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !15587)
!15587 = !{!15588, !15589, !15590, !15591, !15592, !15593, !15594, !15595, !15596, !15597, !15598, !15599, !15604, !15605, !15606}
!15588 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15586, file: !336, line: 48, baseType: !260, size: 64)
!15589 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15586, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!15590 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15586, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!15591 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15586, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!15592 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15586, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!15593 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15586, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!15594 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15586, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!15595 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15586, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!15596 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15586, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!15597 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15586, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!15598 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15586, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!15599 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15586, file: !336, line: 91, baseType: !15600, size: 128, offset: 576)
!15600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !15601)
!15601 = !{!15602, !15603}
!15602 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15600, file: !355, line: 122, baseType: !358, size: 64)
!15603 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15600, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!15604 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15586, file: !336, line: 92, baseType: !15600, size: 128, offset: 704)
!15605 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15586, file: !336, line: 93, baseType: !15600, size: 128, offset: 832)
!15606 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15586, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!15607 = !DILocalVariable(name: "fd", arg: 1, scope: !15581, file: !15582, line: 102, type: !5)
!15608 = !DILocation(line: 102, column: 13, scope: !15581)
!15609 = !DILocalVariable(name: "name", arg: 2, scope: !15581, file: !15582, line: 102, type: !113)
!15610 = !DILocation(line: 102, column: 29, scope: !15581)
!15611 = !DILocalVariable(name: "st", arg: 3, scope: !15581, file: !15582, line: 102, type: !15585)
!15612 = !DILocation(line: 102, column: 48, scope: !15581)
!15613 = !DILocation(line: 104, column: 19, scope: !15581)
!15614 = !DILocation(line: 104, column: 23, scope: !15581)
!15615 = !DILocation(line: 104, column: 29, scope: !15581)
!15616 = !DILocation(line: 104, column: 10, scope: !15581)
!15617 = !DILocation(line: 104, column: 3, scope: !15581)
!15618 = distinct !DISubprogram(name: "lstatat", scope: !15582, file: !15582, line: 108, type: !15583, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1398, retainedNodes: !213)
!15619 = !DILocalVariable(name: "fd", arg: 1, scope: !15618, file: !15582, line: 108, type: !5)
!15620 = !DILocation(line: 108, column: 14, scope: !15618)
!15621 = !DILocalVariable(name: "name", arg: 2, scope: !15618, file: !15582, line: 108, type: !113)
!15622 = !DILocation(line: 108, column: 30, scope: !15618)
!15623 = !DILocalVariable(name: "st", arg: 3, scope: !15618, file: !15582, line: 108, type: !15585)
!15624 = !DILocation(line: 108, column: 49, scope: !15618)
!15625 = !DILocation(line: 110, column: 19, scope: !15618)
!15626 = !DILocation(line: 110, column: 23, scope: !15618)
!15627 = !DILocation(line: 110, column: 29, scope: !15618)
!15628 = !DILocation(line: 110, column: 10, scope: !15618)
!15629 = !DILocation(line: 110, column: 3, scope: !15618)
!15630 = distinct !DISubprogram(name: "try_tempname_len", scope: !900, file: !900, line: 188, type: !15631, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !885, retainedNodes: !213)
!15631 = !DISubroutineType(types: !15632)
!15632 = !{!5, !7, !5, !47, !892, !52}
!15633 = !DILocalVariable(name: "tmpl", arg: 1, scope: !15630, file: !900, line: 188, type: !7)
!15634 = !DILocation(line: 188, column: 25, scope: !15630)
!15635 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !15630, file: !900, line: 188, type: !5)
!15636 = !DILocation(line: 188, column: 35, scope: !15630)
!15637 = !DILocalVariable(name: "args", arg: 3, scope: !15630, file: !900, line: 188, type: !47)
!15638 = !DILocation(line: 188, column: 52, scope: !15630)
!15639 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !15630, file: !900, line: 189, type: !892)
!15640 = !DILocation(line: 189, column: 25, scope: !15630)
!15641 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !15630, file: !900, line: 189, type: !52)
!15642 = !DILocation(line: 189, column: 59, scope: !15630)
!15643 = !DILocalVariable(name: "len", scope: !15630, file: !900, line: 191, type: !52)
!15644 = !DILocation(line: 191, column: 10, scope: !15630)
!15645 = !DILocalVariable(name: "XXXXXX", scope: !15630, file: !900, line: 192, type: !7)
!15646 = !DILocation(line: 192, column: 9, scope: !15630)
!15647 = !DILocalVariable(name: "count", scope: !15630, file: !900, line: 193, type: !67)
!15648 = !DILocation(line: 193, column: 16, scope: !15630)
!15649 = !DILocalVariable(name: "fd", scope: !15630, file: !900, line: 194, type: !5)
!15650 = !DILocation(line: 194, column: 7, scope: !15630)
!15651 = !DILocalVariable(name: "save_errno", scope: !15630, file: !900, line: 195, type: !5)
!15652 = !DILocation(line: 195, column: 7, scope: !15630)
!15653 = !DILocation(line: 195, column: 20, scope: !15630)
!15654 = !DILocalVariable(name: "rand_src", scope: !15630, file: !900, line: 196, type: !888)
!15655 = !DILocation(line: 196, column: 26, scope: !15630)
!15656 = !DILocalVariable(name: "attempts", scope: !15630, file: !900, line: 212, type: !67)
!15657 = !DILocation(line: 212, column: 16, scope: !15630)
!15658 = !DILocation(line: 215, column: 17, scope: !15630)
!15659 = !DILocation(line: 215, column: 9, scope: !15630)
!15660 = !DILocation(line: 215, column: 7, scope: !15630)
!15661 = !DILocation(line: 216, column: 7, scope: !15662)
!15662 = distinct !DILexicalBlock(scope: !15630, file: !900, line: 216, column: 7)
!15663 = !DILocation(line: 216, column: 13, scope: !15662)
!15664 = !DILocation(line: 216, column: 28, scope: !15662)
!15665 = !DILocation(line: 216, column: 26, scope: !15662)
!15666 = !DILocation(line: 216, column: 11, scope: !15662)
!15667 = !DILocation(line: 217, column: 7, scope: !15662)
!15668 = !DILocation(line: 217, column: 29, scope: !15662)
!15669 = !DILocation(line: 217, column: 34, scope: !15662)
!15670 = !DILocation(line: 217, column: 40, scope: !15662)
!15671 = !DILocation(line: 217, column: 38, scope: !15662)
!15672 = !DILocation(line: 217, column: 55, scope: !15662)
!15673 = !DILocation(line: 217, column: 53, scope: !15662)
!15674 = !DILocation(line: 218, column: 28, scope: !15662)
!15675 = !DILocation(line: 217, column: 12, scope: !15662)
!15676 = !DILocation(line: 216, column: 7, scope: !15630)
!15677 = !DILocation(line: 220, column: 7, scope: !15678)
!15678 = distinct !DILexicalBlock(scope: !15662, file: !900, line: 219, column: 5)
!15679 = !DILocation(line: 221, column: 7, scope: !15678)
!15680 = !DILocation(line: 225, column: 13, scope: !15630)
!15681 = !DILocation(line: 225, column: 18, scope: !15630)
!15682 = !DILocation(line: 225, column: 24, scope: !15630)
!15683 = !DILocation(line: 225, column: 22, scope: !15630)
!15684 = !DILocation(line: 225, column: 39, scope: !15630)
!15685 = !DILocation(line: 225, column: 37, scope: !15630)
!15686 = !DILocation(line: 225, column: 10, scope: !15630)
!15687 = !DILocation(line: 228, column: 37, scope: !15630)
!15688 = !DILocation(line: 228, column: 14, scope: !15630)
!15689 = !DILocation(line: 228, column: 12, scope: !15630)
!15690 = !DILocation(line: 229, column: 9, scope: !15691)
!15691 = distinct !DILexicalBlock(scope: !15630, file: !900, line: 229, column: 7)
!15692 = !DILocation(line: 229, column: 7, scope: !15630)
!15693 = !DILocation(line: 230, column: 5, scope: !15691)
!15694 = !DILocation(line: 232, column: 14, scope: !15695)
!15695 = distinct !DILexicalBlock(scope: !15630, file: !900, line: 232, column: 3)
!15696 = !DILocation(line: 232, column: 8, scope: !15695)
!15697 = !DILocation(line: 232, column: 19, scope: !15698)
!15698 = distinct !DILexicalBlock(scope: !15695, file: !900, line: 232, column: 3)
!15699 = !DILocation(line: 232, column: 27, scope: !15698)
!15700 = !DILocation(line: 232, column: 25, scope: !15698)
!15701 = !DILocation(line: 232, column: 3, scope: !15695)
!15702 = !DILocalVariable(name: "i", scope: !15703, file: !900, line: 234, type: !52)
!15703 = distinct !DILexicalBlock(scope: !15698, file: !900, line: 233, column: 5)
!15704 = !DILocation(line: 234, column: 14, scope: !15703)
!15705 = !DILocation(line: 236, column: 14, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15703, file: !900, line: 236, column: 7)
!15707 = !DILocation(line: 236, column: 12, scope: !15706)
!15708 = !DILocation(line: 236, column: 19, scope: !15709)
!15709 = distinct !DILexicalBlock(scope: !15706, file: !900, line: 236, column: 7)
!15710 = !DILocation(line: 236, column: 23, scope: !15709)
!15711 = !DILocation(line: 236, column: 21, scope: !15709)
!15712 = !DILocation(line: 236, column: 7, scope: !15706)
!15713 = !DILocation(line: 237, column: 45, scope: !15709)
!15714 = !DILocation(line: 237, column: 29, scope: !15709)
!15715 = !DILocation(line: 237, column: 21, scope: !15709)
!15716 = !DILocation(line: 237, column: 9, scope: !15709)
!15717 = !DILocation(line: 237, column: 16, scope: !15709)
!15718 = !DILocation(line: 237, column: 19, scope: !15709)
!15719 = !DILocation(line: 236, column: 38, scope: !15709)
!15720 = !DILocation(line: 236, column: 7, scope: !15709)
!15721 = distinct !{!15721, !15712, !15722}
!15722 = !DILocation(line: 237, column: 74, scope: !15706)
!15723 = !DILocation(line: 239, column: 12, scope: !15703)
!15724 = !DILocation(line: 239, column: 21, scope: !15703)
!15725 = !DILocation(line: 239, column: 27, scope: !15703)
!15726 = !DILocation(line: 239, column: 10, scope: !15703)
!15727 = !DILocation(line: 240, column: 11, scope: !15728)
!15728 = distinct !DILexicalBlock(scope: !15703, file: !900, line: 240, column: 11)
!15729 = !DILocation(line: 240, column: 14, scope: !15728)
!15730 = !DILocation(line: 240, column: 11, scope: !15703)
!15731 = !DILocation(line: 242, column: 11, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15728, file: !900, line: 241, column: 9)
!15733 = !DILocation(line: 243, column: 11, scope: !15732)
!15734 = !DILocation(line: 245, column: 16, scope: !15735)
!15735 = distinct !DILexicalBlock(scope: !15728, file: !900, line: 245, column: 16)
!15736 = !DILocation(line: 245, column: 22, scope: !15735)
!15737 = !DILocation(line: 245, column: 16, scope: !15728)
!15738 = !DILocation(line: 247, column: 14, scope: !15739)
!15739 = distinct !DILexicalBlock(scope: !15735, file: !900, line: 246, column: 9)
!15740 = !DILocation(line: 248, column: 11, scope: !15739)
!15741 = !DILocation(line: 250, column: 5, scope: !15703)
!15742 = !DILocation(line: 232, column: 37, scope: !15698)
!15743 = !DILocation(line: 232, column: 3, scope: !15698)
!15744 = distinct !{!15744, !15701, !15745}
!15745 = !DILocation(line: 250, column: 5, scope: !15695)
!15746 = !DILocation(line: 252, column: 21, scope: !15630)
!15747 = !DILocation(line: 252, column: 3, scope: !15630)
!15748 = !DILocation(line: 255, column: 3, scope: !15630)
!15749 = !DILocation(line: 256, column: 3, scope: !15630)
!15750 = !DILabel(scope: !15630, name: "done", file: !900, line: 258)
!15751 = !DILocation(line: 258, column: 2, scope: !15630)
!15752 = !DILocalVariable(name: "saved_errno", scope: !15753, file: !900, line: 260, type: !5)
!15753 = distinct !DILexicalBlock(scope: !15630, file: !900, line: 259, column: 3)
!15754 = !DILocation(line: 260, column: 9, scope: !15753)
!15755 = !DILocation(line: 260, column: 23, scope: !15753)
!15756 = !DILocation(line: 261, column: 23, scope: !15753)
!15757 = !DILocation(line: 261, column: 5, scope: !15753)
!15758 = !DILocation(line: 262, column: 5, scope: !15753)
!15759 = !DILocation(line: 264, column: 10, scope: !15630)
!15760 = !DILocation(line: 264, column: 3, scope: !15630)
!15761 = !DILocation(line: 265, column: 1, scope: !15630)
!15762 = distinct !DISubprogram(name: "check_x_suffix", scope: !900, file: !900, line: 178, type: !15763, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !885, retainedNodes: !213)
!15763 = !DISubroutineType(types: !15764)
!15764 = !{!139, !113, !52}
!15765 = !DILocalVariable(name: "s", arg: 1, scope: !15762, file: !900, line: 178, type: !113)
!15766 = !DILocation(line: 178, column: 29, scope: !15762)
!15767 = !DILocalVariable(name: "len", arg: 2, scope: !15762, file: !900, line: 178, type: !52)
!15768 = !DILocation(line: 178, column: 39, scope: !15762)
!15769 = !DILocation(line: 180, column: 10, scope: !15762)
!15770 = !DILocation(line: 180, column: 25, scope: !15762)
!15771 = !DILocation(line: 180, column: 17, scope: !15762)
!15772 = !DILocation(line: 180, column: 14, scope: !15762)
!15773 = !DILocation(line: 180, column: 3, scope: !15762)
!15774 = distinct !DISubprogram(name: "gen_tempname_len", scope: !900, file: !900, line: 307, type: !15775, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !885, retainedNodes: !213)
!15775 = !DISubroutineType(types: !15776)
!15776 = !{!5, !7, !5, !5, !5, !52}
!15777 = !DILocalVariable(name: "tmpl", arg: 1, scope: !15774, file: !900, line: 307, type: !7)
!15778 = !DILocation(line: 307, column: 25, scope: !15774)
!15779 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !15774, file: !900, line: 307, type: !5)
!15780 = !DILocation(line: 307, column: 35, scope: !15774)
!15781 = !DILocalVariable(name: "flags", arg: 3, scope: !15774, file: !900, line: 307, type: !5)
!15782 = !DILocation(line: 307, column: 50, scope: !15774)
!15783 = !DILocalVariable(name: "kind", arg: 4, scope: !15774, file: !900, line: 307, type: !5)
!15784 = !DILocation(line: 307, column: 61, scope: !15774)
!15785 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !15774, file: !900, line: 308, type: !52)
!15786 = !DILocation(line: 308, column: 26, scope: !15774)
!15787 = !DILocalVariable(name: "tryfunc", scope: !15774, file: !900, line: 310, type: !892)
!15788 = !DILocation(line: 310, column: 9, scope: !15774)
!15789 = !DILocation(line: 312, column: 11, scope: !15774)
!15790 = !DILocation(line: 312, column: 3, scope: !15774)
!15791 = !DILocation(line: 315, column: 15, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !15774, file: !900, line: 313, column: 5)
!15793 = !DILocation(line: 316, column: 7, scope: !15792)
!15794 = !DILocation(line: 319, column: 15, scope: !15792)
!15795 = !DILocation(line: 320, column: 7, scope: !15792)
!15796 = !DILocation(line: 323, column: 15, scope: !15792)
!15797 = !DILocation(line: 324, column: 7, scope: !15792)
!15798 = !DILocation(line: 327, column: 7, scope: !15792)
!15799 = !DILocation(line: 330, column: 28, scope: !15774)
!15800 = !DILocation(line: 330, column: 34, scope: !15774)
!15801 = !DILocation(line: 330, column: 45, scope: !15774)
!15802 = !DILocation(line: 330, column: 53, scope: !15774)
!15803 = !DILocation(line: 330, column: 62, scope: !15774)
!15804 = !DILocation(line: 330, column: 10, scope: !15774)
!15805 = !DILocation(line: 330, column: 3, scope: !15774)
!15806 = distinct !DISubprogram(name: "try_file", scope: !900, file: !900, line: 268, type: !893, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !885, retainedNodes: !213)
!15807 = !DILocalVariable(name: "tmpl", arg: 1, scope: !15806, file: !900, line: 268, type: !7)
!15808 = !DILocation(line: 268, column: 17, scope: !15806)
!15809 = !DILocalVariable(name: "flags", arg: 2, scope: !15806, file: !900, line: 268, type: !47)
!15810 = !DILocation(line: 268, column: 29, scope: !15806)
!15811 = !DILocalVariable(name: "openflags", scope: !15806, file: !900, line: 270, type: !158)
!15812 = !DILocation(line: 270, column: 8, scope: !15806)
!15813 = !DILocation(line: 270, column: 20, scope: !15806)
!15814 = !DILocation(line: 271, column: 18, scope: !15806)
!15815 = !DILocation(line: 272, column: 20, scope: !15806)
!15816 = !DILocation(line: 272, column: 19, scope: !15806)
!15817 = !DILocation(line: 272, column: 30, scope: !15806)
!15818 = !DILocation(line: 273, column: 18, scope: !15806)
!15819 = !DILocation(line: 273, column: 27, scope: !15806)
!15820 = !DILocation(line: 273, column: 37, scope: !15806)
!15821 = !DILocation(line: 271, column: 10, scope: !15806)
!15822 = !DILocation(line: 271, column: 3, scope: !15806)
!15823 = distinct !DISubprogram(name: "try_dir", scope: !900, file: !900, line: 277, type: !893, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !885, retainedNodes: !213)
!15824 = !DILocalVariable(name: "tmpl", arg: 1, scope: !15823, file: !900, line: 277, type: !7)
!15825 = !DILocation(line: 277, column: 16, scope: !15823)
!15826 = !DILocalVariable(name: "flags", arg: 2, scope: !15823, file: !900, line: 277, type: !47)
!15827 = !DILocation(line: 277, column: 28, scope: !15823)
!15828 = !DILocation(line: 279, column: 19, scope: !15823)
!15829 = !DILocation(line: 279, column: 10, scope: !15823)
!15830 = !DILocation(line: 279, column: 3, scope: !15823)
!15831 = distinct !DISubprogram(name: "try_nocreate", scope: !900, file: !900, line: 283, type: !893, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !885, retainedNodes: !213)
!15832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !15833)
!15833 = !{!15834, !15835, !15836, !15837, !15838, !15839, !15840, !15841, !15842, !15843, !15844, !15845, !15850, !15851, !15852}
!15834 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15832, file: !336, line: 48, baseType: !260, size: 64)
!15835 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15832, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!15836 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15832, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!15837 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15832, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!15838 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15832, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!15839 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15832, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!15840 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15832, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!15841 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15832, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!15842 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15832, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!15843 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15832, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!15844 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15832, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!15845 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15832, file: !336, line: 91, baseType: !15846, size: 128, offset: 576)
!15846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !15847)
!15847 = !{!15848, !15849}
!15848 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15846, file: !355, line: 122, baseType: !358, size: 64)
!15849 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15846, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!15850 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15832, file: !336, line: 92, baseType: !15846, size: 128, offset: 704)
!15851 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15832, file: !336, line: 93, baseType: !15846, size: 128, offset: 832)
!15852 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15832, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!15853 = !DILocalVariable(name: "tmpl", arg: 1, scope: !15831, file: !900, line: 283, type: !7)
!15854 = !DILocation(line: 283, column: 21, scope: !15831)
!15855 = !DILocalVariable(name: "flags", arg: 2, scope: !15831, file: !900, line: 283, type: !47)
!15856 = !DILocation(line: 283, column: 33, scope: !15831)
!15857 = !DILocalVariable(name: "st", scope: !15831, file: !900, line: 285, type: !15832)
!15858 = !DILocation(line: 285, column: 17, scope: !15831)
!15859 = !DILocation(line: 287, column: 7, scope: !15860)
!15860 = distinct !DILexicalBlock(scope: !15831, file: !900, line: 287, column: 7)
!15861 = !DILocation(line: 287, column: 41, scope: !15860)
!15862 = !DILocation(line: 287, column: 46, scope: !15860)
!15863 = !DILocation(line: 287, column: 49, scope: !15860)
!15864 = !DILocation(line: 287, column: 55, scope: !15860)
!15865 = !DILocation(line: 287, column: 7, scope: !15831)
!15866 = !DILocation(line: 288, column: 5, scope: !15860)
!15867 = !DILocation(line: 289, column: 10, scope: !15831)
!15868 = !DILocation(line: 289, column: 16, scope: !15831)
!15869 = !DILocation(line: 289, column: 3, scope: !15831)
!15870 = distinct !DISubprogram(name: "gen_tempname", scope: !900, file: !900, line: 334, type: !15871, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !885, retainedNodes: !213)
!15871 = !DISubroutineType(types: !15872)
!15872 = !{!5, !7, !5, !5, !5}
!15873 = !DILocalVariable(name: "tmpl", arg: 1, scope: !15870, file: !900, line: 334, type: !7)
!15874 = !DILocation(line: 334, column: 23, scope: !15870)
!15875 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !15870, file: !900, line: 334, type: !5)
!15876 = !DILocation(line: 334, column: 33, scope: !15870)
!15877 = !DILocalVariable(name: "flags", arg: 3, scope: !15870, file: !900, line: 334, type: !5)
!15878 = !DILocation(line: 334, column: 48, scope: !15870)
!15879 = !DILocalVariable(name: "kind", arg: 4, scope: !15870, file: !900, line: 334, type: !5)
!15880 = !DILocation(line: 334, column: 59, scope: !15870)
!15881 = !DILocation(line: 336, column: 28, scope: !15870)
!15882 = !DILocation(line: 336, column: 34, scope: !15870)
!15883 = !DILocation(line: 336, column: 45, scope: !15870)
!15884 = !DILocation(line: 336, column: 52, scope: !15870)
!15885 = !DILocation(line: 336, column: 10, scope: !15870)
!15886 = !DILocation(line: 336, column: 3, scope: !15870)
!15887 = distinct !DISubprogram(name: "try_tempname", scope: !900, file: !900, line: 340, type: !15888, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !885, retainedNodes: !213)
!15888 = !DISubroutineType(types: !15889)
!15889 = !{!5, !7, !5, !47, !892}
!15890 = !DILocalVariable(name: "tmpl", arg: 1, scope: !15887, file: !900, line: 340, type: !7)
!15891 = !DILocation(line: 340, column: 23, scope: !15887)
!15892 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !15887, file: !900, line: 340, type: !5)
!15893 = !DILocation(line: 340, column: 33, scope: !15887)
!15894 = !DILocalVariable(name: "args", arg: 3, scope: !15887, file: !900, line: 340, type: !47)
!15895 = !DILocation(line: 340, column: 50, scope: !15887)
!15896 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !15887, file: !900, line: 341, type: !892)
!15897 = !DILocation(line: 341, column: 23, scope: !15887)
!15898 = !DILocation(line: 343, column: 28, scope: !15887)
!15899 = !DILocation(line: 343, column: 34, scope: !15887)
!15900 = !DILocation(line: 343, column: 45, scope: !15887)
!15901 = !DILocation(line: 343, column: 51, scope: !15887)
!15902 = !DILocation(line: 343, column: 10, scope: !15887)
!15903 = !DILocation(line: 343, column: 3, scope: !15887)
!15904 = distinct !DISubprogram(name: "fd_safer", scope: !15905, file: !15905, line: 37, type: !14818, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1400, retainedNodes: !213)
!15905 = !DIFile(filename: "lib/fd-safer.c", directory: "/home/mohamad/clone/coreutils")
!15906 = !DILocalVariable(name: "fd", arg: 1, scope: !15904, file: !15905, line: 37, type: !5)
!15907 = !DILocation(line: 37, column: 15, scope: !15904)
!15908 = !DILocation(line: 39, column: 23, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !15904, file: !15905, line: 39, column: 7)
!15910 = !DILocation(line: 39, column: 20, scope: !15909)
!15911 = !DILocation(line: 39, column: 26, scope: !15909)
!15912 = !DILocation(line: 39, column: 29, scope: !15909)
!15913 = !DILocation(line: 39, column: 32, scope: !15909)
!15914 = !DILocation(line: 39, column: 7, scope: !15904)
!15915 = !DILocalVariable(name: "f", scope: !15916, file: !15905, line: 41, type: !5)
!15916 = distinct !DILexicalBlock(scope: !15909, file: !15905, line: 40, column: 5)
!15917 = !DILocation(line: 41, column: 11, scope: !15916)
!15918 = !DILocation(line: 41, column: 26, scope: !15916)
!15919 = !DILocation(line: 41, column: 15, scope: !15916)
!15920 = !DILocalVariable(name: "e", scope: !15916, file: !15905, line: 42, type: !5)
!15921 = !DILocation(line: 42, column: 11, scope: !15916)
!15922 = !DILocation(line: 42, column: 15, scope: !15916)
!15923 = !DILocation(line: 43, column: 14, scope: !15916)
!15924 = !DILocation(line: 43, column: 7, scope: !15916)
!15925 = !DILocation(line: 44, column: 15, scope: !15916)
!15926 = !DILocation(line: 44, column: 7, scope: !15916)
!15927 = !DILocation(line: 44, column: 13, scope: !15916)
!15928 = !DILocation(line: 45, column: 12, scope: !15916)
!15929 = !DILocation(line: 45, column: 10, scope: !15916)
!15930 = !DILocation(line: 46, column: 5, scope: !15916)
!15931 = !DILocation(line: 48, column: 10, scope: !15904)
!15932 = !DILocation(line: 48, column: 3, scope: !15904)
!15933 = distinct !DISubprogram(name: "utimecmp", scope: !904, file: !904, line: 123, type: !15934, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !930, retainedNodes: !213)
!15934 = !DISubroutineType(types: !15935)
!15935 = !{!5, !113, !907, !907, !5}
!15936 = !DILocalVariable(name: "dst_name", arg: 1, scope: !15933, file: !904, line: 123, type: !113)
!15937 = !DILocation(line: 123, column: 23, scope: !15933)
!15938 = !DILocalVariable(name: "dst_stat", arg: 2, scope: !15933, file: !904, line: 124, type: !907)
!15939 = !DILocation(line: 124, column: 30, scope: !15933)
!15940 = !DILocalVariable(name: "src_stat", arg: 3, scope: !15933, file: !904, line: 125, type: !907)
!15941 = !DILocation(line: 125, column: 30, scope: !15933)
!15942 = !DILocalVariable(name: "options", arg: 4, scope: !15933, file: !904, line: 126, type: !5)
!15943 = !DILocation(line: 126, column: 15, scope: !15933)
!15944 = !DILocation(line: 128, column: 32, scope: !15933)
!15945 = !DILocation(line: 128, column: 42, scope: !15933)
!15946 = !DILocation(line: 128, column: 52, scope: !15933)
!15947 = !DILocation(line: 128, column: 62, scope: !15933)
!15948 = !DILocation(line: 128, column: 10, scope: !15933)
!15949 = !DILocation(line: 128, column: 3, scope: !15933)
!15950 = !DILocalVariable(name: "dfd", arg: 1, scope: !903, file: !904, line: 132, type: !5)
!15951 = !DILocation(line: 132, column: 17, scope: !903)
!15952 = !DILocalVariable(name: "dst_name", arg: 2, scope: !903, file: !904, line: 132, type: !113)
!15953 = !DILocation(line: 132, column: 34, scope: !903)
!15954 = !DILocalVariable(name: "dst_stat", arg: 3, scope: !903, file: !904, line: 133, type: !907)
!15955 = !DILocation(line: 133, column: 32, scope: !903)
!15956 = !DILocalVariable(name: "src_stat", arg: 4, scope: !903, file: !904, line: 134, type: !907)
!15957 = !DILocation(line: 134, column: 32, scope: !903)
!15958 = !DILocalVariable(name: "options", arg: 5, scope: !903, file: !904, line: 135, type: !5)
!15959 = !DILocation(line: 135, column: 17, scope: !903)
!15960 = !DILocalVariable(name: "dst_s", scope: !903, file: !904, line: 153, type: !933)
!15961 = !DILocation(line: 153, column: 10, scope: !903)
!15962 = !DILocation(line: 153, column: 18, scope: !903)
!15963 = !DILocation(line: 153, column: 28, scope: !903)
!15964 = !DILocalVariable(name: "src_s", scope: !903, file: !904, line: 154, type: !933)
!15965 = !DILocation(line: 154, column: 10, scope: !903)
!15966 = !DILocation(line: 154, column: 18, scope: !903)
!15967 = !DILocation(line: 154, column: 28, scope: !903)
!15968 = !DILocalVariable(name: "dst_ns", scope: !903, file: !904, line: 155, type: !5)
!15969 = !DILocation(line: 155, column: 7, scope: !903)
!15970 = !DILocation(line: 155, column: 35, scope: !903)
!15971 = !DILocation(line: 155, column: 16, scope: !903)
!15972 = !DILocalVariable(name: "src_ns", scope: !903, file: !904, line: 156, type: !5)
!15973 = !DILocation(line: 156, column: 7, scope: !903)
!15974 = !DILocation(line: 156, column: 35, scope: !903)
!15975 = !DILocation(line: 156, column: 16, scope: !903)
!15976 = !DILocation(line: 158, column: 7, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !903, file: !904, line: 158, column: 7)
!15978 = !DILocation(line: 158, column: 15, scope: !15977)
!15979 = !DILocation(line: 158, column: 7, scope: !903)
!15980 = !DILocalVariable(name: "dst_res", scope: !15981, file: !904, line: 167, type: !934)
!15981 = distinct !DILexicalBlock(scope: !15977, file: !904, line: 159, column: 5)
!15982 = !DILocation(line: 167, column: 22, scope: !15981)
!15983 = !DILocalVariable(name: "tmp_dst_res", scope: !15981, file: !904, line: 168, type: !935)
!15984 = !DILocation(line: 168, column: 21, scope: !15981)
!15985 = !DILocalVariable(name: "res", scope: !15981, file: !904, line: 171, type: !5)
!15986 = !DILocation(line: 171, column: 11, scope: !15981)
!15987 = !DILocation(line: 176, column: 11, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15981, file: !904, line: 176, column: 11)
!15989 = !DILocation(line: 176, column: 20, scope: !15988)
!15990 = !DILocation(line: 176, column: 17, scope: !15988)
!15991 = !DILocation(line: 176, column: 26, scope: !15988)
!15992 = !DILocation(line: 176, column: 29, scope: !15988)
!15993 = !DILocation(line: 176, column: 39, scope: !15988)
!15994 = !DILocation(line: 176, column: 36, scope: !15988)
!15995 = !DILocation(line: 176, column: 11, scope: !15981)
!15996 = !DILocation(line: 177, column: 9, scope: !15988)
!15997 = !DILocation(line: 178, column: 11, scope: !15998)
!15998 = distinct !DILexicalBlock(scope: !15981, file: !904, line: 178, column: 11)
!15999 = !DILocation(line: 178, column: 20, scope: !15998)
!16000 = !DILocation(line: 178, column: 26, scope: !15998)
!16001 = !DILocation(line: 178, column: 17, scope: !15998)
!16002 = !DILocation(line: 178, column: 11, scope: !15981)
!16003 = !DILocation(line: 179, column: 9, scope: !15998)
!16004 = !DILocation(line: 180, column: 11, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !15981, file: !904, line: 180, column: 11)
!16006 = !DILocation(line: 180, column: 20, scope: !16005)
!16007 = !DILocation(line: 180, column: 26, scope: !16005)
!16008 = !DILocation(line: 180, column: 17, scope: !16005)
!16009 = !DILocation(line: 180, column: 11, scope: !15981)
!16010 = !DILocation(line: 181, column: 9, scope: !16005)
!16011 = !DILocation(line: 185, column: 13, scope: !16012)
!16012 = distinct !DILexicalBlock(scope: !15981, file: !904, line: 185, column: 11)
!16013 = !DILocation(line: 185, column: 11, scope: !15981)
!16014 = !DILocation(line: 186, column: 14, scope: !16012)
!16015 = !DILocation(line: 186, column: 12, scope: !16012)
!16016 = !DILocation(line: 186, column: 9, scope: !16012)
!16017 = !DILocation(line: 187, column: 11, scope: !16018)
!16018 = distinct !DILexicalBlock(scope: !15981, file: !904, line: 187, column: 11)
!16019 = !DILocation(line: 187, column: 11, scope: !15981)
!16020 = !DILocation(line: 189, column: 17, scope: !16021)
!16021 = distinct !DILexicalBlock(scope: !16022, file: !904, line: 189, column: 15)
!16022 = distinct !DILexicalBlock(scope: !16018, file: !904, line: 188, column: 9)
!16023 = !DILocation(line: 189, column: 15, scope: !16022)
!16024 = !DILocation(line: 191, column: 29, scope: !16025)
!16025 = distinct !DILexicalBlock(scope: !16021, file: !904, line: 190, column: 13)
!16026 = !DILocation(line: 191, column: 27, scope: !16025)
!16027 = !DILocation(line: 192, column: 20, scope: !16028)
!16028 = distinct !DILexicalBlock(scope: !16025, file: !904, line: 192, column: 19)
!16029 = !DILocation(line: 192, column: 19, scope: !16025)
!16030 = !DILocation(line: 193, column: 17, scope: !16028)
!16031 = !DILocation(line: 194, column: 15, scope: !16025)
!16032 = !DILocation(line: 194, column: 28, scope: !16025)
!16033 = !DILocation(line: 194, column: 39, scope: !16025)
!16034 = !DILocation(line: 195, column: 15, scope: !16025)
!16035 = !DILocation(line: 195, column: 28, scope: !16025)
!16036 = !DILocation(line: 195, column: 34, scope: !16025)
!16037 = !DILocation(line: 196, column: 13, scope: !16025)
!16038 = !DILocation(line: 197, column: 30, scope: !16022)
!16039 = !DILocation(line: 197, column: 40, scope: !16022)
!16040 = !DILocation(line: 197, column: 11, scope: !16022)
!16041 = !DILocation(line: 197, column: 24, scope: !16022)
!16042 = !DILocation(line: 197, column: 28, scope: !16022)
!16043 = !DILocation(line: 198, column: 34, scope: !16022)
!16044 = !DILocation(line: 198, column: 38, scope: !16022)
!16045 = !DILocation(line: 198, column: 21, scope: !16022)
!16046 = !DILocation(line: 198, column: 19, scope: !16022)
!16047 = !DILocation(line: 199, column: 17, scope: !16048)
!16048 = distinct !DILexicalBlock(scope: !16022, file: !904, line: 199, column: 15)
!16049 = !DILocation(line: 199, column: 15, scope: !16022)
!16050 = !DILocation(line: 200, column: 13, scope: !16048)
!16051 = !DILocation(line: 202, column: 15, scope: !16052)
!16052 = distinct !DILexicalBlock(scope: !16022, file: !904, line: 202, column: 15)
!16053 = !DILocation(line: 202, column: 26, scope: !16052)
!16054 = !DILocation(line: 202, column: 23, scope: !16052)
!16055 = !DILocation(line: 202, column: 15, scope: !16022)
!16056 = !DILocation(line: 206, column: 27, scope: !16057)
!16057 = distinct !DILexicalBlock(scope: !16052, file: !904, line: 203, column: 13)
!16058 = !DILocation(line: 207, column: 13, scope: !16057)
!16059 = !DILocation(line: 208, column: 9, scope: !16022)
!16060 = !DILocation(line: 210, column: 9, scope: !16018)
!16061 = !DILabel(scope: !16062, name: "low_memory", file: !904, line: 211)
!16062 = distinct !DILexicalBlock(scope: !16018, file: !904, line: 210, column: 9)
!16063 = !DILocation(line: 211, column: 9, scope: !16062)
!16064 = !DILocation(line: 212, column: 15, scope: !16065)
!16065 = distinct !DILexicalBlock(scope: !16062, file: !904, line: 212, column: 15)
!16066 = !DILocation(line: 212, column: 15, scope: !16062)
!16067 = !DILocation(line: 214, column: 33, scope: !16068)
!16068 = distinct !DILexicalBlock(scope: !16065, file: !904, line: 213, column: 13)
!16069 = !DILocation(line: 214, column: 43, scope: !16068)
!16070 = !DILocation(line: 214, column: 27, scope: !16068)
!16071 = !DILocation(line: 214, column: 31, scope: !16068)
!16072 = !DILocation(line: 215, column: 38, scope: !16068)
!16073 = !DILocation(line: 215, column: 42, scope: !16068)
!16074 = !DILocation(line: 215, column: 25, scope: !16068)
!16075 = !DILocation(line: 215, column: 23, scope: !16068)
!16076 = !DILocation(line: 216, column: 13, scope: !16068)
!16077 = !DILocation(line: 217, column: 16, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16062, file: !904, line: 217, column: 15)
!16079 = !DILocation(line: 217, column: 15, scope: !16062)
!16080 = !DILocation(line: 219, column: 23, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16078, file: !904, line: 218, column: 13)
!16082 = !DILocation(line: 220, column: 15, scope: !16081)
!16083 = !DILocation(line: 220, column: 24, scope: !16081)
!16084 = !DILocation(line: 220, column: 35, scope: !16081)
!16085 = !DILocation(line: 221, column: 15, scope: !16081)
!16086 = !DILocation(line: 221, column: 24, scope: !16081)
!16087 = !DILocation(line: 221, column: 30, scope: !16081)
!16088 = !DILocation(line: 222, column: 13, scope: !16081)
!16089 = !DILocation(line: 225, column: 13, scope: !15981)
!16090 = !DILocation(line: 225, column: 22, scope: !15981)
!16091 = !DILocation(line: 225, column: 11, scope: !15981)
!16092 = !DILocation(line: 257, column: 13, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !15981, file: !904, line: 257, column: 11)
!16094 = !DILocation(line: 257, column: 22, scope: !16093)
!16095 = !DILocation(line: 257, column: 11, scope: !15981)
!16096 = !DILocalVariable(name: "dst_a_s", scope: !16097, file: !904, line: 262, type: !933)
!16097 = distinct !DILexicalBlock(scope: !16093, file: !904, line: 258, column: 9)
!16098 = !DILocation(line: 262, column: 18, scope: !16097)
!16099 = !DILocation(line: 262, column: 28, scope: !16097)
!16100 = !DILocation(line: 262, column: 38, scope: !16097)
!16101 = !DILocalVariable(name: "dst_c_s", scope: !16097, file: !904, line: 263, type: !933)
!16102 = !DILocation(line: 263, column: 18, scope: !16097)
!16103 = !DILocation(line: 263, column: 28, scope: !16097)
!16104 = !DILocation(line: 263, column: 38, scope: !16097)
!16105 = !DILocalVariable(name: "dst_m_s", scope: !16097, file: !904, line: 264, type: !933)
!16106 = !DILocation(line: 264, column: 18, scope: !16097)
!16107 = !DILocation(line: 264, column: 28, scope: !16097)
!16108 = !DILocalVariable(name: "dst_a_ns", scope: !16097, file: !904, line: 265, type: !5)
!16109 = !DILocation(line: 265, column: 15, scope: !16097)
!16110 = !DILocation(line: 265, column: 45, scope: !16097)
!16111 = !DILocation(line: 265, column: 26, scope: !16097)
!16112 = !DILocalVariable(name: "dst_c_ns", scope: !16097, file: !904, line: 266, type: !5)
!16113 = !DILocation(line: 266, column: 15, scope: !16097)
!16114 = !DILocation(line: 266, column: 45, scope: !16097)
!16115 = !DILocation(line: 266, column: 26, scope: !16097)
!16116 = !DILocalVariable(name: "dst_m_ns", scope: !16097, file: !904, line: 267, type: !5)
!16117 = !DILocation(line: 267, column: 15, scope: !16097)
!16118 = !DILocation(line: 267, column: 26, scope: !16097)
!16119 = !DILocalVariable(name: "odd_second", scope: !16120, file: !904, line: 276, type: !139)
!16120 = distinct !DILexicalBlock(scope: !16097, file: !904, line: 275, column: 11)
!16121 = !DILocation(line: 276, column: 18, scope: !16120)
!16122 = !DILocation(line: 276, column: 32, scope: !16120)
!16123 = !DILocation(line: 276, column: 42, scope: !16120)
!16124 = !DILocation(line: 276, column: 40, scope: !16120)
!16125 = !DILocation(line: 276, column: 52, scope: !16120)
!16126 = !DILocation(line: 276, column: 50, scope: !16120)
!16127 = !DILocation(line: 276, column: 61, scope: !16120)
!16128 = !DILocation(line: 276, column: 31, scope: !16120)
!16129 = !DILocalVariable(name: "a", scope: !16130, file: !904, line: 285, type: !5)
!16130 = distinct !DILexicalBlock(scope: !16131, file: !904, line: 284, column: 15)
!16131 = distinct !DILexicalBlock(scope: !16120, file: !904, line: 278, column: 17)
!16132 = !DILocation(line: 285, column: 21, scope: !16130)
!16133 = !DILocation(line: 285, column: 25, scope: !16130)
!16134 = !DILocalVariable(name: "c", scope: !16130, file: !904, line: 286, type: !5)
!16135 = !DILocation(line: 286, column: 21, scope: !16130)
!16136 = !DILocation(line: 286, column: 25, scope: !16130)
!16137 = !DILocalVariable(name: "m", scope: !16130, file: !904, line: 287, type: !5)
!16138 = !DILocation(line: 287, column: 21, scope: !16130)
!16139 = !DILocation(line: 287, column: 25, scope: !16130)
!16140 = !DILocalVariable(name: "SR10", scope: !16130, file: !904, line: 291, type: !5)
!16141 = !DILocation(line: 291, column: 21, scope: !16130)
!16142 = !DILocation(line: 291, column: 54, scope: !16130)
!16143 = !DILocation(line: 293, column: 22, scope: !16144)
!16144 = distinct !DILexicalBlock(scope: !16130, file: !904, line: 293, column: 21)
!16145 = !DILocation(line: 293, column: 26, scope: !16144)
!16146 = !DILocation(line: 293, column: 24, scope: !16144)
!16147 = !DILocation(line: 293, column: 33, scope: !16144)
!16148 = !DILocation(line: 293, column: 37, scope: !16144)
!16149 = !DILocation(line: 293, column: 35, scope: !16144)
!16150 = !DILocation(line: 293, column: 31, scope: !16144)
!16151 = !DILocation(line: 293, column: 44, scope: !16144)
!16152 = !DILocation(line: 293, column: 48, scope: !16144)
!16153 = !DILocation(line: 293, column: 46, scope: !16144)
!16154 = !DILocation(line: 293, column: 42, scope: !16144)
!16155 = !DILocation(line: 293, column: 54, scope: !16144)
!16156 = !DILocation(line: 293, column: 21, scope: !16130)
!16157 = !DILocation(line: 294, column: 23, scope: !16144)
!16158 = !DILocation(line: 294, column: 19, scope: !16144)
!16159 = !DILocation(line: 296, column: 30, scope: !16160)
!16160 = distinct !DILexicalBlock(scope: !16144, file: !904, line: 296, column: 19)
!16161 = !DILocation(line: 296, column: 28, scope: !16160)
!16162 = !DILocation(line: 296, column: 41, scope: !16160)
!16163 = !DILocation(line: 296, column: 38, scope: !16160)
!16164 = !DILocation(line: 296, column: 52, scope: !16160)
!16165 = !DILocation(line: 296, column: 49, scope: !16160)
!16166 = !DILocation(line: 296, column: 63, scope: !16160)
!16167 = !DILocation(line: 296, column: 60, scope: !16160)
!16168 = !DILocation(line: 296, column: 24, scope: !16160)
!16169 = !DILocation(line: 297, column: 25, scope: !16170)
!16170 = distinct !DILexicalBlock(scope: !16160, file: !904, line: 296, column: 19)
!16171 = !DILocation(line: 297, column: 31, scope: !16170)
!16172 = !DILocation(line: 297, column: 40, scope: !16170)
!16173 = !DILocation(line: 297, column: 29, scope: !16170)
!16174 = !DILocation(line: 298, column: 25, scope: !16170)
!16175 = !DILocation(line: 298, column: 29, scope: !16170)
!16176 = !DILocation(line: 298, column: 31, scope: !16170)
!16177 = !DILocation(line: 298, column: 38, scope: !16170)
!16178 = !DILocation(line: 298, column: 40, scope: !16170)
!16179 = !DILocation(line: 298, column: 36, scope: !16170)
!16180 = !DILocation(line: 298, column: 47, scope: !16170)
!16181 = !DILocation(line: 298, column: 49, scope: !16170)
!16182 = !DILocation(line: 298, column: 45, scope: !16170)
!16183 = !DILocation(line: 298, column: 55, scope: !16170)
!16184 = !DILocation(line: 0, scope: !16170)
!16185 = !DILocation(line: 296, column: 19, scope: !16160)
!16186 = !DILocation(line: 300, column: 25, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16170, file: !904, line: 300, column: 25)
!16188 = !DILocation(line: 300, column: 29, scope: !16187)
!16189 = !DILocation(line: 300, column: 25, scope: !16170)
!16190 = !DILocation(line: 302, column: 31, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16192, file: !904, line: 302, column: 29)
!16192 = distinct !DILexicalBlock(scope: !16187, file: !904, line: 301, column: 23)
!16193 = !DILocation(line: 302, column: 29, scope: !16192)
!16194 = !DILocation(line: 303, column: 31, scope: !16191)
!16195 = !DILocation(line: 303, column: 27, scope: !16191)
!16196 = !DILocation(line: 304, column: 25, scope: !16192)
!16197 = !DILocation(line: 300, column: 32, scope: !16187)
!16198 = !DILocation(line: 299, column: 28, scope: !16170)
!16199 = !DILocation(line: 299, column: 37, scope: !16170)
!16200 = !DILocation(line: 299, column: 46, scope: !16170)
!16201 = !DILocation(line: 299, column: 55, scope: !16170)
!16202 = !DILocation(line: 296, column: 19, scope: !16170)
!16203 = distinct !{!16203, !16185, !16204}
!16204 = !DILocation(line: 305, column: 23, scope: !16160)
!16205 = !DILocation(line: 308, column: 35, scope: !16120)
!16206 = !DILocation(line: 308, column: 13, scope: !16120)
!16207 = !DILocation(line: 308, column: 22, scope: !16120)
!16208 = !DILocation(line: 308, column: 33, scope: !16120)
!16209 = !DILocation(line: 311, column: 36, scope: !16210)
!16210 = distinct !DILexicalBlock(scope: !16097, file: !904, line: 311, column: 15)
!16211 = !DILocation(line: 311, column: 34, scope: !16210)
!16212 = !DILocation(line: 311, column: 15, scope: !16097)
!16213 = !DILocalVariable(name: "timespec", scope: !16214, file: !904, line: 313, type: !940)
!16214 = distinct !DILexicalBlock(scope: !16210, file: !904, line: 312, column: 13)
!16215 = !DILocation(line: 313, column: 31, scope: !16214)
!16216 = !DILocalVariable(name: "dst_status", scope: !16214, file: !904, line: 314, type: !909)
!16217 = !DILocation(line: 314, column: 27, scope: !16214)
!16218 = !DILocation(line: 318, column: 25, scope: !16214)
!16219 = !DILocation(line: 318, column: 32, scope: !16214)
!16220 = !DILocation(line: 318, column: 22, scope: !16214)
!16221 = !DILocalVariable(name: "s", scope: !16222, file: !904, line: 324, type: !933)
!16222 = distinct !DILexicalBlock(scope: !16214, file: !904, line: 323, column: 15)
!16223 = !DILocation(line: 324, column: 24, scope: !16222)
!16224 = !DILocation(line: 324, column: 28, scope: !16222)
!16225 = !DILocation(line: 324, column: 39, scope: !16222)
!16226 = !DILocation(line: 324, column: 43, scope: !16222)
!16227 = !DILocation(line: 324, column: 36, scope: !16222)
!16228 = !DILocation(line: 324, column: 34, scope: !16222)
!16229 = !DILocation(line: 325, column: 21, scope: !16230)
!16230 = distinct !DILexicalBlock(scope: !16222, file: !904, line: 325, column: 21)
!16231 = !DILocation(line: 325, column: 29, scope: !16230)
!16232 = !DILocation(line: 325, column: 27, scope: !16230)
!16233 = !DILocation(line: 325, column: 35, scope: !16230)
!16234 = !DILocation(line: 325, column: 39, scope: !16230)
!16235 = !DILocation(line: 325, column: 48, scope: !16230)
!16236 = !DILocation(line: 325, column: 45, scope: !16230)
!16237 = !DILocation(line: 325, column: 54, scope: !16230)
!16238 = !DILocation(line: 325, column: 57, scope: !16230)
!16239 = !DILocation(line: 325, column: 67, scope: !16230)
!16240 = !DILocation(line: 325, column: 64, scope: !16230)
!16241 = !DILocation(line: 325, column: 21, scope: !16222)
!16242 = !DILocation(line: 326, column: 19, scope: !16230)
!16243 = !DILocation(line: 327, column: 21, scope: !16244)
!16244 = distinct !DILexicalBlock(scope: !16222, file: !904, line: 327, column: 21)
!16245 = !DILocation(line: 327, column: 29, scope: !16244)
!16246 = !DILocation(line: 327, column: 27, scope: !16244)
!16247 = !DILocation(line: 328, column: 21, scope: !16244)
!16248 = !DILocation(line: 328, column: 25, scope: !16244)
!16249 = !DILocation(line: 328, column: 34, scope: !16244)
!16250 = !DILocation(line: 328, column: 31, scope: !16244)
!16251 = !DILocation(line: 328, column: 36, scope: !16244)
!16252 = !DILocation(line: 328, column: 39, scope: !16244)
!16253 = !DILocation(line: 328, column: 48, scope: !16244)
!16254 = !DILocation(line: 328, column: 57, scope: !16244)
!16255 = !DILocation(line: 328, column: 66, scope: !16244)
!16256 = !DILocation(line: 328, column: 64, scope: !16244)
!16257 = !DILocation(line: 328, column: 55, scope: !16244)
!16258 = !DILocation(line: 328, column: 46, scope: !16244)
!16259 = !DILocation(line: 327, column: 21, scope: !16222)
!16260 = !DILocation(line: 329, column: 19, scope: !16244)
!16261 = !DILocation(line: 338, column: 36, scope: !16214)
!16262 = !DILocation(line: 338, column: 15, scope: !16214)
!16263 = !DILocation(line: 338, column: 27, scope: !16214)
!16264 = !DILocation(line: 338, column: 34, scope: !16214)
!16265 = !DILocation(line: 339, column: 37, scope: !16214)
!16266 = !DILocation(line: 339, column: 15, scope: !16214)
!16267 = !DILocation(line: 339, column: 27, scope: !16214)
!16268 = !DILocation(line: 339, column: 35, scope: !16214)
!16269 = !DILocation(line: 340, column: 36, scope: !16214)
!16270 = !DILocation(line: 340, column: 47, scope: !16214)
!16271 = !DILocation(line: 340, column: 51, scope: !16214)
!16272 = !DILocation(line: 340, column: 46, scope: !16214)
!16273 = !DILocation(line: 340, column: 44, scope: !16214)
!16274 = !DILocation(line: 340, column: 15, scope: !16214)
!16275 = !DILocation(line: 340, column: 27, scope: !16214)
!16276 = !DILocation(line: 340, column: 34, scope: !16214)
!16277 = !DILocation(line: 341, column: 37, scope: !16214)
!16278 = !DILocation(line: 341, column: 48, scope: !16214)
!16279 = !DILocation(line: 341, column: 52, scope: !16214)
!16280 = !DILocation(line: 341, column: 46, scope: !16214)
!16281 = !DILocation(line: 341, column: 15, scope: !16214)
!16282 = !DILocation(line: 341, column: 27, scope: !16214)
!16283 = !DILocation(line: 341, column: 35, scope: !16214)
!16284 = !DILocation(line: 343, column: 30, scope: !16285)
!16285 = distinct !DILexicalBlock(scope: !16214, file: !904, line: 343, column: 19)
!16286 = !DILocation(line: 343, column: 35, scope: !16285)
!16287 = !DILocation(line: 343, column: 45, scope: !16285)
!16288 = !DILocation(line: 343, column: 19, scope: !16285)
!16289 = !DILocation(line: 343, column: 19, scope: !16214)
!16290 = !DILocation(line: 344, column: 17, scope: !16285)
!16291 = !DILocalVariable(name: "stat_result", scope: !16292, file: !904, line: 348, type: !5)
!16292 = distinct !DILexicalBlock(scope: !16214, file: !904, line: 347, column: 15)
!16293 = !DILocation(line: 348, column: 21, scope: !16292)
!16294 = !DILocation(line: 349, column: 30, scope: !16292)
!16295 = !DILocation(line: 349, column: 35, scope: !16292)
!16296 = !DILocation(line: 349, column: 21, scope: !16292)
!16297 = !DILocation(line: 351, column: 21, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !16292, file: !904, line: 351, column: 21)
!16299 = !DILocation(line: 352, column: 35, scope: !16298)
!16300 = !DILocation(line: 352, column: 46, scope: !16298)
!16301 = !DILocation(line: 352, column: 44, scope: !16298)
!16302 = !DILocation(line: 352, column: 21, scope: !16298)
!16303 = !DILocation(line: 353, column: 24, scope: !16298)
!16304 = !DILocation(line: 353, column: 58, scope: !16298)
!16305 = !DILocation(line: 353, column: 56, scope: !16298)
!16306 = !DILocation(line: 353, column: 21, scope: !16298)
!16307 = !DILocation(line: 351, column: 21, scope: !16292)
!16308 = !DILocation(line: 357, column: 42, scope: !16309)
!16309 = distinct !DILexicalBlock(scope: !16298, file: !904, line: 354, column: 19)
!16310 = !DILocation(line: 357, column: 21, scope: !16309)
!16311 = !DILocation(line: 357, column: 33, scope: !16309)
!16312 = !DILocation(line: 357, column: 40, scope: !16309)
!16313 = !DILocation(line: 358, column: 43, scope: !16309)
!16314 = !DILocation(line: 358, column: 21, scope: !16309)
!16315 = !DILocation(line: 358, column: 33, scope: !16309)
!16316 = !DILocation(line: 358, column: 41, scope: !16309)
!16317 = !DILocation(line: 359, column: 32, scope: !16309)
!16318 = !DILocation(line: 359, column: 37, scope: !16309)
!16319 = !DILocation(line: 359, column: 47, scope: !16309)
!16320 = !DILocation(line: 359, column: 21, scope: !16309)
!16321 = !DILocation(line: 360, column: 19, scope: !16309)
!16322 = !DILocation(line: 362, column: 21, scope: !16323)
!16323 = distinct !DILexicalBlock(scope: !16292, file: !904, line: 362, column: 21)
!16324 = !DILocation(line: 362, column: 33, scope: !16323)
!16325 = !DILocation(line: 362, column: 21, scope: !16292)
!16326 = !DILocation(line: 363, column: 19, scope: !16323)
!16327 = !DILocalVariable(name: "old_res", scope: !16328, file: !904, line: 369, type: !5)
!16328 = distinct !DILexicalBlock(scope: !16214, file: !904, line: 368, column: 15)
!16329 = !DILocation(line: 369, column: 21, scope: !16328)
!16330 = !DILocation(line: 369, column: 31, scope: !16328)
!16331 = !DILocalVariable(name: "a", scope: !16328, file: !904, line: 370, type: !5)
!16332 = !DILocation(line: 370, column: 21, scope: !16328)
!16333 = !DILocation(line: 370, column: 48, scope: !16328)
!16334 = !DILocation(line: 370, column: 57, scope: !16328)
!16335 = !DILocation(line: 370, column: 34, scope: !16328)
!16336 = !DILocation(line: 371, column: 28, scope: !16328)
!16337 = !DILocation(line: 371, column: 26, scope: !16328)
!16338 = !DILocation(line: 370, column: 25, scope: !16328)
!16339 = !DILocation(line: 373, column: 21, scope: !16328)
!16340 = !DILocation(line: 375, column: 27, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16328, file: !904, line: 375, column: 17)
!16342 = !DILocation(line: 375, column: 24, scope: !16341)
!16343 = !DILocation(line: 375, column: 22, scope: !16341)
!16344 = !DILocation(line: 375, column: 32, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16341, file: !904, line: 375, column: 17)
!16346 = !DILocation(line: 375, column: 34, scope: !16345)
!16347 = !DILocation(line: 375, column: 39, scope: !16345)
!16348 = !DILocation(line: 375, column: 17, scope: !16341)
!16349 = !DILocation(line: 377, column: 25, scope: !16350)
!16350 = distinct !DILexicalBlock(scope: !16351, file: !904, line: 377, column: 25)
!16351 = distinct !DILexicalBlock(scope: !16345, file: !904, line: 376, column: 19)
!16352 = !DILocation(line: 377, column: 29, scope: !16350)
!16353 = !DILocation(line: 377, column: 25, scope: !16351)
!16354 = !DILocation(line: 379, column: 29, scope: !16355)
!16355 = distinct !DILexicalBlock(scope: !16350, file: !904, line: 378, column: 23)
!16356 = !DILocation(line: 380, column: 25, scope: !16355)
!16357 = !DILocation(line: 382, column: 25, scope: !16351)
!16358 = !DILocation(line: 383, column: 25, scope: !16359)
!16359 = distinct !DILexicalBlock(scope: !16351, file: !904, line: 383, column: 25)
!16360 = !DILocation(line: 383, column: 32, scope: !16359)
!16361 = !DILocation(line: 383, column: 29, scope: !16359)
!16362 = !DILocation(line: 383, column: 25, scope: !16351)
!16363 = !DILocation(line: 384, column: 23, scope: !16359)
!16364 = !DILocation(line: 385, column: 19, scope: !16351)
!16365 = !DILocation(line: 375, column: 47, scope: !16345)
!16366 = !DILocation(line: 375, column: 17, scope: !16345)
!16367 = distinct !{!16367, !16348, !16368}
!16368 = !DILocation(line: 385, column: 19, scope: !16341)
!16369 = !DILocation(line: 387, column: 13, scope: !16214)
!16370 = !DILocation(line: 389, column: 33, scope: !16097)
!16371 = !DILocation(line: 389, column: 11, scope: !16097)
!16372 = !DILocation(line: 389, column: 20, scope: !16097)
!16373 = !DILocation(line: 389, column: 31, scope: !16097)
!16374 = !DILocation(line: 390, column: 11, scope: !16097)
!16375 = !DILocation(line: 390, column: 20, scope: !16097)
!16376 = !DILocation(line: 390, column: 26, scope: !16097)
!16377 = !DILocation(line: 391, column: 9, scope: !16097)
!16378 = !DILocation(line: 394, column: 19, scope: !15981)
!16379 = !DILocation(line: 394, column: 23, scope: !15981)
!16380 = !DILocation(line: 394, column: 16, scope: !15981)
!16381 = !DILocation(line: 394, column: 13, scope: !15981)
!16382 = !DILocation(line: 395, column: 17, scope: !15981)
!16383 = !DILocation(line: 395, column: 26, scope: !15981)
!16384 = !DILocation(line: 395, column: 24, scope: !15981)
!16385 = !DILocation(line: 395, column: 14, scope: !15981)
!16386 = !DILocation(line: 396, column: 5, scope: !15981)
!16387 = !DILocation(line: 399, column: 11, scope: !903)
!16388 = !DILocation(line: 399, column: 19, scope: !903)
!16389 = !DILocation(line: 399, column: 17, scope: !903)
!16390 = !DILocation(line: 400, column: 13, scope: !903)
!16391 = !DILocation(line: 400, column: 21, scope: !903)
!16392 = !DILocation(line: 400, column: 19, scope: !903)
!16393 = !DILocation(line: 401, column: 13, scope: !903)
!16394 = !DILocation(line: 401, column: 22, scope: !903)
!16395 = !DILocation(line: 401, column: 20, scope: !903)
!16396 = !DILocation(line: 402, column: 13, scope: !903)
!16397 = !DILocation(line: 402, column: 22, scope: !903)
!16398 = !DILocation(line: 402, column: 20, scope: !903)
!16399 = !DILocation(line: 399, column: 3, scope: !903)
!16400 = !DILocation(line: 403, column: 1, scope: !903)
!16401 = distinct !DISubprogram(name: "dev_info_hash", scope: !904, file: !904, line: 85, type: !706, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !930, retainedNodes: !213)
!16402 = !DILocalVariable(name: "x", arg: 1, scope: !16401, file: !904, line: 85, type: !553)
!16403 = !DILocation(line: 85, column: 28, scope: !16401)
!16404 = !DILocalVariable(name: "table_size", arg: 2, scope: !16401, file: !904, line: 85, type: !52)
!16405 = !DILocation(line: 85, column: 38, scope: !16401)
!16406 = !DILocalVariable(name: "p", scope: !16401, file: !904, line: 87, type: !941)
!16407 = !DILocation(line: 87, column: 24, scope: !16401)
!16408 = !DILocation(line: 87, column: 28, scope: !16401)
!16409 = !DILocation(line: 96, column: 10, scope: !16401)
!16410 = !DILocation(line: 96, column: 13, scope: !16401)
!16411 = !DILocation(line: 96, column: 19, scope: !16401)
!16412 = !DILocation(line: 96, column: 17, scope: !16401)
!16413 = !DILocation(line: 96, column: 3, scope: !16401)
!16414 = distinct !DISubprogram(name: "dev_info_compare", scope: !904, file: !904, line: 101, type: !711, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !930, retainedNodes: !213)
!16415 = !DILocalVariable(name: "x", arg: 1, scope: !16414, file: !904, line: 101, type: !553)
!16416 = !DILocation(line: 101, column: 31, scope: !16414)
!16417 = !DILocalVariable(name: "y", arg: 2, scope: !16414, file: !904, line: 101, type: !553)
!16418 = !DILocation(line: 101, column: 46, scope: !16414)
!16419 = !DILocalVariable(name: "a", scope: !16414, file: !904, line: 103, type: !941)
!16420 = !DILocation(line: 103, column: 24, scope: !16414)
!16421 = !DILocation(line: 103, column: 28, scope: !16414)
!16422 = !DILocalVariable(name: "b", scope: !16414, file: !904, line: 104, type: !941)
!16423 = !DILocation(line: 104, column: 24, scope: !16414)
!16424 = !DILocation(line: 104, column: 28, scope: !16414)
!16425 = !DILocation(line: 105, column: 10, scope: !16414)
!16426 = !DILocation(line: 105, column: 13, scope: !16414)
!16427 = !DILocation(line: 105, column: 20, scope: !16414)
!16428 = !DILocation(line: 105, column: 23, scope: !16414)
!16429 = !DILocation(line: 105, column: 17, scope: !16414)
!16430 = !DILocation(line: 105, column: 3, scope: !16414)
!16431 = distinct !DISubprogram(name: "lutimensat", scope: !16432, file: !16432, line: 42, type: !16433, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !948, retainedNodes: !213)
!16432 = !DIFile(filename: "./lib/utimens.h", directory: "/home/mohamad/clone/coreutils")
!16433 = !DISubroutineType(types: !16434)
!16434 = !{!5, !5, !113, !16435}
!16435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16436, size: 64)
!16436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!16437 = !DILocalVariable(name: "dir", arg: 1, scope: !16431, file: !16432, line: 42, type: !5)
!16438 = !DILocation(line: 42, column: 17, scope: !16431)
!16439 = !DILocalVariable(name: "file", arg: 2, scope: !16431, file: !16432, line: 42, type: !113)
!16440 = !DILocation(line: 42, column: 34, scope: !16431)
!16441 = !DILocalVariable(name: "times", arg: 3, scope: !16431, file: !16432, line: 42, type: !16435)
!16442 = !DILocation(line: 42, column: 62, scope: !16431)
!16443 = !DILocation(line: 44, column: 21, scope: !16431)
!16444 = !DILocation(line: 44, column: 26, scope: !16431)
!16445 = !DILocation(line: 44, column: 32, scope: !16431)
!16446 = !DILocation(line: 44, column: 10, scope: !16431)
!16447 = !DILocation(line: 44, column: 3, scope: !16431)
!16448 = distinct !DISubprogram(name: "fdutimens", scope: !968, file: !968, line: 170, type: !16433, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !948, retainedNodes: !213)
!16449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !16450)
!16450 = !{!16451, !16452, !16453, !16454, !16455, !16456, !16457, !16458, !16459, !16460, !16461, !16462, !16463, !16464, !16465}
!16451 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !16449, file: !336, line: 48, baseType: !260, size: 64)
!16452 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !16449, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!16453 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !16449, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!16454 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !16449, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!16455 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !16449, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!16456 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !16449, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!16457 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !16449, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!16458 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !16449, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!16459 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !16449, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!16460 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !16449, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!16461 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !16449, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!16462 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !16449, file: !336, line: 91, baseType: !952, size: 128, offset: 576)
!16463 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !16449, file: !336, line: 92, baseType: !952, size: 128, offset: 704)
!16464 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !16449, file: !336, line: 93, baseType: !952, size: 128, offset: 832)
!16465 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !16449, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!16466 = !DILocalVariable(name: "fd", arg: 1, scope: !16448, file: !968, line: 170, type: !5)
!16467 = !DILocation(line: 170, column: 16, scope: !16448)
!16468 = !DILocalVariable(name: "file", arg: 2, scope: !16448, file: !968, line: 170, type: !113)
!16469 = !DILocation(line: 170, column: 32, scope: !16448)
!16470 = !DILocalVariable(name: "timespec", arg: 3, scope: !16448, file: !968, line: 170, type: !16435)
!16471 = !DILocation(line: 170, column: 60, scope: !16448)
!16472 = !DILocalVariable(name: "adjusted_timespec", scope: !16448, file: !968, line: 172, type: !951)
!16473 = !DILocation(line: 172, column: 19, scope: !16448)
!16474 = !DILocalVariable(name: "ts", scope: !16448, file: !968, line: 173, type: !956)
!16475 = !DILocation(line: 173, column: 20, scope: !16448)
!16476 = !DILocation(line: 173, column: 25, scope: !16448)
!16477 = !DILocation(line: 173, column: 36, scope: !16448)
!16478 = !DILocalVariable(name: "adjustment_needed", scope: !16448, file: !968, line: 174, type: !5)
!16479 = !DILocation(line: 174, column: 7, scope: !16448)
!16480 = !DILocalVariable(name: "st", scope: !16448, file: !968, line: 175, type: !16449)
!16481 = !DILocation(line: 175, column: 15, scope: !16448)
!16482 = !DILocation(line: 177, column: 7, scope: !16483)
!16483 = distinct !DILexicalBlock(scope: !16448, file: !968, line: 177, column: 7)
!16484 = !DILocation(line: 177, column: 7, scope: !16448)
!16485 = !DILocation(line: 179, column: 7, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16483, file: !968, line: 178, column: 5)
!16487 = !DILocation(line: 179, column: 30, scope: !16486)
!16488 = !DILocation(line: 180, column: 7, scope: !16486)
!16489 = !DILocation(line: 180, column: 30, scope: !16486)
!16490 = !DILocation(line: 181, column: 46, scope: !16486)
!16491 = !DILocation(line: 181, column: 27, scope: !16486)
!16492 = !DILocation(line: 181, column: 25, scope: !16486)
!16493 = !DILocation(line: 182, column: 5, scope: !16486)
!16494 = !DILocation(line: 183, column: 7, scope: !16495)
!16495 = distinct !DILexicalBlock(scope: !16448, file: !968, line: 183, column: 7)
!16496 = !DILocation(line: 183, column: 25, scope: !16495)
!16497 = !DILocation(line: 183, column: 7, scope: !16448)
!16498 = !DILocation(line: 184, column: 5, scope: !16495)
!16499 = !DILocation(line: 189, column: 7, scope: !16500)
!16500 = distinct !DILexicalBlock(scope: !16448, file: !968, line: 189, column: 7)
!16501 = !DILocation(line: 189, column: 10, scope: !16500)
!16502 = !DILocation(line: 189, column: 14, scope: !16500)
!16503 = !DILocation(line: 189, column: 18, scope: !16500)
!16504 = !DILocation(line: 189, column: 7, scope: !16448)
!16505 = !DILocation(line: 191, column: 7, scope: !16506)
!16506 = distinct !DILexicalBlock(scope: !16500, file: !968, line: 190, column: 5)
!16507 = !DILocation(line: 191, column: 13, scope: !16506)
!16508 = !DILocation(line: 192, column: 7, scope: !16506)
!16509 = !DILocation(line: 218, column: 12, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16448, file: !968, line: 218, column: 7)
!16511 = !DILocation(line: 218, column: 9, scope: !16510)
!16512 = !DILocation(line: 218, column: 7, scope: !16448)
!16513 = !DILocalVariable(name: "result", scope: !16514, file: !968, line: 220, type: !5)
!16514 = distinct !DILexicalBlock(scope: !16510, file: !968, line: 219, column: 5)
!16515 = !DILocation(line: 220, column: 11, scope: !16514)
!16516 = !DILocation(line: 234, column: 11, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16514, file: !968, line: 234, column: 11)
!16518 = !DILocation(line: 234, column: 29, scope: !16517)
!16519 = !DILocation(line: 234, column: 11, scope: !16514)
!16520 = !DILocation(line: 236, column: 15, scope: !16521)
!16521 = distinct !DILexicalBlock(scope: !16522, file: !968, line: 236, column: 15)
!16522 = distinct !DILexicalBlock(scope: !16517, file: !968, line: 235, column: 9)
!16523 = !DILocation(line: 236, column: 18, scope: !16521)
!16524 = !DILocation(line: 236, column: 15, scope: !16522)
!16525 = !DILocation(line: 236, column: 30, scope: !16521)
!16526 = !DILocation(line: 236, column: 24, scope: !16521)
!16527 = !DILocation(line: 236, column: 50, scope: !16521)
!16528 = !DILocation(line: 236, column: 43, scope: !16521)
!16529 = !DILocation(line: 237, column: 13, scope: !16521)
!16530 = !DILocation(line: 238, column: 15, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16522, file: !968, line: 238, column: 15)
!16532 = !DILocation(line: 238, column: 21, scope: !16531)
!16533 = !DILocation(line: 238, column: 29, scope: !16531)
!16534 = !DILocation(line: 238, column: 15, scope: !16522)
!16535 = !DILocation(line: 239, column: 13, scope: !16531)
!16536 = !DILocation(line: 239, column: 21, scope: !16531)
!16537 = !DILocation(line: 240, column: 20, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16531, file: !968, line: 240, column: 20)
!16539 = !DILocation(line: 240, column: 26, scope: !16538)
!16540 = !DILocation(line: 240, column: 34, scope: !16538)
!16541 = !DILocation(line: 240, column: 20, scope: !16531)
!16542 = !DILocation(line: 241, column: 13, scope: !16538)
!16543 = !DILocation(line: 241, column: 21, scope: !16538)
!16544 = !DILocation(line: 243, column: 28, scope: !16522)
!16545 = !DILocation(line: 244, column: 9, scope: !16522)
!16546 = !DILocation(line: 247, column: 11, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16514, file: !968, line: 247, column: 11)
!16548 = !DILocation(line: 247, column: 14, scope: !16547)
!16549 = !DILocation(line: 247, column: 11, scope: !16514)
!16550 = !DILocation(line: 249, column: 41, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16547, file: !968, line: 248, column: 9)
!16552 = !DILocation(line: 249, column: 47, scope: !16551)
!16553 = !DILocation(line: 249, column: 20, scope: !16551)
!16554 = !DILocation(line: 249, column: 18, scope: !16551)
!16555 = !DILocation(line: 258, column: 19, scope: !16556)
!16556 = distinct !DILexicalBlock(scope: !16551, file: !968, line: 258, column: 15)
!16557 = !DILocation(line: 258, column: 17, scope: !16556)
!16558 = !DILocation(line: 258, column: 15, scope: !16551)
!16559 = !DILocation(line: 259, column: 13, scope: !16556)
!16560 = !DILocation(line: 259, column: 19, scope: !16556)
!16561 = !DILocation(line: 261, column: 15, scope: !16562)
!16562 = distinct !DILexicalBlock(scope: !16551, file: !968, line: 261, column: 15)
!16563 = !DILocation(line: 261, column: 22, scope: !16562)
!16564 = !DILocation(line: 261, column: 27, scope: !16562)
!16565 = !DILocation(line: 261, column: 30, scope: !16562)
!16566 = !DILocation(line: 261, column: 36, scope: !16562)
!16567 = !DILocation(line: 261, column: 15, scope: !16551)
!16568 = !DILocation(line: 263, column: 38, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16562, file: !968, line: 262, column: 13)
!16570 = !DILocation(line: 264, column: 22, scope: !16569)
!16571 = !DILocation(line: 264, column: 15, scope: !16569)
!16572 = !DILocation(line: 266, column: 9, scope: !16551)
!16573 = !DILocation(line: 269, column: 16, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !16514, file: !968, line: 269, column: 11)
!16575 = !DILocation(line: 269, column: 13, scope: !16574)
!16576 = !DILocation(line: 269, column: 11, scope: !16514)
!16577 = !DILocation(line: 271, column: 30, scope: !16578)
!16578 = distinct !DILexicalBlock(scope: !16574, file: !968, line: 270, column: 9)
!16579 = !DILocation(line: 271, column: 34, scope: !16578)
!16580 = !DILocation(line: 271, column: 20, scope: !16578)
!16581 = !DILocation(line: 271, column: 18, scope: !16578)
!16582 = !DILocation(line: 274, column: 19, scope: !16583)
!16583 = distinct !DILexicalBlock(scope: !16578, file: !968, line: 274, column: 15)
!16584 = !DILocation(line: 274, column: 17, scope: !16583)
!16585 = !DILocation(line: 274, column: 15, scope: !16578)
!16586 = !DILocation(line: 275, column: 13, scope: !16583)
!16587 = !DILocation(line: 275, column: 19, scope: !16583)
!16588 = !DILocation(line: 277, column: 15, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16578, file: !968, line: 277, column: 15)
!16590 = !DILocation(line: 277, column: 22, scope: !16589)
!16591 = !DILocation(line: 277, column: 27, scope: !16589)
!16592 = !DILocation(line: 277, column: 30, scope: !16589)
!16593 = !DILocation(line: 277, column: 36, scope: !16589)
!16594 = !DILocation(line: 277, column: 15, scope: !16578)
!16595 = !DILocation(line: 279, column: 38, scope: !16596)
!16596 = distinct !DILexicalBlock(scope: !16589, file: !968, line: 278, column: 13)
!16597 = !DILocation(line: 280, column: 22, scope: !16596)
!16598 = !DILocation(line: 280, column: 15, scope: !16596)
!16599 = !DILocation(line: 282, column: 9, scope: !16578)
!16600 = !DILocation(line: 284, column: 5, scope: !16514)
!16601 = !DILocation(line: 285, column: 26, scope: !16448)
!16602 = !DILocation(line: 286, column: 27, scope: !16448)
!16603 = !DILocation(line: 377, column: 7, scope: !16604)
!16604 = distinct !DILexicalBlock(scope: !16448, file: !968, line: 377, column: 7)
!16605 = !DILocation(line: 377, column: 7, scope: !16448)
!16606 = !DILocation(line: 379, column: 11, scope: !16607)
!16607 = distinct !DILexicalBlock(scope: !16608, file: !968, line: 379, column: 11)
!16608 = distinct !DILexicalBlock(scope: !16604, file: !968, line: 378, column: 5)
!16609 = !DILocation(line: 379, column: 29, scope: !16607)
!16610 = !DILocation(line: 380, column: 11, scope: !16607)
!16611 = !DILocation(line: 380, column: 15, scope: !16607)
!16612 = !DILocation(line: 380, column: 18, scope: !16607)
!16613 = !DILocation(line: 379, column: 11, scope: !16608)
!16614 = !DILocation(line: 380, column: 30, scope: !16607)
!16615 = !DILocation(line: 380, column: 24, scope: !16607)
!16616 = !DILocation(line: 380, column: 50, scope: !16607)
!16617 = !DILocation(line: 380, column: 43, scope: !16607)
!16618 = !DILocation(line: 381, column: 9, scope: !16607)
!16619 = !DILocation(line: 382, column: 11, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16608, file: !968, line: 382, column: 11)
!16621 = !DILocation(line: 382, column: 14, scope: !16620)
!16622 = !DILocation(line: 382, column: 17, scope: !16620)
!16623 = !DILocation(line: 382, column: 11, scope: !16608)
!16624 = !DILocation(line: 383, column: 9, scope: !16620)
!16625 = !DILocation(line: 384, column: 5, scope: !16608)
!16626 = !DILocalVariable(name: "timeval", scope: !16627, file: !968, line: 388, type: !957)
!16627 = distinct !DILexicalBlock(scope: !16448, file: !968, line: 386, column: 3)
!16628 = !DILocation(line: 388, column: 20, scope: !16627)
!16629 = !DILocalVariable(name: "t", scope: !16627, file: !968, line: 389, type: !964)
!16630 = !DILocation(line: 389, column: 21, scope: !16627)
!16631 = !DILocation(line: 390, column: 9, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16627, file: !968, line: 390, column: 9)
!16633 = !DILocation(line: 390, column: 9, scope: !16627)
!16634 = !DILocation(line: 392, column: 29, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16632, file: !968, line: 391, column: 7)
!16636 = !DILocation(line: 392, column: 35, scope: !16635)
!16637 = !DILocation(line: 392, column: 9, scope: !16635)
!16638 = !DILocation(line: 392, column: 20, scope: !16635)
!16639 = !DILocation(line: 392, column: 27, scope: !16635)
!16640 = !DILocation(line: 393, column: 30, scope: !16635)
!16641 = !DILocation(line: 393, column: 36, scope: !16635)
!16642 = !DILocation(line: 393, column: 44, scope: !16635)
!16643 = !DILocation(line: 393, column: 9, scope: !16635)
!16644 = !DILocation(line: 393, column: 20, scope: !16635)
!16645 = !DILocation(line: 393, column: 28, scope: !16635)
!16646 = !DILocation(line: 394, column: 29, scope: !16635)
!16647 = !DILocation(line: 394, column: 35, scope: !16635)
!16648 = !DILocation(line: 394, column: 9, scope: !16635)
!16649 = !DILocation(line: 394, column: 20, scope: !16635)
!16650 = !DILocation(line: 394, column: 27, scope: !16635)
!16651 = !DILocation(line: 395, column: 30, scope: !16635)
!16652 = !DILocation(line: 395, column: 36, scope: !16635)
!16653 = !DILocation(line: 395, column: 44, scope: !16635)
!16654 = !DILocation(line: 395, column: 9, scope: !16635)
!16655 = !DILocation(line: 395, column: 20, scope: !16635)
!16656 = !DILocation(line: 395, column: 28, scope: !16635)
!16657 = !DILocation(line: 396, column: 13, scope: !16635)
!16658 = !DILocation(line: 396, column: 11, scope: !16635)
!16659 = !DILocation(line: 397, column: 7, scope: !16635)
!16660 = !DILocation(line: 399, column: 9, scope: !16632)
!16661 = !DILocation(line: 401, column: 9, scope: !16662)
!16662 = distinct !DILexicalBlock(scope: !16627, file: !968, line: 401, column: 9)
!16663 = !DILocation(line: 401, column: 12, scope: !16662)
!16664 = !DILocation(line: 401, column: 9, scope: !16627)
!16665 = !DILocation(line: 404, column: 37, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16662, file: !968, line: 402, column: 7)
!16667 = !DILocation(line: 404, column: 43, scope: !16666)
!16668 = !DILocation(line: 404, column: 16, scope: !16666)
!16669 = !DILocation(line: 404, column: 9, scope: !16666)
!16670 = !DILocation(line: 425, column: 13, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16672, file: !968, line: 425, column: 13)
!16672 = distinct !DILexicalBlock(scope: !16662, file: !968, line: 408, column: 7)
!16673 = !DILocation(line: 425, column: 29, scope: !16671)
!16674 = !DILocation(line: 425, column: 13, scope: !16672)
!16675 = !DILocation(line: 433, column: 17, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16677, file: !968, line: 433, column: 17)
!16677 = distinct !DILexicalBlock(scope: !16671, file: !968, line: 426, column: 11)
!16678 = !DILocation(line: 433, column: 17, scope: !16677)
!16679 = !DILocalVariable(name: "abig", scope: !16680, file: !968, line: 435, type: !139)
!16680 = distinct !DILexicalBlock(scope: !16676, file: !968, line: 434, column: 15)
!16681 = !DILocation(line: 435, column: 22, scope: !16680)
!16682 = !DILocation(line: 435, column: 39, scope: !16680)
!16683 = !DILocation(line: 435, column: 44, scope: !16680)
!16684 = !DILocation(line: 435, column: 36, scope: !16680)
!16685 = !DILocalVariable(name: "mbig", scope: !16680, file: !968, line: 436, type: !139)
!16686 = !DILocation(line: 436, column: 22, scope: !16680)
!16687 = !DILocation(line: 436, column: 39, scope: !16680)
!16688 = !DILocation(line: 436, column: 44, scope: !16680)
!16689 = !DILocation(line: 436, column: 36, scope: !16680)
!16690 = !DILocation(line: 437, column: 22, scope: !16691)
!16691 = distinct !DILexicalBlock(scope: !16680, file: !968, line: 437, column: 21)
!16692 = !DILocation(line: 437, column: 29, scope: !16691)
!16693 = !DILocation(line: 437, column: 27, scope: !16691)
!16694 = !DILocation(line: 437, column: 35, scope: !16691)
!16695 = !DILocation(line: 437, column: 45, scope: !16691)
!16696 = !DILocation(line: 437, column: 38, scope: !16691)
!16697 = !DILocation(line: 437, column: 54, scope: !16691)
!16698 = !DILocation(line: 437, column: 21, scope: !16680)
!16699 = !DILocalVariable(name: "adiff", scope: !16700, file: !968, line: 441, type: !933)
!16700 = distinct !DILexicalBlock(scope: !16691, file: !968, line: 438, column: 19)
!16701 = !DILocation(line: 441, column: 28, scope: !16700)
!16702 = !DILocation(line: 441, column: 39, scope: !16700)
!16703 = !DILocation(line: 441, column: 50, scope: !16700)
!16704 = !DILocation(line: 441, column: 55, scope: !16700)
!16705 = !DILocation(line: 441, column: 48, scope: !16700)
!16706 = !DILocalVariable(name: "mdiff", scope: !16700, file: !968, line: 442, type: !933)
!16707 = !DILocation(line: 442, column: 28, scope: !16700)
!16708 = !DILocation(line: 442, column: 39, scope: !16700)
!16709 = !DILocation(line: 442, column: 50, scope: !16700)
!16710 = !DILocation(line: 442, column: 55, scope: !16700)
!16711 = !DILocation(line: 442, column: 48, scope: !16700)
!16712 = !DILocalVariable(name: "tt", scope: !16700, file: !968, line: 444, type: !964)
!16713 = !DILocation(line: 444, column: 37, scope: !16700)
!16714 = !DILocalVariable(name: "truncated_timeval", scope: !16700, file: !968, line: 445, type: !957)
!16715 = !DILocation(line: 445, column: 36, scope: !16700)
!16716 = !DILocation(line: 446, column: 21, scope: !16700)
!16717 = !DILocation(line: 446, column: 44, scope: !16700)
!16718 = !DILocation(line: 447, column: 21, scope: !16700)
!16719 = !DILocation(line: 447, column: 44, scope: !16700)
!16720 = !DILocation(line: 448, column: 25, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16700, file: !968, line: 448, column: 25)
!16722 = !DILocation(line: 448, column: 30, scope: !16721)
!16723 = !DILocation(line: 448, column: 33, scope: !16721)
!16724 = !DILocation(line: 448, column: 39, scope: !16721)
!16725 = !DILocation(line: 448, column: 44, scope: !16721)
!16726 = !DILocation(line: 448, column: 47, scope: !16721)
!16727 = !DILocation(line: 448, column: 71, scope: !16721)
!16728 = !DILocation(line: 448, column: 25, scope: !16700)
!16729 = !DILocation(line: 450, column: 30, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16721, file: !968, line: 449, column: 23)
!16731 = !DILocation(line: 450, column: 28, scope: !16730)
!16732 = !DILocation(line: 451, column: 25, scope: !16730)
!16733 = !DILocation(line: 451, column: 31, scope: !16730)
!16734 = !DILocation(line: 451, column: 39, scope: !16730)
!16735 = !DILocation(line: 452, column: 23, scope: !16730)
!16736 = !DILocation(line: 453, column: 25, scope: !16737)
!16737 = distinct !DILexicalBlock(scope: !16700, file: !968, line: 453, column: 25)
!16738 = !DILocation(line: 453, column: 30, scope: !16737)
!16739 = !DILocation(line: 453, column: 33, scope: !16737)
!16740 = !DILocation(line: 453, column: 39, scope: !16737)
!16741 = !DILocation(line: 453, column: 44, scope: !16737)
!16742 = !DILocation(line: 453, column: 47, scope: !16737)
!16743 = !DILocation(line: 453, column: 71, scope: !16737)
!16744 = !DILocation(line: 453, column: 25, scope: !16700)
!16745 = !DILocation(line: 455, column: 30, scope: !16746)
!16746 = distinct !DILexicalBlock(scope: !16737, file: !968, line: 454, column: 23)
!16747 = !DILocation(line: 455, column: 28, scope: !16746)
!16748 = !DILocation(line: 456, column: 25, scope: !16746)
!16749 = !DILocation(line: 456, column: 31, scope: !16746)
!16750 = !DILocation(line: 456, column: 39, scope: !16746)
!16751 = !DILocation(line: 457, column: 23, scope: !16746)
!16752 = !DILocation(line: 458, column: 25, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16700, file: !968, line: 458, column: 25)
!16754 = !DILocation(line: 458, column: 25, scope: !16700)
!16755 = !DILocation(line: 459, column: 23, scope: !16753)
!16756 = !DILocation(line: 460, column: 19, scope: !16700)
!16757 = !DILocation(line: 461, column: 15, scope: !16680)
!16758 = !DILocation(line: 464, column: 13, scope: !16677)
!16759 = !DILocation(line: 470, column: 10, scope: !16760)
!16760 = distinct !DILexicalBlock(scope: !16627, file: !968, line: 470, column: 9)
!16761 = !DILocation(line: 470, column: 9, scope: !16627)
!16762 = !DILocation(line: 476, column: 9, scope: !16763)
!16763 = distinct !DILexicalBlock(scope: !16760, file: !968, line: 471, column: 7)
!16764 = !DILocation(line: 482, column: 20, scope: !16627)
!16765 = !DILocation(line: 482, column: 26, scope: !16627)
!16766 = !DILocation(line: 482, column: 12, scope: !16627)
!16767 = !DILocation(line: 482, column: 5, scope: !16627)
!16768 = !DILocation(line: 500, column: 1, scope: !16448)
!16769 = distinct !DISubprogram(name: "validate_timespec", scope: !968, file: !968, line: 87, type: !16770, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !948, retainedNodes: !213)
!16770 = !DISubroutineType(types: !16771)
!16771 = !{!5, !956}
!16772 = !DILocalVariable(name: "timespec", arg: 1, scope: !16769, file: !968, line: 87, type: !956)
!16773 = !DILocation(line: 87, column: 36, scope: !16769)
!16774 = !DILocalVariable(name: "result", scope: !16769, file: !968, line: 89, type: !5)
!16775 = !DILocation(line: 89, column: 7, scope: !16769)
!16776 = !DILocalVariable(name: "utime_omit_count", scope: !16769, file: !968, line: 90, type: !5)
!16777 = !DILocation(line: 90, column: 7, scope: !16769)
!16778 = !DILocation(line: 91, column: 8, scope: !16779)
!16779 = distinct !DILexicalBlock(scope: !16769, file: !968, line: 91, column: 7)
!16780 = !DILocation(line: 91, column: 20, scope: !16779)
!16781 = !DILocation(line: 91, column: 28, scope: !16779)
!16782 = !DILocation(line: 92, column: 8, scope: !16779)
!16783 = !DILocation(line: 92, column: 11, scope: !16779)
!16784 = !DILocation(line: 92, column: 23, scope: !16779)
!16785 = !DILocation(line: 92, column: 31, scope: !16779)
!16786 = !DILocation(line: 93, column: 8, scope: !16779)
!16787 = !DILocation(line: 93, column: 19, scope: !16779)
!16788 = !DILocation(line: 93, column: 31, scope: !16779)
!16789 = !DILocation(line: 93, column: 16, scope: !16779)
!16790 = !DILocation(line: 94, column: 14, scope: !16779)
!16791 = !DILocation(line: 94, column: 17, scope: !16779)
!16792 = !DILocation(line: 94, column: 29, scope: !16779)
!16793 = !DILocation(line: 94, column: 37, scope: !16779)
!16794 = !DILocation(line: 95, column: 7, scope: !16779)
!16795 = !DILocation(line: 95, column: 11, scope: !16779)
!16796 = !DILocation(line: 95, column: 23, scope: !16779)
!16797 = !DILocation(line: 95, column: 31, scope: !16779)
!16798 = !DILocation(line: 96, column: 11, scope: !16779)
!16799 = !DILocation(line: 96, column: 14, scope: !16779)
!16800 = !DILocation(line: 96, column: 26, scope: !16779)
!16801 = !DILocation(line: 96, column: 34, scope: !16779)
!16802 = !DILocation(line: 97, column: 11, scope: !16779)
!16803 = !DILocation(line: 97, column: 22, scope: !16779)
!16804 = !DILocation(line: 97, column: 34, scope: !16779)
!16805 = !DILocation(line: 97, column: 19, scope: !16779)
!16806 = !DILocation(line: 98, column: 17, scope: !16779)
!16807 = !DILocation(line: 98, column: 20, scope: !16779)
!16808 = !DILocation(line: 98, column: 32, scope: !16779)
!16809 = !DILocation(line: 98, column: 40, scope: !16779)
!16810 = !DILocation(line: 91, column: 7, scope: !16769)
!16811 = !DILocation(line: 100, column: 7, scope: !16812)
!16812 = distinct !DILexicalBlock(scope: !16779, file: !968, line: 99, column: 5)
!16813 = !DILocation(line: 100, column: 13, scope: !16812)
!16814 = !DILocation(line: 101, column: 7, scope: !16812)
!16815 = !DILocation(line: 107, column: 7, scope: !16816)
!16816 = distinct !DILexicalBlock(scope: !16769, file: !968, line: 107, column: 7)
!16817 = !DILocation(line: 107, column: 19, scope: !16816)
!16818 = !DILocation(line: 107, column: 27, scope: !16816)
!16819 = !DILocation(line: 108, column: 7, scope: !16816)
!16820 = !DILocation(line: 108, column: 10, scope: !16816)
!16821 = !DILocation(line: 108, column: 22, scope: !16816)
!16822 = !DILocation(line: 108, column: 30, scope: !16816)
!16823 = !DILocation(line: 107, column: 7, scope: !16769)
!16824 = !DILocation(line: 110, column: 7, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16816, file: !968, line: 109, column: 5)
!16826 = !DILocation(line: 110, column: 19, scope: !16825)
!16827 = !DILocation(line: 110, column: 26, scope: !16825)
!16828 = !DILocation(line: 111, column: 14, scope: !16825)
!16829 = !DILocation(line: 112, column: 11, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16825, file: !968, line: 112, column: 11)
!16831 = !DILocation(line: 112, column: 23, scope: !16830)
!16832 = !DILocation(line: 112, column: 31, scope: !16830)
!16833 = !DILocation(line: 112, column: 11, scope: !16825)
!16834 = !DILocation(line: 113, column: 25, scope: !16830)
!16835 = !DILocation(line: 113, column: 9, scope: !16830)
!16836 = !DILocation(line: 114, column: 5, scope: !16825)
!16837 = !DILocation(line: 115, column: 7, scope: !16838)
!16838 = distinct !DILexicalBlock(scope: !16769, file: !968, line: 115, column: 7)
!16839 = !DILocation(line: 115, column: 19, scope: !16838)
!16840 = !DILocation(line: 115, column: 27, scope: !16838)
!16841 = !DILocation(line: 116, column: 7, scope: !16838)
!16842 = !DILocation(line: 116, column: 10, scope: !16838)
!16843 = !DILocation(line: 116, column: 22, scope: !16838)
!16844 = !DILocation(line: 116, column: 30, scope: !16838)
!16845 = !DILocation(line: 115, column: 7, scope: !16769)
!16846 = !DILocation(line: 118, column: 7, scope: !16847)
!16847 = distinct !DILexicalBlock(scope: !16838, file: !968, line: 117, column: 5)
!16848 = !DILocation(line: 118, column: 19, scope: !16847)
!16849 = !DILocation(line: 118, column: 26, scope: !16847)
!16850 = !DILocation(line: 119, column: 14, scope: !16847)
!16851 = !DILocation(line: 120, column: 11, scope: !16852)
!16852 = distinct !DILexicalBlock(scope: !16847, file: !968, line: 120, column: 11)
!16853 = !DILocation(line: 120, column: 23, scope: !16852)
!16854 = !DILocation(line: 120, column: 31, scope: !16852)
!16855 = !DILocation(line: 120, column: 11, scope: !16847)
!16856 = !DILocation(line: 121, column: 25, scope: !16852)
!16857 = !DILocation(line: 121, column: 9, scope: !16852)
!16858 = !DILocation(line: 122, column: 5, scope: !16847)
!16859 = !DILocation(line: 123, column: 10, scope: !16769)
!16860 = !DILocation(line: 123, column: 20, scope: !16769)
!16861 = !DILocation(line: 123, column: 37, scope: !16769)
!16862 = !DILocation(line: 123, column: 17, scope: !16769)
!16863 = !DILocation(line: 123, column: 3, scope: !16769)
!16864 = !DILocation(line: 124, column: 1, scope: !16769)
!16865 = distinct !DISubprogram(name: "update_timespec", scope: !968, file: !968, line: 133, type: !16866, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !948, retainedNodes: !213)
!16866 = !DISubroutineType(types: !16867)
!16867 = !{!139, !16868, !16870}
!16868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16869, size: 64)
!16869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16449)
!16870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!16871 = !DILocalVariable(name: "statbuf", arg: 1, scope: !16865, file: !968, line: 133, type: !16868)
!16872 = !DILocation(line: 133, column: 37, scope: !16865)
!16873 = !DILocalVariable(name: "ts", arg: 2, scope: !16865, file: !968, line: 133, type: !16870)
!16874 = !DILocation(line: 133, column: 63, scope: !16865)
!16875 = !DILocalVariable(name: "timespec", scope: !16865, file: !968, line: 135, type: !956)
!16876 = !DILocation(line: 135, column: 20, scope: !16865)
!16877 = !DILocation(line: 135, column: 32, scope: !16865)
!16878 = !DILocation(line: 135, column: 31, scope: !16865)
!16879 = !DILocation(line: 136, column: 7, scope: !16880)
!16880 = distinct !DILexicalBlock(scope: !16865, file: !968, line: 136, column: 7)
!16881 = !DILocation(line: 136, column: 19, scope: !16880)
!16882 = !DILocation(line: 136, column: 27, scope: !16880)
!16883 = !DILocation(line: 137, column: 7, scope: !16880)
!16884 = !DILocation(line: 137, column: 10, scope: !16880)
!16885 = !DILocation(line: 137, column: 22, scope: !16880)
!16886 = !DILocation(line: 137, column: 30, scope: !16880)
!16887 = !DILocation(line: 136, column: 7, scope: !16865)
!16888 = !DILocation(line: 138, column: 5, scope: !16880)
!16889 = !DILocation(line: 139, column: 7, scope: !16890)
!16890 = distinct !DILexicalBlock(scope: !16865, file: !968, line: 139, column: 7)
!16891 = !DILocation(line: 139, column: 19, scope: !16890)
!16892 = !DILocation(line: 139, column: 27, scope: !16890)
!16893 = !DILocation(line: 140, column: 7, scope: !16890)
!16894 = !DILocation(line: 140, column: 10, scope: !16890)
!16895 = !DILocation(line: 140, column: 22, scope: !16890)
!16896 = !DILocation(line: 140, column: 30, scope: !16890)
!16897 = !DILocation(line: 139, column: 7, scope: !16865)
!16898 = !DILocation(line: 142, column: 8, scope: !16899)
!16899 = distinct !DILexicalBlock(scope: !16890, file: !968, line: 141, column: 5)
!16900 = !DILocation(line: 142, column: 11, scope: !16899)
!16901 = !DILocation(line: 143, column: 7, scope: !16899)
!16902 = !DILocation(line: 146, column: 7, scope: !16903)
!16903 = distinct !DILexicalBlock(scope: !16865, file: !968, line: 146, column: 7)
!16904 = !DILocation(line: 146, column: 19, scope: !16903)
!16905 = !DILocation(line: 146, column: 27, scope: !16903)
!16906 = !DILocation(line: 146, column: 7, scope: !16865)
!16907 = !DILocation(line: 147, column: 5, scope: !16903)
!16908 = !DILocation(line: 147, column: 35, scope: !16903)
!16909 = !DILocation(line: 147, column: 19, scope: !16903)
!16910 = !DILocation(line: 148, column: 12, scope: !16911)
!16911 = distinct !DILexicalBlock(scope: !16903, file: !968, line: 148, column: 12)
!16912 = !DILocation(line: 148, column: 24, scope: !16911)
!16913 = !DILocation(line: 148, column: 32, scope: !16911)
!16914 = !DILocation(line: 148, column: 12, scope: !16903)
!16915 = !DILocation(line: 149, column: 15, scope: !16911)
!16916 = !DILocation(line: 149, column: 5, scope: !16911)
!16917 = !DILocation(line: 151, column: 7, scope: !16918)
!16918 = distinct !DILexicalBlock(scope: !16865, file: !968, line: 151, column: 7)
!16919 = !DILocation(line: 151, column: 19, scope: !16918)
!16920 = !DILocation(line: 151, column: 27, scope: !16918)
!16921 = !DILocation(line: 151, column: 7, scope: !16865)
!16922 = !DILocation(line: 152, column: 5, scope: !16918)
!16923 = !DILocation(line: 152, column: 35, scope: !16918)
!16924 = !DILocation(line: 152, column: 19, scope: !16918)
!16925 = !DILocation(line: 153, column: 12, scope: !16926)
!16926 = distinct !DILexicalBlock(scope: !16918, file: !968, line: 153, column: 12)
!16927 = !DILocation(line: 153, column: 24, scope: !16926)
!16928 = !DILocation(line: 153, column: 32, scope: !16926)
!16929 = !DILocation(line: 153, column: 12, scope: !16918)
!16930 = !DILocation(line: 154, column: 15, scope: !16926)
!16931 = !DILocation(line: 154, column: 5, scope: !16926)
!16932 = !DILocation(line: 156, column: 3, scope: !16865)
!16933 = !DILocation(line: 157, column: 1, scope: !16865)
!16934 = distinct !DISubprogram(name: "utimens", scope: !968, file: !968, line: 505, type: !16935, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !948, retainedNodes: !213)
!16935 = !DISubroutineType(types: !16936)
!16936 = !{!5, !113, !16435}
!16937 = !DILocalVariable(name: "file", arg: 1, scope: !16934, file: !968, line: 505, type: !113)
!16938 = !DILocation(line: 505, column: 22, scope: !16934)
!16939 = !DILocalVariable(name: "timespec", arg: 2, scope: !16934, file: !968, line: 505, type: !16435)
!16940 = !DILocation(line: 505, column: 50, scope: !16934)
!16941 = !DILocation(line: 507, column: 25, scope: !16934)
!16942 = !DILocation(line: 507, column: 31, scope: !16934)
!16943 = !DILocation(line: 507, column: 10, scope: !16934)
!16944 = !DILocation(line: 507, column: 3, scope: !16934)
!16945 = distinct !DISubprogram(name: "lutimens", scope: !968, file: !968, line: 515, type: !16935, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !948, retainedNodes: !213)
!16946 = !DILocalVariable(name: "file", arg: 1, scope: !16945, file: !968, line: 515, type: !113)
!16947 = !DILocation(line: 515, column: 23, scope: !16945)
!16948 = !DILocalVariable(name: "timespec", arg: 2, scope: !16945, file: !968, line: 515, type: !16435)
!16949 = !DILocation(line: 515, column: 51, scope: !16945)
!16950 = !DILocalVariable(name: "adjusted_timespec", scope: !16945, file: !968, line: 517, type: !951)
!16951 = !DILocation(line: 517, column: 19, scope: !16945)
!16952 = !DILocalVariable(name: "ts", scope: !16945, file: !968, line: 518, type: !956)
!16953 = !DILocation(line: 518, column: 20, scope: !16945)
!16954 = !DILocation(line: 518, column: 25, scope: !16945)
!16955 = !DILocation(line: 518, column: 36, scope: !16945)
!16956 = !DILocalVariable(name: "adjustment_needed", scope: !16945, file: !968, line: 519, type: !5)
!16957 = !DILocation(line: 519, column: 7, scope: !16945)
!16958 = !DILocalVariable(name: "st", scope: !16945, file: !968, line: 520, type: !16449)
!16959 = !DILocation(line: 520, column: 15, scope: !16945)
!16960 = !DILocation(line: 522, column: 7, scope: !16961)
!16961 = distinct !DILexicalBlock(scope: !16945, file: !968, line: 522, column: 7)
!16962 = !DILocation(line: 522, column: 7, scope: !16945)
!16963 = !DILocation(line: 524, column: 7, scope: !16964)
!16964 = distinct !DILexicalBlock(scope: !16961, file: !968, line: 523, column: 5)
!16965 = !DILocation(line: 524, column: 30, scope: !16964)
!16966 = !DILocation(line: 525, column: 7, scope: !16964)
!16967 = !DILocation(line: 525, column: 30, scope: !16964)
!16968 = !DILocation(line: 526, column: 46, scope: !16964)
!16969 = !DILocation(line: 526, column: 27, scope: !16964)
!16970 = !DILocation(line: 526, column: 25, scope: !16964)
!16971 = !DILocation(line: 527, column: 5, scope: !16964)
!16972 = !DILocation(line: 528, column: 7, scope: !16973)
!16973 = distinct !DILexicalBlock(scope: !16945, file: !968, line: 528, column: 7)
!16974 = !DILocation(line: 528, column: 25, scope: !16973)
!16975 = !DILocation(line: 528, column: 7, scope: !16945)
!16976 = !DILocation(line: 529, column: 5, scope: !16973)
!16977 = !DILocation(line: 537, column: 12, scope: !16978)
!16978 = distinct !DILexicalBlock(scope: !16945, file: !968, line: 537, column: 7)
!16979 = !DILocation(line: 537, column: 9, scope: !16978)
!16980 = !DILocation(line: 537, column: 7, scope: !16945)
!16981 = !DILocalVariable(name: "result", scope: !16982, file: !968, line: 539, type: !5)
!16982 = distinct !DILexicalBlock(scope: !16978, file: !968, line: 538, column: 5)
!16983 = !DILocation(line: 539, column: 11, scope: !16982)
!16984 = !DILocation(line: 553, column: 11, scope: !16985)
!16985 = distinct !DILexicalBlock(scope: !16982, file: !968, line: 553, column: 11)
!16986 = !DILocation(line: 553, column: 29, scope: !16985)
!16987 = !DILocation(line: 553, column: 11, scope: !16982)
!16988 = !DILocation(line: 555, column: 22, scope: !16989)
!16989 = distinct !DILexicalBlock(scope: !16990, file: !968, line: 555, column: 15)
!16990 = distinct !DILexicalBlock(scope: !16985, file: !968, line: 554, column: 9)
!16991 = !DILocation(line: 555, column: 15, scope: !16989)
!16992 = !DILocation(line: 555, column: 15, scope: !16990)
!16993 = !DILocation(line: 556, column: 13, scope: !16989)
!16994 = !DILocation(line: 557, column: 15, scope: !16995)
!16995 = distinct !DILexicalBlock(scope: !16990, file: !968, line: 557, column: 15)
!16996 = !DILocation(line: 557, column: 21, scope: !16995)
!16997 = !DILocation(line: 557, column: 29, scope: !16995)
!16998 = !DILocation(line: 557, column: 15, scope: !16990)
!16999 = !DILocation(line: 558, column: 13, scope: !16995)
!17000 = !DILocation(line: 558, column: 21, scope: !16995)
!17001 = !DILocation(line: 559, column: 20, scope: !17002)
!17002 = distinct !DILexicalBlock(scope: !16995, file: !968, line: 559, column: 20)
!17003 = !DILocation(line: 559, column: 26, scope: !17002)
!17004 = !DILocation(line: 559, column: 34, scope: !17002)
!17005 = !DILocation(line: 559, column: 20, scope: !16995)
!17006 = !DILocation(line: 560, column: 13, scope: !17002)
!17007 = !DILocation(line: 560, column: 21, scope: !17002)
!17008 = !DILocation(line: 562, column: 28, scope: !16990)
!17009 = !DILocation(line: 563, column: 9, scope: !16990)
!17010 = !DILocation(line: 565, column: 37, scope: !16982)
!17011 = !DILocation(line: 565, column: 43, scope: !16982)
!17012 = !DILocation(line: 565, column: 16, scope: !16982)
!17013 = !DILocation(line: 565, column: 14, scope: !16982)
!17014 = !DILocation(line: 574, column: 15, scope: !17015)
!17015 = distinct !DILexicalBlock(scope: !16982, file: !968, line: 574, column: 11)
!17016 = !DILocation(line: 574, column: 13, scope: !17015)
!17017 = !DILocation(line: 574, column: 11, scope: !16982)
!17018 = !DILocation(line: 575, column: 9, scope: !17015)
!17019 = !DILocation(line: 575, column: 15, scope: !17015)
!17020 = !DILocation(line: 577, column: 11, scope: !17021)
!17021 = distinct !DILexicalBlock(scope: !16982, file: !968, line: 577, column: 11)
!17022 = !DILocation(line: 577, column: 18, scope: !17021)
!17023 = !DILocation(line: 577, column: 23, scope: !17021)
!17024 = !DILocation(line: 577, column: 26, scope: !17021)
!17025 = !DILocation(line: 577, column: 32, scope: !17021)
!17026 = !DILocation(line: 577, column: 11, scope: !16982)
!17027 = !DILocation(line: 579, column: 34, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !17021, file: !968, line: 578, column: 9)
!17029 = !DILocation(line: 580, column: 35, scope: !17028)
!17030 = !DILocation(line: 581, column: 18, scope: !17028)
!17031 = !DILocation(line: 581, column: 11, scope: !17028)
!17032 = !DILocation(line: 583, column: 5, scope: !16982)
!17033 = !DILocation(line: 584, column: 27, scope: !16945)
!17034 = !DILocation(line: 591, column: 7, scope: !17035)
!17035 = distinct !DILexicalBlock(scope: !16945, file: !968, line: 591, column: 7)
!17036 = !DILocation(line: 591, column: 7, scope: !16945)
!17037 = !DILocation(line: 593, column: 11, scope: !17038)
!17038 = distinct !DILexicalBlock(scope: !17039, file: !968, line: 593, column: 11)
!17039 = distinct !DILexicalBlock(scope: !17035, file: !968, line: 592, column: 5)
!17040 = !DILocation(line: 593, column: 29, scope: !17038)
!17041 = !DILocation(line: 593, column: 34, scope: !17038)
!17042 = !DILocation(line: 593, column: 44, scope: !17038)
!17043 = !DILocation(line: 593, column: 37, scope: !17038)
!17044 = !DILocation(line: 593, column: 11, scope: !17039)
!17045 = !DILocation(line: 594, column: 9, scope: !17038)
!17046 = !DILocation(line: 595, column: 11, scope: !17047)
!17047 = distinct !DILexicalBlock(scope: !17039, file: !968, line: 595, column: 11)
!17048 = !DILocation(line: 595, column: 14, scope: !17047)
!17049 = !DILocation(line: 595, column: 17, scope: !17047)
!17050 = !DILocation(line: 595, column: 11, scope: !17039)
!17051 = !DILocation(line: 596, column: 9, scope: !17047)
!17052 = !DILocation(line: 597, column: 5, scope: !17039)
!17053 = !DILocation(line: 624, column: 9, scope: !17054)
!17054 = distinct !DILexicalBlock(scope: !16945, file: !968, line: 624, column: 7)
!17055 = !DILocation(line: 624, column: 54, scope: !17054)
!17056 = !DILocation(line: 624, column: 64, scope: !17054)
!17057 = !DILocation(line: 624, column: 57, scope: !17054)
!17058 = !DILocation(line: 624, column: 7, scope: !16945)
!17059 = !DILocation(line: 625, column: 5, scope: !17054)
!17060 = !DILocation(line: 626, column: 8, scope: !17061)
!17061 = distinct !DILexicalBlock(scope: !16945, file: !968, line: 626, column: 7)
!17062 = !DILocation(line: 626, column: 7, scope: !16945)
!17063 = !DILocation(line: 627, column: 27, scope: !17061)
!17064 = !DILocation(line: 627, column: 33, scope: !17061)
!17065 = !DILocation(line: 627, column: 12, scope: !17061)
!17066 = !DILocation(line: 627, column: 5, scope: !17061)
!17067 = !DILocation(line: 628, column: 3, scope: !16945)
!17068 = !DILocation(line: 628, column: 9, scope: !16945)
!17069 = !DILocation(line: 629, column: 3, scope: !16945)
!17070 = !DILocation(line: 630, column: 1, scope: !16945)
!17071 = distinct !DISubprogram(name: "version_etc_arn", scope: !17072, file: !17072, line: 61, type: !17073, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1402, retainedNodes: !213)
!17072 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mohamad/clone/coreutils")
!17073 = !DISubroutineType(types: !17074)
!17074 = !{null, !17075, !113, !113, !113, !992, !52}
!17075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17076, size: 64)
!17076 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !293, line: 48, baseType: !1427)
!17077 = !DILocalVariable(name: "stream", arg: 1, scope: !17071, file: !17072, line: 61, type: !17075)
!17078 = !DILocation(line: 61, column: 24, scope: !17071)
!17079 = !DILocalVariable(name: "command_name", arg: 2, scope: !17071, file: !17072, line: 62, type: !113)
!17080 = !DILocation(line: 62, column: 30, scope: !17071)
!17081 = !DILocalVariable(name: "package", arg: 3, scope: !17071, file: !17072, line: 62, type: !113)
!17082 = !DILocation(line: 62, column: 56, scope: !17071)
!17083 = !DILocalVariable(name: "version", arg: 4, scope: !17071, file: !17072, line: 63, type: !113)
!17084 = !DILocation(line: 63, column: 30, scope: !17071)
!17085 = !DILocalVariable(name: "authors", arg: 5, scope: !17071, file: !17072, line: 64, type: !992)
!17086 = !DILocation(line: 64, column: 39, scope: !17071)
!17087 = !DILocalVariable(name: "n_authors", arg: 6, scope: !17071, file: !17072, line: 64, type: !52)
!17088 = !DILocation(line: 64, column: 55, scope: !17071)
!17089 = !DILocation(line: 66, column: 7, scope: !17090)
!17090 = distinct !DILexicalBlock(scope: !17071, file: !17072, line: 66, column: 7)
!17091 = !DILocation(line: 66, column: 7, scope: !17071)
!17092 = !DILocation(line: 67, column: 14, scope: !17090)
!17093 = !DILocation(line: 67, column: 38, scope: !17090)
!17094 = !DILocation(line: 67, column: 52, scope: !17090)
!17095 = !DILocation(line: 67, column: 61, scope: !17090)
!17096 = !DILocation(line: 67, column: 5, scope: !17090)
!17097 = !DILocation(line: 69, column: 14, scope: !17090)
!17098 = !DILocation(line: 69, column: 33, scope: !17090)
!17099 = !DILocation(line: 69, column: 42, scope: !17090)
!17100 = !DILocation(line: 69, column: 5, scope: !17090)
!17101 = !DILocation(line: 83, column: 12, scope: !17071)
!17102 = !DILocation(line: 83, column: 43, scope: !17071)
!17103 = !DILocation(line: 83, column: 3, scope: !17071)
!17104 = !DILocation(line: 85, column: 3, scope: !17071)
!17105 = !DILocation(line: 88, column: 12, scope: !17071)
!17106 = !DILocation(line: 88, column: 20, scope: !17071)
!17107 = !DILocation(line: 88, column: 3, scope: !17071)
!17108 = !DILocation(line: 95, column: 3, scope: !17071)
!17109 = !DILocation(line: 97, column: 11, scope: !17071)
!17110 = !DILocation(line: 97, column: 3, scope: !17071)
!17111 = !DILocation(line: 102, column: 7, scope: !17112)
!17112 = distinct !DILexicalBlock(scope: !17071, file: !17072, line: 98, column: 5)
!17113 = !DILocation(line: 105, column: 16, scope: !17112)
!17114 = !DILocation(line: 105, column: 24, scope: !17112)
!17115 = !DILocation(line: 105, column: 47, scope: !17112)
!17116 = !DILocation(line: 105, column: 7, scope: !17112)
!17117 = !DILocation(line: 106, column: 7, scope: !17112)
!17118 = !DILocation(line: 109, column: 16, scope: !17112)
!17119 = !DILocation(line: 109, column: 24, scope: !17112)
!17120 = !DILocation(line: 109, column: 54, scope: !17112)
!17121 = !DILocation(line: 109, column: 66, scope: !17112)
!17122 = !DILocation(line: 109, column: 7, scope: !17112)
!17123 = !DILocation(line: 110, column: 7, scope: !17112)
!17124 = !DILocation(line: 113, column: 16, scope: !17112)
!17125 = !DILocation(line: 113, column: 24, scope: !17112)
!17126 = !DILocation(line: 114, column: 16, scope: !17112)
!17127 = !DILocation(line: 114, column: 28, scope: !17112)
!17128 = !DILocation(line: 114, column: 40, scope: !17112)
!17129 = !DILocation(line: 113, column: 7, scope: !17112)
!17130 = !DILocation(line: 115, column: 7, scope: !17112)
!17131 = !DILocation(line: 120, column: 16, scope: !17112)
!17132 = !DILocation(line: 120, column: 24, scope: !17112)
!17133 = !DILocation(line: 121, column: 16, scope: !17112)
!17134 = !DILocation(line: 121, column: 28, scope: !17112)
!17135 = !DILocation(line: 121, column: 40, scope: !17112)
!17136 = !DILocation(line: 121, column: 52, scope: !17112)
!17137 = !DILocation(line: 120, column: 7, scope: !17112)
!17138 = !DILocation(line: 122, column: 7, scope: !17112)
!17139 = !DILocation(line: 127, column: 16, scope: !17112)
!17140 = !DILocation(line: 127, column: 24, scope: !17112)
!17141 = !DILocation(line: 128, column: 16, scope: !17112)
!17142 = !DILocation(line: 128, column: 28, scope: !17112)
!17143 = !DILocation(line: 128, column: 40, scope: !17112)
!17144 = !DILocation(line: 128, column: 52, scope: !17112)
!17145 = !DILocation(line: 128, column: 64, scope: !17112)
!17146 = !DILocation(line: 127, column: 7, scope: !17112)
!17147 = !DILocation(line: 129, column: 7, scope: !17112)
!17148 = !DILocation(line: 134, column: 16, scope: !17112)
!17149 = !DILocation(line: 134, column: 24, scope: !17112)
!17150 = !DILocation(line: 135, column: 16, scope: !17112)
!17151 = !DILocation(line: 135, column: 28, scope: !17112)
!17152 = !DILocation(line: 135, column: 40, scope: !17112)
!17153 = !DILocation(line: 135, column: 52, scope: !17112)
!17154 = !DILocation(line: 135, column: 64, scope: !17112)
!17155 = !DILocation(line: 136, column: 16, scope: !17112)
!17156 = !DILocation(line: 134, column: 7, scope: !17112)
!17157 = !DILocation(line: 137, column: 7, scope: !17112)
!17158 = !DILocation(line: 142, column: 16, scope: !17112)
!17159 = !DILocation(line: 142, column: 24, scope: !17112)
!17160 = !DILocation(line: 143, column: 16, scope: !17112)
!17161 = !DILocation(line: 143, column: 28, scope: !17112)
!17162 = !DILocation(line: 143, column: 40, scope: !17112)
!17163 = !DILocation(line: 143, column: 52, scope: !17112)
!17164 = !DILocation(line: 143, column: 64, scope: !17112)
!17165 = !DILocation(line: 144, column: 16, scope: !17112)
!17166 = !DILocation(line: 144, column: 28, scope: !17112)
!17167 = !DILocation(line: 142, column: 7, scope: !17112)
!17168 = !DILocation(line: 145, column: 7, scope: !17112)
!17169 = !DILocation(line: 150, column: 16, scope: !17112)
!17170 = !DILocation(line: 150, column: 24, scope: !17112)
!17171 = !DILocation(line: 152, column: 17, scope: !17112)
!17172 = !DILocation(line: 152, column: 29, scope: !17112)
!17173 = !DILocation(line: 152, column: 41, scope: !17112)
!17174 = !DILocation(line: 152, column: 53, scope: !17112)
!17175 = !DILocation(line: 152, column: 65, scope: !17112)
!17176 = !DILocation(line: 153, column: 17, scope: !17112)
!17177 = !DILocation(line: 153, column: 29, scope: !17112)
!17178 = !DILocation(line: 153, column: 41, scope: !17112)
!17179 = !DILocation(line: 150, column: 7, scope: !17112)
!17180 = !DILocation(line: 154, column: 7, scope: !17112)
!17181 = !DILocation(line: 159, column: 16, scope: !17112)
!17182 = !DILocation(line: 159, column: 24, scope: !17112)
!17183 = !DILocation(line: 161, column: 16, scope: !17112)
!17184 = !DILocation(line: 161, column: 28, scope: !17112)
!17185 = !DILocation(line: 161, column: 40, scope: !17112)
!17186 = !DILocation(line: 161, column: 52, scope: !17112)
!17187 = !DILocation(line: 161, column: 64, scope: !17112)
!17188 = !DILocation(line: 162, column: 16, scope: !17112)
!17189 = !DILocation(line: 162, column: 28, scope: !17112)
!17190 = !DILocation(line: 162, column: 40, scope: !17112)
!17191 = !DILocation(line: 162, column: 52, scope: !17112)
!17192 = !DILocation(line: 159, column: 7, scope: !17112)
!17193 = !DILocation(line: 163, column: 7, scope: !17112)
!17194 = !DILocation(line: 170, column: 16, scope: !17112)
!17195 = !DILocation(line: 170, column: 24, scope: !17112)
!17196 = !DILocation(line: 172, column: 17, scope: !17112)
!17197 = !DILocation(line: 172, column: 29, scope: !17112)
!17198 = !DILocation(line: 172, column: 41, scope: !17112)
!17199 = !DILocation(line: 172, column: 53, scope: !17112)
!17200 = !DILocation(line: 172, column: 65, scope: !17112)
!17201 = !DILocation(line: 173, column: 17, scope: !17112)
!17202 = !DILocation(line: 173, column: 29, scope: !17112)
!17203 = !DILocation(line: 173, column: 41, scope: !17112)
!17204 = !DILocation(line: 173, column: 53, scope: !17112)
!17205 = !DILocation(line: 170, column: 7, scope: !17112)
!17206 = !DILocation(line: 174, column: 7, scope: !17112)
!17207 = !DILocation(line: 176, column: 1, scope: !17071)
!17208 = distinct !DISubprogram(name: "version_etc_ar", scope: !17072, file: !17072, line: 183, type: !17209, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1402, retainedNodes: !213)
!17209 = !DISubroutineType(types: !17210)
!17210 = !{null, !17075, !113, !113, !113, !992}
!17211 = !DILocalVariable(name: "stream", arg: 1, scope: !17208, file: !17072, line: 183, type: !17075)
!17212 = !DILocation(line: 183, column: 23, scope: !17208)
!17213 = !DILocalVariable(name: "command_name", arg: 2, scope: !17208, file: !17072, line: 184, type: !113)
!17214 = !DILocation(line: 184, column: 29, scope: !17208)
!17215 = !DILocalVariable(name: "package", arg: 3, scope: !17208, file: !17072, line: 184, type: !113)
!17216 = !DILocation(line: 184, column: 55, scope: !17208)
!17217 = !DILocalVariable(name: "version", arg: 4, scope: !17208, file: !17072, line: 185, type: !113)
!17218 = !DILocation(line: 185, column: 29, scope: !17208)
!17219 = !DILocalVariable(name: "authors", arg: 5, scope: !17208, file: !17072, line: 185, type: !992)
!17220 = !DILocation(line: 185, column: 59, scope: !17208)
!17221 = !DILocalVariable(name: "n_authors", scope: !17208, file: !17072, line: 187, type: !52)
!17222 = !DILocation(line: 187, column: 10, scope: !17208)
!17223 = !DILocation(line: 189, column: 18, scope: !17224)
!17224 = distinct !DILexicalBlock(scope: !17208, file: !17072, line: 189, column: 3)
!17225 = !DILocation(line: 189, column: 8, scope: !17224)
!17226 = !DILocation(line: 189, column: 23, scope: !17227)
!17227 = distinct !DILexicalBlock(scope: !17224, file: !17072, line: 189, column: 3)
!17228 = !DILocation(line: 189, column: 31, scope: !17227)
!17229 = !DILocation(line: 189, column: 3, scope: !17224)
!17230 = !DILocation(line: 189, column: 52, scope: !17227)
!17231 = !DILocation(line: 189, column: 3, scope: !17227)
!17232 = distinct !{!17232, !17229, !17233}
!17233 = !DILocation(line: 190, column: 5, scope: !17224)
!17234 = !DILocation(line: 191, column: 20, scope: !17208)
!17235 = !DILocation(line: 191, column: 28, scope: !17208)
!17236 = !DILocation(line: 191, column: 42, scope: !17208)
!17237 = !DILocation(line: 191, column: 51, scope: !17208)
!17238 = !DILocation(line: 191, column: 60, scope: !17208)
!17239 = !DILocation(line: 191, column: 69, scope: !17208)
!17240 = !DILocation(line: 191, column: 3, scope: !17208)
!17241 = !DILocation(line: 192, column: 1, scope: !17208)
!17242 = distinct !DISubprogram(name: "version_etc_va", scope: !17072, file: !17072, line: 199, type: !17243, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1402, retainedNodes: !213)
!17243 = !DISubroutineType(types: !17244)
!17244 = !{null, !17075, !113, !113, !113, !17245}
!17245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!17246 = !DILocalVariable(name: "stream", arg: 1, scope: !17242, file: !17072, line: 199, type: !17075)
!17247 = !DILocation(line: 199, column: 23, scope: !17242)
!17248 = !DILocalVariable(name: "command_name", arg: 2, scope: !17242, file: !17072, line: 200, type: !113)
!17249 = !DILocation(line: 200, column: 29, scope: !17242)
!17250 = !DILocalVariable(name: "package", arg: 3, scope: !17242, file: !17072, line: 200, type: !113)
!17251 = !DILocation(line: 200, column: 55, scope: !17242)
!17252 = !DILocalVariable(name: "version", arg: 4, scope: !17242, file: !17072, line: 201, type: !113)
!17253 = !DILocation(line: 201, column: 29, scope: !17242)
!17254 = !DILocalVariable(name: "authors", arg: 5, scope: !17242, file: !17072, line: 201, type: !17245)
!17255 = !DILocation(line: 201, column: 46, scope: !17242)
!17256 = !DILocalVariable(name: "n_authors", scope: !17242, file: !17072, line: 203, type: !52)
!17257 = !DILocation(line: 203, column: 10, scope: !17242)
!17258 = !DILocalVariable(name: "authtab", scope: !17242, file: !17072, line: 204, type: !1415)
!17259 = !DILocation(line: 204, column: 15, scope: !17242)
!17260 = !DILocation(line: 206, column: 18, scope: !17261)
!17261 = distinct !DILexicalBlock(scope: !17242, file: !17072, line: 206, column: 3)
!17262 = !DILocation(line: 206, column: 8, scope: !17261)
!17263 = !DILocation(line: 207, column: 8, scope: !17264)
!17264 = distinct !DILexicalBlock(scope: !17261, file: !17072, line: 206, column: 3)
!17265 = !DILocation(line: 207, column: 18, scope: !17264)
!17266 = !DILocation(line: 208, column: 10, scope: !17264)
!17267 = !DILocation(line: 208, column: 35, scope: !17264)
!17268 = !DILocation(line: 208, column: 22, scope: !17264)
!17269 = !DILocation(line: 208, column: 14, scope: !17264)
!17270 = !DILocation(line: 208, column: 33, scope: !17264)
!17271 = !DILocation(line: 208, column: 67, scope: !17264)
!17272 = !DILocation(line: 0, scope: !17264)
!17273 = !DILocation(line: 206, column: 3, scope: !17261)
!17274 = !DILocation(line: 209, column: 17, scope: !17264)
!17275 = !DILocation(line: 206, column: 3, scope: !17264)
!17276 = distinct !{!17276, !17273, !17277}
!17277 = !DILocation(line: 210, column: 5, scope: !17261)
!17278 = !DILocation(line: 211, column: 20, scope: !17242)
!17279 = !DILocation(line: 211, column: 28, scope: !17242)
!17280 = !DILocation(line: 211, column: 42, scope: !17242)
!17281 = !DILocation(line: 211, column: 51, scope: !17242)
!17282 = !DILocation(line: 212, column: 20, scope: !17242)
!17283 = !DILocation(line: 212, column: 29, scope: !17242)
!17284 = !DILocation(line: 211, column: 3, scope: !17242)
!17285 = !DILocation(line: 213, column: 1, scope: !17242)
!17286 = distinct !DISubprogram(name: "version_etc", scope: !17072, file: !17072, line: 230, type: !17287, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1402, retainedNodes: !213)
!17287 = !DISubroutineType(types: !17288)
!17288 = !{null, !17075, !113, !113, !113, null}
!17289 = !DILocalVariable(name: "stream", arg: 1, scope: !17286, file: !17072, line: 230, type: !17075)
!17290 = !DILocation(line: 230, column: 20, scope: !17286)
!17291 = !DILocalVariable(name: "command_name", arg: 2, scope: !17286, file: !17072, line: 231, type: !113)
!17292 = !DILocation(line: 231, column: 26, scope: !17286)
!17293 = !DILocalVariable(name: "package", arg: 3, scope: !17286, file: !17072, line: 231, type: !113)
!17294 = !DILocation(line: 231, column: 52, scope: !17286)
!17295 = !DILocalVariable(name: "version", arg: 4, scope: !17286, file: !17072, line: 232, type: !113)
!17296 = !DILocation(line: 232, column: 26, scope: !17286)
!17297 = !DILocalVariable(name: "authors", scope: !17286, file: !17072, line: 234, type: !1416)
!17298 = !DILocation(line: 234, column: 11, scope: !17286)
!17299 = !DILocation(line: 236, column: 3, scope: !17286)
!17300 = !DILocation(line: 237, column: 19, scope: !17286)
!17301 = !DILocation(line: 237, column: 27, scope: !17286)
!17302 = !DILocation(line: 237, column: 41, scope: !17286)
!17303 = !DILocation(line: 237, column: 50, scope: !17286)
!17304 = !DILocation(line: 237, column: 59, scope: !17286)
!17305 = !DILocation(line: 237, column: 3, scope: !17286)
!17306 = !DILocation(line: 238, column: 3, scope: !17286)
!17307 = !DILocation(line: 239, column: 1, scope: !17286)
!17308 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !17072, file: !17072, line: 242, type: !562, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1402, retainedNodes: !213)
!17309 = !DILocation(line: 244, column: 3, scope: !17308)
!17310 = !DILocation(line: 249, column: 11, scope: !17308)
!17311 = !DILocation(line: 249, column: 3, scope: !17308)
!17312 = !DILocation(line: 255, column: 11, scope: !17308)
!17313 = !DILocation(line: 255, column: 3, scope: !17308)
!17314 = !DILocation(line: 260, column: 11, scope: !17308)
!17315 = !DILocation(line: 260, column: 3, scope: !17308)
!17316 = !DILocation(line: 262, column: 1, scope: !17308)
!17317 = !DILocation(line: 37, column: 9, scope: !17318)
!17318 = distinct !DILexicalBlock(scope: !978, file: !979, line: 37, column: 7)
!17319 = !DILocation(line: 37, column: 7, scope: !978)
!17320 = !DILocalVariable(name: "can", scope: !17321, file: !979, line: 39, type: !139)
!17321 = distinct !DILexicalBlock(scope: !17318, file: !979, line: 38, column: 5)
!17322 = !DILocation(line: 39, column: 12, scope: !17321)
!17323 = !DILocation(line: 44, column: 14, scope: !17321)
!17324 = !DILocation(line: 44, column: 25, scope: !17321)
!17325 = !DILocation(line: 44, column: 11, scope: !17321)
!17326 = !DILocation(line: 46, column: 19, scope: !17321)
!17327 = !DILocation(line: 46, column: 17, scope: !17321)
!17328 = !DILocation(line: 47, column: 19, scope: !17321)
!17329 = !DILocation(line: 48, column: 5, scope: !17321)
!17330 = !DILocation(line: 50, column: 10, scope: !978)
!17331 = !DILocation(line: 50, column: 3, scope: !978)
!17332 = distinct !DISubprogram(name: "xnmalloc", scope: !17333, file: !17333, line: 99, type: !17334, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1464, retainedNodes: !213)
!17333 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mohamad/clone/coreutils")
!17334 = !DISubroutineType(types: !17335)
!17335 = !{!47, !52, !52}
!17336 = !DILocalVariable(name: "n", arg: 1, scope: !17332, file: !17333, line: 99, type: !52)
!17337 = !DILocation(line: 99, column: 18, scope: !17332)
!17338 = !DILocalVariable(name: "s", arg: 2, scope: !17332, file: !17333, line: 99, type: !52)
!17339 = !DILocation(line: 99, column: 28, scope: !17332)
!17340 = !DILocation(line: 101, column: 7, scope: !17341)
!17341 = distinct !DILexicalBlock(scope: !17332, file: !17333, line: 101, column: 7)
!17342 = !DILocation(line: 101, column: 7, scope: !17332)
!17343 = !DILocation(line: 102, column: 5, scope: !17341)
!17344 = !DILocation(line: 103, column: 19, scope: !17332)
!17345 = !DILocation(line: 103, column: 23, scope: !17332)
!17346 = !DILocation(line: 103, column: 21, scope: !17332)
!17347 = !DILocation(line: 103, column: 10, scope: !17332)
!17348 = !DILocation(line: 103, column: 3, scope: !17332)
!17349 = distinct !DISubprogram(name: "xmalloc", scope: !17350, file: !17350, line: 39, type: !17351, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1464, retainedNodes: !213)
!17350 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mohamad/clone/coreutils")
!17351 = !DISubroutineType(types: !17352)
!17352 = !{!47, !52}
!17353 = !DILocalVariable(name: "n", arg: 1, scope: !17349, file: !17350, line: 39, type: !52)
!17354 = !DILocation(line: 39, column: 17, scope: !17349)
!17355 = !DILocalVariable(name: "p", scope: !17349, file: !17350, line: 41, type: !47)
!17356 = !DILocation(line: 41, column: 9, scope: !17349)
!17357 = !DILocation(line: 41, column: 21, scope: !17349)
!17358 = !DILocation(line: 41, column: 13, scope: !17349)
!17359 = !DILocation(line: 42, column: 8, scope: !17360)
!17360 = distinct !DILexicalBlock(scope: !17349, file: !17350, line: 42, column: 7)
!17361 = !DILocation(line: 42, column: 10, scope: !17360)
!17362 = !DILocation(line: 42, column: 13, scope: !17360)
!17363 = !DILocation(line: 42, column: 15, scope: !17360)
!17364 = !DILocation(line: 42, column: 7, scope: !17349)
!17365 = !DILocation(line: 43, column: 5, scope: !17360)
!17366 = !DILocation(line: 44, column: 10, scope: !17349)
!17367 = !DILocation(line: 44, column: 3, scope: !17349)
!17368 = distinct !DISubprogram(name: "xnrealloc", scope: !17333, file: !17333, line: 112, type: !17369, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1464, retainedNodes: !213)
!17369 = !DISubroutineType(types: !17370)
!17370 = !{!47, !47, !52, !52}
!17371 = !DILocalVariable(name: "p", arg: 1, scope: !17368, file: !17333, line: 112, type: !47)
!17372 = !DILocation(line: 112, column: 18, scope: !17368)
!17373 = !DILocalVariable(name: "n", arg: 2, scope: !17368, file: !17333, line: 112, type: !52)
!17374 = !DILocation(line: 112, column: 28, scope: !17368)
!17375 = !DILocalVariable(name: "s", arg: 3, scope: !17368, file: !17333, line: 112, type: !52)
!17376 = !DILocation(line: 112, column: 38, scope: !17368)
!17377 = !DILocation(line: 114, column: 7, scope: !17378)
!17378 = distinct !DILexicalBlock(scope: !17368, file: !17333, line: 114, column: 7)
!17379 = !DILocation(line: 114, column: 7, scope: !17368)
!17380 = !DILocation(line: 115, column: 5, scope: !17378)
!17381 = !DILocation(line: 116, column: 20, scope: !17368)
!17382 = !DILocation(line: 116, column: 23, scope: !17368)
!17383 = !DILocation(line: 116, column: 27, scope: !17368)
!17384 = !DILocation(line: 116, column: 25, scope: !17368)
!17385 = !DILocation(line: 116, column: 10, scope: !17368)
!17386 = !DILocation(line: 116, column: 3, scope: !17368)
!17387 = distinct !DISubprogram(name: "xrealloc", scope: !17350, file: !17350, line: 51, type: !17388, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1464, retainedNodes: !213)
!17388 = !DISubroutineType(types: !17389)
!17389 = !{!47, !47, !52}
!17390 = !DILocalVariable(name: "p", arg: 1, scope: !17387, file: !17350, line: 51, type: !47)
!17391 = !DILocation(line: 51, column: 17, scope: !17387)
!17392 = !DILocalVariable(name: "n", arg: 2, scope: !17387, file: !17350, line: 51, type: !52)
!17393 = !DILocation(line: 51, column: 27, scope: !17387)
!17394 = !DILocation(line: 53, column: 8, scope: !17395)
!17395 = distinct !DILexicalBlock(scope: !17387, file: !17350, line: 53, column: 7)
!17396 = !DILocation(line: 53, column: 10, scope: !17395)
!17397 = !DILocation(line: 53, column: 13, scope: !17395)
!17398 = !DILocation(line: 53, column: 7, scope: !17387)
!17399 = !DILocation(line: 57, column: 13, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17395, file: !17350, line: 54, column: 5)
!17401 = !DILocation(line: 57, column: 7, scope: !17400)
!17402 = !DILocation(line: 58, column: 7, scope: !17400)
!17403 = !DILocation(line: 61, column: 16, scope: !17387)
!17404 = !DILocation(line: 61, column: 19, scope: !17387)
!17405 = !DILocation(line: 61, column: 7, scope: !17387)
!17406 = !DILocation(line: 61, column: 5, scope: !17387)
!17407 = !DILocation(line: 62, column: 8, scope: !17408)
!17408 = distinct !DILexicalBlock(scope: !17387, file: !17350, line: 62, column: 7)
!17409 = !DILocation(line: 62, column: 10, scope: !17408)
!17410 = !DILocation(line: 62, column: 13, scope: !17408)
!17411 = !DILocation(line: 62, column: 7, scope: !17387)
!17412 = !DILocation(line: 63, column: 5, scope: !17408)
!17413 = !DILocation(line: 64, column: 10, scope: !17387)
!17414 = !DILocation(line: 64, column: 3, scope: !17387)
!17415 = !DILocation(line: 65, column: 1, scope: !17387)
!17416 = distinct !DISubprogram(name: "x2nrealloc", scope: !17333, file: !17333, line: 174, type: !17417, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1464, retainedNodes: !213)
!17417 = !DISubroutineType(types: !17418)
!17418 = !{!47, !47, !9678, !52}
!17419 = !DILocalVariable(name: "p", arg: 1, scope: !17416, file: !17333, line: 174, type: !47)
!17420 = !DILocation(line: 174, column: 19, scope: !17416)
!17421 = !DILocalVariable(name: "pn", arg: 2, scope: !17416, file: !17333, line: 174, type: !9678)
!17422 = !DILocation(line: 174, column: 30, scope: !17416)
!17423 = !DILocalVariable(name: "s", arg: 3, scope: !17416, file: !17333, line: 174, type: !52)
!17424 = !DILocation(line: 174, column: 41, scope: !17416)
!17425 = !DILocalVariable(name: "n", scope: !17416, file: !17333, line: 176, type: !52)
!17426 = !DILocation(line: 176, column: 10, scope: !17416)
!17427 = !DILocation(line: 176, column: 15, scope: !17416)
!17428 = !DILocation(line: 176, column: 14, scope: !17416)
!17429 = !DILocation(line: 178, column: 9, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !17416, file: !17333, line: 178, column: 7)
!17431 = !DILocation(line: 178, column: 7, scope: !17416)
!17432 = !DILocation(line: 180, column: 13, scope: !17433)
!17433 = distinct !DILexicalBlock(scope: !17434, file: !17333, line: 180, column: 11)
!17434 = distinct !DILexicalBlock(scope: !17430, file: !17333, line: 179, column: 5)
!17435 = !DILocation(line: 180, column: 11, scope: !17434)
!17436 = !DILocation(line: 188, column: 32, scope: !17437)
!17437 = distinct !DILexicalBlock(scope: !17433, file: !17333, line: 181, column: 9)
!17438 = !DILocation(line: 188, column: 30, scope: !17437)
!17439 = !DILocation(line: 188, column: 13, scope: !17437)
!17440 = !DILocation(line: 189, column: 17, scope: !17437)
!17441 = !DILocation(line: 189, column: 16, scope: !17437)
!17442 = !DILocation(line: 189, column: 13, scope: !17437)
!17443 = !DILocation(line: 190, column: 9, scope: !17437)
!17444 = !DILocation(line: 191, column: 11, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17434, file: !17333, line: 191, column: 11)
!17446 = !DILocation(line: 191, column: 11, scope: !17434)
!17447 = !DILocation(line: 192, column: 9, scope: !17445)
!17448 = !DILocation(line: 193, column: 5, scope: !17434)
!17449 = !DILocation(line: 200, column: 71, scope: !17450)
!17450 = distinct !DILexicalBlock(scope: !17451, file: !17333, line: 200, column: 11)
!17451 = distinct !DILexicalBlock(scope: !17430, file: !17333, line: 195, column: 5)
!17452 = !DILocation(line: 200, column: 69, scope: !17450)
!17453 = !DILocation(line: 201, column: 14, scope: !17450)
!17454 = !DILocation(line: 201, column: 11, scope: !17450)
!17455 = !DILocation(line: 200, column: 11, scope: !17451)
!17456 = !DILocation(line: 202, column: 9, scope: !17450)
!17457 = !DILocation(line: 203, column: 12, scope: !17451)
!17458 = !DILocation(line: 203, column: 14, scope: !17451)
!17459 = !DILocation(line: 203, column: 18, scope: !17451)
!17460 = !DILocation(line: 203, column: 9, scope: !17451)
!17461 = !DILocation(line: 206, column: 9, scope: !17416)
!17462 = !DILocation(line: 206, column: 4, scope: !17416)
!17463 = !DILocation(line: 206, column: 7, scope: !17416)
!17464 = !DILocation(line: 207, column: 20, scope: !17416)
!17465 = !DILocation(line: 207, column: 23, scope: !17416)
!17466 = !DILocation(line: 207, column: 27, scope: !17416)
!17467 = !DILocation(line: 207, column: 25, scope: !17416)
!17468 = !DILocation(line: 207, column: 10, scope: !17416)
!17469 = !DILocation(line: 207, column: 3, scope: !17416)
!17470 = distinct !DISubprogram(name: "xcharalloc", scope: !17333, file: !17333, line: 216, type: !17471, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1464, retainedNodes: !213)
!17471 = !DISubroutineType(types: !17472)
!17472 = !{!7, !52}
!17473 = !DILocalVariable(name: "n", arg: 1, scope: !17470, file: !17333, line: 216, type: !52)
!17474 = !DILocation(line: 216, column: 20, scope: !17470)
!17475 = !DILocation(line: 218, column: 10, scope: !17470)
!17476 = !DILocation(line: 218, column: 3, scope: !17470)
!17477 = distinct !DISubprogram(name: "x2realloc", scope: !17350, file: !17350, line: 74, type: !17478, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1464, retainedNodes: !213)
!17478 = !DISubroutineType(types: !17479)
!17479 = !{!47, !47, !9678}
!17480 = !DILocalVariable(name: "p", arg: 1, scope: !17477, file: !17350, line: 74, type: !47)
!17481 = !DILocation(line: 74, column: 18, scope: !17477)
!17482 = !DILocalVariable(name: "pn", arg: 2, scope: !17477, file: !17350, line: 74, type: !9678)
!17483 = !DILocation(line: 74, column: 29, scope: !17477)
!17484 = !DILocation(line: 76, column: 22, scope: !17477)
!17485 = !DILocation(line: 76, column: 25, scope: !17477)
!17486 = !DILocation(line: 76, column: 10, scope: !17477)
!17487 = !DILocation(line: 76, column: 3, scope: !17477)
!17488 = distinct !DISubprogram(name: "xzalloc", scope: !17350, file: !17350, line: 84, type: !17351, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1464, retainedNodes: !213)
!17489 = !DILocalVariable(name: "s", arg: 1, scope: !17488, file: !17350, line: 84, type: !52)
!17490 = !DILocation(line: 84, column: 17, scope: !17488)
!17491 = !DILocation(line: 86, column: 27, scope: !17488)
!17492 = !DILocation(line: 86, column: 18, scope: !17488)
!17493 = !DILocation(line: 86, column: 34, scope: !17488)
!17494 = !DILocation(line: 86, column: 10, scope: !17488)
!17495 = !DILocation(line: 86, column: 3, scope: !17488)
!17496 = distinct !DISubprogram(name: "xcalloc", scope: !17350, file: !17350, line: 93, type: !17334, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1464, retainedNodes: !213)
!17497 = !DILocalVariable(name: "n", arg: 1, scope: !17496, file: !17350, line: 93, type: !52)
!17498 = !DILocation(line: 93, column: 17, scope: !17496)
!17499 = !DILocalVariable(name: "s", arg: 2, scope: !17496, file: !17350, line: 93, type: !52)
!17500 = !DILocation(line: 93, column: 27, scope: !17496)
!17501 = !DILocalVariable(name: "p", scope: !17496, file: !17350, line: 95, type: !47)
!17502 = !DILocation(line: 95, column: 9, scope: !17496)
!17503 = !DILocation(line: 100, column: 7, scope: !17504)
!17504 = distinct !DILexicalBlock(scope: !17496, file: !17350, line: 100, column: 7)
!17505 = !DILocation(line: 101, column: 7, scope: !17504)
!17506 = !DILocation(line: 101, column: 26, scope: !17504)
!17507 = !DILocation(line: 101, column: 29, scope: !17504)
!17508 = !DILocation(line: 101, column: 18, scope: !17504)
!17509 = !DILocation(line: 101, column: 16, scope: !17504)
!17510 = !DILocation(line: 100, column: 7, scope: !17496)
!17511 = !DILocation(line: 102, column: 5, scope: !17504)
!17512 = !DILocation(line: 103, column: 10, scope: !17496)
!17513 = !DILocation(line: 103, column: 3, scope: !17496)
!17514 = distinct !DISubprogram(name: "xmemdup", scope: !17350, file: !17350, line: 111, type: !7434, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1464, retainedNodes: !213)
!17515 = !DILocalVariable(name: "p", arg: 1, scope: !17514, file: !17350, line: 111, type: !553)
!17516 = !DILocation(line: 111, column: 22, scope: !17514)
!17517 = !DILocalVariable(name: "s", arg: 2, scope: !17514, file: !17350, line: 111, type: !52)
!17518 = !DILocation(line: 111, column: 32, scope: !17514)
!17519 = !DILocation(line: 113, column: 27, scope: !17514)
!17520 = !DILocation(line: 113, column: 18, scope: !17514)
!17521 = !DILocation(line: 113, column: 31, scope: !17514)
!17522 = !DILocation(line: 113, column: 34, scope: !17514)
!17523 = !DILocation(line: 113, column: 10, scope: !17514)
!17524 = !DILocation(line: 113, column: 3, scope: !17514)
!17525 = distinct !DISubprogram(name: "xstrdup", scope: !17350, file: !17350, line: 119, type: !10060, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1464, retainedNodes: !213)
!17526 = !DILocalVariable(name: "string", arg: 1, scope: !17525, file: !17350, line: 119, type: !113)
!17527 = !DILocation(line: 119, column: 22, scope: !17525)
!17528 = !DILocation(line: 121, column: 19, scope: !17525)
!17529 = !DILocation(line: 121, column: 35, scope: !17525)
!17530 = !DILocation(line: 121, column: 27, scope: !17525)
!17531 = !DILocation(line: 121, column: 43, scope: !17525)
!17532 = !DILocation(line: 121, column: 10, scope: !17525)
!17533 = !DILocation(line: 121, column: 3, scope: !17525)
!17534 = distinct !DISubprogram(name: "xalloc_die", scope: !17535, file: !17535, line: 32, type: !562, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !1467, retainedNodes: !213)
!17535 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mohamad/clone/coreutils")
!17536 = !DILocation(line: 34, column: 10, scope: !17534)
!17537 = !DILocation(line: 34, column: 33, scope: !17534)
!17538 = !DILocation(line: 34, column: 3, scope: !17534)
!17539 = !DILocation(line: 40, column: 3, scope: !17534)
!17540 = distinct !DISubprogram(name: "xfts_open", scope: !17541, file: !17541, line: 33, type: !17542, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1470, retainedNodes: !213)
!17541 = !DIFile(filename: "lib/xfts.c", directory: "/home/mohamad/clone/coreutils")
!17542 = !DISubroutineType(types: !17543)
!17543 = !{!1473, !2827, !5, !17544}
!17544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17545, size: 64)
!17545 = !DISubroutineType(types: !17546)
!17546 = !{!5, !17547, !17547}
!17547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17548, size: 64)
!17548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!17549 = !DILocalVariable(name: "argv", arg: 1, scope: !17540, file: !17541, line: 33, type: !2827)
!17550 = !DILocation(line: 33, column: 26, scope: !17540)
!17551 = !DILocalVariable(name: "options", arg: 2, scope: !17540, file: !17541, line: 33, type: !5)
!17552 = !DILocation(line: 33, column: 36, scope: !17540)
!17553 = !DILocalVariable(name: "compar", arg: 3, scope: !17540, file: !17541, line: 34, type: !17544)
!17554 = !DILocation(line: 34, column: 18, scope: !17540)
!17555 = !DILocalVariable(name: "fts", scope: !17540, file: !17541, line: 36, type: !1473)
!17556 = !DILocation(line: 36, column: 8, scope: !17540)
!17557 = !DILocation(line: 36, column: 24, scope: !17540)
!17558 = !DILocation(line: 36, column: 30, scope: !17540)
!17559 = !DILocation(line: 36, column: 38, scope: !17540)
!17560 = !DILocation(line: 36, column: 51, scope: !17540)
!17561 = !DILocation(line: 36, column: 14, scope: !17540)
!17562 = !DILocation(line: 37, column: 7, scope: !17563)
!17563 = distinct !DILexicalBlock(scope: !17540, file: !17541, line: 37, column: 7)
!17564 = !DILocation(line: 37, column: 11, scope: !17563)
!17565 = !DILocation(line: 37, column: 7, scope: !17540)
!17566 = !DILocation(line: 41, column: 7, scope: !17567)
!17567 = distinct !DILexicalBlock(scope: !17563, file: !17541, line: 38, column: 5)
!17568 = !DILocation(line: 42, column: 7, scope: !17567)
!17569 = !DILocation(line: 45, column: 10, scope: !17540)
!17570 = !DILocation(line: 45, column: 3, scope: !17540)
!17571 = distinct !DISubprogram(name: "cycle_warning_required", scope: !17541, file: !17541, line: 56, type: !17572, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1470, retainedNodes: !213)
!17572 = !DISubroutineType(types: !17573)
!17573 = !{!139, !17574, !17548}
!17574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!17575 = !DILocalVariable(name: "fts", arg: 1, scope: !17571, file: !17541, line: 56, type: !17574)
!17576 = !DILocation(line: 56, column: 36, scope: !17571)
!17577 = !DILocalVariable(name: "ent", arg: 2, scope: !17571, file: !17541, line: 56, type: !17548)
!17578 = !DILocation(line: 56, column: 55, scope: !17571)
!17579 = !DILocation(line: 62, column: 12, scope: !17571)
!17580 = !DILocation(line: 62, column: 38, scope: !17571)
!17581 = !DILocation(line: 62, column: 42, scope: !17571)
!17582 = !DILocation(line: 63, column: 11, scope: !17571)
!17583 = !DILocation(line: 63, column: 15, scope: !17571)
!17584 = !DILocation(line: 63, column: 41, scope: !17571)
!17585 = !DILocation(line: 63, column: 44, scope: !17571)
!17586 = !DILocation(line: 64, column: 15, scope: !17571)
!17587 = !DILocation(line: 64, column: 18, scope: !17571)
!17588 = !DILocation(line: 64, column: 23, scope: !17571)
!17589 = !DILocation(line: 64, column: 33, scope: !17571)
!17590 = !DILocation(line: 0, scope: !17571)
!17591 = !DILocation(line: 62, column: 3, scope: !17571)
!17592 = distinct !DISubprogram(name: "yesno", scope: !17593, file: !17593, line: 32, type: !980, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1561, retainedNodes: !213)
!17593 = !DIFile(filename: "lib/yesno.c", directory: "/home/mohamad/clone/coreutils")
!17594 = !DILocalVariable(name: "yes", scope: !17592, file: !17593, line: 34, type: !139)
!17595 = !DILocation(line: 34, column: 8, scope: !17592)
!17596 = !DILocalVariable(name: "response", scope: !17592, file: !17593, line: 37, type: !7)
!17597 = !DILocation(line: 37, column: 9, scope: !17592)
!17598 = !DILocalVariable(name: "response_size", scope: !17592, file: !17593, line: 38, type: !52)
!17599 = !DILocation(line: 38, column: 10, scope: !17592)
!17600 = !DILocalVariable(name: "response_len", scope: !17592, file: !17593, line: 39, type: !529)
!17601 = !DILocation(line: 39, column: 11, scope: !17592)
!17602 = !DILocation(line: 39, column: 62, scope: !17592)
!17603 = !DILocation(line: 39, column: 26, scope: !17592)
!17604 = !DILocation(line: 41, column: 7, scope: !17605)
!17605 = distinct !DILexicalBlock(scope: !17592, file: !17593, line: 41, column: 7)
!17606 = !DILocation(line: 41, column: 20, scope: !17605)
!17607 = !DILocation(line: 41, column: 7, scope: !17592)
!17608 = !DILocation(line: 42, column: 9, scope: !17605)
!17609 = !DILocation(line: 42, column: 5, scope: !17605)
!17610 = !DILocation(line: 47, column: 11, scope: !17611)
!17611 = distinct !DILexicalBlock(scope: !17612, file: !17593, line: 47, column: 11)
!17612 = distinct !DILexicalBlock(scope: !17605, file: !17593, line: 44, column: 5)
!17613 = !DILocation(line: 47, column: 20, scope: !17611)
!17614 = !DILocation(line: 47, column: 33, scope: !17611)
!17615 = !DILocation(line: 47, column: 38, scope: !17611)
!17616 = !DILocation(line: 47, column: 11, scope: !17612)
!17617 = !DILocation(line: 48, column: 9, scope: !17611)
!17618 = !DILocation(line: 48, column: 18, scope: !17611)
!17619 = !DILocation(line: 48, column: 31, scope: !17611)
!17620 = !DILocation(line: 48, column: 36, scope: !17611)
!17621 = !DILocation(line: 49, column: 27, scope: !17612)
!17622 = !DILocation(line: 49, column: 18, scope: !17612)
!17623 = !DILocation(line: 49, column: 16, scope: !17612)
!17624 = !DILocation(line: 49, column: 11, scope: !17612)
!17625 = !DILocation(line: 52, column: 9, scope: !17592)
!17626 = !DILocation(line: 52, column: 3, scope: !17592)
!17627 = !DILocation(line: 62, column: 10, scope: !17592)
!17628 = !DILocation(line: 62, column: 3, scope: !17592)
!17629 = distinct !DISubprogram(name: "rpl_fflush", scope: !17630, file: !17630, line: 129, type: !17631, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1602, retainedNodes: !213)
!17630 = !DIFile(filename: "lib/fflush.c", directory: "/home/mohamad/clone/coreutils")
!17631 = !DISubroutineType(types: !17632)
!17632 = !{!5, !17633}
!17633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!17634 = !DILocalVariable(name: "stream", arg: 1, scope: !17629, file: !17630, line: 129, type: !17633)
!17635 = !DILocation(line: 129, column: 19, scope: !17629)
!17636 = !DILocation(line: 150, column: 7, scope: !17637)
!17637 = distinct !DILexicalBlock(scope: !17629, file: !17630, line: 150, column: 7)
!17638 = !DILocation(line: 150, column: 14, scope: !17637)
!17639 = !DILocation(line: 150, column: 22, scope: !17637)
!17640 = !DILocation(line: 150, column: 27, scope: !17637)
!17641 = !DILocation(line: 150, column: 7, scope: !17629)
!17642 = !DILocation(line: 151, column: 20, scope: !17637)
!17643 = !DILocation(line: 151, column: 12, scope: !17637)
!17644 = !DILocation(line: 151, column: 5, scope: !17637)
!17645 = !DILocation(line: 156, column: 44, scope: !17629)
!17646 = !DILocation(line: 156, column: 3, scope: !17629)
!17647 = !DILocation(line: 158, column: 18, scope: !17629)
!17648 = !DILocation(line: 158, column: 10, scope: !17629)
!17649 = !DILocation(line: 158, column: 3, scope: !17629)
!17650 = !DILocation(line: 232, column: 1, scope: !17629)
!17651 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !17630, file: !17630, line: 41, type: !17652, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1602, retainedNodes: !213)
!17652 = !DISubroutineType(types: !17653)
!17653 = !{null, !17633}
!17654 = !DILocalVariable(name: "fp", arg: 1, scope: !17651, file: !17630, line: 41, type: !17633)
!17655 = !DILocation(line: 41, column: 48, scope: !17651)
!17656 = !DILocation(line: 43, column: 7, scope: !17657)
!17657 = distinct !DILexicalBlock(scope: !17651, file: !17630, line: 43, column: 7)
!17658 = !DILocation(line: 43, column: 11, scope: !17657)
!17659 = !DILocation(line: 43, column: 18, scope: !17657)
!17660 = !DILocation(line: 43, column: 7, scope: !17651)
!17661 = !DILocation(line: 45, column: 13, scope: !17657)
!17662 = !DILocation(line: 45, column: 5, scope: !17657)
!17663 = !DILocation(line: 46, column: 1, scope: !17651)
!17664 = distinct !DISubprogram(name: "freadahead", scope: !17665, file: !17665, line: 34, type: !17666, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1644, retainedNodes: !213)
!17665 = !DIFile(filename: "lib/freadahead.c", directory: "/home/mohamad/clone/coreutils")
!17666 = !DISubroutineType(types: !17667)
!17667 = !{!52, !17668}
!17668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!17669 = !DILocalVariable(name: "fp", arg: 1, scope: !17664, file: !17665, line: 34, type: !17668)
!17670 = !DILocation(line: 34, column: 19, scope: !17664)
!17671 = !DILocation(line: 38, column: 7, scope: !17672)
!17672 = distinct !DILexicalBlock(scope: !17664, file: !17665, line: 38, column: 7)
!17673 = !DILocation(line: 38, column: 11, scope: !17672)
!17674 = !DILocation(line: 38, column: 27, scope: !17672)
!17675 = !DILocation(line: 38, column: 31, scope: !17672)
!17676 = !DILocation(line: 38, column: 25, scope: !17672)
!17677 = !DILocation(line: 38, column: 7, scope: !17664)
!17678 = !DILocation(line: 39, column: 5, scope: !17672)
!17679 = !DILocation(line: 40, column: 11, scope: !17664)
!17680 = !DILocation(line: 40, column: 15, scope: !17664)
!17681 = !DILocation(line: 40, column: 30, scope: !17664)
!17682 = !DILocation(line: 40, column: 34, scope: !17664)
!17683 = !DILocation(line: 40, column: 28, scope: !17664)
!17684 = !DILocation(line: 41, column: 13, scope: !17664)
!17685 = !DILocation(line: 41, column: 17, scope: !17664)
!17686 = !DILocation(line: 41, column: 24, scope: !17664)
!17687 = !DILocation(line: 41, column: 42, scope: !17664)
!17688 = !DILocation(line: 41, column: 46, scope: !17664)
!17689 = !DILocation(line: 41, column: 61, scope: !17664)
!17690 = !DILocation(line: 41, column: 65, scope: !17664)
!17691 = !DILocation(line: 41, column: 59, scope: !17664)
!17692 = !DILocation(line: 41, column: 10, scope: !17664)
!17693 = !DILocation(line: 40, column: 3, scope: !17664)
!17694 = !DILocation(line: 103, column: 1, scope: !17664)
!17695 = distinct !DISubprogram(name: "rpl_fseeko", scope: !17696, file: !17696, line: 28, type: !17697, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1686, retainedNodes: !213)
!17696 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mohamad/clone/coreutils")
!17697 = !DISubroutineType(types: !17698)
!17698 = !{!5, !17699, !292, !5}
!17699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!17700 = !DILocalVariable(name: "fp", arg: 1, scope: !17695, file: !17696, line: 28, type: !17699)
!17701 = !DILocation(line: 28, column: 15, scope: !17695)
!17702 = !DILocalVariable(name: "offset", arg: 2, scope: !17695, file: !17696, line: 28, type: !292)
!17703 = !DILocation(line: 28, column: 25, scope: !17695)
!17704 = !DILocalVariable(name: "whence", arg: 3, scope: !17695, file: !17696, line: 28, type: !5)
!17705 = !DILocation(line: 28, column: 37, scope: !17695)
!17706 = !DILocation(line: 52, column: 7, scope: !17707)
!17707 = distinct !DILexicalBlock(scope: !17695, file: !17696, line: 52, column: 7)
!17708 = !DILocation(line: 52, column: 11, scope: !17707)
!17709 = !DILocation(line: 52, column: 27, scope: !17707)
!17710 = !DILocation(line: 52, column: 31, scope: !17707)
!17711 = !DILocation(line: 52, column: 24, scope: !17707)
!17712 = !DILocation(line: 53, column: 7, scope: !17707)
!17713 = !DILocation(line: 53, column: 10, scope: !17707)
!17714 = !DILocation(line: 53, column: 14, scope: !17707)
!17715 = !DILocation(line: 53, column: 31, scope: !17707)
!17716 = !DILocation(line: 53, column: 35, scope: !17707)
!17717 = !DILocation(line: 53, column: 28, scope: !17707)
!17718 = !DILocation(line: 54, column: 7, scope: !17707)
!17719 = !DILocation(line: 54, column: 10, scope: !17707)
!17720 = !DILocation(line: 54, column: 14, scope: !17707)
!17721 = !DILocation(line: 54, column: 28, scope: !17707)
!17722 = !DILocation(line: 52, column: 7, scope: !17695)
!17723 = !DILocalVariable(name: "pos", scope: !17724, file: !17696, line: 117, type: !292)
!17724 = distinct !DILexicalBlock(scope: !17707, file: !17696, line: 113, column: 5)
!17725 = !DILocation(line: 117, column: 13, scope: !17724)
!17726 = !DILocation(line: 117, column: 34, scope: !17724)
!17727 = !DILocation(line: 117, column: 26, scope: !17724)
!17728 = !DILocation(line: 117, column: 39, scope: !17724)
!17729 = !DILocation(line: 117, column: 47, scope: !17724)
!17730 = !DILocation(line: 117, column: 19, scope: !17724)
!17731 = !DILocation(line: 118, column: 11, scope: !17732)
!17732 = distinct !DILexicalBlock(scope: !17724, file: !17696, line: 118, column: 11)
!17733 = !DILocation(line: 118, column: 15, scope: !17732)
!17734 = !DILocation(line: 118, column: 11, scope: !17724)
!17735 = !DILocation(line: 124, column: 11, scope: !17736)
!17736 = distinct !DILexicalBlock(scope: !17732, file: !17696, line: 119, column: 9)
!17737 = !DILocation(line: 129, column: 7, scope: !17724)
!17738 = !DILocation(line: 129, column: 11, scope: !17724)
!17739 = !DILocation(line: 129, column: 18, scope: !17724)
!17740 = !DILocation(line: 130, column: 21, scope: !17724)
!17741 = !DILocation(line: 130, column: 7, scope: !17724)
!17742 = !DILocation(line: 130, column: 11, scope: !17724)
!17743 = !DILocation(line: 130, column: 19, scope: !17724)
!17744 = !DILocation(line: 161, column: 7, scope: !17724)
!17745 = !DILocation(line: 163, column: 18, scope: !17695)
!17746 = !DILocation(line: 163, column: 22, scope: !17695)
!17747 = !DILocation(line: 163, column: 30, scope: !17695)
!17748 = !DILocation(line: 163, column: 10, scope: !17695)
!17749 = !DILocation(line: 163, column: 3, scope: !17695)
!17750 = !DILocation(line: 164, column: 1, scope: !17695)
!17751 = distinct !DISubprogram(name: "rpl_fts_open", scope: !1732, file: !1732, line: 358, type: !17752, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!17752 = !DISubroutineType(types: !17753)
!17753 = !{!1757, !2827, !5, !17754}
!17754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17755, size: 64)
!17755 = !DISubroutineType(types: !17756)
!17756 = !{!5, !1738, !1738}
!17757 = !DILocalVariable(name: "argv", arg: 1, scope: !17751, file: !1732, line: 358, type: !2827)
!17758 = !DILocation(line: 358, column: 25, scope: !17751)
!17759 = !DILocalVariable(name: "options", arg: 2, scope: !17751, file: !1732, line: 359, type: !5)
!17760 = !DILocation(line: 359, column: 24, scope: !17751)
!17761 = !DILocalVariable(name: "compar", arg: 3, scope: !17751, file: !1732, line: 360, type: !17754)
!17762 = !DILocation(line: 360, column: 17, scope: !17751)
!17763 = !DILocalVariable(name: "sp", scope: !17751, file: !1732, line: 362, type: !1757)
!17764 = !DILocation(line: 362, column: 23, scope: !17751)
!17765 = !DILocalVariable(name: "p", scope: !17751, file: !1732, line: 363, type: !1835)
!17766 = !DILocation(line: 363, column: 26, scope: !17751)
!17767 = !DILocalVariable(name: "root", scope: !17751, file: !1732, line: 363, type: !1835)
!17768 = !DILocation(line: 363, column: 30, scope: !17751)
!17769 = !DILocalVariable(name: "nitems", scope: !17751, file: !1732, line: 364, type: !52)
!17770 = !DILocation(line: 364, column: 25, scope: !17751)
!17771 = !DILocalVariable(name: "parent", scope: !17751, file: !1732, line: 365, type: !1835)
!17772 = !DILocation(line: 365, column: 17, scope: !17751)
!17773 = !DILocalVariable(name: "tmp", scope: !17751, file: !1732, line: 366, type: !1835)
!17774 = !DILocation(line: 366, column: 17, scope: !17751)
!17775 = !DILocalVariable(name: "defer_stat", scope: !17751, file: !1732, line: 367, type: !139)
!17776 = !DILocation(line: 367, column: 14, scope: !17751)
!17777 = !DILocation(line: 370, column: 13, scope: !17778)
!17778 = distinct !DILexicalBlock(scope: !17751, file: !1732, line: 370, column: 13)
!17779 = !DILocation(line: 370, column: 21, scope: !17778)
!17780 = !DILocation(line: 370, column: 13, scope: !17751)
!17781 = !DILocation(line: 371, column: 17, scope: !17782)
!17782 = distinct !DILexicalBlock(scope: !17778, file: !1732, line: 370, column: 40)
!17783 = !DILocation(line: 372, column: 17, scope: !17782)
!17784 = !DILocation(line: 374, column: 14, scope: !17785)
!17785 = distinct !DILexicalBlock(scope: !17751, file: !1732, line: 374, column: 13)
!17786 = !DILocation(line: 374, column: 22, scope: !17785)
!17787 = !DILocation(line: 374, column: 37, scope: !17785)
!17788 = !DILocation(line: 374, column: 41, scope: !17785)
!17789 = !DILocation(line: 374, column: 49, scope: !17785)
!17790 = !DILocation(line: 374, column: 13, scope: !17751)
!17791 = !DILocation(line: 375, column: 17, scope: !17792)
!17792 = distinct !DILexicalBlock(scope: !17785, file: !1732, line: 374, column: 63)
!17793 = !DILocation(line: 376, column: 17, scope: !17792)
!17794 = !DILocation(line: 378, column: 17, scope: !17795)
!17795 = distinct !DILexicalBlock(scope: !17751, file: !1732, line: 378, column: 14)
!17796 = !DILocation(line: 378, column: 25, scope: !17795)
!17797 = !DILocation(line: 378, column: 14, scope: !17751)
!17798 = !DILocation(line: 379, column: 17, scope: !17799)
!17799 = distinct !DILexicalBlock(scope: !17795, file: !1732, line: 378, column: 58)
!17800 = !DILocation(line: 380, column: 17, scope: !17799)
!17801 = !DILocation(line: 384, column: 19, scope: !17802)
!17802 = distinct !DILexicalBlock(scope: !17751, file: !1732, line: 384, column: 13)
!17803 = !DILocation(line: 384, column: 17, scope: !17802)
!17804 = !DILocation(line: 384, column: 40, scope: !17802)
!17805 = !DILocation(line: 384, column: 13, scope: !17751)
!17806 = !DILocation(line: 385, column: 17, scope: !17802)
!17807 = !DILocation(line: 386, column: 16, scope: !17751)
!17808 = !DILocation(line: 386, column: 9, scope: !17751)
!17809 = !DILocation(line: 387, column: 26, scope: !17751)
!17810 = !DILocation(line: 387, column: 9, scope: !17751)
!17811 = !DILocation(line: 387, column: 13, scope: !17751)
!17812 = !DILocation(line: 387, column: 24, scope: !17751)
!17813 = !DILocation(line: 388, column: 27, scope: !17751)
!17814 = !DILocation(line: 388, column: 9, scope: !17751)
!17815 = !DILocation(line: 388, column: 13, scope: !17751)
!17816 = !DILocation(line: 388, column: 25, scope: !17751)
!17817 = !DILocation(line: 391, column: 13, scope: !17818)
!17818 = distinct !DILexicalBlock(scope: !17751, file: !1732, line: 391, column: 13)
!17819 = !DILocation(line: 391, column: 13, scope: !17751)
!17820 = !DILocation(line: 392, column: 17, scope: !17821)
!17821 = distinct !DILexicalBlock(scope: !17818, file: !1732, line: 391, column: 33)
!17822 = !DILocation(line: 393, column: 17, scope: !17821)
!17823 = !DILocation(line: 394, column: 9, scope: !17821)
!17824 = !DILocation(line: 397, column: 9, scope: !17751)
!17825 = !DILocation(line: 397, column: 13, scope: !17751)
!17826 = !DILocation(line: 397, column: 24, scope: !17751)
!17827 = !DILocation(line: 398, column: 14, scope: !17828)
!17828 = distinct !DILexicalBlock(scope: !17751, file: !1732, line: 398, column: 14)
!17829 = !DILocation(line: 398, column: 31, scope: !17828)
!17830 = !DILocation(line: 398, column: 14, scope: !17751)
!17831 = !DILocalVariable(name: "fd", scope: !17832, file: !1732, line: 404, type: !5)
!17832 = distinct !DILexicalBlock(scope: !17828, file: !1732, line: 399, column: 11)
!17833 = !DILocation(line: 404, column: 17, scope: !17832)
!17834 = !DILocation(line: 404, column: 22, scope: !17832)
!17835 = !DILocation(line: 405, column: 17, scope: !17836)
!17836 = distinct !DILexicalBlock(scope: !17832, file: !1732, line: 405, column: 17)
!17837 = !DILocation(line: 405, column: 20, scope: !17836)
!17838 = !DILocation(line: 405, column: 17, scope: !17832)
!17839 = !DILocation(line: 423, column: 15, scope: !17840)
!17840 = distinct !DILexicalBlock(scope: !17836, file: !1732, line: 406, column: 15)
!17841 = !DILocation(line: 426, column: 24, scope: !17842)
!17842 = distinct !DILexicalBlock(scope: !17836, file: !1732, line: 425, column: 15)
!17843 = !DILocation(line: 426, column: 17, scope: !17842)
!17844 = !DILocation(line: 428, column: 11, scope: !17832)
!17845 = !DILocalVariable(name: "maxarglen", scope: !17846, file: !1732, line: 438, type: !52)
!17846 = distinct !DILexicalBlock(scope: !17751, file: !1732, line: 437, column: 9)
!17847 = !DILocation(line: 438, column: 18, scope: !17846)
!17848 = !DILocation(line: 438, column: 44, scope: !17846)
!17849 = !DILocation(line: 438, column: 30, scope: !17846)
!17850 = !DILocation(line: 439, column: 28, scope: !17851)
!17851 = distinct !DILexicalBlock(scope: !17846, file: !1732, line: 439, column: 15)
!17852 = !DILocation(line: 439, column: 32, scope: !17851)
!17853 = !DILocation(line: 439, column: 17, scope: !17851)
!17854 = !DILocation(line: 439, column: 15, scope: !17846)
!17855 = !DILocation(line: 440, column: 19, scope: !17851)
!17856 = !DILocation(line: 444, column: 14, scope: !17857)
!17857 = distinct !DILexicalBlock(scope: !17751, file: !1732, line: 444, column: 13)
!17858 = !DILocation(line: 444, column: 13, scope: !17857)
!17859 = !DILocation(line: 444, column: 19, scope: !17857)
!17860 = !DILocation(line: 444, column: 13, scope: !17751)
!17861 = !DILocation(line: 445, column: 41, scope: !17862)
!17862 = distinct !DILexicalBlock(scope: !17863, file: !1732, line: 445, column: 21)
!17863 = distinct !DILexicalBlock(scope: !17857, file: !1732, line: 444, column: 28)
!17864 = !DILocation(line: 445, column: 31, scope: !17862)
!17865 = !DILocation(line: 445, column: 29, scope: !17862)
!17866 = !DILocation(line: 445, column: 53, scope: !17862)
!17867 = !DILocation(line: 445, column: 21, scope: !17863)
!17868 = !DILocation(line: 446, column: 25, scope: !17862)
!17869 = !DILocation(line: 447, column: 17, scope: !17863)
!17870 = !DILocation(line: 447, column: 25, scope: !17863)
!17871 = !DILocation(line: 447, column: 35, scope: !17863)
!17872 = !DILocation(line: 448, column: 17, scope: !17863)
!17873 = !DILocation(line: 448, column: 25, scope: !17863)
!17874 = !DILocation(line: 448, column: 46, scope: !17863)
!17875 = !DILocation(line: 449, column: 11, scope: !17863)
!17876 = !DILocation(line: 462, column: 23, scope: !17751)
!17877 = !DILocation(line: 462, column: 30, scope: !17751)
!17878 = !DILocation(line: 462, column: 38, scope: !17751)
!17879 = !DILocation(line: 462, column: 41, scope: !17751)
!17880 = !DILocation(line: 462, column: 20, scope: !17751)
!17881 = !DILocation(line: 465, column: 19, scope: !17882)
!17882 = distinct !DILexicalBlock(scope: !17751, file: !1732, line: 465, column: 9)
!17883 = !DILocation(line: 465, column: 34, scope: !17882)
!17884 = !DILocation(line: 465, column: 14, scope: !17882)
!17885 = !DILocation(line: 465, column: 40, scope: !17886)
!17886 = distinct !DILexicalBlock(scope: !17882, file: !1732, line: 465, column: 9)
!17887 = !DILocation(line: 465, column: 39, scope: !17886)
!17888 = !DILocation(line: 465, column: 45, scope: !17886)
!17889 = !DILocation(line: 465, column: 9, scope: !17882)
!17890 = !DILocalVariable(name: "len", scope: !17891, file: !1732, line: 467, type: !52)
!17891 = distinct !DILexicalBlock(scope: !17886, file: !1732, line: 465, column: 72)
!17892 = !DILocation(line: 467, column: 24, scope: !17891)
!17893 = !DILocation(line: 467, column: 38, scope: !17891)
!17894 = !DILocation(line: 467, column: 37, scope: !17891)
!17895 = !DILocation(line: 467, column: 30, scope: !17891)
!17896 = !DILocation(line: 469, column: 25, scope: !17897)
!17897 = distinct !DILexicalBlock(scope: !17891, file: !1732, line: 469, column: 22)
!17898 = !DILocation(line: 469, column: 33, scope: !17897)
!17899 = !DILocation(line: 469, column: 22, scope: !17891)
!17900 = !DILocalVariable(name: "v", scope: !17901, file: !1732, line: 473, type: !113)
!17901 = distinct !DILexicalBlock(scope: !17897, file: !1732, line: 470, column: 19)
!17902 = !DILocation(line: 473, column: 33, scope: !17901)
!17903 = !DILocation(line: 473, column: 38, scope: !17901)
!17904 = !DILocation(line: 473, column: 37, scope: !17901)
!17905 = !DILocation(line: 474, column: 29, scope: !17906)
!17906 = distinct !DILexicalBlock(scope: !17901, file: !1732, line: 474, column: 25)
!17907 = !DILocation(line: 474, column: 27, scope: !17906)
!17908 = !DILocation(line: 474, column: 33, scope: !17906)
!17909 = !DILocation(line: 474, column: 36, scope: !17906)
!17910 = !DILocation(line: 474, column: 38, scope: !17906)
!17911 = !DILocation(line: 474, column: 42, scope: !17906)
!17912 = !DILocation(line: 474, column: 47, scope: !17906)
!17913 = !DILocation(line: 474, column: 25, scope: !17901)
!17914 = !DILocation(line: 475, column: 23, scope: !17906)
!17915 = !DILocation(line: 475, column: 34, scope: !17906)
!17916 = !DILocation(line: 475, column: 32, scope: !17906)
!17917 = !DILocation(line: 475, column: 38, scope: !17906)
!17918 = !DILocation(line: 475, column: 41, scope: !17906)
!17919 = !DILocation(line: 475, column: 43, scope: !17906)
!17920 = !DILocation(line: 475, column: 47, scope: !17906)
!17921 = !DILocation(line: 475, column: 52, scope: !17906)
!17922 = !DILocation(line: 0, scope: !17906)
!17923 = !DILocation(line: 476, column: 25, scope: !17906)
!17924 = distinct !{!17924, !17914, !17925}
!17925 = !DILocation(line: 476, column: 27, scope: !17906)
!17926 = !DILocation(line: 477, column: 19, scope: !17901)
!17927 = !DILocation(line: 479, column: 36, scope: !17928)
!17928 = distinct !DILexicalBlock(scope: !17891, file: !1732, line: 479, column: 21)
!17929 = !DILocation(line: 479, column: 41, scope: !17928)
!17930 = !DILocation(line: 479, column: 40, scope: !17928)
!17931 = !DILocation(line: 479, column: 47, scope: !17928)
!17932 = !DILocation(line: 479, column: 26, scope: !17928)
!17933 = !DILocation(line: 479, column: 24, scope: !17928)
!17934 = !DILocation(line: 479, column: 53, scope: !17928)
!17935 = !DILocation(line: 479, column: 21, scope: !17891)
!17936 = !DILocation(line: 480, column: 25, scope: !17928)
!17937 = !DILocation(line: 481, column: 17, scope: !17891)
!17938 = !DILocation(line: 481, column: 20, scope: !17891)
!17939 = !DILocation(line: 481, column: 30, scope: !17891)
!17940 = !DILocation(line: 482, column: 33, scope: !17891)
!17941 = !DILocation(line: 482, column: 17, scope: !17891)
!17942 = !DILocation(line: 482, column: 20, scope: !17891)
!17943 = !DILocation(line: 482, column: 31, scope: !17891)
!17944 = !DILocation(line: 483, column: 34, scope: !17891)
!17945 = !DILocation(line: 483, column: 37, scope: !17891)
!17946 = !DILocation(line: 483, column: 17, scope: !17891)
!17947 = !DILocation(line: 483, column: 20, scope: !17891)
!17948 = !DILocation(line: 483, column: 32, scope: !17891)
!17949 = !DILocation(line: 487, column: 21, scope: !17950)
!17950 = distinct !DILexicalBlock(scope: !17891, file: !1732, line: 487, column: 21)
!17951 = !DILocation(line: 487, column: 32, scope: !17950)
!17952 = !DILocation(line: 487, column: 35, scope: !17950)
!17953 = !DILocation(line: 487, column: 40, scope: !17950)
!17954 = !DILocation(line: 487, column: 21, scope: !17891)
!17955 = !DILocation(line: 488, column: 25, scope: !17956)
!17956 = distinct !DILexicalBlock(scope: !17950, file: !1732, line: 487, column: 49)
!17957 = !DILocation(line: 488, column: 28, scope: !17956)
!17958 = !DILocation(line: 488, column: 37, scope: !17956)
!17959 = !DILocation(line: 489, column: 47, scope: !17956)
!17960 = !DILocation(line: 489, column: 25, scope: !17956)
!17961 = !DILocation(line: 490, column: 17, scope: !17956)
!17962 = !DILocation(line: 491, column: 48, scope: !17963)
!17963 = distinct !DILexicalBlock(scope: !17950, file: !1732, line: 490, column: 24)
!17964 = !DILocation(line: 491, column: 52, scope: !17963)
!17965 = !DILocation(line: 491, column: 39, scope: !17963)
!17966 = !DILocation(line: 491, column: 25, scope: !17963)
!17967 = !DILocation(line: 491, column: 28, scope: !17963)
!17968 = !DILocation(line: 491, column: 37, scope: !17963)
!17969 = !DILocation(line: 498, column: 21, scope: !17970)
!17970 = distinct !DILexicalBlock(scope: !17891, file: !1732, line: 498, column: 21)
!17971 = !DILocation(line: 498, column: 21, scope: !17891)
!17972 = !DILocation(line: 499, column: 39, scope: !17973)
!17973 = distinct !DILexicalBlock(scope: !17970, file: !1732, line: 498, column: 29)
!17974 = !DILocation(line: 499, column: 25, scope: !17973)
!17975 = !DILocation(line: 499, column: 28, scope: !17973)
!17976 = !DILocation(line: 499, column: 37, scope: !17973)
!17977 = !DILocation(line: 500, column: 32, scope: !17973)
!17978 = !DILocation(line: 500, column: 30, scope: !17973)
!17979 = !DILocation(line: 501, column: 17, scope: !17973)
!17980 = !DILocation(line: 502, column: 25, scope: !17981)
!17981 = distinct !DILexicalBlock(scope: !17970, file: !1732, line: 501, column: 24)
!17982 = !DILocation(line: 502, column: 28, scope: !17981)
!17983 = !DILocation(line: 502, column: 37, scope: !17981)
!17984 = !DILocation(line: 503, column: 29, scope: !17985)
!17985 = distinct !DILexicalBlock(scope: !17981, file: !1732, line: 503, column: 29)
!17986 = !DILocation(line: 503, column: 34, scope: !17985)
!17987 = !DILocation(line: 503, column: 29, scope: !17981)
!17988 = !DILocation(line: 504, column: 46, scope: !17985)
!17989 = !DILocation(line: 504, column: 44, scope: !17985)
!17990 = !DILocation(line: 504, column: 37, scope: !17985)
!17991 = !DILocation(line: 504, column: 33, scope: !17985)
!17992 = !DILocation(line: 506, column: 49, scope: !17993)
!17993 = distinct !DILexicalBlock(scope: !17985, file: !1732, line: 505, column: 30)
!17994 = !DILocation(line: 506, column: 33, scope: !17993)
!17995 = !DILocation(line: 506, column: 38, scope: !17993)
!17996 = !DILocation(line: 506, column: 47, scope: !17993)
!17997 = !DILocation(line: 507, column: 39, scope: !17993)
!17998 = !DILocation(line: 507, column: 37, scope: !17993)
!17999 = !DILocation(line: 510, column: 9, scope: !17891)
!18000 = !DILocation(line: 465, column: 54, scope: !17886)
!18001 = !DILocation(line: 465, column: 62, scope: !17886)
!18002 = !DILocation(line: 465, column: 9, scope: !17886)
!18003 = distinct !{!18003, !17889, !18004}
!18004 = !DILocation(line: 510, column: 9, scope: !17882)
!18005 = !DILocation(line: 511, column: 13, scope: !18006)
!18006 = distinct !DILexicalBlock(scope: !17751, file: !1732, line: 511, column: 13)
!18007 = !DILocation(line: 511, column: 20, scope: !18006)
!18008 = !DILocation(line: 511, column: 23, scope: !18006)
!18009 = !DILocation(line: 511, column: 30, scope: !18006)
!18010 = !DILocation(line: 511, column: 13, scope: !17751)
!18011 = !DILocation(line: 512, column: 33, scope: !18006)
!18012 = !DILocation(line: 512, column: 37, scope: !18006)
!18013 = !DILocation(line: 512, column: 43, scope: !18006)
!18014 = !DILocation(line: 512, column: 24, scope: !18006)
!18015 = !DILocation(line: 512, column: 22, scope: !18006)
!18016 = !DILocation(line: 512, column: 17, scope: !18006)
!18017 = !DILocation(line: 519, column: 38, scope: !18018)
!18018 = distinct !DILexicalBlock(scope: !17751, file: !1732, line: 519, column: 13)
!18019 = !DILocation(line: 519, column: 28, scope: !18018)
!18020 = !DILocation(line: 519, column: 14, scope: !18018)
!18021 = !DILocation(line: 519, column: 18, scope: !18018)
!18022 = !DILocation(line: 519, column: 26, scope: !18018)
!18023 = !DILocation(line: 519, column: 50, scope: !18018)
!18024 = !DILocation(line: 519, column: 13, scope: !17751)
!18025 = !DILocation(line: 520, column: 17, scope: !18018)
!18026 = !DILocation(line: 521, column: 33, scope: !17751)
!18027 = !DILocation(line: 521, column: 9, scope: !17751)
!18028 = !DILocation(line: 521, column: 13, scope: !17751)
!18029 = !DILocation(line: 521, column: 22, scope: !17751)
!18030 = !DILocation(line: 521, column: 31, scope: !17751)
!18031 = !DILocation(line: 522, column: 9, scope: !17751)
!18032 = !DILocation(line: 522, column: 13, scope: !17751)
!18033 = !DILocation(line: 522, column: 22, scope: !17751)
!18034 = !DILocation(line: 522, column: 31, scope: !17751)
!18035 = !DILocation(line: 523, column: 9, scope: !17751)
!18036 = !DILocation(line: 523, column: 13, scope: !17751)
!18037 = !DILocation(line: 523, column: 22, scope: !17751)
!18038 = !DILocation(line: 523, column: 32, scope: !17751)
!18039 = !DILocation(line: 524, column: 26, scope: !18040)
!18040 = distinct !DILexicalBlock(scope: !17751, file: !1732, line: 524, column: 13)
!18041 = !DILocation(line: 524, column: 15, scope: !18040)
!18042 = !DILocation(line: 524, column: 13, scope: !17751)
!18043 = !DILocation(line: 525, column: 17, scope: !18040)
!18044 = !DILocation(line: 534, column: 14, scope: !18045)
!18045 = distinct !DILexicalBlock(scope: !17751, file: !1732, line: 534, column: 13)
!18046 = !DILocation(line: 534, column: 33, scope: !18045)
!18047 = !DILocation(line: 534, column: 37, scope: !18045)
!18048 = !DILocation(line: 535, column: 13, scope: !18045)
!18049 = !DILocation(line: 535, column: 40, scope: !18045)
!18050 = !DILocation(line: 535, column: 31, scope: !18045)
!18051 = !DILocation(line: 535, column: 17, scope: !18045)
!18052 = !DILocation(line: 535, column: 21, scope: !18045)
!18053 = !DILocation(line: 535, column: 29, scope: !18045)
!18054 = !DILocation(line: 535, column: 50, scope: !18045)
!18055 = !DILocation(line: 534, column: 13, scope: !17751)
!18056 = !DILocation(line: 536, column: 17, scope: !18045)
!18057 = !DILocation(line: 538, column: 23, scope: !17751)
!18058 = !DILocation(line: 538, column: 27, scope: !17751)
!18059 = !DILocation(line: 538, column: 9, scope: !17751)
!18060 = !DILocation(line: 539, column: 17, scope: !17751)
!18061 = !DILocation(line: 539, column: 9, scope: !17751)
!18062 = !DILabel(scope: !17751, name: "mem3", file: !1732, line: 541)
!18063 = !DILocation(line: 541, column: 1, scope: !17751)
!18064 = !DILocation(line: 541, column: 19, scope: !17751)
!18065 = !DILocation(line: 541, column: 9, scope: !17751)
!18066 = !DILocation(line: 542, column: 14, scope: !17751)
!18067 = !DILocation(line: 542, column: 9, scope: !17751)
!18068 = !DILabel(scope: !17751, name: "mem2", file: !1732, line: 543)
!18069 = !DILocation(line: 543, column: 1, scope: !17751)
!18070 = !DILocation(line: 543, column: 14, scope: !17751)
!18071 = !DILocation(line: 543, column: 18, scope: !17751)
!18072 = !DILocation(line: 543, column: 9, scope: !17751)
!18073 = !DILabel(scope: !17751, name: "mem1", file: !1732, line: 544)
!18074 = !DILocation(line: 544, column: 1, scope: !17751)
!18075 = !DILocation(line: 544, column: 14, scope: !17751)
!18076 = !DILocation(line: 544, column: 9, scope: !17751)
!18077 = !DILocation(line: 545, column: 9, scope: !17751)
!18078 = !DILocation(line: 546, column: 1, scope: !17751)
!18079 = distinct !DISubprogram(name: "fts_maxarglen", scope: !1732, file: !1732, line: 2022, type: !18080, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18080 = !DISubroutineType(types: !18081)
!18081 = !{!52, !2827}
!18082 = !DILocalVariable(name: "argv", arg: 1, scope: !18079, file: !1732, line: 2022, type: !2827)
!18083 = !DILocation(line: 2022, column: 30, scope: !18079)
!18084 = !DILocalVariable(name: "len", scope: !18079, file: !1732, line: 2024, type: !52)
!18085 = !DILocation(line: 2024, column: 16, scope: !18079)
!18086 = !DILocalVariable(name: "max", scope: !18079, file: !1732, line: 2024, type: !52)
!18087 = !DILocation(line: 2024, column: 21, scope: !18079)
!18088 = !DILocation(line: 2026, column: 18, scope: !18089)
!18089 = distinct !DILexicalBlock(scope: !18079, file: !1732, line: 2026, column: 9)
!18090 = !DILocation(line: 2026, column: 14, scope: !18089)
!18091 = !DILocation(line: 2026, column: 24, scope: !18092)
!18092 = distinct !DILexicalBlock(scope: !18089, file: !1732, line: 2026, column: 9)
!18093 = !DILocation(line: 2026, column: 23, scope: !18092)
!18094 = !DILocation(line: 2026, column: 9, scope: !18089)
!18095 = !DILocation(line: 2027, column: 36, scope: !18096)
!18096 = distinct !DILexicalBlock(scope: !18092, file: !1732, line: 2027, column: 21)
!18097 = !DILocation(line: 2027, column: 35, scope: !18096)
!18098 = !DILocation(line: 2027, column: 28, scope: !18096)
!18099 = !DILocation(line: 2027, column: 26, scope: !18096)
!18100 = !DILocation(line: 2027, column: 45, scope: !18096)
!18101 = !DILocation(line: 2027, column: 43, scope: !18096)
!18102 = !DILocation(line: 2027, column: 21, scope: !18092)
!18103 = !DILocation(line: 2028, column: 31, scope: !18096)
!18104 = !DILocation(line: 2028, column: 29, scope: !18096)
!18105 = !DILocation(line: 2028, column: 25, scope: !18096)
!18106 = !DILocation(line: 2026, column: 30, scope: !18092)
!18107 = !DILocation(line: 2026, column: 9, scope: !18092)
!18108 = distinct !{!18108, !18094, !18109}
!18109 = !DILocation(line: 2028, column: 31, scope: !18089)
!18110 = !DILocation(line: 2029, column: 17, scope: !18079)
!18111 = !DILocation(line: 2029, column: 21, scope: !18079)
!18112 = !DILocation(line: 2029, column: 9, scope: !18079)
!18113 = distinct !DISubprogram(name: "fts_palloc", scope: !1732, file: !1732, line: 1966, type: !18114, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18114 = !DISubroutineType(types: !18115)
!18115 = !{!139, !1757, !52}
!18116 = !DILocalVariable(name: "sp", arg: 1, scope: !18113, file: !1732, line: 1966, type: !1757)
!18117 = !DILocation(line: 1966, column: 18, scope: !18113)
!18118 = !DILocalVariable(name: "more", arg: 2, scope: !18113, file: !1732, line: 1966, type: !52)
!18119 = !DILocation(line: 1966, column: 29, scope: !18113)
!18120 = !DILocalVariable(name: "p", scope: !18113, file: !1732, line: 1968, type: !7)
!18121 = !DILocation(line: 1968, column: 15, scope: !18113)
!18122 = !DILocalVariable(name: "new_len", scope: !18113, file: !1732, line: 1969, type: !52)
!18123 = !DILocation(line: 1969, column: 16, scope: !18113)
!18124 = !DILocation(line: 1969, column: 26, scope: !18113)
!18125 = !DILocation(line: 1969, column: 30, scope: !18113)
!18126 = !DILocation(line: 1969, column: 44, scope: !18113)
!18127 = !DILocation(line: 1969, column: 42, scope: !18113)
!18128 = !DILocation(line: 1969, column: 49, scope: !18113)
!18129 = !DILocation(line: 1974, column: 13, scope: !18130)
!18130 = distinct !DILexicalBlock(scope: !18113, file: !1732, line: 1974, column: 13)
!18131 = !DILocation(line: 1974, column: 23, scope: !18130)
!18132 = !DILocation(line: 1974, column: 27, scope: !18130)
!18133 = !DILocation(line: 1974, column: 21, scope: !18130)
!18134 = !DILocation(line: 1974, column: 13, scope: !18113)
!18135 = !DILocation(line: 1975, column: 22, scope: !18136)
!18136 = distinct !DILexicalBlock(scope: !18130, file: !1732, line: 1974, column: 40)
!18137 = !DILocation(line: 1975, column: 26, scope: !18136)
!18138 = !DILocation(line: 1975, column: 17, scope: !18136)
!18139 = !DILocation(line: 1976, column: 17, scope: !18136)
!18140 = !DILocation(line: 1976, column: 21, scope: !18136)
!18141 = !DILocation(line: 1976, column: 30, scope: !18136)
!18142 = !DILocation(line: 1977, column: 17, scope: !18136)
!18143 = !DILocation(line: 1978, column: 17, scope: !18136)
!18144 = !DILocation(line: 1980, column: 27, scope: !18113)
!18145 = !DILocation(line: 1980, column: 9, scope: !18113)
!18146 = !DILocation(line: 1980, column: 13, scope: !18113)
!18147 = !DILocation(line: 1980, column: 25, scope: !18113)
!18148 = !DILocation(line: 1981, column: 21, scope: !18113)
!18149 = !DILocation(line: 1981, column: 25, scope: !18113)
!18150 = !DILocation(line: 1981, column: 35, scope: !18113)
!18151 = !DILocation(line: 1981, column: 39, scope: !18113)
!18152 = !DILocation(line: 1981, column: 13, scope: !18113)
!18153 = !DILocation(line: 1981, column: 11, scope: !18113)
!18154 = !DILocation(line: 1982, column: 13, scope: !18155)
!18155 = distinct !DILexicalBlock(scope: !18113, file: !1732, line: 1982, column: 13)
!18156 = !DILocation(line: 1982, column: 15, scope: !18155)
!18157 = !DILocation(line: 1982, column: 13, scope: !18113)
!18158 = !DILocation(line: 1983, column: 22, scope: !18159)
!18159 = distinct !DILexicalBlock(scope: !18155, file: !1732, line: 1982, column: 24)
!18160 = !DILocation(line: 1983, column: 26, scope: !18159)
!18161 = !DILocation(line: 1983, column: 17, scope: !18159)
!18162 = !DILocation(line: 1984, column: 17, scope: !18159)
!18163 = !DILocation(line: 1984, column: 21, scope: !18159)
!18164 = !DILocation(line: 1984, column: 30, scope: !18159)
!18165 = !DILocation(line: 1985, column: 17, scope: !18159)
!18166 = !DILocation(line: 1987, column: 24, scope: !18113)
!18167 = !DILocation(line: 1987, column: 9, scope: !18113)
!18168 = !DILocation(line: 1987, column: 13, scope: !18113)
!18169 = !DILocation(line: 1987, column: 22, scope: !18113)
!18170 = !DILocation(line: 1988, column: 9, scope: !18113)
!18171 = !DILocation(line: 1989, column: 1, scope: !18113)
!18172 = distinct !DISubprogram(name: "fts_alloc", scope: !1732, file: !1732, line: 1913, type: !18173, scopeLine: 1914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18173 = !DISubroutineType(types: !18174)
!18174 = !{!1835, !1757, !113, !52}
!18175 = !DILocalVariable(name: "sp", arg: 1, scope: !18172, file: !1732, line: 1913, type: !1757)
!18176 = !DILocation(line: 1913, column: 17, scope: !18172)
!18177 = !DILocalVariable(name: "name", arg: 2, scope: !18172, file: !1732, line: 1913, type: !113)
!18178 = !DILocation(line: 1913, column: 33, scope: !18172)
!18179 = !DILocalVariable(name: "namelen", arg: 3, scope: !18172, file: !1732, line: 1913, type: !52)
!18180 = !DILocation(line: 1913, column: 55, scope: !18172)
!18181 = !DILocalVariable(name: "p", scope: !18172, file: !1732, line: 1915, type: !1835)
!18182 = !DILocation(line: 1915, column: 26, scope: !18172)
!18183 = !DILocalVariable(name: "len", scope: !18172, file: !1732, line: 1916, type: !52)
!18184 = !DILocation(line: 1916, column: 16, scope: !18172)
!18185 = !DILocation(line: 1922, column: 15, scope: !18172)
!18186 = !DILocation(line: 1922, column: 13, scope: !18172)
!18187 = !DILocation(line: 1923, column: 25, scope: !18188)
!18188 = distinct !DILexicalBlock(scope: !18172, file: !1732, line: 1923, column: 13)
!18189 = !DILocation(line: 1923, column: 18, scope: !18188)
!18190 = !DILocation(line: 1923, column: 16, scope: !18188)
!18191 = !DILocation(line: 1923, column: 31, scope: !18188)
!18192 = !DILocation(line: 1923, column: 13, scope: !18172)
!18193 = !DILocation(line: 1924, column: 17, scope: !18188)
!18194 = !DILocation(line: 1927, column: 16, scope: !18172)
!18195 = !DILocation(line: 1927, column: 19, scope: !18172)
!18196 = !DILocation(line: 1927, column: 9, scope: !18172)
!18197 = !DILocation(line: 1927, column: 29, scope: !18172)
!18198 = !DILocation(line: 1927, column: 35, scope: !18172)
!18199 = !DILocation(line: 1928, column: 9, scope: !18172)
!18200 = !DILocation(line: 1928, column: 12, scope: !18172)
!18201 = !DILocation(line: 1928, column: 21, scope: !18172)
!18202 = !DILocation(line: 1928, column: 30, scope: !18172)
!18203 = !DILocation(line: 1930, column: 26, scope: !18172)
!18204 = !DILocation(line: 1930, column: 9, scope: !18172)
!18205 = !DILocation(line: 1930, column: 12, scope: !18172)
!18206 = !DILocation(line: 1930, column: 24, scope: !18172)
!18207 = !DILocation(line: 1931, column: 22, scope: !18172)
!18208 = !DILocation(line: 1931, column: 9, scope: !18172)
!18209 = !DILocation(line: 1931, column: 12, scope: !18172)
!18210 = !DILocation(line: 1931, column: 20, scope: !18172)
!18211 = !DILocation(line: 1932, column: 23, scope: !18172)
!18212 = !DILocation(line: 1932, column: 27, scope: !18172)
!18213 = !DILocation(line: 1932, column: 9, scope: !18172)
!18214 = !DILocation(line: 1932, column: 12, scope: !18172)
!18215 = !DILocation(line: 1932, column: 21, scope: !18172)
!18216 = !DILocation(line: 1933, column: 9, scope: !18172)
!18217 = !DILocation(line: 1933, column: 12, scope: !18172)
!18218 = !DILocation(line: 1933, column: 22, scope: !18172)
!18219 = !DILocation(line: 1934, column: 9, scope: !18172)
!18220 = !DILocation(line: 1934, column: 12, scope: !18172)
!18221 = !DILocation(line: 1934, column: 21, scope: !18172)
!18222 = !DILocation(line: 1935, column: 9, scope: !18172)
!18223 = !DILocation(line: 1935, column: 12, scope: !18172)
!18224 = !DILocation(line: 1935, column: 22, scope: !18172)
!18225 = !DILocation(line: 1936, column: 9, scope: !18172)
!18226 = !DILocation(line: 1936, column: 12, scope: !18172)
!18227 = !DILocation(line: 1936, column: 22, scope: !18172)
!18228 = !DILocation(line: 1937, column: 9, scope: !18172)
!18229 = !DILocation(line: 1937, column: 12, scope: !18172)
!18230 = !DILocation(line: 1937, column: 23, scope: !18172)
!18231 = !DILocation(line: 1938, column: 9, scope: !18172)
!18232 = !DILocation(line: 1938, column: 12, scope: !18172)
!18233 = !DILocation(line: 1938, column: 24, scope: !18172)
!18234 = !DILocation(line: 1939, column: 17, scope: !18172)
!18235 = !DILocation(line: 1939, column: 9, scope: !18172)
!18236 = !DILocation(line: 1940, column: 1, scope: !18172)
!18237 = distinct !DISubprogram(name: "fts_set_stat_required", scope: !1732, file: !1732, line: 290, type: !18238, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18238 = !DISubroutineType(types: !18239)
!18239 = !{null, !1835, !139}
!18240 = !DILocalVariable(name: "p", arg: 1, scope: !18237, file: !1732, line: 290, type: !1835)
!18241 = !DILocation(line: 290, column: 32, scope: !18237)
!18242 = !DILocalVariable(name: "required", arg: 2, scope: !18237, file: !1732, line: 290, type: !139)
!18243 = !DILocation(line: 290, column: 40, scope: !18237)
!18244 = !DILocation(line: 292, column: 3, scope: !18237)
!18245 = !DILocation(line: 292, column: 3, scope: !18246)
!18246 = distinct !DILexicalBlock(scope: !18247, file: !1732, line: 292, column: 3)
!18247 = distinct !DILexicalBlock(scope: !18237, file: !1732, line: 292, column: 3)
!18248 = !DILocation(line: 292, column: 3, scope: !18247)
!18249 = !DILocation(line: 293, column: 28, scope: !18237)
!18250 = !DILocation(line: 293, column: 27, scope: !18237)
!18251 = !DILocation(line: 293, column: 3, scope: !18237)
!18252 = !DILocation(line: 293, column: 6, scope: !18237)
!18253 = !DILocation(line: 293, column: 17, scope: !18237)
!18254 = !DILocation(line: 293, column: 25, scope: !18237)
!18255 = !DILocation(line: 296, column: 1, scope: !18237)
!18256 = distinct !DISubprogram(name: "fts_stat", scope: !1732, file: !1732, line: 1799, type: !18257, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18257 = !DISubroutineType(types: !18258)
!18258 = !{!34, !1757, !1835, !139}
!18259 = !DILocalVariable(name: "sp", arg: 1, scope: !18256, file: !1732, line: 1799, type: !1757)
!18260 = !DILocation(line: 1799, column: 15, scope: !18256)
!18261 = !DILocalVariable(name: "p", arg: 2, scope: !18256, file: !1732, line: 1799, type: !1835)
!18262 = !DILocation(line: 1799, column: 36, scope: !18256)
!18263 = !DILocalVariable(name: "follow", arg: 3, scope: !18256, file: !1732, line: 1799, type: !139)
!18264 = !DILocation(line: 1799, column: 44, scope: !18256)
!18265 = !DILocalVariable(name: "sbp", scope: !18256, file: !1732, line: 1801, type: !1868)
!18266 = !DILocation(line: 1801, column: 22, scope: !18256)
!18267 = !DILocation(line: 1801, column: 28, scope: !18256)
!18268 = !DILocation(line: 1801, column: 31, scope: !18256)
!18269 = !DILocation(line: 1803, column: 13, scope: !18270)
!18270 = distinct !DILexicalBlock(scope: !18256, file: !1732, line: 1803, column: 13)
!18271 = !DILocation(line: 1803, column: 16, scope: !18270)
!18272 = !DILocation(line: 1803, column: 26, scope: !18270)
!18273 = !DILocation(line: 1803, column: 43, scope: !18270)
!18274 = !DILocation(line: 1803, column: 46, scope: !18270)
!18275 = !DILocation(line: 1803, column: 13, scope: !18256)
!18276 = !DILocation(line: 1804, column: 24, scope: !18270)
!18277 = !DILocation(line: 1804, column: 17, scope: !18270)
!18278 = !DILocation(line: 1811, column: 13, scope: !18279)
!18279 = distinct !DILexicalBlock(scope: !18256, file: !1732, line: 1811, column: 13)
!18280 = !DILocation(line: 1811, column: 32, scope: !18279)
!18281 = !DILocation(line: 1811, column: 35, scope: !18279)
!18282 = !DILocation(line: 1811, column: 13, scope: !18256)
!18283 = !DILocation(line: 1812, column: 26, scope: !18284)
!18284 = distinct !DILexicalBlock(scope: !18285, file: !1732, line: 1812, column: 21)
!18285 = distinct !DILexicalBlock(scope: !18279, file: !1732, line: 1811, column: 43)
!18286 = !DILocation(line: 1812, column: 29, scope: !18284)
!18287 = !DILocation(line: 1812, column: 42, scope: !18284)
!18288 = !DILocation(line: 1812, column: 21, scope: !18284)
!18289 = !DILocation(line: 1812, column: 21, scope: !18285)
!18290 = !DILocation(line: 1813, column: 29, scope: !18291)
!18291 = distinct !DILexicalBlock(scope: !18292, file: !1732, line: 1813, column: 29)
!18292 = distinct !DILexicalBlock(scope: !18284, file: !1732, line: 1812, column: 48)
!18293 = !DILocation(line: 1813, column: 35, scope: !18291)
!18294 = !DILocation(line: 1814, column: 29, scope: !18291)
!18295 = !DILocation(line: 1814, column: 38, scope: !18291)
!18296 = !DILocation(line: 1814, column: 41, scope: !18291)
!18297 = !DILocation(line: 1814, column: 54, scope: !18291)
!18298 = !DILocation(line: 1814, column: 32, scope: !18291)
!18299 = !DILocation(line: 1814, column: 59, scope: !18291)
!18300 = !DILocation(line: 1813, column: 29, scope: !18292)
!18301 = !DILocation(line: 1815, column: 33, scope: !18302)
!18302 = distinct !DILexicalBlock(scope: !18291, file: !1732, line: 1814, column: 65)
!18303 = !DILocation(line: 1816, column: 33, scope: !18302)
!18304 = !DILocation(line: 1818, column: 40, scope: !18292)
!18305 = !DILocation(line: 1818, column: 25, scope: !18292)
!18306 = !DILocation(line: 1818, column: 28, scope: !18292)
!18307 = !DILocation(line: 1818, column: 38, scope: !18292)
!18308 = !DILocation(line: 1819, column: 25, scope: !18292)
!18309 = !DILocation(line: 1821, column: 9, scope: !18285)
!18310 = !DILocation(line: 1821, column: 28, scope: !18311)
!18311 = distinct !DILexicalBlock(scope: !18279, file: !1732, line: 1821, column: 20)
!18312 = !DILocation(line: 1821, column: 32, scope: !18311)
!18313 = !DILocation(line: 1821, column: 44, scope: !18311)
!18314 = !DILocation(line: 1821, column: 47, scope: !18311)
!18315 = !DILocation(line: 1821, column: 60, scope: !18311)
!18316 = !DILocation(line: 1821, column: 20, scope: !18311)
!18317 = !DILocation(line: 1821, column: 20, scope: !18279)
!18318 = !DILocation(line: 1823, column: 32, scope: !18319)
!18319 = distinct !DILexicalBlock(scope: !18311, file: !1732, line: 1822, column: 50)
!18320 = !DILocation(line: 1823, column: 17, scope: !18319)
!18321 = !DILocation(line: 1823, column: 20, scope: !18319)
!18322 = !DILocation(line: 1823, column: 30, scope: !18319)
!18323 = !DILabel(scope: !18319, name: "err", file: !1732, line: 1824)
!18324 = !DILocation(line: 1824, column: 1, scope: !18319)
!18325 = !DILocation(line: 1824, column: 24, scope: !18319)
!18326 = !DILocation(line: 1824, column: 17, scope: !18319)
!18327 = !DILocation(line: 1825, column: 17, scope: !18319)
!18328 = !DILocation(line: 1828, column: 13, scope: !18329)
!18329 = distinct !DILexicalBlock(scope: !18256, file: !1732, line: 1828, column: 13)
!18330 = !DILocation(line: 1828, column: 13, scope: !18256)
!18331 = !DILocation(line: 1830, column: 23, scope: !18332)
!18332 = distinct !DILexicalBlock(scope: !18329, file: !1732, line: 1828, column: 36)
!18333 = !DILocation(line: 1830, column: 28, scope: !18332)
!18334 = !DILocation(line: 1830, column: 37, scope: !18332)
!18335 = !DILocation(line: 1831, column: 23, scope: !18332)
!18336 = !DILocation(line: 1831, column: 26, scope: !18332)
!18337 = !DILocation(line: 1831, column: 29, scope: !18332)
!18338 = !DILocation(line: 1831, column: 39, scope: !18332)
!18339 = !DILocation(line: 1830, column: 22, scope: !18332)
!18340 = !DILocation(line: 1833, column: 24, scope: !18332)
!18341 = !DILocation(line: 1833, column: 29, scope: !18332)
!18342 = !DILocation(line: 1833, column: 41, scope: !18332)
!18343 = !DILocation(line: 1833, column: 40, scope: !18332)
!18344 = !DILocation(line: 1833, column: 38, scope: !18332)
!18345 = !DILocation(line: 1829, column: 17, scope: !18332)
!18346 = !DILocation(line: 1829, column: 20, scope: !18332)
!18347 = !DILocation(line: 1830, column: 19, scope: !18332)
!18348 = !DILocation(line: 1834, column: 21, scope: !18349)
!18349 = distinct !DILexicalBlock(scope: !18332, file: !1732, line: 1834, column: 21)
!18350 = !DILocation(line: 1834, column: 21, scope: !18332)
!18351 = !DILocation(line: 1836, column: 33, scope: !18352)
!18352 = distinct !DILexicalBlock(scope: !18349, file: !1732, line: 1834, column: 41)
!18353 = !DILocation(line: 1836, column: 36, scope: !18352)
!18354 = !DILocation(line: 1836, column: 46, scope: !18352)
!18355 = !DILocation(line: 1836, column: 32, scope: !18352)
!18356 = !DILocation(line: 1836, column: 25, scope: !18352)
!18357 = !DILocation(line: 1839, column: 17, scope: !18332)
!18358 = !DILocation(line: 1841, column: 13, scope: !18359)
!18359 = distinct !DILexicalBlock(scope: !18256, file: !1732, line: 1841, column: 13)
!18360 = !DILocation(line: 1841, column: 13, scope: !18256)
!18361 = !DILocation(line: 1842, column: 17, scope: !18359)
!18362 = !DILocation(line: 1843, column: 13, scope: !18363)
!18363 = distinct !DILexicalBlock(scope: !18256, file: !1732, line: 1843, column: 13)
!18364 = !DILocation(line: 1843, column: 13, scope: !18256)
!18365 = !DILocation(line: 1844, column: 17, scope: !18363)
!18366 = !DILocation(line: 1845, column: 9, scope: !18256)
!18367 = !DILocation(line: 1846, column: 1, scope: !18256)
!18368 = distinct !DISubprogram(name: "fts_sort", scope: !1732, file: !1732, line: 1863, type: !18369, scopeLine: 1864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18369 = !DISubroutineType(types: !18370)
!18370 = !{!1835, !1757, !1835, !52}
!18371 = !DILocalVariable(name: "sp", arg: 1, scope: !18368, file: !1732, line: 1863, type: !1757)
!18372 = !DILocation(line: 1863, column: 16, scope: !18368)
!18373 = !DILocalVariable(name: "head", arg: 2, scope: !18368, file: !1732, line: 1863, type: !1835)
!18374 = !DILocation(line: 1863, column: 28, scope: !18368)
!18375 = !DILocalVariable(name: "nitems", arg: 3, scope: !18368, file: !1732, line: 1863, type: !52)
!18376 = !DILocation(line: 1863, column: 50, scope: !18368)
!18377 = !DILocalVariable(name: "ap", scope: !18368, file: !1732, line: 1865, type: !1869)
!18378 = !DILocation(line: 1865, column: 27, scope: !18368)
!18379 = !DILocalVariable(name: "p", scope: !18368, file: !1732, line: 1865, type: !1835)
!18380 = !DILocation(line: 1865, column: 32, scope: !18368)
!18381 = !DILocalVariable(name: "dummy", scope: !18368, file: !1732, line: 1874, type: !1835)
!18382 = !DILocation(line: 1874, column: 17, scope: !18368)
!18383 = !DILocalVariable(name: "compare", scope: !18368, file: !1732, line: 1875, type: !865)
!18384 = !DILocation(line: 1875, column: 15, scope: !18368)
!18385 = !DILocation(line: 1877, column: 16, scope: !18368)
!18386 = !DILocation(line: 1877, column: 48, scope: !18368)
!18387 = !DILocation(line: 1877, column: 37, scope: !18368)
!18388 = !DILocation(line: 1877, column: 34, scope: !18368)
!18389 = !DILocation(line: 1876, column: 12, scope: !18368)
!18390 = !DILocation(line: 1878, column: 53, scope: !18368)
!18391 = !DILocation(line: 1878, column: 57, scope: !18368)
!18392 = !DILocation(line: 1878, column: 14, scope: !18368)
!18393 = !DILocation(line: 1888, column: 13, scope: !18394)
!18394 = distinct !DILexicalBlock(scope: !18368, file: !1732, line: 1888, column: 13)
!18395 = !DILocation(line: 1888, column: 22, scope: !18394)
!18396 = !DILocation(line: 1888, column: 26, scope: !18394)
!18397 = !DILocation(line: 1888, column: 20, scope: !18394)
!18398 = !DILocation(line: 1888, column: 13, scope: !18368)
!18399 = !DILocalVariable(name: "a", scope: !18400, file: !1732, line: 1889, type: !1869)
!18400 = distinct !DILexicalBlock(scope: !18394, file: !1732, line: 1888, column: 38)
!18401 = !DILocation(line: 1889, column: 26, scope: !18400)
!18402 = !DILocation(line: 1891, column: 34, scope: !18400)
!18403 = !DILocation(line: 1891, column: 41, scope: !18400)
!18404 = !DILocation(line: 1891, column: 17, scope: !18400)
!18405 = !DILocation(line: 1891, column: 21, scope: !18400)
!18406 = !DILocation(line: 1891, column: 32, scope: !18400)
!18407 = !DILocation(line: 1892, column: 44, scope: !18408)
!18408 = distinct !DILexicalBlock(scope: !18400, file: !1732, line: 1892, column: 21)
!18409 = !DILocation(line: 1892, column: 48, scope: !18408)
!18410 = !DILocation(line: 1892, column: 42, scope: !18408)
!18411 = !DILocation(line: 1893, column: 21, scope: !18408)
!18412 = !DILocation(line: 1893, column: 40, scope: !18408)
!18413 = !DILocation(line: 1893, column: 44, scope: !18408)
!18414 = !DILocation(line: 1894, column: 40, scope: !18408)
!18415 = !DILocation(line: 1894, column: 44, scope: !18408)
!18416 = !DILocation(line: 1894, column: 55, scope: !18408)
!18417 = !DILocation(line: 1893, column: 31, scope: !18408)
!18418 = !DILocation(line: 1893, column: 29, scope: !18408)
!18419 = !DILocation(line: 1892, column: 21, scope: !18400)
!18420 = !DILocation(line: 1895, column: 30, scope: !18421)
!18421 = distinct !DILexicalBlock(scope: !18408, file: !1732, line: 1894, column: 70)
!18422 = !DILocation(line: 1895, column: 34, scope: !18421)
!18423 = !DILocation(line: 1895, column: 25, scope: !18421)
!18424 = !DILocation(line: 1896, column: 25, scope: !18421)
!18425 = !DILocation(line: 1896, column: 29, scope: !18421)
!18426 = !DILocation(line: 1896, column: 39, scope: !18421)
!18427 = !DILocation(line: 1897, column: 25, scope: !18421)
!18428 = !DILocation(line: 1897, column: 29, scope: !18421)
!18429 = !DILocation(line: 1897, column: 40, scope: !18421)
!18430 = !DILocation(line: 1898, column: 33, scope: !18421)
!18431 = !DILocation(line: 1898, column: 25, scope: !18421)
!18432 = !DILocation(line: 1900, column: 33, scope: !18400)
!18433 = !DILocation(line: 1900, column: 17, scope: !18400)
!18434 = !DILocation(line: 1900, column: 21, scope: !18400)
!18435 = !DILocation(line: 1900, column: 31, scope: !18400)
!18436 = !DILocation(line: 1901, column: 9, scope: !18400)
!18437 = !DILocation(line: 1902, column: 19, scope: !18438)
!18438 = distinct !DILexicalBlock(scope: !18368, file: !1732, line: 1902, column: 9)
!18439 = !DILocation(line: 1902, column: 23, scope: !18438)
!18440 = !DILocation(line: 1902, column: 17, scope: !18438)
!18441 = !DILocation(line: 1902, column: 38, scope: !18438)
!18442 = !DILocation(line: 1902, column: 36, scope: !18438)
!18443 = !DILocation(line: 1902, column: 14, scope: !18438)
!18444 = !DILocation(line: 1902, column: 44, scope: !18445)
!18445 = distinct !DILexicalBlock(scope: !18438, file: !1732, line: 1902, column: 9)
!18446 = !DILocation(line: 1902, column: 9, scope: !18438)
!18447 = !DILocation(line: 1903, column: 25, scope: !18445)
!18448 = !DILocation(line: 1903, column: 20, scope: !18445)
!18449 = !DILocation(line: 1903, column: 23, scope: !18445)
!18450 = !DILocation(line: 1903, column: 17, scope: !18445)
!18451 = !DILocation(line: 1902, column: 51, scope: !18445)
!18452 = !DILocation(line: 1902, column: 54, scope: !18445)
!18453 = !DILocation(line: 1902, column: 49, scope: !18445)
!18454 = !DILocation(line: 1902, column: 9, scope: !18445)
!18455 = distinct !{!18455, !18446, !18456}
!18456 = !DILocation(line: 1903, column: 25, scope: !18438)
!18457 = !DILocation(line: 1904, column: 23, scope: !18368)
!18458 = !DILocation(line: 1904, column: 27, scope: !18368)
!18459 = !DILocation(line: 1904, column: 15, scope: !18368)
!18460 = !DILocation(line: 1904, column: 38, scope: !18368)
!18461 = !DILocation(line: 1904, column: 64, scope: !18368)
!18462 = !DILocation(line: 1904, column: 9, scope: !18368)
!18463 = !DILocation(line: 1905, column: 28, scope: !18464)
!18464 = distinct !DILexicalBlock(scope: !18368, file: !1732, line: 1905, column: 9)
!18465 = !DILocation(line: 1905, column: 32, scope: !18464)
!18466 = !DILocation(line: 1905, column: 26, scope: !18464)
!18467 = !DILocation(line: 1905, column: 21, scope: !18464)
!18468 = !DILocation(line: 1905, column: 19, scope: !18464)
!18469 = !DILocation(line: 1905, column: 14, scope: !18464)
!18470 = !DILocation(line: 1905, column: 44, scope: !18471)
!18471 = distinct !DILexicalBlock(scope: !18464, file: !1732, line: 1905, column: 9)
!18472 = !DILocation(line: 1905, column: 9, scope: !18464)
!18473 = !DILocation(line: 1906, column: 35, scope: !18471)
!18474 = !DILocation(line: 1906, column: 17, scope: !18471)
!18475 = !DILocation(line: 1906, column: 24, scope: !18471)
!18476 = !DILocation(line: 1906, column: 33, scope: !18471)
!18477 = !DILocation(line: 1905, column: 54, scope: !18471)
!18478 = !DILocation(line: 1905, column: 9, scope: !18471)
!18479 = distinct !{!18479, !18472, !18480}
!18480 = !DILocation(line: 1906, column: 39, scope: !18464)
!18481 = !DILocation(line: 1907, column: 9, scope: !18368)
!18482 = !DILocation(line: 1907, column: 16, scope: !18368)
!18483 = !DILocation(line: 1907, column: 25, scope: !18368)
!18484 = !DILocation(line: 1908, column: 17, scope: !18368)
!18485 = !DILocation(line: 1908, column: 9, scope: !18368)
!18486 = !DILocation(line: 1909, column: 1, scope: !18368)
!18487 = distinct !DISubprogram(name: "setup_dir", scope: !1839, file: !1839, line: 50, type: !18488, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18488 = !DISubroutineType(types: !18489)
!18489 = !{!139, !1757}
!18490 = !DILocalVariable(name: "fts", arg: 1, scope: !18487, file: !1839, line: 50, type: !1757)
!18491 = !DILocation(line: 50, column: 17, scope: !18487)
!18492 = !DILocation(line: 52, column: 7, scope: !18493)
!18493 = distinct !DILexicalBlock(scope: !18487, file: !1839, line: 52, column: 7)
!18494 = !DILocation(line: 52, column: 12, scope: !18493)
!18495 = !DILocation(line: 52, column: 24, scope: !18493)
!18496 = !DILocation(line: 52, column: 7, scope: !18487)
!18497 = !DILocation(line: 55, column: 27, scope: !18498)
!18498 = distinct !DILexicalBlock(scope: !18493, file: !1839, line: 53, column: 5)
!18499 = !DILocation(line: 55, column: 7, scope: !18498)
!18500 = !DILocation(line: 55, column: 12, scope: !18498)
!18501 = !DILocation(line: 55, column: 22, scope: !18498)
!18502 = !DILocation(line: 55, column: 25, scope: !18498)
!18503 = !DILocation(line: 57, column: 13, scope: !18504)
!18504 = distinct !DILexicalBlock(scope: !18498, file: !1839, line: 57, column: 11)
!18505 = !DILocation(line: 57, column: 18, scope: !18504)
!18506 = !DILocation(line: 57, column: 28, scope: !18504)
!18507 = !DILocation(line: 57, column: 11, scope: !18498)
!18508 = !DILocation(line: 58, column: 9, scope: !18504)
!18509 = !DILocation(line: 59, column: 5, scope: !18498)
!18510 = !DILocation(line: 62, column: 30, scope: !18511)
!18511 = distinct !DILexicalBlock(scope: !18493, file: !1839, line: 61, column: 5)
!18512 = !DILocation(line: 62, column: 7, scope: !18511)
!18513 = !DILocation(line: 62, column: 12, scope: !18511)
!18514 = !DILocation(line: 62, column: 22, scope: !18511)
!18515 = !DILocation(line: 62, column: 28, scope: !18511)
!18516 = !DILocation(line: 63, column: 13, scope: !18517)
!18517 = distinct !DILexicalBlock(scope: !18511, file: !1839, line: 63, column: 11)
!18518 = !DILocation(line: 63, column: 18, scope: !18517)
!18519 = !DILocation(line: 63, column: 28, scope: !18517)
!18520 = !DILocation(line: 63, column: 11, scope: !18511)
!18521 = !DILocation(line: 64, column: 9, scope: !18517)
!18522 = !DILocation(line: 65, column: 25, scope: !18511)
!18523 = !DILocation(line: 65, column: 30, scope: !18511)
!18524 = !DILocation(line: 65, column: 40, scope: !18511)
!18525 = !DILocation(line: 65, column: 7, scope: !18511)
!18526 = !DILocation(line: 68, column: 3, scope: !18487)
!18527 = !DILocation(line: 69, column: 1, scope: !18487)
!18528 = distinct !DISubprogram(name: "diropen", scope: !1732, file: !1732, line: 346, type: !18529, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18529 = !DISubroutineType(types: !18530)
!18530 = !{!5, !18531, !113}
!18531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!18532 = !DILocalVariable(name: "sp", arg: 1, scope: !18528, file: !1732, line: 346, type: !18531)
!18533 = !DILocation(line: 346, column: 21, scope: !18528)
!18534 = !DILocalVariable(name: "dir", arg: 2, scope: !18528, file: !1732, line: 346, type: !113)
!18535 = !DILocation(line: 346, column: 37, scope: !18528)
!18536 = !DILocalVariable(name: "open_flags", scope: !18528, file: !1732, line: 348, type: !5)
!18537 = !DILocation(line: 348, column: 7, scope: !18528)
!18538 = !DILocation(line: 349, column: 24, scope: !18528)
!18539 = !DILocation(line: 349, column: 21, scope: !18528)
!18540 = !DILocalVariable(name: "fd", scope: !18528, file: !1732, line: 351, type: !5)
!18541 = !DILocation(line: 351, column: 7, scope: !18528)
!18542 = !DILocation(line: 351, column: 13, scope: !18528)
!18543 = !DILocation(line: 352, column: 23, scope: !18528)
!18544 = !DILocation(line: 352, column: 27, scope: !18528)
!18545 = !DILocation(line: 352, column: 39, scope: !18528)
!18546 = !DILocation(line: 352, column: 44, scope: !18528)
!18547 = !DILocation(line: 352, column: 15, scope: !18528)
!18548 = !DILocation(line: 353, column: 21, scope: !18528)
!18549 = !DILocation(line: 353, column: 26, scope: !18528)
!18550 = !DILocation(line: 353, column: 15, scope: !18528)
!18551 = !DILocation(line: 354, column: 10, scope: !18528)
!18552 = !DILocation(line: 354, column: 3, scope: !18528)
!18553 = distinct !DISubprogram(name: "fts_lfree", scope: !1732, file: !1732, line: 1944, type: !18554, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18554 = !DISubroutineType(types: !18555)
!18555 = !{null, !1835}
!18556 = !DILocalVariable(name: "head", arg: 1, scope: !18553, file: !1732, line: 1944, type: !1835)
!18557 = !DILocation(line: 1944, column: 29, scope: !18553)
!18558 = !DILocalVariable(name: "p", scope: !18553, file: !1732, line: 1946, type: !1835)
!18559 = !DILocation(line: 1946, column: 26, scope: !18553)
!18560 = !DILocation(line: 1949, column: 9, scope: !18553)
!18561 = !DILocation(line: 1949, column: 21, scope: !18553)
!18562 = !DILocation(line: 1949, column: 19, scope: !18553)
!18563 = !DILocation(line: 1950, column: 24, scope: !18564)
!18564 = distinct !DILexicalBlock(scope: !18553, file: !1732, line: 1949, column: 28)
!18565 = !DILocation(line: 1950, column: 30, scope: !18564)
!18566 = !DILocation(line: 1950, column: 22, scope: !18564)
!18567 = !DILocation(line: 1951, column: 21, scope: !18568)
!18568 = distinct !DILexicalBlock(scope: !18564, file: !1732, line: 1951, column: 21)
!18569 = !DILocation(line: 1951, column: 24, scope: !18568)
!18570 = !DILocation(line: 1951, column: 21, scope: !18564)
!18571 = !DILocation(line: 1952, column: 35, scope: !18568)
!18572 = !DILocation(line: 1952, column: 38, scope: !18568)
!18573 = !DILocation(line: 1952, column: 25, scope: !18568)
!18574 = !DILocation(line: 1953, column: 22, scope: !18564)
!18575 = !DILocation(line: 1953, column: 17, scope: !18564)
!18576 = distinct !{!18576, !18560, !18577}
!18577 = !DILocation(line: 1954, column: 9, scope: !18553)
!18578 = !DILocation(line: 1955, column: 1, scope: !18553)
!18579 = distinct !DISubprogram(name: "AD_hash", scope: !1839, file: !1839, line: 41, type: !706, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18580 = !DILocalVariable(name: "x", arg: 1, scope: !18579, file: !1839, line: 41, type: !553)
!18581 = !DILocation(line: 41, column: 22, scope: !18579)
!18582 = !DILocalVariable(name: "table_size", arg: 2, scope: !18579, file: !1839, line: 41, type: !52)
!18583 = !DILocation(line: 41, column: 32, scope: !18579)
!18584 = !DILocalVariable(name: "ax", scope: !18579, file: !1839, line: 43, type: !1836)
!18585 = !DILocation(line: 43, column: 28, scope: !18579)
!18586 = !DILocation(line: 43, column: 33, scope: !18579)
!18587 = !DILocation(line: 44, column: 22, scope: !18579)
!18588 = !DILocation(line: 44, column: 26, scope: !18579)
!18589 = !DILocation(line: 44, column: 32, scope: !18579)
!18590 = !DILocation(line: 44, column: 30, scope: !18579)
!18591 = !DILocation(line: 44, column: 3, scope: !18579)
!18592 = distinct !DISubprogram(name: "AD_compare", scope: !1839, file: !1839, line: 32, type: !711, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18593 = !DILocalVariable(name: "x", arg: 1, scope: !18592, file: !1839, line: 32, type: !553)
!18594 = !DILocation(line: 32, column: 25, scope: !18592)
!18595 = !DILocalVariable(name: "y", arg: 2, scope: !18592, file: !1839, line: 32, type: !553)
!18596 = !DILocation(line: 32, column: 40, scope: !18592)
!18597 = !DILocalVariable(name: "ax", scope: !18592, file: !1839, line: 34, type: !1836)
!18598 = !DILocation(line: 34, column: 28, scope: !18592)
!18599 = !DILocation(line: 34, column: 33, scope: !18592)
!18600 = !DILocalVariable(name: "ay", scope: !18592, file: !1839, line: 35, type: !1836)
!18601 = !DILocation(line: 35, column: 28, scope: !18592)
!18602 = !DILocation(line: 35, column: 33, scope: !18592)
!18603 = !DILocation(line: 36, column: 10, scope: !18592)
!18604 = !DILocation(line: 36, column: 14, scope: !18592)
!18605 = !DILocation(line: 36, column: 21, scope: !18592)
!18606 = !DILocation(line: 36, column: 25, scope: !18592)
!18607 = !DILocation(line: 36, column: 18, scope: !18592)
!18608 = !DILocation(line: 37, column: 7, scope: !18592)
!18609 = !DILocation(line: 37, column: 10, scope: !18592)
!18610 = !DILocation(line: 37, column: 14, scope: !18592)
!18611 = !DILocation(line: 37, column: 21, scope: !18592)
!18612 = !DILocation(line: 37, column: 25, scope: !18592)
!18613 = !DILocation(line: 37, column: 18, scope: !18592)
!18614 = !DILocation(line: 0, scope: !18592)
!18615 = !DILocation(line: 36, column: 3, scope: !18592)
!18616 = distinct !DISubprogram(name: "fts_compar", scope: !1732, file: !1732, line: 1849, type: !866, scopeLine: 1850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18617 = !DILocalVariable(name: "a", arg: 1, scope: !18616, file: !1732, line: 1849, type: !553)
!18618 = !DILocation(line: 1849, column: 25, scope: !18616)
!18619 = !DILocalVariable(name: "b", arg: 2, scope: !18616, file: !1732, line: 1849, type: !553)
!18620 = !DILocation(line: 1849, column: 40, scope: !18616)
!18621 = !DILocalVariable(name: "pa", scope: !18616, file: !1732, line: 1856, type: !1738)
!18622 = !DILocation(line: 1856, column: 18, scope: !18616)
!18623 = !DILocation(line: 1856, column: 41, scope: !18616)
!18624 = !DILocation(line: 1856, column: 23, scope: !18616)
!18625 = !DILocalVariable(name: "pb", scope: !18616, file: !1732, line: 1857, type: !1738)
!18626 = !DILocation(line: 1857, column: 18, scope: !18616)
!18627 = !DILocation(line: 1857, column: 41, scope: !18616)
!18628 = !DILocation(line: 1857, column: 23, scope: !18616)
!18629 = !DILocation(line: 1858, column: 10, scope: !18616)
!18630 = !DILocation(line: 1858, column: 17, scope: !18616)
!18631 = !DILocation(line: 1858, column: 26, scope: !18616)
!18632 = !DILocation(line: 1858, column: 38, scope: !18616)
!18633 = !DILocation(line: 1858, column: 42, scope: !18616)
!18634 = !DILocation(line: 1858, column: 3, scope: !18616)
!18635 = distinct !DISubprogram(name: "rpl_fts_close", scope: !1732, file: !1732, line: 573, type: !18636, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18636 = !DISubroutineType(types: !18637)
!18637 = !{!5, !1757}
!18638 = !DILocalVariable(name: "sp", arg: 1, scope: !18635, file: !1732, line: 573, type: !1757)
!18639 = !DILocation(line: 573, column: 17, scope: !18635)
!18640 = !DILocalVariable(name: "freep", scope: !18635, file: !1732, line: 575, type: !1835)
!18641 = !DILocation(line: 575, column: 26, scope: !18635)
!18642 = !DILocalVariable(name: "p", scope: !18635, file: !1732, line: 575, type: !1835)
!18643 = !DILocation(line: 575, column: 34, scope: !18635)
!18644 = !DILocalVariable(name: "saved_errno", scope: !18635, file: !1732, line: 576, type: !5)
!18645 = !DILocation(line: 576, column: 13, scope: !18635)
!18646 = !DILocation(line: 583, column: 13, scope: !18647)
!18647 = distinct !DILexicalBlock(scope: !18635, file: !1732, line: 583, column: 13)
!18648 = !DILocation(line: 583, column: 17, scope: !18647)
!18649 = !DILocation(line: 583, column: 13, scope: !18635)
!18650 = !DILocation(line: 584, column: 26, scope: !18651)
!18651 = distinct !DILexicalBlock(scope: !18652, file: !1732, line: 584, column: 17)
!18652 = distinct !DILexicalBlock(scope: !18647, file: !1732, line: 583, column: 26)
!18653 = !DILocation(line: 584, column: 30, scope: !18651)
!18654 = !DILocation(line: 584, column: 24, scope: !18651)
!18655 = !DILocation(line: 584, column: 22, scope: !18651)
!18656 = !DILocation(line: 584, column: 39, scope: !18657)
!18657 = distinct !DILexicalBlock(scope: !18651, file: !1732, line: 584, column: 17)
!18658 = !DILocation(line: 584, column: 42, scope: !18657)
!18659 = !DILocation(line: 584, column: 52, scope: !18657)
!18660 = !DILocation(line: 584, column: 17, scope: !18651)
!18661 = !DILocation(line: 585, column: 33, scope: !18662)
!18662 = distinct !DILexicalBlock(scope: !18657, file: !1732, line: 584, column: 71)
!18663 = !DILocation(line: 585, column: 31, scope: !18662)
!18664 = !DILocation(line: 586, column: 29, scope: !18662)
!18665 = !DILocation(line: 586, column: 32, scope: !18662)
!18666 = !DILocation(line: 586, column: 41, scope: !18662)
!18667 = !DILocation(line: 586, column: 51, scope: !18662)
!18668 = !DILocation(line: 586, column: 54, scope: !18662)
!18669 = !DILocation(line: 586, column: 65, scope: !18662)
!18670 = !DILocation(line: 586, column: 68, scope: !18662)
!18671 = !DILocation(line: 586, column: 27, scope: !18662)
!18672 = !DILocation(line: 587, column: 30, scope: !18662)
!18673 = !DILocation(line: 587, column: 25, scope: !18662)
!18674 = !DILocation(line: 584, column: 17, scope: !18657)
!18675 = distinct !{!18675, !18660, !18676}
!18676 = !DILocation(line: 588, column: 17, scope: !18651)
!18677 = !DILocation(line: 589, column: 22, scope: !18652)
!18678 = !DILocation(line: 589, column: 17, scope: !18652)
!18679 = !DILocation(line: 590, column: 9, scope: !18652)
!18680 = !DILocation(line: 593, column: 13, scope: !18681)
!18681 = distinct !DILexicalBlock(scope: !18635, file: !1732, line: 593, column: 13)
!18682 = !DILocation(line: 593, column: 17, scope: !18681)
!18683 = !DILocation(line: 593, column: 13, scope: !18635)
!18684 = !DILocation(line: 594, column: 27, scope: !18681)
!18685 = !DILocation(line: 594, column: 31, scope: !18681)
!18686 = !DILocation(line: 594, column: 17, scope: !18681)
!18687 = !DILocation(line: 595, column: 14, scope: !18635)
!18688 = !DILocation(line: 595, column: 18, scope: !18635)
!18689 = !DILocation(line: 595, column: 9, scope: !18635)
!18690 = !DILocation(line: 596, column: 14, scope: !18635)
!18691 = !DILocation(line: 596, column: 18, scope: !18635)
!18692 = !DILocation(line: 596, column: 9, scope: !18635)
!18693 = !DILocation(line: 598, column: 13, scope: !18694)
!18694 = distinct !DILexicalBlock(scope: !18635, file: !1732, line: 598, column: 13)
!18695 = !DILocation(line: 598, column: 13, scope: !18635)
!18696 = !DILocation(line: 600, column: 22, scope: !18697)
!18697 = distinct !DILexicalBlock(scope: !18698, file: !1732, line: 600, column: 17)
!18698 = distinct !DILexicalBlock(scope: !18694, file: !1732, line: 599, column: 11)
!18699 = !DILocation(line: 600, column: 26, scope: !18697)
!18700 = !DILocation(line: 600, column: 19, scope: !18697)
!18701 = !DILocation(line: 600, column: 17, scope: !18698)
!18702 = !DILocation(line: 601, column: 26, scope: !18703)
!18703 = distinct !DILexicalBlock(scope: !18697, file: !1732, line: 601, column: 19)
!18704 = !DILocation(line: 601, column: 30, scope: !18703)
!18705 = !DILocation(line: 601, column: 19, scope: !18703)
!18706 = !DILocation(line: 601, column: 19, scope: !18697)
!18707 = !DILocation(line: 602, column: 31, scope: !18703)
!18708 = !DILocation(line: 602, column: 29, scope: !18703)
!18709 = !DILocation(line: 602, column: 17, scope: !18703)
!18710 = !DILocation(line: 601, column: 40, scope: !18703)
!18711 = !DILocation(line: 603, column: 11, scope: !18698)
!18712 = !DILocation(line: 604, column: 19, scope: !18713)
!18713 = distinct !DILexicalBlock(scope: !18694, file: !1732, line: 604, column: 18)
!18714 = !DILocation(line: 604, column: 18, scope: !18694)
!18715 = !DILocation(line: 607, column: 24, scope: !18716)
!18716 = distinct !DILexicalBlock(scope: !18717, file: !1732, line: 607, column: 17)
!18717 = distinct !DILexicalBlock(scope: !18713, file: !1732, line: 605, column: 11)
!18718 = !DILocation(line: 607, column: 28, scope: !18716)
!18719 = !DILocation(line: 607, column: 17, scope: !18716)
!18720 = !DILocation(line: 607, column: 17, scope: !18717)
!18721 = !DILocation(line: 608, column: 29, scope: !18716)
!18722 = !DILocation(line: 608, column: 27, scope: !18716)
!18723 = !DILocation(line: 608, column: 15, scope: !18716)
!18724 = !DILocation(line: 612, column: 24, scope: !18725)
!18725 = distinct !DILexicalBlock(scope: !18717, file: !1732, line: 612, column: 17)
!18726 = !DILocation(line: 612, column: 28, scope: !18725)
!18727 = !DILocation(line: 612, column: 17, scope: !18725)
!18728 = !DILocation(line: 612, column: 17, scope: !18717)
!18729 = !DILocation(line: 613, column: 19, scope: !18730)
!18730 = distinct !DILexicalBlock(scope: !18725, file: !1732, line: 613, column: 19)
!18731 = !DILocation(line: 613, column: 31, scope: !18730)
!18732 = !DILocation(line: 613, column: 19, scope: !18725)
!18733 = !DILocation(line: 614, column: 31, scope: !18730)
!18734 = !DILocation(line: 614, column: 29, scope: !18730)
!18735 = !DILocation(line: 614, column: 17, scope: !18730)
!18736 = !DILocation(line: 613, column: 34, scope: !18730)
!18737 = !DILocation(line: 615, column: 11, scope: !18717)
!18738 = !DILocation(line: 617, column: 25, scope: !18635)
!18739 = !DILocation(line: 617, column: 29, scope: !18635)
!18740 = !DILocation(line: 617, column: 9, scope: !18635)
!18741 = !DILocation(line: 619, column: 13, scope: !18742)
!18742 = distinct !DILexicalBlock(scope: !18635, file: !1732, line: 619, column: 13)
!18743 = !DILocation(line: 619, column: 17, scope: !18742)
!18744 = !DILocation(line: 619, column: 13, scope: !18635)
!18745 = !DILocation(line: 620, column: 22, scope: !18742)
!18746 = !DILocation(line: 620, column: 26, scope: !18742)
!18747 = !DILocation(line: 620, column: 11, scope: !18742)
!18748 = !DILocation(line: 622, column: 19, scope: !18635)
!18749 = !DILocation(line: 622, column: 9, scope: !18635)
!18750 = !DILocation(line: 625, column: 14, scope: !18635)
!18751 = !DILocation(line: 625, column: 9, scope: !18635)
!18752 = !DILocation(line: 628, column: 13, scope: !18753)
!18753 = distinct !DILexicalBlock(scope: !18635, file: !1732, line: 628, column: 13)
!18754 = !DILocation(line: 628, column: 13, scope: !18635)
!18755 = !DILocation(line: 629, column: 17, scope: !18756)
!18756 = distinct !DILexicalBlock(scope: !18753, file: !1732, line: 628, column: 26)
!18757 = !DILocation(line: 630, column: 17, scope: !18756)
!18758 = !DILocation(line: 633, column: 9, scope: !18635)
!18759 = !DILocation(line: 634, column: 1, scope: !18635)
!18760 = distinct !DISubprogram(name: "fd_ring_clear", scope: !1732, file: !1732, line: 276, type: !18761, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18761 = !DISubroutineType(types: !18762)
!18762 = !{null, !18763}
!18763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!18764 = !DILocalVariable(name: "fd_ring", arg: 1, scope: !18760, file: !1732, line: 276, type: !18763)
!18765 = !DILocation(line: 276, column: 24, scope: !18760)
!18766 = !DILocation(line: 278, column: 3, scope: !18760)
!18767 = !DILocation(line: 278, column: 27, scope: !18760)
!18768 = !DILocation(line: 278, column: 13, scope: !18760)
!18769 = !DILocation(line: 278, column: 11, scope: !18760)
!18770 = !DILocalVariable(name: "fd", scope: !18771, file: !1732, line: 280, type: !5)
!18771 = distinct !DILexicalBlock(scope: !18760, file: !1732, line: 279, column: 5)
!18772 = !DILocation(line: 280, column: 11, scope: !18771)
!18773 = !DILocation(line: 280, column: 28, scope: !18771)
!18774 = !DILocation(line: 280, column: 16, scope: !18771)
!18775 = !DILocation(line: 281, column: 16, scope: !18776)
!18776 = distinct !DILexicalBlock(scope: !18771, file: !1732, line: 281, column: 11)
!18777 = !DILocation(line: 281, column: 13, scope: !18776)
!18778 = !DILocation(line: 281, column: 11, scope: !18771)
!18779 = !DILocation(line: 282, column: 16, scope: !18776)
!18780 = !DILocation(line: 282, column: 9, scope: !18776)
!18781 = distinct !{!18781, !18766, !18782}
!18782 = !DILocation(line: 283, column: 5, scope: !18760)
!18783 = !DILocation(line: 284, column: 1, scope: !18760)
!18784 = distinct !DISubprogram(name: "free_dir", scope: !1839, file: !1839, line: 151, type: !18785, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18785 = !DISubroutineType(types: !18786)
!18786 = !{null, !1757}
!18787 = !DILocalVariable(name: "sp", arg: 1, scope: !18784, file: !1839, line: 151, type: !1757)
!18788 = !DILocation(line: 151, column: 16, scope: !18784)
!18789 = !DILocation(line: 153, column: 7, scope: !18790)
!18790 = distinct !DILexicalBlock(scope: !18784, file: !1839, line: 153, column: 7)
!18791 = !DILocation(line: 153, column: 11, scope: !18790)
!18792 = !DILocation(line: 153, column: 23, scope: !18790)
!18793 = !DILocation(line: 153, column: 7, scope: !18784)
!18794 = !DILocation(line: 155, column: 11, scope: !18795)
!18795 = distinct !DILexicalBlock(scope: !18796, file: !1839, line: 155, column: 11)
!18796 = distinct !DILexicalBlock(scope: !18790, file: !1839, line: 154, column: 5)
!18797 = !DILocation(line: 155, column: 15, scope: !18795)
!18798 = !DILocation(line: 155, column: 25, scope: !18795)
!18799 = !DILocation(line: 155, column: 11, scope: !18796)
!18800 = !DILocation(line: 156, column: 20, scope: !18795)
!18801 = !DILocation(line: 156, column: 24, scope: !18795)
!18802 = !DILocation(line: 156, column: 34, scope: !18795)
!18803 = !DILocation(line: 156, column: 9, scope: !18795)
!18804 = !DILocation(line: 157, column: 5, scope: !18796)
!18805 = !DILocation(line: 159, column: 11, scope: !18790)
!18806 = !DILocation(line: 159, column: 15, scope: !18790)
!18807 = !DILocation(line: 159, column: 25, scope: !18790)
!18808 = !DILocation(line: 159, column: 5, scope: !18790)
!18809 = !DILocation(line: 160, column: 1, scope: !18784)
!18810 = distinct !DISubprogram(name: "rpl_fts_read", scope: !1732, file: !1732, line: 852, type: !18811, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!18811 = !DISubroutineType(types: !18812)
!18812 = !{!1835, !1757}
!18813 = !DILocalVariable(name: "sp", arg: 1, scope: !18810, file: !1732, line: 852, type: !1757)
!18814 = !DILocation(line: 852, column: 25, scope: !18810)
!18815 = !DILocalVariable(name: "p", scope: !18810, file: !1732, line: 854, type: !1835)
!18816 = !DILocation(line: 854, column: 26, scope: !18810)
!18817 = !DILocalVariable(name: "tmp", scope: !18810, file: !1732, line: 854, type: !1835)
!18818 = !DILocation(line: 854, column: 30, scope: !18810)
!18819 = !DILocalVariable(name: "instr", scope: !18810, file: !1732, line: 855, type: !34)
!18820 = !DILocation(line: 855, column: 37, scope: !18810)
!18821 = !DILocalVariable(name: "t", scope: !18810, file: !1732, line: 856, type: !7)
!18822 = !DILocation(line: 856, column: 24, scope: !18810)
!18823 = !DILocation(line: 859, column: 13, scope: !18824)
!18824 = distinct !DILexicalBlock(scope: !18810, file: !1732, line: 859, column: 13)
!18825 = !DILocation(line: 859, column: 17, scope: !18824)
!18826 = !DILocation(line: 859, column: 25, scope: !18824)
!18827 = !DILocation(line: 859, column: 33, scope: !18824)
!18828 = !DILocation(line: 859, column: 36, scope: !18824)
!18829 = !DILocation(line: 859, column: 13, scope: !18810)
!18830 = !DILocation(line: 860, column: 17, scope: !18824)
!18831 = !DILocation(line: 863, column: 13, scope: !18810)
!18832 = !DILocation(line: 863, column: 17, scope: !18810)
!18833 = !DILocation(line: 863, column: 11, scope: !18810)
!18834 = !DILocation(line: 866, column: 17, scope: !18810)
!18835 = !DILocation(line: 866, column: 20, scope: !18810)
!18836 = !DILocation(line: 866, column: 15, scope: !18810)
!18837 = !DILocation(line: 867, column: 9, scope: !18810)
!18838 = !DILocation(line: 867, column: 12, scope: !18810)
!18839 = !DILocation(line: 867, column: 22, scope: !18810)
!18840 = !DILocation(line: 870, column: 13, scope: !18841)
!18841 = distinct !DILexicalBlock(scope: !18810, file: !1732, line: 870, column: 13)
!18842 = !DILocation(line: 870, column: 19, scope: !18841)
!18843 = !DILocation(line: 870, column: 13, scope: !18810)
!18844 = !DILocation(line: 871, column: 40, scope: !18845)
!18845 = distinct !DILexicalBlock(scope: !18841, file: !1732, line: 870, column: 33)
!18846 = !DILocation(line: 871, column: 44, scope: !18845)
!18847 = !DILocation(line: 871, column: 31, scope: !18845)
!18848 = !DILocation(line: 871, column: 17, scope: !18845)
!18849 = !DILocation(line: 871, column: 20, scope: !18845)
!18850 = !DILocation(line: 871, column: 29, scope: !18845)
!18851 = !DILocation(line: 872, column: 25, scope: !18845)
!18852 = !DILocation(line: 872, column: 17, scope: !18845)
!18853 = !DILocation(line: 883, column: 13, scope: !18854)
!18854 = distinct !DILexicalBlock(scope: !18810, file: !1732, line: 883, column: 13)
!18855 = !DILocation(line: 883, column: 19, scope: !18854)
!18856 = !DILocation(line: 883, column: 33, scope: !18854)
!18857 = !DILocation(line: 884, column: 14, scope: !18854)
!18858 = !DILocation(line: 884, column: 17, scope: !18854)
!18859 = !DILocation(line: 884, column: 26, scope: !18854)
!18860 = !DILocation(line: 884, column: 36, scope: !18854)
!18861 = !DILocation(line: 884, column: 39, scope: !18854)
!18862 = !DILocation(line: 884, column: 42, scope: !18854)
!18863 = !DILocation(line: 884, column: 51, scope: !18854)
!18864 = !DILocation(line: 883, column: 13, scope: !18810)
!18865 = !DILocation(line: 885, column: 40, scope: !18866)
!18866 = distinct !DILexicalBlock(scope: !18854, file: !1732, line: 884, column: 67)
!18867 = !DILocation(line: 885, column: 44, scope: !18866)
!18868 = !DILocation(line: 885, column: 31, scope: !18866)
!18869 = !DILocation(line: 885, column: 17, scope: !18866)
!18870 = !DILocation(line: 885, column: 20, scope: !18866)
!18871 = !DILocation(line: 885, column: 29, scope: !18866)
!18872 = !DILocation(line: 886, column: 21, scope: !18873)
!18873 = distinct !DILexicalBlock(scope: !18866, file: !1732, line: 886, column: 21)
!18874 = !DILocation(line: 886, column: 24, scope: !18873)
!18875 = !DILocation(line: 886, column: 33, scope: !18873)
!18876 = !DILocation(line: 886, column: 42, scope: !18873)
!18877 = !DILocation(line: 886, column: 46, scope: !18873)
!18878 = !DILocation(line: 886, column: 21, scope: !18866)
!18879 = !DILocation(line: 887, column: 54, scope: !18880)
!18880 = distinct !DILexicalBlock(scope: !18881, file: !1732, line: 887, column: 29)
!18881 = distinct !DILexicalBlock(scope: !18873, file: !1732, line: 886, column: 66)
!18882 = !DILocation(line: 887, column: 45, scope: !18880)
!18883 = !DILocation(line: 887, column: 30, scope: !18880)
!18884 = !DILocation(line: 887, column: 33, scope: !18880)
!18885 = !DILocation(line: 887, column: 43, scope: !18880)
!18886 = !DILocation(line: 887, column: 64, scope: !18880)
!18887 = !DILocation(line: 887, column: 29, scope: !18881)
!18888 = !DILocation(line: 888, column: 48, scope: !18889)
!18889 = distinct !DILexicalBlock(scope: !18880, file: !1732, line: 887, column: 69)
!18890 = !DILocation(line: 888, column: 33, scope: !18889)
!18891 = !DILocation(line: 888, column: 36, scope: !18889)
!18892 = !DILocation(line: 888, column: 46, scope: !18889)
!18893 = !DILocation(line: 889, column: 33, scope: !18889)
!18894 = !DILocation(line: 889, column: 36, scope: !18889)
!18895 = !DILocation(line: 889, column: 45, scope: !18889)
!18896 = !DILocation(line: 890, column: 25, scope: !18889)
!18897 = !DILocation(line: 891, column: 33, scope: !18880)
!18898 = !DILocation(line: 891, column: 36, scope: !18880)
!18899 = !DILocation(line: 891, column: 46, scope: !18880)
!18900 = !DILocation(line: 892, column: 17, scope: !18881)
!18901 = !DILocation(line: 893, column: 17, scope: !18866)
!18902 = !DILocation(line: 897, column: 13, scope: !18903)
!18903 = distinct !DILexicalBlock(scope: !18810, file: !1732, line: 897, column: 13)
!18904 = !DILocation(line: 897, column: 16, scope: !18903)
!18905 = !DILocation(line: 897, column: 25, scope: !18903)
!18906 = !DILocation(line: 897, column: 13, scope: !18810)
!18907 = !DILocation(line: 899, column: 21, scope: !18908)
!18908 = distinct !DILexicalBlock(scope: !18909, file: !1732, line: 899, column: 21)
!18909 = distinct !DILexicalBlock(scope: !18903, file: !1732, line: 897, column: 35)
!18910 = !DILocation(line: 899, column: 27, scope: !18908)
!18911 = !DILocation(line: 899, column: 39, scope: !18908)
!18912 = !DILocation(line: 900, column: 22, scope: !18908)
!18913 = !DILocation(line: 900, column: 38, scope: !18908)
!18914 = !DILocation(line: 900, column: 41, scope: !18908)
!18915 = !DILocation(line: 900, column: 44, scope: !18908)
!18916 = !DILocation(line: 900, column: 55, scope: !18908)
!18917 = !DILocation(line: 900, column: 65, scope: !18908)
!18918 = !DILocation(line: 900, column: 69, scope: !18908)
!18919 = !DILocation(line: 900, column: 62, scope: !18908)
!18920 = !DILocation(line: 899, column: 21, scope: !18909)
!18921 = !DILocation(line: 901, column: 29, scope: !18922)
!18922 = distinct !DILexicalBlock(scope: !18923, file: !1732, line: 901, column: 29)
!18923 = distinct !DILexicalBlock(scope: !18908, file: !1732, line: 900, column: 79)
!18924 = !DILocation(line: 901, column: 32, scope: !18922)
!18925 = !DILocation(line: 901, column: 42, scope: !18922)
!18926 = !DILocation(line: 901, column: 29, scope: !18923)
!18927 = !DILocation(line: 902, column: 45, scope: !18922)
!18928 = !DILocation(line: 902, column: 48, scope: !18922)
!18929 = !DILocation(line: 902, column: 39, scope: !18922)
!18930 = !DILocation(line: 902, column: 33, scope: !18922)
!18931 = !DILocation(line: 903, column: 29, scope: !18932)
!18932 = distinct !DILexicalBlock(scope: !18923, file: !1732, line: 903, column: 29)
!18933 = !DILocation(line: 903, column: 33, scope: !18932)
!18934 = !DILocation(line: 903, column: 29, scope: !18923)
!18935 = !DILocation(line: 904, column: 43, scope: !18936)
!18936 = distinct !DILexicalBlock(scope: !18932, file: !1732, line: 903, column: 44)
!18937 = !DILocation(line: 904, column: 47, scope: !18936)
!18938 = !DILocation(line: 904, column: 33, scope: !18936)
!18939 = !DILocation(line: 905, column: 33, scope: !18936)
!18940 = !DILocation(line: 905, column: 37, scope: !18936)
!18941 = !DILocation(line: 905, column: 47, scope: !18936)
!18942 = !DILocation(line: 906, column: 25, scope: !18936)
!18943 = !DILocation(line: 907, column: 25, scope: !18923)
!18944 = !DILocation(line: 907, column: 28, scope: !18923)
!18945 = !DILocation(line: 907, column: 37, scope: !18923)
!18946 = !DILocation(line: 908, column: 25, scope: !18923)
!18947 = !DILocation(line: 908, column: 25, scope: !18948)
!18948 = distinct !DILexicalBlock(scope: !18923, file: !1732, line: 908, column: 25)
!18949 = !DILocation(line: 909, column: 33, scope: !18923)
!18950 = !DILocation(line: 909, column: 25, scope: !18923)
!18951 = !DILocation(line: 913, column: 21, scope: !18952)
!18952 = distinct !DILexicalBlock(scope: !18909, file: !1732, line: 913, column: 21)
!18953 = !DILocation(line: 913, column: 25, scope: !18952)
!18954 = !DILocation(line: 913, column: 35, scope: !18952)
!18955 = !DILocation(line: 913, column: 43, scope: !18952)
!18956 = !DILocation(line: 913, column: 46, scope: !18952)
!18957 = !DILocation(line: 913, column: 21, scope: !18909)
!18958 = !DILocation(line: 914, column: 25, scope: !18959)
!18959 = distinct !DILexicalBlock(scope: !18952, file: !1732, line: 913, column: 67)
!18960 = !DILocation(line: 915, column: 35, scope: !18959)
!18961 = !DILocation(line: 915, column: 39, scope: !18959)
!18962 = !DILocation(line: 915, column: 25, scope: !18959)
!18963 = !DILocation(line: 916, column: 25, scope: !18959)
!18964 = !DILocation(line: 916, column: 29, scope: !18959)
!18965 = !DILocation(line: 916, column: 39, scope: !18959)
!18966 = !DILocation(line: 917, column: 17, scope: !18959)
!18967 = !DILocation(line: 931, column: 21, scope: !18968)
!18968 = distinct !DILexicalBlock(scope: !18909, file: !1732, line: 931, column: 21)
!18969 = !DILocation(line: 931, column: 25, scope: !18968)
!18970 = !DILocation(line: 931, column: 35, scope: !18968)
!18971 = !DILocation(line: 931, column: 21, scope: !18909)
!18972 = !DILocation(line: 932, column: 48, scope: !18973)
!18973 = distinct !DILexicalBlock(scope: !18974, file: !1732, line: 932, column: 29)
!18974 = distinct !DILexicalBlock(scope: !18968, file: !1732, line: 931, column: 44)
!18975 = !DILocation(line: 932, column: 52, scope: !18973)
!18976 = !DILocation(line: 932, column: 59, scope: !18973)
!18977 = !DILocation(line: 932, column: 62, scope: !18973)
!18978 = !DILocation(line: 932, column: 29, scope: !18973)
!18979 = !DILocation(line: 932, column: 29, scope: !18974)
!18980 = !DILocation(line: 933, column: 48, scope: !18981)
!18981 = distinct !DILexicalBlock(scope: !18973, file: !1732, line: 932, column: 76)
!18982 = !DILocation(line: 933, column: 33, scope: !18981)
!18983 = !DILocation(line: 933, column: 36, scope: !18981)
!18984 = !DILocation(line: 933, column: 46, scope: !18981)
!18985 = !DILocation(line: 934, column: 33, scope: !18981)
!18986 = !DILocation(line: 934, column: 36, scope: !18981)
!18987 = !DILocation(line: 934, column: 46, scope: !18981)
!18988 = !DILocation(line: 935, column: 42, scope: !18989)
!18989 = distinct !DILexicalBlock(scope: !18981, file: !1732, line: 935, column: 33)
!18990 = !DILocation(line: 935, column: 46, scope: !18989)
!18991 = !DILocation(line: 935, column: 40, scope: !18989)
!18992 = !DILocation(line: 935, column: 38, scope: !18989)
!18993 = !DILocation(line: 935, column: 57, scope: !18994)
!18994 = distinct !DILexicalBlock(scope: !18989, file: !1732, line: 935, column: 33)
!18995 = !DILocation(line: 935, column: 59, scope: !18994)
!18996 = !DILocation(line: 935, column: 33, scope: !18989)
!18997 = !DILocation(line: 938, column: 45, scope: !18994)
!18998 = !DILocation(line: 938, column: 48, scope: !18994)
!18999 = !DILocation(line: 938, column: 60, scope: !18994)
!19000 = !DILocation(line: 937, column: 41, scope: !18994)
!19001 = !DILocation(line: 937, column: 44, scope: !18994)
!19002 = !DILocation(line: 937, column: 56, scope: !18994)
!19003 = !DILocation(line: 936, column: 42, scope: !18994)
!19004 = !DILocation(line: 936, column: 45, scope: !18994)
!19005 = !DILocation(line: 936, column: 40, scope: !18994)
!19006 = !DILocation(line: 935, column: 33, scope: !18994)
!19007 = distinct !{!19007, !18996, !19008}
!19008 = !DILocation(line: 938, column: 60, scope: !18989)
!19009 = !DILocation(line: 939, column: 25, scope: !18981)
!19010 = !DILocation(line: 940, column: 17, scope: !18974)
!19011 = !DILocation(line: 940, column: 55, scope: !19012)
!19012 = distinct !DILexicalBlock(scope: !18968, file: !1732, line: 940, column: 28)
!19013 = !DILocation(line: 940, column: 45, scope: !19012)
!19014 = !DILocation(line: 940, column: 29, scope: !19012)
!19015 = !DILocation(line: 940, column: 33, scope: !19012)
!19016 = !DILocation(line: 940, column: 43, scope: !19012)
!19017 = !DILocation(line: 940, column: 67, scope: !19012)
!19018 = !DILocation(line: 940, column: 28, scope: !18968)
!19019 = !DILocation(line: 941, column: 29, scope: !19020)
!19020 = distinct !DILexicalBlock(scope: !19021, file: !1732, line: 941, column: 29)
!19021 = distinct !DILexicalBlock(scope: !19012, file: !1732, line: 940, column: 76)
!19022 = !DILocation(line: 941, column: 29, scope: !19021)
!19023 = !DILocation(line: 942, column: 33, scope: !19020)
!19024 = !DILocation(line: 946, column: 29, scope: !19025)
!19025 = distinct !DILexicalBlock(scope: !19021, file: !1732, line: 946, column: 29)
!19026 = !DILocation(line: 946, column: 32, scope: !19025)
!19027 = !DILocation(line: 946, column: 42, scope: !19025)
!19028 = !DILocation(line: 946, column: 45, scope: !19025)
!19029 = !DILocation(line: 946, column: 48, scope: !19025)
!19030 = !DILocation(line: 946, column: 57, scope: !19025)
!19031 = !DILocation(line: 946, column: 29, scope: !19021)
!19032 = !DILocation(line: 947, column: 33, scope: !19025)
!19033 = !DILocation(line: 947, column: 36, scope: !19025)
!19034 = !DILocation(line: 947, column: 45, scope: !19025)
!19035 = !DILocation(line: 948, column: 25, scope: !19021)
!19036 = !DILocation(line: 948, column: 25, scope: !19037)
!19037 = distinct !DILexicalBlock(scope: !19021, file: !1732, line: 948, column: 25)
!19038 = !DILocation(line: 949, column: 33, scope: !19021)
!19039 = !DILocation(line: 949, column: 25, scope: !19021)
!19040 = !DILocation(line: 951, column: 21, scope: !18909)
!19041 = !DILocation(line: 951, column: 25, scope: !18909)
!19042 = !DILocation(line: 951, column: 19, scope: !18909)
!19043 = !DILocation(line: 952, column: 17, scope: !18909)
!19044 = !DILocation(line: 952, column: 21, scope: !18909)
!19045 = !DILocation(line: 952, column: 31, scope: !18909)
!19046 = !DILocation(line: 953, column: 17, scope: !18909)
!19047 = !DILocation(line: 897, column: 28, scope: !18903)
!19048 = !DILabel(scope: !18810, name: "next", file: !1732, line: 957)
!19049 = !DILocation(line: 957, column: 1, scope: !18810)
!19050 = !DILocation(line: 957, column: 15, scope: !18810)
!19051 = !DILocation(line: 957, column: 13, scope: !18810)
!19052 = !DILocation(line: 962, column: 13, scope: !19053)
!19053 = distinct !DILexicalBlock(scope: !18810, file: !1732, line: 962, column: 13)
!19054 = !DILocation(line: 962, column: 16, scope: !19053)
!19055 = !DILocation(line: 962, column: 25, scope: !19053)
!19056 = !DILocation(line: 962, column: 33, scope: !19053)
!19057 = !DILocation(line: 962, column: 36, scope: !19053)
!19058 = !DILocation(line: 962, column: 39, scope: !19053)
!19059 = !DILocation(line: 962, column: 51, scope: !19053)
!19060 = !DILocation(line: 962, column: 13, scope: !18810)
!19061 = !DILocation(line: 964, column: 17, scope: !19062)
!19062 = distinct !DILexicalBlock(scope: !19053, file: !1732, line: 963, column: 11)
!19063 = !DILocation(line: 964, column: 22, scope: !19062)
!19064 = !DILocation(line: 964, column: 15, scope: !19062)
!19065 = !DILocation(line: 965, column: 27, scope: !19062)
!19066 = !DILocation(line: 965, column: 13, scope: !19062)
!19067 = !DILocation(line: 965, column: 17, scope: !19062)
!19068 = !DILocation(line: 965, column: 25, scope: !19062)
!19069 = !DILocation(line: 966, column: 13, scope: !19062)
!19070 = !DILocation(line: 966, column: 17, scope: !19062)
!19071 = !DILocation(line: 966, column: 26, scope: !19062)
!19072 = !DILocation(line: 966, column: 29, scope: !19062)
!19073 = !DILocation(line: 966, column: 42, scope: !19062)
!19074 = !DILocation(line: 968, column: 33, scope: !19075)
!19075 = distinct !DILexicalBlock(scope: !19062, file: !1732, line: 968, column: 17)
!19076 = !DILocation(line: 968, column: 22, scope: !19075)
!19077 = !DILocation(line: 968, column: 20, scope: !19075)
!19078 = !DILocation(line: 968, column: 45, scope: !19075)
!19079 = !DILocation(line: 968, column: 17, scope: !19062)
!19080 = !DILocation(line: 970, column: 21, scope: !19081)
!19081 = distinct !DILexicalBlock(scope: !19082, file: !1732, line: 970, column: 21)
!19082 = distinct !DILexicalBlock(scope: !19075, file: !1732, line: 969, column: 15)
!19083 = !DILocation(line: 970, column: 21, scope: !19082)
!19084 = !DILocation(line: 971, column: 19, scope: !19081)
!19085 = !DILocation(line: 972, column: 17, scope: !19082)
!19086 = !DILocation(line: 975, column: 18, scope: !19062)
!19087 = !DILocation(line: 975, column: 13, scope: !19062)
!19088 = !DILocation(line: 976, column: 13, scope: !19062)
!19089 = !DILocation(line: 979, column: 18, scope: !19090)
!19090 = distinct !DILexicalBlock(scope: !18810, file: !1732, line: 979, column: 13)
!19091 = !DILocation(line: 979, column: 21, scope: !19090)
!19092 = !DILocation(line: 979, column: 16, scope: !19090)
!19093 = !DILocation(line: 979, column: 31, scope: !19090)
!19094 = !DILocation(line: 979, column: 13, scope: !18810)
!19095 = !DILocation(line: 980, column: 31, scope: !19096)
!19096 = distinct !DILexicalBlock(scope: !19090, file: !1732, line: 979, column: 40)
!19097 = !DILocation(line: 980, column: 17, scope: !19096)
!19098 = !DILocation(line: 980, column: 21, scope: !19096)
!19099 = !DILocation(line: 980, column: 29, scope: !19096)
!19100 = !DILocation(line: 981, column: 22, scope: !19096)
!19101 = !DILocation(line: 981, column: 17, scope: !19096)
!19102 = !DILocation(line: 988, column: 21, scope: !19103)
!19103 = distinct !DILexicalBlock(scope: !19096, file: !1732, line: 988, column: 21)
!19104 = !DILocation(line: 988, column: 24, scope: !19103)
!19105 = !DILocation(line: 988, column: 34, scope: !19103)
!19106 = !DILocation(line: 988, column: 21, scope: !19096)
!19107 = !DILocation(line: 989, column: 49, scope: !19108)
!19108 = distinct !DILexicalBlock(scope: !19109, file: !1732, line: 989, column: 29)
!19109 = distinct !DILexicalBlock(scope: !19103, file: !1732, line: 988, column: 52)
!19110 = !DILocation(line: 989, column: 29, scope: !19108)
!19111 = !DILocation(line: 989, column: 29, scope: !19109)
!19112 = !DILocation(line: 990, column: 33, scope: !19113)
!19113 = distinct !DILexicalBlock(scope: !19108, file: !1732, line: 989, column: 54)
!19114 = !DILocation(line: 991, column: 33, scope: !19113)
!19115 = !DILocation(line: 993, column: 34, scope: !19109)
!19116 = !DILocation(line: 993, column: 25, scope: !19109)
!19117 = !DILocation(line: 994, column: 34, scope: !19109)
!19118 = !DILocation(line: 994, column: 38, scope: !19109)
!19119 = !DILocation(line: 994, column: 25, scope: !19109)
!19120 = !DILocation(line: 995, column: 35, scope: !19109)
!19121 = !DILocation(line: 995, column: 25, scope: !19109)
!19122 = !DILocation(line: 996, column: 25, scope: !19109)
!19123 = !DILocation(line: 1004, column: 21, scope: !19124)
!19124 = distinct !DILexicalBlock(scope: !19096, file: !1732, line: 1004, column: 21)
!19125 = !DILocation(line: 1004, column: 24, scope: !19124)
!19126 = !DILocation(line: 1004, column: 34, scope: !19124)
!19127 = !DILocation(line: 1004, column: 21, scope: !19096)
!19128 = !DILocation(line: 1005, column: 25, scope: !19124)
!19129 = !DILocation(line: 1006, column: 21, scope: !19130)
!19130 = distinct !DILexicalBlock(scope: !19096, file: !1732, line: 1006, column: 21)
!19131 = !DILocation(line: 1006, column: 24, scope: !19130)
!19132 = !DILocation(line: 1006, column: 34, scope: !19130)
!19133 = !DILocation(line: 1006, column: 21, scope: !19096)
!19134 = !DILocation(line: 1007, column: 48, scope: !19135)
!19135 = distinct !DILexicalBlock(scope: !19130, file: !1732, line: 1006, column: 49)
!19136 = !DILocation(line: 1007, column: 52, scope: !19135)
!19137 = !DILocation(line: 1007, column: 39, scope: !19135)
!19138 = !DILocation(line: 1007, column: 25, scope: !19135)
!19139 = !DILocation(line: 1007, column: 28, scope: !19135)
!19140 = !DILocation(line: 1007, column: 37, scope: !19135)
!19141 = !DILocation(line: 1008, column: 29, scope: !19142)
!19142 = distinct !DILexicalBlock(scope: !19135, file: !1732, line: 1008, column: 29)
!19143 = !DILocation(line: 1008, column: 32, scope: !19142)
!19144 = !DILocation(line: 1008, column: 41, scope: !19142)
!19145 = !DILocation(line: 1008, column: 50, scope: !19142)
!19146 = !DILocation(line: 1008, column: 54, scope: !19142)
!19147 = !DILocation(line: 1008, column: 29, scope: !19135)
!19148 = !DILocation(line: 1009, column: 62, scope: !19149)
!19149 = distinct !DILexicalBlock(scope: !19150, file: !1732, line: 1009, column: 37)
!19150 = distinct !DILexicalBlock(scope: !19142, file: !1732, line: 1008, column: 74)
!19151 = !DILocation(line: 1009, column: 53, scope: !19149)
!19152 = !DILocation(line: 1009, column: 38, scope: !19149)
!19153 = !DILocation(line: 1009, column: 41, scope: !19149)
!19154 = !DILocation(line: 1009, column: 51, scope: !19149)
!19155 = !DILocation(line: 1009, column: 72, scope: !19149)
!19156 = !DILocation(line: 1009, column: 37, scope: !19150)
!19157 = !DILocation(line: 1010, column: 56, scope: !19158)
!19158 = distinct !DILexicalBlock(scope: !19149, file: !1732, line: 1009, column: 77)
!19159 = !DILocation(line: 1010, column: 41, scope: !19158)
!19160 = !DILocation(line: 1010, column: 44, scope: !19158)
!19161 = !DILocation(line: 1010, column: 54, scope: !19158)
!19162 = !DILocation(line: 1011, column: 41, scope: !19158)
!19163 = !DILocation(line: 1011, column: 44, scope: !19158)
!19164 = !DILocation(line: 1011, column: 53, scope: !19158)
!19165 = !DILocation(line: 1012, column: 33, scope: !19158)
!19166 = !DILocation(line: 1013, column: 41, scope: !19149)
!19167 = !DILocation(line: 1013, column: 44, scope: !19149)
!19168 = !DILocation(line: 1013, column: 54, scope: !19149)
!19169 = !DILocation(line: 1014, column: 25, scope: !19150)
!19170 = !DILocation(line: 1015, column: 25, scope: !19135)
!19171 = !DILocation(line: 1015, column: 28, scope: !19135)
!19172 = !DILocation(line: 1015, column: 38, scope: !19135)
!19173 = !DILocation(line: 1016, column: 17, scope: !19135)
!19174 = !DILocation(line: 1006, column: 37, scope: !19130)
!19175 = !DILabel(scope: !19096, name: "name", file: !1732, line: 1018)
!19176 = !DILocation(line: 1018, column: 1, scope: !19096)
!19177 = !DILocation(line: 1018, column: 21, scope: !19096)
!19178 = !DILocation(line: 1018, column: 25, scope: !19096)
!19179 = !DILocation(line: 1018, column: 36, scope: !19096)
!19180 = !DILocation(line: 1018, column: 34, scope: !19096)
!19181 = !DILocation(line: 1018, column: 19, scope: !19096)
!19182 = !DILocation(line: 1019, column: 19, scope: !19096)
!19183 = !DILocation(line: 1019, column: 22, scope: !19096)
!19184 = !DILocation(line: 1020, column: 25, scope: !19096)
!19185 = !DILocation(line: 1020, column: 28, scope: !19096)
!19186 = !DILocation(line: 1020, column: 31, scope: !19096)
!19187 = !DILocation(line: 1020, column: 17, scope: !19096)
!19188 = !DILocation(line: 1020, column: 41, scope: !19096)
!19189 = !DILocation(line: 1020, column: 44, scope: !19096)
!19190 = !DILocation(line: 1020, column: 56, scope: !19096)
!19191 = !DILabel(scope: !19096, name: "check_for_dir", file: !1732, line: 1021)
!19192 = !DILocation(line: 1021, column: 1, scope: !19096)
!19193 = !DILocation(line: 1022, column: 31, scope: !19096)
!19194 = !DILocation(line: 1022, column: 17, scope: !19096)
!19195 = !DILocation(line: 1022, column: 21, scope: !19096)
!19196 = !DILocation(line: 1022, column: 29, scope: !19096)
!19197 = !DILocation(line: 1023, column: 21, scope: !19198)
!19198 = distinct !DILexicalBlock(scope: !19096, file: !1732, line: 1023, column: 21)
!19199 = !DILocation(line: 1023, column: 24, scope: !19198)
!19200 = !DILocation(line: 1023, column: 33, scope: !19198)
!19201 = !DILocation(line: 1023, column: 21, scope: !19096)
!19202 = !DILocation(line: 1025, column: 25, scope: !19203)
!19203 = distinct !DILexicalBlock(scope: !19204, file: !1732, line: 1025, column: 25)
!19204 = distinct !DILexicalBlock(scope: !19198, file: !1732, line: 1024, column: 19)
!19205 = !DILocation(line: 1025, column: 28, scope: !19203)
!19206 = !DILocation(line: 1025, column: 39, scope: !19203)
!19207 = !DILocation(line: 1025, column: 47, scope: !19203)
!19208 = !DILocation(line: 1025, column: 25, scope: !19204)
!19209 = !DILocalVariable(name: "parent", scope: !19210, file: !1732, line: 1027, type: !1835)
!19210 = distinct !DILexicalBlock(scope: !19203, file: !1732, line: 1026, column: 23)
!19211 = !DILocation(line: 1027, column: 33, scope: !19210)
!19212 = !DILocation(line: 1027, column: 42, scope: !19210)
!19213 = !DILocation(line: 1027, column: 45, scope: !19210)
!19214 = !DILocation(line: 1028, column: 29, scope: !19215)
!19215 = distinct !DILexicalBlock(scope: !19210, file: !1732, line: 1028, column: 29)
!19216 = !DILocation(line: 1028, column: 37, scope: !19215)
!19217 = !DILocation(line: 1028, column: 58, scope: !19215)
!19218 = !DILocation(line: 1029, column: 29, scope: !19215)
!19219 = !DILocation(line: 1029, column: 32, scope: !19215)
!19220 = !DILocation(line: 1030, column: 29, scope: !19215)
!19221 = !DILocation(line: 1030, column: 32, scope: !19215)
!19222 = !DILocation(line: 1031, column: 29, scope: !19215)
!19223 = !DILocation(line: 1031, column: 52, scope: !19215)
!19224 = !DILocation(line: 1031, column: 60, scope: !19215)
!19225 = !DILocation(line: 1031, column: 64, scope: !19215)
!19226 = !DILocation(line: 1031, column: 33, scope: !19215)
!19227 = !DILocation(line: 1032, column: 33, scope: !19215)
!19228 = !DILocation(line: 1028, column: 29, scope: !19210)
!19229 = !DILocation(line: 1035, column: 27, scope: !19230)
!19230 = distinct !DILexicalBlock(scope: !19215, file: !1732, line: 1033, column: 27)
!19231 = !DILocation(line: 1038, column: 52, scope: !19232)
!19232 = distinct !DILexicalBlock(scope: !19215, file: !1732, line: 1037, column: 27)
!19233 = !DILocation(line: 1038, column: 56, scope: !19232)
!19234 = !DILocation(line: 1038, column: 43, scope: !19232)
!19235 = !DILocation(line: 1038, column: 29, scope: !19232)
!19236 = !DILocation(line: 1038, column: 32, scope: !19232)
!19237 = !DILocation(line: 1038, column: 41, scope: !19232)
!19238 = !DILocation(line: 1039, column: 33, scope: !19239)
!19239 = distinct !DILexicalBlock(scope: !19232, file: !1732, line: 1039, column: 33)
!19240 = !DILocation(line: 1040, column: 33, scope: !19239)
!19241 = !DILocation(line: 1040, column: 36, scope: !19239)
!19242 = !DILocation(line: 1040, column: 39, scope: !19239)
!19243 = !DILocation(line: 1040, column: 49, scope: !19239)
!19244 = !DILocation(line: 1041, column: 33, scope: !19239)
!19245 = !DILocation(line: 1041, column: 40, scope: !19239)
!19246 = !DILocation(line: 1041, column: 48, scope: !19239)
!19247 = !DILocation(line: 1041, column: 38, scope: !19239)
!19248 = !DILocation(line: 1042, column: 33, scope: !19239)
!19249 = !DILocation(line: 1042, column: 36, scope: !19239)
!19250 = !DILocation(line: 1042, column: 44, scope: !19239)
!19251 = !DILocation(line: 1042, column: 65, scope: !19239)
!19252 = !DILocation(line: 1039, column: 33, scope: !19232)
!19253 = !DILocation(line: 1043, column: 35, scope: !19239)
!19254 = !DILocation(line: 1043, column: 43, scope: !19239)
!19255 = !DILocation(line: 1043, column: 63, scope: !19239)
!19256 = !DILocation(line: 1045, column: 23, scope: !19210)
!19257 = !DILocation(line: 1047, column: 23, scope: !19203)
!19258 = !DILocation(line: 1047, column: 23, scope: !19259)
!19259 = distinct !DILexicalBlock(scope: !19260, file: !1732, line: 1047, column: 23)
!19260 = distinct !DILexicalBlock(scope: !19203, file: !1732, line: 1047, column: 23)
!19261 = !DILocation(line: 1047, column: 23, scope: !19260)
!19262 = !DILocation(line: 1048, column: 19, scope: !19204)
!19263 = !DILocation(line: 1050, column: 21, scope: !19264)
!19264 = distinct !DILexicalBlock(scope: !19096, file: !1732, line: 1050, column: 21)
!19265 = !DILocation(line: 1050, column: 24, scope: !19264)
!19266 = !DILocation(line: 1050, column: 33, scope: !19264)
!19267 = !DILocation(line: 1050, column: 21, scope: !19096)
!19268 = !DILocation(line: 1055, column: 25, scope: !19269)
!19269 = distinct !DILexicalBlock(scope: !19270, file: !1732, line: 1055, column: 25)
!19270 = distinct !DILexicalBlock(scope: !19264, file: !1732, line: 1051, column: 19)
!19271 = !DILocation(line: 1055, column: 28, scope: !19269)
!19272 = !DILocation(line: 1055, column: 38, scope: !19269)
!19273 = !DILocation(line: 1055, column: 25, scope: !19270)
!19274 = !DILocation(line: 1056, column: 37, scope: !19269)
!19275 = !DILocation(line: 1056, column: 40, scope: !19269)
!19276 = !DILocation(line: 1056, column: 51, scope: !19269)
!19277 = !DILocation(line: 1056, column: 23, scope: !19269)
!19278 = !DILocation(line: 1056, column: 27, scope: !19269)
!19279 = !DILocation(line: 1056, column: 35, scope: !19269)
!19280 = !DILocation(line: 1058, column: 38, scope: !19281)
!19281 = distinct !DILexicalBlock(scope: !19270, file: !1732, line: 1058, column: 25)
!19282 = !DILocation(line: 1058, column: 42, scope: !19281)
!19283 = !DILocation(line: 1058, column: 27, scope: !19281)
!19284 = !DILocation(line: 1058, column: 25, scope: !19270)
!19285 = !DILocation(line: 1060, column: 25, scope: !19286)
!19286 = distinct !DILexicalBlock(scope: !19281, file: !1732, line: 1059, column: 23)
!19287 = !DILocation(line: 1061, column: 25, scope: !19286)
!19288 = !DILocation(line: 1063, column: 19, scope: !19270)
!19289 = !DILocation(line: 1064, column: 24, scope: !19096)
!19290 = !DILocation(line: 1064, column: 17, scope: !19096)
!19291 = !DILocation(line: 979, column: 34, scope: !19090)
!19292 = !DILabel(scope: !18810, name: "cd_dot_dot", file: !1732, line: 1066)
!19293 = !DILocation(line: 1066, column: 1, scope: !18810)
!19294 = !DILocation(line: 1069, column: 13, scope: !18810)
!19295 = !DILocation(line: 1069, column: 18, scope: !18810)
!19296 = !DILocation(line: 1069, column: 11, scope: !18810)
!19297 = !DILocation(line: 1070, column: 23, scope: !18810)
!19298 = !DILocation(line: 1070, column: 9, scope: !18810)
!19299 = !DILocation(line: 1070, column: 13, scope: !18810)
!19300 = !DILocation(line: 1070, column: 21, scope: !18810)
!19301 = !DILocation(line: 1071, column: 14, scope: !18810)
!19302 = !DILocation(line: 1071, column: 9, scope: !18810)
!19303 = !DILocation(line: 1073, column: 13, scope: !19304)
!19304 = distinct !DILexicalBlock(scope: !18810, file: !1732, line: 1073, column: 13)
!19305 = !DILocation(line: 1073, column: 16, scope: !19304)
!19306 = !DILocation(line: 1073, column: 26, scope: !19304)
!19307 = !DILocation(line: 1073, column: 13, scope: !18810)
!19308 = !DILocation(line: 1078, column: 22, scope: !19309)
!19309 = distinct !DILexicalBlock(scope: !19304, file: !1732, line: 1073, column: 50)
!19310 = !DILocation(line: 1078, column: 17, scope: !19309)
!19311 = !DILocation(line: 1079, column: 17, scope: !19309)
!19312 = !DILocation(line: 1080, column: 25, scope: !19309)
!19313 = !DILocation(line: 1080, column: 29, scope: !19309)
!19314 = !DILocation(line: 1080, column: 37, scope: !19309)
!19315 = !DILocation(line: 1080, column: 17, scope: !19309)
!19316 = !DILocation(line: 1083, column: 9, scope: !18810)
!19317 = !DILocation(line: 1083, column: 9, scope: !19318)
!19318 = distinct !DILexicalBlock(scope: !19319, file: !1732, line: 1083, column: 9)
!19319 = distinct !DILexicalBlock(scope: !18810, file: !1732, line: 1083, column: 9)
!19320 = !DILocation(line: 1083, column: 9, scope: !19319)
!19321 = !DILocation(line: 1086, column: 9, scope: !18810)
!19322 = !DILocation(line: 1086, column: 13, scope: !18810)
!19323 = !DILocation(line: 1086, column: 22, scope: !18810)
!19324 = !DILocation(line: 1086, column: 25, scope: !18810)
!19325 = !DILocation(line: 1086, column: 38, scope: !18810)
!19326 = !DILocation(line: 1094, column: 13, scope: !19327)
!19327 = distinct !DILexicalBlock(scope: !18810, file: !1732, line: 1094, column: 13)
!19328 = !DILocation(line: 1094, column: 16, scope: !19327)
!19329 = !DILocation(line: 1094, column: 26, scope: !19327)
!19330 = !DILocation(line: 1094, column: 13, scope: !18810)
!19331 = !DILocation(line: 1095, column: 41, scope: !19332)
!19332 = distinct !DILexicalBlock(scope: !19333, file: !1732, line: 1095, column: 21)
!19333 = distinct !DILexicalBlock(scope: !19327, file: !1732, line: 1094, column: 44)
!19334 = !DILocation(line: 1095, column: 21, scope: !19332)
!19335 = !DILocation(line: 1095, column: 21, scope: !19333)
!19336 = !DILocation(line: 1096, column: 40, scope: !19337)
!19337 = distinct !DILexicalBlock(scope: !19332, file: !1732, line: 1095, column: 46)
!19338 = !DILocation(line: 1096, column: 25, scope: !19337)
!19339 = !DILocation(line: 1096, column: 28, scope: !19337)
!19340 = !DILocation(line: 1096, column: 38, scope: !19337)
!19341 = !DILocation(line: 1097, column: 25, scope: !19337)
!19342 = !DILocation(line: 1098, column: 17, scope: !19337)
!19343 = !DILocation(line: 1099, column: 9, scope: !19333)
!19344 = !DILocation(line: 1099, column: 20, scope: !19345)
!19345 = distinct !DILexicalBlock(scope: !19327, file: !1732, line: 1099, column: 20)
!19346 = !DILocation(line: 1099, column: 23, scope: !19345)
!19347 = !DILocation(line: 1099, column: 33, scope: !19345)
!19348 = !DILocation(line: 1099, column: 20, scope: !19327)
!19349 = !DILocation(line: 1100, column: 21, scope: !19350)
!19350 = distinct !DILexicalBlock(scope: !19351, file: !1732, line: 1100, column: 21)
!19351 = distinct !DILexicalBlock(scope: !19345, file: !1732, line: 1099, column: 50)
!19352 = !DILocation(line: 1100, column: 21, scope: !19351)
!19353 = !DILocation(line: 1101, column: 40, scope: !19354)
!19354 = distinct !DILexicalBlock(scope: !19350, file: !1732, line: 1100, column: 47)
!19355 = !DILocation(line: 1101, column: 25, scope: !19354)
!19356 = !DILocation(line: 1101, column: 28, scope: !19354)
!19357 = !DILocation(line: 1101, column: 38, scope: !19354)
!19358 = !DILocation(line: 1102, column: 25, scope: !19354)
!19359 = !DILocation(line: 1103, column: 17, scope: !19354)
!19360 = !DILocation(line: 1104, column: 29, scope: !19351)
!19361 = !DILocation(line: 1104, column: 32, scope: !19351)
!19362 = !DILocation(line: 1104, column: 23, scope: !19351)
!19363 = !DILocation(line: 1105, column: 9, scope: !19351)
!19364 = !DILocation(line: 1105, column: 22, scope: !19365)
!19365 = distinct !DILexicalBlock(scope: !19345, file: !1732, line: 1105, column: 20)
!19366 = !DILocation(line: 1105, column: 25, scope: !19365)
!19367 = !DILocation(line: 1105, column: 35, scope: !19365)
!19368 = !DILocation(line: 1105, column: 52, scope: !19365)
!19369 = !DILocation(line: 1106, column: 39, scope: !19365)
!19370 = !DILocation(line: 1106, column: 43, scope: !19365)
!19371 = !DILocation(line: 1106, column: 46, scope: !19365)
!19372 = !DILocation(line: 1106, column: 20, scope: !19365)
!19373 = !DILocation(line: 1105, column: 20, scope: !19345)
!19374 = !DILocation(line: 1107, column: 32, scope: !19375)
!19375 = distinct !DILexicalBlock(scope: !19365, file: !1732, line: 1106, column: 69)
!19376 = !DILocation(line: 1107, column: 17, scope: !19375)
!19377 = !DILocation(line: 1107, column: 20, scope: !19375)
!19378 = !DILocation(line: 1107, column: 30, scope: !19375)
!19379 = !DILocation(line: 1108, column: 17, scope: !19375)
!19380 = !DILocation(line: 1109, column: 9, scope: !19375)
!19381 = !DILocation(line: 1114, column: 13, scope: !19382)
!19382 = distinct !DILexicalBlock(scope: !18810, file: !1732, line: 1114, column: 13)
!19383 = !DILocation(line: 1114, column: 16, scope: !19382)
!19384 = !DILocation(line: 1114, column: 25, scope: !19382)
!19385 = !DILocation(line: 1114, column: 13, scope: !18810)
!19386 = !DILocation(line: 1115, column: 31, scope: !19387)
!19387 = distinct !DILexicalBlock(scope: !19382, file: !1732, line: 1114, column: 36)
!19388 = !DILocation(line: 1115, column: 34, scope: !19387)
!19389 = !DILocation(line: 1115, column: 17, scope: !19387)
!19390 = !DILocation(line: 1115, column: 20, scope: !19387)
!19391 = !DILocation(line: 1115, column: 29, scope: !19387)
!19392 = !DILocation(line: 1116, column: 21, scope: !19393)
!19393 = distinct !DILexicalBlock(scope: !19387, file: !1732, line: 1116, column: 21)
!19394 = !DILocation(line: 1116, column: 24, scope: !19393)
!19395 = !DILocation(line: 1116, column: 34, scope: !19393)
!19396 = !DILocation(line: 1116, column: 21, scope: !19387)
!19397 = !DILocation(line: 1117, column: 25, scope: !19393)
!19398 = !DILocation(line: 1117, column: 25, scope: !19399)
!19399 = distinct !DILexicalBlock(scope: !19393, file: !1732, line: 1117, column: 25)
!19400 = !DILocation(line: 1118, column: 9, scope: !19387)
!19401 = !DILocation(line: 1119, column: 16, scope: !18810)
!19402 = !DILocation(line: 1119, column: 41, scope: !18810)
!19403 = !DILocation(line: 1119, column: 9, scope: !18810)
!19404 = !DILocation(line: 1120, column: 1, scope: !18810)
!19405 = distinct !DISubprogram(name: "leave_dir", scope: !1839, file: !1839, line: 125, type: !19406, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!19406 = !DISubroutineType(types: !19407)
!19407 = !{null, !1757, !1835}
!19408 = !DILocalVariable(name: "fts", arg: 1, scope: !19405, file: !1839, line: 125, type: !1757)
!19409 = !DILocation(line: 125, column: 17, scope: !19405)
!19410 = !DILocalVariable(name: "ent", arg: 2, scope: !19405, file: !1839, line: 125, type: !1835)
!19411 = !DILocation(line: 125, column: 30, scope: !19405)
!19412 = !DILocalVariable(name: "st", scope: !19405, file: !1839, line: 127, type: !1845)
!19413 = !DILocation(line: 127, column: 22, scope: !19405)
!19414 = !DILocation(line: 127, column: 27, scope: !19405)
!19415 = !DILocation(line: 127, column: 32, scope: !19405)
!19416 = !DILocation(line: 128, column: 7, scope: !19417)
!19417 = distinct !DILexicalBlock(scope: !19405, file: !1839, line: 128, column: 7)
!19418 = !DILocation(line: 128, column: 12, scope: !19417)
!19419 = !DILocation(line: 128, column: 24, scope: !19417)
!19420 = !DILocation(line: 128, column: 7, scope: !19405)
!19421 = !DILocalVariable(name: "obj", scope: !19422, file: !1839, line: 130, type: !1838)
!19422 = distinct !DILexicalBlock(scope: !19417, file: !1839, line: 129, column: 5)
!19423 = !DILocation(line: 130, column: 25, scope: !19422)
!19424 = !DILocalVariable(name: "found", scope: !19422, file: !1839, line: 131, type: !47)
!19425 = !DILocation(line: 131, column: 13, scope: !19422)
!19426 = !DILocation(line: 132, column: 17, scope: !19422)
!19427 = !DILocation(line: 132, column: 21, scope: !19422)
!19428 = !DILocation(line: 132, column: 11, scope: !19422)
!19429 = !DILocation(line: 132, column: 15, scope: !19422)
!19430 = !DILocation(line: 133, column: 17, scope: !19422)
!19431 = !DILocation(line: 133, column: 21, scope: !19422)
!19432 = !DILocation(line: 133, column: 11, scope: !19422)
!19433 = !DILocation(line: 133, column: 15, scope: !19422)
!19434 = !DILocation(line: 134, column: 28, scope: !19422)
!19435 = !DILocation(line: 134, column: 33, scope: !19422)
!19436 = !DILocation(line: 134, column: 43, scope: !19422)
!19437 = !DILocation(line: 134, column: 47, scope: !19422)
!19438 = !DILocation(line: 134, column: 15, scope: !19422)
!19439 = !DILocation(line: 134, column: 13, scope: !19422)
!19440 = !DILocation(line: 135, column: 12, scope: !19441)
!19441 = distinct !DILexicalBlock(scope: !19422, file: !1839, line: 135, column: 11)
!19442 = !DILocation(line: 135, column: 11, scope: !19422)
!19443 = !DILocation(line: 136, column: 9, scope: !19441)
!19444 = !DILocation(line: 137, column: 13, scope: !19422)
!19445 = !DILocation(line: 137, column: 7, scope: !19422)
!19446 = !DILocation(line: 138, column: 5, scope: !19422)
!19447 = !DILocalVariable(name: "parent", scope: !19448, file: !1839, line: 141, type: !1835)
!19448 = distinct !DILexicalBlock(scope: !19417, file: !1839, line: 140, column: 5)
!19449 = !DILocation(line: 141, column: 15, scope: !19448)
!19450 = !DILocation(line: 141, column: 24, scope: !19448)
!19451 = !DILocation(line: 141, column: 29, scope: !19448)
!19452 = !DILocation(line: 142, column: 11, scope: !19453)
!19453 = distinct !DILexicalBlock(scope: !19448, file: !1839, line: 142, column: 11)
!19454 = !DILocation(line: 142, column: 18, scope: !19453)
!19455 = !DILocation(line: 142, column: 26, scope: !19453)
!19456 = !DILocation(line: 142, column: 34, scope: !19453)
!19457 = !DILocation(line: 142, column: 42, scope: !19453)
!19458 = !DILocation(line: 142, column: 31, scope: !19453)
!19459 = !DILocation(line: 142, column: 11, scope: !19448)
!19460 = !DILocation(line: 143, column: 9, scope: !19453)
!19461 = !DILocation(line: 143, column: 9, scope: !19462)
!19462 = distinct !DILexicalBlock(scope: !19463, file: !1839, line: 143, column: 9)
!19463 = distinct !DILexicalBlock(scope: !19453, file: !1839, line: 143, column: 9)
!19464 = !DILocation(line: 143, column: 9, scope: !19463)
!19465 = !DILocation(line: 143, column: 9, scope: !19466)
!19466 = distinct !DILexicalBlock(scope: !19463, file: !1839, line: 143, column: 9)
!19467 = !DILocation(line: 143, column: 9, scope: !19468)
!19468 = distinct !DILexicalBlock(scope: !19466, file: !1839, line: 143, column: 9)
!19469 = !DILocation(line: 146, column: 1, scope: !19405)
!19470 = distinct !DISubprogram(name: "fts_safe_changedir", scope: !1732, file: !1732, line: 2043, type: !19471, scopeLine: 2044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!19471 = !DISubroutineType(types: !19472)
!19472 = !{!5, !1757, !1835, !5, !113}
!19473 = !DILocalVariable(name: "sp", arg: 1, scope: !19470, file: !1732, line: 2043, type: !1757)
!19474 = !DILocation(line: 2043, column: 26, scope: !19470)
!19475 = !DILocalVariable(name: "p", arg: 2, scope: !19470, file: !1732, line: 2043, type: !1835)
!19476 = !DILocation(line: 2043, column: 38, scope: !19470)
!19477 = !DILocalVariable(name: "fd", arg: 3, scope: !19470, file: !1732, line: 2043, type: !5)
!19478 = !DILocation(line: 2043, column: 45, scope: !19470)
!19479 = !DILocalVariable(name: "dir", arg: 4, scope: !19470, file: !1732, line: 2043, type: !113)
!19480 = !DILocation(line: 2043, column: 61, scope: !19470)
!19481 = !DILocalVariable(name: "ret", scope: !19470, file: !1732, line: 2045, type: !5)
!19482 = !DILocation(line: 2045, column: 13, scope: !19470)
!19483 = !DILocalVariable(name: "is_dotdot", scope: !19470, file: !1732, line: 2046, type: !139)
!19484 = !DILocation(line: 2046, column: 14, scope: !19470)
!19485 = !DILocation(line: 2046, column: 26, scope: !19470)
!19486 = !DILocation(line: 2046, column: 30, scope: !19470)
!19487 = !DILocation(line: 2046, column: 33, scope: !19470)
!19488 = !DILocation(line: 0, scope: !19470)
!19489 = !DILocalVariable(name: "newfd", scope: !19470, file: !1732, line: 2047, type: !5)
!19490 = !DILocation(line: 2047, column: 13, scope: !19470)
!19491 = !DILocation(line: 2053, column: 13, scope: !19492)
!19492 = distinct !DILexicalBlock(scope: !19470, file: !1732, line: 2053, column: 13)
!19493 = !DILocation(line: 2053, column: 13, scope: !19470)
!19494 = !DILocation(line: 2055, column: 17, scope: !19495)
!19495 = distinct !DILexicalBlock(scope: !19496, file: !1732, line: 2055, column: 17)
!19496 = distinct !DILexicalBlock(scope: !19492, file: !1732, line: 2054, column: 11)
!19497 = !DILocation(line: 2055, column: 35, scope: !19495)
!19498 = !DILocation(line: 2055, column: 43, scope: !19495)
!19499 = !DILocation(line: 2055, column: 40, scope: !19495)
!19500 = !DILocation(line: 2055, column: 17, scope: !19496)
!19501 = !DILocation(line: 2056, column: 22, scope: !19495)
!19502 = !DILocation(line: 2056, column: 15, scope: !19495)
!19503 = !DILocation(line: 2057, column: 13, scope: !19496)
!19504 = !DILocation(line: 2060, column: 13, scope: !19505)
!19505 = distinct !DILexicalBlock(scope: !19470, file: !1732, line: 2060, column: 13)
!19506 = !DILocation(line: 2060, column: 16, scope: !19505)
!19507 = !DILocation(line: 2060, column: 20, scope: !19505)
!19508 = !DILocation(line: 2060, column: 23, scope: !19505)
!19509 = !DILocation(line: 2060, column: 33, scope: !19505)
!19510 = !DILocation(line: 2060, column: 36, scope: !19505)
!19511 = !DILocation(line: 2060, column: 13, scope: !19470)
!19512 = !DILocation(line: 2067, column: 35, scope: !19513)
!19513 = distinct !DILexicalBlock(scope: !19514, file: !1732, line: 2067, column: 18)
!19514 = distinct !DILexicalBlock(scope: !19505, file: !1732, line: 2061, column: 11)
!19515 = !DILocation(line: 2067, column: 39, scope: !19513)
!19516 = !DILocation(line: 2067, column: 20, scope: !19513)
!19517 = !DILocation(line: 2067, column: 18, scope: !19514)
!19518 = !DILocalVariable(name: "parent_fd", scope: !19519, file: !1732, line: 2069, type: !5)
!19519 = distinct !DILexicalBlock(scope: !19513, file: !1732, line: 2068, column: 15)
!19520 = !DILocation(line: 2069, column: 21, scope: !19519)
!19521 = !DILocation(line: 2071, column: 42, scope: !19519)
!19522 = !DILocation(line: 2071, column: 46, scope: !19519)
!19523 = !DILocation(line: 2071, column: 29, scope: !19519)
!19524 = !DILocation(line: 2071, column: 27, scope: !19519)
!19525 = !DILocation(line: 2072, column: 26, scope: !19526)
!19526 = distinct !DILexicalBlock(scope: !19519, file: !1732, line: 2072, column: 21)
!19527 = !DILocation(line: 2072, column: 23, scope: !19526)
!19528 = !DILocation(line: 2072, column: 21, scope: !19519)
!19529 = !DILocation(line: 2074, column: 26, scope: !19530)
!19530 = distinct !DILexicalBlock(scope: !19526, file: !1732, line: 2073, column: 19)
!19531 = !DILocation(line: 2074, column: 24, scope: !19530)
!19532 = !DILocation(line: 2075, column: 25, scope: !19530)
!19533 = !DILocation(line: 2076, column: 19, scope: !19530)
!19534 = !DILocation(line: 2077, column: 15, scope: !19519)
!19535 = !DILocation(line: 2078, column: 11, scope: !19514)
!19536 = !DILocation(line: 2080, column: 17, scope: !19470)
!19537 = !DILocation(line: 2080, column: 15, scope: !19470)
!19538 = !DILocation(line: 2081, column: 13, scope: !19539)
!19539 = distinct !DILexicalBlock(scope: !19470, file: !1732, line: 2081, column: 13)
!19540 = !DILocation(line: 2081, column: 16, scope: !19539)
!19541 = !DILocation(line: 2081, column: 20, scope: !19539)
!19542 = !DILocation(line: 2081, column: 41, scope: !19539)
!19543 = !DILocation(line: 2081, column: 45, scope: !19539)
!19544 = !DILocation(line: 2081, column: 32, scope: !19539)
!19545 = !DILocation(line: 2081, column: 30, scope: !19539)
!19546 = !DILocation(line: 2081, column: 51, scope: !19539)
!19547 = !DILocation(line: 2081, column: 13, scope: !19470)
!19548 = !DILocation(line: 2082, column: 11, scope: !19539)
!19549 = !DILocation(line: 2091, column: 13, scope: !19550)
!19550 = distinct !DILexicalBlock(scope: !19470, file: !1732, line: 2091, column: 13)
!19551 = !DILocation(line: 2092, column: 13, scope: !19550)
!19552 = !DILocation(line: 2092, column: 17, scope: !19550)
!19553 = !DILocation(line: 2092, column: 21, scope: !19550)
!19554 = !DILocation(line: 2092, column: 24, scope: !19550)
!19555 = !DILocation(line: 2091, column: 13, scope: !19470)
!19556 = !DILocalVariable(name: "sb", scope: !19557, file: !1732, line: 2094, type: !1813)
!19557 = distinct !DILexicalBlock(scope: !19550, file: !1732, line: 2093, column: 11)
!19558 = !DILocation(line: 2094, column: 25, scope: !19557)
!19559 = !DILocation(line: 2095, column: 23, scope: !19560)
!19560 = distinct !DILexicalBlock(scope: !19557, file: !1732, line: 2095, column: 17)
!19561 = !DILocation(line: 2095, column: 17, scope: !19560)
!19562 = !DILocation(line: 2095, column: 17, scope: !19557)
!19563 = !DILocation(line: 2097, column: 21, scope: !19564)
!19564 = distinct !DILexicalBlock(scope: !19560, file: !1732, line: 2096, column: 15)
!19565 = !DILocation(line: 2098, column: 17, scope: !19564)
!19566 = !DILocation(line: 2100, column: 17, scope: !19567)
!19567 = distinct !DILexicalBlock(scope: !19557, file: !1732, line: 2100, column: 17)
!19568 = !DILocation(line: 2100, column: 20, scope: !19567)
!19569 = !DILocation(line: 2100, column: 31, scope: !19567)
!19570 = !DILocation(line: 2100, column: 44, scope: !19567)
!19571 = !DILocation(line: 2100, column: 38, scope: !19567)
!19572 = !DILocation(line: 2101, column: 17, scope: !19567)
!19573 = !DILocation(line: 2101, column: 20, scope: !19567)
!19574 = !DILocation(line: 2101, column: 23, scope: !19567)
!19575 = !DILocation(line: 2101, column: 34, scope: !19567)
!19576 = !DILocation(line: 2101, column: 47, scope: !19567)
!19577 = !DILocation(line: 2101, column: 41, scope: !19567)
!19578 = !DILocation(line: 2100, column: 17, scope: !19557)
!19579 = !DILocation(line: 2103, column: 17, scope: !19580)
!19580 = distinct !DILexicalBlock(scope: !19567, file: !1732, line: 2102, column: 15)
!19581 = !DILocation(line: 2104, column: 21, scope: !19580)
!19582 = !DILocation(line: 2105, column: 17, scope: !19580)
!19583 = !DILocation(line: 2107, column: 11, scope: !19557)
!19584 = !DILocation(line: 2109, column: 13, scope: !19585)
!19585 = distinct !DILexicalBlock(scope: !19470, file: !1732, line: 2109, column: 13)
!19586 = !DILocation(line: 2109, column: 13, scope: !19470)
!19587 = !DILocation(line: 2111, column: 29, scope: !19588)
!19588 = distinct !DILexicalBlock(scope: !19585, file: !1732, line: 2110, column: 11)
!19589 = !DILocation(line: 2111, column: 33, scope: !19588)
!19590 = !DILocation(line: 2111, column: 42, scope: !19588)
!19591 = !DILocation(line: 2111, column: 40, scope: !19588)
!19592 = !DILocation(line: 2111, column: 13, scope: !19588)
!19593 = !DILocation(line: 2112, column: 13, scope: !19588)
!19594 = !DILocation(line: 2115, column: 22, scope: !19470)
!19595 = !DILocation(line: 2115, column: 15, scope: !19470)
!19596 = !DILocation(line: 2115, column: 13, scope: !19470)
!19597 = !DILocation(line: 2115, column: 9, scope: !19470)
!19598 = !DILabel(scope: !19470, name: "bail", file: !1732, line: 2116)
!19599 = !DILocation(line: 2116, column: 1, scope: !19470)
!19600 = !DILocation(line: 2117, column: 13, scope: !19601)
!19601 = distinct !DILexicalBlock(scope: !19470, file: !1732, line: 2117, column: 13)
!19602 = !DILocation(line: 2117, column: 16, scope: !19601)
!19603 = !DILocation(line: 2117, column: 13, scope: !19470)
!19604 = !DILocalVariable(name: "oerrno", scope: !19605, file: !1732, line: 2119, type: !5)
!19605 = distinct !DILexicalBlock(scope: !19601, file: !1732, line: 2118, column: 11)
!19606 = !DILocation(line: 2119, column: 17, scope: !19605)
!19607 = !DILocation(line: 2119, column: 26, scope: !19605)
!19608 = !DILocation(line: 2120, column: 25, scope: !19605)
!19609 = !DILocation(line: 2120, column: 19, scope: !19605)
!19610 = !DILocation(line: 2121, column: 13, scope: !19605)
!19611 = !DILocation(line: 2122, column: 11, scope: !19605)
!19612 = !DILocation(line: 2123, column: 16, scope: !19470)
!19613 = !DILocation(line: 2123, column: 9, scope: !19470)
!19614 = !DILocation(line: 2124, column: 1, scope: !19470)
!19615 = distinct !DISubprogram(name: "fts_build", scope: !1732, file: !1732, line: 1300, type: !19616, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!19616 = !DISubroutineType(types: !19617)
!19617 = !{!1835, !1757, !5}
!19618 = !DILocalVariable(name: "sp", arg: 1, scope: !19615, file: !1732, line: 1300, type: !1757)
!19619 = !DILocation(line: 1300, column: 26, scope: !19615)
!19620 = !DILocalVariable(name: "type", arg: 2, scope: !19615, file: !1732, line: 1300, type: !5)
!19621 = !DILocation(line: 1300, column: 34, scope: !19615)
!19622 = !DILocalVariable(name: "p", scope: !19615, file: !1732, line: 1302, type: !1835)
!19623 = !DILocation(line: 1302, column: 26, scope: !19615)
!19624 = !DILocalVariable(name: "head", scope: !19615, file: !1732, line: 1302, type: !1835)
!19625 = !DILocation(line: 1302, column: 30, scope: !19615)
!19626 = !DILocalVariable(name: "nitems", scope: !19615, file: !1732, line: 1303, type: !52)
!19627 = !DILocation(line: 1303, column: 25, scope: !19615)
!19628 = !DILocalVariable(name: "tail", scope: !19615, file: !1732, line: 1304, type: !1835)
!19629 = !DILocation(line: 1304, column: 17, scope: !19615)
!19630 = !DILocalVariable(name: "oldaddr", scope: !19615, file: !1732, line: 1305, type: !47)
!19631 = !DILocation(line: 1305, column: 15, scope: !19615)
!19632 = !DILocalVariable(name: "saved_errno", scope: !19615, file: !1732, line: 1306, type: !5)
!19633 = !DILocation(line: 1306, column: 13, scope: !19615)
!19634 = !DILocalVariable(name: "descend", scope: !19615, file: !1732, line: 1307, type: !139)
!19635 = !DILocation(line: 1307, column: 14, scope: !19615)
!19636 = !DILocalVariable(name: "doadjust", scope: !19615, file: !1732, line: 1308, type: !139)
!19637 = !DILocation(line: 1308, column: 14, scope: !19615)
!19638 = !DILocalVariable(name: "level", scope: !19615, file: !1732, line: 1309, type: !495)
!19639 = !DILocation(line: 1309, column: 19, scope: !19615)
!19640 = !DILocalVariable(name: "len", scope: !19615, file: !1732, line: 1310, type: !52)
!19641 = !DILocation(line: 1310, column: 16, scope: !19615)
!19642 = !DILocalVariable(name: "maxlen", scope: !19615, file: !1732, line: 1310, type: !52)
!19643 = !DILocation(line: 1310, column: 21, scope: !19615)
!19644 = !DILocalVariable(name: "new_len", scope: !19615, file: !1732, line: 1310, type: !52)
!19645 = !DILocation(line: 1310, column: 29, scope: !19615)
!19646 = !DILocalVariable(name: "cp", scope: !19615, file: !1732, line: 1311, type: !7)
!19647 = !DILocation(line: 1311, column: 15, scope: !19615)
!19648 = !DILocalVariable(name: "dir_fd", scope: !19615, file: !1732, line: 1312, type: !5)
!19649 = !DILocation(line: 1312, column: 13, scope: !19615)
!19650 = !DILocalVariable(name: "cur", scope: !19615, file: !1732, line: 1313, type: !1835)
!19651 = !DILocation(line: 1313, column: 17, scope: !19615)
!19652 = !DILocation(line: 1313, column: 23, scope: !19615)
!19653 = !DILocation(line: 1313, column: 27, scope: !19615)
!19654 = !DILocalVariable(name: "continue_readdir", scope: !19615, file: !1732, line: 1314, type: !139)
!19655 = !DILocation(line: 1314, column: 14, scope: !19615)
!19656 = !DILocation(line: 1314, column: 35, scope: !19615)
!19657 = !DILocation(line: 1314, column: 40, scope: !19615)
!19658 = !DILocation(line: 1314, column: 34, scope: !19615)
!19659 = !DILocation(line: 1314, column: 33, scope: !19615)
!19660 = !DILocalVariable(name: "sort_by_inode", scope: !19615, file: !1732, line: 1315, type: !139)
!19661 = !DILocation(line: 1315, column: 14, scope: !19615)
!19662 = !DILocalVariable(name: "max_entries", scope: !19615, file: !1732, line: 1316, type: !52)
!19663 = !DILocation(line: 1316, column: 16, scope: !19615)
!19664 = !DILocation(line: 1321, column: 13, scope: !19665)
!19665 = distinct !DILexicalBlock(scope: !19615, file: !1732, line: 1321, column: 13)
!19666 = !DILocation(line: 1321, column: 13, scope: !19615)
!19667 = !DILocalVariable(name: "dp", scope: !19668, file: !1732, line: 1323, type: !530)
!19668 = distinct !DILexicalBlock(scope: !19665, file: !1732, line: 1322, column: 11)
!19669 = !DILocation(line: 1323, column: 18, scope: !19668)
!19670 = !DILocation(line: 1323, column: 23, scope: !19668)
!19671 = !DILocation(line: 1323, column: 28, scope: !19668)
!19672 = !DILocation(line: 1324, column: 29, scope: !19668)
!19673 = !DILocation(line: 1324, column: 22, scope: !19668)
!19674 = !DILocation(line: 1324, column: 20, scope: !19668)
!19675 = !DILocation(line: 1325, column: 17, scope: !19676)
!19676 = distinct !DILexicalBlock(scope: !19668, file: !1732, line: 1325, column: 17)
!19677 = !DILocation(line: 1325, column: 24, scope: !19676)
!19678 = !DILocation(line: 1325, column: 17, scope: !19668)
!19679 = !DILocation(line: 1327, column: 17, scope: !19680)
!19680 = distinct !DILexicalBlock(scope: !19676, file: !1732, line: 1326, column: 15)
!19681 = !DILocation(line: 1327, column: 17, scope: !19682)
!19682 = distinct !DILexicalBlock(scope: !19680, file: !1732, line: 1327, column: 17)
!19683 = !DILocation(line: 1328, column: 21, scope: !19684)
!19684 = distinct !DILexicalBlock(scope: !19680, file: !1732, line: 1328, column: 21)
!19685 = !DILocation(line: 1328, column: 26, scope: !19684)
!19686 = !DILocation(line: 1328, column: 21, scope: !19680)
!19687 = !DILocation(line: 1330, column: 21, scope: !19688)
!19688 = distinct !DILexicalBlock(scope: !19684, file: !1732, line: 1329, column: 19)
!19689 = !DILocation(line: 1330, column: 26, scope: !19688)
!19690 = !DILocation(line: 1330, column: 35, scope: !19688)
!19691 = !DILocation(line: 1331, column: 38, scope: !19688)
!19692 = !DILocation(line: 1331, column: 21, scope: !19688)
!19693 = !DILocation(line: 1331, column: 26, scope: !19688)
!19694 = !DILocation(line: 1331, column: 36, scope: !19688)
!19695 = !DILocation(line: 1332, column: 19, scope: !19688)
!19696 = !DILocation(line: 1333, column: 17, scope: !19680)
!19697 = !DILocation(line: 1335, column: 11, scope: !19668)
!19698 = !DILocation(line: 1340, column: 34, scope: !19699)
!19699 = distinct !DILexicalBlock(scope: !19700, file: !1732, line: 1340, column: 17)
!19700 = distinct !DILexicalBlock(scope: !19665, file: !1732, line: 1337, column: 11)
!19701 = !DILocation(line: 0, scope: !19699)
!19702 = !DILocation(line: 1340, column: 18, scope: !19699)
!19703 = !DILocation(line: 1340, column: 23, scope: !19699)
!19704 = !DILocation(line: 1340, column: 32, scope: !19699)
!19705 = !DILocation(line: 1340, column: 74, scope: !19699)
!19706 = !DILocation(line: 1340, column: 17, scope: !19700)
!19707 = !DILocation(line: 1342, column: 21, scope: !19708)
!19708 = distinct !DILexicalBlock(scope: !19709, file: !1732, line: 1342, column: 21)
!19709 = distinct !DILexicalBlock(scope: !19699, file: !1732, line: 1341, column: 15)
!19710 = !DILocation(line: 1342, column: 26, scope: !19708)
!19711 = !DILocation(line: 1342, column: 21, scope: !19709)
!19712 = !DILocation(line: 1344, column: 21, scope: !19713)
!19713 = distinct !DILexicalBlock(scope: !19708, file: !1732, line: 1343, column: 19)
!19714 = !DILocation(line: 1344, column: 26, scope: !19713)
!19715 = !DILocation(line: 1344, column: 35, scope: !19713)
!19716 = !DILocation(line: 1345, column: 38, scope: !19713)
!19717 = !DILocation(line: 1345, column: 21, scope: !19713)
!19718 = !DILocation(line: 1345, column: 26, scope: !19713)
!19719 = !DILocation(line: 1345, column: 36, scope: !19713)
!19720 = !DILocation(line: 1346, column: 19, scope: !19713)
!19721 = !DILocation(line: 1347, column: 17, scope: !19709)
!19722 = !DILocation(line: 1352, column: 17, scope: !19723)
!19723 = distinct !DILexicalBlock(scope: !19700, file: !1732, line: 1352, column: 17)
!19724 = !DILocation(line: 1352, column: 22, scope: !19723)
!19725 = !DILocation(line: 1352, column: 31, scope: !19723)
!19726 = !DILocation(line: 1352, column: 17, scope: !19700)
!19727 = !DILocation(line: 1353, column: 40, scope: !19723)
!19728 = !DILocation(line: 1353, column: 44, scope: !19723)
!19729 = !DILocation(line: 1353, column: 31, scope: !19723)
!19730 = !DILocation(line: 1353, column: 15, scope: !19723)
!19731 = !DILocation(line: 1353, column: 20, scope: !19723)
!19732 = !DILocation(line: 1353, column: 29, scope: !19723)
!19733 = !DILocation(line: 1354, column: 22, scope: !19734)
!19734 = distinct !DILexicalBlock(scope: !19723, file: !1732, line: 1354, column: 22)
!19735 = !DILocation(line: 1354, column: 26, scope: !19734)
!19736 = !DILocation(line: 1354, column: 38, scope: !19734)
!19737 = !DILocation(line: 1354, column: 22, scope: !19723)
!19738 = !DILocation(line: 1361, column: 17, scope: !19739)
!19739 = distinct !DILexicalBlock(scope: !19734, file: !1732, line: 1355, column: 15)
!19740 = !DILocation(line: 1361, column: 17, scope: !19741)
!19741 = distinct !DILexicalBlock(scope: !19739, file: !1732, line: 1361, column: 17)
!19742 = !DILocation(line: 1362, column: 27, scope: !19739)
!19743 = !DILocation(line: 1362, column: 31, scope: !19739)
!19744 = !DILocation(line: 1362, column: 17, scope: !19739)
!19745 = !DILocation(line: 1363, column: 34, scope: !19746)
!19746 = distinct !DILexicalBlock(scope: !19739, file: !1732, line: 1363, column: 21)
!19747 = !DILocation(line: 1363, column: 38, scope: !19746)
!19748 = !DILocation(line: 1363, column: 23, scope: !19746)
!19749 = !DILocation(line: 1363, column: 21, scope: !19739)
!19750 = !DILocation(line: 1365, column: 21, scope: !19751)
!19751 = distinct !DILexicalBlock(scope: !19746, file: !1732, line: 1364, column: 19)
!19752 = !DILocation(line: 1366, column: 21, scope: !19751)
!19753 = !DILocation(line: 1368, column: 15, scope: !19739)
!19754 = !DILocation(line: 1378, column: 23, scope: !19615)
!19755 = !DILocation(line: 1378, column: 27, scope: !19615)
!19756 = !DILocation(line: 1378, column: 21, scope: !19615)
!19757 = !DILocation(line: 1395, column: 13, scope: !19758)
!19758 = distinct !DILexicalBlock(scope: !19615, file: !1732, line: 1395, column: 13)
!19759 = !DILocation(line: 1395, column: 13, scope: !19615)
!19760 = !DILocation(line: 1399, column: 21, scope: !19761)
!19761 = distinct !DILexicalBlock(scope: !19758, file: !1732, line: 1396, column: 11)
!19762 = !DILocation(line: 1400, column: 11, scope: !19761)
!19763 = !DILocation(line: 1405, column: 24, scope: !19764)
!19764 = distinct !DILexicalBlock(scope: !19758, file: !1732, line: 1402, column: 11)
!19765 = !DILocation(line: 1405, column: 29, scope: !19764)
!19766 = !DILocation(line: 1406, column: 24, scope: !19764)
!19767 = !DILocation(line: 1406, column: 30, scope: !19764)
!19768 = !DILocation(line: 1406, column: 49, scope: !19764)
!19769 = !DILocation(line: 1406, column: 52, scope: !19764)
!19770 = !DILocation(line: 1407, column: 30, scope: !19764)
!19771 = !DILocation(line: 1407, column: 35, scope: !19764)
!19772 = !DILocation(line: 1408, column: 30, scope: !19764)
!19773 = !DILocation(line: 1408, column: 33, scope: !19764)
!19774 = !DILocation(line: 1408, column: 38, scope: !19764)
!19775 = !DILocation(line: 1408, column: 49, scope: !19764)
!19776 = !DILocation(line: 1408, column: 58, scope: !19764)
!19777 = !DILocation(line: 1409, column: 30, scope: !19764)
!19778 = !DILocation(line: 1409, column: 53, scope: !19764)
!19779 = !DILocation(line: 1409, column: 58, scope: !19764)
!19780 = !DILocation(line: 1409, column: 34, scope: !19764)
!19781 = !DILocation(line: 1410, column: 34, scope: !19764)
!19782 = !DILocation(line: 0, scope: !19764)
!19783 = !DILocation(line: 1406, column: 27, scope: !19764)
!19784 = !DILocation(line: 1405, column: 21, scope: !19764)
!19785 = !DILocation(line: 1411, column: 17, scope: !19786)
!19786 = distinct !DILexicalBlock(scope: !19764, file: !1732, line: 1411, column: 17)
!19787 = !DILocation(line: 1411, column: 25, scope: !19786)
!19788 = !DILocation(line: 1411, column: 28, scope: !19786)
!19789 = !DILocation(line: 1411, column: 33, scope: !19786)
!19790 = !DILocation(line: 1411, column: 17, scope: !19764)
!19791 = !DILocation(line: 1413, column: 21, scope: !19792)
!19792 = distinct !DILexicalBlock(scope: !19793, file: !1732, line: 1413, column: 21)
!19793 = distinct !DILexicalBlock(scope: !19786, file: !1732, line: 1412, column: 15)
!19794 = !DILocation(line: 1413, column: 21, scope: !19793)
!19795 = !DILocation(line: 1414, column: 35, scope: !19792)
!19796 = !DILocation(line: 1414, column: 28, scope: !19792)
!19797 = !DILocation(line: 1414, column: 26, scope: !19792)
!19798 = !DILocation(line: 1414, column: 19, scope: !19792)
!19799 = !DILocation(line: 1415, column: 21, scope: !19800)
!19800 = distinct !DILexicalBlock(scope: !19793, file: !1732, line: 1415, column: 21)
!19801 = !DILocation(line: 1415, column: 28, scope: !19800)
!19802 = !DILocation(line: 1415, column: 32, scope: !19800)
!19803 = !DILocation(line: 1415, column: 54, scope: !19800)
!19804 = !DILocation(line: 1415, column: 58, scope: !19800)
!19805 = !DILocation(line: 1415, column: 63, scope: !19800)
!19806 = !DILocation(line: 1415, column: 35, scope: !19800)
!19807 = !DILocation(line: 1415, column: 21, scope: !19793)
!19808 = !DILocation(line: 1416, column: 29, scope: !19809)
!19809 = distinct !DILexicalBlock(scope: !19810, file: !1732, line: 1416, column: 29)
!19810 = distinct !DILexicalBlock(scope: !19800, file: !1732, line: 1415, column: 78)
!19811 = !DILocation(line: 1416, column: 37, scope: !19809)
!19812 = !DILocation(line: 1416, column: 40, scope: !19809)
!19813 = !DILocation(line: 1416, column: 45, scope: !19809)
!19814 = !DILocation(line: 1416, column: 29, scope: !19810)
!19815 = !DILocation(line: 1417, column: 50, scope: !19809)
!19816 = !DILocation(line: 1417, column: 33, scope: !19809)
!19817 = !DILocation(line: 1417, column: 38, scope: !19809)
!19818 = !DILocation(line: 1417, column: 48, scope: !19809)
!19819 = !DILocation(line: 1418, column: 25, scope: !19810)
!19820 = !DILocation(line: 1418, column: 30, scope: !19810)
!19821 = !DILocation(line: 1418, column: 40, scope: !19810)
!19822 = !DILocation(line: 1419, column: 33, scope: !19810)
!19823 = !DILocation(line: 1420, column: 25, scope: !19810)
!19824 = !DILocation(line: 1420, column: 25, scope: !19825)
!19825 = distinct !DILexicalBlock(scope: !19810, file: !1732, line: 1420, column: 25)
!19826 = !DILocation(line: 1421, column: 29, scope: !19827)
!19827 = distinct !DILexicalBlock(scope: !19810, file: !1732, line: 1421, column: 29)
!19828 = !DILocation(line: 1421, column: 46, scope: !19827)
!19829 = !DILocation(line: 1421, column: 54, scope: !19827)
!19830 = !DILocation(line: 1421, column: 51, scope: !19827)
!19831 = !DILocation(line: 1421, column: 29, scope: !19810)
!19832 = !DILocation(line: 1422, column: 40, scope: !19827)
!19833 = !DILocation(line: 1422, column: 33, scope: !19827)
!19834 = !DILocation(line: 1423, column: 25, scope: !19810)
!19835 = !DILocation(line: 1423, column: 30, scope: !19810)
!19836 = !DILocation(line: 1423, column: 39, scope: !19810)
!19837 = !DILocation(line: 1424, column: 17, scope: !19810)
!19838 = !DILocation(line: 1425, column: 33, scope: !19800)
!19839 = !DILocation(line: 1426, column: 15, scope: !19793)
!19840 = !DILocation(line: 1439, column: 15, scope: !19615)
!19841 = !DILocation(line: 1439, column: 13, scope: !19615)
!19842 = !DILocation(line: 1440, column: 13, scope: !19843)
!19843 = distinct !DILexicalBlock(scope: !19615, file: !1732, line: 1440, column: 13)
!19844 = !DILocation(line: 1440, column: 13, scope: !19615)
!19845 = !DILocation(line: 1441, column: 22, scope: !19846)
!19846 = distinct !DILexicalBlock(scope: !19843, file: !1732, line: 1440, column: 33)
!19847 = !DILocation(line: 1441, column: 26, scope: !19846)
!19848 = !DILocation(line: 1441, column: 37, scope: !19846)
!19849 = !DILocation(line: 1441, column: 35, scope: !19846)
!19850 = !DILocation(line: 1441, column: 20, scope: !19846)
!19851 = !DILocation(line: 1442, column: 20, scope: !19846)
!19852 = !DILocation(line: 1442, column: 23, scope: !19846)
!19853 = !DILocation(line: 1443, column: 9, scope: !19846)
!19854 = !DILocation(line: 1445, column: 20, scope: !19855)
!19855 = distinct !DILexicalBlock(scope: !19843, file: !1732, line: 1443, column: 16)
!19856 = !DILocation(line: 1447, column: 12, scope: !19615)
!19857 = !DILocation(line: 1448, column: 18, scope: !19615)
!19858 = !DILocation(line: 1448, column: 22, scope: !19615)
!19859 = !DILocation(line: 1448, column: 36, scope: !19615)
!19860 = !DILocation(line: 1448, column: 34, scope: !19615)
!19861 = !DILocation(line: 1448, column: 16, scope: !19615)
!19862 = !DILocation(line: 1450, column: 17, scope: !19615)
!19863 = !DILocation(line: 1450, column: 22, scope: !19615)
!19864 = !DILocation(line: 1450, column: 32, scope: !19615)
!19865 = !DILocation(line: 1450, column: 15, scope: !19615)
!19866 = !DILocation(line: 1453, column: 18, scope: !19615)
!19867 = !DILocation(line: 1454, column: 14, scope: !19615)
!19868 = !DILocation(line: 1455, column: 14, scope: !19615)
!19869 = !DILocation(line: 1456, column: 16, scope: !19615)
!19870 = !DILocation(line: 1457, column: 9, scope: !19615)
!19871 = !DILocation(line: 1457, column: 16, scope: !19615)
!19872 = !DILocation(line: 1457, column: 21, scope: !19615)
!19873 = !DILocalVariable(name: "d_namelen", scope: !19874, file: !1732, line: 1458, type: !52)
!19874 = distinct !DILexicalBlock(scope: !19615, file: !1732, line: 1457, column: 31)
!19875 = !DILocation(line: 1458, column: 24, scope: !19874)
!19876 = !DILocation(line: 1459, column: 17, scope: !19874)
!19877 = !DILocalVariable(name: "dp", scope: !19874, file: !1732, line: 1460, type: !1860)
!19878 = !DILocation(line: 1460, column: 32, scope: !19874)
!19879 = !DILocation(line: 1460, column: 45, scope: !19874)
!19880 = !DILocation(line: 1460, column: 50, scope: !19874)
!19881 = !DILocation(line: 1460, column: 37, scope: !19874)
!19882 = !DILocation(line: 1461, column: 21, scope: !19883)
!19883 = distinct !DILexicalBlock(scope: !19874, file: !1732, line: 1461, column: 21)
!19884 = !DILocation(line: 1461, column: 24, scope: !19883)
!19885 = !DILocation(line: 1461, column: 21, scope: !19874)
!19886 = !DILocation(line: 1462, column: 29, scope: !19887)
!19887 = distinct !DILexicalBlock(scope: !19888, file: !1732, line: 1462, column: 29)
!19888 = distinct !DILexicalBlock(scope: !19883, file: !1732, line: 1461, column: 33)
!19889 = !DILocation(line: 1462, column: 29, scope: !19888)
!19890 = !DILocation(line: 1463, column: 50, scope: !19891)
!19891 = distinct !DILexicalBlock(scope: !19887, file: !1732, line: 1462, column: 36)
!19892 = !DILocation(line: 1463, column: 33, scope: !19891)
!19893 = !DILocation(line: 1463, column: 38, scope: !19891)
!19894 = !DILocation(line: 1463, column: 48, scope: !19891)
!19895 = !DILocation(line: 1466, column: 50, scope: !19891)
!19896 = !DILocation(line: 1466, column: 67, scope: !19891)
!19897 = !DILocation(line: 1466, column: 70, scope: !19891)
!19898 = !DILocation(line: 1466, column: 49, scope: !19891)
!19899 = !DILocation(line: 1466, column: 33, scope: !19891)
!19900 = !DILocation(line: 1466, column: 38, scope: !19891)
!19901 = !DILocation(line: 1466, column: 47, scope: !19891)
!19902 = !DILocation(line: 1468, column: 25, scope: !19891)
!19903 = !DILocation(line: 1469, column: 25, scope: !19888)
!19904 = !DILocation(line: 1471, column: 22, scope: !19905)
!19905 = distinct !DILexicalBlock(scope: !19874, file: !1732, line: 1471, column: 21)
!19906 = !DILocation(line: 1471, column: 40, scope: !19905)
!19907 = !DILocation(line: 1471, column: 43, scope: !19905)
!19908 = !DILocation(line: 1471, column: 21, scope: !19874)
!19909 = !DILocation(line: 1472, column: 25, scope: !19905)
!19910 = distinct !{!19910, !19870, !19911}
!19911 = !DILocation(line: 1590, column: 9, scope: !19615)
!19912 = !DILocation(line: 1474, column: 29, scope: !19874)
!19913 = !DILocation(line: 1474, column: 27, scope: !19874)
!19914 = !DILocation(line: 1475, column: 32, scope: !19874)
!19915 = !DILocation(line: 1475, column: 36, scope: !19874)
!19916 = !DILocation(line: 1475, column: 40, scope: !19874)
!19917 = !DILocation(line: 1475, column: 48, scope: !19874)
!19918 = !DILocation(line: 1475, column: 21, scope: !19874)
!19919 = !DILocation(line: 1475, column: 19, scope: !19874)
!19920 = !DILocation(line: 1476, column: 22, scope: !19921)
!19921 = distinct !DILexicalBlock(scope: !19874, file: !1732, line: 1476, column: 21)
!19922 = !DILocation(line: 1476, column: 21, scope: !19874)
!19923 = !DILocation(line: 1477, column: 25, scope: !19921)
!19924 = !DILocation(line: 1478, column: 21, scope: !19925)
!19925 = distinct !DILexicalBlock(scope: !19874, file: !1732, line: 1478, column: 21)
!19926 = !DILocation(line: 1478, column: 34, scope: !19925)
!19927 = !DILocation(line: 1478, column: 31, scope: !19925)
!19928 = !DILocation(line: 1478, column: 21, scope: !19874)
!19929 = !DILocation(line: 1480, column: 35, scope: !19930)
!19930 = distinct !DILexicalBlock(scope: !19925, file: !1732, line: 1478, column: 42)
!19931 = !DILocation(line: 1480, column: 39, scope: !19930)
!19932 = !DILocation(line: 1480, column: 33, scope: !19930)
!19933 = !DILocation(line: 1481, column: 42, scope: !19934)
!19934 = distinct !DILexicalBlock(scope: !19930, file: !1732, line: 1481, column: 29)
!19935 = !DILocation(line: 1481, column: 46, scope: !19934)
!19936 = !DILocation(line: 1481, column: 58, scope: !19934)
!19937 = !DILocation(line: 1481, column: 56, scope: !19934)
!19938 = !DILocation(line: 1481, column: 62, scope: !19934)
!19939 = !DILocation(line: 1481, column: 31, scope: !19934)
!19940 = !DILocation(line: 1481, column: 29, scope: !19930)
!19941 = !DILocation(line: 1481, column: 68, scope: !19934)
!19942 = !DILabel(scope: !19943, name: "mem1", file: !1732, line: 1487)
!19943 = distinct !DILexicalBlock(scope: !19934, file: !1732, line: 1481, column: 68)
!19944 = !DILocation(line: 1487, column: 1, scope: !19943)
!19945 = !DILocation(line: 1487, column: 47, scope: !19943)
!19946 = !DILocation(line: 1487, column: 45, scope: !19943)
!19947 = !DILocation(line: 1488, column: 38, scope: !19943)
!19948 = !DILocation(line: 1488, column: 33, scope: !19943)
!19949 = !DILocation(line: 1489, column: 43, scope: !19943)
!19950 = !DILocation(line: 1489, column: 33, scope: !19943)
!19951 = !DILocation(line: 1490, column: 33, scope: !19943)
!19952 = !DILocation(line: 1490, column: 33, scope: !19953)
!19953 = distinct !DILexicalBlock(scope: !19943, file: !1732, line: 1490, column: 33)
!19954 = !DILocation(line: 1491, column: 33, scope: !19943)
!19955 = !DILocation(line: 1491, column: 38, scope: !19943)
!19956 = !DILocation(line: 1491, column: 47, scope: !19943)
!19957 = !DILocation(line: 1492, column: 33, scope: !19943)
!19958 = !DILocation(line: 1493, column: 33, scope: !19943)
!19959 = !DILocation(line: 1494, column: 33, scope: !19943)
!19960 = !DILocation(line: 1497, column: 29, scope: !19961)
!19961 = distinct !DILexicalBlock(scope: !19930, file: !1732, line: 1497, column: 29)
!19962 = !DILocation(line: 1497, column: 40, scope: !19961)
!19963 = !DILocation(line: 1497, column: 44, scope: !19961)
!19964 = !DILocation(line: 1497, column: 37, scope: !19961)
!19965 = !DILocation(line: 1497, column: 29, scope: !19930)
!19966 = !DILocation(line: 1498, column: 42, scope: !19967)
!19967 = distinct !DILexicalBlock(scope: !19961, file: !1732, line: 1497, column: 54)
!19968 = !DILocation(line: 1499, column: 37, scope: !19969)
!19969 = distinct !DILexicalBlock(scope: !19967, file: !1732, line: 1499, column: 37)
!19970 = !DILocation(line: 1499, column: 37, scope: !19967)
!19971 = !DILocation(line: 1500, column: 46, scope: !19969)
!19972 = !DILocation(line: 1500, column: 50, scope: !19969)
!19973 = !DILocation(line: 1500, column: 61, scope: !19969)
!19974 = !DILocation(line: 1500, column: 59, scope: !19969)
!19975 = !DILocation(line: 1500, column: 44, scope: !19969)
!19976 = !DILocation(line: 1500, column: 41, scope: !19969)
!19977 = !DILocation(line: 1501, column: 25, scope: !19967)
!19978 = !DILocation(line: 1502, column: 34, scope: !19930)
!19979 = !DILocation(line: 1502, column: 38, scope: !19930)
!19980 = !DILocation(line: 1502, column: 52, scope: !19930)
!19981 = !DILocation(line: 1502, column: 50, scope: !19930)
!19982 = !DILocation(line: 1502, column: 32, scope: !19930)
!19983 = !DILocation(line: 1503, column: 17, scope: !19930)
!19984 = !DILocation(line: 1505, column: 27, scope: !19874)
!19985 = !DILocation(line: 1505, column: 33, scope: !19874)
!19986 = !DILocation(line: 1505, column: 31, scope: !19874)
!19987 = !DILocation(line: 1505, column: 25, scope: !19874)
!19988 = !DILocation(line: 1506, column: 21, scope: !19989)
!19989 = distinct !DILexicalBlock(scope: !19874, file: !1732, line: 1506, column: 21)
!19990 = !DILocation(line: 1506, column: 31, scope: !19989)
!19991 = !DILocation(line: 1506, column: 29, scope: !19989)
!19992 = !DILocation(line: 1506, column: 21, scope: !19874)
!19993 = !DILocation(line: 1513, column: 30, scope: !19994)
!19994 = distinct !DILexicalBlock(scope: !19989, file: !1732, line: 1506, column: 36)
!19995 = !DILocation(line: 1513, column: 25, scope: !19994)
!19996 = !DILocation(line: 1514, column: 35, scope: !19994)
!19997 = !DILocation(line: 1514, column: 25, scope: !19994)
!19998 = !DILocation(line: 1515, column: 25, scope: !19994)
!19999 = !DILocation(line: 1515, column: 25, scope: !20000)
!20000 = distinct !DILexicalBlock(scope: !19994, file: !1732, line: 1515, column: 25)
!20001 = !DILocation(line: 1516, column: 25, scope: !19994)
!20002 = !DILocation(line: 1516, column: 30, scope: !19994)
!20003 = !DILocation(line: 1516, column: 39, scope: !19994)
!20004 = !DILocation(line: 1517, column: 25, scope: !19994)
!20005 = !DILocation(line: 1518, column: 25, scope: !19994)
!20006 = !DILocation(line: 1519, column: 25, scope: !19994)
!20007 = !DILocation(line: 1521, column: 32, scope: !19874)
!20008 = !DILocation(line: 1521, column: 17, scope: !19874)
!20009 = !DILocation(line: 1521, column: 20, scope: !19874)
!20010 = !DILocation(line: 1521, column: 30, scope: !19874)
!20011 = !DILocation(line: 1522, column: 33, scope: !19874)
!20012 = !DILocation(line: 1522, column: 37, scope: !19874)
!20013 = !DILocation(line: 1522, column: 17, scope: !19874)
!20014 = !DILocation(line: 1522, column: 20, scope: !19874)
!20015 = !DILocation(line: 1522, column: 31, scope: !19874)
!20016 = !DILocation(line: 1523, column: 34, scope: !19874)
!20017 = !DILocation(line: 1523, column: 17, scope: !19874)
!20018 = !DILocation(line: 1523, column: 20, scope: !19874)
!20019 = !DILocation(line: 1523, column: 32, scope: !19874)
!20020 = !DILocation(line: 1527, column: 40, scope: !19874)
!20021 = !DILocation(line: 1527, column: 17, scope: !19874)
!20022 = !DILocation(line: 1527, column: 20, scope: !19874)
!20023 = !DILocation(line: 1527, column: 31, scope: !19874)
!20024 = !DILocation(line: 1527, column: 38, scope: !19874)
!20025 = !DILocation(line: 1530, column: 21, scope: !20026)
!20026 = distinct !DILexicalBlock(scope: !19874, file: !1732, line: 1530, column: 21)
!20027 = !DILocation(line: 1530, column: 21, scope: !19874)
!20028 = !DILocation(line: 1531, column: 42, scope: !20029)
!20029 = distinct !DILexicalBlock(scope: !20026, file: !1732, line: 1530, column: 41)
!20030 = !DILocation(line: 1531, column: 45, scope: !20029)
!20031 = !DILocation(line: 1531, column: 25, scope: !20029)
!20032 = !DILocation(line: 1531, column: 28, scope: !20029)
!20033 = !DILocation(line: 1531, column: 40, scope: !20029)
!20034 = !DILocation(line: 1532, column: 33, scope: !20029)
!20035 = !DILocation(line: 1532, column: 37, scope: !20029)
!20036 = !DILocation(line: 1532, column: 40, scope: !20029)
!20037 = !DILocation(line: 1532, column: 25, scope: !20029)
!20038 = !DILocation(line: 1532, column: 50, scope: !20029)
!20039 = !DILocation(line: 1532, column: 53, scope: !20029)
!20040 = !DILocation(line: 1532, column: 65, scope: !20029)
!20041 = !DILocation(line: 1533, column: 17, scope: !20029)
!20042 = !DILocation(line: 1534, column: 42, scope: !20026)
!20043 = !DILocation(line: 1534, column: 45, scope: !20026)
!20044 = !DILocation(line: 1534, column: 25, scope: !20026)
!20045 = !DILocation(line: 1534, column: 28, scope: !20026)
!20046 = !DILocation(line: 1534, column: 40, scope: !20026)
!20047 = !DILocation(line: 1536, column: 21, scope: !20048)
!20048 = distinct !DILexicalBlock(scope: !19874, file: !1732, line: 1536, column: 21)
!20049 = !DILocation(line: 1536, column: 25, scope: !20048)
!20050 = !DILocation(line: 1536, column: 36, scope: !20048)
!20051 = !DILocation(line: 1536, column: 44, scope: !20048)
!20052 = !DILocation(line: 1536, column: 47, scope: !20048)
!20053 = !DILocation(line: 1536, column: 21, scope: !19874)
!20054 = !DILocalVariable(name: "skip_stat", scope: !20055, file: !1732, line: 1549, type: !139)
!20055 = distinct !DILexicalBlock(scope: !20048, file: !1732, line: 1536, column: 70)
!20056 = !DILocation(line: 1549, column: 30, scope: !20055)
!20057 = !DILocation(line: 1549, column: 43, scope: !20055)
!20058 = !DILocation(line: 1550, column: 43, scope: !20055)
!20059 = !DILocation(line: 1550, column: 46, scope: !20055)
!20060 = !DILocation(line: 1551, column: 43, scope: !20055)
!20061 = !DILocation(line: 1551, column: 46, scope: !20055)
!20062 = !DILocation(line: 1552, column: 43, scope: !20055)
!20063 = !DILocation(line: 1552, column: 48, scope: !20055)
!20064 = !DILocation(line: 1552, column: 46, scope: !20055)
!20065 = !DILocation(line: 0, scope: !20055)
!20066 = !DILocation(line: 1553, column: 25, scope: !20055)
!20067 = !DILocation(line: 1553, column: 28, scope: !20055)
!20068 = !DILocation(line: 1553, column: 37, scope: !20055)
!20069 = !DILocation(line: 1556, column: 40, scope: !20055)
!20070 = !DILocation(line: 1556, column: 43, scope: !20055)
!20071 = !DILocation(line: 1556, column: 54, scope: !20055)
!20072 = !DILocation(line: 1556, column: 25, scope: !20055)
!20073 = !DILocation(line: 1557, column: 47, scope: !20055)
!20074 = !DILocation(line: 1557, column: 51, scope: !20055)
!20075 = !DILocation(line: 1557, column: 50, scope: !20055)
!20076 = !DILocation(line: 1557, column: 25, scope: !20055)
!20077 = !DILocation(line: 1558, column: 17, scope: !20055)
!20078 = !DILocation(line: 1559, column: 48, scope: !20079)
!20079 = distinct !DILexicalBlock(scope: !20048, file: !1732, line: 1558, column: 24)
!20080 = !DILocation(line: 1559, column: 52, scope: !20079)
!20081 = !DILocation(line: 1559, column: 39, scope: !20079)
!20082 = !DILocation(line: 1559, column: 25, scope: !20079)
!20083 = !DILocation(line: 1559, column: 28, scope: !20079)
!20084 = !DILocation(line: 1559, column: 37, scope: !20079)
!20085 = !DILocation(line: 1563, column: 17, scope: !19874)
!20086 = !DILocation(line: 1563, column: 20, scope: !19874)
!20087 = !DILocation(line: 1563, column: 29, scope: !19874)
!20088 = !DILocation(line: 1564, column: 21, scope: !20089)
!20089 = distinct !DILexicalBlock(scope: !19874, file: !1732, line: 1564, column: 21)
!20090 = !DILocation(line: 1564, column: 26, scope: !20089)
!20091 = !DILocation(line: 1564, column: 21, scope: !19874)
!20092 = !DILocation(line: 1565, column: 39, scope: !20089)
!20093 = !DILocation(line: 1565, column: 37, scope: !20089)
!20094 = !DILocation(line: 1565, column: 30, scope: !20089)
!20095 = !DILocation(line: 1565, column: 25, scope: !20089)
!20096 = !DILocation(line: 1567, column: 42, scope: !20097)
!20097 = distinct !DILexicalBlock(scope: !20089, file: !1732, line: 1566, column: 22)
!20098 = !DILocation(line: 1567, column: 25, scope: !20097)
!20099 = !DILocation(line: 1567, column: 31, scope: !20097)
!20100 = !DILocation(line: 1567, column: 40, scope: !20097)
!20101 = !DILocation(line: 1568, column: 32, scope: !20097)
!20102 = !DILocation(line: 1568, column: 30, scope: !20097)
!20103 = !DILocation(line: 1579, column: 21, scope: !20104)
!20104 = distinct !DILexicalBlock(scope: !19874, file: !1732, line: 1579, column: 21)
!20105 = !DILocation(line: 1579, column: 28, scope: !20104)
!20106 = !DILocation(line: 1580, column: 21, scope: !20104)
!20107 = !DILocation(line: 1580, column: 25, scope: !20104)
!20108 = !DILocation(line: 1580, column: 29, scope: !20104)
!20109 = !DILocation(line: 1579, column: 21, scope: !19874)
!20110 = !DILocation(line: 1581, column: 68, scope: !20104)
!20111 = !DILocation(line: 1581, column: 73, scope: !20104)
!20112 = !DILocation(line: 1581, column: 35, scope: !20104)
!20113 = !DILocation(line: 1581, column: 33, scope: !20104)
!20114 = !DILocation(line: 1581, column: 19, scope: !20104)
!20115 = !DILocation(line: 1583, column: 17, scope: !19874)
!20116 = !DILocation(line: 1584, column: 21, scope: !20117)
!20117 = distinct !DILexicalBlock(scope: !19874, file: !1732, line: 1584, column: 21)
!20118 = !DILocation(line: 1584, column: 36, scope: !20117)
!20119 = !DILocation(line: 1584, column: 33, scope: !20117)
!20120 = !DILocation(line: 1584, column: 21, scope: !19874)
!20121 = !DILocation(line: 1588, column: 25, scope: !20122)
!20122 = distinct !DILexicalBlock(scope: !20117, file: !1732, line: 1584, column: 44)
!20123 = !DILocation(line: 1592, column: 13, scope: !20124)
!20124 = distinct !DILexicalBlock(scope: !19615, file: !1732, line: 1592, column: 13)
!20125 = !DILocation(line: 1592, column: 18, scope: !20124)
!20126 = !DILocation(line: 1592, column: 13, scope: !19615)
!20127 = !DILocation(line: 1593, column: 17, scope: !20124)
!20128 = !DILocation(line: 1593, column: 17, scope: !20129)
!20129 = distinct !DILexicalBlock(scope: !20124, file: !1732, line: 1593, column: 17)
!20130 = !DILabel(scope: !19615, name: "break_without_closedir", file: !1732, line: 1595)
!20131 = !DILocation(line: 1595, column: 2, scope: !19615)
!20132 = !DILocation(line: 1601, column: 13, scope: !20133)
!20133 = distinct !DILexicalBlock(scope: !19615, file: !1732, line: 1601, column: 13)
!20134 = !DILocation(line: 1601, column: 13, scope: !19615)
!20135 = !DILocation(line: 1602, column: 29, scope: !20133)
!20136 = !DILocation(line: 1602, column: 33, scope: !20133)
!20137 = !DILocation(line: 1602, column: 17, scope: !20133)
!20138 = !DILocation(line: 1608, column: 13, scope: !20139)
!20139 = distinct !DILexicalBlock(scope: !19615, file: !1732, line: 1608, column: 13)
!20140 = !DILocation(line: 1608, column: 13, scope: !19615)
!20141 = !DILocation(line: 1609, column: 21, scope: !20142)
!20142 = distinct !DILexicalBlock(scope: !20143, file: !1732, line: 1609, column: 21)
!20143 = distinct !DILexicalBlock(scope: !20139, file: !1732, line: 1608, column: 33)
!20144 = !DILocation(line: 1609, column: 28, scope: !20142)
!20145 = !DILocation(line: 1609, column: 32, scope: !20142)
!20146 = !DILocation(line: 1609, column: 25, scope: !20142)
!20147 = !DILocation(line: 1609, column: 44, scope: !20142)
!20148 = !DILocation(line: 1609, column: 47, scope: !20142)
!20149 = !DILocation(line: 1609, column: 54, scope: !20142)
!20150 = !DILocation(line: 1609, column: 21, scope: !20143)
!20151 = !DILocation(line: 1610, column: 25, scope: !20142)
!20152 = !DILocation(line: 1611, column: 18, scope: !20143)
!20153 = !DILocation(line: 1611, column: 21, scope: !20143)
!20154 = !DILocation(line: 1612, column: 9, scope: !20143)
!20155 = !DILocation(line: 1621, column: 14, scope: !20156)
!20156 = distinct !DILexicalBlock(scope: !19615, file: !1732, line: 1621, column: 13)
!20157 = !DILocation(line: 1621, column: 31, scope: !20156)
!20158 = !DILocation(line: 1621, column: 34, scope: !20156)
!20159 = !DILocation(line: 1621, column: 42, scope: !20156)
!20160 = !DILocation(line: 1621, column: 46, scope: !20156)
!20161 = !DILocation(line: 1621, column: 51, scope: !20156)
!20162 = !DILocation(line: 1621, column: 61, scope: !20156)
!20163 = !DILocation(line: 1621, column: 65, scope: !20156)
!20164 = !DILocation(line: 1621, column: 73, scope: !20156)
!20165 = !DILocation(line: 1622, column: 14, scope: !20156)
!20166 = !DILocation(line: 1622, column: 19, scope: !20156)
!20167 = !DILocation(line: 1622, column: 29, scope: !20156)
!20168 = !DILocation(line: 1621, column: 13, scope: !19615)
!20169 = !DILocation(line: 1623, column: 36, scope: !20156)
!20170 = !DILocation(line: 1623, column: 16, scope: !20156)
!20171 = !DILocation(line: 1624, column: 35, scope: !20156)
!20172 = !DILocation(line: 1624, column: 39, scope: !20156)
!20173 = !DILocation(line: 1624, column: 44, scope: !20156)
!20174 = !DILocation(line: 1624, column: 16, scope: !20156)
!20175 = !DILocation(line: 1625, column: 17, scope: !20176)
!20176 = distinct !DILexicalBlock(scope: !20156, file: !1732, line: 1624, column: 68)
!20177 = !DILocation(line: 1625, column: 22, scope: !20176)
!20178 = !DILocation(line: 1625, column: 31, scope: !20176)
!20179 = !DILocation(line: 1626, column: 17, scope: !20176)
!20180 = !DILocation(line: 1627, column: 27, scope: !20176)
!20181 = !DILocation(line: 1627, column: 17, scope: !20176)
!20182 = !DILocation(line: 1628, column: 17, scope: !20176)
!20183 = !DILocation(line: 1632, column: 14, scope: !20184)
!20184 = distinct !DILexicalBlock(scope: !19615, file: !1732, line: 1632, column: 13)
!20185 = !DILocation(line: 1632, column: 13, scope: !19615)
!20186 = !DILocation(line: 1633, column: 21, scope: !20187)
!20187 = distinct !DILexicalBlock(scope: !20188, file: !1732, line: 1633, column: 21)
!20188 = distinct !DILexicalBlock(scope: !20184, file: !1732, line: 1632, column: 22)
!20189 = !DILocation(line: 1633, column: 26, scope: !20187)
!20190 = !DILocation(line: 1634, column: 21, scope: !20187)
!20191 = !DILocation(line: 1634, column: 24, scope: !20187)
!20192 = !DILocation(line: 1634, column: 29, scope: !20187)
!20193 = !DILocation(line: 1634, column: 38, scope: !20187)
!20194 = !DILocation(line: 1634, column: 49, scope: !20187)
!20195 = !DILocation(line: 1634, column: 52, scope: !20187)
!20196 = !DILocation(line: 1634, column: 57, scope: !20187)
!20197 = !DILocation(line: 1634, column: 66, scope: !20187)
!20198 = !DILocation(line: 1633, column: 21, scope: !20188)
!20199 = !DILocation(line: 1635, column: 25, scope: !20187)
!20200 = !DILocation(line: 1635, column: 30, scope: !20187)
!20201 = !DILocation(line: 1635, column: 39, scope: !20187)
!20202 = !DILocation(line: 1636, column: 27, scope: !20188)
!20203 = !DILocation(line: 1636, column: 17, scope: !20188)
!20204 = !DILocation(line: 1637, column: 17, scope: !20188)
!20205 = !DILocation(line: 1640, column: 13, scope: !20206)
!20206 = distinct !DILexicalBlock(scope: !19615, file: !1732, line: 1640, column: 13)
!20207 = !DILocation(line: 1640, column: 13, scope: !19615)
!20208 = !DILocation(line: 1641, column: 17, scope: !20209)
!20209 = distinct !DILexicalBlock(scope: !20206, file: !1732, line: 1640, column: 28)
!20210 = !DILocation(line: 1641, column: 21, scope: !20209)
!20211 = !DILocation(line: 1641, column: 32, scope: !20209)
!20212 = !DILocation(line: 1642, column: 34, scope: !20209)
!20213 = !DILocation(line: 1642, column: 38, scope: !20209)
!20214 = !DILocation(line: 1642, column: 44, scope: !20209)
!20215 = !DILocation(line: 1642, column: 24, scope: !20209)
!20216 = !DILocation(line: 1642, column: 22, scope: !20209)
!20217 = !DILocation(line: 1643, column: 17, scope: !20209)
!20218 = !DILocation(line: 1643, column: 21, scope: !20209)
!20219 = !DILocation(line: 1643, column: 32, scope: !20209)
!20220 = !DILocation(line: 1644, column: 9, scope: !20209)
!20221 = !DILocation(line: 1647, column: 13, scope: !20222)
!20222 = distinct !DILexicalBlock(scope: !19615, file: !1732, line: 1647, column: 13)
!20223 = !DILocation(line: 1647, column: 17, scope: !20222)
!20224 = !DILocation(line: 1647, column: 28, scope: !20222)
!20225 = !DILocation(line: 1647, column: 31, scope: !20222)
!20226 = !DILocation(line: 1647, column: 38, scope: !20222)
!20227 = !DILocation(line: 1647, column: 13, scope: !19615)
!20228 = !DILocation(line: 1648, column: 33, scope: !20222)
!20229 = !DILocation(line: 1648, column: 37, scope: !20222)
!20230 = !DILocation(line: 1648, column: 43, scope: !20222)
!20231 = !DILocation(line: 1648, column: 24, scope: !20222)
!20232 = !DILocation(line: 1648, column: 22, scope: !20222)
!20233 = !DILocation(line: 1648, column: 17, scope: !20222)
!20234 = !DILocation(line: 1649, column: 17, scope: !19615)
!20235 = !DILocation(line: 1649, column: 9, scope: !19615)
!20236 = !DILocation(line: 1650, column: 1, scope: !19615)
!20237 = distinct !DISubprogram(name: "restore_initial_cwd", scope: !1732, file: !1732, line: 333, type: !18636, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!20238 = !DILocalVariable(name: "sp", arg: 1, scope: !20237, file: !1732, line: 333, type: !1757)
!20239 = !DILocation(line: 333, column: 27, scope: !20237)
!20240 = !DILocalVariable(name: "fail", scope: !20237, file: !1732, line: 335, type: !5)
!20241 = !DILocation(line: 335, column: 7, scope: !20237)
!20242 = !DILocation(line: 335, column: 14, scope: !20237)
!20243 = !DILocation(line: 0, scope: !20237)
!20244 = !DILocation(line: 336, column: 20, scope: !20237)
!20245 = !DILocation(line: 336, column: 24, scope: !20237)
!20246 = !DILocation(line: 336, column: 3, scope: !20237)
!20247 = !DILocation(line: 337, column: 10, scope: !20237)
!20248 = !DILocation(line: 337, column: 3, scope: !20237)
!20249 = distinct !DISubprogram(name: "fts_load", scope: !1732, file: !1732, line: 550, type: !19406, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!20250 = !DILocalVariable(name: "sp", arg: 1, scope: !20249, file: !1732, line: 550, type: !1757)
!20251 = !DILocation(line: 550, column: 16, scope: !20249)
!20252 = !DILocalVariable(name: "p", arg: 2, scope: !20249, file: !1732, line: 550, type: !1835)
!20253 = !DILocation(line: 550, column: 37, scope: !20249)
!20254 = !DILocalVariable(name: "len", scope: !20249, file: !1732, line: 552, type: !52)
!20255 = !DILocation(line: 552, column: 25, scope: !20249)
!20256 = !DILocalVariable(name: "cp", scope: !20249, file: !1732, line: 553, type: !7)
!20257 = !DILocation(line: 553, column: 24, scope: !20249)
!20258 = !DILocation(line: 562, column: 32, scope: !20249)
!20259 = !DILocation(line: 562, column: 35, scope: !20249)
!20260 = !DILocation(line: 562, column: 15, scope: !20249)
!20261 = !DILocation(line: 562, column: 18, scope: !20249)
!20262 = !DILocation(line: 562, column: 30, scope: !20249)
!20263 = !DILocation(line: 562, column: 13, scope: !20249)
!20264 = !DILocation(line: 563, column: 17, scope: !20249)
!20265 = !DILocation(line: 563, column: 21, scope: !20249)
!20266 = !DILocation(line: 563, column: 31, scope: !20249)
!20267 = !DILocation(line: 563, column: 34, scope: !20249)
!20268 = !DILocation(line: 563, column: 9, scope: !20249)
!20269 = !DILocation(line: 563, column: 44, scope: !20249)
!20270 = !DILocation(line: 563, column: 48, scope: !20249)
!20271 = !DILocation(line: 564, column: 27, scope: !20272)
!20272 = distinct !DILexicalBlock(scope: !20249, file: !1732, line: 564, column: 13)
!20273 = !DILocation(line: 564, column: 30, scope: !20272)
!20274 = !DILocation(line: 564, column: 19, scope: !20272)
!20275 = !DILocation(line: 564, column: 17, scope: !20272)
!20276 = !DILocation(line: 564, column: 46, scope: !20272)
!20277 = !DILocation(line: 564, column: 50, scope: !20272)
!20278 = !DILocation(line: 564, column: 56, scope: !20272)
!20279 = !DILocation(line: 564, column: 59, scope: !20272)
!20280 = !DILocation(line: 564, column: 53, scope: !20272)
!20281 = !DILocation(line: 564, column: 68, scope: !20272)
!20282 = !DILocation(line: 564, column: 71, scope: !20272)
!20283 = !DILocation(line: 564, column: 13, scope: !20249)
!20284 = !DILocation(line: 565, column: 30, scope: !20285)
!20285 = distinct !DILexicalBlock(scope: !20272, file: !1732, line: 564, column: 79)
!20286 = !DILocation(line: 565, column: 23, scope: !20285)
!20287 = !DILocation(line: 565, column: 21, scope: !20285)
!20288 = !DILocation(line: 566, column: 25, scope: !20285)
!20289 = !DILocation(line: 566, column: 28, scope: !20285)
!20290 = !DILocation(line: 566, column: 17, scope: !20285)
!20291 = !DILocation(line: 566, column: 38, scope: !20285)
!20292 = !DILocation(line: 566, column: 42, scope: !20285)
!20293 = !DILocation(line: 566, column: 46, scope: !20285)
!20294 = !DILocation(line: 567, column: 34, scope: !20285)
!20295 = !DILocation(line: 567, column: 17, scope: !20285)
!20296 = !DILocation(line: 567, column: 20, scope: !20285)
!20297 = !DILocation(line: 567, column: 32, scope: !20285)
!20298 = !DILocation(line: 568, column: 9, scope: !20285)
!20299 = !DILocation(line: 569, column: 40, scope: !20249)
!20300 = !DILocation(line: 569, column: 44, scope: !20249)
!20301 = !DILocation(line: 569, column: 26, scope: !20249)
!20302 = !DILocation(line: 569, column: 29, scope: !20249)
!20303 = !DILocation(line: 569, column: 38, scope: !20249)
!20304 = !DILocation(line: 569, column: 9, scope: !20249)
!20305 = !DILocation(line: 569, column: 12, scope: !20249)
!20306 = !DILocation(line: 569, column: 24, scope: !20249)
!20307 = !DILocation(line: 570, column: 1, scope: !20249)
!20308 = distinct !DISubprogram(name: "leaf_optimization", scope: !1732, file: !1732, line: 792, type: !20309, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!20309 = !DISubroutineType(types: !20310)
!20310 = !{!1731, !1739, !5}
!20311 = !DILocalVariable(name: "p", arg: 1, scope: !20308, file: !1732, line: 792, type: !1739)
!20312 = !DILocation(line: 792, column: 34, scope: !20308)
!20313 = !DILocalVariable(name: "dir_fd", arg: 2, scope: !20308, file: !1732, line: 792, type: !5)
!20314 = !DILocation(line: 792, column: 41, scope: !20308)
!20315 = !DILocation(line: 794, column: 28, scope: !20308)
!20316 = !DILocation(line: 794, column: 31, scope: !20308)
!20317 = !DILocation(line: 794, column: 11, scope: !20308)
!20318 = !DILocation(line: 794, column: 3, scope: !20308)
!20319 = !DILocation(line: 800, column: 7, scope: !20320)
!20320 = distinct !DILexicalBlock(scope: !20308, file: !1732, line: 795, column: 5)
!20321 = !DILocation(line: 804, column: 7, scope: !20320)
!20322 = !DILocation(line: 808, column: 7, scope: !20320)
!20323 = !DILocation(line: 812, column: 7, scope: !20320)
!20324 = !DILocation(line: 818, column: 7, scope: !20320)
!20325 = !DILocation(line: 822, column: 7, scope: !20320)
!20326 = !DILocation(line: 825, column: 7, scope: !20320)
!20327 = !DILocation(line: 827, column: 1, scope: !20308)
!20328 = distinct !DISubprogram(name: "enter_dir", scope: !1839, file: !1839, line: 74, type: !20329, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!20329 = !DISubroutineType(types: !20330)
!20330 = !{!139, !1757, !1835}
!20331 = !DILocalVariable(name: "fts", arg: 1, scope: !20328, file: !1839, line: 74, type: !1757)
!20332 = !DILocation(line: 74, column: 17, scope: !20328)
!20333 = !DILocalVariable(name: "ent", arg: 2, scope: !20328, file: !1839, line: 74, type: !1835)
!20334 = !DILocation(line: 74, column: 30, scope: !20328)
!20335 = !DILocation(line: 76, column: 7, scope: !20336)
!20336 = distinct !DILexicalBlock(scope: !20328, file: !1839, line: 76, column: 7)
!20337 = !DILocation(line: 76, column: 12, scope: !20336)
!20338 = !DILocation(line: 76, column: 24, scope: !20336)
!20339 = !DILocation(line: 76, column: 7, scope: !20328)
!20340 = !DILocalVariable(name: "st", scope: !20341, file: !1839, line: 78, type: !1845)
!20341 = distinct !DILexicalBlock(scope: !20336, file: !1839, line: 77, column: 5)
!20342 = !DILocation(line: 78, column: 26, scope: !20341)
!20343 = !DILocation(line: 78, column: 31, scope: !20341)
!20344 = !DILocation(line: 78, column: 36, scope: !20341)
!20345 = !DILocalVariable(name: "ad", scope: !20341, file: !1839, line: 79, type: !1859)
!20346 = !DILocation(line: 79, column: 26, scope: !20341)
!20347 = !DILocation(line: 79, column: 31, scope: !20341)
!20348 = !DILocalVariable(name: "ad_from_table", scope: !20341, file: !1839, line: 80, type: !1859)
!20349 = !DILocation(line: 80, column: 26, scope: !20341)
!20350 = !DILocation(line: 82, column: 12, scope: !20351)
!20351 = distinct !DILexicalBlock(scope: !20341, file: !1839, line: 82, column: 11)
!20352 = !DILocation(line: 82, column: 11, scope: !20341)
!20353 = !DILocation(line: 83, column: 9, scope: !20351)
!20354 = !DILocation(line: 85, column: 17, scope: !20341)
!20355 = !DILocation(line: 85, column: 21, scope: !20341)
!20356 = !DILocation(line: 85, column: 7, scope: !20341)
!20357 = !DILocation(line: 85, column: 11, scope: !20341)
!20358 = !DILocation(line: 85, column: 15, scope: !20341)
!20359 = !DILocation(line: 86, column: 17, scope: !20341)
!20360 = !DILocation(line: 86, column: 21, scope: !20341)
!20361 = !DILocation(line: 86, column: 7, scope: !20341)
!20362 = !DILocation(line: 86, column: 11, scope: !20341)
!20363 = !DILocation(line: 86, column: 15, scope: !20341)
!20364 = !DILocation(line: 87, column: 21, scope: !20341)
!20365 = !DILocation(line: 87, column: 7, scope: !20341)
!20366 = !DILocation(line: 87, column: 11, scope: !20341)
!20367 = !DILocation(line: 87, column: 19, scope: !20341)
!20368 = !DILocation(line: 92, column: 36, scope: !20341)
!20369 = !DILocation(line: 92, column: 41, scope: !20341)
!20370 = !DILocation(line: 92, column: 51, scope: !20341)
!20371 = !DILocation(line: 92, column: 55, scope: !20341)
!20372 = !DILocation(line: 92, column: 23, scope: !20341)
!20373 = !DILocation(line: 92, column: 21, scope: !20341)
!20374 = !DILocation(line: 94, column: 11, scope: !20375)
!20375 = distinct !DILexicalBlock(scope: !20341, file: !1839, line: 94, column: 11)
!20376 = !DILocation(line: 94, column: 28, scope: !20375)
!20377 = !DILocation(line: 94, column: 25, scope: !20375)
!20378 = !DILocation(line: 94, column: 11, scope: !20341)
!20379 = !DILocation(line: 96, column: 17, scope: !20380)
!20380 = distinct !DILexicalBlock(scope: !20375, file: !1839, line: 95, column: 9)
!20381 = !DILocation(line: 96, column: 11, scope: !20380)
!20382 = !DILocation(line: 97, column: 16, scope: !20383)
!20383 = distinct !DILexicalBlock(scope: !20380, file: !1839, line: 97, column: 15)
!20384 = !DILocation(line: 97, column: 15, scope: !20380)
!20385 = !DILocation(line: 98, column: 13, scope: !20383)
!20386 = !DILocation(line: 102, column: 28, scope: !20380)
!20387 = !DILocation(line: 102, column: 43, scope: !20380)
!20388 = !DILocation(line: 102, column: 11, scope: !20380)
!20389 = !DILocation(line: 102, column: 16, scope: !20380)
!20390 = !DILocation(line: 102, column: 26, scope: !20380)
!20391 = !DILocation(line: 103, column: 11, scope: !20380)
!20392 = !DILocation(line: 103, column: 16, scope: !20380)
!20393 = !DILocation(line: 103, column: 25, scope: !20380)
!20394 = !DILocation(line: 104, column: 9, scope: !20380)
!20395 = !DILocation(line: 105, column: 5, scope: !20341)
!20396 = !DILocation(line: 108, column: 24, scope: !20397)
!20397 = distinct !DILexicalBlock(scope: !20398, file: !1839, line: 108, column: 11)
!20398 = distinct !DILexicalBlock(scope: !20336, file: !1839, line: 107, column: 5)
!20399 = !DILocation(line: 108, column: 29, scope: !20397)
!20400 = !DILocation(line: 108, column: 39, scope: !20397)
!20401 = !DILocation(line: 108, column: 46, scope: !20397)
!20402 = !DILocation(line: 108, column: 51, scope: !20397)
!20403 = !DILocation(line: 108, column: 11, scope: !20397)
!20404 = !DILocation(line: 108, column: 11, scope: !20398)
!20405 = !DILocation(line: 114, column: 28, scope: !20406)
!20406 = distinct !DILexicalBlock(scope: !20397, file: !1839, line: 109, column: 9)
!20407 = !DILocation(line: 114, column: 11, scope: !20406)
!20408 = !DILocation(line: 114, column: 16, scope: !20406)
!20409 = !DILocation(line: 114, column: 26, scope: !20406)
!20410 = !DILocation(line: 115, column: 11, scope: !20406)
!20411 = !DILocation(line: 115, column: 16, scope: !20406)
!20412 = !DILocation(line: 115, column: 25, scope: !20406)
!20413 = !DILocation(line: 116, column: 9, scope: !20406)
!20414 = !DILocation(line: 119, column: 3, scope: !20328)
!20415 = !DILocation(line: 120, column: 1, scope: !20328)
!20416 = distinct !DISubprogram(name: "cwd_advance_fd", scope: !1732, file: !1732, line: 305, type: !20417, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!20417 = !DISubroutineType(types: !20418)
!20418 = !{null, !1757, !5, !139}
!20419 = !DILocalVariable(name: "sp", arg: 1, scope: !20416, file: !1732, line: 305, type: !1757)
!20420 = !DILocation(line: 305, column: 22, scope: !20416)
!20421 = !DILocalVariable(name: "fd", arg: 2, scope: !20416, file: !1732, line: 305, type: !5)
!20422 = !DILocation(line: 305, column: 30, scope: !20416)
!20423 = !DILocalVariable(name: "chdir_down_one", arg: 3, scope: !20416, file: !1732, line: 305, type: !139)
!20424 = !DILocation(line: 305, column: 39, scope: !20416)
!20425 = !DILocalVariable(name: "old", scope: !20416, file: !1732, line: 307, type: !5)
!20426 = !DILocation(line: 307, column: 7, scope: !20416)
!20427 = !DILocation(line: 307, column: 13, scope: !20416)
!20428 = !DILocation(line: 307, column: 17, scope: !20416)
!20429 = !DILocation(line: 308, column: 3, scope: !20416)
!20430 = !DILocation(line: 308, column: 3, scope: !20431)
!20431 = distinct !DILexicalBlock(scope: !20432, file: !1732, line: 308, column: 3)
!20432 = distinct !DILexicalBlock(scope: !20416, file: !1732, line: 308, column: 3)
!20433 = !DILocation(line: 308, column: 3, scope: !20432)
!20434 = !DILocation(line: 310, column: 7, scope: !20435)
!20435 = distinct !DILexicalBlock(scope: !20416, file: !1732, line: 310, column: 7)
!20436 = !DILocation(line: 310, column: 7, scope: !20416)
!20437 = !DILocalVariable(name: "prev_fd_in_slot", scope: !20438, file: !1732, line: 314, type: !5)
!20438 = distinct !DILexicalBlock(scope: !20435, file: !1732, line: 311, column: 5)
!20439 = !DILocation(line: 314, column: 11, scope: !20438)
!20440 = !DILocation(line: 314, column: 43, scope: !20438)
!20441 = !DILocation(line: 314, column: 47, scope: !20438)
!20442 = !DILocation(line: 314, column: 60, scope: !20438)
!20443 = !DILocation(line: 314, column: 29, scope: !20438)
!20444 = !DILocation(line: 316, column: 16, scope: !20445)
!20445 = distinct !DILexicalBlock(scope: !20438, file: !1732, line: 316, column: 11)
!20446 = !DILocation(line: 316, column: 13, scope: !20445)
!20447 = !DILocation(line: 316, column: 11, scope: !20438)
!20448 = !DILocation(line: 317, column: 16, scope: !20445)
!20449 = !DILocation(line: 317, column: 9, scope: !20445)
!20450 = !DILocation(line: 318, column: 5, scope: !20438)
!20451 = !DILocation(line: 319, column: 15, scope: !20452)
!20452 = distinct !DILexicalBlock(scope: !20435, file: !1732, line: 319, column: 13)
!20453 = !DILocation(line: 319, column: 13, scope: !20435)
!20454 = !DILocation(line: 321, column: 16, scope: !20455)
!20455 = distinct !DILexicalBlock(scope: !20456, file: !1732, line: 321, column: 11)
!20456 = distinct !DILexicalBlock(scope: !20452, file: !1732, line: 320, column: 5)
!20457 = !DILocation(line: 321, column: 13, scope: !20455)
!20458 = !DILocation(line: 321, column: 11, scope: !20456)
!20459 = !DILocation(line: 322, column: 16, scope: !20455)
!20460 = !DILocation(line: 322, column: 9, scope: !20455)
!20461 = !DILocation(line: 323, column: 5, scope: !20456)
!20462 = !DILocation(line: 325, column: 20, scope: !20416)
!20463 = !DILocation(line: 325, column: 3, scope: !20416)
!20464 = !DILocation(line: 325, column: 7, scope: !20416)
!20465 = !DILocation(line: 325, column: 18, scope: !20416)
!20466 = !DILocation(line: 326, column: 1, scope: !20416)
!20467 = distinct !DISubprogram(name: "filesystem_type", scope: !1732, file: !1732, line: 709, type: !20468, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!20468 = !DISubroutineType(types: !20469)
!20469 = !{!1854, !1739, !5}
!20470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statfs", file: !20471, line: 24, size: 960, elements: !20472)
!20471 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/statfs.h", directory: "")
!20472 = !{!20473, !20474, !20475, !20477, !20478, !20479, !20481, !20482, !20488, !20489, !20490, !20491}
!20473 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !20470, file: !20471, line: 26, baseType: !1855, size: 64)
!20474 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !20470, file: !20471, line: 27, baseType: !1855, size: 64, offset: 64)
!20475 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !20470, file: !20471, line: 29, baseType: !20476, size: 64, offset: 128)
!20476 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt_t", file: !31, line: 162, baseType: !54)
!20477 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !20470, file: !20471, line: 30, baseType: !20476, size: 64, offset: 192)
!20478 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !20470, file: !20471, line: 31, baseType: !20476, size: 64, offset: 256)
!20479 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !20470, file: !20471, line: 32, baseType: !20480, size: 64, offset: 320)
!20480 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt_t", file: !31, line: 166, baseType: !54)
!20481 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !20470, file: !20471, line: 33, baseType: !20480, size: 64, offset: 384)
!20482 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !20470, file: !20471, line: 41, baseType: !20483, size: 64, offset: 448)
!20483 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsid_t", file: !31, line: 134, baseType: !20484)
!20484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !31, line: 134, size: 64, elements: !20485)
!20485 = !{!20486}
!20486 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !20484, file: !31, line: 134, baseType: !20487, size: 64)
!20487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !243)
!20488 = !DIDerivedType(tag: DW_TAG_member, name: "f_namelen", scope: !20470, file: !20471, line: 42, baseType: !1855, size: 64, offset: 512)
!20489 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !20470, file: !20471, line: 43, baseType: !1855, size: 64, offset: 576)
!20490 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !20470, file: !20471, line: 44, baseType: !1855, size: 64, offset: 640)
!20491 = !DIDerivedType(tag: DW_TAG_member, name: "f_spare", scope: !20470, file: !20471, line: 45, baseType: !20492, size: 256, offset: 704)
!20492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1855, size: 256, elements: !225)
!20493 = !DILocalVariable(name: "p", arg: 1, scope: !20467, file: !1732, line: 709, type: !1739)
!20494 = !DILocation(line: 709, column: 32, scope: !20467)
!20495 = !DILocalVariable(name: "fd", arg: 2, scope: !20467, file: !1732, line: 709, type: !5)
!20496 = !DILocation(line: 709, column: 39, scope: !20467)
!20497 = !DILocalVariable(name: "sp", scope: !20467, file: !1732, line: 711, type: !1757)
!20498 = !DILocation(line: 711, column: 8, scope: !20467)
!20499 = !DILocation(line: 711, column: 13, scope: !20467)
!20500 = !DILocation(line: 711, column: 16, scope: !20467)
!20501 = !DILocalVariable(name: "h", scope: !20467, file: !1732, line: 712, type: !1847)
!20502 = !DILocation(line: 712, column: 15, scope: !20467)
!20503 = !DILocation(line: 712, column: 19, scope: !20467)
!20504 = !DILocation(line: 712, column: 23, scope: !20467)
!20505 = !DILocalVariable(name: "ent", scope: !20467, file: !1732, line: 713, type: !1849)
!20506 = !DILocation(line: 713, column: 20, scope: !20467)
!20507 = !DILocalVariable(name: "fs_buf", scope: !20467, file: !1732, line: 714, type: !20470)
!20508 = !DILocation(line: 714, column: 17, scope: !20467)
!20509 = !DILocation(line: 718, column: 8, scope: !20510)
!20510 = distinct !DILexicalBlock(scope: !20467, file: !1732, line: 718, column: 7)
!20511 = !DILocation(line: 718, column: 7, scope: !20467)
!20512 = !DILocation(line: 719, column: 5, scope: !20510)
!20513 = !DILocation(line: 721, column: 9, scope: !20514)
!20514 = distinct !DILexicalBlock(scope: !20467, file: !1732, line: 721, column: 7)
!20515 = !DILocation(line: 721, column: 7, scope: !20467)
!20516 = !DILocation(line: 723, column: 9, scope: !20514)
!20517 = !DILocation(line: 722, column: 9, scope: !20514)
!20518 = !DILocation(line: 722, column: 13, scope: !20514)
!20519 = !DILocation(line: 723, column: 7, scope: !20514)
!20520 = !DILocation(line: 722, column: 7, scope: !20514)
!20521 = !DILocation(line: 722, column: 5, scope: !20514)
!20522 = !DILocation(line: 725, column: 7, scope: !20523)
!20523 = distinct !DILexicalBlock(scope: !20467, file: !1732, line: 725, column: 7)
!20524 = !DILocation(line: 725, column: 7, scope: !20467)
!20525 = !DILocalVariable(name: "tmp", scope: !20526, file: !1732, line: 727, type: !1850)
!20526 = distinct !DILexicalBlock(scope: !20523, file: !1732, line: 726, column: 5)
!20527 = !DILocation(line: 727, column: 23, scope: !20526)
!20528 = !DILocation(line: 728, column: 20, scope: !20526)
!20529 = !DILocation(line: 728, column: 23, scope: !20526)
!20530 = !DILocation(line: 728, column: 34, scope: !20526)
!20531 = !DILocation(line: 728, column: 11, scope: !20526)
!20532 = !DILocation(line: 728, column: 18, scope: !20526)
!20533 = !DILocation(line: 729, column: 26, scope: !20526)
!20534 = !DILocation(line: 729, column: 29, scope: !20526)
!20535 = !DILocation(line: 729, column: 13, scope: !20526)
!20536 = !DILocation(line: 729, column: 11, scope: !20526)
!20537 = !DILocation(line: 730, column: 11, scope: !20538)
!20538 = distinct !DILexicalBlock(scope: !20526, file: !1732, line: 730, column: 11)
!20539 = !DILocation(line: 730, column: 11, scope: !20526)
!20540 = !DILocation(line: 731, column: 16, scope: !20538)
!20541 = !DILocation(line: 731, column: 21, scope: !20538)
!20542 = !DILocation(line: 731, column: 9, scope: !20538)
!20543 = !DILocation(line: 732, column: 5, scope: !20526)
!20544 = !DILocation(line: 735, column: 7, scope: !20545)
!20545 = distinct !DILexicalBlock(scope: !20467, file: !1732, line: 735, column: 7)
!20546 = !DILocation(line: 735, column: 10, scope: !20545)
!20547 = !DILocation(line: 735, column: 14, scope: !20545)
!20548 = !DILocation(line: 735, column: 26, scope: !20545)
!20549 = !DILocation(line: 735, column: 17, scope: !20545)
!20550 = !DILocation(line: 735, column: 39, scope: !20545)
!20551 = !DILocation(line: 735, column: 7, scope: !20467)
!20552 = !DILocation(line: 736, column: 5, scope: !20545)
!20553 = !DILocation(line: 738, column: 7, scope: !20554)
!20554 = distinct !DILexicalBlock(scope: !20467, file: !1732, line: 738, column: 7)
!20555 = !DILocation(line: 738, column: 7, scope: !20467)
!20556 = !DILocalVariable(name: "t2", scope: !20557, file: !1732, line: 740, type: !1849)
!20557 = distinct !DILexicalBlock(scope: !20554, file: !1732, line: 739, column: 5)
!20558 = !DILocation(line: 740, column: 24, scope: !20557)
!20559 = !DILocation(line: 740, column: 29, scope: !20557)
!20560 = !DILocation(line: 741, column: 11, scope: !20561)
!20561 = distinct !DILexicalBlock(scope: !20557, file: !1732, line: 741, column: 11)
!20562 = !DILocation(line: 741, column: 11, scope: !20557)
!20563 = !DILocation(line: 743, column: 24, scope: !20564)
!20564 = distinct !DILexicalBlock(scope: !20561, file: !1732, line: 742, column: 9)
!20565 = !DILocation(line: 743, column: 27, scope: !20564)
!20566 = !DILocation(line: 743, column: 38, scope: !20564)
!20567 = !DILocation(line: 743, column: 11, scope: !20564)
!20568 = !DILocation(line: 743, column: 15, scope: !20564)
!20569 = !DILocation(line: 743, column: 22, scope: !20564)
!20570 = !DILocation(line: 744, column: 31, scope: !20564)
!20571 = !DILocation(line: 744, column: 11, scope: !20564)
!20572 = !DILocation(line: 744, column: 15, scope: !20564)
!20573 = !DILocation(line: 744, column: 22, scope: !20564)
!20574 = !DILocation(line: 746, column: 30, scope: !20564)
!20575 = !DILocation(line: 746, column: 33, scope: !20564)
!20576 = !DILocation(line: 746, column: 17, scope: !20564)
!20577 = !DILocation(line: 746, column: 15, scope: !20564)
!20578 = !DILocation(line: 747, column: 15, scope: !20579)
!20579 = distinct !DILexicalBlock(scope: !20564, file: !1732, line: 747, column: 15)
!20580 = !DILocation(line: 747, column: 15, scope: !20564)
!20581 = !DILocation(line: 748, column: 13, scope: !20579)
!20582 = !DILocation(line: 748, column: 13, scope: !20583)
!20583 = distinct !DILexicalBlock(scope: !20584, file: !1732, line: 748, column: 13)
!20584 = distinct !DILexicalBlock(scope: !20579, file: !1732, line: 748, column: 13)
!20585 = !DILocation(line: 748, column: 13, scope: !20584)
!20586 = !DILocation(line: 750, column: 19, scope: !20579)
!20587 = !DILocation(line: 750, column: 13, scope: !20579)
!20588 = !DILocation(line: 751, column: 9, scope: !20564)
!20589 = !DILocation(line: 752, column: 5, scope: !20557)
!20590 = !DILocation(line: 754, column: 17, scope: !20467)
!20591 = !DILocation(line: 754, column: 3, scope: !20467)
!20592 = !DILocation(line: 755, column: 1, scope: !20467)
!20593 = distinct !DISubprogram(name: "dev_type_hash", scope: !1732, file: !1732, line: 689, type: !706, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!20594 = !DILocalVariable(name: "x", arg: 1, scope: !20593, file: !1732, line: 689, type: !553)
!20595 = !DILocation(line: 689, column: 28, scope: !20593)
!20596 = !DILocalVariable(name: "table_size", arg: 2, scope: !20593, file: !1732, line: 689, type: !52)
!20597 = !DILocation(line: 689, column: 38, scope: !20593)
!20598 = !DILocalVariable(name: "ax", scope: !20593, file: !1732, line: 691, type: !1857)
!20599 = !DILocation(line: 691, column: 26, scope: !20593)
!20600 = !DILocation(line: 691, column: 31, scope: !20593)
!20601 = !DILocalVariable(name: "dev", scope: !20593, file: !1732, line: 692, type: !476)
!20602 = !DILocation(line: 692, column: 13, scope: !20593)
!20603 = !DILocation(line: 692, column: 19, scope: !20593)
!20604 = !DILocation(line: 692, column: 23, scope: !20593)
!20605 = !DILocation(line: 693, column: 10, scope: !20593)
!20606 = !DILocation(line: 693, column: 16, scope: !20593)
!20607 = !DILocation(line: 693, column: 14, scope: !20593)
!20608 = !DILocation(line: 693, column: 3, scope: !20593)
!20609 = distinct !DISubprogram(name: "dev_type_compare", scope: !1732, file: !1732, line: 697, type: !711, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!20610 = !DILocalVariable(name: "x", arg: 1, scope: !20609, file: !1732, line: 697, type: !553)
!20611 = !DILocation(line: 697, column: 31, scope: !20609)
!20612 = !DILocalVariable(name: "y", arg: 2, scope: !20609, file: !1732, line: 697, type: !553)
!20613 = !DILocation(line: 697, column: 46, scope: !20609)
!20614 = !DILocalVariable(name: "ax", scope: !20609, file: !1732, line: 699, type: !1857)
!20615 = !DILocation(line: 699, column: 26, scope: !20609)
!20616 = !DILocation(line: 699, column: 31, scope: !20609)
!20617 = !DILocalVariable(name: "ay", scope: !20609, file: !1732, line: 700, type: !1857)
!20618 = !DILocation(line: 700, column: 26, scope: !20609)
!20619 = !DILocation(line: 700, column: 31, scope: !20609)
!20620 = !DILocation(line: 701, column: 10, scope: !20609)
!20621 = !DILocation(line: 701, column: 14, scope: !20609)
!20622 = !DILocation(line: 701, column: 24, scope: !20609)
!20623 = !DILocation(line: 701, column: 28, scope: !20609)
!20624 = !DILocation(line: 701, column: 21, scope: !20609)
!20625 = !DILocation(line: 701, column: 3, scope: !20609)
!20626 = distinct !DISubprogram(name: "set_stat_type", scope: !1732, file: !1732, line: 1234, type: !20627, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!20627 = !DISubroutineType(types: !20628)
!20628 = !{null, !1868, !67}
!20629 = !DILocalVariable(name: "st", arg: 1, scope: !20626, file: !1732, line: 1234, type: !1868)
!20630 = !DILocation(line: 1234, column: 29, scope: !20626)
!20631 = !DILocalVariable(name: "dtype", arg: 2, scope: !20626, file: !1732, line: 1234, type: !67)
!20632 = !DILocation(line: 1234, column: 46, scope: !20626)
!20633 = !DILocalVariable(name: "type", scope: !20626, file: !1732, line: 1236, type: !236)
!20634 = !DILocation(line: 1236, column: 10, scope: !20626)
!20635 = !DILocation(line: 1237, column: 11, scope: !20626)
!20636 = !DILocation(line: 1237, column: 3, scope: !20626)
!20637 = !DILocation(line: 1240, column: 12, scope: !20638)
!20638 = distinct !DILexicalBlock(scope: !20626, file: !1732, line: 1238, column: 5)
!20639 = !DILocation(line: 1241, column: 7, scope: !20638)
!20640 = !DILocation(line: 1243, column: 12, scope: !20638)
!20641 = !DILocation(line: 1244, column: 7, scope: !20638)
!20642 = !DILocation(line: 1246, column: 12, scope: !20638)
!20643 = !DILocation(line: 1247, column: 7, scope: !20638)
!20644 = !DILocation(line: 1249, column: 12, scope: !20638)
!20645 = !DILocation(line: 1250, column: 7, scope: !20638)
!20646 = !DILocation(line: 1252, column: 12, scope: !20638)
!20647 = !DILocation(line: 1253, column: 7, scope: !20638)
!20648 = !DILocation(line: 1255, column: 12, scope: !20638)
!20649 = !DILocation(line: 1256, column: 7, scope: !20638)
!20650 = !DILocation(line: 1258, column: 12, scope: !20638)
!20651 = !DILocation(line: 1259, column: 7, scope: !20638)
!20652 = !DILocation(line: 1261, column: 12, scope: !20638)
!20653 = !DILocation(line: 1262, column: 5, scope: !20638)
!20654 = !DILocation(line: 1263, column: 17, scope: !20626)
!20655 = !DILocation(line: 1263, column: 3, scope: !20626)
!20656 = !DILocation(line: 1263, column: 7, scope: !20626)
!20657 = !DILocation(line: 1263, column: 15, scope: !20626)
!20658 = !DILocation(line: 1264, column: 1, scope: !20626)
!20659 = distinct !DISubprogram(name: "dirent_inode_sort_may_be_useful", scope: !1732, file: !1732, line: 762, type: !20660, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!20660 = !DISubroutineType(types: !20661)
!20661 = !{!139, !1739, !5}
!20662 = !DILocalVariable(name: "p", arg: 1, scope: !20659, file: !1732, line: 762, type: !1739)
!20663 = !DILocation(line: 762, column: 48, scope: !20659)
!20664 = !DILocalVariable(name: "dir_fd", arg: 2, scope: !20659, file: !1732, line: 762, type: !5)
!20665 = !DILocation(line: 762, column: 55, scope: !20659)
!20666 = !DILocation(line: 770, column: 28, scope: !20659)
!20667 = !DILocation(line: 770, column: 31, scope: !20659)
!20668 = !DILocation(line: 770, column: 11, scope: !20659)
!20669 = !DILocation(line: 770, column: 3, scope: !20659)
!20670 = !DILocation(line: 777, column: 7, scope: !20671)
!20671 = distinct !DILexicalBlock(scope: !20659, file: !1732, line: 771, column: 5)
!20672 = !DILocation(line: 780, column: 7, scope: !20671)
!20673 = !DILocation(line: 782, column: 1, scope: !20659)
!20674 = distinct !DISubprogram(name: "fts_padjust", scope: !1732, file: !1732, line: 1997, type: !19406, scopeLine: 1998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!20675 = !DILocalVariable(name: "sp", arg: 1, scope: !20674, file: !1732, line: 1997, type: !1757)
!20676 = !DILocation(line: 1997, column: 19, scope: !20674)
!20677 = !DILocalVariable(name: "head", arg: 2, scope: !20674, file: !1732, line: 1997, type: !1835)
!20678 = !DILocation(line: 1997, column: 31, scope: !20674)
!20679 = !DILocalVariable(name: "p", scope: !20674, file: !1732, line: 1999, type: !1835)
!20680 = !DILocation(line: 1999, column: 17, scope: !20674)
!20681 = !DILocalVariable(name: "addr", scope: !20674, file: !1732, line: 2000, type: !7)
!20682 = !DILocation(line: 2000, column: 15, scope: !20674)
!20683 = !DILocation(line: 2000, column: 22, scope: !20674)
!20684 = !DILocation(line: 2000, column: 26, scope: !20674)
!20685 = !DILocation(line: 2010, column: 18, scope: !20686)
!20686 = distinct !DILexicalBlock(scope: !20674, file: !1732, line: 2010, column: 9)
!20687 = !DILocation(line: 2010, column: 22, scope: !20686)
!20688 = !DILocation(line: 2010, column: 16, scope: !20686)
!20689 = !DILocation(line: 2010, column: 14, scope: !20686)
!20690 = !DILocation(line: 2010, column: 33, scope: !20691)
!20691 = distinct !DILexicalBlock(scope: !20686, file: !1732, line: 2010, column: 9)
!20692 = !DILocation(line: 2010, column: 9, scope: !20686)
!20693 = !DILocation(line: 2011, column: 17, scope: !20691)
!20694 = !DILocation(line: 2011, column: 17, scope: !20695)
!20695 = distinct !DILexicalBlock(scope: !20696, file: !1732, line: 2011, column: 17)
!20696 = distinct !DILexicalBlock(scope: !20691, file: !1732, line: 2011, column: 17)
!20697 = !DILocation(line: 2011, column: 17, scope: !20696)
!20698 = !DILocation(line: 2011, column: 17, scope: !20699)
!20699 = distinct !DILexicalBlock(scope: !20695, file: !1732, line: 2011, column: 17)
!20700 = !DILocation(line: 2010, column: 40, scope: !20691)
!20701 = !DILocation(line: 2010, column: 43, scope: !20691)
!20702 = !DILocation(line: 2010, column: 38, scope: !20691)
!20703 = !DILocation(line: 2010, column: 9, scope: !20691)
!20704 = distinct !{!20704, !20692, !20705}
!20705 = !DILocation(line: 2011, column: 17, scope: !20686)
!20706 = !DILocation(line: 2014, column: 18, scope: !20707)
!20707 = distinct !DILexicalBlock(scope: !20674, file: !1732, line: 2014, column: 9)
!20708 = !DILocation(line: 2014, column: 16, scope: !20707)
!20709 = !DILocation(line: 2014, column: 14, scope: !20707)
!20710 = !DILocation(line: 2014, column: 24, scope: !20711)
!20711 = distinct !DILexicalBlock(scope: !20707, file: !1732, line: 2014, column: 9)
!20712 = !DILocation(line: 2014, column: 27, scope: !20711)
!20713 = !DILocation(line: 2014, column: 37, scope: !20711)
!20714 = !DILocation(line: 2014, column: 9, scope: !20707)
!20715 = !DILocation(line: 2015, column: 17, scope: !20716)
!20716 = distinct !DILexicalBlock(scope: !20711, file: !1732, line: 2014, column: 56)
!20717 = !DILocation(line: 2015, column: 17, scope: !20718)
!20718 = distinct !DILexicalBlock(scope: !20719, file: !1732, line: 2015, column: 17)
!20719 = distinct !DILexicalBlock(scope: !20716, file: !1732, line: 2015, column: 17)
!20720 = !DILocation(line: 2015, column: 17, scope: !20719)
!20721 = !DILocation(line: 2015, column: 17, scope: !20722)
!20722 = distinct !DILexicalBlock(scope: !20718, file: !1732, line: 2015, column: 17)
!20723 = !DILocation(line: 2016, column: 21, scope: !20716)
!20724 = !DILocation(line: 2016, column: 24, scope: !20716)
!20725 = !DILocation(line: 2016, column: 35, scope: !20716)
!20726 = !DILocation(line: 2016, column: 38, scope: !20716)
!20727 = !DILocation(line: 2016, column: 49, scope: !20716)
!20728 = !DILocation(line: 2016, column: 52, scope: !20716)
!20729 = !DILocation(line: 2016, column: 19, scope: !20716)
!20730 = !DILocation(line: 2014, column: 9, scope: !20711)
!20731 = distinct !{!20731, !20714, !20732}
!20732 = !DILocation(line: 2017, column: 9, scope: !20707)
!20733 = !DILocation(line: 2018, column: 1, scope: !20674)
!20734 = distinct !DISubprogram(name: "fts_compare_ino", scope: !1732, file: !1732, line: 1225, type: !1773, scopeLine: 1226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!20735 = !DILocalVariable(name: "a", arg: 1, scope: !20734, file: !1732, line: 1225, type: !1775)
!20736 = !DILocation(line: 1225, column: 41, scope: !20734)
!20737 = !DILocalVariable(name: "b", arg: 2, scope: !20734, file: !1732, line: 1225, type: !1775)
!20738 = !DILocation(line: 1225, column: 67, scope: !20734)
!20739 = !DILocation(line: 1227, column: 11, scope: !20734)
!20740 = !DILocation(line: 1227, column: 17, scope: !20734)
!20741 = !DILocation(line: 1227, column: 28, scope: !20734)
!20742 = !DILocation(line: 1227, column: 37, scope: !20734)
!20743 = !DILocation(line: 1227, column: 43, scope: !20734)
!20744 = !DILocation(line: 1227, column: 54, scope: !20734)
!20745 = !DILocation(line: 1227, column: 35, scope: !20734)
!20746 = !DILocation(line: 1228, column: 13, scope: !20734)
!20747 = !DILocation(line: 1228, column: 19, scope: !20734)
!20748 = !DILocation(line: 1228, column: 30, scope: !20734)
!20749 = !DILocation(line: 1228, column: 39, scope: !20734)
!20750 = !DILocation(line: 1228, column: 45, scope: !20734)
!20751 = !DILocation(line: 1228, column: 56, scope: !20734)
!20752 = !DILocation(line: 1228, column: 37, scope: !20734)
!20753 = !DILocation(line: 1227, column: 3, scope: !20734)
!20754 = distinct !DISubprogram(name: "rpl_fts_set", scope: !1732, file: !1732, line: 1130, type: !20755, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!20755 = !DISubroutineType(types: !20756)
!20756 = !{!5, !1757, !1835, !5}
!20757 = !DILocalVariable(name: "sp", arg: 1, scope: !20754, file: !1732, line: 1130, type: !1757)
!20758 = !DILocation(line: 1130, column: 14, scope: !20754)
!20759 = !DILocalVariable(name: "p", arg: 2, scope: !20754, file: !1732, line: 1130, type: !1835)
!20760 = !DILocation(line: 1130, column: 37, scope: !20754)
!20761 = !DILocalVariable(name: "instr", arg: 3, scope: !20754, file: !1732, line: 1130, type: !5)
!20762 = !DILocation(line: 1130, column: 44, scope: !20754)
!20763 = !DILocation(line: 1132, column: 13, scope: !20764)
!20764 = distinct !DILexicalBlock(scope: !20754, file: !1732, line: 1132, column: 13)
!20765 = !DILocation(line: 1132, column: 19, scope: !20764)
!20766 = !DILocation(line: 1132, column: 24, scope: !20764)
!20767 = !DILocation(line: 1132, column: 27, scope: !20764)
!20768 = !DILocation(line: 1132, column: 33, scope: !20764)
!20769 = !DILocation(line: 1132, column: 46, scope: !20764)
!20770 = !DILocation(line: 1132, column: 49, scope: !20764)
!20771 = !DILocation(line: 1132, column: 55, scope: !20764)
!20772 = !DILocation(line: 1132, column: 69, scope: !20764)
!20773 = !DILocation(line: 1133, column: 13, scope: !20764)
!20774 = !DILocation(line: 1133, column: 19, scope: !20764)
!20775 = !DILocation(line: 1133, column: 34, scope: !20764)
!20776 = !DILocation(line: 1133, column: 37, scope: !20764)
!20777 = !DILocation(line: 1133, column: 43, scope: !20764)
!20778 = !DILocation(line: 1132, column: 13, scope: !20754)
!20779 = !DILocation(line: 1134, column: 17, scope: !20780)
!20780 = distinct !DILexicalBlock(scope: !20764, file: !1732, line: 1133, column: 56)
!20781 = !DILocation(line: 1135, column: 17, scope: !20780)
!20782 = !DILocation(line: 1137, column: 24, scope: !20754)
!20783 = !DILocation(line: 1137, column: 9, scope: !20754)
!20784 = !DILocation(line: 1137, column: 12, scope: !20754)
!20785 = !DILocation(line: 1137, column: 22, scope: !20754)
!20786 = !DILocation(line: 1138, column: 9, scope: !20754)
!20787 = !DILocation(line: 1139, column: 1, scope: !20754)
!20788 = distinct !DISubprogram(name: "rpl_fts_children", scope: !1732, file: !1732, line: 1142, type: !19616, scopeLine: 1143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1728, retainedNodes: !213)
!20789 = !DILocalVariable(name: "sp", arg: 1, scope: !20788, file: !1732, line: 1142, type: !1757)
!20790 = !DILocation(line: 1142, column: 29, scope: !20788)
!20791 = !DILocalVariable(name: "instr", arg: 2, scope: !20788, file: !1732, line: 1142, type: !5)
!20792 = !DILocation(line: 1142, column: 37, scope: !20788)
!20793 = !DILocalVariable(name: "p", scope: !20788, file: !1732, line: 1144, type: !1835)
!20794 = !DILocation(line: 1144, column: 26, scope: !20788)
!20795 = !DILocalVariable(name: "fd", scope: !20788, file: !1732, line: 1145, type: !5)
!20796 = !DILocation(line: 1145, column: 13, scope: !20788)
!20797 = !DILocation(line: 1147, column: 13, scope: !20798)
!20798 = distinct !DILexicalBlock(scope: !20788, file: !1732, line: 1147, column: 13)
!20799 = !DILocation(line: 1147, column: 19, scope: !20798)
!20800 = !DILocation(line: 1147, column: 24, scope: !20798)
!20801 = !DILocation(line: 1147, column: 27, scope: !20798)
!20802 = !DILocation(line: 1147, column: 33, scope: !20798)
!20803 = !DILocation(line: 1147, column: 13, scope: !20788)
!20804 = !DILocation(line: 1148, column: 17, scope: !20805)
!20805 = distinct !DILexicalBlock(scope: !20798, file: !1732, line: 1147, column: 50)
!20806 = !DILocation(line: 1149, column: 17, scope: !20805)
!20807 = !DILocation(line: 1153, column: 13, scope: !20788)
!20808 = !DILocation(line: 1153, column: 17, scope: !20788)
!20809 = !DILocation(line: 1153, column: 11, scope: !20788)
!20810 = !DILocation(line: 1159, column: 9, scope: !20788)
!20811 = !DILocation(line: 1162, column: 13, scope: !20812)
!20812 = distinct !DILexicalBlock(scope: !20788, file: !1732, line: 1162, column: 13)
!20813 = !DILocation(line: 1162, column: 13, scope: !20788)
!20814 = !DILocation(line: 1163, column: 17, scope: !20812)
!20815 = !DILocation(line: 1166, column: 13, scope: !20816)
!20816 = distinct !DILexicalBlock(scope: !20788, file: !1732, line: 1166, column: 13)
!20817 = !DILocation(line: 1166, column: 16, scope: !20816)
!20818 = !DILocation(line: 1166, column: 25, scope: !20816)
!20819 = !DILocation(line: 1166, column: 13, scope: !20788)
!20820 = !DILocation(line: 1167, column: 25, scope: !20816)
!20821 = !DILocation(line: 1167, column: 28, scope: !20816)
!20822 = !DILocation(line: 1167, column: 17, scope: !20816)
!20823 = !DILocation(line: 1174, column: 13, scope: !20824)
!20824 = distinct !DILexicalBlock(scope: !20788, file: !1732, line: 1174, column: 13)
!20825 = !DILocation(line: 1174, column: 16, scope: !20824)
!20826 = !DILocation(line: 1174, column: 25, scope: !20824)
!20827 = !DILocation(line: 1174, column: 13, scope: !20788)
!20828 = !DILocation(line: 1175, column: 17, scope: !20824)
!20829 = !DILocation(line: 1178, column: 13, scope: !20830)
!20830 = distinct !DILexicalBlock(scope: !20788, file: !1732, line: 1178, column: 13)
!20831 = !DILocation(line: 1178, column: 17, scope: !20830)
!20832 = !DILocation(line: 1178, column: 27, scope: !20830)
!20833 = !DILocation(line: 1178, column: 13, scope: !20788)
!20834 = !DILocation(line: 1179, column: 27, scope: !20830)
!20835 = !DILocation(line: 1179, column: 31, scope: !20830)
!20836 = !DILocation(line: 1179, column: 17, scope: !20830)
!20837 = !DILocation(line: 1181, column: 13, scope: !20838)
!20838 = distinct !DILexicalBlock(scope: !20788, file: !1732, line: 1181, column: 13)
!20839 = !DILocation(line: 1181, column: 19, scope: !20838)
!20840 = !DILocation(line: 1181, column: 13, scope: !20788)
!20841 = !DILocation(line: 1182, column: 17, scope: !20842)
!20842 = distinct !DILexicalBlock(scope: !20838, file: !1732, line: 1181, column: 36)
!20843 = !DILocation(line: 1183, column: 23, scope: !20842)
!20844 = !DILocation(line: 1184, column: 9, scope: !20842)
!20845 = !DILocation(line: 1185, column: 23, scope: !20838)
!20846 = !DILocation(line: 1194, column: 13, scope: !20847)
!20847 = distinct !DILexicalBlock(scope: !20788, file: !1732, line: 1194, column: 13)
!20848 = !DILocation(line: 1194, column: 16, scope: !20847)
!20849 = !DILocation(line: 1194, column: 26, scope: !20847)
!20850 = !DILocation(line: 1194, column: 43, scope: !20847)
!20851 = !DILocation(line: 1194, column: 46, scope: !20847)
!20852 = !DILocation(line: 1194, column: 49, scope: !20847)
!20853 = !DILocation(line: 1194, column: 64, scope: !20847)
!20854 = !DILocation(line: 1194, column: 71, scope: !20847)
!20855 = !DILocation(line: 1195, column: 13, scope: !20847)
!20856 = !DILocation(line: 1194, column: 13, scope: !20788)
!20857 = !DILocation(line: 1196, column: 51, scope: !20847)
!20858 = !DILocation(line: 1196, column: 55, scope: !20847)
!20859 = !DILocation(line: 1196, column: 41, scope: !20847)
!20860 = !DILocation(line: 1196, column: 25, scope: !20847)
!20861 = !DILocation(line: 1196, column: 29, scope: !20847)
!20862 = !DILocation(line: 1196, column: 39, scope: !20847)
!20863 = !DILocation(line: 1196, column: 17, scope: !20847)
!20864 = !DILocation(line: 1198, column: 28, scope: !20865)
!20865 = distinct !DILexicalBlock(scope: !20788, file: !1732, line: 1198, column: 13)
!20866 = !DILocation(line: 1198, column: 19, scope: !20865)
!20867 = !DILocation(line: 1198, column: 17, scope: !20865)
!20868 = !DILocation(line: 1198, column: 38, scope: !20865)
!20869 = !DILocation(line: 1198, column: 13, scope: !20788)
!20870 = !DILocation(line: 1199, column: 25, scope: !20865)
!20871 = !DILocation(line: 1199, column: 29, scope: !20865)
!20872 = !DILocation(line: 1199, column: 39, scope: !20865)
!20873 = !DILocation(line: 1199, column: 17, scope: !20865)
!20874 = !DILocation(line: 1200, column: 35, scope: !20788)
!20875 = !DILocation(line: 1200, column: 39, scope: !20788)
!20876 = !DILocation(line: 1200, column: 25, scope: !20788)
!20877 = !DILocation(line: 1200, column: 9, scope: !20788)
!20878 = !DILocation(line: 1200, column: 13, scope: !20788)
!20879 = !DILocation(line: 1200, column: 23, scope: !20788)
!20880 = !DILocation(line: 1201, column: 13, scope: !20881)
!20881 = distinct !DILexicalBlock(scope: !20788, file: !1732, line: 1201, column: 13)
!20882 = !DILocation(line: 1201, column: 13, scope: !20788)
!20883 = !DILocation(line: 1203, column: 29, scope: !20884)
!20884 = distinct !DILexicalBlock(scope: !20881, file: !1732, line: 1202, column: 11)
!20885 = !DILocation(line: 1203, column: 33, scope: !20884)
!20886 = !DILocation(line: 1203, column: 13, scope: !20884)
!20887 = !DILocation(line: 1204, column: 11, scope: !20884)
!20888 = !DILocation(line: 1207, column: 24, scope: !20889)
!20889 = distinct !DILexicalBlock(scope: !20890, file: !1732, line: 1207, column: 17)
!20890 = distinct !DILexicalBlock(scope: !20881, file: !1732, line: 1206, column: 11)
!20891 = !DILocation(line: 1207, column: 17, scope: !20889)
!20892 = !DILocation(line: 1207, column: 17, scope: !20890)
!20893 = !DILocalVariable(name: "saved_errno", scope: !20894, file: !1732, line: 1209, type: !5)
!20894 = distinct !DILexicalBlock(scope: !20889, file: !1732, line: 1208, column: 15)
!20895 = !DILocation(line: 1209, column: 21, scope: !20894)
!20896 = !DILocation(line: 1209, column: 35, scope: !20894)
!20897 = !DILocation(line: 1210, column: 24, scope: !20894)
!20898 = !DILocation(line: 1210, column: 17, scope: !20894)
!20899 = !DILocation(line: 1211, column: 17, scope: !20894)
!20900 = !DILocation(line: 1212, column: 17, scope: !20894)
!20901 = !DILocation(line: 1214, column: 20, scope: !20890)
!20902 = !DILocation(line: 1214, column: 13, scope: !20890)
!20903 = !DILocation(line: 1216, column: 17, scope: !20788)
!20904 = !DILocation(line: 1216, column: 21, scope: !20788)
!20905 = !DILocation(line: 1216, column: 9, scope: !20788)
!20906 = !DILocation(line: 1217, column: 1, scope: !20788)
!20907 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !20908, file: !20908, line: 461, type: !20909, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1870, retainedNodes: !213)
!20908 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mohamad/clone/coreutils")
!20909 = !DISubroutineType(types: !20910)
!20910 = !{!52, !20911, !113, !52, !20912}
!20911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!20912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20913, size: 64)
!20913 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !812, line: 106, baseType: !20914)
!20914 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !812, line: 94, baseType: !20915)
!20915 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 82, size: 64, elements: !20916)
!20916 = !{!20917, !20918}
!20917 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !20915, file: !812, line: 84, baseType: !5, size: 32)
!20918 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !20915, file: !812, line: 93, baseType: !20919, size: 32, offset: 32)
!20919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !20915, file: !812, line: 85, size: 32, elements: !20920)
!20920 = !{!20921, !20922}
!20921 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !20919, file: !812, line: 88, baseType: !67, size: 32)
!20922 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !20919, file: !812, line: 92, baseType: !224, size: 32)
!20923 = !DILocalVariable(name: "pwc", arg: 1, scope: !20907, file: !20908, line: 461, type: !20911)
!20924 = !DILocation(line: 461, column: 23, scope: !20907)
!20925 = !DILocalVariable(name: "s", arg: 2, scope: !20907, file: !20908, line: 461, type: !113)
!20926 = !DILocation(line: 461, column: 40, scope: !20907)
!20927 = !DILocalVariable(name: "n", arg: 3, scope: !20907, file: !20908, line: 461, type: !52)
!20928 = !DILocation(line: 461, column: 50, scope: !20907)
!20929 = !DILocalVariable(name: "ps", arg: 4, scope: !20907, file: !20908, line: 461, type: !20912)
!20930 = !DILocation(line: 461, column: 64, scope: !20907)
!20931 = !DILocalVariable(name: "ret", scope: !20907, file: !20908, line: 463, type: !52)
!20932 = !DILocation(line: 463, column: 10, scope: !20907)
!20933 = !DILocalVariable(name: "wc", scope: !20907, file: !20908, line: 464, type: !822)
!20934 = !DILocation(line: 464, column: 11, scope: !20907)
!20935 = !DILocation(line: 480, column: 9, scope: !20936)
!20936 = distinct !DILexicalBlock(scope: !20907, file: !20908, line: 480, column: 7)
!20937 = !DILocation(line: 480, column: 7, scope: !20907)
!20938 = !DILocation(line: 481, column: 9, scope: !20936)
!20939 = !DILocation(line: 481, column: 5, scope: !20936)
!20940 = !DILocation(line: 515, column: 18, scope: !20907)
!20941 = !DILocation(line: 515, column: 23, scope: !20907)
!20942 = !DILocation(line: 515, column: 26, scope: !20907)
!20943 = !DILocation(line: 515, column: 29, scope: !20907)
!20944 = !DILocation(line: 515, column: 9, scope: !20907)
!20945 = !DILocation(line: 515, column: 7, scope: !20907)
!20946 = !DILocation(line: 523, column: 22, scope: !20947)
!20947 = distinct !DILexicalBlock(scope: !20907, file: !20908, line: 523, column: 7)
!20948 = !DILocation(line: 523, column: 19, scope: !20947)
!20949 = !DILocation(line: 523, column: 26, scope: !20947)
!20950 = !DILocation(line: 523, column: 29, scope: !20947)
!20951 = !DILocation(line: 523, column: 31, scope: !20947)
!20952 = !DILocation(line: 523, column: 36, scope: !20947)
!20953 = !DILocation(line: 523, column: 41, scope: !20947)
!20954 = !DILocation(line: 523, column: 7, scope: !20907)
!20955 = !DILocalVariable(name: "uc", scope: !20956, file: !20908, line: 525, type: !451)
!20956 = distinct !DILexicalBlock(scope: !20947, file: !20908, line: 524, column: 5)
!20957 = !DILocation(line: 525, column: 21, scope: !20956)
!20958 = !DILocation(line: 525, column: 27, scope: !20956)
!20959 = !DILocation(line: 525, column: 26, scope: !20956)
!20960 = !DILocation(line: 526, column: 14, scope: !20956)
!20961 = !DILocation(line: 526, column: 8, scope: !20956)
!20962 = !DILocation(line: 526, column: 12, scope: !20956)
!20963 = !DILocation(line: 527, column: 7, scope: !20956)
!20964 = !DILocation(line: 531, column: 10, scope: !20907)
!20965 = !DILocation(line: 531, column: 3, scope: !20907)
!20966 = !DILocation(line: 532, column: 1, scope: !20907)
!20967 = distinct !DISubprogram(name: "free_permission_context", scope: !20968, file: !20968, line: 479, type: !20969, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1873, retainedNodes: !213)
!20968 = !DIFile(filename: "lib/acl-internal.c", directory: "/home/mohamad/clone/coreutils")
!20969 = !DISubroutineType(types: !20970)
!20970 = !{null, !20971}
!20971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20972, size: 64)
!20972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !12877, line: 260, size: 32, elements: !20973)
!20973 = !{!20974}
!20974 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !20972, file: !12877, line: 261, baseType: !236, size: 32)
!20975 = !DILocalVariable(name: "ctx", arg: 1, scope: !20967, file: !20968, line: 479, type: !20971)
!20976 = !DILocation(line: 479, column: 53, scope: !20967)
!20977 = !DILocation(line: 507, column: 1, scope: !20967)
!20978 = distinct !DISubprogram(name: "get_permissions", scope: !20979, file: !20979, line: 33, type: !20980, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1875, retainedNodes: !213)
!20979 = !DIFile(filename: "lib/get-permissions.c", directory: "/home/mohamad/clone/coreutils")
!20980 = !DISubroutineType(types: !20981)
!20981 = !{!5, !113, !5, !236, !20982}
!20982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20983, size: 64)
!20983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !12877, line: 260, size: 32, elements: !20984)
!20984 = !{!20985}
!20985 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !20983, file: !12877, line: 261, baseType: !236, size: 32)
!20986 = !DILocalVariable(name: "name", arg: 1, scope: !20978, file: !20979, line: 33, type: !113)
!20987 = !DILocation(line: 33, column: 30, scope: !20978)
!20988 = !DILocalVariable(name: "desc", arg: 2, scope: !20978, file: !20979, line: 33, type: !5)
!20989 = !DILocation(line: 33, column: 40, scope: !20978)
!20990 = !DILocalVariable(name: "mode", arg: 3, scope: !20978, file: !20979, line: 33, type: !236)
!20991 = !DILocation(line: 33, column: 53, scope: !20978)
!20992 = !DILocalVariable(name: "ctx", arg: 4, scope: !20978, file: !20979, line: 34, type: !20982)
!20993 = !DILocation(line: 34, column: 45, scope: !20978)
!20994 = !DILocation(line: 36, column: 11, scope: !20978)
!20995 = !DILocation(line: 36, column: 3, scope: !20978)
!20996 = !DILocation(line: 37, column: 15, scope: !20978)
!20997 = !DILocation(line: 37, column: 3, scope: !20978)
!20998 = !DILocation(line: 37, column: 8, scope: !20978)
!20999 = !DILocation(line: 37, column: 13, scope: !20978)
!21000 = !DILocation(line: 289, column: 3, scope: !20978)
!21001 = distinct !DISubprogram(name: "chmod_or_fchmod", scope: !21002, file: !21002, line: 760, type: !9046, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1877, retainedNodes: !213)
!21002 = !DIFile(filename: "lib/set-permissions.c", directory: "/home/mohamad/clone/coreutils")
!21003 = !DILocalVariable(name: "name", arg: 1, scope: !21001, file: !21002, line: 760, type: !113)
!21004 = !DILocation(line: 760, column: 30, scope: !21001)
!21005 = !DILocalVariable(name: "desc", arg: 2, scope: !21001, file: !21002, line: 760, type: !5)
!21006 = !DILocation(line: 760, column: 40, scope: !21001)
!21007 = !DILocalVariable(name: "mode", arg: 3, scope: !21001, file: !21002, line: 760, type: !236)
!21008 = !DILocation(line: 760, column: 53, scope: !21001)
!21009 = !DILocation(line: 762, column: 22, scope: !21010)
!21010 = distinct !DILexicalBlock(scope: !21001, file: !21002, line: 762, column: 7)
!21011 = !DILocation(line: 762, column: 27, scope: !21010)
!21012 = !DILocation(line: 762, column: 7, scope: !21001)
!21013 = !DILocation(line: 763, column: 20, scope: !21010)
!21014 = !DILocation(line: 763, column: 26, scope: !21010)
!21015 = !DILocation(line: 763, column: 12, scope: !21010)
!21016 = !DILocation(line: 763, column: 5, scope: !21010)
!21017 = !DILocation(line: 765, column: 19, scope: !21010)
!21018 = !DILocation(line: 765, column: 25, scope: !21010)
!21019 = !DILocation(line: 765, column: 12, scope: !21010)
!21020 = !DILocation(line: 765, column: 5, scope: !21010)
!21021 = !DILocation(line: 766, column: 1, scope: !21001)
!21022 = distinct !DISubprogram(name: "set_permissions", scope: !21002, file: !21002, line: 776, type: !21023, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1877, retainedNodes: !213)
!21023 = !DISubroutineType(types: !21024)
!21024 = !{!5, !21025, !113, !5}
!21025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21026, size: 64)
!21026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !12877, line: 260, size: 32, elements: !21027)
!21027 = !{!21028}
!21028 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !21026, file: !12877, line: 261, baseType: !236, size: 32)
!21029 = !DILocalVariable(name: "ctx", arg: 1, scope: !21022, file: !21002, line: 776, type: !21025)
!21030 = !DILocation(line: 776, column: 45, scope: !21022)
!21031 = !DILocalVariable(name: "name", arg: 2, scope: !21022, file: !21002, line: 776, type: !113)
!21032 = !DILocation(line: 776, column: 62, scope: !21022)
!21033 = !DILocalVariable(name: "desc", arg: 3, scope: !21022, file: !21002, line: 776, type: !5)
!21034 = !DILocation(line: 776, column: 72, scope: !21022)
!21035 = !DILocalVariable(name: "acls_set", scope: !21022, file: !21002, line: 778, type: !139)
!21036 = !DILocation(line: 778, column: 8, scope: !21022)
!21037 = !DILocalVariable(name: "early_chmod", scope: !21022, file: !21002, line: 779, type: !139)
!21038 = !DILocation(line: 779, column: 8, scope: !21022)
!21039 = !DILocalVariable(name: "must_chmod", scope: !21022, file: !21002, line: 780, type: !139)
!21040 = !DILocation(line: 780, column: 8, scope: !21022)
!21041 = !DILocalVariable(name: "ret", scope: !21022, file: !21002, line: 781, type: !5)
!21042 = !DILocation(line: 781, column: 7, scope: !21022)
!21043 = !DILocation(line: 801, column: 15, scope: !21022)
!21044 = !DILocation(line: 804, column: 7, scope: !21045)
!21045 = distinct !DILexicalBlock(scope: !21022, file: !21002, line: 804, column: 7)
!21046 = !DILocation(line: 804, column: 7, scope: !21022)
!21047 = !DILocation(line: 806, column: 30, scope: !21048)
!21048 = distinct !DILexicalBlock(scope: !21045, file: !21002, line: 805, column: 5)
!21049 = !DILocation(line: 806, column: 36, scope: !21048)
!21050 = !DILocation(line: 806, column: 42, scope: !21048)
!21051 = !DILocation(line: 806, column: 47, scope: !21048)
!21052 = !DILocation(line: 806, column: 13, scope: !21048)
!21053 = !DILocation(line: 806, column: 11, scope: !21048)
!21054 = !DILocation(line: 807, column: 11, scope: !21055)
!21055 = distinct !DILexicalBlock(scope: !21048, file: !21002, line: 807, column: 11)
!21056 = !DILocation(line: 807, column: 15, scope: !21055)
!21057 = !DILocation(line: 807, column: 11, scope: !21048)
!21058 = !DILocation(line: 808, column: 9, scope: !21055)
!21059 = !DILocation(line: 809, column: 5, scope: !21048)
!21060 = !DILocation(line: 833, column: 7, scope: !21061)
!21061 = distinct !DILexicalBlock(scope: !21022, file: !21002, line: 833, column: 7)
!21062 = !DILocation(line: 833, column: 18, scope: !21061)
!21063 = !DILocation(line: 833, column: 23, scope: !21061)
!21064 = !DILocation(line: 833, column: 7, scope: !21022)
!21065 = !DILocalVariable(name: "saved_errno", scope: !21066, file: !21002, line: 835, type: !5)
!21066 = distinct !DILexicalBlock(scope: !21061, file: !21002, line: 834, column: 5)
!21067 = !DILocation(line: 835, column: 11, scope: !21066)
!21068 = !DILocation(line: 835, column: 25, scope: !21066)
!21069 = !DILocation(line: 835, column: 31, scope: !21066)
!21070 = !DILocation(line: 837, column: 30, scope: !21066)
!21071 = !DILocation(line: 837, column: 36, scope: !21066)
!21072 = !DILocation(line: 837, column: 42, scope: !21066)
!21073 = !DILocation(line: 837, column: 47, scope: !21066)
!21074 = !DILocation(line: 837, column: 13, scope: !21066)
!21075 = !DILocation(line: 837, column: 11, scope: !21066)
!21076 = !DILocation(line: 839, column: 11, scope: !21077)
!21077 = distinct !DILexicalBlock(scope: !21066, file: !21002, line: 839, column: 11)
!21078 = !DILocation(line: 839, column: 11, scope: !21066)
!21079 = !DILocation(line: 841, column: 19, scope: !21080)
!21080 = distinct !DILexicalBlock(scope: !21077, file: !21002, line: 840, column: 9)
!21081 = !DILocation(line: 841, column: 11, scope: !21080)
!21082 = !DILocation(line: 841, column: 17, scope: !21080)
!21083 = !DILocation(line: 842, column: 15, scope: !21080)
!21084 = !DILocation(line: 843, column: 9, scope: !21080)
!21085 = !DILocation(line: 844, column: 5, scope: !21066)
!21086 = !DILocation(line: 846, column: 10, scope: !21022)
!21087 = !DILocation(line: 846, column: 3, scope: !21022)
!21088 = !DILocation(line: 847, column: 1, scope: !21022)
!21089 = distinct !DISubprogram(name: "__argmatch_die", scope: !1032, file: !1032, line: 60, type: !562, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !989, retainedNodes: !213)
!21090 = !DILocation(line: 62, column: 3, scope: !21089)
!21091 = !DILocation(line: 63, column: 1, scope: !21089)
!21092 = distinct !DISubprogram(name: "argmatch", scope: !1032, file: !1032, line: 82, type: !21093, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !989, retainedNodes: !213)
!21093 = !DISubroutineType(types: !21094)
!21094 = !{!495, !113, !992, !553, !52}
!21095 = !DILocalVariable(name: "arg", arg: 1, scope: !21092, file: !1032, line: 82, type: !113)
!21096 = !DILocation(line: 82, column: 23, scope: !21092)
!21097 = !DILocalVariable(name: "arglist", arg: 2, scope: !21092, file: !1032, line: 82, type: !992)
!21098 = !DILocation(line: 82, column: 47, scope: !21092)
!21099 = !DILocalVariable(name: "vallist", arg: 3, scope: !21092, file: !1032, line: 83, type: !553)
!21100 = !DILocation(line: 83, column: 23, scope: !21092)
!21101 = !DILocalVariable(name: "valsize", arg: 4, scope: !21092, file: !1032, line: 83, type: !52)
!21102 = !DILocation(line: 83, column: 39, scope: !21092)
!21103 = !DILocalVariable(name: "i", scope: !21092, file: !1032, line: 85, type: !52)
!21104 = !DILocation(line: 85, column: 10, scope: !21092)
!21105 = !DILocalVariable(name: "arglen", scope: !21092, file: !1032, line: 86, type: !52)
!21106 = !DILocation(line: 86, column: 10, scope: !21092)
!21107 = !DILocalVariable(name: "matchind", scope: !21092, file: !1032, line: 87, type: !495)
!21108 = !DILocation(line: 87, column: 13, scope: !21092)
!21109 = !DILocalVariable(name: "ambiguous", scope: !21092, file: !1032, line: 88, type: !139)
!21110 = !DILocation(line: 88, column: 8, scope: !21092)
!21111 = !DILocation(line: 90, column: 20, scope: !21092)
!21112 = !DILocation(line: 90, column: 12, scope: !21092)
!21113 = !DILocation(line: 90, column: 10, scope: !21092)
!21114 = !DILocation(line: 93, column: 10, scope: !21115)
!21115 = distinct !DILexicalBlock(scope: !21092, file: !1032, line: 93, column: 3)
!21116 = !DILocation(line: 93, column: 8, scope: !21115)
!21117 = !DILocation(line: 93, column: 15, scope: !21118)
!21118 = distinct !DILexicalBlock(scope: !21115, file: !1032, line: 93, column: 3)
!21119 = !DILocation(line: 93, column: 23, scope: !21118)
!21120 = !DILocation(line: 93, column: 3, scope: !21115)
!21121 = !DILocation(line: 95, column: 21, scope: !21122)
!21122 = distinct !DILexicalBlock(scope: !21123, file: !1032, line: 95, column: 11)
!21123 = distinct !DILexicalBlock(scope: !21118, file: !1032, line: 94, column: 5)
!21124 = !DILocation(line: 95, column: 29, scope: !21122)
!21125 = !DILocation(line: 95, column: 33, scope: !21122)
!21126 = !DILocation(line: 95, column: 38, scope: !21122)
!21127 = !DILocation(line: 95, column: 12, scope: !21122)
!21128 = !DILocation(line: 95, column: 11, scope: !21123)
!21129 = !DILocation(line: 97, column: 23, scope: !21130)
!21130 = distinct !DILexicalBlock(scope: !21131, file: !1032, line: 97, column: 15)
!21131 = distinct !DILexicalBlock(scope: !21122, file: !1032, line: 96, column: 9)
!21132 = !DILocation(line: 97, column: 31, scope: !21130)
!21133 = !DILocation(line: 97, column: 15, scope: !21130)
!21134 = !DILocation(line: 97, column: 38, scope: !21130)
!21135 = !DILocation(line: 97, column: 35, scope: !21130)
!21136 = !DILocation(line: 97, column: 15, scope: !21131)
!21137 = !DILocation(line: 99, column: 20, scope: !21130)
!21138 = !DILocation(line: 99, column: 13, scope: !21130)
!21139 = !DILocation(line: 100, column: 20, scope: !21140)
!21140 = distinct !DILexicalBlock(scope: !21130, file: !1032, line: 100, column: 20)
!21141 = !DILocation(line: 100, column: 29, scope: !21140)
!21142 = !DILocation(line: 100, column: 20, scope: !21130)
!21143 = !DILocation(line: 102, column: 24, scope: !21140)
!21144 = !DILocation(line: 102, column: 22, scope: !21140)
!21145 = !DILocation(line: 102, column: 13, scope: !21140)
!21146 = !DILocation(line: 106, column: 19, scope: !21147)
!21147 = distinct !DILexicalBlock(scope: !21148, file: !1032, line: 106, column: 19)
!21148 = distinct !DILexicalBlock(scope: !21140, file: !1032, line: 104, column: 13)
!21149 = !DILocation(line: 106, column: 27, scope: !21147)
!21150 = !DILocation(line: 107, column: 19, scope: !21147)
!21151 = !DILocation(line: 107, column: 45, scope: !21147)
!21152 = !DILocation(line: 107, column: 55, scope: !21147)
!21153 = !DILocation(line: 107, column: 65, scope: !21147)
!21154 = !DILocation(line: 107, column: 63, scope: !21147)
!21155 = !DILocation(line: 107, column: 53, scope: !21147)
!21156 = !DILocation(line: 108, column: 45, scope: !21147)
!21157 = !DILocation(line: 108, column: 55, scope: !21147)
!21158 = !DILocation(line: 108, column: 65, scope: !21147)
!21159 = !DILocation(line: 108, column: 63, scope: !21147)
!21160 = !DILocation(line: 108, column: 53, scope: !21147)
!21161 = !DILocation(line: 108, column: 68, scope: !21147)
!21162 = !DILocation(line: 107, column: 22, scope: !21147)
!21163 = !DILocation(line: 106, column: 19, scope: !21148)
!21164 = !DILocation(line: 112, column: 29, scope: !21165)
!21165 = distinct !DILexicalBlock(scope: !21147, file: !1032, line: 109, column: 17)
!21166 = !DILocation(line: 113, column: 17, scope: !21165)
!21167 = !DILocation(line: 115, column: 9, scope: !21131)
!21168 = !DILocation(line: 116, column: 5, scope: !21123)
!21169 = !DILocation(line: 93, column: 28, scope: !21118)
!21170 = !DILocation(line: 93, column: 3, scope: !21118)
!21171 = distinct !{!21171, !21120, !21172}
!21172 = !DILocation(line: 116, column: 5, scope: !21115)
!21173 = !DILocation(line: 117, column: 7, scope: !21174)
!21174 = distinct !DILexicalBlock(scope: !21092, file: !1032, line: 117, column: 7)
!21175 = !DILocation(line: 117, column: 7, scope: !21092)
!21176 = !DILocation(line: 118, column: 5, scope: !21174)
!21177 = !DILocation(line: 120, column: 12, scope: !21174)
!21178 = !DILocation(line: 120, column: 5, scope: !21174)
!21179 = !DILocation(line: 121, column: 1, scope: !21092)
!21180 = distinct !DISubprogram(name: "argmatch_invalid", scope: !1032, file: !1032, line: 129, type: !21181, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !989, retainedNodes: !213)
!21181 = !DISubroutineType(types: !21182)
!21182 = !{null, !113, !113, !495}
!21183 = !DILocalVariable(name: "context", arg: 1, scope: !21180, file: !1032, line: 129, type: !113)
!21184 = !DILocation(line: 129, column: 31, scope: !21180)
!21185 = !DILocalVariable(name: "value", arg: 2, scope: !21180, file: !1032, line: 129, type: !113)
!21186 = !DILocation(line: 129, column: 52, scope: !21180)
!21187 = !DILocalVariable(name: "problem", arg: 3, scope: !21180, file: !1032, line: 129, type: !495)
!21188 = !DILocation(line: 129, column: 69, scope: !21180)
!21189 = !DILocalVariable(name: "format", scope: !21180, file: !1032, line: 131, type: !113)
!21190 = !DILocation(line: 131, column: 15, scope: !21180)
!21191 = !DILocation(line: 131, column: 25, scope: !21180)
!21192 = !DILocation(line: 131, column: 33, scope: !21180)
!21193 = !DILocation(line: 132, column: 27, scope: !21180)
!21194 = !DILocation(line: 133, column: 27, scope: !21180)
!21195 = !DILocation(line: 135, column: 16, scope: !21180)
!21196 = !DILocation(line: 135, column: 69, scope: !21180)
!21197 = !DILocation(line: 135, column: 24, scope: !21180)
!21198 = !DILocation(line: 136, column: 22, scope: !21180)
!21199 = !DILocation(line: 136, column: 10, scope: !21180)
!21200 = !DILocation(line: 135, column: 3, scope: !21180)
!21201 = !DILocation(line: 137, column: 1, scope: !21180)
!21202 = distinct !DISubprogram(name: "argmatch_valid", scope: !1032, file: !1032, line: 144, type: !21203, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !989, retainedNodes: !213)
!21203 = !DISubroutineType(types: !21204)
!21204 = !{null, !992, !553, !52}
!21205 = !DILocalVariable(name: "arglist", arg: 1, scope: !21202, file: !1032, line: 144, type: !992)
!21206 = !DILocation(line: 144, column: 36, scope: !21202)
!21207 = !DILocalVariable(name: "vallist", arg: 2, scope: !21202, file: !1032, line: 145, type: !553)
!21208 = !DILocation(line: 145, column: 29, scope: !21202)
!21209 = !DILocalVariable(name: "valsize", arg: 3, scope: !21202, file: !1032, line: 145, type: !52)
!21210 = !DILocation(line: 145, column: 45, scope: !21202)
!21211 = !DILocalVariable(name: "i", scope: !21202, file: !1032, line: 147, type: !52)
!21212 = !DILocation(line: 147, column: 10, scope: !21202)
!21213 = !DILocalVariable(name: "last_val", scope: !21202, file: !1032, line: 148, type: !113)
!21214 = !DILocation(line: 148, column: 15, scope: !21202)
!21215 = !DILocation(line: 152, column: 3, scope: !21202)
!21216 = !DILocation(line: 153, column: 10, scope: !21217)
!21217 = distinct !DILexicalBlock(scope: !21202, file: !1032, line: 153, column: 3)
!21218 = !DILocation(line: 153, column: 8, scope: !21217)
!21219 = !DILocation(line: 153, column: 15, scope: !21220)
!21220 = distinct !DILexicalBlock(scope: !21217, file: !1032, line: 153, column: 3)
!21221 = !DILocation(line: 153, column: 23, scope: !21220)
!21222 = !DILocation(line: 153, column: 3, scope: !21217)
!21223 = !DILocation(line: 154, column: 10, scope: !21224)
!21224 = distinct !DILexicalBlock(scope: !21220, file: !1032, line: 154, column: 9)
!21225 = !DILocation(line: 154, column: 12, scope: !21224)
!21226 = !DILocation(line: 155, column: 9, scope: !21224)
!21227 = !DILocation(line: 155, column: 20, scope: !21224)
!21228 = !DILocation(line: 155, column: 45, scope: !21224)
!21229 = !DILocation(line: 155, column: 55, scope: !21224)
!21230 = !DILocation(line: 155, column: 65, scope: !21224)
!21231 = !DILocation(line: 155, column: 63, scope: !21224)
!21232 = !DILocation(line: 155, column: 53, scope: !21224)
!21233 = !DILocation(line: 155, column: 68, scope: !21224)
!21234 = !DILocation(line: 155, column: 12, scope: !21224)
!21235 = !DILocation(line: 154, column: 9, scope: !21220)
!21236 = !DILocation(line: 157, column: 18, scope: !21237)
!21237 = distinct !DILexicalBlock(scope: !21224, file: !1032, line: 156, column: 7)
!21238 = !DILocation(line: 157, column: 45, scope: !21237)
!21239 = !DILocation(line: 157, column: 53, scope: !21237)
!21240 = !DILocation(line: 157, column: 38, scope: !21237)
!21241 = !DILocation(line: 157, column: 9, scope: !21237)
!21242 = !DILocation(line: 158, column: 35, scope: !21237)
!21243 = !DILocation(line: 158, column: 45, scope: !21237)
!21244 = !DILocation(line: 158, column: 55, scope: !21237)
!21245 = !DILocation(line: 158, column: 53, scope: !21237)
!21246 = !DILocation(line: 158, column: 43, scope: !21237)
!21247 = !DILocation(line: 158, column: 18, scope: !21237)
!21248 = !DILocation(line: 159, column: 7, scope: !21237)
!21249 = !DILocation(line: 162, column: 18, scope: !21250)
!21250 = distinct !DILexicalBlock(scope: !21224, file: !1032, line: 161, column: 7)
!21251 = !DILocation(line: 162, column: 41, scope: !21250)
!21252 = !DILocation(line: 162, column: 49, scope: !21250)
!21253 = !DILocation(line: 162, column: 34, scope: !21250)
!21254 = !DILocation(line: 162, column: 9, scope: !21250)
!21255 = !DILocation(line: 155, column: 75, scope: !21224)
!21256 = !DILocation(line: 153, column: 28, scope: !21220)
!21257 = !DILocation(line: 153, column: 3, scope: !21220)
!21258 = distinct !{!21258, !21222, !21259}
!21259 = !DILocation(line: 163, column: 7, scope: !21217)
!21260 = !DILocation(line: 164, column: 3, scope: !21202)
!21261 = !DILocation(line: 165, column: 1, scope: !21202)
!21262 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !1032, file: !1032, line: 174, type: !21263, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !989, retainedNodes: !213)
!21263 = !DISubroutineType(types: !21264)
!21264 = !{!495, !113, !113, !992, !553, !52, !559}
!21265 = !DILocalVariable(name: "context", arg: 1, scope: !21262, file: !1032, line: 174, type: !113)
!21266 = !DILocation(line: 174, column: 35, scope: !21262)
!21267 = !DILocalVariable(name: "arg", arg: 2, scope: !21262, file: !1032, line: 175, type: !113)
!21268 = !DILocation(line: 175, column: 35, scope: !21262)
!21269 = !DILocalVariable(name: "arglist", arg: 3, scope: !21262, file: !1032, line: 175, type: !992)
!21270 = !DILocation(line: 175, column: 59, scope: !21262)
!21271 = !DILocalVariable(name: "vallist", arg: 4, scope: !21262, file: !1032, line: 176, type: !553)
!21272 = !DILocation(line: 176, column: 35, scope: !21262)
!21273 = !DILocalVariable(name: "valsize", arg: 5, scope: !21262, file: !1032, line: 176, type: !52)
!21274 = !DILocation(line: 176, column: 51, scope: !21262)
!21275 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !21262, file: !1032, line: 177, type: !559)
!21276 = !DILocation(line: 177, column: 40, scope: !21262)
!21277 = !DILocalVariable(name: "res", scope: !21262, file: !1032, line: 179, type: !495)
!21278 = !DILocation(line: 179, column: 13, scope: !21262)
!21279 = !DILocation(line: 179, column: 29, scope: !21262)
!21280 = !DILocation(line: 179, column: 34, scope: !21262)
!21281 = !DILocation(line: 179, column: 43, scope: !21262)
!21282 = !DILocation(line: 179, column: 52, scope: !21262)
!21283 = !DILocation(line: 179, column: 19, scope: !21262)
!21284 = !DILocation(line: 180, column: 7, scope: !21285)
!21285 = distinct !DILexicalBlock(scope: !21262, file: !1032, line: 180, column: 7)
!21286 = !DILocation(line: 180, column: 11, scope: !21285)
!21287 = !DILocation(line: 180, column: 7, scope: !21262)
!21288 = !DILocation(line: 182, column: 12, scope: !21285)
!21289 = !DILocation(line: 182, column: 5, scope: !21285)
!21290 = !DILocation(line: 185, column: 21, scope: !21262)
!21291 = !DILocation(line: 185, column: 30, scope: !21262)
!21292 = !DILocation(line: 185, column: 35, scope: !21262)
!21293 = !DILocation(line: 185, column: 3, scope: !21262)
!21294 = !DILocation(line: 186, column: 19, scope: !21262)
!21295 = !DILocation(line: 186, column: 28, scope: !21262)
!21296 = !DILocation(line: 186, column: 37, scope: !21262)
!21297 = !DILocation(line: 186, column: 3, scope: !21262)
!21298 = !DILocation(line: 187, column: 5, scope: !21262)
!21299 = !DILocation(line: 187, column: 3, scope: !21262)
!21300 = !DILocation(line: 189, column: 3, scope: !21262)
!21301 = !DILocation(line: 190, column: 1, scope: !21262)
!21302 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !1032, file: !1032, line: 195, type: !21303, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !989, retainedNodes: !213)
!21303 = !DISubroutineType(types: !21304)
!21304 = !{!113, !553, !992, !553, !52}
!21305 = !DILocalVariable(name: "value", arg: 1, scope: !21302, file: !1032, line: 195, type: !553)
!21306 = !DILocation(line: 195, column: 35, scope: !21302)
!21307 = !DILocalVariable(name: "arglist", arg: 2, scope: !21302, file: !1032, line: 196, type: !992)
!21308 = !DILocation(line: 196, column: 42, scope: !21302)
!21309 = !DILocalVariable(name: "vallist", arg: 3, scope: !21302, file: !1032, line: 197, type: !553)
!21310 = !DILocation(line: 197, column: 35, scope: !21302)
!21311 = !DILocalVariable(name: "valsize", arg: 4, scope: !21302, file: !1032, line: 197, type: !52)
!21312 = !DILocation(line: 197, column: 51, scope: !21302)
!21313 = !DILocalVariable(name: "i", scope: !21302, file: !1032, line: 199, type: !52)
!21314 = !DILocation(line: 199, column: 10, scope: !21302)
!21315 = !DILocation(line: 201, column: 10, scope: !21316)
!21316 = distinct !DILexicalBlock(scope: !21302, file: !1032, line: 201, column: 3)
!21317 = !DILocation(line: 201, column: 8, scope: !21316)
!21318 = !DILocation(line: 201, column: 15, scope: !21319)
!21319 = distinct !DILexicalBlock(scope: !21316, file: !1032, line: 201, column: 3)
!21320 = !DILocation(line: 201, column: 23, scope: !21319)
!21321 = !DILocation(line: 201, column: 3, scope: !21316)
!21322 = !DILocation(line: 202, column: 18, scope: !21323)
!21323 = distinct !DILexicalBlock(scope: !21319, file: !1032, line: 202, column: 9)
!21324 = !DILocation(line: 202, column: 40, scope: !21323)
!21325 = !DILocation(line: 202, column: 50, scope: !21323)
!21326 = !DILocation(line: 202, column: 60, scope: !21323)
!21327 = !DILocation(line: 202, column: 58, scope: !21323)
!21328 = !DILocation(line: 202, column: 48, scope: !21323)
!21329 = !DILocation(line: 202, column: 63, scope: !21323)
!21330 = !DILocation(line: 202, column: 10, scope: !21323)
!21331 = !DILocation(line: 202, column: 9, scope: !21319)
!21332 = !DILocation(line: 203, column: 14, scope: !21323)
!21333 = !DILocation(line: 203, column: 22, scope: !21323)
!21334 = !DILocation(line: 203, column: 7, scope: !21323)
!21335 = !DILocation(line: 202, column: 70, scope: !21323)
!21336 = !DILocation(line: 201, column: 28, scope: !21319)
!21337 = !DILocation(line: 201, column: 3, scope: !21319)
!21338 = distinct !{!21338, !21321, !21339}
!21339 = !DILocation(line: 203, column: 23, scope: !21316)
!21340 = !DILocation(line: 204, column: 3, scope: !21302)
!21341 = !DILocation(line: 205, column: 1, scope: !21302)
!21342 = distinct !DISubprogram(name: "rotl64", scope: !21343, file: !21343, line: 39, type: !21344, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1880, retainedNodes: !213)
!21343 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mohamad/clone/coreutils")
!21344 = !DISubroutineType(types: !21345)
!21345 = !{!1249, !1249, !5}
!21346 = !DILocalVariable(name: "x", arg: 1, scope: !21342, file: !21343, line: 39, type: !1249)
!21347 = !DILocation(line: 39, column: 18, scope: !21342)
!21348 = !DILocalVariable(name: "n", arg: 2, scope: !21342, file: !21343, line: 39, type: !5)
!21349 = !DILocation(line: 39, column: 25, scope: !21342)
!21350 = !DILocation(line: 41, column: 12, scope: !21342)
!21351 = !DILocation(line: 41, column: 17, scope: !21342)
!21352 = !DILocation(line: 41, column: 14, scope: !21342)
!21353 = !DILocation(line: 41, column: 23, scope: !21342)
!21354 = !DILocation(line: 41, column: 34, scope: !21342)
!21355 = !DILocation(line: 41, column: 32, scope: !21342)
!21356 = !DILocation(line: 41, column: 25, scope: !21342)
!21357 = !DILocation(line: 41, column: 20, scope: !21342)
!21358 = !DILocation(line: 41, column: 3, scope: !21342)
!21359 = distinct !DISubprogram(name: "rotr64", scope: !21343, file: !21343, line: 48, type: !21344, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1880, retainedNodes: !213)
!21360 = !DILocalVariable(name: "x", arg: 1, scope: !21359, file: !21343, line: 48, type: !1249)
!21361 = !DILocation(line: 48, column: 18, scope: !21359)
!21362 = !DILocalVariable(name: "n", arg: 2, scope: !21359, file: !21343, line: 48, type: !5)
!21363 = !DILocation(line: 48, column: 25, scope: !21359)
!21364 = !DILocation(line: 50, column: 12, scope: !21359)
!21365 = !DILocation(line: 50, column: 17, scope: !21359)
!21366 = !DILocation(line: 50, column: 14, scope: !21359)
!21367 = !DILocation(line: 50, column: 23, scope: !21359)
!21368 = !DILocation(line: 50, column: 34, scope: !21359)
!21369 = !DILocation(line: 50, column: 32, scope: !21359)
!21370 = !DILocation(line: 50, column: 25, scope: !21359)
!21371 = !DILocation(line: 50, column: 20, scope: !21359)
!21372 = !DILocation(line: 50, column: 3, scope: !21359)
!21373 = distinct !DISubprogram(name: "rotl32", scope: !21343, file: !21343, line: 58, type: !21374, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1880, retainedNodes: !213)
!21374 = !DISubroutineType(types: !21375)
!21375 = !{!1252, !1252, !5}
!21376 = !DILocalVariable(name: "x", arg: 1, scope: !21373, file: !21343, line: 58, type: !1252)
!21377 = !DILocation(line: 58, column: 18, scope: !21373)
!21378 = !DILocalVariable(name: "n", arg: 2, scope: !21373, file: !21343, line: 58, type: !5)
!21379 = !DILocation(line: 58, column: 25, scope: !21373)
!21380 = !DILocation(line: 60, column: 12, scope: !21373)
!21381 = !DILocation(line: 60, column: 17, scope: !21373)
!21382 = !DILocation(line: 60, column: 14, scope: !21373)
!21383 = !DILocation(line: 60, column: 23, scope: !21373)
!21384 = !DILocation(line: 60, column: 34, scope: !21373)
!21385 = !DILocation(line: 60, column: 32, scope: !21373)
!21386 = !DILocation(line: 60, column: 25, scope: !21373)
!21387 = !DILocation(line: 60, column: 20, scope: !21373)
!21388 = !DILocation(line: 60, column: 3, scope: !21373)
!21389 = distinct !DISubprogram(name: "rotr32", scope: !21343, file: !21343, line: 67, type: !21374, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1880, retainedNodes: !213)
!21390 = !DILocalVariable(name: "x", arg: 1, scope: !21389, file: !21343, line: 67, type: !1252)
!21391 = !DILocation(line: 67, column: 18, scope: !21389)
!21392 = !DILocalVariable(name: "n", arg: 2, scope: !21389, file: !21343, line: 67, type: !5)
!21393 = !DILocation(line: 67, column: 25, scope: !21389)
!21394 = !DILocation(line: 69, column: 12, scope: !21389)
!21395 = !DILocation(line: 69, column: 17, scope: !21389)
!21396 = !DILocation(line: 69, column: 14, scope: !21389)
!21397 = !DILocation(line: 69, column: 23, scope: !21389)
!21398 = !DILocation(line: 69, column: 34, scope: !21389)
!21399 = !DILocation(line: 69, column: 32, scope: !21389)
!21400 = !DILocation(line: 69, column: 25, scope: !21389)
!21401 = !DILocation(line: 69, column: 20, scope: !21389)
!21402 = !DILocation(line: 69, column: 3, scope: !21389)
!21403 = distinct !DISubprogram(name: "rotl_sz", scope: !21343, file: !21343, line: 76, type: !21404, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1880, retainedNodes: !213)
!21404 = !DISubroutineType(types: !21405)
!21405 = !{!52, !52, !5}
!21406 = !DILocalVariable(name: "x", arg: 1, scope: !21403, file: !21343, line: 76, type: !52)
!21407 = !DILocation(line: 76, column: 17, scope: !21403)
!21408 = !DILocalVariable(name: "n", arg: 2, scope: !21403, file: !21343, line: 76, type: !5)
!21409 = !DILocation(line: 76, column: 24, scope: !21403)
!21410 = !DILocation(line: 78, column: 12, scope: !21403)
!21411 = !DILocation(line: 78, column: 17, scope: !21403)
!21412 = !DILocation(line: 78, column: 14, scope: !21403)
!21413 = !DILocation(line: 78, column: 23, scope: !21403)
!21414 = !DILocation(line: 78, column: 53, scope: !21403)
!21415 = !DILocation(line: 78, column: 51, scope: !21403)
!21416 = !DILocation(line: 78, column: 25, scope: !21403)
!21417 = !DILocation(line: 78, column: 20, scope: !21403)
!21418 = !DILocation(line: 78, column: 3, scope: !21403)
!21419 = distinct !DISubprogram(name: "rotr_sz", scope: !21343, file: !21343, line: 85, type: !21404, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1880, retainedNodes: !213)
!21420 = !DILocalVariable(name: "x", arg: 1, scope: !21419, file: !21343, line: 85, type: !52)
!21421 = !DILocation(line: 85, column: 17, scope: !21419)
!21422 = !DILocalVariable(name: "n", arg: 2, scope: !21419, file: !21343, line: 85, type: !5)
!21423 = !DILocation(line: 85, column: 24, scope: !21419)
!21424 = !DILocation(line: 87, column: 12, scope: !21419)
!21425 = !DILocation(line: 87, column: 17, scope: !21419)
!21426 = !DILocation(line: 87, column: 14, scope: !21419)
!21427 = !DILocation(line: 87, column: 23, scope: !21419)
!21428 = !DILocation(line: 87, column: 53, scope: !21419)
!21429 = !DILocation(line: 87, column: 51, scope: !21419)
!21430 = !DILocation(line: 87, column: 25, scope: !21419)
!21431 = !DILocation(line: 87, column: 20, scope: !21419)
!21432 = !DILocation(line: 87, column: 3, scope: !21419)
!21433 = distinct !DISubprogram(name: "rotl16", scope: !21343, file: !21343, line: 96, type: !21434, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1880, retainedNodes: !213)
!21434 = !DISubroutineType(types: !21435)
!21435 = !{!21436, !21436, !5}
!21436 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !477, line: 49, baseType: !34)
!21437 = !DILocalVariable(name: "x", arg: 1, scope: !21433, file: !21343, line: 96, type: !21436)
!21438 = !DILocation(line: 96, column: 18, scope: !21433)
!21439 = !DILocalVariable(name: "n", arg: 2, scope: !21433, file: !21343, line: 96, type: !5)
!21440 = !DILocation(line: 96, column: 25, scope: !21433)
!21441 = !DILocation(line: 98, column: 27, scope: !21433)
!21442 = !DILocation(line: 98, column: 12, scope: !21433)
!21443 = !DILocation(line: 98, column: 32, scope: !21433)
!21444 = !DILocation(line: 98, column: 29, scope: !21433)
!21445 = !DILocation(line: 98, column: 53, scope: !21433)
!21446 = !DILocation(line: 98, column: 38, scope: !21433)
!21447 = !DILocation(line: 98, column: 64, scope: !21433)
!21448 = !DILocation(line: 98, column: 62, scope: !21433)
!21449 = !DILocation(line: 98, column: 55, scope: !21433)
!21450 = !DILocation(line: 98, column: 35, scope: !21433)
!21451 = !DILocation(line: 99, column: 10, scope: !21433)
!21452 = !DILocation(line: 98, column: 10, scope: !21433)
!21453 = !DILocation(line: 98, column: 3, scope: !21433)
!21454 = distinct !DISubprogram(name: "rotr16", scope: !21343, file: !21343, line: 108, type: !21434, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1880, retainedNodes: !213)
!21455 = !DILocalVariable(name: "x", arg: 1, scope: !21454, file: !21343, line: 108, type: !21436)
!21456 = !DILocation(line: 108, column: 18, scope: !21454)
!21457 = !DILocalVariable(name: "n", arg: 2, scope: !21454, file: !21343, line: 108, type: !5)
!21458 = !DILocation(line: 108, column: 25, scope: !21454)
!21459 = !DILocation(line: 110, column: 27, scope: !21454)
!21460 = !DILocation(line: 110, column: 12, scope: !21454)
!21461 = !DILocation(line: 110, column: 32, scope: !21454)
!21462 = !DILocation(line: 110, column: 29, scope: !21454)
!21463 = !DILocation(line: 110, column: 53, scope: !21454)
!21464 = !DILocation(line: 110, column: 38, scope: !21454)
!21465 = !DILocation(line: 110, column: 64, scope: !21454)
!21466 = !DILocation(line: 110, column: 62, scope: !21454)
!21467 = !DILocation(line: 110, column: 55, scope: !21454)
!21468 = !DILocation(line: 110, column: 35, scope: !21454)
!21469 = !DILocation(line: 111, column: 10, scope: !21454)
!21470 = !DILocation(line: 110, column: 10, scope: !21454)
!21471 = !DILocation(line: 110, column: 3, scope: !21454)
!21472 = distinct !DISubprogram(name: "rotl8", scope: !21343, file: !21343, line: 120, type: !21473, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1880, retainedNodes: !213)
!21473 = !DISubroutineType(types: !21474)
!21474 = !{!21475, !21475, !5}
!21475 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !477, line: 48, baseType: !451)
!21476 = !DILocalVariable(name: "x", arg: 1, scope: !21472, file: !21343, line: 120, type: !21475)
!21477 = !DILocation(line: 120, column: 16, scope: !21472)
!21478 = !DILocalVariable(name: "n", arg: 2, scope: !21472, file: !21343, line: 120, type: !5)
!21479 = !DILocation(line: 120, column: 23, scope: !21472)
!21480 = !DILocation(line: 122, column: 27, scope: !21472)
!21481 = !DILocation(line: 122, column: 12, scope: !21472)
!21482 = !DILocation(line: 122, column: 32, scope: !21472)
!21483 = !DILocation(line: 122, column: 29, scope: !21472)
!21484 = !DILocation(line: 122, column: 53, scope: !21472)
!21485 = !DILocation(line: 122, column: 38, scope: !21472)
!21486 = !DILocation(line: 122, column: 63, scope: !21472)
!21487 = !DILocation(line: 122, column: 61, scope: !21472)
!21488 = !DILocation(line: 122, column: 55, scope: !21472)
!21489 = !DILocation(line: 122, column: 35, scope: !21472)
!21490 = !DILocation(line: 122, column: 68, scope: !21472)
!21491 = !DILocation(line: 122, column: 10, scope: !21472)
!21492 = !DILocation(line: 122, column: 3, scope: !21472)
!21493 = distinct !DISubprogram(name: "rotr8", scope: !21343, file: !21343, line: 131, type: !21473, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1880, retainedNodes: !213)
!21494 = !DILocalVariable(name: "x", arg: 1, scope: !21493, file: !21343, line: 131, type: !21475)
!21495 = !DILocation(line: 131, column: 16, scope: !21493)
!21496 = !DILocalVariable(name: "n", arg: 2, scope: !21493, file: !21343, line: 131, type: !5)
!21497 = !DILocation(line: 131, column: 23, scope: !21493)
!21498 = !DILocation(line: 133, column: 27, scope: !21493)
!21499 = !DILocation(line: 133, column: 12, scope: !21493)
!21500 = !DILocation(line: 133, column: 32, scope: !21493)
!21501 = !DILocation(line: 133, column: 29, scope: !21493)
!21502 = !DILocation(line: 133, column: 53, scope: !21493)
!21503 = !DILocation(line: 133, column: 38, scope: !21493)
!21504 = !DILocation(line: 133, column: 63, scope: !21493)
!21505 = !DILocation(line: 133, column: 61, scope: !21493)
!21506 = !DILocation(line: 133, column: 55, scope: !21493)
!21507 = !DILocation(line: 133, column: 35, scope: !21493)
!21508 = !DILocation(line: 133, column: 68, scope: !21493)
!21509 = !DILocation(line: 133, column: 10, scope: !21493)
!21510 = !DILocation(line: 133, column: 3, scope: !21493)
!21511 = distinct !DISubprogram(name: "c_strcasecmp", scope: !21512, file: !21512, line: 27, type: !15487, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1883, retainedNodes: !213)
!21512 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mohamad/clone/coreutils")
!21513 = !DILocalVariable(name: "s1", arg: 1, scope: !21511, file: !21512, line: 27, type: !113)
!21514 = !DILocation(line: 27, column: 27, scope: !21511)
!21515 = !DILocalVariable(name: "s2", arg: 2, scope: !21511, file: !21512, line: 27, type: !113)
!21516 = !DILocation(line: 27, column: 43, scope: !21511)
!21517 = !DILocalVariable(name: "p1", scope: !21511, file: !21512, line: 29, type: !449)
!21518 = !DILocation(line: 29, column: 33, scope: !21511)
!21519 = !DILocation(line: 29, column: 62, scope: !21511)
!21520 = !DILocalVariable(name: "p2", scope: !21511, file: !21512, line: 30, type: !449)
!21521 = !DILocation(line: 30, column: 33, scope: !21511)
!21522 = !DILocation(line: 30, column: 62, scope: !21511)
!21523 = !DILocalVariable(name: "c1", scope: !21511, file: !21512, line: 31, type: !451)
!21524 = !DILocation(line: 31, column: 17, scope: !21511)
!21525 = !DILocalVariable(name: "c2", scope: !21511, file: !21512, line: 31, type: !451)
!21526 = !DILocation(line: 31, column: 21, scope: !21511)
!21527 = !DILocation(line: 33, column: 7, scope: !21528)
!21528 = distinct !DILexicalBlock(scope: !21511, file: !21512, line: 33, column: 7)
!21529 = !DILocation(line: 33, column: 13, scope: !21528)
!21530 = !DILocation(line: 33, column: 10, scope: !21528)
!21531 = !DILocation(line: 33, column: 7, scope: !21511)
!21532 = !DILocation(line: 34, column: 5, scope: !21528)
!21533 = !DILocation(line: 36, column: 3, scope: !21511)
!21534 = !DILocation(line: 38, column: 24, scope: !21535)
!21535 = distinct !DILexicalBlock(scope: !21511, file: !21512, line: 37, column: 5)
!21536 = !DILocation(line: 38, column: 23, scope: !21535)
!21537 = !DILocation(line: 38, column: 12, scope: !21535)
!21538 = !DILocation(line: 38, column: 10, scope: !21535)
!21539 = !DILocation(line: 39, column: 24, scope: !21535)
!21540 = !DILocation(line: 39, column: 23, scope: !21535)
!21541 = !DILocation(line: 39, column: 12, scope: !21535)
!21542 = !DILocation(line: 39, column: 10, scope: !21535)
!21543 = !DILocation(line: 41, column: 11, scope: !21544)
!21544 = distinct !DILexicalBlock(scope: !21535, file: !21512, line: 41, column: 11)
!21545 = !DILocation(line: 41, column: 14, scope: !21544)
!21546 = !DILocation(line: 41, column: 11, scope: !21535)
!21547 = !DILocation(line: 42, column: 9, scope: !21544)
!21548 = !DILocation(line: 44, column: 7, scope: !21535)
!21549 = !DILocation(line: 45, column: 7, scope: !21535)
!21550 = !DILocation(line: 46, column: 5, scope: !21535)
!21551 = !DILocation(line: 47, column: 10, scope: !21511)
!21552 = !DILocation(line: 47, column: 16, scope: !21511)
!21553 = !DILocation(line: 47, column: 13, scope: !21511)
!21554 = distinct !{!21554, !21533, !21555}
!21555 = !DILocation(line: 47, column: 18, scope: !21511)
!21556 = !DILocation(line: 50, column: 12, scope: !21557)
!21557 = distinct !DILexicalBlock(scope: !21511, file: !21512, line: 49, column: 7)
!21558 = !DILocation(line: 50, column: 17, scope: !21557)
!21559 = !DILocation(line: 50, column: 15, scope: !21557)
!21560 = !DILocation(line: 50, column: 5, scope: !21557)
!21561 = !DILocation(line: 56, column: 1, scope: !21511)
!21562 = distinct !DISubprogram(name: "close_stream", scope: !21563, file: !21563, line: 56, type: !21564, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1886, retainedNodes: !213)
!21563 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mohamad/clone/coreutils")
!21564 = !DISubroutineType(types: !21565)
!21565 = !{!5, !21566}
!21566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21567, size: 64)
!21567 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !293, line: 48, baseType: !21568)
!21568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !21569)
!21569 = !{!21570, !21571, !21572, !21573, !21574, !21575, !21576, !21577, !21578, !21579, !21580, !21581, !21582, !21590, !21591, !21592, !21593, !21594, !21595, !21596, !21597, !21598, !21599, !21600, !21601, !21602, !21603, !21604, !21605}
!21570 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !21568, file: !2, line: 242, baseType: !5, size: 32)
!21571 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !21568, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!21572 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !21568, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!21573 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !21568, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!21574 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !21568, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!21575 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !21568, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!21576 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !21568, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!21577 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !21568, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!21578 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !21568, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!21579 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !21568, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!21580 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !21568, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!21581 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !21568, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!21582 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !21568, file: !2, line: 260, baseType: !21583, size: 64, offset: 768)
!21583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21584, size: 64)
!21584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !21585)
!21585 = !{!21586, !21587, !21589}
!21586 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !21584, file: !2, line: 157, baseType: !21583, size: 64)
!21587 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !21584, file: !2, line: 158, baseType: !21588, size: 64, offset: 64)
!21588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21568, size: 64)
!21589 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !21584, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!21590 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !21568, file: !2, line: 262, baseType: !21588, size: 64, offset: 832)
!21591 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !21568, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!21592 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !21568, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!21593 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !21568, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!21594 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !21568, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!21595 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !21568, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!21596 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !21568, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!21597 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !21568, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!21598 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !21568, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!21599 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !21568, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!21600 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !21568, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!21601 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !21568, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!21602 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !21568, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!21603 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !21568, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!21604 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !21568, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!21605 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !21568, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!21606 = !DILocalVariable(name: "stream", arg: 1, scope: !21562, file: !21563, line: 56, type: !21566)
!21607 = !DILocation(line: 56, column: 21, scope: !21562)
!21608 = !DILocalVariable(name: "some_pending", scope: !21562, file: !21563, line: 58, type: !1889)
!21609 = !DILocation(line: 58, column: 14, scope: !21562)
!21610 = !DILocation(line: 58, column: 42, scope: !21562)
!21611 = !DILocation(line: 58, column: 30, scope: !21562)
!21612 = !DILocation(line: 58, column: 50, scope: !21562)
!21613 = !DILocalVariable(name: "prev_fail", scope: !21562, file: !21563, line: 59, type: !1889)
!21614 = !DILocation(line: 59, column: 14, scope: !21562)
!21615 = !DILocation(line: 59, column: 27, scope: !21562)
!21616 = !DILocation(line: 59, column: 43, scope: !21562)
!21617 = !DILocalVariable(name: "fclose_fail", scope: !21562, file: !21563, line: 60, type: !1889)
!21618 = !DILocation(line: 60, column: 14, scope: !21562)
!21619 = !DILocation(line: 60, column: 37, scope: !21562)
!21620 = !DILocation(line: 60, column: 29, scope: !21562)
!21621 = !DILocation(line: 60, column: 45, scope: !21562)
!21622 = !DILocation(line: 70, column: 7, scope: !21623)
!21623 = distinct !DILexicalBlock(scope: !21562, file: !21563, line: 70, column: 7)
!21624 = !DILocation(line: 70, column: 17, scope: !21623)
!21625 = !DILocation(line: 70, column: 21, scope: !21623)
!21626 = !DILocation(line: 70, column: 33, scope: !21623)
!21627 = !DILocation(line: 70, column: 37, scope: !21623)
!21628 = !DILocation(line: 70, column: 50, scope: !21623)
!21629 = !DILocation(line: 70, column: 53, scope: !21623)
!21630 = !DILocation(line: 70, column: 59, scope: !21623)
!21631 = !DILocation(line: 70, column: 7, scope: !21562)
!21632 = !DILocation(line: 72, column: 13, scope: !21633)
!21633 = distinct !DILexicalBlock(scope: !21634, file: !21563, line: 72, column: 11)
!21634 = distinct !DILexicalBlock(scope: !21623, file: !21563, line: 71, column: 5)
!21635 = !DILocation(line: 72, column: 11, scope: !21634)
!21636 = !DILocation(line: 73, column: 9, scope: !21633)
!21637 = !DILocation(line: 73, column: 15, scope: !21633)
!21638 = !DILocation(line: 74, column: 7, scope: !21634)
!21639 = !DILocation(line: 77, column: 3, scope: !21562)
!21640 = !DILocation(line: 78, column: 1, scope: !21562)
!21641 = distinct !DISubprogram(name: "cycle_check_init", scope: !21642, file: !21642, line: 43, type: !21643, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1890, retainedNodes: !213)
!21642 = !DIFile(filename: "lib/cycle-check.c", directory: "/home/mohamad/clone/coreutils")
!21643 = !DISubroutineType(types: !21644)
!21644 = !{null, !21645}
!21645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21646, size: 64)
!21646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !1787, line: 28, size: 256, elements: !21647)
!21647 = !{!21648, !21653, !21654}
!21648 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !21646, file: !1787, line: 30, baseType: !21649, size: 128)
!21649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !253, line: 7, size: 128, elements: !21650)
!21650 = !{!21651, !21652}
!21651 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !21649, file: !253, line: 9, baseType: !256, size: 64)
!21652 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !21649, file: !253, line: 10, baseType: !259, size: 64, offset: 64)
!21653 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !21646, file: !1787, line: 31, baseType: !476, size: 64, offset: 128)
!21654 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !21646, file: !1787, line: 32, baseType: !5, size: 32, offset: 192)
!21655 = !DILocalVariable(name: "state", arg: 1, scope: !21641, file: !21642, line: 43, type: !21645)
!21656 = !DILocation(line: 43, column: 45, scope: !21641)
!21657 = !DILocation(line: 45, column: 3, scope: !21641)
!21658 = !DILocation(line: 45, column: 10, scope: !21641)
!21659 = !DILocation(line: 45, column: 24, scope: !21641)
!21660 = !DILocation(line: 46, column: 3, scope: !21641)
!21661 = !DILocation(line: 46, column: 10, scope: !21641)
!21662 = !DILocation(line: 46, column: 16, scope: !21641)
!21663 = !DILocation(line: 47, column: 1, scope: !21641)
!21664 = distinct !DISubprogram(name: "cycle_check", scope: !21642, file: !21642, line: 58, type: !21665, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1890, retainedNodes: !213)
!21665 = !DISubroutineType(types: !21666)
!21666 = !{!139, !21645, !21667}
!21667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21668, size: 64)
!21668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21669)
!21669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !336, line: 46, size: 1152, elements: !21670)
!21670 = !{!21671, !21672, !21673, !21674, !21675, !21676, !21677, !21678, !21679, !21680, !21681, !21682, !21687, !21688, !21689}
!21671 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !21669, file: !336, line: 48, baseType: !260, size: 64)
!21672 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !21669, file: !336, line: 53, baseType: !257, size: 64, offset: 64)
!21673 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !21669, file: !336, line: 61, baseType: !333, size: 64, offset: 128)
!21674 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !21669, file: !336, line: 62, baseType: !165, size: 32, offset: 192)
!21675 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !21669, file: !336, line: 64, baseType: !343, size: 32, offset: 224)
!21676 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !21669, file: !336, line: 65, baseType: !345, size: 32, offset: 256)
!21677 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !21669, file: !336, line: 67, baseType: !5, size: 32, offset: 288)
!21678 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !21669, file: !336, line: 69, baseType: !260, size: 64, offset: 320)
!21679 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !21669, file: !336, line: 74, baseType: !30, size: 64, offset: 384)
!21680 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !21669, file: !336, line: 78, baseType: !350, size: 64, offset: 448)
!21681 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !21669, file: !336, line: 80, baseType: !352, size: 64, offset: 512)
!21682 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !21669, file: !336, line: 91, baseType: !21683, size: 128, offset: 576)
!21683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !21684)
!21684 = !{!21685, !21686}
!21685 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !21683, file: !355, line: 122, baseType: !358, size: 64)
!21686 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !21683, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!21687 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !21669, file: !336, line: 92, baseType: !21683, size: 128, offset: 704)
!21688 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !21669, file: !336, line: 93, baseType: !21683, size: 128, offset: 832)
!21689 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !21669, file: !336, line: 106, baseType: !364, size: 192, offset: 960)
!21690 = !DILocalVariable(name: "state", arg: 1, scope: !21664, file: !21642, line: 58, type: !21645)
!21691 = !DILocation(line: 58, column: 40, scope: !21664)
!21692 = !DILocalVariable(name: "sb", arg: 2, scope: !21664, file: !21642, line: 58, type: !21667)
!21693 = !DILocation(line: 58, column: 66, scope: !21664)
!21694 = !DILocation(line: 60, column: 3, scope: !21664)
!21695 = !DILocation(line: 65, column: 7, scope: !21696)
!21696 = distinct !DILexicalBlock(scope: !21664, file: !21642, line: 65, column: 7)
!21697 = !DILocation(line: 65, column: 14, scope: !21696)
!21698 = !DILocation(line: 65, column: 28, scope: !21696)
!21699 = !DILocation(line: 65, column: 31, scope: !21696)
!21700 = !DILocation(line: 65, column: 7, scope: !21664)
!21701 = !DILocation(line: 66, column: 5, scope: !21696)
!21702 = !DILocation(line: 70, column: 35, scope: !21703)
!21703 = distinct !DILexicalBlock(scope: !21664, file: !21642, line: 70, column: 7)
!21704 = !DILocation(line: 70, column: 42, scope: !21703)
!21705 = !DILocation(line: 70, column: 32, scope: !21703)
!21706 = !DILocation(line: 70, column: 7, scope: !21703)
!21707 = !DILocation(line: 70, column: 7, scope: !21664)
!21708 = !DILocation(line: 77, column: 11, scope: !21709)
!21709 = distinct !DILexicalBlock(scope: !21710, file: !21642, line: 77, column: 11)
!21710 = distinct !DILexicalBlock(scope: !21703, file: !21642, line: 71, column: 5)
!21711 = !DILocation(line: 77, column: 18, scope: !21709)
!21712 = !DILocation(line: 77, column: 32, scope: !21709)
!21713 = !DILocation(line: 77, column: 11, scope: !21710)
!21714 = !DILocation(line: 78, column: 9, scope: !21709)
!21715 = !DILocation(line: 80, column: 31, scope: !21710)
!21716 = !DILocation(line: 80, column: 35, scope: !21710)
!21717 = !DILocation(line: 80, column: 7, scope: !21710)
!21718 = !DILocation(line: 80, column: 14, scope: !21710)
!21719 = !DILocation(line: 80, column: 22, scope: !21710)
!21720 = !DILocation(line: 80, column: 29, scope: !21710)
!21721 = !DILocation(line: 81, column: 31, scope: !21710)
!21722 = !DILocation(line: 81, column: 35, scope: !21710)
!21723 = !DILocation(line: 81, column: 7, scope: !21710)
!21724 = !DILocation(line: 81, column: 14, scope: !21710)
!21725 = !DILocation(line: 81, column: 22, scope: !21710)
!21726 = !DILocation(line: 81, column: 29, scope: !21710)
!21727 = !DILocation(line: 82, column: 5, scope: !21710)
!21728 = !DILocation(line: 84, column: 3, scope: !21664)
!21729 = !DILocation(line: 85, column: 1, scope: !21664)
!21730 = distinct !DISubprogram(name: "is_zero_or_power_of_two", scope: !21642, file: !21642, line: 37, type: !21731, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1890, retainedNodes: !213)
!21731 = !DISubroutineType(types: !21732)
!21732 = !{!139, !476}
!21733 = !DILocalVariable(name: "i", arg: 1, scope: !21730, file: !21642, line: 37, type: !476)
!21734 = !DILocation(line: 37, column: 36, scope: !21730)
!21735 = !DILocation(line: 39, column: 11, scope: !21730)
!21736 = !DILocation(line: 39, column: 16, scope: !21730)
!21737 = !DILocation(line: 39, column: 18, scope: !21730)
!21738 = !DILocation(line: 39, column: 13, scope: !21730)
!21739 = !DILocation(line: 39, column: 24, scope: !21730)
!21740 = !DILocation(line: 39, column: 3, scope: !21730)
!21741 = distinct !DISubprogram(name: "opendir_safer", scope: !21742, file: !21742, line: 31, type: !21743, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1896, retainedNodes: !213)
!21742 = !DIFile(filename: "lib/opendir-safer.c", directory: "/home/mohamad/clone/coreutils")
!21743 = !DISubroutineType(types: !21744)
!21744 = !{!530, !113}
!21745 = !DILocalVariable(name: "name", arg: 1, scope: !21741, file: !21742, line: 31, type: !113)
!21746 = !DILocation(line: 31, column: 28, scope: !21741)
!21747 = !DILocalVariable(name: "dp", scope: !21741, file: !21742, line: 33, type: !530)
!21748 = !DILocation(line: 33, column: 8, scope: !21741)
!21749 = !DILocation(line: 33, column: 22, scope: !21741)
!21750 = !DILocation(line: 33, column: 13, scope: !21741)
!21751 = !DILocation(line: 35, column: 7, scope: !21752)
!21752 = distinct !DILexicalBlock(scope: !21741, file: !21742, line: 35, column: 7)
!21753 = !DILocation(line: 35, column: 7, scope: !21741)
!21754 = !DILocalVariable(name: "fd", scope: !21755, file: !21742, line: 37, type: !5)
!21755 = distinct !DILexicalBlock(scope: !21752, file: !21742, line: 36, column: 5)
!21756 = !DILocation(line: 37, column: 11, scope: !21755)
!21757 = !DILocation(line: 37, column: 23, scope: !21755)
!21758 = !DILocation(line: 37, column: 16, scope: !21755)
!21759 = !DILocation(line: 39, column: 16, scope: !21760)
!21760 = distinct !DILexicalBlock(scope: !21755, file: !21742, line: 39, column: 11)
!21761 = !DILocation(line: 39, column: 13, scope: !21760)
!21762 = !DILocation(line: 39, column: 19, scope: !21760)
!21763 = !DILocation(line: 39, column: 22, scope: !21760)
!21764 = !DILocation(line: 39, column: 25, scope: !21760)
!21765 = !DILocation(line: 39, column: 11, scope: !21755)
!21766 = !DILocalVariable(name: "newdp", scope: !21767, file: !21742, line: 49, type: !530)
!21767 = distinct !DILexicalBlock(scope: !21760, file: !21742, line: 40, column: 9)
!21768 = !DILocation(line: 49, column: 16, scope: !21767)
!21769 = !DILocalVariable(name: "e", scope: !21767, file: !21742, line: 50, type: !5)
!21770 = !DILocation(line: 50, column: 15, scope: !21767)
!21771 = !DILocalVariable(name: "f", scope: !21767, file: !21742, line: 52, type: !5)
!21772 = !DILocation(line: 52, column: 15, scope: !21767)
!21773 = !DILocation(line: 52, column: 26, scope: !21767)
!21774 = !DILocation(line: 52, column: 19, scope: !21767)
!21775 = !DILocation(line: 53, column: 15, scope: !21776)
!21776 = distinct !DILexicalBlock(scope: !21767, file: !21742, line: 53, column: 15)
!21777 = !DILocation(line: 53, column: 17, scope: !21776)
!21778 = !DILocation(line: 53, column: 15, scope: !21767)
!21779 = !DILocation(line: 55, column: 19, scope: !21780)
!21780 = distinct !DILexicalBlock(scope: !21776, file: !21742, line: 54, column: 13)
!21781 = !DILocation(line: 55, column: 17, scope: !21780)
!21782 = !DILocation(line: 56, column: 21, scope: !21780)
!21783 = !DILocation(line: 57, column: 13, scope: !21780)
!21784 = !DILocation(line: 60, column: 34, scope: !21785)
!21785 = distinct !DILexicalBlock(scope: !21776, file: !21742, line: 59, column: 13)
!21786 = !DILocation(line: 60, column: 23, scope: !21785)
!21787 = !DILocation(line: 60, column: 21, scope: !21785)
!21788 = !DILocation(line: 61, column: 19, scope: !21785)
!21789 = !DILocation(line: 61, column: 17, scope: !21785)
!21790 = !DILocation(line: 62, column: 21, scope: !21791)
!21791 = distinct !DILexicalBlock(scope: !21785, file: !21742, line: 62, column: 19)
!21792 = !DILocation(line: 62, column: 19, scope: !21785)
!21793 = !DILocation(line: 63, column: 24, scope: !21791)
!21794 = !DILocation(line: 63, column: 17, scope: !21791)
!21795 = !DILocation(line: 69, column: 21, scope: !21767)
!21796 = !DILocation(line: 69, column: 11, scope: !21767)
!21797 = !DILocation(line: 70, column: 19, scope: !21767)
!21798 = !DILocation(line: 70, column: 11, scope: !21767)
!21799 = !DILocation(line: 70, column: 17, scope: !21767)
!21800 = !DILocation(line: 71, column: 16, scope: !21767)
!21801 = !DILocation(line: 71, column: 14, scope: !21767)
!21802 = !DILocation(line: 72, column: 9, scope: !21767)
!21803 = !DILocation(line: 73, column: 5, scope: !21755)
!21804 = !DILocation(line: 75, column: 10, scope: !21741)
!21805 = !DILocation(line: 75, column: 3, scope: !21741)
!21806 = distinct !DISubprogram(name: "gettime", scope: !21807, file: !21807, line: 29, type: !21808, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1899, retainedNodes: !213)
!21807 = !DIFile(filename: "lib/gettime.c", directory: "/home/mohamad/clone/coreutils")
!21808 = !DISubroutineType(types: !21809)
!21809 = !{null, !21810}
!21810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21811, size: 64)
!21811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !355, line: 120, size: 128, elements: !21812)
!21812 = !{!21813, !21814}
!21813 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !21811, file: !355, line: 122, baseType: !358, size: 64)
!21814 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !21811, file: !355, line: 123, baseType: !360, size: 64, offset: 64)
!21815 = !DILocalVariable(name: "ts", arg: 1, scope: !21806, file: !21807, line: 29, type: !21810)
!21816 = !DILocation(line: 29, column: 27, scope: !21806)
!21817 = !DILocation(line: 32, column: 34, scope: !21806)
!21818 = !DILocation(line: 32, column: 3, scope: !21806)
!21819 = !DILocation(line: 39, column: 1, scope: !21806)
!21820 = distinct !DISubprogram(name: "current_timespec", scope: !21807, file: !21807, line: 44, type: !21821, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1899, retainedNodes: !213)
!21821 = !DISubroutineType(types: !21822)
!21822 = !{!21811}
!21823 = !DILocalVariable(name: "ts", scope: !21820, file: !21807, line: 46, type: !21811)
!21824 = !DILocation(line: 46, column: 19, scope: !21820)
!21825 = !DILocation(line: 47, column: 3, scope: !21820)
!21826 = !DILocation(line: 48, column: 3, scope: !21820)
!21827 = distinct !DISubprogram(name: "hard_locale", scope: !21828, file: !21828, line: 38, type: !3623, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1901, retainedNodes: !213)
!21828 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mohamad/clone/coreutils")
!21829 = !DILocalVariable(name: "category", arg: 1, scope: !21827, file: !21828, line: 38, type: !5)
!21830 = !DILocation(line: 38, column: 18, scope: !21827)
!21831 = !DILocalVariable(name: "hard", scope: !21827, file: !21828, line: 40, type: !139)
!21832 = !DILocation(line: 40, column: 8, scope: !21827)
!21833 = !DILocalVariable(name: "p", scope: !21827, file: !21828, line: 41, type: !113)
!21834 = !DILocation(line: 41, column: 15, scope: !21827)
!21835 = !DILocation(line: 41, column: 30, scope: !21827)
!21836 = !DILocation(line: 41, column: 19, scope: !21827)
!21837 = !DILocation(line: 43, column: 7, scope: !21838)
!21838 = distinct !DILexicalBlock(scope: !21827, file: !21828, line: 43, column: 7)
!21839 = !DILocation(line: 43, column: 7, scope: !21827)
!21840 = !DILocation(line: 47, column: 23, scope: !21841)
!21841 = distinct !DILexicalBlock(scope: !21842, file: !21828, line: 47, column: 15)
!21842 = distinct !DILexicalBlock(scope: !21843, file: !21828, line: 46, column: 9)
!21843 = distinct !DILexicalBlock(scope: !21844, file: !21828, line: 45, column: 11)
!21844 = distinct !DILexicalBlock(scope: !21838, file: !21828, line: 44, column: 5)
!21845 = !DILocation(line: 47, column: 15, scope: !21841)
!21846 = !DILocation(line: 47, column: 31, scope: !21841)
!21847 = !DILocation(line: 47, column: 36, scope: !21841)
!21848 = !DILocation(line: 47, column: 47, scope: !21841)
!21849 = !DILocation(line: 47, column: 39, scope: !21841)
!21850 = !DILocation(line: 47, column: 59, scope: !21841)
!21851 = !DILocation(line: 47, column: 15, scope: !21842)
!21852 = !DILocation(line: 48, column: 18, scope: !21841)
!21853 = !DILocation(line: 48, column: 13, scope: !21841)
!21854 = !DILocation(line: 69, column: 5, scope: !21844)
!21855 = !DILocation(line: 71, column: 10, scope: !21827)
!21856 = !DILocation(line: 71, column: 3, scope: !21827)
!21857 = distinct !DISubprogram(name: "hash_pjw", scope: !21858, file: !21858, line: 31, type: !706, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1904, retainedNodes: !213)
!21858 = !DIFile(filename: "lib/hash-pjw.c", directory: "/home/mohamad/clone/coreutils")
!21859 = !DILocalVariable(name: "x", arg: 1, scope: !21857, file: !21858, line: 31, type: !553)
!21860 = !DILocation(line: 31, column: 23, scope: !21857)
!21861 = !DILocalVariable(name: "tablesize", arg: 2, scope: !21857, file: !21858, line: 31, type: !52)
!21862 = !DILocation(line: 31, column: 33, scope: !21857)
!21863 = !DILocalVariable(name: "s", scope: !21857, file: !21858, line: 33, type: !113)
!21864 = !DILocation(line: 33, column: 15, scope: !21857)
!21865 = !DILocalVariable(name: "h", scope: !21857, file: !21858, line: 34, type: !52)
!21866 = !DILocation(line: 34, column: 10, scope: !21857)
!21867 = !DILocation(line: 36, column: 12, scope: !21868)
!21868 = distinct !DILexicalBlock(scope: !21857, file: !21858, line: 36, column: 3)
!21869 = !DILocation(line: 36, column: 10, scope: !21868)
!21870 = !DILocation(line: 36, column: 8, scope: !21868)
!21871 = !DILocation(line: 36, column: 16, scope: !21872)
!21872 = distinct !DILexicalBlock(scope: !21868, file: !21858, line: 36, column: 3)
!21873 = !DILocation(line: 36, column: 15, scope: !21872)
!21874 = !DILocation(line: 36, column: 3, scope: !21868)
!21875 = !DILocation(line: 37, column: 10, scope: !21872)
!21876 = !DILocation(line: 37, column: 9, scope: !21872)
!21877 = !DILocation(line: 37, column: 16, scope: !21872)
!21878 = !DILocation(line: 37, column: 18, scope: !21872)
!21879 = !DILocation(line: 37, column: 27, scope: !21872)
!21880 = !DILocation(line: 37, column: 29, scope: !21872)
!21881 = !DILocation(line: 37, column: 24, scope: !21872)
!21882 = !DILocation(line: 37, column: 12, scope: !21872)
!21883 = !DILocation(line: 37, column: 7, scope: !21872)
!21884 = !DILocation(line: 37, column: 5, scope: !21872)
!21885 = !DILocation(line: 36, column: 20, scope: !21872)
!21886 = !DILocation(line: 36, column: 3, scope: !21872)
!21887 = distinct !{!21887, !21874, !21888}
!21888 = !DILocation(line: 37, column: 48, scope: !21868)
!21889 = !DILocation(line: 39, column: 10, scope: !21857)
!21890 = !DILocation(line: 39, column: 14, scope: !21857)
!21891 = !DILocation(line: 39, column: 12, scope: !21857)
!21892 = !DILocation(line: 39, column: 3, scope: !21857)
!21893 = distinct !DISubprogram(name: "i_ring_init", scope: !21894, file: !21894, line: 25, type: !21895, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1907, retainedNodes: !213)
!21894 = !DIFile(filename: "lib/i-ring.c", directory: "/home/mohamad/clone/coreutils")
!21895 = !DISubroutineType(types: !21896)
!21896 = !{null, !21897, !5}
!21897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!21898 = !DILocalVariable(name: "ir", arg: 1, scope: !21893, file: !21894, line: 25, type: !21897)
!21899 = !DILocation(line: 25, column: 22, scope: !21893)
!21900 = !DILocalVariable(name: "default_val", arg: 2, scope: !21893, file: !21894, line: 25, type: !5)
!21901 = !DILocation(line: 25, column: 30, scope: !21893)
!21902 = !DILocalVariable(name: "i", scope: !21893, file: !21894, line: 27, type: !5)
!21903 = !DILocation(line: 27, column: 7, scope: !21893)
!21904 = !DILocation(line: 28, column: 3, scope: !21893)
!21905 = !DILocation(line: 28, column: 7, scope: !21893)
!21906 = !DILocation(line: 28, column: 16, scope: !21893)
!21907 = !DILocation(line: 29, column: 3, scope: !21893)
!21908 = !DILocation(line: 29, column: 7, scope: !21893)
!21909 = !DILocation(line: 29, column: 16, scope: !21893)
!21910 = !DILocation(line: 30, column: 3, scope: !21893)
!21911 = !DILocation(line: 30, column: 7, scope: !21893)
!21912 = !DILocation(line: 30, column: 15, scope: !21893)
!21913 = !DILocation(line: 31, column: 10, scope: !21914)
!21914 = distinct !DILexicalBlock(scope: !21893, file: !21894, line: 31, column: 3)
!21915 = !DILocation(line: 31, column: 8, scope: !21914)
!21916 = !DILocation(line: 31, column: 15, scope: !21917)
!21917 = distinct !DILexicalBlock(scope: !21914, file: !21894, line: 31, column: 3)
!21918 = !DILocation(line: 31, column: 17, scope: !21917)
!21919 = !DILocation(line: 31, column: 3, scope: !21914)
!21920 = !DILocation(line: 32, column: 22, scope: !21917)
!21921 = !DILocation(line: 32, column: 5, scope: !21917)
!21922 = !DILocation(line: 32, column: 9, scope: !21917)
!21923 = !DILocation(line: 32, column: 17, scope: !21917)
!21924 = !DILocation(line: 32, column: 20, scope: !21917)
!21925 = !DILocation(line: 31, column: 33, scope: !21917)
!21926 = !DILocation(line: 31, column: 3, scope: !21917)
!21927 = distinct !{!21927, !21919, !21928}
!21928 = !DILocation(line: 32, column: 22, scope: !21914)
!21929 = !DILocation(line: 33, column: 24, scope: !21893)
!21930 = !DILocation(line: 33, column: 3, scope: !21893)
!21931 = !DILocation(line: 33, column: 7, scope: !21893)
!21932 = !DILocation(line: 33, column: 22, scope: !21893)
!21933 = !DILocation(line: 34, column: 1, scope: !21893)
!21934 = distinct !DISubprogram(name: "i_ring_empty", scope: !21894, file: !21894, line: 37, type: !21935, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1907, retainedNodes: !213)
!21935 = !DISubroutineType(types: !21936)
!21936 = !{!139, !21937}
!21937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!21938 = !DILocalVariable(name: "ir", arg: 1, scope: !21934, file: !21894, line: 37, type: !21937)
!21939 = !DILocation(line: 37, column: 29, scope: !21934)
!21940 = !DILocation(line: 39, column: 10, scope: !21934)
!21941 = !DILocation(line: 39, column: 14, scope: !21934)
!21942 = !DILocation(line: 39, column: 3, scope: !21934)
!21943 = distinct !DISubprogram(name: "i_ring_push", scope: !21894, file: !21894, line: 43, type: !21944, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1907, retainedNodes: !213)
!21944 = !DISubroutineType(types: !21945)
!21945 = !{!5, !21897, !5}
!21946 = !DILocalVariable(name: "ir", arg: 1, scope: !21943, file: !21894, line: 43, type: !21897)
!21947 = !DILocation(line: 43, column: 22, scope: !21943)
!21948 = !DILocalVariable(name: "val", arg: 2, scope: !21943, file: !21894, line: 43, type: !5)
!21949 = !DILocation(line: 43, column: 30, scope: !21943)
!21950 = !DILocalVariable(name: "dest_idx", scope: !21943, file: !21894, line: 45, type: !67)
!21951 = !DILocation(line: 45, column: 16, scope: !21943)
!21952 = !DILocation(line: 45, column: 28, scope: !21943)
!21953 = !DILocation(line: 45, column: 32, scope: !21943)
!21954 = !DILocation(line: 45, column: 44, scope: !21943)
!21955 = !DILocation(line: 45, column: 48, scope: !21943)
!21956 = !DILocation(line: 45, column: 43, scope: !21943)
!21957 = !DILocation(line: 45, column: 41, scope: !21943)
!21958 = !DILocation(line: 45, column: 58, scope: !21943)
!21959 = !DILocalVariable(name: "old_val", scope: !21943, file: !21894, line: 46, type: !5)
!21960 = !DILocation(line: 46, column: 7, scope: !21943)
!21961 = !DILocation(line: 46, column: 17, scope: !21943)
!21962 = !DILocation(line: 46, column: 21, scope: !21943)
!21963 = !DILocation(line: 46, column: 29, scope: !21943)
!21964 = !DILocation(line: 47, column: 27, scope: !21943)
!21965 = !DILocation(line: 47, column: 3, scope: !21943)
!21966 = !DILocation(line: 47, column: 7, scope: !21943)
!21967 = !DILocation(line: 47, column: 15, scope: !21943)
!21968 = !DILocation(line: 47, column: 25, scope: !21943)
!21969 = !DILocation(line: 48, column: 18, scope: !21943)
!21970 = !DILocation(line: 48, column: 3, scope: !21943)
!21971 = !DILocation(line: 48, column: 7, scope: !21943)
!21972 = !DILocation(line: 48, column: 16, scope: !21943)
!21973 = !DILocation(line: 49, column: 7, scope: !21974)
!21974 = distinct !DILexicalBlock(scope: !21943, file: !21894, line: 49, column: 7)
!21975 = !DILocation(line: 49, column: 19, scope: !21974)
!21976 = !DILocation(line: 49, column: 23, scope: !21974)
!21977 = !DILocation(line: 49, column: 16, scope: !21974)
!21978 = !DILocation(line: 49, column: 7, scope: !21943)
!21979 = !DILocation(line: 50, column: 20, scope: !21974)
!21980 = !DILocation(line: 50, column: 24, scope: !21974)
!21981 = !DILocation(line: 50, column: 35, scope: !21974)
!21982 = !DILocation(line: 50, column: 39, scope: !21974)
!21983 = !DILocation(line: 50, column: 34, scope: !21974)
!21984 = !DILocation(line: 50, column: 32, scope: !21974)
!21985 = !DILocation(line: 50, column: 49, scope: !21974)
!21986 = !DILocation(line: 50, column: 5, scope: !21974)
!21987 = !DILocation(line: 50, column: 9, scope: !21974)
!21988 = !DILocation(line: 50, column: 17, scope: !21974)
!21989 = !DILocation(line: 51, column: 3, scope: !21943)
!21990 = !DILocation(line: 51, column: 7, scope: !21943)
!21991 = !DILocation(line: 51, column: 16, scope: !21943)
!21992 = !DILocation(line: 52, column: 10, scope: !21943)
!21993 = !DILocation(line: 52, column: 3, scope: !21943)
!21994 = distinct !DISubprogram(name: "i_ring_pop", scope: !21894, file: !21894, line: 56, type: !21995, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1907, retainedNodes: !213)
!21995 = !DISubroutineType(types: !21996)
!21996 = !{!5, !21897}
!21997 = !DILocalVariable(name: "ir", arg: 1, scope: !21994, file: !21894, line: 56, type: !21897)
!21998 = !DILocation(line: 56, column: 21, scope: !21994)
!21999 = !DILocalVariable(name: "top_val", scope: !21994, file: !21894, line: 58, type: !5)
!22000 = !DILocation(line: 58, column: 7, scope: !21994)
!22001 = !DILocation(line: 59, column: 21, scope: !22002)
!22002 = distinct !DILexicalBlock(scope: !21994, file: !21894, line: 59, column: 7)
!22003 = !DILocation(line: 59, column: 7, scope: !22002)
!22004 = !DILocation(line: 59, column: 7, scope: !21994)
!22005 = !DILocation(line: 60, column: 5, scope: !22002)
!22006 = !DILocation(line: 61, column: 13, scope: !21994)
!22007 = !DILocation(line: 61, column: 17, scope: !21994)
!22008 = !DILocation(line: 61, column: 25, scope: !21994)
!22009 = !DILocation(line: 61, column: 29, scope: !21994)
!22010 = !DILocation(line: 61, column: 11, scope: !21994)
!22011 = !DILocation(line: 62, column: 31, scope: !21994)
!22012 = !DILocation(line: 62, column: 35, scope: !21994)
!22013 = !DILocation(line: 62, column: 3, scope: !21994)
!22014 = !DILocation(line: 62, column: 7, scope: !21994)
!22015 = !DILocation(line: 62, column: 15, scope: !21994)
!22016 = !DILocation(line: 62, column: 19, scope: !21994)
!22017 = !DILocation(line: 62, column: 29, scope: !21994)
!22018 = !DILocation(line: 63, column: 7, scope: !22019)
!22019 = distinct !DILexicalBlock(scope: !21994, file: !21894, line: 63, column: 7)
!22020 = !DILocation(line: 63, column: 11, scope: !22019)
!22021 = !DILocation(line: 63, column: 23, scope: !22019)
!22022 = !DILocation(line: 63, column: 27, scope: !22019)
!22023 = !DILocation(line: 63, column: 20, scope: !22019)
!22024 = !DILocation(line: 63, column: 7, scope: !21994)
!22025 = !DILocation(line: 64, column: 5, scope: !22019)
!22026 = !DILocation(line: 64, column: 9, scope: !22019)
!22027 = !DILocation(line: 64, column: 18, scope: !22019)
!22028 = !DILocation(line: 66, column: 22, scope: !22019)
!22029 = !DILocation(line: 66, column: 26, scope: !22019)
!22030 = !DILocation(line: 66, column: 35, scope: !22019)
!22031 = !DILocation(line: 66, column: 49, scope: !22019)
!22032 = !DILocation(line: 66, column: 54, scope: !22019)
!22033 = !DILocation(line: 66, column: 5, scope: !22019)
!22034 = !DILocation(line: 66, column: 9, scope: !22019)
!22035 = !DILocation(line: 66, column: 18, scope: !22019)
!22036 = !DILocation(line: 67, column: 10, scope: !21994)
!22037 = !DILocation(line: 67, column: 3, scope: !21994)
!22038 = distinct !DISubprogram(name: "locale_charset", scope: !22039, file: !22039, line: 826, type: !22040, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1919, retainedNodes: !213)
!22039 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mohamad/clone/coreutils")
!22040 = !DISubroutineType(types: !514)
!22041 = !DILocalVariable(name: "codeset", scope: !22038, file: !22039, line: 828, type: !113)
!22042 = !DILocation(line: 828, column: 15, scope: !22038)
!22043 = !DILocation(line: 835, column: 13, scope: !22038)
!22044 = !DILocation(line: 835, column: 11, scope: !22038)
!22045 = !DILocation(line: 893, column: 7, scope: !22046)
!22046 = distinct !DILexicalBlock(scope: !22038, file: !22039, line: 893, column: 7)
!22047 = !DILocation(line: 893, column: 15, scope: !22046)
!22048 = !DILocation(line: 893, column: 7, scope: !22038)
!22049 = !DILocation(line: 895, column: 13, scope: !22046)
!22050 = !DILocation(line: 895, column: 5, scope: !22046)
!22051 = !DILocation(line: 1051, column: 13, scope: !22052)
!22052 = distinct !DILexicalBlock(scope: !22053, file: !22039, line: 1051, column: 13)
!22053 = distinct !DILexicalBlock(scope: !22054, file: !22039, line: 1041, column: 7)
!22054 = distinct !DILexicalBlock(scope: !22038, file: !22039, line: 1000, column: 3)
!22055 = !DILocation(line: 1051, column: 24, scope: !22052)
!22056 = !DILocation(line: 1051, column: 13, scope: !22053)
!22057 = !DILocation(line: 1052, column: 19, scope: !22052)
!22058 = !DILocation(line: 1052, column: 11, scope: !22052)
!22059 = !DILocation(line: 1139, column: 10, scope: !22038)
!22060 = !DILocation(line: 1139, column: 3, scope: !22038)
!22061 = distinct !DISubprogram(name: "openat_safer", scope: !22062, file: !22062, line: 29, type: !22063, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1922, retainedNodes: !213)
!22062 = !DIFile(filename: "lib/openat-safer.c", directory: "/home/mohamad/clone/coreutils")
!22063 = !DISubroutineType(types: !22064)
!22064 = !{!5, !5, !113, !5, null}
!22065 = !DILocalVariable(name: "fd", arg: 1, scope: !22061, file: !22062, line: 29, type: !5)
!22066 = !DILocation(line: 29, column: 19, scope: !22061)
!22067 = !DILocalVariable(name: "file", arg: 2, scope: !22061, file: !22062, line: 29, type: !113)
!22068 = !DILocation(line: 29, column: 35, scope: !22061)
!22069 = !DILocalVariable(name: "flags", arg: 3, scope: !22061, file: !22062, line: 29, type: !5)
!22070 = !DILocation(line: 29, column: 45, scope: !22061)
!22071 = !DILocalVariable(name: "mode", scope: !22061, file: !22062, line: 31, type: !236)
!22072 = !DILocation(line: 31, column: 10, scope: !22061)
!22073 = !DILocation(line: 33, column: 7, scope: !22074)
!22074 = distinct !DILexicalBlock(scope: !22061, file: !22062, line: 33, column: 7)
!22075 = !DILocation(line: 33, column: 13, scope: !22074)
!22076 = !DILocation(line: 33, column: 7, scope: !22061)
!22077 = !DILocalVariable(name: "ap", scope: !22078, file: !22062, line: 35, type: !1925)
!22078 = distinct !DILexicalBlock(scope: !22074, file: !22062, line: 34, column: 5)
!22079 = !DILocation(line: 35, column: 15, scope: !22078)
!22080 = !DILocation(line: 36, column: 7, scope: !22078)
!22081 = !DILocation(line: 40, column: 14, scope: !22078)
!22082 = !DILocation(line: 40, column: 12, scope: !22078)
!22083 = !DILocation(line: 42, column: 7, scope: !22078)
!22084 = !DILocation(line: 43, column: 5, scope: !22078)
!22085 = !DILocation(line: 45, column: 28, scope: !22061)
!22086 = !DILocation(line: 45, column: 32, scope: !22061)
!22087 = !DILocation(line: 45, column: 38, scope: !22061)
!22088 = !DILocation(line: 45, column: 45, scope: !22061)
!22089 = !DILocation(line: 45, column: 20, scope: !22061)
!22090 = !DILocation(line: 45, column: 10, scope: !22061)
!22091 = !DILocation(line: 45, column: 3, scope: !22061)
!22092 = distinct !DISubprogram(name: "randint_new", scope: !1939, file: !1939, line: 71, type: !22093, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1934, retainedNodes: !213)
!22093 = !DISubroutineType(types: !22094)
!22094 = !{!1937, !1942}
!22095 = !DILocalVariable(name: "source", arg: 1, scope: !22092, file: !1939, line: 71, type: !1942)
!22096 = !DILocation(line: 71, column: 38, scope: !22092)
!22097 = !DILocalVariable(name: "s", scope: !22092, file: !1939, line: 73, type: !1937)
!22098 = !DILocation(line: 73, column: 26, scope: !22092)
!22099 = !DILocation(line: 73, column: 30, scope: !22092)
!22100 = !DILocation(line: 74, column: 15, scope: !22092)
!22101 = !DILocation(line: 74, column: 3, scope: !22092)
!22102 = !DILocation(line: 74, column: 6, scope: !22092)
!22103 = !DILocation(line: 74, column: 13, scope: !22092)
!22104 = !DILocation(line: 75, column: 16, scope: !22092)
!22105 = !DILocation(line: 75, column: 19, scope: !22092)
!22106 = !DILocation(line: 75, column: 27, scope: !22092)
!22107 = !DILocation(line: 75, column: 3, scope: !22092)
!22108 = !DILocation(line: 75, column: 6, scope: !22092)
!22109 = !DILocation(line: 75, column: 14, scope: !22092)
!22110 = !DILocation(line: 76, column: 10, scope: !22092)
!22111 = !DILocation(line: 76, column: 3, scope: !22092)
!22112 = distinct !DISubprogram(name: "randint_all_new", scope: !1939, file: !1939, line: 84, type: !22113, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1934, retainedNodes: !213)
!22113 = !DISubroutineType(types: !22114)
!22114 = !{!1937, !113, !52}
!22115 = !DILocalVariable(name: "name", arg: 1, scope: !22112, file: !1939, line: 84, type: !113)
!22116 = !DILocation(line: 84, column: 30, scope: !22112)
!22117 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !22112, file: !1939, line: 84, type: !52)
!22118 = !DILocation(line: 84, column: 43, scope: !22112)
!22119 = !DILocalVariable(name: "source", scope: !22112, file: !1939, line: 86, type: !1942)
!22120 = !DILocation(line: 86, column: 27, scope: !22112)
!22121 = !DILocation(line: 86, column: 50, scope: !22112)
!22122 = !DILocation(line: 86, column: 56, scope: !22112)
!22123 = !DILocation(line: 86, column: 36, scope: !22112)
!22124 = !DILocation(line: 87, column: 11, scope: !22112)
!22125 = !DILocation(line: 87, column: 33, scope: !22112)
!22126 = !DILocation(line: 87, column: 20, scope: !22112)
!22127 = !DILocation(line: 87, column: 3, scope: !22112)
!22128 = distinct !DISubprogram(name: "randint_get_source", scope: !1939, file: !1939, line: 93, type: !22129, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1934, retainedNodes: !213)
!22129 = !DISubroutineType(types: !22130)
!22130 = !{!1942, !22131}
!22131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22132, size: 64)
!22132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1938)
!22133 = !DILocalVariable(name: "s", arg: 1, scope: !22128, file: !1939, line: 93, type: !22131)
!22134 = !DILocation(line: 93, column: 50, scope: !22128)
!22135 = !DILocation(line: 95, column: 10, scope: !22128)
!22136 = !DILocation(line: 95, column: 13, scope: !22128)
!22137 = !DILocation(line: 95, column: 3, scope: !22128)
!22138 = distinct !DISubprogram(name: "randint_genmax", scope: !1939, file: !1939, line: 114, type: !22139, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1934, retainedNodes: !213)
!22139 = !DISubroutineType(types: !22140)
!22140 = !{!1946, !1937, !1946}
!22141 = !DILocalVariable(name: "s", arg: 1, scope: !22138, file: !1939, line: 114, type: !1937)
!22142 = !DILocation(line: 114, column: 40, scope: !22138)
!22143 = !DILocalVariable(name: "genmax", arg: 2, scope: !22138, file: !1939, line: 114, type: !1946)
!22144 = !DILocation(line: 114, column: 51, scope: !22138)
!22145 = !DILocalVariable(name: "source", scope: !22138, file: !1939, line: 116, type: !1942)
!22146 = !DILocation(line: 116, column: 27, scope: !22138)
!22147 = !DILocation(line: 116, column: 36, scope: !22138)
!22148 = !DILocation(line: 116, column: 39, scope: !22138)
!22149 = !DILocalVariable(name: "randnum", scope: !22138, file: !1939, line: 117, type: !1946)
!22150 = !DILocation(line: 117, column: 11, scope: !22138)
!22151 = !DILocation(line: 117, column: 21, scope: !22138)
!22152 = !DILocation(line: 117, column: 24, scope: !22138)
!22153 = !DILocalVariable(name: "randmax", scope: !22138, file: !1939, line: 118, type: !1946)
!22154 = !DILocation(line: 118, column: 11, scope: !22138)
!22155 = !DILocation(line: 118, column: 21, scope: !22138)
!22156 = !DILocation(line: 118, column: 24, scope: !22138)
!22157 = !DILocalVariable(name: "choices", scope: !22138, file: !1939, line: 119, type: !1946)
!22158 = !DILocation(line: 119, column: 11, scope: !22138)
!22159 = !DILocation(line: 119, column: 21, scope: !22138)
!22160 = !DILocation(line: 119, column: 28, scope: !22138)
!22161 = !DILocation(line: 121, column: 3, scope: !22138)
!22162 = !DILocation(line: 123, column: 11, scope: !22163)
!22163 = distinct !DILexicalBlock(scope: !22164, file: !1939, line: 123, column: 11)
!22164 = distinct !DILexicalBlock(scope: !22138, file: !1939, line: 122, column: 5)
!22165 = !DILocation(line: 123, column: 21, scope: !22163)
!22166 = !DILocation(line: 123, column: 19, scope: !22163)
!22167 = !DILocation(line: 123, column: 11, scope: !22164)
!22168 = !DILocalVariable(name: "i", scope: !22169, file: !1939, line: 128, type: !52)
!22169 = distinct !DILexicalBlock(scope: !22163, file: !1939, line: 124, column: 9)
!22170 = !DILocation(line: 128, column: 18, scope: !22169)
!22171 = !DILocalVariable(name: "rmax", scope: !22169, file: !1939, line: 129, type: !1946)
!22172 = !DILocation(line: 129, column: 19, scope: !22169)
!22173 = !DILocation(line: 129, column: 26, scope: !22169)
!22174 = !DILocalVariable(name: "buf", scope: !22169, file: !1939, line: 130, type: !1948)
!22175 = !DILocation(line: 130, column: 25, scope: !22169)
!22176 = !DILocation(line: 132, column: 11, scope: !22169)
!22177 = !DILocation(line: 134, column: 34, scope: !22178)
!22178 = distinct !DILexicalBlock(scope: !22169, file: !1939, line: 133, column: 13)
!22179 = !DILocation(line: 134, column: 22, scope: !22178)
!22180 = !DILocation(line: 134, column: 40, scope: !22178)
!22181 = !DILocation(line: 134, column: 20, scope: !22178)
!22182 = !DILocation(line: 135, column: 16, scope: !22178)
!22183 = !DILocation(line: 136, column: 13, scope: !22178)
!22184 = !DILocation(line: 137, column: 18, scope: !22169)
!22185 = !DILocation(line: 137, column: 25, scope: !22169)
!22186 = !DILocation(line: 137, column: 23, scope: !22169)
!22187 = distinct !{!22187, !22176, !22188}
!22188 = !DILocation(line: 137, column: 31, scope: !22169)
!22189 = !DILocation(line: 139, column: 21, scope: !22169)
!22190 = !DILocation(line: 139, column: 29, scope: !22169)
!22191 = !DILocation(line: 139, column: 34, scope: !22169)
!22192 = !DILocation(line: 139, column: 11, scope: !22169)
!22193 = !DILocation(line: 148, column: 13, scope: !22169)
!22194 = !DILocation(line: 150, column: 11, scope: !22169)
!22195 = !DILocation(line: 152, column: 37, scope: !22196)
!22196 = distinct !DILexicalBlock(scope: !22169, file: !1939, line: 151, column: 13)
!22197 = !DILocation(line: 152, column: 25, scope: !22196)
!22198 = !DILocation(line: 152, column: 52, scope: !22196)
!22199 = !DILocation(line: 152, column: 48, scope: !22196)
!22200 = !DILocation(line: 152, column: 46, scope: !22196)
!22201 = !DILocation(line: 152, column: 23, scope: !22196)
!22202 = !DILocation(line: 153, column: 37, scope: !22196)
!22203 = !DILocation(line: 153, column: 25, scope: !22196)
!22204 = !DILocation(line: 153, column: 46, scope: !22196)
!22205 = !DILocation(line: 153, column: 23, scope: !22196)
!22206 = !DILocation(line: 154, column: 16, scope: !22196)
!22207 = !DILocation(line: 155, column: 13, scope: !22196)
!22208 = !DILocation(line: 156, column: 18, scope: !22169)
!22209 = !DILocation(line: 156, column: 28, scope: !22169)
!22210 = !DILocation(line: 156, column: 26, scope: !22169)
!22211 = distinct !{!22211, !22194, !22212}
!22212 = !DILocation(line: 156, column: 34, scope: !22169)
!22213 = !DILocation(line: 157, column: 9, scope: !22169)
!22214 = !DILocation(line: 159, column: 11, scope: !22215)
!22215 = distinct !DILexicalBlock(scope: !22164, file: !1939, line: 159, column: 11)
!22216 = !DILocation(line: 159, column: 22, scope: !22215)
!22217 = !DILocation(line: 159, column: 19, scope: !22215)
!22218 = !DILocation(line: 159, column: 11, scope: !22164)
!22219 = !DILocation(line: 161, column: 24, scope: !22220)
!22220 = distinct !DILexicalBlock(scope: !22215, file: !1939, line: 160, column: 9)
!22221 = !DILocation(line: 161, column: 27, scope: !22220)
!22222 = !DILocation(line: 161, column: 35, scope: !22220)
!22223 = !DILocation(line: 161, column: 11, scope: !22220)
!22224 = !DILocation(line: 161, column: 14, scope: !22220)
!22225 = !DILocation(line: 161, column: 22, scope: !22220)
!22226 = !DILocation(line: 162, column: 18, scope: !22220)
!22227 = !DILocation(line: 162, column: 11, scope: !22220)
!22228 = !DILocalVariable(name: "excess_choices", scope: !22229, file: !1939, line: 176, type: !1946)
!22229 = distinct !DILexicalBlock(scope: !22215, file: !1939, line: 165, column: 9)
!22230 = !DILocation(line: 176, column: 19, scope: !22229)
!22231 = !DILocation(line: 176, column: 36, scope: !22229)
!22232 = !DILocation(line: 176, column: 46, scope: !22229)
!22233 = !DILocation(line: 176, column: 44, scope: !22229)
!22234 = !DILocalVariable(name: "unusable_choices", scope: !22229, file: !1939, line: 177, type: !1946)
!22235 = !DILocation(line: 177, column: 19, scope: !22229)
!22236 = !DILocation(line: 177, column: 38, scope: !22229)
!22237 = !DILocation(line: 177, column: 55, scope: !22229)
!22238 = !DILocation(line: 177, column: 53, scope: !22229)
!22239 = !DILocalVariable(name: "last_usable_choice", scope: !22229, file: !1939, line: 178, type: !1946)
!22240 = !DILocation(line: 178, column: 19, scope: !22229)
!22241 = !DILocation(line: 178, column: 40, scope: !22229)
!22242 = !DILocation(line: 178, column: 50, scope: !22229)
!22243 = !DILocation(line: 178, column: 48, scope: !22229)
!22244 = !DILocalVariable(name: "reduced_randnum", scope: !22229, file: !1939, line: 179, type: !1946)
!22245 = !DILocation(line: 179, column: 19, scope: !22229)
!22246 = !DILocation(line: 179, column: 37, scope: !22229)
!22247 = !DILocation(line: 179, column: 47, scope: !22229)
!22248 = !DILocation(line: 179, column: 45, scope: !22229)
!22249 = !DILocation(line: 181, column: 15, scope: !22250)
!22250 = distinct !DILexicalBlock(scope: !22229, file: !1939, line: 181, column: 15)
!22251 = !DILocation(line: 181, column: 26, scope: !22250)
!22252 = !DILocation(line: 181, column: 23, scope: !22250)
!22253 = !DILocation(line: 181, column: 15, scope: !22229)
!22254 = !DILocation(line: 183, column: 28, scope: !22255)
!22255 = distinct !DILexicalBlock(scope: !22250, file: !1939, line: 182, column: 13)
!22256 = !DILocation(line: 183, column: 38, scope: !22255)
!22257 = !DILocation(line: 183, column: 36, scope: !22255)
!22258 = !DILocation(line: 183, column: 15, scope: !22255)
!22259 = !DILocation(line: 183, column: 18, scope: !22255)
!22260 = !DILocation(line: 183, column: 26, scope: !22255)
!22261 = !DILocation(line: 184, column: 28, scope: !22255)
!22262 = !DILocation(line: 184, column: 45, scope: !22255)
!22263 = !DILocation(line: 184, column: 43, scope: !22255)
!22264 = !DILocation(line: 184, column: 15, scope: !22255)
!22265 = !DILocation(line: 184, column: 18, scope: !22255)
!22266 = !DILocation(line: 184, column: 26, scope: !22255)
!22267 = !DILocation(line: 185, column: 22, scope: !22255)
!22268 = !DILocation(line: 185, column: 15, scope: !22255)
!22269 = !DILocation(line: 190, column: 21, scope: !22229)
!22270 = !DILocation(line: 190, column: 19, scope: !22229)
!22271 = !DILocation(line: 191, column: 21, scope: !22229)
!22272 = !DILocation(line: 191, column: 38, scope: !22229)
!22273 = !DILocation(line: 191, column: 19, scope: !22229)
!22274 = distinct !{!22274, !22161, !22275}
!22275 = !DILocation(line: 193, column: 5, scope: !22138)
!22276 = !DILocation(line: 194, column: 1, scope: !22138)
!22277 = distinct !DISubprogram(name: "shift_left", scope: !1939, file: !1939, line: 104, type: !22278, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1934, retainedNodes: !213)
!22278 = !DISubroutineType(types: !22279)
!22279 = !{!1946, !1946}
!22280 = !DILocalVariable(name: "x", arg: 1, scope: !22277, file: !1939, line: 104, type: !1946)
!22281 = !DILocation(line: 104, column: 43, scope: !22277)
!22282 = !DILocation(line: 106, column: 27, scope: !22277)
!22283 = !DILocation(line: 106, column: 29, scope: !22277)
!22284 = !DILocation(line: 106, column: 3, scope: !22277)
!22285 = distinct !DISubprogram(name: "randint_free", scope: !1939, file: !1939, line: 199, type: !22286, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1934, retainedNodes: !213)
!22286 = !DISubroutineType(types: !22287)
!22287 = !{null, !1937}
!22288 = !DILocalVariable(name: "s", arg: 1, scope: !22285, file: !1939, line: 199, type: !1937)
!22289 = !DILocation(line: 199, column: 38, scope: !22285)
!22290 = !DILocation(line: 201, column: 19, scope: !22285)
!22291 = !DILocation(line: 201, column: 3, scope: !22285)
!22292 = !DILocation(line: 202, column: 9, scope: !22285)
!22293 = !DILocation(line: 202, column: 3, scope: !22285)
!22294 = !DILocation(line: 203, column: 1, scope: !22285)
!22295 = distinct !DISubprogram(name: "randint_all_free", scope: !1939, file: !1939, line: 209, type: !22296, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1934, retainedNodes: !213)
!22296 = !DISubroutineType(types: !22297)
!22297 = !{!5, !1937}
!22298 = !DILocalVariable(name: "s", arg: 1, scope: !22295, file: !1939, line: 209, type: !1937)
!22299 = !DILocation(line: 209, column: 42, scope: !22295)
!22300 = !DILocalVariable(name: "r", scope: !22295, file: !1939, line: 211, type: !5)
!22301 = !DILocation(line: 211, column: 7, scope: !22295)
!22302 = !DILocation(line: 211, column: 26, scope: !22295)
!22303 = !DILocation(line: 211, column: 29, scope: !22295)
!22304 = !DILocation(line: 211, column: 11, scope: !22295)
!22305 = !DILocalVariable(name: "e", scope: !22295, file: !1939, line: 212, type: !5)
!22306 = !DILocation(line: 212, column: 7, scope: !22295)
!22307 = !DILocation(line: 212, column: 11, scope: !22295)
!22308 = !DILocation(line: 213, column: 17, scope: !22295)
!22309 = !DILocation(line: 213, column: 3, scope: !22295)
!22310 = !DILocation(line: 214, column: 11, scope: !22295)
!22311 = !DILocation(line: 214, column: 3, scope: !22295)
!22312 = !DILocation(line: 214, column: 9, scope: !22295)
!22313 = !DILocation(line: 215, column: 10, scope: !22295)
!22314 = !DILocation(line: 215, column: 3, scope: !22295)
!22315 = distinct !DISubprogram(name: "randread_new", scope: !1994, file: !1994, line: 204, type: !22316, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1949, retainedNodes: !213)
!22316 = !DISubroutineType(types: !22317)
!22317 = !{!1992, !113, !52}
!22318 = !DILocalVariable(name: "name", arg: 1, scope: !22315, file: !1994, line: 204, type: !113)
!22319 = !DILocation(line: 204, column: 27, scope: !22315)
!22320 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !22315, file: !1994, line: 204, type: !52)
!22321 = !DILocation(line: 204, column: 40, scope: !22315)
!22322 = !DILocation(line: 206, column: 7, scope: !22323)
!22323 = distinct !DILexicalBlock(scope: !22315, file: !1994, line: 206, column: 7)
!22324 = !DILocation(line: 206, column: 19, scope: !22323)
!22325 = !DILocation(line: 206, column: 7, scope: !22315)
!22326 = !DILocation(line: 207, column: 12, scope: !22323)
!22327 = !DILocation(line: 207, column: 5, scope: !22323)
!22328 = !DILocalVariable(name: "source", scope: !22329, file: !1994, line: 210, type: !1952)
!22329 = distinct !DILexicalBlock(scope: !22323, file: !1994, line: 209, column: 5)
!22330 = !DILocation(line: 210, column: 13, scope: !22329)
!22331 = !DILocalVariable(name: "s", scope: !22329, file: !1994, line: 211, type: !1992)
!22332 = !DILocation(line: 211, column: 31, scope: !22329)
!22333 = !DILocation(line: 213, column: 11, scope: !22334)
!22334 = distinct !DILexicalBlock(scope: !22329, file: !1994, line: 213, column: 11)
!22335 = !DILocation(line: 213, column: 11, scope: !22329)
!22336 = !DILocation(line: 214, column: 38, scope: !22337)
!22337 = distinct !DILexicalBlock(scope: !22334, file: !1994, line: 214, column: 13)
!22338 = !DILocation(line: 214, column: 25, scope: !22337)
!22339 = !DILocation(line: 214, column: 23, scope: !22337)
!22340 = !DILocation(line: 214, column: 13, scope: !22334)
!22341 = !DILocation(line: 215, column: 11, scope: !22337)
!22342 = !DILocation(line: 214, column: 49, scope: !22337)
!22343 = !DILocation(line: 217, column: 23, scope: !22329)
!22344 = !DILocation(line: 217, column: 31, scope: !22329)
!22345 = !DILocation(line: 217, column: 11, scope: !22329)
!22346 = !DILocation(line: 217, column: 9, scope: !22329)
!22347 = !DILocation(line: 219, column: 11, scope: !22348)
!22348 = distinct !DILexicalBlock(scope: !22329, file: !1994, line: 219, column: 11)
!22349 = !DILocation(line: 219, column: 11, scope: !22329)
!22350 = !DILocation(line: 220, column: 18, scope: !22348)
!22351 = !DILocation(line: 220, column: 26, scope: !22348)
!22352 = !DILocation(line: 220, column: 29, scope: !22348)
!22353 = !DILocation(line: 220, column: 33, scope: !22348)
!22354 = !DILocation(line: 220, column: 44, scope: !22348)
!22355 = !DILocation(line: 220, column: 9, scope: !22348)
!22356 = !DILocation(line: 223, column: 11, scope: !22357)
!22357 = distinct !DILexicalBlock(scope: !22348, file: !1994, line: 222, column: 9)
!22358 = !DILocation(line: 223, column: 14, scope: !22357)
!22359 = !DILocation(line: 223, column: 18, scope: !22357)
!22360 = !DILocation(line: 223, column: 24, scope: !22357)
!22361 = !DILocation(line: 223, column: 33, scope: !22357)
!22362 = !DILocation(line: 224, column: 22, scope: !22357)
!22363 = !DILocation(line: 224, column: 25, scope: !22357)
!22364 = !DILocation(line: 224, column: 29, scope: !22357)
!22365 = !DILocation(line: 224, column: 35, scope: !22357)
!22366 = !DILocation(line: 224, column: 41, scope: !22357)
!22367 = !DILocation(line: 225, column: 22, scope: !22357)
!22368 = !DILocation(line: 224, column: 11, scope: !22357)
!22369 = !DILocation(line: 226, column: 24, scope: !22357)
!22370 = !DILocation(line: 226, column: 27, scope: !22357)
!22371 = !DILocation(line: 226, column: 31, scope: !22357)
!22372 = !DILocation(line: 226, column: 37, scope: !22357)
!22373 = !DILocation(line: 226, column: 11, scope: !22357)
!22374 = !DILocation(line: 229, column: 14, scope: !22329)
!22375 = !DILocation(line: 229, column: 7, scope: !22329)
!22376 = !DILocation(line: 231, column: 1, scope: !22315)
!22377 = distinct !DISubprogram(name: "simple_new", scope: !1994, file: !1994, line: 137, type: !22378, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1949, retainedNodes: !213)
!22378 = !DISubroutineType(types: !22379)
!22379 = !{!1992, !1952, !553}
!22380 = !DILocalVariable(name: "source", arg: 1, scope: !22377, file: !1994, line: 137, type: !1952)
!22381 = !DILocation(line: 137, column: 19, scope: !22377)
!22382 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !22377, file: !1994, line: 137, type: !553)
!22383 = !DILocation(line: 137, column: 39, scope: !22377)
!22384 = !DILocalVariable(name: "s", scope: !22377, file: !1994, line: 139, type: !1992)
!22385 = !DILocation(line: 139, column: 27, scope: !22377)
!22386 = !DILocation(line: 139, column: 31, scope: !22377)
!22387 = !DILocation(line: 140, column: 15, scope: !22377)
!22388 = !DILocation(line: 140, column: 3, scope: !22377)
!22389 = !DILocation(line: 140, column: 6, scope: !22377)
!22390 = !DILocation(line: 140, column: 13, scope: !22377)
!22391 = !DILocation(line: 141, column: 3, scope: !22377)
!22392 = !DILocation(line: 141, column: 6, scope: !22377)
!22393 = !DILocation(line: 141, column: 14, scope: !22377)
!22394 = !DILocation(line: 142, column: 20, scope: !22377)
!22395 = !DILocation(line: 142, column: 3, scope: !22377)
!22396 = !DILocation(line: 142, column: 6, scope: !22377)
!22397 = !DILocation(line: 142, column: 18, scope: !22377)
!22398 = !DILocation(line: 143, column: 10, scope: !22377)
!22399 = !DILocation(line: 143, column: 3, scope: !22377)
!22400 = distinct !DISubprogram(name: "get_nonce", scope: !1994, file: !1994, line: 151, type: !22401, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1949, retainedNodes: !213)
!22401 = !DISubroutineType(types: !22402)
!22402 = !{null, !47, !52, !52}
!22403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !959, line: 30, size: 128, elements: !22404)
!22404 = !{!22405, !22406}
!22405 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !22403, file: !959, line: 32, baseType: !358, size: 64)
!22406 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !22403, file: !959, line: 33, baseType: !963, size: 64, offset: 64)
!22407 = !DILocalVariable(name: "buffer", arg: 1, scope: !22400, file: !1994, line: 151, type: !47)
!22408 = !DILocation(line: 151, column: 18, scope: !22400)
!22409 = !DILocalVariable(name: "bufsize", arg: 2, scope: !22400, file: !1994, line: 151, type: !52)
!22410 = !DILocation(line: 151, column: 33, scope: !22400)
!22411 = !DILocalVariable(name: "bytes_bound", arg: 3, scope: !22400, file: !1994, line: 151, type: !52)
!22412 = !DILocation(line: 151, column: 49, scope: !22400)
!22413 = !DILocalVariable(name: "buf", scope: !22400, file: !1994, line: 153, type: !7)
!22414 = !DILocation(line: 153, column: 9, scope: !22400)
!22415 = !DILocation(line: 153, column: 15, scope: !22400)
!22416 = !DILocalVariable(name: "seeded", scope: !22400, file: !1994, line: 154, type: !529)
!22417 = !DILocation(line: 154, column: 11, scope: !22400)
!22418 = !DILocalVariable(name: "fd", scope: !22400, file: !1994, line: 157, type: !5)
!22419 = !DILocation(line: 157, column: 7, scope: !22400)
!22420 = !DILocation(line: 157, column: 12, scope: !22400)
!22421 = !DILocation(line: 158, column: 12, scope: !22422)
!22422 = distinct !DILexicalBlock(scope: !22400, file: !1994, line: 158, column: 7)
!22423 = !DILocation(line: 158, column: 9, scope: !22422)
!22424 = !DILocation(line: 158, column: 7, scope: !22400)
!22425 = !DILocation(line: 160, column: 22, scope: !22426)
!22426 = distinct !DILexicalBlock(scope: !22422, file: !1994, line: 159, column: 5)
!22427 = !DILocation(line: 160, column: 26, scope: !22426)
!22428 = !DILocation(line: 160, column: 31, scope: !22426)
!22429 = !DILocation(line: 160, column: 16, scope: !22426)
!22430 = !DILocation(line: 160, column: 14, scope: !22426)
!22431 = !DILocation(line: 161, column: 11, scope: !22432)
!22432 = distinct !DILexicalBlock(scope: !22426, file: !1994, line: 161, column: 11)
!22433 = !DILocation(line: 161, column: 18, scope: !22432)
!22434 = !DILocation(line: 161, column: 11, scope: !22426)
!22435 = !DILocation(line: 162, column: 16, scope: !22432)
!22436 = !DILocation(line: 162, column: 9, scope: !22432)
!22437 = !DILocation(line: 163, column: 14, scope: !22426)
!22438 = !DILocation(line: 163, column: 7, scope: !22426)
!22439 = !DILocation(line: 164, column: 5, scope: !22426)
!22440 = !DILocation(line: 177, column: 3, scope: !22441)
!22441 = distinct !DILexicalBlock(scope: !22400, file: !1994, line: 177, column: 3)
!22442 = !DILocation(line: 177, column: 3, scope: !22400)
!22443 = !DILocalVariable(name: "v", scope: !22444, file: !1994, line: 177, type: !22403)
!22444 = distinct !DILexicalBlock(scope: !22441, file: !1994, line: 177, column: 3)
!22445 = !DILocation(line: 177, column: 3, scope: !22444)
!22446 = !DILocalVariable(name: "nbytes", scope: !22444, file: !1994, line: 177, type: !52)
!22447 = !DILocation(line: 178, column: 3, scope: !22448)
!22448 = distinct !DILexicalBlock(scope: !22400, file: !1994, line: 178, column: 3)
!22449 = !DILocation(line: 178, column: 3, scope: !22400)
!22450 = !DILocalVariable(name: "v", scope: !22451, file: !1994, line: 178, type: !2032)
!22451 = distinct !DILexicalBlock(scope: !22448, file: !1994, line: 178, column: 3)
!22452 = !DILocation(line: 178, column: 3, scope: !22451)
!22453 = !DILocalVariable(name: "nbytes", scope: !22451, file: !1994, line: 178, type: !52)
!22454 = !DILocation(line: 179, column: 3, scope: !22455)
!22455 = distinct !DILexicalBlock(scope: !22400, file: !1994, line: 179, column: 3)
!22456 = !DILocation(line: 179, column: 3, scope: !22400)
!22457 = !DILocalVariable(name: "v", scope: !22458, file: !1994, line: 179, type: !2032)
!22458 = distinct !DILexicalBlock(scope: !22455, file: !1994, line: 179, column: 3)
!22459 = !DILocation(line: 179, column: 3, scope: !22458)
!22460 = !DILocalVariable(name: "nbytes", scope: !22458, file: !1994, line: 179, type: !52)
!22461 = !DILocation(line: 180, column: 3, scope: !22462)
!22462 = distinct !DILexicalBlock(scope: !22400, file: !1994, line: 180, column: 3)
!22463 = !DILocation(line: 180, column: 3, scope: !22400)
!22464 = !DILocalVariable(name: "v", scope: !22465, file: !1994, line: 180, type: !452)
!22465 = distinct !DILexicalBlock(scope: !22462, file: !1994, line: 180, column: 3)
!22466 = !DILocation(line: 180, column: 3, scope: !22465)
!22467 = !DILocalVariable(name: "nbytes", scope: !22465, file: !1994, line: 180, type: !52)
!22468 = !DILocation(line: 181, column: 3, scope: !22469)
!22469 = distinct !DILexicalBlock(scope: !22400, file: !1994, line: 181, column: 3)
!22470 = !DILocation(line: 181, column: 3, scope: !22400)
!22471 = !DILocalVariable(name: "v", scope: !22472, file: !1994, line: 181, type: !452)
!22472 = distinct !DILexicalBlock(scope: !22469, file: !1994, line: 181, column: 3)
!22473 = !DILocation(line: 181, column: 3, scope: !22472)
!22474 = !DILocalVariable(name: "nbytes", scope: !22472, file: !1994, line: 181, type: !52)
!22475 = !DILocation(line: 189, column: 1, scope: !22400)
!22476 = distinct !DISubprogram(name: "randread_error", scope: !1994, file: !1994, line: 124, type: !1999, scopeLine: 125, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1949, retainedNodes: !213)
!22477 = !DILocalVariable(name: "file_name", arg: 1, scope: !22476, file: !1994, line: 124, type: !553)
!22478 = !DILocation(line: 124, column: 29, scope: !22476)
!22479 = !DILocation(line: 126, column: 7, scope: !22480)
!22480 = distinct !DILexicalBlock(scope: !22476, file: !1994, line: 126, column: 7)
!22481 = !DILocation(line: 126, column: 7, scope: !22476)
!22482 = !DILocation(line: 127, column: 12, scope: !22480)
!22483 = !DILocation(line: 127, column: 26, scope: !22480)
!22484 = !DILocation(line: 128, column: 12, scope: !22480)
!22485 = !DILocation(line: 128, column: 18, scope: !22480)
!22486 = !DILocation(line: 128, column: 25, scope: !22480)
!22487 = !DILocation(line: 128, column: 48, scope: !22480)
!22488 = !DILocation(line: 129, column: 19, scope: !22480)
!22489 = !DILocation(line: 129, column: 12, scope: !22480)
!22490 = !DILocation(line: 127, column: 5, scope: !22480)
!22491 = !DILocation(line: 130, column: 3, scope: !22476)
!22492 = distinct !DISubprogram(name: "randread_set_handler", scope: !1994, file: !1994, line: 242, type: !22493, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1949, retainedNodes: !213)
!22493 = !DISubroutineType(types: !22494)
!22494 = !{null, !1992, !1998}
!22495 = !DILocalVariable(name: "s", arg: 1, scope: !22492, file: !1994, line: 242, type: !1992)
!22496 = !DILocation(line: 242, column: 47, scope: !22492)
!22497 = !DILocalVariable(name: "handler", arg: 2, scope: !22492, file: !1994, line: 242, type: !1998)
!22498 = !DILocation(line: 242, column: 57, scope: !22492)
!22499 = !DILocation(line: 244, column: 16, scope: !22492)
!22500 = !DILocation(line: 244, column: 3, scope: !22492)
!22501 = !DILocation(line: 244, column: 6, scope: !22492)
!22502 = !DILocation(line: 244, column: 14, scope: !22492)
!22503 = !DILocation(line: 245, column: 1, scope: !22492)
!22504 = distinct !DISubprogram(name: "randread_set_handler_arg", scope: !1994, file: !1994, line: 248, type: !22505, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1949, retainedNodes: !213)
!22505 = !DISubroutineType(types: !22506)
!22506 = !{null, !1992, !553}
!22507 = !DILocalVariable(name: "s", arg: 1, scope: !22504, file: !1994, line: 248, type: !1992)
!22508 = !DILocation(line: 248, column: 51, scope: !22504)
!22509 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !22504, file: !1994, line: 248, type: !553)
!22510 = !DILocation(line: 248, column: 66, scope: !22504)
!22511 = !DILocation(line: 250, column: 20, scope: !22504)
!22512 = !DILocation(line: 250, column: 3, scope: !22504)
!22513 = !DILocation(line: 250, column: 6, scope: !22504)
!22514 = !DILocation(line: 250, column: 18, scope: !22504)
!22515 = !DILocation(line: 251, column: 1, scope: !22504)
!22516 = distinct !DISubprogram(name: "randread", scope: !1994, file: !1994, line: 326, type: !22517, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1949, retainedNodes: !213)
!22517 = !DISubroutineType(types: !22518)
!22518 = !{null, !1992, !47, !52}
!22519 = !DILocalVariable(name: "s", arg: 1, scope: !22516, file: !1994, line: 326, type: !1992)
!22520 = !DILocation(line: 326, column: 35, scope: !22516)
!22521 = !DILocalVariable(name: "buf", arg: 2, scope: !22516, file: !1994, line: 326, type: !47)
!22522 = !DILocation(line: 326, column: 44, scope: !22516)
!22523 = !DILocalVariable(name: "size", arg: 3, scope: !22516, file: !1994, line: 326, type: !52)
!22524 = !DILocation(line: 326, column: 56, scope: !22516)
!22525 = !DILocation(line: 328, column: 7, scope: !22526)
!22526 = distinct !DILexicalBlock(scope: !22516, file: !1994, line: 328, column: 7)
!22527 = !DILocation(line: 328, column: 10, scope: !22526)
!22528 = !DILocation(line: 328, column: 7, scope: !22516)
!22529 = !DILocation(line: 329, column: 17, scope: !22526)
!22530 = !DILocation(line: 329, column: 20, scope: !22526)
!22531 = !DILocation(line: 329, column: 25, scope: !22526)
!22532 = !DILocation(line: 329, column: 5, scope: !22526)
!22533 = !DILocation(line: 331, column: 17, scope: !22526)
!22534 = !DILocation(line: 331, column: 20, scope: !22526)
!22535 = !DILocation(line: 331, column: 24, scope: !22526)
!22536 = !DILocation(line: 331, column: 31, scope: !22526)
!22537 = !DILocation(line: 331, column: 36, scope: !22526)
!22538 = !DILocation(line: 331, column: 5, scope: !22526)
!22539 = !DILocation(line: 332, column: 1, scope: !22516)
!22540 = distinct !DISubprogram(name: "readsource", scope: !1994, file: !1994, line: 258, type: !22541, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1949, retainedNodes: !213)
!22541 = !DISubroutineType(types: !22542)
!22542 = !{null, !1992, !22543, !52}
!22543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!22544 = !DILocalVariable(name: "s", arg: 1, scope: !22540, file: !1994, line: 258, type: !1992)
!22545 = !DILocation(line: 258, column: 37, scope: !22540)
!22546 = !DILocalVariable(name: "p", arg: 2, scope: !22540, file: !1994, line: 258, type: !22543)
!22547 = !DILocation(line: 258, column: 55, scope: !22540)
!22548 = !DILocalVariable(name: "size", arg: 3, scope: !22540, file: !1994, line: 258, type: !52)
!22549 = !DILocation(line: 258, column: 65, scope: !22540)
!22550 = !DILocation(line: 260, column: 3, scope: !22540)
!22551 = !DILocalVariable(name: "inbytes", scope: !22552, file: !1994, line: 262, type: !52)
!22552 = distinct !DILexicalBlock(scope: !22540, file: !1994, line: 261, column: 5)
!22553 = !DILocation(line: 262, column: 14, scope: !22552)
!22554 = !DILocation(line: 262, column: 24, scope: !22552)
!22555 = !DILocalVariable(name: "fread_errno", scope: !22552, file: !1994, line: 263, type: !5)
!22556 = !DILocation(line: 263, column: 11, scope: !22552)
!22557 = !DILocation(line: 263, column: 25, scope: !22552)
!22558 = !DILocation(line: 264, column: 12, scope: !22552)
!22559 = !DILocation(line: 264, column: 9, scope: !22552)
!22560 = !DILocation(line: 265, column: 15, scope: !22552)
!22561 = !DILocation(line: 265, column: 12, scope: !22552)
!22562 = !DILocation(line: 266, column: 11, scope: !22563)
!22563 = distinct !DILexicalBlock(scope: !22552, file: !1994, line: 266, column: 11)
!22564 = !DILocation(line: 266, column: 16, scope: !22563)
!22565 = !DILocation(line: 266, column: 11, scope: !22552)
!22566 = !DILocation(line: 267, column: 9, scope: !22563)
!22567 = !DILocation(line: 268, column: 16, scope: !22552)
!22568 = !DILocation(line: 268, column: 37, scope: !22552)
!22569 = !DILocation(line: 268, column: 7, scope: !22552)
!22570 = !DILocation(line: 268, column: 13, scope: !22552)
!22571 = !DILocation(line: 269, column: 7, scope: !22552)
!22572 = !DILocation(line: 269, column: 10, scope: !22552)
!22573 = !DILocation(line: 269, column: 19, scope: !22552)
!22574 = !DILocation(line: 269, column: 22, scope: !22552)
!22575 = distinct !{!22575, !22550, !22576}
!22576 = !DILocation(line: 270, column: 5, scope: !22540)
!22577 = !DILocation(line: 271, column: 1, scope: !22540)
!22578 = distinct !DISubprogram(name: "readisaac", scope: !1994, file: !1994, line: 278, type: !22579, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1949, retainedNodes: !213)
!22579 = !DISubroutineType(types: !22580)
!22580 = !{null, !22581, !47, !52}
!22581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!22582 = !DILocalVariable(name: "isaac", arg: 1, scope: !22578, file: !1994, line: 278, type: !22581)
!22583 = !DILocation(line: 278, column: 26, scope: !22578)
!22584 = !DILocalVariable(name: "p", arg: 2, scope: !22578, file: !1994, line: 278, type: !47)
!22585 = !DILocation(line: 278, column: 39, scope: !22578)
!22586 = !DILocalVariable(name: "size", arg: 3, scope: !22578, file: !1994, line: 278, type: !52)
!22587 = !DILocation(line: 278, column: 49, scope: !22578)
!22588 = !DILocalVariable(name: "inbytes", scope: !22578, file: !1994, line: 280, type: !52)
!22589 = !DILocation(line: 280, column: 10, scope: !22578)
!22590 = !DILocation(line: 280, column: 20, scope: !22578)
!22591 = !DILocation(line: 280, column: 27, scope: !22578)
!22592 = !DILocation(line: 282, column: 3, scope: !22578)
!22593 = !DILocalVariable(name: "char_p", scope: !22594, file: !1994, line: 284, type: !7)
!22594 = distinct !DILexicalBlock(scope: !22578, file: !1994, line: 283, column: 5)
!22595 = !DILocation(line: 284, column: 13, scope: !22594)
!22596 = !DILocation(line: 284, column: 22, scope: !22594)
!22597 = !DILocation(line: 286, column: 11, scope: !22598)
!22598 = distinct !DILexicalBlock(scope: !22594, file: !1994, line: 286, column: 11)
!22599 = !DILocation(line: 286, column: 19, scope: !22598)
!22600 = !DILocation(line: 286, column: 16, scope: !22598)
!22601 = !DILocation(line: 286, column: 11, scope: !22594)
!22602 = !DILocation(line: 288, column: 19, scope: !22603)
!22603 = distinct !DILexicalBlock(scope: !22598, file: !1994, line: 287, column: 9)
!22604 = !DILocation(line: 288, column: 22, scope: !22603)
!22605 = !DILocation(line: 288, column: 29, scope: !22603)
!22606 = !DILocation(line: 288, column: 34, scope: !22603)
!22607 = !DILocation(line: 288, column: 36, scope: !22603)
!22608 = !DILocation(line: 288, column: 52, scope: !22603)
!22609 = !DILocation(line: 288, column: 50, scope: !22603)
!22610 = !DILocation(line: 288, column: 61, scope: !22603)
!22611 = !DILocation(line: 288, column: 11, scope: !22603)
!22612 = !DILocation(line: 289, column: 29, scope: !22603)
!22613 = !DILocation(line: 289, column: 39, scope: !22603)
!22614 = !DILocation(line: 289, column: 37, scope: !22603)
!22615 = !DILocation(line: 289, column: 11, scope: !22603)
!22616 = !DILocation(line: 289, column: 18, scope: !22603)
!22617 = !DILocation(line: 289, column: 27, scope: !22603)
!22618 = !DILocation(line: 290, column: 11, scope: !22603)
!22619 = !DILocation(line: 293, column: 15, scope: !22594)
!22620 = !DILocation(line: 293, column: 18, scope: !22594)
!22621 = !DILocation(line: 293, column: 25, scope: !22594)
!22622 = !DILocation(line: 293, column: 30, scope: !22594)
!22623 = !DILocation(line: 293, column: 32, scope: !22594)
!22624 = !DILocation(line: 293, column: 48, scope: !22594)
!22625 = !DILocation(line: 293, column: 46, scope: !22594)
!22626 = !DILocation(line: 293, column: 57, scope: !22594)
!22627 = !DILocation(line: 293, column: 7, scope: !22594)
!22628 = !DILocation(line: 294, column: 11, scope: !22594)
!22629 = !DILocation(line: 294, column: 20, scope: !22594)
!22630 = !DILocation(line: 294, column: 18, scope: !22594)
!22631 = !DILocation(line: 294, column: 9, scope: !22594)
!22632 = !DILocation(line: 295, column: 15, scope: !22594)
!22633 = !DILocation(line: 295, column: 12, scope: !22594)
!22634 = !DILocation(line: 299, column: 11, scope: !22635)
!22635 = distinct !DILexicalBlock(scope: !22594, file: !1994, line: 299, column: 11)
!22636 = !DILocation(line: 299, column: 11, scope: !22594)
!22637 = !DILocalVariable(name: "wp", scope: !22638, file: !1994, line: 301, type: !2034)
!22638 = distinct !DILexicalBlock(scope: !22635, file: !1994, line: 300, column: 9)
!22639 = !DILocation(line: 301, column: 23, scope: !22638)
!22640 = !DILocation(line: 301, column: 28, scope: !22638)
!22641 = !DILocation(line: 302, column: 11, scope: !22638)
!22642 = !DILocation(line: 302, column: 33, scope: !22638)
!22643 = !DILocation(line: 302, column: 30, scope: !22638)
!22644 = !DILocation(line: 304, column: 30, scope: !22645)
!22645 = distinct !DILexicalBlock(scope: !22638, file: !1994, line: 303, column: 13)
!22646 = !DILocation(line: 304, column: 37, scope: !22645)
!22647 = !DILocation(line: 304, column: 44, scope: !22645)
!22648 = !DILocation(line: 304, column: 15, scope: !22645)
!22649 = !DILocation(line: 305, column: 18, scope: !22645)
!22650 = !DILocation(line: 306, column: 20, scope: !22645)
!22651 = !DILocation(line: 307, column: 19, scope: !22652)
!22652 = distinct !DILexicalBlock(scope: !22645, file: !1994, line: 307, column: 19)
!22653 = !DILocation(line: 307, column: 24, scope: !22652)
!22654 = !DILocation(line: 307, column: 19, scope: !22645)
!22655 = !DILocation(line: 309, column: 19, scope: !22656)
!22656 = distinct !DILexicalBlock(scope: !22652, file: !1994, line: 308, column: 17)
!22657 = !DILocation(line: 309, column: 26, scope: !22656)
!22658 = !DILocation(line: 309, column: 35, scope: !22656)
!22659 = !DILocation(line: 310, column: 19, scope: !22656)
!22660 = distinct !{!22660, !22641, !22661}
!22661 = !DILocation(line: 312, column: 13, scope: !22638)
!22662 = !DILocation(line: 313, column: 15, scope: !22638)
!22663 = !DILocation(line: 313, column: 13, scope: !22638)
!22664 = !DILocation(line: 314, column: 9, scope: !22638)
!22665 = !DILocation(line: 316, column: 22, scope: !22594)
!22666 = !DILocation(line: 316, column: 29, scope: !22594)
!22667 = !DILocation(line: 316, column: 36, scope: !22594)
!22668 = !DILocation(line: 316, column: 43, scope: !22594)
!22669 = !DILocation(line: 316, column: 48, scope: !22594)
!22670 = !DILocation(line: 316, column: 7, scope: !22594)
!22671 = !DILocation(line: 317, column: 15, scope: !22594)
!22672 = distinct !{!22672, !22592, !22673}
!22673 = !DILocation(line: 318, column: 5, scope: !22578)
!22674 = !DILocation(line: 319, column: 1, scope: !22578)
!22675 = distinct !DISubprogram(name: "randread_free", scope: !1994, file: !1994, line: 341, type: !22676, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1949, retainedNodes: !213)
!22676 = !DISubroutineType(types: !22677)
!22677 = !{!5, !1992}
!22678 = !DILocalVariable(name: "s", arg: 1, scope: !22675, file: !1994, line: 341, type: !1992)
!22679 = !DILocation(line: 341, column: 40, scope: !22675)
!22680 = !DILocalVariable(name: "source", scope: !22675, file: !1994, line: 343, type: !1952)
!22681 = !DILocation(line: 343, column: 9, scope: !22675)
!22682 = !DILocation(line: 343, column: 18, scope: !22675)
!22683 = !DILocation(line: 343, column: 21, scope: !22675)
!22684 = !DILocation(line: 344, column: 19, scope: !22675)
!22685 = !DILocation(line: 344, column: 3, scope: !22675)
!22686 = !DILocation(line: 345, column: 9, scope: !22675)
!22687 = !DILocation(line: 345, column: 3, scope: !22675)
!22688 = !DILocation(line: 346, column: 11, scope: !22675)
!22689 = !DILocation(line: 346, column: 28, scope: !22675)
!22690 = !DILocation(line: 346, column: 20, scope: !22675)
!22691 = !DILocation(line: 346, column: 3, scope: !22675)
!22692 = distinct !DISubprogram(name: "isaac_refill", scope: !22693, file: !22693, line: 90, type: !22694, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2035, retainedNodes: !213)
!22693 = !DIFile(filename: "lib/rand-isaac.c", directory: "/home/mohamad/clone/coreutils")
!22694 = !DISubroutineType(types: !22695)
!22695 = !{null, !22696, !2034}
!22696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22697, size: 64)
!22697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2015, line: 56, size: 16576, elements: !22698)
!22698 = !{!22699, !22700, !22701, !22702}
!22699 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !22697, file: !2015, line: 58, baseType: !2018, size: 16384)
!22700 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !22697, file: !2015, line: 59, baseType: !2019, size: 64, offset: 16384)
!22701 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !22697, file: !2015, line: 59, baseType: !2019, size: 64, offset: 16448)
!22702 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !22697, file: !2015, line: 59, baseType: !2019, size: 64, offset: 16512)
!22703 = !DILocalVariable(name: "s", arg: 1, scope: !22692, file: !22693, line: 90, type: !22696)
!22704 = !DILocation(line: 90, column: 35, scope: !22692)
!22705 = !DILocalVariable(name: "result", arg: 2, scope: !22692, file: !22693, line: 90, type: !2034)
!22706 = !DILocation(line: 90, column: 49, scope: !22692)
!22707 = !DILocalVariable(name: "a", scope: !22692, file: !22693, line: 93, type: !2019)
!22708 = !DILocation(line: 93, column: 14, scope: !22692)
!22709 = !DILocation(line: 93, column: 18, scope: !22692)
!22710 = !DILocation(line: 93, column: 21, scope: !22692)
!22711 = !DILocalVariable(name: "b", scope: !22692, file: !22693, line: 94, type: !2019)
!22712 = !DILocation(line: 94, column: 14, scope: !22692)
!22713 = !DILocation(line: 94, column: 18, scope: !22692)
!22714 = !DILocation(line: 94, column: 21, scope: !22692)
!22715 = !DILocation(line: 94, column: 28, scope: !22692)
!22716 = !DILocation(line: 94, column: 31, scope: !22692)
!22717 = !DILocation(line: 94, column: 26, scope: !22692)
!22718 = !DILocation(line: 94, column: 23, scope: !22692)
!22719 = !DILocalVariable(name: "m", scope: !22692, file: !22693, line: 97, type: !2034)
!22720 = !DILocation(line: 97, column: 15, scope: !22692)
!22721 = !DILocation(line: 97, column: 19, scope: !22692)
!22722 = !DILocation(line: 97, column: 22, scope: !22692)
!22723 = !DILocalVariable(name: "r", scope: !22692, file: !22693, line: 98, type: !2034)
!22724 = !DILocation(line: 98, column: 15, scope: !22692)
!22725 = !DILocation(line: 98, column: 19, scope: !22692)
!22726 = !DILocation(line: 116, column: 3, scope: !22692)
!22727 = !DILocalVariable(name: "x", scope: !22728, file: !22693, line: 118, type: !2019)
!22728 = distinct !DILexicalBlock(scope: !22729, file: !22693, line: 118, column: 7)
!22729 = distinct !DILexicalBlock(scope: !22692, file: !22693, line: 117, column: 5)
!22730 = !DILocation(line: 118, column: 7, scope: !22728)
!22731 = !DILocalVariable(name: "y", scope: !22728, file: !22693, line: 118, type: !2019)
!22732 = !DILocalVariable(name: "x", scope: !22733, file: !22693, line: 119, type: !2019)
!22733 = distinct !DILexicalBlock(scope: !22729, file: !22693, line: 119, column: 7)
!22734 = !DILocation(line: 119, column: 7, scope: !22733)
!22735 = !DILocalVariable(name: "y", scope: !22733, file: !22693, line: 119, type: !2019)
!22736 = !DILocalVariable(name: "x", scope: !22737, file: !22693, line: 120, type: !2019)
!22737 = distinct !DILexicalBlock(scope: !22729, file: !22693, line: 120, column: 7)
!22738 = !DILocation(line: 120, column: 7, scope: !22737)
!22739 = !DILocalVariable(name: "y", scope: !22737, file: !22693, line: 120, type: !2019)
!22740 = !DILocalVariable(name: "x", scope: !22741, file: !22693, line: 121, type: !2019)
!22741 = distinct !DILexicalBlock(scope: !22729, file: !22693, line: 121, column: 7)
!22742 = !DILocation(line: 121, column: 7, scope: !22741)
!22743 = !DILocalVariable(name: "y", scope: !22741, file: !22693, line: 121, type: !2019)
!22744 = !DILocation(line: 122, column: 9, scope: !22729)
!22745 = !DILocation(line: 123, column: 5, scope: !22729)
!22746 = !DILocation(line: 124, column: 13, scope: !22692)
!22747 = !DILocation(line: 124, column: 21, scope: !22692)
!22748 = !DILocation(line: 124, column: 24, scope: !22692)
!22749 = !DILocation(line: 124, column: 26, scope: !22692)
!22750 = !DILocation(line: 124, column: 19, scope: !22692)
!22751 = distinct !{!22751, !22726, !22752}
!22752 = !DILocation(line: 124, column: 32, scope: !22692)
!22753 = !DILocation(line: 126, column: 3, scope: !22692)
!22754 = !DILocalVariable(name: "x", scope: !22755, file: !22693, line: 128, type: !2019)
!22755 = distinct !DILexicalBlock(scope: !22756, file: !22693, line: 128, column: 7)
!22756 = distinct !DILexicalBlock(scope: !22692, file: !22693, line: 127, column: 5)
!22757 = !DILocation(line: 128, column: 7, scope: !22755)
!22758 = !DILocalVariable(name: "y", scope: !22755, file: !22693, line: 128, type: !2019)
!22759 = !DILocalVariable(name: "x", scope: !22760, file: !22693, line: 129, type: !2019)
!22760 = distinct !DILexicalBlock(scope: !22756, file: !22693, line: 129, column: 7)
!22761 = !DILocation(line: 129, column: 7, scope: !22760)
!22762 = !DILocalVariable(name: "y", scope: !22760, file: !22693, line: 129, type: !2019)
!22763 = !DILocalVariable(name: "x", scope: !22764, file: !22693, line: 130, type: !2019)
!22764 = distinct !DILexicalBlock(scope: !22756, file: !22693, line: 130, column: 7)
!22765 = !DILocation(line: 130, column: 7, scope: !22764)
!22766 = !DILocalVariable(name: "y", scope: !22764, file: !22693, line: 130, type: !2019)
!22767 = !DILocalVariable(name: "x", scope: !22768, file: !22693, line: 131, type: !2019)
!22768 = distinct !DILexicalBlock(scope: !22756, file: !22693, line: 131, column: 7)
!22769 = !DILocation(line: 131, column: 7, scope: !22768)
!22770 = !DILocalVariable(name: "y", scope: !22768, file: !22693, line: 131, type: !2019)
!22771 = !DILocation(line: 132, column: 9, scope: !22756)
!22772 = !DILocation(line: 133, column: 5, scope: !22756)
!22773 = !DILocation(line: 134, column: 13, scope: !22692)
!22774 = !DILocation(line: 134, column: 21, scope: !22692)
!22775 = !DILocation(line: 134, column: 24, scope: !22692)
!22776 = !DILocation(line: 134, column: 26, scope: !22692)
!22777 = !DILocation(line: 134, column: 19, scope: !22692)
!22778 = distinct !{!22778, !22753, !22779}
!22779 = !DILocation(line: 134, column: 39, scope: !22692)
!22780 = !DILocation(line: 136, column: 10, scope: !22692)
!22781 = !DILocation(line: 136, column: 3, scope: !22692)
!22782 = !DILocation(line: 136, column: 6, scope: !22692)
!22783 = !DILocation(line: 136, column: 8, scope: !22692)
!22784 = !DILocation(line: 137, column: 10, scope: !22692)
!22785 = !DILocation(line: 137, column: 3, scope: !22692)
!22786 = !DILocation(line: 137, column: 6, scope: !22692)
!22787 = !DILocation(line: 137, column: 8, scope: !22692)
!22788 = !DILocation(line: 138, column: 1, scope: !22692)
!22789 = distinct !DISubprogram(name: "ind", scope: !22693, file: !22693, line: 68, type: !22790, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2035, retainedNodes: !213)
!22790 = !DISubroutineType(types: !22791)
!22791 = !{!2019, !2038, !2019}
!22792 = !DILocalVariable(name: "m", arg: 1, scope: !22789, file: !22693, line: 68, type: !2038)
!22793 = !DILocation(line: 68, column: 24, scope: !22789)
!22794 = !DILocalVariable(name: "x", arg: 2, scope: !22789, file: !22693, line: 68, type: !2019)
!22795 = !DILocation(line: 68, column: 38, scope: !22789)
!22796 = !DILocalVariable(name: "void_m", scope: !22797, file: !22693, line: 75, type: !553)
!22797 = distinct !DILexicalBlock(scope: !22798, file: !22693, line: 71, column: 5)
!22798 = distinct !DILexicalBlock(scope: !22789, file: !22693, line: 70, column: 7)
!22799 = !DILocation(line: 75, column: 19, scope: !22797)
!22800 = !DILocation(line: 75, column: 28, scope: !22797)
!22801 = !DILocalVariable(name: "base_p", scope: !22797, file: !22693, line: 76, type: !113)
!22802 = !DILocation(line: 76, column: 19, scope: !22797)
!22803 = !DILocation(line: 76, column: 28, scope: !22797)
!22804 = !DILocalVariable(name: "word_p", scope: !22797, file: !22693, line: 77, type: !553)
!22805 = !DILocation(line: 77, column: 19, scope: !22797)
!22806 = !DILocation(line: 77, column: 28, scope: !22797)
!22807 = !DILocation(line: 77, column: 38, scope: !22797)
!22808 = !DILocation(line: 77, column: 40, scope: !22797)
!22809 = !DILocation(line: 77, column: 35, scope: !22797)
!22810 = !DILocalVariable(name: "p", scope: !22797, file: !22693, line: 78, type: !2038)
!22811 = !DILocation(line: 78, column: 25, scope: !22797)
!22812 = !DILocation(line: 78, column: 29, scope: !22797)
!22813 = !DILocation(line: 79, column: 15, scope: !22797)
!22814 = !DILocation(line: 79, column: 14, scope: !22797)
!22815 = !DILocation(line: 79, column: 7, scope: !22797)
!22816 = distinct !DISubprogram(name: "just", scope: !22693, file: !22693, line: 60, type: !22817, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2035, retainedNodes: !213)
!22817 = !DISubroutineType(types: !22818)
!22818 = !{!2019, !2019}
!22819 = !DILocalVariable(name: "a", arg: 1, scope: !22816, file: !22693, line: 60, type: !2019)
!22820 = !DILocation(line: 60, column: 18, scope: !22816)
!22821 = !DILocalVariable(name: "desired_bits", scope: !22816, file: !22693, line: 62, type: !2019)
!22822 = !DILocation(line: 62, column: 14, scope: !22816)
!22823 = !DILocation(line: 63, column: 10, scope: !22816)
!22824 = !DILocation(line: 63, column: 14, scope: !22816)
!22825 = !DILocation(line: 63, column: 12, scope: !22816)
!22826 = !DILocation(line: 63, column: 3, scope: !22816)
!22827 = distinct !DISubprogram(name: "isaac_seed", scope: !22693, file: !22693, line: 248, type: !22828, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2035, retainedNodes: !213)
!22828 = !DISubroutineType(types: !22829)
!22829 = !{null, !22696}
!22830 = !DILocalVariable(name: "s", arg: 1, scope: !22827, file: !22693, line: 248, type: !22696)
!22831 = !DILocation(line: 248, column: 33, scope: !22827)
!22832 = !DILocalVariable(name: "a", scope: !22827, file: !22693, line: 250, type: !2019)
!22833 = !DILocation(line: 250, column: 14, scope: !22827)
!22834 = !DILocalVariable(name: "b", scope: !22827, file: !22693, line: 251, type: !2019)
!22835 = !DILocation(line: 251, column: 14, scope: !22827)
!22836 = !DILocalVariable(name: "c", scope: !22827, file: !22693, line: 252, type: !2019)
!22837 = !DILocation(line: 252, column: 14, scope: !22827)
!22838 = !DILocalVariable(name: "d", scope: !22827, file: !22693, line: 253, type: !2019)
!22839 = !DILocation(line: 253, column: 14, scope: !22827)
!22840 = !DILocalVariable(name: "e", scope: !22827, file: !22693, line: 254, type: !2019)
!22841 = !DILocation(line: 254, column: 14, scope: !22827)
!22842 = !DILocalVariable(name: "f", scope: !22827, file: !22693, line: 255, type: !2019)
!22843 = !DILocation(line: 255, column: 14, scope: !22827)
!22844 = !DILocalVariable(name: "g", scope: !22827, file: !22693, line: 256, type: !2019)
!22845 = !DILocation(line: 256, column: 14, scope: !22827)
!22846 = !DILocalVariable(name: "h", scope: !22827, file: !22693, line: 257, type: !2019)
!22847 = !DILocation(line: 257, column: 14, scope: !22827)
!22848 = !DILocalVariable(name: "i", scope: !22849, file: !22693, line: 269, type: !5)
!22849 = distinct !DILexicalBlock(scope: !22827, file: !22693, line: 269, column: 3)
!22850 = !DILocation(line: 269, column: 3, scope: !22849)
!22851 = !DILocation(line: 269, column: 3, scope: !22852)
!22852 = distinct !DILexicalBlock(scope: !22849, file: !22693, line: 269, column: 3)
!22853 = !DILocation(line: 269, column: 3, scope: !22854)
!22854 = distinct !DILexicalBlock(scope: !22852, file: !22693, line: 269, column: 3)
!22855 = !DILocation(line: 269, column: 3, scope: !22856)
!22856 = distinct !DILexicalBlock(scope: !22854, file: !22693, line: 269, column: 3)
!22857 = !DILocation(line: 269, column: 3, scope: !22858)
!22858 = distinct !DILexicalBlock(scope: !22856, file: !22693, line: 269, column: 3)
!22859 = distinct !{!22859, !22851, !22851}
!22860 = !DILocalVariable(name: "i", scope: !22861, file: !22693, line: 270, type: !5)
!22861 = distinct !DILexicalBlock(scope: !22827, file: !22693, line: 270, column: 3)
!22862 = !DILocation(line: 270, column: 3, scope: !22861)
!22863 = !DILocation(line: 270, column: 3, scope: !22864)
!22864 = distinct !DILexicalBlock(scope: !22861, file: !22693, line: 270, column: 3)
!22865 = !DILocation(line: 270, column: 3, scope: !22866)
!22866 = distinct !DILexicalBlock(scope: !22864, file: !22693, line: 270, column: 3)
!22867 = !DILocation(line: 270, column: 3, scope: !22868)
!22868 = distinct !DILexicalBlock(scope: !22866, file: !22693, line: 270, column: 3)
!22869 = !DILocation(line: 270, column: 3, scope: !22870)
!22870 = distinct !DILexicalBlock(scope: !22868, file: !22693, line: 270, column: 3)
!22871 = distinct !{!22871, !22863, !22863}
!22872 = !DILocation(line: 272, column: 17, scope: !22827)
!22873 = !DILocation(line: 272, column: 20, scope: !22827)
!22874 = !DILocation(line: 272, column: 22, scope: !22827)
!22875 = !DILocation(line: 272, column: 10, scope: !22827)
!22876 = !DILocation(line: 272, column: 13, scope: !22827)
!22877 = !DILocation(line: 272, column: 15, scope: !22827)
!22878 = !DILocation(line: 272, column: 3, scope: !22827)
!22879 = !DILocation(line: 272, column: 6, scope: !22827)
!22880 = !DILocation(line: 272, column: 8, scope: !22827)
!22881 = !DILocation(line: 273, column: 1, scope: !22827)
!22882 = distinct !DISubprogram(name: "dup_safer", scope: !22883, file: !22883, line: 31, type: !14818, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2040, retainedNodes: !213)
!22883 = !DIFile(filename: "lib/dup-safer.c", directory: "/home/mohamad/clone/coreutils")
!22884 = !DILocalVariable(name: "fd", arg: 1, scope: !22882, file: !22883, line: 31, type: !5)
!22885 = !DILocation(line: 31, column: 16, scope: !22882)
!22886 = !DILocation(line: 33, column: 17, scope: !22882)
!22887 = !DILocation(line: 33, column: 10, scope: !22882)
!22888 = !DILocation(line: 33, column: 3, scope: !22882)
!22889 = distinct !DISubprogram(name: "explicit_bzero", scope: !22890, file: !22890, line: 39, type: !22891, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2042, retainedNodes: !213)
!22890 = !DIFile(filename: "lib/explicit_bzero.c", directory: "/home/mohamad/clone/coreutils")
!22891 = !DISubroutineType(types: !22892)
!22892 = !{null, !47, !52}
!22893 = !DILocalVariable(name: "s", arg: 1, scope: !22889, file: !22890, line: 39, type: !47)
!22894 = !DILocation(line: 39, column: 23, scope: !22889)
!22895 = !DILocalVariable(name: "len", arg: 2, scope: !22889, file: !22890, line: 39, type: !52)
!22896 = !DILocation(line: 39, column: 33, scope: !22889)
!22897 = !DILocation(line: 44, column: 11, scope: !22889)
!22898 = !DILocation(line: 44, column: 20, scope: !22889)
!22899 = !DILocation(line: 44, column: 3, scope: !22889)
!22900 = !DILocation(line: 50, column: 1, scope: !22889)
!22901 = distinct !DISubprogram(name: "rpl_fclose", scope: !22902, file: !22902, line: 58, type: !22903, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2044, retainedNodes: !213)
!22902 = !DIFile(filename: "lib/fclose.c", directory: "/home/mohamad/clone/coreutils")
!22903 = !DISubroutineType(types: !22904)
!22904 = !{!5, !22905}
!22905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22906, size: 64)
!22906 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !293, line: 48, baseType: !22907)
!22907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !22908)
!22908 = !{!22909, !22910, !22911, !22912, !22913, !22914, !22915, !22916, !22917, !22918, !22919, !22920, !22921, !22929, !22930, !22931, !22932, !22933, !22934, !22935, !22936, !22937, !22938, !22939, !22940, !22941, !22942, !22943, !22944}
!22909 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !22907, file: !2, line: 242, baseType: !5, size: 32)
!22910 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !22907, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!22911 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !22907, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!22912 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !22907, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!22913 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !22907, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!22914 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !22907, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!22915 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !22907, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!22916 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !22907, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!22917 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !22907, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!22918 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !22907, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!22919 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !22907, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!22920 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !22907, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!22921 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !22907, file: !2, line: 260, baseType: !22922, size: 64, offset: 768)
!22922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22923, size: 64)
!22923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !22924)
!22924 = !{!22925, !22926, !22928}
!22925 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !22923, file: !2, line: 157, baseType: !22922, size: 64)
!22926 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !22923, file: !2, line: 158, baseType: !22927, size: 64, offset: 64)
!22927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22907, size: 64)
!22928 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !22923, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!22929 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !22907, file: !2, line: 262, baseType: !22927, size: 64, offset: 832)
!22930 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !22907, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!22931 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !22907, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!22932 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !22907, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!22933 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !22907, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!22934 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !22907, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!22935 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !22907, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!22936 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !22907, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!22937 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !22907, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!22938 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !22907, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!22939 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !22907, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!22940 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !22907, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!22941 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !22907, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!22942 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !22907, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!22943 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !22907, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!22944 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !22907, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!22945 = !DILocalVariable(name: "fp", arg: 1, scope: !22901, file: !22902, line: 58, type: !22905)
!22946 = !DILocation(line: 58, column: 19, scope: !22901)
!22947 = !DILocalVariable(name: "saved_errno", scope: !22901, file: !22902, line: 60, type: !5)
!22948 = !DILocation(line: 60, column: 7, scope: !22901)
!22949 = !DILocalVariable(name: "fd", scope: !22901, file: !22902, line: 61, type: !5)
!22950 = !DILocation(line: 61, column: 7, scope: !22901)
!22951 = !DILocalVariable(name: "result", scope: !22901, file: !22902, line: 62, type: !5)
!22952 = !DILocation(line: 62, column: 7, scope: !22901)
!22953 = !DILocation(line: 65, column: 16, scope: !22901)
!22954 = !DILocation(line: 65, column: 8, scope: !22901)
!22955 = !DILocation(line: 65, column: 6, scope: !22901)
!22956 = !DILocation(line: 66, column: 7, scope: !22957)
!22957 = distinct !DILexicalBlock(scope: !22901, file: !22902, line: 66, column: 7)
!22958 = !DILocation(line: 66, column: 10, scope: !22957)
!22959 = !DILocation(line: 66, column: 7, scope: !22901)
!22960 = !DILocation(line: 67, column: 28, scope: !22957)
!22961 = !DILocation(line: 67, column: 12, scope: !22957)
!22962 = !DILocation(line: 67, column: 5, scope: !22957)
!22963 = !DILocation(line: 72, column: 9, scope: !22964)
!22964 = distinct !DILexicalBlock(scope: !22901, file: !22902, line: 72, column: 7)
!22965 = !DILocation(line: 72, column: 23, scope: !22964)
!22966 = !DILocation(line: 72, column: 41, scope: !22964)
!22967 = !DILocation(line: 72, column: 33, scope: !22964)
!22968 = !DILocation(line: 72, column: 26, scope: !22964)
!22969 = !DILocation(line: 72, column: 59, scope: !22964)
!22970 = !DILocation(line: 73, column: 7, scope: !22964)
!22971 = !DILocation(line: 73, column: 18, scope: !22964)
!22972 = !DILocation(line: 73, column: 10, scope: !22964)
!22973 = !DILocation(line: 72, column: 7, scope: !22901)
!22974 = !DILocation(line: 74, column: 19, scope: !22964)
!22975 = !DILocation(line: 74, column: 17, scope: !22964)
!22976 = !DILocation(line: 74, column: 5, scope: !22964)
!22977 = !DILocation(line: 100, column: 28, scope: !22901)
!22978 = !DILocation(line: 100, column: 12, scope: !22901)
!22979 = !DILocation(line: 100, column: 10, scope: !22901)
!22980 = !DILocation(line: 105, column: 7, scope: !22981)
!22981 = distinct !DILexicalBlock(scope: !22901, file: !22902, line: 105, column: 7)
!22982 = !DILocation(line: 105, column: 19, scope: !22981)
!22983 = !DILocation(line: 105, column: 7, scope: !22901)
!22984 = !DILocation(line: 107, column: 15, scope: !22985)
!22985 = distinct !DILexicalBlock(scope: !22981, file: !22902, line: 106, column: 5)
!22986 = !DILocation(line: 107, column: 7, scope: !22985)
!22987 = !DILocation(line: 107, column: 13, scope: !22985)
!22988 = !DILocation(line: 108, column: 14, scope: !22985)
!22989 = !DILocation(line: 109, column: 5, scope: !22985)
!22990 = !DILocation(line: 111, column: 10, scope: !22901)
!22991 = !DILocation(line: 111, column: 3, scope: !22901)
!22992 = !DILocation(line: 112, column: 1, scope: !22901)
!22993 = distinct !DISubprogram(name: "rpl_fcntl", scope: !1036, file: !1036, line: 202, type: !22994, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1039, retainedNodes: !213)
!22994 = !DISubroutineType(types: !22995)
!22995 = !{!5, !5, !5, null}
!22996 = !DILocalVariable(name: "fd", arg: 1, scope: !22993, file: !1036, line: 202, type: !5)
!22997 = !DILocation(line: 202, column: 12, scope: !22993)
!22998 = !DILocalVariable(name: "action", arg: 2, scope: !22993, file: !1036, line: 202, type: !5)
!22999 = !DILocation(line: 202, column: 20, scope: !22993)
!23000 = !DILocalVariable(name: "arg", scope: !22993, file: !1036, line: 208, type: !1042)
!23001 = !DILocation(line: 208, column: 11, scope: !22993)
!23002 = !DILocalVariable(name: "result", scope: !22993, file: !1036, line: 209, type: !5)
!23003 = !DILocation(line: 209, column: 7, scope: !22993)
!23004 = !DILocation(line: 210, column: 3, scope: !22993)
!23005 = !DILocation(line: 211, column: 11, scope: !22993)
!23006 = !DILocation(line: 211, column: 3, scope: !22993)
!23007 = !DILocalVariable(name: "target", scope: !23008, file: !1036, line: 215, type: !5)
!23008 = distinct !DILexicalBlock(scope: !23009, file: !1036, line: 214, column: 7)
!23009 = distinct !DILexicalBlock(scope: !22993, file: !1036, line: 212, column: 5)
!23010 = !DILocation(line: 215, column: 13, scope: !23008)
!23011 = !DILocation(line: 215, column: 22, scope: !23008)
!23012 = !DILocation(line: 216, column: 35, scope: !23008)
!23013 = !DILocation(line: 216, column: 39, scope: !23008)
!23014 = !DILocation(line: 216, column: 18, scope: !23008)
!23015 = !DILocation(line: 216, column: 16, scope: !23008)
!23016 = !DILocation(line: 217, column: 9, scope: !23008)
!23017 = !DILocalVariable(name: "target", scope: !23018, file: !1036, line: 222, type: !5)
!23018 = distinct !DILexicalBlock(scope: !23009, file: !1036, line: 221, column: 7)
!23019 = !DILocation(line: 222, column: 13, scope: !23018)
!23020 = !DILocation(line: 222, column: 22, scope: !23018)
!23021 = !DILocation(line: 223, column: 43, scope: !23018)
!23022 = !DILocation(line: 223, column: 47, scope: !23018)
!23023 = !DILocation(line: 223, column: 18, scope: !23018)
!23024 = !DILocation(line: 223, column: 16, scope: !23018)
!23025 = !DILocation(line: 224, column: 9, scope: !23018)
!23026 = !DILocation(line: 259, column: 17, scope: !23027)
!23027 = distinct !DILexicalBlock(scope: !23009, file: !1036, line: 257, column: 7)
!23028 = !DILocation(line: 259, column: 9, scope: !23027)
!23029 = !DILocation(line: 328, column: 29, scope: !23030)
!23030 = distinct !DILexicalBlock(scope: !23027, file: !1036, line: 260, column: 11)
!23031 = !DILocation(line: 328, column: 33, scope: !23030)
!23032 = !DILocation(line: 328, column: 22, scope: !23030)
!23033 = !DILocation(line: 328, column: 20, scope: !23030)
!23034 = !DILocation(line: 329, column: 13, scope: !23030)
!23035 = !DILocalVariable(name: "x", scope: !23036, file: !1036, line: 423, type: !5)
!23036 = distinct !DILexicalBlock(scope: !23030, file: !1036, line: 422, column: 13)
!23037 = !DILocation(line: 423, column: 19, scope: !23036)
!23038 = !DILocation(line: 423, column: 23, scope: !23036)
!23039 = !DILocation(line: 424, column: 31, scope: !23036)
!23040 = !DILocation(line: 424, column: 35, scope: !23036)
!23041 = !DILocation(line: 424, column: 43, scope: !23036)
!23042 = !DILocation(line: 424, column: 24, scope: !23036)
!23043 = !DILocation(line: 424, column: 22, scope: !23036)
!23044 = !DILocation(line: 426, column: 13, scope: !23030)
!23045 = !DILocalVariable(name: "p", scope: !23046, file: !1036, line: 431, type: !47)
!23046 = distinct !DILexicalBlock(scope: !23030, file: !1036, line: 430, column: 13)
!23047 = !DILocation(line: 431, column: 21, scope: !23046)
!23048 = !DILocation(line: 431, column: 25, scope: !23046)
!23049 = !DILocation(line: 432, column: 31, scope: !23046)
!23050 = !DILocation(line: 432, column: 35, scope: !23046)
!23051 = !DILocation(line: 432, column: 43, scope: !23046)
!23052 = !DILocation(line: 432, column: 24, scope: !23046)
!23053 = !DILocation(line: 432, column: 22, scope: !23046)
!23054 = !DILocation(line: 434, column: 13, scope: !23030)
!23055 = !DILocation(line: 439, column: 9, scope: !23027)
!23056 = !DILocation(line: 442, column: 3, scope: !22993)
!23057 = !DILocation(line: 443, column: 10, scope: !22993)
!23058 = !DILocation(line: 443, column: 3, scope: !22993)
!23059 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD", scope: !1036, file: !1036, line: 447, type: !1037, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1039, retainedNodes: !213)
!23060 = !DILocalVariable(name: "fd", arg: 1, scope: !23059, file: !1036, line: 447, type: !5)
!23061 = !DILocation(line: 447, column: 22, scope: !23059)
!23062 = !DILocalVariable(name: "target", arg: 2, scope: !23059, file: !1036, line: 447, type: !5)
!23063 = !DILocation(line: 447, column: 30, scope: !23059)
!23064 = !DILocalVariable(name: "result", scope: !23059, file: !1036, line: 449, type: !5)
!23065 = !DILocation(line: 449, column: 7, scope: !23059)
!23066 = !DILocation(line: 482, column: 19, scope: !23059)
!23067 = !DILocation(line: 482, column: 32, scope: !23059)
!23068 = !DILocation(line: 482, column: 12, scope: !23059)
!23069 = !DILocation(line: 482, column: 10, scope: !23059)
!23070 = !DILocation(line: 484, column: 10, scope: !23059)
!23071 = !DILocation(line: 484, column: 3, scope: !23059)
!23072 = !DILocalVariable(name: "fd", arg: 1, scope: !1035, file: !1036, line: 488, type: !5)
!23073 = !DILocation(line: 488, column: 30, scope: !1035)
!23074 = !DILocalVariable(name: "target", arg: 2, scope: !1035, file: !1036, line: 488, type: !5)
!23075 = !DILocation(line: 488, column: 38, scope: !1035)
!23076 = !DILocalVariable(name: "result", scope: !1035, file: !1036, line: 490, type: !5)
!23077 = !DILocation(line: 490, column: 7, scope: !1035)
!23078 = !DILocation(line: 508, column: 12, scope: !23079)
!23079 = distinct !DILexicalBlock(scope: !1035, file: !1036, line: 508, column: 7)
!23080 = !DILocation(line: 508, column: 9, scope: !23079)
!23081 = !DILocation(line: 508, column: 7, scope: !1035)
!23082 = !DILocation(line: 510, column: 23, scope: !23083)
!23083 = distinct !DILexicalBlock(scope: !23079, file: !1036, line: 509, column: 5)
!23084 = !DILocation(line: 510, column: 44, scope: !23083)
!23085 = !DILocation(line: 510, column: 16, scope: !23083)
!23086 = !DILocation(line: 510, column: 14, scope: !23083)
!23087 = !DILocation(line: 511, column: 16, scope: !23088)
!23088 = distinct !DILexicalBlock(scope: !23083, file: !1036, line: 511, column: 11)
!23089 = !DILocation(line: 511, column: 13, scope: !23088)
!23090 = !DILocation(line: 511, column: 23, scope: !23088)
!23091 = !DILocation(line: 511, column: 26, scope: !23088)
!23092 = !DILocation(line: 511, column: 32, scope: !23088)
!23093 = !DILocation(line: 511, column: 11, scope: !23083)
!23094 = !DILocation(line: 513, column: 30, scope: !23095)
!23095 = distinct !DILexicalBlock(scope: !23088, file: !1036, line: 512, column: 9)
!23096 = !DILocation(line: 518, column: 9, scope: !23095)
!23097 = !DILocation(line: 521, column: 37, scope: !23098)
!23098 = distinct !DILexicalBlock(scope: !23088, file: !1036, line: 520, column: 9)
!23099 = !DILocation(line: 521, column: 41, scope: !23098)
!23100 = !DILocation(line: 521, column: 20, scope: !23098)
!23101 = !DILocation(line: 521, column: 18, scope: !23098)
!23102 = !DILocation(line: 522, column: 15, scope: !23103)
!23103 = distinct !DILexicalBlock(scope: !23098, file: !1036, line: 522, column: 15)
!23104 = !DILocation(line: 522, column: 22, scope: !23103)
!23105 = !DILocation(line: 522, column: 15, scope: !23098)
!23106 = !DILocation(line: 523, column: 32, scope: !23103)
!23107 = !DILocation(line: 523, column: 13, scope: !23103)
!23108 = !DILocation(line: 525, column: 5, scope: !23083)
!23109 = !DILocation(line: 528, column: 31, scope: !23079)
!23110 = !DILocation(line: 528, column: 35, scope: !23079)
!23111 = !DILocation(line: 528, column: 14, scope: !23079)
!23112 = !DILocation(line: 528, column: 12, scope: !23079)
!23113 = !DILocation(line: 529, column: 12, scope: !23114)
!23114 = distinct !DILexicalBlock(scope: !1035, file: !1036, line: 529, column: 7)
!23115 = !DILocation(line: 529, column: 9, scope: !23114)
!23116 = !DILocation(line: 529, column: 19, scope: !23114)
!23117 = !DILocation(line: 529, column: 22, scope: !23114)
!23118 = !DILocation(line: 529, column: 41, scope: !23114)
!23119 = !DILocation(line: 529, column: 7, scope: !1035)
!23120 = !DILocalVariable(name: "flags", scope: !23121, file: !1036, line: 531, type: !5)
!23121 = distinct !DILexicalBlock(scope: !23114, file: !1036, line: 530, column: 5)
!23122 = !DILocation(line: 531, column: 11, scope: !23121)
!23123 = !DILocation(line: 531, column: 26, scope: !23121)
!23124 = !DILocation(line: 531, column: 19, scope: !23121)
!23125 = !DILocation(line: 532, column: 11, scope: !23126)
!23126 = distinct !DILexicalBlock(scope: !23121, file: !1036, line: 532, column: 11)
!23127 = !DILocation(line: 532, column: 17, scope: !23126)
!23128 = !DILocation(line: 532, column: 21, scope: !23126)
!23129 = !DILocation(line: 532, column: 31, scope: !23126)
!23130 = !DILocation(line: 532, column: 48, scope: !23126)
!23131 = !DILocation(line: 532, column: 54, scope: !23126)
!23132 = !DILocation(line: 532, column: 24, scope: !23126)
!23133 = !DILocation(line: 532, column: 68, scope: !23126)
!23134 = !DILocation(line: 532, column: 11, scope: !23121)
!23135 = !DILocalVariable(name: "saved_errno", scope: !23136, file: !1036, line: 534, type: !5)
!23136 = distinct !DILexicalBlock(scope: !23126, file: !1036, line: 533, column: 9)
!23137 = !DILocation(line: 534, column: 15, scope: !23136)
!23138 = !DILocation(line: 534, column: 29, scope: !23136)
!23139 = !DILocation(line: 535, column: 18, scope: !23136)
!23140 = !DILocation(line: 535, column: 11, scope: !23136)
!23141 = !DILocation(line: 536, column: 19, scope: !23136)
!23142 = !DILocation(line: 536, column: 11, scope: !23136)
!23143 = !DILocation(line: 536, column: 17, scope: !23136)
!23144 = !DILocation(line: 537, column: 18, scope: !23136)
!23145 = !DILocation(line: 538, column: 9, scope: !23136)
!23146 = !DILocation(line: 539, column: 5, scope: !23121)
!23147 = !DILocation(line: 541, column: 10, scope: !1035)
!23148 = !DILocation(line: 541, column: 3, scope: !1035)
!23149 = distinct !DISubprogram(name: "rpl_nl_langinfo", scope: !23150, file: !23150, line: 99, type: !23151, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2046, retainedNodes: !213)
!23150 = !DIFile(filename: "lib/nl_langinfo.c", directory: "/home/mohamad/clone/coreutils")
!23151 = !DISubroutineType(types: !23152)
!23152 = !{!7, !23153}
!23153 = !DIDerivedType(tag: DW_TAG_typedef, name: "nl_item", file: !23154, line: 36, baseType: !5)
!23154 = !DIFile(filename: "/usr/include/nl_types.h", directory: "")
!23155 = !DILocalVariable(name: "item", arg: 1, scope: !23149, file: !23150, line: 99, type: !23153)
!23156 = !DILocation(line: 99, column: 26, scope: !23149)
!23157 = !DILocation(line: 101, column: 11, scope: !23149)
!23158 = !DILocation(line: 101, column: 3, scope: !23149)
!23159 = !DILocation(line: 126, column: 14, scope: !23160)
!23160 = distinct !DILexicalBlock(scope: !23149, file: !23150, line: 102, column: 5)
!23161 = !DILocation(line: 126, column: 19, scope: !23160)
!23162 = !DILocation(line: 126, column: 30, scope: !23160)
!23163 = !DILocation(line: 126, column: 12, scope: !23160)
!23164 = !DILocation(line: 127, column: 7, scope: !23160)
!23165 = !DILocation(line: 162, column: 7, scope: !23160)
!23166 = !DILocation(line: 164, column: 23, scope: !23149)
!23167 = !DILocation(line: 164, column: 10, scope: !23149)
!23168 = !DILocation(line: 164, column: 3, scope: !23149)
!23169 = distinct !DISubprogram(name: "c_isalnum", scope: !23170, file: !23170, line: 169, type: !3623, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23170 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mohamad/clone/coreutils")
!23171 = !DILocalVariable(name: "c", arg: 1, scope: !23169, file: !23170, line: 169, type: !5)
!23172 = !DILocation(line: 169, column: 16, scope: !23169)
!23173 = !DILocation(line: 171, column: 11, scope: !23169)
!23174 = !DILocation(line: 171, column: 3, scope: !23169)
!23175 = !DILocation(line: 176, column: 7, scope: !23176)
!23176 = distinct !DILexicalBlock(scope: !23169, file: !23170, line: 172, column: 5)
!23177 = !DILocation(line: 178, column: 7, scope: !23176)
!23178 = !DILocation(line: 180, column: 1, scope: !23169)
!23179 = distinct !DISubprogram(name: "c_isalpha", scope: !23170, file: !23170, line: 183, type: !3623, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23180 = !DILocalVariable(name: "c", arg: 1, scope: !23179, file: !23170, line: 183, type: !5)
!23181 = !DILocation(line: 183, column: 16, scope: !23179)
!23182 = !DILocation(line: 185, column: 11, scope: !23179)
!23183 = !DILocation(line: 185, column: 3, scope: !23179)
!23184 = !DILocation(line: 189, column: 7, scope: !23185)
!23185 = distinct !DILexicalBlock(scope: !23179, file: !23170, line: 186, column: 5)
!23186 = !DILocation(line: 191, column: 7, scope: !23185)
!23187 = !DILocation(line: 193, column: 1, scope: !23179)
!23188 = distinct !DISubprogram(name: "c_isascii", scope: !23170, file: !23170, line: 198, type: !3623, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23189 = !DILocalVariable(name: "c", arg: 1, scope: !23188, file: !23170, line: 198, type: !5)
!23190 = !DILocation(line: 198, column: 16, scope: !23188)
!23191 = !DILocation(line: 200, column: 11, scope: !23188)
!23192 = !DILocation(line: 200, column: 3, scope: !23188)
!23193 = !DILocation(line: 208, column: 7, scope: !23194)
!23194 = distinct !DILexicalBlock(scope: !23188, file: !23170, line: 201, column: 5)
!23195 = !DILocation(line: 210, column: 7, scope: !23194)
!23196 = !DILocation(line: 212, column: 1, scope: !23188)
!23197 = distinct !DISubprogram(name: "c_isblank", scope: !23170, file: !23170, line: 215, type: !3623, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23198 = !DILocalVariable(name: "c", arg: 1, scope: !23197, file: !23170, line: 215, type: !5)
!23199 = !DILocation(line: 215, column: 16, scope: !23197)
!23200 = !DILocation(line: 217, column: 10, scope: !23197)
!23201 = !DILocation(line: 217, column: 12, scope: !23197)
!23202 = !DILocation(line: 217, column: 19, scope: !23197)
!23203 = !DILocation(line: 217, column: 22, scope: !23197)
!23204 = !DILocation(line: 217, column: 24, scope: !23197)
!23205 = !DILocation(line: 217, column: 3, scope: !23197)
!23206 = distinct !DISubprogram(name: "c_iscntrl", scope: !23170, file: !23170, line: 221, type: !3623, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23207 = !DILocalVariable(name: "c", arg: 1, scope: !23206, file: !23170, line: 221, type: !5)
!23208 = !DILocation(line: 221, column: 16, scope: !23206)
!23209 = !DILocation(line: 223, column: 11, scope: !23206)
!23210 = !DILocation(line: 223, column: 3, scope: !23206)
!23211 = !DILocation(line: 226, column: 7, scope: !23212)
!23212 = distinct !DILexicalBlock(scope: !23206, file: !23170, line: 224, column: 5)
!23213 = !DILocation(line: 228, column: 7, scope: !23212)
!23214 = !DILocation(line: 230, column: 1, scope: !23206)
!23215 = distinct !DISubprogram(name: "c_isdigit", scope: !23170, file: !23170, line: 233, type: !3623, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23216 = !DILocalVariable(name: "c", arg: 1, scope: !23215, file: !23170, line: 233, type: !5)
!23217 = !DILocation(line: 233, column: 16, scope: !23215)
!23218 = !DILocation(line: 235, column: 11, scope: !23215)
!23219 = !DILocation(line: 235, column: 3, scope: !23215)
!23220 = !DILocation(line: 238, column: 7, scope: !23221)
!23221 = distinct !DILexicalBlock(scope: !23215, file: !23170, line: 236, column: 5)
!23222 = !DILocation(line: 240, column: 7, scope: !23221)
!23223 = !DILocation(line: 242, column: 1, scope: !23215)
!23224 = distinct !DISubprogram(name: "c_isgraph", scope: !23170, file: !23170, line: 245, type: !3623, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23225 = !DILocalVariable(name: "c", arg: 1, scope: !23224, file: !23170, line: 245, type: !5)
!23226 = !DILocation(line: 245, column: 16, scope: !23224)
!23227 = !DILocation(line: 247, column: 11, scope: !23224)
!23228 = !DILocation(line: 247, column: 3, scope: !23224)
!23229 = !DILocation(line: 253, column: 7, scope: !23230)
!23230 = distinct !DILexicalBlock(scope: !23224, file: !23170, line: 248, column: 5)
!23231 = !DILocation(line: 255, column: 7, scope: !23230)
!23232 = !DILocation(line: 257, column: 1, scope: !23224)
!23233 = distinct !DISubprogram(name: "c_islower", scope: !23170, file: !23170, line: 260, type: !3623, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23234 = !DILocalVariable(name: "c", arg: 1, scope: !23233, file: !23170, line: 260, type: !5)
!23235 = !DILocation(line: 260, column: 16, scope: !23233)
!23236 = !DILocation(line: 262, column: 11, scope: !23233)
!23237 = !DILocation(line: 262, column: 3, scope: !23233)
!23238 = !DILocation(line: 265, column: 7, scope: !23239)
!23239 = distinct !DILexicalBlock(scope: !23233, file: !23170, line: 263, column: 5)
!23240 = !DILocation(line: 267, column: 7, scope: !23239)
!23241 = !DILocation(line: 269, column: 1, scope: !23233)
!23242 = distinct !DISubprogram(name: "c_isprint", scope: !23170, file: !23170, line: 272, type: !3623, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23243 = !DILocalVariable(name: "c", arg: 1, scope: !23242, file: !23170, line: 272, type: !5)
!23244 = !DILocation(line: 272, column: 16, scope: !23242)
!23245 = !DILocation(line: 274, column: 11, scope: !23242)
!23246 = !DILocation(line: 274, column: 3, scope: !23242)
!23247 = !DILocation(line: 281, column: 7, scope: !23248)
!23248 = distinct !DILexicalBlock(scope: !23242, file: !23170, line: 275, column: 5)
!23249 = !DILocation(line: 283, column: 7, scope: !23248)
!23250 = !DILocation(line: 285, column: 1, scope: !23242)
!23251 = distinct !DISubprogram(name: "c_ispunct", scope: !23170, file: !23170, line: 288, type: !3623, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23252 = !DILocalVariable(name: "c", arg: 1, scope: !23251, file: !23170, line: 288, type: !5)
!23253 = !DILocation(line: 288, column: 16, scope: !23251)
!23254 = !DILocation(line: 290, column: 11, scope: !23251)
!23255 = !DILocation(line: 290, column: 3, scope: !23251)
!23256 = !DILocation(line: 293, column: 7, scope: !23257)
!23257 = distinct !DILexicalBlock(scope: !23251, file: !23170, line: 291, column: 5)
!23258 = !DILocation(line: 295, column: 7, scope: !23257)
!23259 = !DILocation(line: 297, column: 1, scope: !23251)
!23260 = distinct !DISubprogram(name: "c_isspace", scope: !23170, file: !23170, line: 300, type: !3623, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23261 = !DILocalVariable(name: "c", arg: 1, scope: !23260, file: !23170, line: 300, type: !5)
!23262 = !DILocation(line: 300, column: 16, scope: !23260)
!23263 = !DILocation(line: 302, column: 11, scope: !23260)
!23264 = !DILocation(line: 302, column: 3, scope: !23260)
!23265 = !DILocation(line: 305, column: 7, scope: !23266)
!23266 = distinct !DILexicalBlock(scope: !23260, file: !23170, line: 303, column: 5)
!23267 = !DILocation(line: 307, column: 7, scope: !23266)
!23268 = !DILocation(line: 309, column: 1, scope: !23260)
!23269 = distinct !DISubprogram(name: "c_isupper", scope: !23170, file: !23170, line: 312, type: !3623, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23270 = !DILocalVariable(name: "c", arg: 1, scope: !23269, file: !23170, line: 312, type: !5)
!23271 = !DILocation(line: 312, column: 16, scope: !23269)
!23272 = !DILocation(line: 314, column: 11, scope: !23269)
!23273 = !DILocation(line: 314, column: 3, scope: !23269)
!23274 = !DILocation(line: 317, column: 7, scope: !23275)
!23275 = distinct !DILexicalBlock(scope: !23269, file: !23170, line: 315, column: 5)
!23276 = !DILocation(line: 319, column: 7, scope: !23275)
!23277 = !DILocation(line: 321, column: 1, scope: !23269)
!23278 = distinct !DISubprogram(name: "c_isxdigit", scope: !23170, file: !23170, line: 324, type: !3623, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23279 = !DILocalVariable(name: "c", arg: 1, scope: !23278, file: !23170, line: 324, type: !5)
!23280 = !DILocation(line: 324, column: 17, scope: !23278)
!23281 = !DILocation(line: 326, column: 11, scope: !23278)
!23282 = !DILocation(line: 326, column: 3, scope: !23278)
!23283 = !DILocation(line: 330, column: 7, scope: !23284)
!23284 = distinct !DILexicalBlock(scope: !23278, file: !23170, line: 327, column: 5)
!23285 = !DILocation(line: 332, column: 7, scope: !23284)
!23286 = !DILocation(line: 334, column: 1, scope: !23278)
!23287 = distinct !DISubprogram(name: "c_tolower", scope: !23170, file: !23170, line: 337, type: !14818, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23288 = !DILocalVariable(name: "c", arg: 1, scope: !23287, file: !23170, line: 337, type: !5)
!23289 = !DILocation(line: 337, column: 16, scope: !23287)
!23290 = !DILocation(line: 339, column: 11, scope: !23287)
!23291 = !DILocation(line: 339, column: 3, scope: !23287)
!23292 = !DILocation(line: 342, column: 14, scope: !23293)
!23293 = distinct !DILexicalBlock(scope: !23287, file: !23170, line: 340, column: 5)
!23294 = !DILocation(line: 342, column: 16, scope: !23293)
!23295 = !DILocation(line: 342, column: 22, scope: !23293)
!23296 = !DILocation(line: 342, column: 7, scope: !23293)
!23297 = !DILocation(line: 344, column: 14, scope: !23293)
!23298 = !DILocation(line: 344, column: 7, scope: !23293)
!23299 = !DILocation(line: 346, column: 1, scope: !23287)
!23300 = distinct !DISubprogram(name: "c_toupper", scope: !23170, file: !23170, line: 349, type: !14818, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2048, retainedNodes: !213)
!23301 = !DILocalVariable(name: "c", arg: 1, scope: !23300, file: !23170, line: 349, type: !5)
!23302 = !DILocation(line: 349, column: 16, scope: !23300)
!23303 = !DILocation(line: 351, column: 11, scope: !23300)
!23304 = !DILocation(line: 351, column: 3, scope: !23300)
!23305 = !DILocation(line: 354, column: 14, scope: !23306)
!23306 = distinct !DILexicalBlock(scope: !23300, file: !23170, line: 352, column: 5)
!23307 = !DILocation(line: 354, column: 16, scope: !23306)
!23308 = !DILocation(line: 354, column: 22, scope: !23306)
!23309 = !DILocation(line: 354, column: 7, scope: !23306)
!23310 = !DILocation(line: 356, column: 14, scope: !23306)
!23311 = !DILocation(line: 356, column: 7, scope: !23306)
!23312 = !DILocation(line: 358, column: 1, scope: !23300)
!23313 = distinct !DISubprogram(name: "fopen_safer", scope: !23314, file: !23314, line: 31, type: !23315, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2050, retainedNodes: !213)
!23314 = !DIFile(filename: "lib/fopen-safer.c", directory: "/home/mohamad/clone/coreutils")
!23315 = !DISubroutineType(types: !23316)
!23316 = !{!2053, !113, !113}
!23317 = !DILocalVariable(name: "file", arg: 1, scope: !23313, file: !23314, line: 31, type: !113)
!23318 = !DILocation(line: 31, column: 26, scope: !23313)
!23319 = !DILocalVariable(name: "mode", arg: 2, scope: !23313, file: !23314, line: 31, type: !113)
!23320 = !DILocation(line: 31, column: 44, scope: !23313)
!23321 = !DILocalVariable(name: "fp", scope: !23313, file: !23314, line: 33, type: !2053)
!23322 = !DILocation(line: 33, column: 9, scope: !23313)
!23323 = !DILocation(line: 33, column: 21, scope: !23313)
!23324 = !DILocation(line: 33, column: 27, scope: !23313)
!23325 = !DILocation(line: 33, column: 14, scope: !23313)
!23326 = !DILocation(line: 35, column: 7, scope: !23327)
!23327 = distinct !DILexicalBlock(scope: !23313, file: !23314, line: 35, column: 7)
!23328 = !DILocation(line: 35, column: 7, scope: !23313)
!23329 = !DILocalVariable(name: "fd", scope: !23330, file: !23314, line: 37, type: !5)
!23330 = distinct !DILexicalBlock(scope: !23327, file: !23314, line: 36, column: 5)
!23331 = !DILocation(line: 37, column: 11, scope: !23330)
!23332 = !DILocation(line: 37, column: 24, scope: !23330)
!23333 = !DILocation(line: 37, column: 16, scope: !23330)
!23334 = !DILocation(line: 39, column: 16, scope: !23335)
!23335 = distinct !DILexicalBlock(scope: !23330, file: !23314, line: 39, column: 11)
!23336 = !DILocation(line: 39, column: 13, scope: !23335)
!23337 = !DILocation(line: 39, column: 19, scope: !23335)
!23338 = !DILocation(line: 39, column: 22, scope: !23335)
!23339 = !DILocation(line: 39, column: 25, scope: !23335)
!23340 = !DILocation(line: 39, column: 11, scope: !23330)
!23341 = !DILocalVariable(name: "f", scope: !23342, file: !23314, line: 41, type: !5)
!23342 = distinct !DILexicalBlock(scope: !23335, file: !23314, line: 40, column: 9)
!23343 = !DILocation(line: 41, column: 15, scope: !23342)
!23344 = !DILocation(line: 41, column: 30, scope: !23342)
!23345 = !DILocation(line: 41, column: 19, scope: !23342)
!23346 = !DILocation(line: 43, column: 15, scope: !23347)
!23347 = distinct !DILexicalBlock(scope: !23342, file: !23314, line: 43, column: 15)
!23348 = !DILocation(line: 43, column: 17, scope: !23347)
!23349 = !DILocation(line: 43, column: 15, scope: !23342)
!23350 = !DILocalVariable(name: "e", scope: !23351, file: !23314, line: 45, type: !5)
!23351 = distinct !DILexicalBlock(scope: !23347, file: !23314, line: 44, column: 13)
!23352 = !DILocation(line: 45, column: 19, scope: !23351)
!23353 = !DILocation(line: 45, column: 23, scope: !23351)
!23354 = !DILocation(line: 46, column: 23, scope: !23351)
!23355 = !DILocation(line: 46, column: 15, scope: !23351)
!23356 = !DILocation(line: 47, column: 23, scope: !23351)
!23357 = !DILocation(line: 47, column: 15, scope: !23351)
!23358 = !DILocation(line: 47, column: 21, scope: !23351)
!23359 = !DILocation(line: 48, column: 15, scope: !23351)
!23360 = !DILocation(line: 51, column: 23, scope: !23361)
!23361 = distinct !DILexicalBlock(scope: !23342, file: !23314, line: 51, column: 15)
!23362 = !DILocation(line: 51, column: 15, scope: !23361)
!23363 = !DILocation(line: 51, column: 27, scope: !23361)
!23364 = !DILocation(line: 52, column: 15, scope: !23361)
!23365 = !DILocation(line: 52, column: 34, scope: !23361)
!23366 = !DILocation(line: 52, column: 37, scope: !23361)
!23367 = !DILocation(line: 52, column: 26, scope: !23361)
!23368 = !DILocation(line: 52, column: 24, scope: !23361)
!23369 = !DILocation(line: 51, column: 15, scope: !23342)
!23370 = !DILocalVariable(name: "e", scope: !23371, file: !23314, line: 54, type: !5)
!23371 = distinct !DILexicalBlock(scope: !23361, file: !23314, line: 53, column: 13)
!23372 = !DILocation(line: 54, column: 19, scope: !23371)
!23373 = !DILocation(line: 54, column: 23, scope: !23371)
!23374 = !DILocation(line: 55, column: 22, scope: !23371)
!23375 = !DILocation(line: 55, column: 15, scope: !23371)
!23376 = !DILocation(line: 56, column: 23, scope: !23371)
!23377 = !DILocation(line: 56, column: 15, scope: !23371)
!23378 = !DILocation(line: 56, column: 21, scope: !23371)
!23379 = !DILocation(line: 57, column: 15, scope: !23371)
!23380 = !DILocation(line: 59, column: 9, scope: !23342)
!23381 = !DILocation(line: 60, column: 5, scope: !23330)
!23382 = !DILocation(line: 62, column: 10, scope: !23313)
!23383 = !DILocation(line: 62, column: 3, scope: !23313)
!23384 = !DILocation(line: 63, column: 1, scope: !23313)
